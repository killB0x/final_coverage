/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 23:25:10 GMT 2022
 */

package net.thisptr.jmx.exporter.agent.javacc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.thisptr.jmx.exporter.agent.javacc.TokenMgrError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_ESTest extends TokenMgrError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("", 8);
      String string0 = tokenMgrError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("ds7x{d'SD[6;sw");
      assertEquals("ds\\u007f7x{d\\'SD[6;sw", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.javacc.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(true, 0, 0, 0, (String) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.javacc.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(true, (-613), (-1012), 0, "Lexical error at line 1666, column 0.  Encountered: \"\u0001\" (1), after : \"\"", (-613), (-1112));
      assertEquals(2, TokenMgrError.INVALID_LEXICAL_STATE);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = TokenMgrError.LexicalErr(false, 3, 3478, 3478, "ds7x{d'SD[6;sw", (-107));
      assertEquals("Lexical error at line 3478, column 3478.  Encountered: \"\\uff95\" (-107), after : \"ds\\u007f7x{d\\'SD[6;sw\"", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = TokenMgrError.LexicalErr(true, 0, (-2475), 3459, "/iKoJf{\"KQCE~/wd8U", 16);
      assertEquals("Lexical error at line -2475, column 3459.  Encountered: <EOF> after : \"/iKoJf{\\\"KQCE~/wd8U\"", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalErr(false, 13, 13, 13, (String) null, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.javacc.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalErr(false, 12, 12, 12, (String) null, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.javacc.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = TokenMgrError.LexicalErr(false, 9, 9, 9, "", 9);
      assertEquals("Lexical error at line 9, column 9.  Encountered: \"\\t\" (9), after : \"\"", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = TokenMgrError.LexicalErr(false, 8, 8, 8, "d+=d8", 8);
      assertEquals("Lexical error at line 8, column 8.  Encountered: \"\\b\" (8), after : \"d+=d8\"", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = TokenMgrError.LexicalErr(false, 10, 10, 10, "2jAk{7^pA1xs$+", 10);
      assertEquals("Lexical error at line 10, column 10.  Encountered: \"\\n\" (10), after : \"2jAk{7^pA1xs$+\"", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError();
      String string0 = tokenMgrError0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(true, (-516), 1593, 900, "", 1593, 900);
      String string0 = tokenMgrError0.getMessage();
      assertEquals("Lexical error at line 1593, column 900.  Encountered: <EOF> after : \"\"", string0);
  }
}
