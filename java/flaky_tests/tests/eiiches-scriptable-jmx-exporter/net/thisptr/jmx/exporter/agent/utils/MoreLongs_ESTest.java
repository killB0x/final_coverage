/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 23:16:52 GMT 2022
 */

package net.thisptr.jmx.exporter.agent.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.thisptr.jmx.exporter.agent.utils.MoreLongs;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MoreLongs_ESTest extends MoreLongs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MoreLongs.writeAsString(10000000000L, byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 10 out of bounds for length 2
         //
         verifyException("net.thisptr.jmx.exporter.agent.utils.MoreLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = MoreLongs.stringSize(99999999999973L);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = MoreLongs.stringSize(1000000000000021L);
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        MoreLongs.writeAsString(9223372036854775806L, byteArray0, (byte)9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 27 out of bounds for length 1
         //
         verifyException("net.thisptr.jmx.exporter.agent.utils.MoreLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreLongs.writeAsString(10000000000000000L, (byte[]) null, (-1673));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.utils.MoreLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = MoreLongs.stringSize(0L);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MoreLongs.writeAsString((-2237L), byteArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 3
         //
         verifyException("net.thisptr.jmx.exporter.agent.utils.MoreLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = MoreLongs.stringSize(2021L);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = MoreLongs.stringSize(1000000000L);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      int int0 = MoreLongs.writeAsString(1079L, byteArray0, 0);
      assertArrayEquals(new byte[] {(byte)49, (byte)48, (byte)55, (byte)57, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = MoreLongs.stringSize(48L);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = MoreLongs.stringSize(447L);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = MoreLongs.stringSize(10000L);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = MoreLongs.stringSize(10000000L);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = MoreLongs.stringSize(1000000L);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = MoreLongs.stringSize(100000L);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = MoreLongs.stringSize(100000007L);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = MoreLongs.stringSize(99999999991L);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = MoreLongs.stringSize(1000000000000L);
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = MoreLongs.stringSize(100000000000L);
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = MoreLongs.stringSize(10000000000000L);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = MoreLongs.stringSize(1000000000000000L);
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = MoreLongs.stringSize(1000000000000000000L);
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = MoreLongs.stringSize(100000000000000000L);
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = MoreLongs.stringSize(100000000000000L);
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = MoreLongs.stringSize(99999999999999989L);
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreLongs.stringSize((-1162L));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MoreLongs.writeAsString(4, byteArray0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 2
         //
         verifyException("net.thisptr.jmx.exporter.agent.utils.MoreLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      int int0 = MoreLongs.writeAsString(0, byteArray0, 0);
      assertEquals(1, int0);
      assertArrayEquals(new byte[] {(byte)48, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      int int0 = MoreLongs.writeAsString((-9223372036854775808L), byteArray0, 4);
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MoreLongs moreLongs0 = new MoreLongs();
  }
}
