/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 23:39:53 GMT 2022
 */

package net.thisptr.jmx.exporter.agent.config.watcher.loaders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import net.thisptr.jmx.exporter.agent.config.watcher.loaders.FileConfigLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileConfigLoader_ESTest extends FileConfigLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileConfigLoader fileConfigLoader0 = new FileConfigLoader((File) null);
      // Undeclared exception!
      try { 
        fileConfigLoader0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.config.watcher.loaders.FileConfigLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileConfigLoader fileConfigLoader0 = new FileConfigLoader(mockFile0);
      String string0 = fileConfigLoader0.toString();
      assertEquals("/home/user", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileConfigLoader fileConfigLoader0 = new FileConfigLoader((File) null);
      // Undeclared exception!
      try { 
        fileConfigLoader0.bytes();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/io/Files
         //
         verifyException("net.thisptr.jmx.exporter.agent.config.watcher.loaders.FileConfigLoader", e);
      }
  }
}
