/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 23:42:22 GMT 2022
 */

package net.thisptr.jmx.exporter.agent.misc;

import org.junit.Test;
import static org.junit.Assert.*;
import net.thisptr.jmx.exporter.agent.misc.MutableInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MutableInteger_ESTest extends MutableInteger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MutableInteger mutableInteger0 = new MutableInteger();
      mutableInteger0.getAndIncrement();
      int int0 = mutableInteger0.get();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MutableInteger mutableInteger0 = new MutableInteger((-2110));
      int int0 = mutableInteger0.decrementAndGet();
      assertEquals((-2111), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MutableInteger mutableInteger0 = new MutableInteger((-2110));
      mutableInteger0.set(0);
      int int0 = mutableInteger0.get();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MutableInteger mutableInteger0 = new MutableInteger();
      mutableInteger0.getAndIncrement();
      mutableInteger0.getAndIncrement();
      int int0 = mutableInteger0.decrementAndGet();
      assertEquals(1, mutableInteger0.get());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MutableInteger mutableInteger0 = new MutableInteger((-2110));
      int int0 = mutableInteger0.getAndIncrement();
      assertEquals((-2109), mutableInteger0.get());
      assertEquals((-2110), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MutableInteger mutableInteger0 = new MutableInteger((-2110));
      int int0 = mutableInteger0.get();
      assertEquals((-2110), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MutableInteger mutableInteger0 = new MutableInteger(1);
      int int0 = mutableInteger0.decrementAndGet();
      assertEquals(0, mutableInteger0.get());
      assertEquals(0, int0);
  }
}
