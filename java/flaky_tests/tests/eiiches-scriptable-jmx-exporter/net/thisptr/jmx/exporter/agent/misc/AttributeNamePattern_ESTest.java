/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 23:14:48 GMT 2022
 */

package net.thisptr.jmx.exporter.agent.misc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.regex.PatternSyntaxException;
import javax.management.ObjectName;
import net.thisptr.jmx.exporter.agent.misc.AttributeNamePattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AttributeNamePattern_ESTest extends AttributeNamePattern_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(hashtable0);
      hashMap0.put("&bQb^SF6gU+;%gtS", "#}");
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("#}", hashMap0, "");
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      boolean boolean0 = attributeNamePattern0.matches("#}", hashMap0, "", hashMap1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(hashtable0);
      hashMap0.put("#", "#}");
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, "<EOF>");
      boolean boolean0 = attributeNamePattern0.matches("#", hashtable0, "<EOF>", hashMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("", hashtable0, "la");
      boolean boolean0 = attributeNamePattern0.matches("", hashMap0, "", hashtable0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, (String) null);
      ObjectName objectName0 = ObjectName.WILDCARD;
      boolean boolean0 = attributeNamePattern0.matches(objectName0, "net.thisptr.jmx.exporter.agent.javacc.Token", (Map<String, String>) hashMap0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("$a3,", hashMap0, (String) null);
      ObjectName objectName0 = ObjectName.getInstance("");
      boolean boolean0 = attributeNamePattern0.matches(objectName0, "$a3,", (Map<String, String>) hashMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, (String) null);
      ObjectName objectName0 = ObjectName.getInstance("nf#", "nQ/!/#P!ti+l", "");
      boolean boolean0 = attributeNamePattern0.matches(objectName0, "b{5k+k>#0M44/");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("Was eexQec`ing/:", hashtable0, (String) null);
      // Undeclared exception!
      try { 
        attributeNamePattern0.nameMatches((String) null, hashtable0, hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("", hashtable0, "");
      // Undeclared exception!
      try { 
        attributeNamePattern0.matches((String) null, hashtable0, (String) null, hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = null;
      try {
        attributeNamePattern0 = new AttributeNamePattern(")yO`", hashtable0, ")yO`");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')'
         // )yO`
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AttributeNamePattern attributeNamePattern0 = null;
      try {
        attributeNamePattern0 = new AttributeNamePattern("net.thisptr.jmx.exporter.agent.misc.AttributeNamePattern", (Map<String, String>) null, "net.thisptr.jmx.exporter.agent.misc.AttributeNamePattern");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.misc.AttributeNamePattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("", hashMap0, "V%V~P^>");
      boolean boolean0 = attributeNamePattern0.nameMatches(" {/$)jmuXRL[FQ0._W", hashMap0, hashMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, "");
      boolean boolean0 = attributeNamePattern0.matches("_:;^D*", hashMap0, (String) null, hashMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("~c=`pn`,S&JtH", hashtable0, "~c=`pn`,S&JtH");
      // Undeclared exception!
      try { 
        attributeNamePattern0.matches((ObjectName) null, "~c=`pn`,S&JtH", (Map<String, String>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.misc.FastObjectName", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("E_\"C>jHB5", "E_\"C>jHB5", "E_\"C>jHB5");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"C>jHB5", hashtable0, "E_\"C>jHB5");
      hashtable0.put("", "E_\"C>jHB5");
      AttributeNamePattern attributeNamePattern1 = new AttributeNamePattern("E_\"C>jHB5", hashtable0, "E_\"C>jHB5");
      boolean boolean0 = attributeNamePattern1.equals(attributeNamePattern0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("E_\"CsjHB5", "E_\"CsjHB5", "");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable0, "");
      AttributeNamePattern attributeNamePattern1 = new AttributeNamePattern("", hashtable0, "");
      boolean boolean0 = attributeNamePattern1.equals(attributeNamePattern0);
      assertFalse(boolean0);
      assertFalse(attributeNamePattern0.equals((Object)attributeNamePattern1));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHBb 5", hashtable0, "E_\"CsjHBb 5");
      AttributeNamePattern attributeNamePattern1 = new AttributeNamePattern((String) null, hashtable0, "E_\"CsjHBb 5");
      boolean boolean0 = attributeNamePattern1.equals(attributeNamePattern0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("Zh wp6", "E_\"CsjHB5", "]IBYtP");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable0, "nYa");
      AttributeNamePattern attributeNamePattern1 = new AttributeNamePattern((String) null, hashtable0, ":");
      boolean boolean0 = attributeNamePattern1.equals(attributeNamePattern0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashtable0, (String) null);
      AttributeNamePattern attributeNamePattern1 = new AttributeNamePattern((String) null, hashtable0, (String) null);
      boolean boolean0 = attributeNamePattern0.equals(attributeNamePattern1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("E_\"CsjHB5", "E_\"CsjHB5", "");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable0, "nYa");
      AttributeNamePattern attributeNamePattern1 = new AttributeNamePattern((String) null, hashtable0, (String) null);
      boolean boolean0 = attributeNamePattern1.equals(attributeNamePattern0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, (String) null);
      boolean boolean0 = attributeNamePattern0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable0, "E_\"CsjHB5");
      boolean boolean0 = attributeNamePattern0.equals(attributeNamePattern0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("Zh wp6", "E_\"CsjHB5", "]IBYtP");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable0, "nYa");
      boolean boolean0 = attributeNamePattern0.equals(objectName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, (String) null);
      attributeNamePattern0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("Zh wp6", "E_\"CsjHB5", "]IBYtP");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable0, "nYa");
      attributeNamePattern0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("Zh wp6", "E_\"CsjHB5", "]IBYtP");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      hashtable0.put("Zh wp6", "]IBYtP");
      ObjectName objectName1 = ObjectName.getInstance("Zh wp6", hashtable0);
      Hashtable<String, String> hashtable1 = objectName1.getKeyPropertyList();
      hashtable0.put("Zh wp6", "E_\"CsjHB5");
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable1, "nYa");
      boolean boolean0 = attributeNamePattern0.nameMatches("E_\"CsjHB5", hashtable0, hashtable0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("Zh wp6", "E_\"CsjHB5", "]IBYtP");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, "E_\"CsjHB5");
      boolean boolean0 = attributeNamePattern0.nameMatches("net.thisptr.jmx.exporter.agent.misc.AttributeNamePattern", hashtable0, hashtable0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectName objectName0 = new ObjectName("Zh wp6", "E_\"CsjHB5", "]IBYtP");
      Hashtable<String, String> hashtable0 = objectName0.getKeyPropertyList();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHB5", hashtable0, "nYa");
      boolean boolean0 = attributeNamePattern0.nameMatches("E_\"CsjHB5", hashtable0, hashtable0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, "line.separator");
      ObjectName objectName0 = ObjectName.WILDCARD;
      boolean boolean0 = attributeNamePattern0.matches(objectName0, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern((String) null, hashMap0, (String) null);
      boolean boolean0 = attributeNamePattern0.matches((String) null, hashMap0, (String) null, hashMap0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeNamePattern.compile("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.thisptr.jmx.exporter.agent.javacc.AttributeNamePatternParser
         //
         verifyException("net.thisptr.jmx.exporter.agent.misc.AttributeNamePattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      AttributeNamePattern attributeNamePattern0 = new AttributeNamePattern("E_\"CsjHBb 5", hashtable0, "E_\"CsjHBb 5");
      // Undeclared exception!
      try { 
        attributeNamePattern0.matches((ObjectName) null, "E_\"CsjHBb 5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.thisptr.jmx.exporter.agent.misc.FastObjectName", e);
      }
  }
}
