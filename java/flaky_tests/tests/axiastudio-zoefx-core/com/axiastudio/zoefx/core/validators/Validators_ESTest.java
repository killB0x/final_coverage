/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 11:20:04 GMT 2022
 */

package com.axiastudio.zoefx.core.validators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axiastudio.zoefx.core.validators.StringValidator;
import com.axiastudio.zoefx.core.validators.Validator;
import com.axiastudio.zoefx.core.validators.Validators;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Validators_ESTest extends Validators_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<StringValidator> class0 = StringValidator.class;
      Validator validator0 = Validators.getValidator(class0, "");
      assertNull(validator0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Validators.getValidator((Class) null, ">i[{Eh8'N{D]&wpFF-C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axiastudio.zoefx.core.validators.Validators", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Validators.bindValidator((Class) null, (String) null, (Validator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axiastudio.zoefx.core.validators.Validators", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Validator<StringValidator> validator0 = (Validator<StringValidator>) mock(Validator.class, new ViolatedAssumptionAnswer());
      Validators.bindValidator(class0, "bsot]U,<D", validator0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<StringValidator> class0 = StringValidator.class;
      Validator validator0 = Validators.getValidator(class0, "^[8{y\"B[fWenhbLYHaG");
      assertNull(validator0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Validators validators0 = new Validators();
  }
}
