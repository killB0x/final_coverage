/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 11:22:35 GMT 2022
 */

package com.axiastudio.zoefx.core.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axiastudio.zoefx.core.beans.EntityBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EntityBuilder_ESTest extends EntityBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      EntityBuilder<Object> entityBuilder0 = EntityBuilder.create((Class<?>) class0);
      EntityBuilder<Object> entityBuilder1 = entityBuilder0.set("o?", "o?");
      // Undeclared exception!
      try { 
        entityBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axiastudio.zoefx.core.beans.BeanAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EntityBuilder<String> entityBuilder0 = new EntityBuilder<String>();
      // Undeclared exception!
      try { 
        entityBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axiastudio.zoefx.core.beans.EntityBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<String> class0 = String.class;
      EntityBuilder<Object> entityBuilder0 = EntityBuilder.create((Class<?>) class0);
      Object object0 = entityBuilder0.build();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<String> class0 = String.class;
      EntityBuilder<String> entityBuilder0 = EntityBuilder.create((Class<? extends String>) class0);
      entityBuilder0.set("", "");
      // Undeclared exception!
      try { 
        entityBuilder0.build();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
