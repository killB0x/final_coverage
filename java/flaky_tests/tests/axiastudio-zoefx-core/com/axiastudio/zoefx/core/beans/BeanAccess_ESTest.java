/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 11:17:33 GMT 2022
 */

package com.axiastudio.zoefx.core.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axiastudio.zoefx.core.beans.AccessType;
import com.axiastudio.zoefx.core.beans.BeanAccess;
import java.lang.annotation.Annotation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanAccess_ESTest extends BeanAccess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      BeanAccess<Object> beanAccess0 = new BeanAccess<Object>(object0, "@k`boz)");
      BeanAccess<Integer> beanAccess1 = new BeanAccess<Integer>(beanAccess0, "@k`boz)");
      BeanAccess beanAccess2 = (BeanAccess)beanAccess1.getBean();
      assertEquals("@k`boz)", beanAccess2.getName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BeanAccess<Annotation> beanAccess0 = new BeanAccess<Annotation>("TvMie;apL2tH9nqx0$d", "TvMie;apL2tH9nqx0$d");
      BeanAccess<Annotation> beanAccess1 = null;
      try {
        beanAccess1 = new BeanAccess<Annotation>(beanAccess0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AccessType accessType0 = AccessType.METHOD;
      BeanAccess<Object> beanAccess0 = new BeanAccess<Object>(accessType0, "FIELD");
      Object object0 = beanAccess0.getValue();
      BeanAccess<Annotation> beanAccess1 = null;
      try {
        beanAccess1 = new BeanAccess<Annotation>(object0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axiastudio.zoefx.core.beans.BeanClassAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AccessType accessType0 = AccessType.METHOD;
      BeanAccess<Object> beanAccess0 = new BeanAccess<Object>(accessType0, "FIELD");
      beanAccess0.setValue(accessType0);
      assertEquals("FIELD", beanAccess0.getName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BeanAccess<Annotation> beanAccess0 = new BeanAccess<Annotation>("@k<bodz)", "@k<bodz)");
      AccessType accessType0 = AccessType.METHOD;
      beanAccess0.accessType = accessType0;
      // Undeclared exception!
      try { 
        beanAccess0.setValue("@k<bodz)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axiastudio.zoefx.core.beans.BeanAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer((-3733));
      BeanAccess<Annotation> beanAccess0 = new BeanAccess<Annotation>(integer0, "ZoS(.cJ");
      AccessType accessType0 = AccessType.METHOD;
      beanAccess0.accessType = accessType0;
      // Undeclared exception!
      try { 
        beanAccess0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axiastudio.zoefx.core.beans.BeanAccess", e);
      }
  }
}
