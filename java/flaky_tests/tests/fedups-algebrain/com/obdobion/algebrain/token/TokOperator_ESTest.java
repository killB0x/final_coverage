/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:06:46 GMT 2022
 */

package com.obdobion.algebrain.token;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.EquPart;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.token.TokOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokOperator_ESTest extends TokOperator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      tokOperator0.setLevel(738);
      EquPart equPart0 = tokOperator0.morph();
      assertSame(equPart0, tokOperator0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      tokOperator0.setLevel((-1888));
      EquPart equPart0 = tokOperator0.morph();
      assertSame(tokOperator0, equPart0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      tokOperator0.setValue((StringBuffer) null);
      // Undeclared exception!
      try { 
        tokOperator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      tokOperator0.value = null;
      ValueStack valueStack0 = new ValueStack();
      try { 
        tokOperator0.resolve(valueStack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.TokOperator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      tokOperator0.setValue((StringBuffer) null);
      try { 
        tokOperator0.morph();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Equ", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      EquPart equPart0 = tokOperator0.morph();
      assertSame(tokOperator0, equPart0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      tokOperator0.put('<');
      EquPart equPart0 = tokOperator0.morph();
      assertEquals("op(compare less)", equPart0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      boolean boolean0 = tokOperator0.accepts('~');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      boolean boolean0 = tokOperator0.accepts('|');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      boolean boolean0 = tokOperator0.accepts('=');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      boolean boolean0 = tokOperator0.accepts('(');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      boolean boolean0 = tokOperator0.accepts('&');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      String string0 = tokOperator0.toString();
      assertEquals("nonop()", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokOperator tokOperator0 = new TokOperator();
      ValueStack valueStack0 = new ValueStack();
      try { 
        tokOperator0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown token encountered in equation: 
         //
         verifyException("com.obdobion.algebrain.token.TokOperator", e);
      }
  }
}
