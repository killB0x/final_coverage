/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:50:52 GMT 2022
 */

package com.obdobion.algebrain.token;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.token.TokLiteral;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokLiteral_ESTest extends TokLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('|');
      tokLiteral0.put('Y');
      assertEquals(0, tokLiteral0.getDelims());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('<');
      tokLiteral0.setDelims(3);
      boolean boolean0 = tokLiteral0.accepts('*');
      assertEquals(3, tokLiteral0.getDelims());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('<');
      tokLiteral0.setDelims(3);
      int int0 = tokLiteral0.getDelims();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('<');
      tokLiteral0.setDelims((-1));
      int int0 = tokLiteral0.getDelims();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('Y');
      tokLiteral0.setValue((StringBuffer) null);
      // Undeclared exception!
      try { 
        tokLiteral0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('R');
      try { 
        tokLiteral0.resolve((ValueStack) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.TokLiteral", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('b');
      tokLiteral0.setValue((StringBuffer) null);
      // Undeclared exception!
      try { 
        tokLiteral0.put('v');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('Y');
      tokLiteral0.put('Y');
      assertEquals(1, tokLiteral0.getDelims());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('<');
      boolean boolean0 = tokLiteral0.accepts('v');
      assertTrue(boolean0);
      assertEquals(0, tokLiteral0.getDelims());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('+');
      tokLiteral0.setDelims(2);
      boolean boolean0 = tokLiteral0.accepts('+');
      assertEquals(2, tokLiteral0.getDelims());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('I');
      ValueStack valueStack0 = new ValueStack();
      tokLiteral0.resolve(valueStack0);
      assertEquals(0, tokLiteral0.getDelims());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('K');
      int int0 = tokLiteral0.getDelims();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokLiteral tokLiteral0 = new TokLiteral('K');
      String string0 = tokLiteral0.toString();
      assertEquals("lit()", string0);
      assertEquals(0, tokLiteral0.getDelims());
  }
}
