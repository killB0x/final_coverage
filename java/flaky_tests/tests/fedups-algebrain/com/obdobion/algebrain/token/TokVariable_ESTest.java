/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:01:26 GMT 2022
 */

package com.obdobion.algebrain.token;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.token.TokVariable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokVariable_ESTest extends TokVariable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      boolean boolean0 = tokVariable0.accepts('*');
      assertFalse(boolean0);
      assertFalse(tokVariable0.isResetable());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      boolean boolean0 = tokVariable0.accepts('{');
      assertFalse(tokVariable0.isResetable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      tokVariable0.setLevel(34);
      TokVariable tokVariable1 = (TokVariable)tokVariable0.morph();
      assertNotNull(tokVariable1);
      assertFalse(tokVariable1.isResetable());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      tokVariable0.setLevel((-773));
      TokVariable tokVariable1 = (TokVariable)tokVariable0.morph();
      assertFalse(tokVariable1.isResetable());
      assertNotNull(tokVariable1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      tokVariable0.assignedByEquation = true;
      boolean boolean0 = tokVariable0.isResetable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      StringBuffer stringBuffer0 = new StringBuffer();
      tokVariable0.value = stringBuffer0;
      stringBuffer0.append(34);
      tokVariable0.getName();
      assertFalse(tokVariable0.isResetable());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      tokVariable0.setValue((StringBuffer) null);
      // Undeclared exception!
      try { 
        tokVariable0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      ValueStack valueStack0 = new ValueStack();
      try { 
        tokVariable0.resolve(valueStack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.TokVariable", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      tokVariable0.value = null;
      try { 
        tokVariable0.morph();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Equ", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      tokVariable0.setValue((StringBuffer) null);
      // Undeclared exception!
      try { 
        tokVariable0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.token.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      TokVariable tokVariable1 = (TokVariable)tokVariable0.morph();
      assertFalse(tokVariable1.isResetable());
      assertNotNull(tokVariable1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      StringBuffer stringBuffer0 = new StringBuffer("tieredrate");
      tokVariable0.value = stringBuffer0;
      tokVariable0.morph();
      assertFalse(tokVariable0.isResetable());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      boolean boolean0 = tokVariable0.accepts('.');
      assertTrue(boolean0);
      assertFalse(tokVariable0.isResetable());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      boolean boolean0 = tokVariable0.accepts('_');
      assertFalse(tokVariable0.isResetable());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      boolean boolean0 = tokVariable0.accepts('3');
      assertFalse(tokVariable0.isResetable());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      boolean boolean0 = tokVariable0.accepts('r');
      assertFalse(tokVariable0.isResetable());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      String string0 = tokVariable0.toString();
      assertFalse(tokVariable0.isResetable());
      assertEquals("var()", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      boolean boolean0 = tokVariable0.isResetable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      tokVariable0.getName();
      assertFalse(tokVariable0.isResetable());
  }
}
