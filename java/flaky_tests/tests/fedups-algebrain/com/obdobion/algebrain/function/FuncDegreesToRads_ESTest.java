/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 08:09:05 GMT 2022
 */

package com.obdobion.algebrain.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncDegreesToRads;
import com.obdobion.algebrain.token.TokVariable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FuncDegreesToRads_ESTest extends FuncDegreesToRads_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FuncDegreesToRads funcDegreesToRads0 = new FuncDegreesToRads();
      ValueStack valueStack0 = new ValueStack();
      Object object0 = new Object();
      valueStack0.add(object0);
      try { 
        funcDegreesToRads0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // function(rad); invalid type Object
         //
         verifyException("com.obdobion.algebrain.function.FuncDegreesToRads", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FuncDegreesToRads funcDegreesToRads0 = new FuncDegreesToRads();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) "function(rad)");
      try { 
        funcDegreesToRads0.resolve(valueStack0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FuncDegreesToRads funcDegreesToRads0 = new FuncDegreesToRads();
      try { 
        funcDegreesToRads0.resolve((ValueStack) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.function.FuncDegreesToRads", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      FuncDegreesToRads funcDegreesToRads0 = new FuncDegreesToRads(tokVariable0);
      assertEquals(0, funcDegreesToRads0.getParameterCount());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      FuncDegreesToRads funcDegreesToRads0 = new FuncDegreesToRads();
      try { 
        funcDegreesToRads0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operands for function(rad)
         //
         verifyException("com.obdobion.algebrain.function.FuncDegreesToRads", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FuncDegreesToRads funcDegreesToRads0 = new FuncDegreesToRads();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(2412);
      valueStack0.add((Object) integer0);
      funcDegreesToRads0.resolve(valueStack0);
      assertEquals("[42.09734155810323]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FuncDegreesToRads funcDegreesToRads0 = null;
      try {
        funcDegreesToRads0 = new FuncDegreesToRads((TokVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Function", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FuncDegreesToRads funcDegreesToRads0 = new FuncDegreesToRads();
      String string0 = funcDegreesToRads0.toString();
      assertEquals("function(rad)", string0);
  }
}
