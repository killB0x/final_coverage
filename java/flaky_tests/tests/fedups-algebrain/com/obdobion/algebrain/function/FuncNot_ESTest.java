/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:53:00 GMT 2022
 */

package com.obdobion.algebrain.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncNot;
import com.obdobion.algebrain.token.TokVariable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FuncNot_ESTest extends FuncNot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FuncNot funcNot0 = new FuncNot();
      try { 
        funcNot0.resolve((ValueStack) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.function.FuncNot", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      FuncNot funcNot0 = new FuncNot(tokVariable0);
      assertEquals(0, funcNot0.getParameterCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FuncNot funcNot0 = new FuncNot();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) "function(not)");
      funcNot0.resolve(valueStack0);
      assertEquals("[true]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FuncNot funcNot0 = new FuncNot();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(46);
      valueStack0.add((Object) integer0);
      funcNot0.resolve(valueStack0);
      assertEquals("[false]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FuncNot funcNot0 = new FuncNot();
      ValueStack valueStack0 = new ValueStack();
      try { 
        funcNot0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operand for function(not)
         //
         verifyException("com.obdobion.algebrain.function.FuncNot", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FuncNot funcNot0 = new FuncNot();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) funcNot0);
      try { 
        funcNot0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // function(not); invalid type FuncNot
         //
         verifyException("com.obdobion.algebrain.function.FuncNot", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FuncNot funcNot0 = null;
      try {
        funcNot0 = new FuncNot((TokVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Function", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FuncNot funcNot0 = new FuncNot();
      String string0 = funcNot0.toString();
      assertEquals("function(not)", string0);
  }
}
