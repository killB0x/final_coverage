/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:46:33 GMT 2022
 */

package com.obdobion.algebrain.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncIf;
import com.obdobion.algebrain.function.FuncMax;
import com.obdobion.algebrain.token.TokVariable;
import java.text.ParseException;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FuncIf_ESTest extends FuncIf_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TokVariable tokVariable0 = new TokVariable();
      FuncMax funcMax0 = new FuncMax(tokVariable0);
      valueStack0.add((Object) "var()");
      linkedList0.add((Object) funcMax0);
      valueStack0.addAll((Collection<?>) linkedList0);
      valueStack0.addElement("var()");
      FuncIf funcIf0 = new FuncIf();
      funcIf0.resolve(valueStack0);
      assertEquals("[var()]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FuncIf funcIf0 = new FuncIf();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) funcIf0);
      Integer integer0 = new Integer(5);
      valueStack0.add((Object) integer0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TokVariable tokVariable0 = new TokVariable();
      FuncMax funcMax0 = new FuncMax(tokVariable0);
      linkedList0.add((Object) funcMax0);
      valueStack0.addAll((Collection<?>) linkedList0);
      valueStack0.addElement("var()");
      funcIf0.resolve(valueStack0);
      assertEquals("[function(if), function(max-0)]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FuncIf funcIf0 = new FuncIf();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) funcIf0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = new Object();
      linkedList0.add(object0);
      valueStack0.addAll((Collection<?>) linkedList0);
      valueStack0.addElement(funcIf0);
      try { 
        funcIf0.resolve(valueStack0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type FuncIf
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TokVariable tokVariable0 = new TokVariable();
      FuncIf funcIf0 = new FuncIf(tokVariable0);
      String string0 = funcIf0.toString();
      assertEquals("function(if)", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      FuncIf funcIf0 = new FuncIf();
      try { 
        funcIf0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operands for function(if)
         //
         verifyException("com.obdobion.algebrain.function.FuncIf", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FuncIf funcIf0 = new FuncIf();
      try { 
        funcIf0.resolve((ValueStack) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.function.FuncIf", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FuncIf funcIf0 = null;
      try {
        funcIf0 = new FuncIf((TokVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Function", e);
      }
  }
}
