/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 06:45:11 GMT 2022
 */

package com.obdobion.algebrain.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.support.DefaultEquationSupport;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultEquationSupport_ESTest extends DefaultEquationSupport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultEquationSupport.Variable defaultEquationSupport_Variable0 = new DefaultEquationSupport.Variable("C)l#WV0O", (Object) null, true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.setVariables((Hashtable<String, DefaultEquationSupport.Variable>) null);
      defaultEquationSupport0.initializeWellKnownVariables();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      Hashtable<String, DefaultEquationSupport.Variable> hashtable0 = new Hashtable<String, DefaultEquationSupport.Variable>();
      defaultEquationSupport0.setVariables(hashtable0);
      List<String> list0 = defaultEquationSupport0.getVariableNames();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockDate mockDate0 = new MockDate();
      try { 
        defaultEquationSupport0.resolveVariable((String) null, (Date) mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      try { 
        defaultEquationSupport0.resolveVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      // Undeclared exception!
      try { 
        defaultEquationSupport0.removeVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.setVariables((Hashtable<String, DefaultEquationSupport.Variable>) null);
      // Undeclared exception!
      try { 
        defaultEquationSupport0.getVariableNames(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.setVariables((Hashtable<String, DefaultEquationSupport.Variable>) null);
      // Undeclared exception!
      try { 
        defaultEquationSupport0.getVariableNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      try { 
        defaultEquationSupport0.assignVariable((String) null, (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        defaultEquationSupport0.assignVariable("AX", (Object) mockDate0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/obdobion/calendar/CalendarFactory
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      List<String> list0 = defaultEquationSupport0.getVariableNames(true);
      assertEquals(6, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.assignVariable("", (Object) "", false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.setVariables((Hashtable<String, DefaultEquationSupport.Variable>) null);
      // Undeclared exception!
      try { 
        defaultEquationSupport0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockDate mockDate0 = new MockDate();
      Object object0 = defaultEquationSupport0.resolveVariable("", (Date) mockDate0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockDate mockDate0 = new MockDate();
      Object object0 = defaultEquationSupport0.resolveVariable("now", (Date) mockDate0);
      assertNotNull(object0);
      assertEquals("now", object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      Object object0 = defaultEquationSupport0.resolveVariable("");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      Object object0 = defaultEquationSupport0.resolveVariable("now");
      assertNotNull(object0);
      assertEquals("now", object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.assignVariable("", (Object) null);
      List<String> list0 = defaultEquationSupport0.getVariableNames(false);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      List<String> list0 = defaultEquationSupport0.getVariableNames(false);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.assignVariable("", (Object) "");
      defaultEquationSupport0.clear();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1, 0, 0, 0, 0);
      // Undeclared exception!
      try { 
        defaultEquationSupport0.assignVariable("-uJd1QS9t/", (Object) mockGregorianCalendar0, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/obdobion/calendar/CalendarFactory
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockDate mockDate0 = new MockDate((-1250), (-1250), 1, 1154, (-130));
      // Undeclared exception!
      try { 
        defaultEquationSupport0.assignVariable("x:T", (Object) mockDate0, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/obdobion/calendar/CalendarFactory
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      DefaultEquationSupport.Variable defaultEquationSupport_Variable0 = new DefaultEquationSupport.Variable("", defaultEquationSupport0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockDate mockDate0 = new MockDate((-1250), (-1250), 1, 1154, (-130));
      double double0 = defaultEquationSupport0.resolveRate("", (Date) mockDate0, "", "", "", (String) null, (String) null);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      List<String> list0 = defaultEquationSupport0.getVariableNames();
      assertEquals(6, list0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      try { 
        defaultEquationSupport0.assignVariable((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.support.DefaultEquationSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      MockDate mockDate0 = new MockDate();
      Hashtable<Double, Double> hashtable0 = defaultEquationSupport0.resolveRate("]<L&7g_=sHDa-P", (Date) mockDate0, 3.141592653589793);
      assertFalse(hashtable0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultEquationSupport defaultEquationSupport0 = new DefaultEquationSupport();
      defaultEquationSupport0.removeVariable("");
  }
}
