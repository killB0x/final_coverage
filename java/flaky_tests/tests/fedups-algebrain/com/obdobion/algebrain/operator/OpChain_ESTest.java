/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 08:23:38 GMT 2022
 */

package com.obdobion.algebrain.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.EquPart;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncStringToInt;
import com.obdobion.algebrain.function.FuncTan;
import com.obdobion.algebrain.operator.OpChain;
import com.obdobion.algebrain.token.TokVariable;
import java.text.ParseException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpChain_ESTest extends OpChain_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) opChain0);
      valueStack0.add((Object) opChain0);
      opChain0.resolve(valueStack0);
      assertFalse(valueStack0.empty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      try { 
        opChain0.resolve((ValueStack) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.operator.OpChain", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OpChain opChain0 = null;
      try {
        opChain0 = new OpChain((EquPart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      ValueStack valueStack0 = new ValueStack();
      try { 
        opChain0.resolve(valueStack0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // missing operand
         //
         verifyException("com.obdobion.algebrain.operator.OpChain", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(992);
      opChain0.resolve(valueStack0);
      assertFalse(valueStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      String string0 = opChain0.toString();
      assertEquals("op(chain)", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      boolean boolean0 = opChain0.includeInRpn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      int int0 = opChain0.precedence();
      assertEquals(999, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FuncTan funcTan0 = new FuncTan();
      OpChain opChain0 = new OpChain(funcTan0);
      assertEquals(0, opChain0.getLevel());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      OpChain opChain0 = new OpChain();
      TokVariable tokVariable0 = new TokVariable();
      FuncStringToInt funcStringToInt0 = new FuncStringToInt(tokVariable0);
      boolean boolean0 = opChain0.negatize(funcStringToInt0);
      assertTrue(boolean0);
  }
}
