/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:57:18 GMT 2022
 */

package com.obdobion.algebrain.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.EquPart;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncStringMetaphone;
import com.obdobion.algebrain.operator.OpPower;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpPower_ESTest extends OpPower_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(999);
      OpPower opPower0 = new OpPower();
      try { 
        opPower0.resolve(valueStack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OpPower opPower0 = new OpPower();
      ValueStack valueStack0 = new ValueStack();
      Long long0 = Long.getLong("I;TL(|", 0L);
      valueStack0.add((Object) long0);
      Object object0 = new Object();
      valueStack0.add(object0);
      try { 
        opPower0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // op(power); invalid type Object
         //
         verifyException("com.obdobion.algebrain.operator.OpPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = Long.getLong("VWiMJ^!iL6!%GHG!", 0L);
      valueStack0.add((Object) long0);
      valueStack0.add((Object) "VWiMJ^!iL6!%GHG!");
      OpPower opPower0 = new OpPower();
      try { 
        opPower0.resolve(valueStack0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"VWiMJ^!iL6!%GHG!\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OpPower opPower0 = new OpPower();
      String string0 = opPower0.toString();
      assertEquals("op(power)", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FuncStringMetaphone funcStringMetaphone0 = new FuncStringMetaphone();
      OpPower opPower0 = new OpPower(funcStringMetaphone0);
      assertEquals(0, opPower0.getLevel());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(0L);
      valueStack0.add((Object) long0);
      valueStack0.add((Object) long0);
      OpPower opPower0 = new OpPower();
      opPower0.resolve(valueStack0);
      assertEquals("[1]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Object object0 = new Object();
      valueStack0.add(object0);
      valueStack0.add(object0);
      OpPower opPower0 = new OpPower();
      try { 
        opPower0.resolve(valueStack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Double (java.lang.Object and java.lang.Double are in module java.base of loader 'bootstrap')
         //
         verifyException("com.obdobion.algebrain.operator.OpPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OpPower opPower0 = new OpPower();
      ValueStack valueStack0 = new ValueStack();
      try { 
        opPower0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operands for op(power)
         //
         verifyException("com.obdobion.algebrain.operator.OpPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OpPower opPower0 = null;
      try {
        opPower0 = new OpPower((EquPart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operator", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      OpPower opPower0 = new OpPower();
      int int0 = opPower0.precedence();
      assertEquals(3, int0);
  }
}
