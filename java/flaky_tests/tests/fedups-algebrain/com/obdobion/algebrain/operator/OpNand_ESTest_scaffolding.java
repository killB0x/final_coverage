/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Oct 29 07:27:50 GMT 2022
 */

package com.obdobion.algebrain.operator;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class OpNand_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.obdobion.algebrain.operator.OpNand"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(OpNand_ESTest_scaffolding.class.getClassLoader() ,
      "com.obdobion.algebrain.Operation",
      "com.obdobion.algebrain.operator.OpNand",
      "com.obdobion.algebrain.EquPart",
      "com.obdobion.algebrain.Equ",
      "com.obdobion.algebrain.Operator",
      "com.obdobion.algebrain.ValueStack",
      "com.obdobion.algebrain.operator.OpSubtract"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(OpNand_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.obdobion.algebrain.EquPart",
      "com.obdobion.algebrain.Operation",
      "com.obdobion.algebrain.Operator",
      "com.obdobion.algebrain.operator.OpNand",
      "com.obdobion.algebrain.token.Token",
      "com.obdobion.algebrain.token.TokOperand",
      "com.obdobion.algebrain.token.TokVariable",
      "com.obdobion.algebrain.Function",
      "com.obdobion.algebrain.function.FuncAlpha",
      "com.obdobion.algebrain.function.FuncSin",
      "com.obdobion.algebrain.Equ",
      "com.obdobion.algebrain.ValueStack",
      "com.obdobion.algebrain.function.FuncStringMetaphone",
      "com.obdobion.algebrain.function.FuncStringRTrim",
      "com.obdobion.algebrain.function.FuncStringCat",
      "com.obdobion.algebrain.operator.OpCompareEqual",
      "com.obdobion.algebrain.operator.OpCompareNotEqual",
      "com.obdobion.algebrain.function.FuncStringEmpty",
      "com.obdobion.algebrain.operator.OpCompareLess",
      "com.obdobion.algebrain.operator.OpCompareNotLess",
      "com.obdobion.algebrain.function.FuncBandedRate",
      "com.obdobion.algebrain.function.FuncStringMatch",
      "com.obdobion.algebrain.function.FuncMin",
      "com.obdobion.algebrain.operator.OpChain",
      "com.obdobion.algebrain.function.FuncTimeFmt",
      "com.obdobion.algebrain.function.FuncLog",
      "com.obdobion.algebrain.operator.OpMultiply",
      "com.obdobion.algebrain.function.FuncNot",
      "com.obdobion.algebrain.function.FuncDegreesToRads",
      "com.obdobion.algebrain.function.FuncStringIndexOf",
      "com.obdobion.algebrain.function.FuncTieredRate",
      "com.obdobion.algebrain.function.FuncStringSubstr",
      "com.obdobion.algebrain.function.FuncBytesToHex",
      "com.obdobion.algebrain.function.FuncRadsToDegrees",
      "com.obdobion.algebrain.function.FuncDate",
      "com.obdobion.algebrain.function.FuncStringToFloat",
      "com.obdobion.algebrain.operator.OpAnd",
      "com.obdobion.algebrain.operator.OpLeftParen",
      "com.obdobion.algebrain.function.FuncAtan",
      "com.obdobion.algebrain.operator.OpNor",
      "com.obdobion.algebrain.token.TokOperator",
      "com.obdobion.algebrain.function.FuncStringToInt",
      "com.obdobion.algebrain.token.TokNumber",
      "com.obdobion.algebrain.function.FuncRound",
      "com.obdobion.algebrain.operator.OpAssignment",
      "com.obdobion.algebrain.operator.OpOr",
      "com.obdobion.algebrain.function.FuncAsin",
      "com.obdobion.algebrain.function.FuncTime",
      "com.obdobion.algebrain.function.FuncIf",
      "com.obdobion.algebrain.operator.OpCompareGreater",
      "com.obdobion.algebrain.operator.OpCompareNotGreater",
      "com.obdobion.algebrain.function.FuncStringUpCase",
      "com.obdobion.algebrain.function.FuncDateTime",
      "com.obdobion.algebrain.function.FuncFlatRate",
      "com.obdobion.algebrain.operator.OpPower",
      "com.obdobion.algebrain.function.FuncCubeRoot",
      "com.obdobion.algebrain.operator.OpSubtract",
      "com.obdobion.algebrain.function.FuncRoot",
      "com.obdobion.algebrain.operator.OpFactorial",
      "com.obdobion.algebrain.operator.OpRightParen",
      "com.obdobion.algebrain.function.FuncLog10",
      "com.obdobion.algebrain.function.FuncSqrt",
      "com.obdobion.algebrain.operator.OpXnor",
      "com.obdobion.algebrain.operator.OpNegate",
      "com.obdobion.algebrain.function.FuncStringLTrim",
      "com.obdobion.algebrain.function.FuncMax",
      "com.obdobion.algebrain.operator.OpMod",
      "com.obdobion.algebrain.function.FuncStringLowerCase",
      "com.obdobion.algebrain.function.FuncStringReplace",
      "com.obdobion.algebrain.function.FuncToString",
      "com.obdobion.algebrain.token.TokLiteral",
      "com.obdobion.algebrain.function.FuncCos",
      "com.obdobion.algebrain.function.FuncDateTimeFmt",
      "com.obdobion.algebrain.function.FuncAcotan",
      "com.obdobion.algebrain.operator.OpXor",
      "com.obdobion.algebrain.operator.OpComma",
      "com.obdobion.algebrain.function.FuncTan",
      "com.obdobion.algebrain.function.FuncAcos",
      "com.obdobion.algebrain.function.FuncStringTrim",
      "com.obdobion.algebrain.function.FuncAbs",
      "com.obdobion.algebrain.function.FuncStringLength",
      "com.obdobion.algebrain.function.FuncDateFmt",
      "com.obdobion.algebrain.operator.OpDivide",
      "com.obdobion.algebrain.function.FuncTrunc",
      "com.obdobion.algebrain.operator.OpAdd"
    );
  }
}
