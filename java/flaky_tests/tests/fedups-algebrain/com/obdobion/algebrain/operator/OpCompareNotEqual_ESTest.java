/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 08:03:41 GMT 2022
 */

package com.obdobion.algebrain.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.EquPart;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncTime;
import com.obdobion.algebrain.operator.OpCompareNotEqual;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpCompareNotEqual_ESTest extends OpCompareNotEqual_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OpCompareNotEqual opCompareNotEqual0 = new OpCompareNotEqual();
      try { 
        opCompareNotEqual0.resolve((ValueStack) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.operator.OpCompareEqual", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OpCompareNotEqual opCompareNotEqual0 = new OpCompareNotEqual();
      ValueStack valueStack0 = new ValueStack();
      try { 
        opCompareNotEqual0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operands for op(compare not equal)
         //
         verifyException("com.obdobion.algebrain.operator.OpCompareEqual", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FuncTime funcTime0 = new FuncTime();
      OpCompareNotEqual opCompareNotEqual0 = new OpCompareNotEqual(funcTime0);
      assertEquals(0, opCompareNotEqual0.getLevel());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OpCompareNotEqual opCompareNotEqual0 = new OpCompareNotEqual();
      ValueStack valueStack0 = new ValueStack();
      Object object0 = new Object();
      valueStack0.add(object0);
      Object object1 = new Object();
      valueStack0.add(object1);
      opCompareNotEqual0.resolve(valueStack0);
      assertEquals("[true]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OpCompareNotEqual opCompareNotEqual0 = new OpCompareNotEqual();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) opCompareNotEqual0);
      valueStack0.add((Object) opCompareNotEqual0);
      opCompareNotEqual0.resolve(valueStack0);
      assertEquals("[false]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OpCompareNotEqual opCompareNotEqual0 = null;
      try {
        opCompareNotEqual0 = new OpCompareNotEqual((EquPart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OpCompareNotEqual opCompareNotEqual0 = new OpCompareNotEqual();
      String string0 = opCompareNotEqual0.toString();
      assertEquals("op(compare not equal)", string0);
  }
}
