/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:15:03 GMT 2022
 */

package com.obdobion.algebrain.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.EquPart;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.operator.OpCompareNotGreater;
import com.obdobion.algebrain.operator.OpXor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpXor_ESTest extends OpXor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(5);
      try { 
        opXor0.resolve(valueStack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      ValueStack valueStack0 = new ValueStack();
      Object object0 = new Object();
      valueStack0.add(object0);
      Integer integer0 = new Integer(2);
      valueStack0.add((Object) integer0);
      try { 
        opXor0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // op(xor); invalid type Object
         //
         verifyException("com.obdobion.algebrain.operator.OpXor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OpCompareNotGreater opCompareNotGreater0 = new OpCompareNotGreater();
      OpXor opXor0 = new OpXor(opCompareNotGreater0);
      assertTrue(opXor0.includeInRpn());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer((-7));
      valueStack0.add((Object) integer0);
      valueStack0.add((Object) integer0);
      opXor0.resolve(valueStack0);
      assertEquals("[false]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(0);
      valueStack0.add((Object) integer0);
      Integer integer1 = new Integer(1226);
      valueStack0.add((Object) integer1);
      OpXor opXor0 = new OpXor();
      opXor0.resolve(valueStack0);
      assertEquals("[true]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(4);
      valueStack0.add((Object) integer1);
      valueStack0.add((Object) integer0);
      opXor0.resolve(valueStack0);
      assertEquals("[true]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      ValueStack valueStack0 = new ValueStack();
      try { 
        opXor0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operands for op(xor)
         //
         verifyException("com.obdobion.algebrain.operator.OpXor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(0);
      valueStack0.add((Object) integer0);
      valueStack0.add((Object) integer0);
      opXor0.resolve(valueStack0);
      assertEquals("[false]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      String string0 = opXor0.toString();
      assertEquals("op(xor)", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OpXor opXor0 = null;
      try {
        opXor0 = new OpXor((EquPart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OpXor opXor0 = new OpXor();
      int int0 = opXor0.precedence();
      assertEquals(9, int0);
  }
}
