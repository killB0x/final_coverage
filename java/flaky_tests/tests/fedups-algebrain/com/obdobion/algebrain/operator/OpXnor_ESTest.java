/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:19:59 GMT 2022
 */

package com.obdobion.algebrain.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.EquPart;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncToString;
import com.obdobion.algebrain.operator.OpXnor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpXnor_ESTest extends OpXnor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      ValueStack valueStack0 = new ValueStack();
      Object object0 = new Object();
      valueStack0.add(object0);
      Integer integer0 = new Integer(9);
      valueStack0.add((Object) integer0);
      try { 
        opXnor0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // op(xnor); invalid type Object
         //
         verifyException("com.obdobion.algebrain.operator.OpXnor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(1342);
      valueStack0.add((Object) integer0);
      Integer integer1 = new Integer(0);
      valueStack0.add((Object) integer1);
      opXnor0.resolve(valueStack0);
      assertEquals("[false]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(0);
      valueStack0.add((Object) integer0);
      valueStack0.add((Object) integer0);
      opXnor0.resolve(valueStack0);
      assertEquals("[true]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(1342);
      Integer integer1 = new Integer(0);
      valueStack0.add((Object) integer1);
      valueStack0.add((Object) integer0);
      opXnor0.resolve(valueStack0);
      assertEquals("[false]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      ValueStack valueStack0 = new ValueStack();
      Integer integer0 = new Integer(1342);
      valueStack0.add((Object) integer0);
      valueStack0.add((Object) integer0);
      opXnor0.resolve(valueStack0);
      assertEquals("[true]", valueStack0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FuncToString funcToString0 = new FuncToString();
      OpXnor opXnor0 = new OpXnor(funcToString0);
      ValueStack valueStack0 = new ValueStack();
      try { 
        opXnor0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operands for op(xnor)
         //
         verifyException("com.obdobion.algebrain.operator.OpXnor", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(39);
      try { 
        opXnor0.resolve(valueStack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OpXnor opXnor0 = null;
      try {
        opXnor0 = new OpXnor((EquPart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      String string0 = opXnor0.toString();
      assertEquals("op(xnor)", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      OpXnor opXnor0 = new OpXnor();
      int int0 = opXnor0.precedence();
      assertEquals(9, int0);
  }
}
