/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:11:44 GMT 2022
 */

package com.obdobion.algebrain.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.EquPart;
import com.obdobion.algebrain.Operation;
import com.obdobion.algebrain.ValueStack;
import com.obdobion.algebrain.function.FuncStringCat;
import com.obdobion.algebrain.operator.OpAssignment;
import com.obdobion.algebrain.operator.OpComma;
import com.obdobion.algebrain.token.TokVariable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpAssignment_ESTest extends OpAssignment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OpAssignment opAssignment0 = new OpAssignment();
      ValueStack valueStack0 = new ValueStack();
      TokVariable tokVariable0 = new TokVariable();
      valueStack0.add((Object) null);
      valueStack0.add((Object) tokVariable0);
      try { 
        opAssignment0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid assignment value: com.obdobion.algebrain.token.TokVariable@0000000003
         //
         verifyException("com.obdobion.algebrain.operator.OpAssignment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OpAssignment opAssignment0 = new OpAssignment();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) opAssignment0);
      valueStack0.addElement("");
      valueStack0.add((Object) opAssignment0);
      try { 
        opAssignment0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid assignment target: java.lang.String@0000000003
         //
         verifyException("com.obdobion.algebrain.operator.OpAssignment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OpComma opComma0 = new OpComma();
      OpAssignment opAssignment0 = new OpAssignment(opComma0);
      boolean boolean0 = opAssignment0.preceeds(opComma0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OpAssignment opAssignment0 = new OpAssignment();
      try { 
        opAssignment0.resolve((ValueStack) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.operator.OpAssignment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OpAssignment opAssignment0 = null;
      try {
        opAssignment0 = new OpAssignment((EquPart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OpAssignment opAssignment0 = new OpAssignment();
      ValueStack valueStack0 = new ValueStack();
      try { 
        opAssignment0.resolve(valueStack0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // missing operands for op(assignment)
         //
         verifyException("com.obdobion.algebrain.operator.OpAssignment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FuncStringCat funcStringCat0 = new FuncStringCat();
      TokVariable tokVariable0 = new TokVariable();
      ValueStack valueStack0 = new ValueStack();
      valueStack0.add((Object) tokVariable0);
      Object object0 = new Object();
      valueStack0.add(object0);
      OpAssignment opAssignment0 = new OpAssignment(funcStringCat0);
      opAssignment0.resolve(valueStack0);
      assertTrue(opAssignment0.includeInRpn());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FuncStringCat funcStringCat0 = new FuncStringCat();
      OpAssignment opAssignment0 = new OpAssignment(funcStringCat0);
      boolean boolean0 = opAssignment0.preceeds(opAssignment0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OpAssignment opAssignment0 = new OpAssignment();
      // Undeclared exception!
      try { 
        opAssignment0.preceeds((Operation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operation", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FuncStringCat funcStringCat0 = new FuncStringCat();
      OpAssignment opAssignment0 = new OpAssignment(funcStringCat0);
      String string0 = opAssignment0.toString();
      assertEquals("op(assignment)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OpAssignment opAssignment0 = new OpAssignment();
      int int0 = opAssignment0.precedence();
      assertEquals(990, int0);
  }
}
