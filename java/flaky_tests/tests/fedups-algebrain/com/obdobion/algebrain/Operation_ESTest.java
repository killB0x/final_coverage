/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 06:42:47 GMT 2022
 */

package com.obdobion.algebrain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.Operation;
import com.obdobion.algebrain.function.FuncStringLowerCase;
import com.obdobion.algebrain.function.FuncStringMatch;
import com.obdobion.algebrain.function.FuncTan;
import com.obdobion.algebrain.operator.OpCompareEqual;
import com.obdobion.algebrain.operator.OpLeftParen;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Operation_ESTest extends Operation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FuncTan funcTan0 = new FuncTan();
      OpCompareEqual opCompareEqual0 = new OpCompareEqual(funcTan0);
      boolean boolean0 = funcTan0.preceeds(opCompareEqual0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OpLeftParen opLeftParen0 = new OpLeftParen();
      boolean boolean0 = opLeftParen0.includeInRpn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FuncStringLowerCase funcStringLowerCase0 = new FuncStringLowerCase();
      // Undeclared exception!
      try { 
        funcStringLowerCase0.preceeds((Operation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.Operation", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FuncStringLowerCase funcStringLowerCase0 = new FuncStringLowerCase();
      OpLeftParen opLeftParen0 = new OpLeftParen();
      boolean boolean0 = funcStringLowerCase0.preceeds(opLeftParen0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FuncStringLowerCase funcStringLowerCase0 = new FuncStringLowerCase();
      OpLeftParen opLeftParen0 = new OpLeftParen();
      opLeftParen0.setLevel(1359);
      boolean boolean0 = funcStringLowerCase0.preceeds(opLeftParen0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FuncStringLowerCase funcStringLowerCase0 = new FuncStringLowerCase();
      funcStringLowerCase0.setLevel(126);
      OpLeftParen opLeftParen0 = new OpLeftParen();
      boolean boolean0 = funcStringLowerCase0.preceeds(opLeftParen0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FuncStringLowerCase funcStringLowerCase0 = new FuncStringLowerCase();
      boolean boolean0 = funcStringLowerCase0.preceeds(funcStringLowerCase0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FuncStringMatch funcStringMatch0 = new FuncStringMatch();
      boolean boolean0 = funcStringMatch0.includeInRpn();
      assertTrue(boolean0);
  }
}
