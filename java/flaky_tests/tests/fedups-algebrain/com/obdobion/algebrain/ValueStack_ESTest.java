/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 06:39:59 GMT 2022
 */

package com.obdobion.algebrain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.algebrain.ValueStack;
import java.text.ParseException;
import java.time.LocalDateTime;
import java.util.EmptyStackException;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValueStack_ESTest extends ValueStack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push((Object) null);
      Object object0 = valueStack0.popWhatever();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      ValueStack valueStack1 = (ValueStack)valueStack0.push(valueStack0);
      ValueStack valueStack2 = (ValueStack)valueStack1.popWhatever();
      assertTrue(valueStack2.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.addElement("invalid type for ");
      String string0 = valueStack0.popString();
      assertEquals("invalid type for ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long((-682L));
      valueStack0.add((Object) long0);
      long long1 = valueStack0.popLong();
      assertEquals((-682L), long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.addElement("5");
      double double0 = valueStack0.popDouble();
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long((-682L));
      valueStack0.add((Object) long0);
      double double0 = valueStack0.popDouble();
      assertEquals((-682.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(1008L);
      valueStack0.push(long0);
      boolean boolean0 = valueStack0.popBoolean();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push("a");
      boolean boolean0 = valueStack0.popBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(1453);
      Object object0 = valueStack0.pop();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Object object0 = new Object();
      Object object1 = valueStack0.push(object0);
      Object object2 = valueStack0.pop();
      assertSame(object2, object1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Object[] objectArray0 = valueStack0.ensureSameTypes((-1759));
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Object object0 = valueStack0.push(valueStack0);
      valueStack0.push(object0);
      valueStack0.ensureSameTypes();
      assertEquals(0, valueStack0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(16L);
      long long1 = valueStack0.convertToLong(long0);
      assertEquals(16L, long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(0L);
      double double0 = valueStack0.convertToDouble(long0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(1L);
      double double0 = valueStack0.convertToDouble(long0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.popStringOrByteArray();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push(valueStack0);
      try { 
        valueStack0.popStringOrByteArray();
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Literal or byte[] required, found ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.popString();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push(valueStack0);
      try { 
        valueStack0.popString();
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Literal required, found ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push(valueStack0);
      try { 
        valueStack0.popLong();
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      ValueStack valueStack1 = (ValueStack)valueStack0.push(valueStack0);
      try { 
        valueStack1.popDouble();
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.popByteArray();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push(valueStack0);
      try { 
        valueStack0.popByteArray();
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // byte[] required, found ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push(valueStack0);
      try { 
        valueStack0.popBoolean();
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(51);
      // Undeclared exception!
      try { 
        valueStack0.popBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push((Object) null);
      // Undeclared exception!
      try { 
        valueStack0.ensureSameTypes(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push((Object) null);
      // Undeclared exception!
      try { 
        valueStack0.ensureSameTypes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      try { 
        valueStack0.convertToLong(valueStack0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.convertToLong(">+0Fcy!)LP");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \">+0Fcy!)LP\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.convertToLong((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      // Undeclared exception!
      try { 
        valueStack0.convertToLong(localDateTime0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/obdobion/calendar/CalendarFactory
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      try { 
        valueStack0.convertToDouble(valueStack0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.convertToDouble("Literal required, ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.convertToDouble((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      // Undeclared exception!
      try { 
        valueStack0.convertToDouble(localDateTime0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/obdobion/calendar/CalendarFactory
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      try { 
        valueStack0.convertToBoolean(valueStack0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        ValueStack.byteArrayAsString((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.popWhatever();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push(",\",Sm~sm_");
      Object object0 = valueStack0.popStringOrByteArray();
      assertEquals(",\",Sm~sm_", object0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(3593);
      // Undeclared exception!
      try { 
        valueStack0.popStringOrByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push("");
      String string0 = valueStack0.popString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push((Object) null);
      // Undeclared exception!
      try { 
        valueStack0.popString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push((Object) null);
      // Undeclared exception!
      try { 
        valueStack0.popByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(1008L);
      Stream<Object> stream0 = valueStack0.stream();
      valueStack0.push(long0);
      valueStack0.push(stream0);
      try { 
        valueStack0.ensureSameTypes();
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type Head
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      ValueStack valueStack1 = (ValueStack)valueStack0.push(valueStack0);
      valueStack1.ensureSameTypes(1);
      assertTrue(valueStack1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(1008L);
      valueStack0.push(long0);
      // Undeclared exception!
      try { 
        valueStack0.ensureSameTypes(2);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      ValueStack valueStack1 = (ValueStack)valueStack0.push(valueStack0);
      Object object0 = new Object();
      valueStack1.push(object0);
      try { 
        valueStack0.ensureSameTypes(2);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid type: ValueStack
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.setSize(2148);
      // Undeclared exception!
      try { 
        valueStack0.popLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push("[]");
      // Undeclared exception!
      try { 
        valueStack0.popLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"[]\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(0L);
      long long1 = valueStack0.convertToLong(long0);
      assertEquals(0L, long1);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      valueStack0.push(localDateTime0);
      // Undeclared exception!
      try { 
        valueStack0.popLong();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/obdobion/calendar/CalendarFactory
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push((Object) null);
      // Undeclared exception!
      try { 
        valueStack0.popDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      valueStack0.push(",\",Sm~sm_");
      // Undeclared exception!
      try { 
        valueStack0.popDouble();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long((-682L));
      double double0 = valueStack0.convertToDouble(long0);
      assertEquals((-682.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      valueStack0.push(localDateTime0);
      // Undeclared exception!
      try { 
        valueStack0.popDouble();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/obdobion/calendar/CalendarFactory
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      boolean boolean0 = valueStack0.convertToBoolean("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long(0L);
      boolean boolean0 = valueStack0.convertToBoolean(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      Long long0 = new Long((-2411L));
      boolean boolean0 = valueStack0.convertToBoolean(long0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.convertToBoolean((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.popLong();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.ensureSameTypes();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.popDouble();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        ValueStack.byteArrayAsString(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class [B (java.lang.Object and [B are in module java.base of loader 'bootstrap')
         //
         verifyException("com.obdobion.algebrain.ValueStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.popBoolean();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ValueStack valueStack0 = new ValueStack();
      // Undeclared exception!
      try { 
        valueStack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }
}
