/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:32:40 GMT 2022
 */

package me.marcosassuncao.servsim.profile;

import org.junit.Test;
import static org.junit.Assert.*;
import me.marcosassuncao.servsim.profile.Range;
import me.marcosassuncao.servsim.profile.RangeList;
import me.marcosassuncao.servsim.profile.TimeSlot;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimeSlot_ESTest extends TimeSlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, rangeList0);
      timeSlot0.setStartTime(0L);
      long long0 = timeSlot0.getStartTime();
      assertEquals(1L, timeSlot0.getDuration());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, rangeList0);
      long long0 = timeSlot0.getStartTime();
      assertEquals(1L, long0);
      assertEquals(1L, timeSlot0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, rangeList0);
      timeSlot0.getResourceRanges();
      assertEquals(0L, timeSlot0.getDuration());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RangeList rangeList0 = new RangeList((-1133), 0);
      TimeSlot timeSlot0 = new TimeSlot((-1341L), 1L, rangeList0);
      timeSlot0.getResourceRanges();
      assertEquals(1342L, timeSlot0.getDuration());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RangeList rangeList0 = new RangeList((-1133), 0);
      TimeSlot timeSlot0 = new TimeSlot((-1341L), 1L, rangeList0);
      timeSlot0.getNumResources();
      assertEquals(1342L, timeSlot0.getDuration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Range range0 = new Range(1, (-3958));
      RangeList rangeList0 = new RangeList(range0);
      TimeSlot timeSlot0 = new TimeSlot(0L, 0L, rangeList0);
      int int0 = timeSlot0.getNumResources();
      assertEquals((-3958), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, (RangeList) null);
      timeSlot0.setFinishTime(0L);
      long long0 = timeSlot0.getFinishTime();
      assertEquals((-1L), timeSlot0.getDuration());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, rangeList0);
      long long0 = timeSlot0.getFinishTime();
      assertEquals(1L, long0);
      assertEquals(1L, timeSlot0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, rangeList0);
      timeSlot0.setStartTime(0L);
      long long0 = timeSlot0.getDuration();
      assertEquals(0L, timeSlot0.getStartTime());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RangeList rangeList0 = new RangeList((-1133), 0);
      TimeSlot timeSlot0 = new TimeSlot((-1341L), 1L, rangeList0);
      timeSlot0.setStartTime(3307L);
      long long0 = timeSlot0.getDuration();
      assertEquals((-3306L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimeSlot timeSlot0 = new TimeSlot(1L, 0L, (RangeList) null);
      int int0 = timeSlot0.getNumResources();
      assertEquals((-1L), timeSlot0.getDuration());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, (RangeList) null);
      boolean boolean0 = timeSlot0.setResourceRanges((RangeList) null);
      assertFalse(boolean0);
      assertEquals(0L, timeSlot0.getDuration());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot(1L, 1L, rangeList0);
      boolean boolean0 = timeSlot0.setResourceRanges(rangeList0);
      assertEquals(0L, timeSlot0.getDuration());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimeSlot timeSlot0 = new TimeSlot(1L, 0L, (RangeList) null);
      boolean boolean0 = timeSlot0.setFinishTime((-1L));
      assertEquals((-1L), timeSlot0.getDuration());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TimeSlot timeSlot0 = new TimeSlot(1L, 0L, (RangeList) null);
      boolean boolean0 = timeSlot0.setFinishTime(2366L);
      assertEquals(2366L, timeSlot0.getFinishTime());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot((-113L), (-638L), rangeList0);
      boolean boolean0 = timeSlot0.setStartTime((-113L));
      assertEquals((-525L), timeSlot0.getDuration());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TimeSlot timeSlot0 = new TimeSlot(1L, 0L, (RangeList) null);
      timeSlot0.getResourceRanges();
      assertEquals((-1L), timeSlot0.getDuration());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot((-113L), (-638L), rangeList0);
      long long0 = timeSlot0.getStartTime();
      assertEquals((-113L), long0);
      assertEquals((-525L), timeSlot0.getDuration());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Range range0 = new Range(0, 0);
      RangeList rangeList0 = new RangeList(range0);
      TimeSlot timeSlot0 = new TimeSlot(0, 0, rangeList0);
      long long0 = timeSlot0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot((-1L), (-1L), rangeList0);
      long long0 = timeSlot0.getFinishTime();
      assertEquals((-1L), long0);
      assertEquals((-1L), timeSlot0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RangeList rangeList0 = new RangeList();
      TimeSlot timeSlot0 = new TimeSlot((-1L), (-1L), rangeList0);
      String string0 = timeSlot0.toString();
      assertEquals("TimeSlot={startTime=-1, finishTime=-1, ranges={[]}}", string0);
  }
}
