/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:39:20 GMT 2022
 */

package me.marcosassuncao.servsim;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import me.marcosassuncao.servsim.SimEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimEvent_ESTest extends SimEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.RESERVATION_COMPLETE;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, 2136L, 765, 765);
      SimEvent simEvent1 = new SimEvent(simEvent_Type0, object0, 0L, 1, 1);
      int int0 = simEvent1.compareTo(simEvent0);
      assertEquals(1, simEvent1.destination());
      assertEquals((-1), int0);
      assertEquals(1, simEvent1.source());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, 0L, 0, 7);
      int int0 = simEvent0.source();
      assertEquals(0, int0);
      assertEquals(7, simEvent0.destination());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, (-2694L), (-1), 9);
      int int0 = simEvent0.source();
      assertEquals((-1), int0);
      assertEquals(9, simEvent0.destination());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, 7, 2, 0);
      int int0 = simEvent0.destination();
      assertEquals(0, int0);
      assertEquals(2, simEvent0.source());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, (-1819L), (-331), (-331));
      int int0 = simEvent0.destination();
      assertEquals((-331), simEvent0.source());
      assertEquals((-331), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, 1, 1, 1);
      simEvent0.content();
      assertEquals(1, simEvent0.destination());
      assertEquals(1, simEvent0.source());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_ARRIVE;
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, simEvent_Type0, 1246, 1246, 1246);
      SimEvent simEvent1 = new SimEvent(simEvent_Type0, simEvent0, 1246, 1246, 1246);
      int int0 = simEvent0.compareTo(simEvent1);
      assertEquals((-1), int0);
      assertEquals(1246, simEvent1.destination());
      assertEquals(1246, simEvent1.source());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_ARRIVE;
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, simEvent_Type0, 1246, 1246, 1246);
      // Undeclared exception!
      try { 
        simEvent0.compareTo((SimEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("me.marcosassuncao.servsim.SimEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, (-1024L), (-1701), 1377);
      int int0 = simEvent0.compareTo(simEvent0);
      assertEquals(1377, simEvent0.destination());
      assertEquals(0, int0);
      assertEquals((-1701), simEvent0.source());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.RESERVATION_CANCEL;
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, simEvent_Type0, 1216, 1216, 1216);
      SimEvent simEvent1 = new SimEvent(simEvent_Type0, simEvent0, 0L, 1216, 1216);
      int int0 = simEvent0.compareTo(simEvent1);
      assertEquals(1216, simEvent1.source());
      assertEquals(1216, simEvent1.destination());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_ARRIVE;
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, simEvent_Type0, 1246, 1246, 1246);
      // Undeclared exception!
      try { 
        simEvent0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/MoreObjects
         //
         verifyException("me.marcosassuncao.servsim.SimEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, 7, 2, 0);
      int int0 = simEvent0.source();
      assertEquals(2, int0);
      assertEquals(0, simEvent0.destination());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.RESERVATION_REQUEST;
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, (Object) null, 0L, 28, 2);
      simEvent0.content();
      assertEquals(28, simEvent0.source());
      assertEquals(2, simEvent0.destination());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_ARRIVE;
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, simEvent_Type0, 1243, 1243, 1243);
      SimEvent simEvent1 = (SimEvent)simEvent0.clone();
      assertEquals(1243, simEvent0.destination());
      assertEquals(1243, simEvent0.source());
      assertEquals(1243, simEvent1.destination());
      assertEquals(1243, simEvent1.source());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimEvent.Type simEvent_Type0 = SimEvent.Type.TASK_START;
      Object object0 = new Object();
      SimEvent simEvent0 = new SimEvent(simEvent_Type0, object0, (-1024L), (-1701), 1377);
      int int0 = simEvent0.destination();
      assertEquals((-1701), simEvent0.source());
      assertEquals(1377, int0);
  }
}
