/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:28:20 GMT 2022
 */

package me.marcosassuncao.servsim.job;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import me.marcosassuncao.servsim.job.JobActivity;
import me.marcosassuncao.servsim.profile.Range;
import me.marcosassuncao.servsim.profile.RangeList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JobActivity_ESTest extends JobActivity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.start(0L);
      jobActivity0.finish((-2526L));
      // Undeclared exception!
      try { 
        jobActivity0.getTimeTakenToPerform();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("me.marcosassuncao.servsim.job.JobActivity", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.start((-2146134725));
      // Undeclared exception!
      try { 
        jobActivity0.getTimeTakenToPerform();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("me.marcosassuncao.servsim.job.JobActivity", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      boolean boolean0 = jobActivity0.finish(0L);
      assertTrue(boolean0);
      
      boolean boolean1 = jobActivity0.isFinished();
      assertEquals(0L, jobActivity0.getFinishTime());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      boolean boolean0 = jobActivity0.start(0L);
      assertTrue(boolean0);
      
      boolean boolean1 = jobActivity0.hasStarted();
      assertEquals(0L, jobActivity0.getStartTime());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      boolean boolean0 = jobActivity0.finish(0L);
      assertTrue(boolean0);
      
      boolean boolean1 = jobActivity0.finish(0L);
      assertEquals(0L, jobActivity0.getFinishTime());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.start(263L);
      boolean boolean0 = jobActivity0.start(263L);
      assertEquals(263L, jobActivity0.getStartTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.start(263L);
      long long0 = jobActivity0.getStartTime();
      assertEquals(263L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.setResumeOverhead((-3318L));
      long long0 = jobActivity0.getResumeOverhead();
      assertEquals((-3318L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      RangeList rangeList0 = new RangeList();
      boolean boolean0 = jobActivity0.setResourceRanges(rangeList0);
      assertTrue(boolean0);
      
      jobActivity0.getResourceRanges();
      assertEquals((-1L), jobActivity0.getStartTime());
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals(0L, jobActivity0.getResumeOverhead());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      Range range0 = new Range((-2146134725), (-1));
      RangeList rangeList0 = new RangeList(range0);
      boolean boolean0 = jobActivity0.setResourceRanges(rangeList0);
      assertTrue(boolean0);
      
      jobActivity0.getResourceRanges();
      assertEquals(0L, jobActivity0.getResumeOverhead());
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals((-1L), jobActivity0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      boolean boolean0 = jobActivity0.finish(0L);
      assertTrue(boolean0);
      
      long long0 = jobActivity0.getFinishTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.finish(1263L);
      long long0 = jobActivity0.getFinishTime();
      assertEquals(1263L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      // Undeclared exception!
      try { 
        jobActivity0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/MoreObjects
         //
         verifyException("me.marcosassuncao.servsim.job.JobActivity", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      RangeList rangeList0 = new RangeList();
      boolean boolean0 = jobActivity0.setResourceRanges(rangeList0);
      assertTrue(boolean0);
      
      boolean boolean1 = jobActivity0.setResourceRanges(rangeList0);
      assertFalse(boolean1);
      assertEquals(0L, jobActivity0.getResumeOverhead());
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals((-1L), jobActivity0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.start(1L);
      jobActivity0.finish(1L);
      // Undeclared exception!
      try { 
        jobActivity0.getTimeTakenToPerform();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("me.marcosassuncao.servsim.job.JobActivity", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      // Undeclared exception!
      try { 
        jobActivity0.getTimeTakenToPerform();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("me.marcosassuncao.servsim.job.JobActivity", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.finish(3006L);
      boolean boolean0 = jobActivity0.isFinished();
      assertEquals(3006L, jobActivity0.getFinishTime());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      boolean boolean0 = jobActivity0.isFinished();
      assertFalse(boolean0);
      assertEquals((-1L), jobActivity0.getStartTime());
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals(0L, jobActivity0.getResumeOverhead());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.start(1263L);
      boolean boolean0 = jobActivity0.hasStarted();
      assertEquals(1263L, jobActivity0.getStartTime());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      boolean boolean0 = jobActivity0.hasStarted();
      assertFalse(boolean0);
      assertEquals(0L, jobActivity0.getResumeOverhead());
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals((-1L), jobActivity0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.finish((-1591L));
      boolean boolean0 = jobActivity0.finish((-1591L));
      assertEquals((-1591L), jobActivity0.getFinishTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.start((-3442L));
      boolean boolean0 = jobActivity0.start((-2365L));
      assertEquals((-3442L), jobActivity0.getStartTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      boolean boolean0 = jobActivity0.start(0L);
      assertTrue(boolean0);
      
      long long0 = jobActivity0.getStartTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.getResourceRanges();
      assertEquals((-1L), jobActivity0.getStartTime());
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals(0L, jobActivity0.getResumeOverhead());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      long long0 = jobActivity0.getResumeOverhead();
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals((-1L), jobActivity0.getStartTime());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      long long0 = jobActivity0.getStartTime();
      assertEquals((-1L), jobActivity0.getFinishTime());
      assertEquals(0L, jobActivity0.getResumeOverhead());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      long long0 = jobActivity0.getFinishTime();
      assertEquals((-1L), jobActivity0.getStartTime());
      assertEquals(0L, jobActivity0.getResumeOverhead());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JobActivity jobActivity0 = new JobActivity();
      jobActivity0.setResumeOverhead(2963L);
      long long0 = jobActivity0.getResumeOverhead();
      assertEquals(2963L, long0);
  }
}
