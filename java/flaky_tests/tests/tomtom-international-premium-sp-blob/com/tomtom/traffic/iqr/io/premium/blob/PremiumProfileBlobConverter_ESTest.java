/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:03:34 GMT 2022
 */

package com.tomtom.traffic.iqr.io.premium.blob;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter;
import com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobData;
import java.util.function.IntFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PremiumProfileBlobConverter_ESTest extends PremiumProfileBlobConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(true);
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-1);
      PremiumProfileBlobData premiumProfileBlobData0 = premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(false);
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)3;
      byteArray0[6] = (byte)1;
      PremiumProfileBlobData premiumProfileBlobData0 = premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/primitives/Bytes
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[][] doubleArray0 = new double[1][3];
      IntFunction<PremiumProfileBlobData.DaySpeedsAccessor> intFunction0 = PremiumProfileBlobData.arrayToSpeedsAccessor(doubleArray0);
      PremiumProfileBlobData premiumProfileBlobData0 = new PremiumProfileBlobData(196, 196, intFunction0, 196);
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(false);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Time bins count for day 0 does not match the time resolution of 196 minutes: expecting 7 bins, got 3
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)3;
      PremiumProfileBlobData premiumProfileBlobData0 = premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/primitives/Bytes
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(false);
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)3;
      byteArray0[6] = (byte)1;
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to read daily speed profiles from byte array. Reason: null
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      byte[] byteArray0 = new byte[19];
      byteArray0[4] = (byte)1;
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to read daily speed profiles from byte array. Reason: unknown compression method
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(true);
      byte[] byteArray0 = new byte[7];
      byteArray0[4] = (byte) (-96);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to read daily speed profiles from byte array. Reason: unknown compression method
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = PremiumProfileBlobConverter.toText(1.0);
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)1;
      PremiumProfileBlobData premiumProfileBlobData0 = premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
      assertEquals(1440, premiumProfileBlobData0.getTimeResolutionMinutes());
      assertEquals(0, premiumProfileBlobData0.getWeekDaySpeed());
      assertEquals(1, premiumProfileBlobData0.getWeekendSpeed());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)106;
      PremiumProfileBlobData premiumProfileBlobData0 = premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
      assertEquals(106, premiumProfileBlobData0.getWeekDaySpeed());
      assertEquals(1440, premiumProfileBlobData0.getTimeResolutionMinutes());
      assertEquals(0, premiumProfileBlobData0.getWeekendSpeed());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = PremiumProfileBlobConverter.asEncoded((-1065.8889837747936));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob((PremiumProfileBlobData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      double[][] doubleArray0 = new double[0][2];
      PremiumProfileBlobData premiumProfileBlobData0 = new PremiumProfileBlobData(1991, 1991, doubleArray0, 1991);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobData", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      PremiumProfileBlobData premiumProfileBlobData0 = new PremiumProfileBlobData(0, 0, (double[][]) null, 0);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        PremiumProfileBlobConverter.setMeanSpeeds((byte[]) null, 974, 974);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        PremiumProfileBlobConverter.setMeanSpeeds(byteArray0, 2229, 2229);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        PremiumProfileBlobConverter.hasSupportedVersion((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        PremiumProfileBlobConverter.hasSupportedVersion(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.fromBinaryBlob((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      double[][] doubleArray0 = new double[9][8];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = 270.9336;
      doubleArray0[1] = doubleArray2;
      doubleArray0[2] = doubleArray2;
      doubleArray0[3] = doubleArray0[0];
      doubleArray0[4] = doubleArray2;
      doubleArray0[5] = doubleArray2;
      doubleArray0[6] = doubleArray0[1];
      IntFunction<PremiumProfileBlobData.DaySpeedsAccessor> intFunction0 = PremiumProfileBlobData.arrayToSpeedsAccessor(doubleArray0);
      PremiumProfileBlobData premiumProfileBlobData0 = new PremiumProfileBlobData(243, 7, intFunction0, 243);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // For day 1: Can't write speed: 270.933600
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      double[][] doubleArray0 = new double[9][8];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      doubleArray0[2] = doubleArray0[1];
      doubleArray0[3] = doubleArray0[0];
      doubleArray0[4] = doubleArray0[3];
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (-32.98);
      doubleArray0[5] = doubleArray2;
      doubleArray0[6] = doubleArray0[4];
      IntFunction<PremiumProfileBlobData.DaySpeedsAccessor> intFunction0 = PremiumProfileBlobData.arrayToSpeedsAccessor(doubleArray0);
      PremiumProfileBlobData premiumProfileBlobData0 = new PremiumProfileBlobData(243, 7, intFunction0, 243);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // For day 5: Negative speed at bin 0: -32.980000
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      double[][] doubleArray0 = new double[9][8];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray0[1] = doubleArray2;
      IntFunction<PremiumProfileBlobData.DaySpeedsAccessor> intFunction0 = PremiumProfileBlobData.arrayToSpeedsAccessor(doubleArray0);
      PremiumProfileBlobData premiumProfileBlobData0 = new PremiumProfileBlobData(243, 7, intFunction0, 243);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Time bins count for day 2 does not match the time resolution of 243 minutes: expecting 5 bins, got 8
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter(true);
      PremiumProfileBlobData premiumProfileBlobData0 = new PremiumProfileBlobData(0, 0);
      byte[] byteArray0 = premiumProfileBlobConverter0.toBinaryBlob(premiumProfileBlobData0);
      PremiumProfileBlobConverter.setMeanSpeeds(byteArray0, 2779, 0);
      PremiumProfileBlobData premiumProfileBlobData1 = premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
      assertArrayEquals(new byte[] {(byte)1, (byte) (-37), (byte)0}, byteArray0);
      assertEquals(0, premiumProfileBlobData1.getWeekendSpeed());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PremiumProfileBlobConverter premiumProfileBlobConverter0 = new PremiumProfileBlobConverter();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-3);
      // Undeclared exception!
      try { 
        premiumProfileBlobConverter0.fromBinaryBlob(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Premium profile blob version -3 is not supported
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-22);
      // Undeclared exception!
      try { 
        PremiumProfileBlobConverter.setMeanSpeeds(byteArray0, (byte) (-22), (byte) (-22));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Premium profile blob version 234 is not supported
         //
         verifyException("com.tomtom.traffic.iqr.io.premium.blob.PremiumProfileBlobConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = PremiumProfileBlobConverter.toText((-2335.739342053464));
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = PremiumProfileBlobConverter.toText(0.0078125);
      assertEquals("0.015625", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      boolean boolean0 = PremiumProfileBlobConverter.hasSupportedVersion(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-96);
      boolean boolean0 = PremiumProfileBlobConverter.hasSupportedVersion(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = PremiumProfileBlobConverter.getMinimumNonZeroOutputValue();
      assertEquals(0.015625, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = PremiumProfileBlobConverter.getMinimumNonZeroInputValue();
      assertEquals(0.0078125, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = PremiumProfileBlobConverter.asEncoded(270.9336);
      assertEquals(255.0, double0, 0.01);
  }
}
