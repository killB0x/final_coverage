/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 05:17:46 GMT 2022
 */

package net.sf.javaanpr.recognizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.javaanpr.recognizer.PatternComparator;
import net.sf.javaanpr.recognizer.RecognizedPattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PatternComparator_ESTest extends PatternComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PatternComparator patternComparator0 = new PatternComparator(true);
      RecognizedPattern recognizedPattern0 = new RecognizedPattern('j', 1.0);
      RecognizedPattern recognizedPattern1 = new RecognizedPattern('D', (-1.0));
      int int0 = patternComparator0.compare(recognizedPattern1, recognizedPattern0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PatternComparator patternComparator0 = new PatternComparator(true);
      RecognizedPattern recognizedPattern0 = new RecognizedPattern('j', 1.0);
      RecognizedPattern recognizedPattern1 = new RecognizedPattern('D', (-1.0));
      int int0 = patternComparator0.compare(recognizedPattern0, recognizedPattern1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PatternComparator patternComparator0 = new PatternComparator(false);
      // Undeclared exception!
      try { 
        patternComparator0.compare((RecognizedPattern) null, (RecognizedPattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.javaanpr.recognizer.PatternComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PatternComparator patternComparator0 = new PatternComparator(true);
      RecognizedPattern recognizedPattern0 = new RecognizedPattern('q', 0.0);
      int int0 = patternComparator0.compare(recognizedPattern0, recognizedPattern0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PatternComparator patternComparator0 = new PatternComparator(false);
      RecognizedPattern recognizedPattern0 = new RecognizedPattern('P', 215.960689);
      int int0 = patternComparator0.compare(recognizedPattern0, recognizedPattern0);
      assertEquals(0, int0);
  }
}
