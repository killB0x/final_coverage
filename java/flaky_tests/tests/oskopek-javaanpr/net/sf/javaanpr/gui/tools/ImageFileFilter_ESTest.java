/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 05:08:29 GMT 2022
 */

package net.sf.javaanpr.gui.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import net.sf.javaanpr.gui.tools.ImageFileFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImageFileFilter_ESTest extends ImageFileFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImageFileFilter imageFileFilter0 = new ImageFileFilter();
      MockFile mockFile0 = new MockFile("!g0cR=m=HFWH=9D");
      boolean boolean0 = imageFileFilter0.accept((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageFileFilter.accept((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.javaanpr.gui.tools.ImageFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImageFileFilter imageFileFilter0 = new ImageFileFilter();
      // Undeclared exception!
      try { 
        imageFileFilter0.accept((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.javaanpr.gui.tools.ImageFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = ImageFileFilter.accept("imges (*.jpg, *.bmp, *.gif, *.png");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ImageFileFilter imageFileFilter0 = new ImageFileFilter();
      MockFile mockFile0 = new MockFile("!g0cR=m=HFWH=9D");
      MockFile.createTempFile("[MwRiY", "images (*.jpg, *.bmp, *.gif, *.png)", (File) mockFile0);
      boolean boolean0 = imageFileFilter0.accept((File) mockFile0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = ImageFileFilter.accept("bmp");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = ImageFileFilter.accept(".[3yFA+Jw");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ImageFileFilter imageFileFilter0 = new ImageFileFilter();
      String string0 = imageFileFilter0.getDescription();
      assertEquals("images (*.jpg, *.bmp, *.gif, *.png)", string0);
  }
}
