/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 05:20:02 GMT 2022
 */

package net.sf.javaanpr.intelligence.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.javaanpr.intelligence.parser.PlateForm;
import net.sf.javaanpr.intelligence.parser.Position;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PlateForm_ESTest extends PlateForm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("V7F*D]");
      plateForm0.addPosition((Position) null);
      plateForm0.length();
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("V7F*D]");
      assertFalse(plateForm0.isFlagged());
      
      plateForm0.setFlagged(true);
      boolean boolean0 = plateForm0.isFlagged();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("V7F*D]");
      plateForm0.addPosition((Position) null);
      plateForm0.getPositions();
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("");
      Position position0 = new Position("");
      plateForm0.addPosition(position0);
      plateForm0.addPosition((Position) null);
      plateForm0.addPosition((Position) null);
      plateForm0.addPosition((Position) null);
      plateForm0.addPosition((Position) null);
      plateForm0.getPosition(4);
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm((String) null);
      plateForm0.getName();
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("V7F*D]");
      plateForm0.getName();
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("");
      boolean boolean0 = plateForm0.isFlagged();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("");
      Position position0 = new Position("");
      plateForm0.addPosition(position0);
      plateForm0.addPosition(position0);
      plateForm0.getPosition(1);
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("");
      plateForm0.getPositions();
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("");
      plateForm0.length();
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("");
      plateForm0.getName();
      assertFalse(plateForm0.isFlagged());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlateForm plateForm0 = new PlateForm("C~JBHknE>';X -dCQ");
      // Undeclared exception!
      try { 
        plateForm0.getPosition((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }
}
