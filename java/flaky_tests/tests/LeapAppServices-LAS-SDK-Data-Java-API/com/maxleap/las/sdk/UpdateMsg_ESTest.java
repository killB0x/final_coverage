/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 19:44:48 GMT 2022
 */

package com.maxleap.las.sdk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.maxleap.las.sdk.UpdateMsg;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UpdateMsg_ESTest extends UpdateMsg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg(1149, 1L, (Map) null);
      Integer integer0 = new Integer(4201);
      UpdateMsg updateMsg1 = new UpdateMsg();
      updateMsg1.set("", (Object) null);
      Integer integer1 = new Integer(4201);
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      updateMsg1.toString();
      hashMap0.put((Object) null, integer1);
      updateMsg0.result();
      updateMsg1.updatedAtString();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("GMT");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg((-1), (-1), (Map) null);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        updateMsg0.set((String) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.computeIfPresent((Object) null, biFunction0);
      hashMap0.put((Object) null, (Object) null);
      UpdateMsg updateMsg0 = new UpdateMsg(2318, 2318, hashMap0);
      Object object0 = new Object();
      updateMsg0.set("jz0p", object0);
      updateMsg0.toString();
      updateMsg0.toString();
      updateMsg0.number();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("com.maxleap.las.sdk.DateUtils");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      Integer integer0 = new Integer(0);
      hashMap0.put(integer0, integer0);
      UpdateMsg updateMsg0 = new UpdateMsg(0, (-1303L), hashMap0);
      Integer integer1 = new Integer(0);
      hashMap0.replace((Object) updateMsg0, integer1, integer0);
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      Object object0 = new Object();
      updateMsg0.set("UpdateMsg{number=0, updatedAt=-1303, result={0=0}}", object0);
      updateMsg0.toString();
      updateMsg0.updatedAt();
      updateMsg0.toString();
      Integer integer2 = new Integer((-1107));
      hashMap0.put((Object) null, integer2);
      updateMsg0.set("UpdateMsg{number=0, updatedAt=-1303, result={0=0, UpdateMsg{number=0, updatedAt=-1303, result={0=0}}=java.lang.Object@162a95}}", integer0);
      Integer integer3 = new Integer(0);
      hashMap0.put(updateMsg0, integer3);
      updateMsg0.number();
      Integer integer4 = new Integer((-1049));
      hashMap0.put(integer1, integer4);
      updateMsg0.updatedAt();
      updateMsg0.updatedAtString();
      updateMsg0.number();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("UpdateMsg{number=0, updatedAt=-1303, result={0=0, UpdateMsg{number=0, updatedAt=-1303, result={0=0}}=java.lang.Object@162a95}}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      UpdateMsg updateMsg0 = new UpdateMsg((-1100), 1L, hashMap0);
      Integer integer0 = new Integer((-1100));
      Object object0 = new Object();
      Integer integer1 = new Integer(125);
      Integer integer2 = new Integer((-1100));
      hashMap0.getOrDefault(integer1, integer2);
      updateMsg0.set("com.maxleap.las.sdk.DateUtils", "com.maxleap.las.sdk.DateUtils");
      Integer integer3 = new Integer(5534);
      updateMsg0.toString();
      updateMsg0.set("BpPNsg!Fq.qsTU/I", integer3);
      updateMsg0.set("com.maxleap.las.sdk.UpdateMsg", "com.maxleap.las.sdk.UpdateMsg");
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      updateMsg0.toString();
      hashMap0.put(integer0, object0);
      updateMsg0.result();
      updateMsg0.updatedAt();
      updateMsg0.set("", (Object) null);
      updateMsg0.updatedAtString();
      updateMsg0.number();
      updateMsg0.toString();
      updateMsg0.result();
      Object object1 = new Object();
      updateMsg0.set("?", object1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      assertEquals(0, updateMsg0.number());
      
      String string0 = updateMsg0.updatedAtString();
      assertEquals("1970-01-01T00:00:00.000Z", string0);
      
      Integer integer0 = new Integer((-1702));
      updateMsg0.set("1970-01-01T00:00:00.000Z", integer0);
      updateMsg0.toString();
      updateMsg0.updatedAt();
      updateMsg0.updatedAtString();
      Integer integer1 = new Integer(4041);
      updateMsg0.set("", integer1);
      updateMsg0.toString();
      Object object0 = new Object();
      updateMsg0.set(", updatedAt=", object0);
      updateMsg0.result();
      updateMsg0.setUpdatedAt("1970-01-01T00:00:00.000Z");
      updateMsg0.updatedAt();
      updateMsg0.updatedAt();
      updateMsg0.number();
      updateMsg0.set("", "1970-01-01T00:00:00.000Z");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.setUpdatedAt((String) null);
      updateMsg0.toString();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      updateMsg0.toString();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      UpdateMsg updateMsg0 = new UpdateMsg((-405), 0L, hashMap0);
      Integer integer0 = new Integer((-4991));
      Integer integer1 = new Integer(1);
      hashMap0.put(updateMsg0, integer1);
      updateMsg0.result();
      // Undeclared exception!
      try { 
        updateMsg0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = (-2738);
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      UpdateMsg updateMsg0 = new UpdateMsg((-2738), (-2738), hashMap0);
      Integer integer0 = new Integer((-2738));
      BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      hashMap0.put(object0, integer0);
      hashMap0.merge(updateMsg0, integer0, biFunction0);
      updateMsg0.updatedAtString();
      updateMsg0.updatedAtString();
      // Undeclared exception!
      try { 
        updateMsg0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      int int0 = updateMsg0.number();
      assertEquals(0, int0);
      
      updateMsg0.set("", "");
      assertEquals(0, updateMsg0.number());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      int int0 = updateMsg0.number();
      assertEquals(0, int0);
      
      updateMsg0.result();
      assertEquals(0, updateMsg0.number());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.updatedAtString();
      updateMsg0.updatedAtString();
      updateMsg0.result();
      long long0 = updateMsg0.updatedAt();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg((-5758), 0L, (Map) null);
      int int0 = updateMsg0.number();
      assertEquals((-5758), int0);
      
      updateMsg0.updatedAt();
      assertEquals((-5758), updateMsg0.number());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      Object object0 = new Object();
      updateMsg0.set("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", object0);
      assertEquals(0L, updateMsg0.updatedAt());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.set("com.maxleaplas.sdk.DteUtils", "com.maxleaplas.sdk.DteUtils");
      assertEquals(0L, updateMsg0.updatedAt());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      Map map0 = updateMsg0.result();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.updatedAtString();
      Map map0 = updateMsg0.result();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put((Object) null, (Object) null);
      Integer integer0 = new Integer(2130);
      Object object0 = new Object();
      hashMap0.put((Object) null, object0);
      hashMap0.put((Object) null, object0);
      Integer integer1 = new Integer(2130);
      hashMap0.put(integer1, (Object) null);
      hashMap0.replace((Object) integer0, (Object) integer0);
      UpdateMsg updateMsg0 = new UpdateMsg(2130, 2130, hashMap0);
      updateMsg0.toString();
      updateMsg0.set("p_u8jZS", (Object) null);
      Object object1 = new Object();
      hashMap0.put(object0, "UpdateMsg{number=2130, updatedAt=2130, result={null=java.lang.Object@f5d4f04, 2130=2130}}");
      updateMsg0.setUpdatedAt((String) null);
      updateMsg0.set((String) null, object1);
      Integer integer2 = new Integer(2130);
      updateMsg0.set("UpdateMsg{number=2130, updatedAt=2130, result={null=java.lang.Object@f5d4f04, 2130=2130}}", integer2);
      updateMsg0.toString();
      updateMsg0.setUpdatedAt((String) null);
      updateMsg0.setUpdatedAt((String) null);
      updateMsg0.toString();
      updateMsg0.set("UpdateMsg{number=", object1);
      updateMsg0.setUpdatedAt((String) null);
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("UpdateMsg{number=2130, updatedAt=2130, result={null=java.lang.Object@feeede2, 2130=2130, p_u8jZS=null, java.lang.Object@f5d4f04=UpdateMsg{number=2130, updatedAt=2130, result={null=java.lang.Object@f5d4f04, 2130=2130}}, UpdateMsg{number=2130, updatedAt=2130, result={null=java.lang.Object@f5d4f04, 2130=2130}}=2130}}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg((-5758), (-5758), (Map) null);
      assertEquals((-5758L), updateMsg0.updatedAt());
      assertEquals((-5758), updateMsg0.number());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("n?8uxdGn1>HNhN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Object object0 = new Object();
      hashMap0.put(object0, object0);
      UpdateMsg updateMsg0 = new UpdateMsg(1, 0L, hashMap0);
      String string0 = "com.maxleap.las.sdk.DateUtils";
      String string1 = "";
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }
}
