/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 19:42:46 GMT 2022
 */

package com.maxleap.las.sdk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.maxleap.las.sdk.ObjectId;
import com.maxleap.las.sdk.SaveMsg;
import java.time.Instant;
import java.util.Date;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SaveMsg_ESTest extends SaveMsg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      ObjectId objectId0 = saveMsg0.objectId();
      assertNull(objectId0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ObjectId objectId0 = new ObjectId();
      SaveMsg saveMsg0 = new SaveMsg(0L, objectId0);
      ObjectId objectId1 = saveMsg0.objectId();
      assertEquals(12, objectId1.getCurrentCounter());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectId objectId0 = ObjectId.createFromLegacyFormat((-608), (-608), 0);
      SaveMsg saveMsg0 = new SaveMsg(0L, objectId0);
      ObjectId objectId1 = saveMsg0.objectId();
      assertSame(objectId1, objectId0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      long long0 = saveMsg0.createdAt();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectId objectId0 = ObjectId.get();
      SaveMsg saveMsg0 = new SaveMsg(169L, objectId0);
      long long0 = saveMsg0.createdAt();
      assertEquals(169L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectId objectId0 = ObjectId.get();
      SaveMsg saveMsg0 = new SaveMsg(0L, objectId0);
      saveMsg0.set("%{Yo)p6%*s$.k8dVl+", saveMsg0);
      // Undeclared exception!
      saveMsg0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      // Undeclared exception!
      try { 
        saveMsg0.setObjectId("G'T");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid ObjectId [G'T]
         //
         verifyException("com.maxleap.las.sdk.ObjectId", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      String string0 = saveMsg0.objectIdString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      MockDate mockDate0 = new MockDate();
      ObjectId objectId0 = new ObjectId(mockDate0);
      saveMsg0.setObjectId(objectId0);
      String string0 = saveMsg0.objectIdString();
      assertEquals("52fe7ac1a054007800000000", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      // Undeclared exception!
      try { 
        saveMsg0.setCreatedAt("need 12 bytes");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.SaveMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      saveMsg0.setCreatedAt((String) null);
      assertEquals(0L, saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      Map map0 = saveMsg0.result();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(1L, 0L);
      Date date0 = Date.from(instant0);
      ObjectId objectId0 = new ObjectId(date0, 12);
      SaveMsg saveMsg0 = new SaveMsg((-2282L), objectId0);
      saveMsg0.objectId();
      assertEquals((-2282L), saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(1L, 0L);
      Date date0 = Date.from(instant0);
      ObjectId objectId0 = new ObjectId(date0, 12);
      SaveMsg saveMsg0 = new SaveMsg((-2282L), objectId0);
      long long0 = saveMsg0.createdAt();
      assertEquals((-2282L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      saveMsg0.set("Q", "Q");
      Map map0 = saveMsg0.result();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      saveMsg0.setObjectId("52fe7ac1a054007900000982");
      assertEquals(0L, saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(1L, 0L);
      Date date0 = Date.from(instant0);
      ObjectId objectId0 = new ObjectId(date0, 12);
      SaveMsg saveMsg0 = new SaveMsg((-2282L), objectId0);
      String string0 = saveMsg0.createdAtString();
      assertEquals("1969-12-31T23:59:57.718Z", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(1L, 0L);
      Date date0 = Date.from(instant0);
      ObjectId objectId0 = new ObjectId(date0, 12);
      SaveMsg saveMsg0 = new SaveMsg((-2282L), objectId0);
      String string0 = saveMsg0.toString();
      assertEquals("SaveMsg{objectId=00000001a05400780000000c, createdAt=-2282, result={}}", string0);
  }
}
