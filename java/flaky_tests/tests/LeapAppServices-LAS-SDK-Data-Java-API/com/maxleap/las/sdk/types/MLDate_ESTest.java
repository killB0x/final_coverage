/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 19:48:51 GMT 2022
 */

package com.maxleap.las.sdk.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.maxleap.las.sdk.types.MLDate;
import java.util.Date;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MLDate_ESTest extends MLDate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      MLDate mLDate0 = new MLDate(mockDate0);
      Long long0 = mLDate0.getTime();
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MLDate mLDate0 = new MLDate();
      MockDate mockDate0 = new MockDate(1L);
      MLDate mLDate1 = mLDate0.from(mockDate0);
      Long long0 = mLDate1.getTime();
      assertEquals(1L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 3, 2, 11, 992, 11);
      MLDate mLDate0 = new MLDate(mockDate0);
      Long long0 = mLDate0.getTime();
      assertEquals((-2201027269000L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MLDate mLDate0 = new MLDate();
      String string0 = mLDate0.getIso();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      MLDate mLDate0 = new MLDate(mockDate0);
      String string0 = mLDate0.get__type();
      assertEquals("Date", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2304L));
      MLDate mLDate0 = new MLDate(mockDate0);
      String string0 = mLDate0.getIso();
      assertEquals("1969-12-31T23:59:57.696Z", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2304L));
      MLDate mLDate0 = new MLDate(mockDate0);
      mLDate0.setIso("");
      String string0 = mLDate0.getIso();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2304L));
      MLDate mLDate0 = new MLDate(mockDate0);
      Map map0 = mLDate0.toMap();
      assertEquals(2, map0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MLDate mLDate0 = new MLDate();
      // Undeclared exception!
      try { 
        mLDate0.from((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MLDate mLDate0 = null;
      try {
        mLDate0 = new MLDate((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MLDate mLDate0 = new MLDate();
      // Undeclared exception!
      try { 
        mLDate0.getTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.types.MLDate", e);
      }
  }
}
