/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:30:21 GMT 2022
 */

package org.sql4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sql4j.Insert;
import org.sql4j.QueryExpression;
import org.sql4j.SqlBuilder;
import org.sql4j.Where;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Insert_ESTest extends Insert_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Insert insert0 = new Insert(sqlBuilder0, ".[d");
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        insert0.values(objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.sql4j.Insert$InsertValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Insert insert0 = null;
      try {
        insert0 = new Insert((SqlBuilder) null, "u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Insert", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Insert insert0 = new Insert(sqlBuilder0, (String) null);
      Where where0 = new Where(sqlBuilder0);
      Insert.FinalizedInsert insert_FinalizedInsert0 = insert0.query(where0);
      String string0 = insert_FinalizedInsert0.toPreparedSqlString();
      assertEquals("INSERT INTO null ( INSERT INTO null)\n", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Insert insert0 = new Insert(sqlBuilder0, (String) null);
      Where where0 = new Where(sqlBuilder0);
      Insert.FinalizedInsert insert_FinalizedInsert0 = insert0.query(where0);
      insert_FinalizedInsert0.getParameters();
      assertEquals("INSERT INTO null ( INSERT INTO null)\n", insert_FinalizedInsert0.toPreparedSqlString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Insert insert0 = new Insert(sqlBuilder0, (String) null);
      Where where0 = new Where(sqlBuilder0);
      Insert.FinalizedInsert insert_FinalizedInsert0 = insert0.query(where0);
      String string0 = insert_FinalizedInsert0.toSqlString();
      assertEquals("INSERT INTO null ( INSERT INTO null)\n", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Insert insert0 = new Insert(sqlBuilder0, "p$^JUv^~W");
      // Undeclared exception!
      try { 
        insert0.columns((String[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.sql4j.Insert", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Insert insert0 = new Insert(sqlBuilder0, ".[d");
      // Undeclared exception!
      try { 
        insert0.values((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Insert insert0 = new Insert(sqlBuilder0, "0:^JUv^~W");
      // Undeclared exception!
      try { 
        insert0.query((QueryExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Insert", e);
      }
  }
}
