/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:31:42 GMT 2022
 */

package org.sql4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sql4j.Condition;
import org.sql4j.Database;
import org.sql4j.Join;
import org.sql4j.SqlBuilder;
import org.sql4j.Where;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Where_ESTest extends Where_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Database database0 = Database.ORACLE;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SqlBuilder sqlBuilder0 = new SqlBuilder(database0, connection0);
      SqlBuilder sqlBuilder1 = new SqlBuilder(sqlBuilder0);
      Where where0 = new Where(sqlBuilder0);
      where0.getParameters();
      sqlBuilder1.getParameters();
      sqlBuilder1.appendLine("");
      SqlBuilder sqlBuilder2 = new SqlBuilder();
      Where where1 = new Where(sqlBuilder1);
      Condition.FinalizedCondition condition_FinalizedCondition0 = mock(Condition.FinalizedCondition.class, new ViolatedAssumptionAnswer());
      doReturn(sqlBuilder0, (SqlBuilder) null).when(condition_FinalizedCondition0).getContext();
      // Undeclared exception!
      try { 
        where1.where(condition_FinalizedCondition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Where", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Database database0 = Database.ORACLE;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SqlBuilder sqlBuilder0 = new SqlBuilder(database0, connection0);
      sqlBuilder0.appendLine("X=H{-/uKjc+$z^4");
      Where where0 = new Where(sqlBuilder0);
      String string0 = where0.toSqlString();
      assertEquals("X=H{-/uKjc+$z^4\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      String string0 = where0.toSqlString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      where0.join((String) null);
      String string0 = where0.toPreparedSqlString();
      assertEquals("JOIN null", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      Join.RightOuterJoin join_RightOuterJoin0 = where0.rightOuterJoin((String) null);
      assertNotNull(join_RightOuterJoin0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      Join.RightInnerJoin join_RightInnerJoin0 = where0.rightInnerJoin((String) null);
      assertNotNull(join_RightInnerJoin0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      Join.LeftOuterJoin join_LeftOuterJoin0 = where0.leftOuterJoin("WHERE ");
      assertNotNull(join_LeftOuterJoin0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Database database0 = Database.ORACLE;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SqlBuilder sqlBuilder0 = new SqlBuilder(database0, connection0);
      Where where0 = new Where(sqlBuilder0);
      Join.LeftInnerJoin join_LeftInnerJoin0 = where0.leftInnerJoin("O\"*Tw-e|Ccf3Y@");
      assertNotNull(join_LeftInnerJoin0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.toPreparedSqlString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Where", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.orderBy("WHERE ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.OrderBy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.join("1_Qn:a}{=)?8S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Join", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      // Undeclared exception!
      try { 
        where0.groupBy((String[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.sql4j.GroupBy", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.getParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Where", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      // Undeclared exception!
      try { 
        where0.orderBy("=+^/a<exk\"a&B0*oD");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.sql4j.OrderBy", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Database database0 = Database.ORACLE;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SqlBuilder sqlBuilder0 = new SqlBuilder(database0, connection0);
      Where where0 = new Where(sqlBuilder0);
      String string0 = where0.toPreparedSqlString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.leftOuterJoin("'[9-wV<{Qgab#5r fg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Join", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.groupBy((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.GroupBy", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.rightInnerJoin("h;hOCiIVo2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Join", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.toSqlString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Where", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.leftInnerJoin("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Join", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Where where0 = new Where((SqlBuilder) null);
      // Undeclared exception!
      try { 
        where0.rightOuterJoin("WHERE ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Join", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      Where where0 = new Where(sqlBuilder0);
      where0.join("wj`PEId?C<u'");
      // Undeclared exception!
      try { 
        where0.toSqlString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }
}
