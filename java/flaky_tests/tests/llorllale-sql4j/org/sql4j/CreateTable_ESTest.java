/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:29:41 GMT 2022
 */

package org.sql4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sql4j.Column;
import org.sql4j.CreateTable;
import org.sql4j.SqlBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreateTable_ESTest extends CreateTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CreateTable createTable0 = null;
      try {
        createTable0 = new CreateTable((SqlBuilder) null, "k'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.CreateTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      CreateTable createTable0 = new CreateTable(sqlBuilder0, "PR56rYRaM<n+uqZ]9");
      Column.FinalizedColumn column_FinalizedColumn0 = mock(Column.FinalizedColumn.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(column_FinalizedColumn0).getColumnString();
      CreateTable.FinalizedCreateTable createTable_FinalizedCreateTable0 = createTable0.column(column_FinalizedColumn0);
      Column.FinalizedColumn column_FinalizedColumn1 = mock(Column.FinalizedColumn.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(column_FinalizedColumn1).getColumnString();
      CreateTable.FinalizedCreateTable createTable_FinalizedCreateTable1 = createTable_FinalizedCreateTable0.column(column_FinalizedColumn1);
      String string0 = createTable_FinalizedCreateTable1.toSqlString();
      assertEquals("CREATE TABLE PR56rYRaM<n+uqZ]9 (\n", string0);
  }
}
