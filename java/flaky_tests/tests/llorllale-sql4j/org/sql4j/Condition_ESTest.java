/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:25:00 GMT 2022
 */

package org.sql4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.sql4j.Condition;
import org.sql4j.SqlBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Condition_ESTest extends Condition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Condition condition0 = Condition.column("");
      Condition condition1 = Condition.column("0o5s>{,E`@z&e6P)KuJ");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.gt(condition1);
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Condition condition0 = Condition.column("6WSN>aMAk1(");
      Object object0 = new Object();
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.gteq(object0);
      SqlBuilder sqlBuilder0 = condition_FinalizedCondition0.getContext();
      assertNotNull(sqlBuilder0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Condition.FinalizedCondition condition_FinalizedCondition0 = Condition.literal("");
      Condition.GroupCondition condition_GroupCondition0 = Condition.GroupCondition.group(condition_FinalizedCondition0);
      Condition.GroupCondition condition_GroupCondition1 = condition_GroupCondition0.and(condition_FinalizedCondition0);
      assertSame(condition_GroupCondition0, condition_GroupCondition1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Condition.stringify((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        Condition.stringify(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported type for value assignment: java.lang.Object
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Condition condition0 = Condition.column("Q8O1bG>VVU<sKuV&Qj");
      // Undeclared exception!
      try { 
        condition0.lteq((Condition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Condition condition0 = Condition.column("?");
      // Undeclared exception!
      try { 
        condition0.lteq(condition0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Condition condition0 = Condition.column("CM_d>=7pUCwcB2OIk$=");
      condition0.like("CM_d>=7pUCwcB2OIk$=");
      // Undeclared exception!
      try { 
        condition0.lteq(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Condition condition0 = Condition.column((String) null);
      condition0.lt((Object) condition0);
      // Undeclared exception!
      try { 
        condition0.lteq(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported type for value assignment: org.sql4j.Condition
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Condition condition0 = Condition.column("org.sql4j.SqlBuilder");
      // Undeclared exception!
      try { 
        condition0.lt((Condition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Condition condition0 = Condition.column("?");
      // Undeclared exception!
      try { 
        condition0.lt(condition0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Condition condition0 = Condition.column("$h_3y9");
      condition0.lt((Object) "$h_3y9");
      // Undeclared exception!
      try { 
        condition0.lt(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Condition condition0 = Condition.column("");
      Object object0 = new Object();
      condition0.gteq(object0);
      // Undeclared exception!
      try { 
        condition0.lt(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported type for value assignment: java.lang.Object
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Condition.literal((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        Condition.literal(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported type for value assignment: java.lang.Object
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Condition condition0 = Condition.column("?");
      // Undeclared exception!
      try { 
        condition0.gteq((Condition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Condition condition0 = Condition.column("?");
      // Undeclared exception!
      try { 
        condition0.gteq(condition0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Condition condition0 = Condition.column("$h_3y9");
      condition0.like("$h_3y9");
      // Undeclared exception!
      try { 
        condition0.gteq(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Condition condition0 = Condition.column((String) null);
      condition0.lt((Object) condition0);
      // Undeclared exception!
      try { 
        condition0.gteq(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported type for value assignment: org.sql4j.Condition
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Condition condition0 = Condition.column((String) null);
      condition0.gteq((Object) null);
      // Undeclared exception!
      try { 
        condition0.gt(condition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Condition condition0 = Condition.column("G?Or");
      // Undeclared exception!
      try { 
        condition0.gt(condition0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Condition condition0 = Condition.column((String) null);
      condition0.lt((Object) condition0);
      // Undeclared exception!
      try { 
        condition0.gt(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported type for value assignment: org.sql4j.Condition
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Condition condition0 = Condition.column("= 5}w");
      // Undeclared exception!
      try { 
        condition0.eq((Condition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Condition condition0 = Condition.column("?");
      // Undeclared exception!
      try { 
        condition0.eq(condition0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Condition condition0 = Condition.column("$h_3y9");
      condition0.like("$h_3y9");
      // Undeclared exception!
      try { 
        condition0.eq(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 1113, 0, 2720, 0);
      String string0 = Condition.stringify(mockDate0);
      assertEquals("TIMESTAMP'1993-01-21 08:00:00'", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long((-2558L));
      Condition.FinalizedCondition condition_FinalizedCondition0 = Condition.literal(long0);
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Condition condition0 = Condition.column("6WSN>aMAk1(");
      MockDate mockDate0 = new MockDate((-1871), (-1871), (-1871), 0, 0);
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.gt((Object) mockDate0);
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Condition condition0 = Condition.column("$h_3y9");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.gteq(condition0);
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Condition condition0 = Condition.column("6WSN>aMAk1(");
      Object object0 = new Object();
      condition0.gteq(object0);
      // Undeclared exception!
      try { 
        condition0.eq(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported type for value assignment: java.lang.Object
         //
         verifyException("org.sql4j.Condition", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Condition condition0 = Condition.column("");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.isNull();
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Condition condition0 = Condition.column("CM_d>=7pUCwcB2OIk$=");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.lteq(condition0);
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Condition condition0 = Condition.column("$h_3y9");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.lt(condition0);
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Condition condition0 = Condition.column("CM_d>=7pUCwcB2OIk$=");
      condition0.like("CM_d>=7pUCwcB2OIk$=");
      // Undeclared exception!
      try { 
        condition0.gt(condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Condition condition0 = Condition.column("");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.lt((Object) "");
      Condition.GroupCondition condition_GroupCondition0 = Condition.GroupCondition.group(condition_FinalizedCondition0);
      Condition.GroupCondition condition_GroupCondition1 = condition_GroupCondition0.or(condition_FinalizedCondition0);
      assertSame(condition_GroupCondition0, condition_GroupCondition1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Condition condition0 = Condition.column("");
      Object object0 = new Object();
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.lteq(object0);
      assertNotNull(condition_FinalizedCondition0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Condition condition0 = Condition.column("");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.eq((Object) "");
      Condition.GroupCondition condition_GroupCondition0 = Condition.GroupCondition.group(condition_FinalizedCondition0);
      SqlBuilder sqlBuilder0 = condition_GroupCondition0.getContext();
      assertNotNull(sqlBuilder0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Condition condition0 = Condition.column("$h_3y9");
      Condition.FinalizedCondition condition_FinalizedCondition0 = condition0.eq(condition0);
      assertNotNull(condition_FinalizedCondition0);
  }
}
