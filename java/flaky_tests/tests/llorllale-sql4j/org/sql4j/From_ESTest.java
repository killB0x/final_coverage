/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:32:21 GMT 2022
 */

package org.sql4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sql4j.From;
import org.sql4j.SqlBuilder;
import org.sql4j.Where;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class From_ESTest extends From_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      From from0 = null;
      try {
        from0 = new From((SqlBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sql4j.From", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      From from0 = new From(sqlBuilder0);
      Where where0 = from0.table("AND ( ");
      assertEquals("FROM AND ( \n", where0.toPreparedSqlString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlBuilder sqlBuilder0 = new SqlBuilder();
      From from0 = new From(sqlBuilder0);
      // Undeclared exception!
      try { 
        from0.tables((String[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.sql4j.From", e);
      }
  }
}
