/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 03:43:55 GMT 2022
 */

package com.graphaware.reco.generic.web;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphaware.reco.generic.config.SimpleConfig;
import com.graphaware.reco.generic.web.SimpleConfigParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleConfigParser_ESTest extends SimpleConfigParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleConfigParser simpleConfigParser0 = new SimpleConfigParser();
      SimpleConfig simpleConfig0 = simpleConfigParser0.produceConfig(1, 2530L, "");
      assertEquals(1, simpleConfig0.limit());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleConfigParser simpleConfigParser0 = new SimpleConfigParser();
      // Undeclared exception!
      try { 
        simpleConfigParser0.produceConfig((-1336), "com.graphaware.reco.generic.web.SimpleConfigParser");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [Assertion failed] - this expression must be true
         //
         verifyException("com.graphaware.reco.generic.util.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleConfigParser simpleConfigParser0 = new SimpleConfigParser();
      SimpleConfig simpleConfig0 = simpleConfigParser0.produceConfig(1728, "111pBrO*3),Z");
      assertEquals(1728, simpleConfig0.limit());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleConfigParser simpleConfigParser0 = new SimpleConfigParser();
      // Undeclared exception!
      try { 
        simpleConfigParser0.produceConfig((-985), (long) (-985), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [Assertion failed] - this expression must be true
         //
         verifyException("com.graphaware.reco.generic.util.Assert", e);
      }
  }
}
