/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 03:45:13 GMT 2022
 */

package com.graphaware.reco.generic.engine;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphaware.reco.generic.config.Config;
import com.graphaware.reco.generic.config.SimpleConfig;
import com.graphaware.reco.generic.context.Context;
import com.graphaware.reco.generic.context.FilteringContext;
import com.graphaware.reco.generic.engine.DelegatingRecommendationEngine;
import com.graphaware.reco.generic.engine.RecommendationEngine;
import com.graphaware.reco.generic.engine.TopLevelDelegatingRecommendationEngine;
import com.graphaware.reco.generic.filter.Filter;
import com.graphaware.reco.generic.policy.ParticipationPolicy;
import com.graphaware.reco.generic.result.Recommendation;
import com.graphaware.reco.generic.result.Recommendations;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseRecommendationEngine_ESTest extends BaseRecommendationEngine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TopLevelDelegatingRecommendationEngine<Integer, Object> topLevelDelegatingRecommendationEngine0 = new TopLevelDelegatingRecommendationEngine<Integer, Object>();
      Object object0 = new Object();
      Integer integer0 = new Integer(0);
      SimpleConfig simpleConfig0 = (SimpleConfig)Config.UNLIMITED;
      LinkedList<Filter<Integer, Object>> linkedList0 = new LinkedList<Filter<Integer, Object>>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FilteringContext<Integer, Object> filteringContext0 = new FilteringContext<Integer, Object>(integer0, simpleConfig0, linkedList0, linkedHashSet0);
      Recommendations<Integer> recommendations0 = topLevelDelegatingRecommendationEngine0.recommend(object0, filteringContext0);
      assertNotNull(recommendations0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TopLevelDelegatingRecommendationEngine<Integer, Integer> topLevelDelegatingRecommendationEngine0 = new TopLevelDelegatingRecommendationEngine<Integer, Integer>();
      List<Filter<Integer, Integer>> list0 = topLevelDelegatingRecommendationEngine0.filters();
      LinkedList<RecommendationEngine<Integer, Integer>> linkedList0 = new LinkedList<RecommendationEngine<Integer, Integer>>();
      linkedList0.add((RecommendationEngine<Integer, Integer>) topLevelDelegatingRecommendationEngine0);
      topLevelDelegatingRecommendationEngine0.addEngines(linkedList0);
      Integer integer0 = new Integer((-1029));
      SimpleConfig simpleConfig0 = new SimpleConfig(758);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FilteringContext<Integer, Integer> filteringContext0 = new FilteringContext<Integer, Integer>(integer0, simpleConfig0, list0, linkedHashSet0);
      // Undeclared exception!
      try { 
        topLevelDelegatingRecommendationEngine0.recommend(integer0, filteringContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TopLevelDelegatingRecommendationEngine<Integer, Integer> topLevelDelegatingRecommendationEngine0 = new TopLevelDelegatingRecommendationEngine<Integer, Integer>();
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        topLevelDelegatingRecommendationEngine0.recommend(integer0, (Context<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphaware.reco.generic.engine.BaseRecommendationEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DelegatingRecommendationEngine<Integer, Recommendation<Integer>> delegatingRecommendationEngine0 = new DelegatingRecommendationEngine<Integer, Recommendation<Integer>>();
      ParticipationPolicy<Integer, Recommendation<Integer>> participationPolicy0 = delegatingRecommendationEngine0.participationPolicy((Context<Integer, Recommendation<Integer>>) null);
      assertNotNull(participationPolicy0);
  }
}
