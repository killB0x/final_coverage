/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 03:27:39 GMT 2022
 */

package com.graphaware.reco.generic.result;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphaware.reco.generic.result.PartialScore;
import com.graphaware.reco.generic.result.Reason;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PartialScore_ESTest extends PartialScore_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PartialScore partialScore0 = new PartialScore();
      Set<Reason> set0 = partialScore0.getReasons();
      float float0 = 0.0F;
      partialScore0.add(1.0F);
      hashMap0.put("[Assertion failed] - this expression must be true", set0);
      partialScore0.add(0.0F, (Map<String, ?>) hashMap0);
      partialScore0.add(0.0F);
      // Undeclared exception!
      try { 
        partialScore0.add((-582.10565F), (Map<String, ?>) hashMap0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore((-227.27309F));
      partialScore0.toString();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.putIfAbsent("-227.27309", partialScore0);
      hashMap0.remove((Object) partialScore0);
      partialScore0.setNewValue((-227.27309F), hashMap0);
      Set<Reason> set0 = partialScore0.getReasons();
      partialScore0.getReasons();
      hashMap0.put("-227.27309", set0);
      partialScore0.toString();
      float float0 = 709.638F;
      partialScore0.add(float0, (Map<String, ?>) hashMap0);
      partialScore0.getReasons();
      partialScore0.getValue();
      float float1 = 1104.0F;
      partialScore0.add(float1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      HashMap<String, Reason> hashMap0 = new HashMap<String, Reason>();
      hashMap0.put("", (Reason) null);
      partialScore0.setNewValue(0.0F, hashMap0);
      partialScore0.add(0.0F);
      partialScore0.toString();
      partialScore0.add(0.0F);
      partialScore0.getValue();
      partialScore0.setNewValue((-5104.09F), hashMap0);
      PartialScore partialScore1 = new PartialScore();
      hashMap0.replace("{value:0.0, {value:-0.0, :null}}", (Reason) null, (Reason) null);
      partialScore1.setNewValue((-1040.505F), hashMap0);
      partialScore1.add((-2459.0F));
      partialScore0.add(partialScore1);
      partialScore1.add(0.0F);
      partialScore1.add(3316.84F);
      partialScore1.getValue();
      partialScore0.setNewValue((-182.6648F), hashMap0);
      partialScore1.setNewValue((-1684.0F), hashMap0);
      partialScore0.getValue();
      partialScore0.getValue();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Reason reason0 = new Reason(310.6F, hashMap0);
      hashMap1.put("{value:0.0, {value:-0.0, :null}}", reason0);
      partialScore0.setNewValue(594.645F, hashMap1);
      partialScore0.add(1.0F);
      partialScore0.add((-182.6648F));
      assertNotSame(partialScore0, partialScore1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PartialScore partialScore0 = new PartialScore(678.56946F, hashMap0);
      partialScore0.add(partialScore0);
      String string0 = partialScore0.toString();
      assertEquals("{value:1357.1389, {value:678.56946}}", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.values();
      hashMap0.put("k6yy{uwuK.?H K", "k6yy{uwuK.?H K");
      PartialScore partialScore0 = new PartialScore(745.92694F, hashMap0);
      partialScore0.setNewValue(745.92694F, hashMap0);
      partialScore0.toString();
      hashMap0.put("{value:745.92694, {value:-0.0, k6yy{uwuK.?H K:k6yy{uwuK.?H K}, {value:745.92694, k6yy{uwuK.?H K:k6yy{uwuK.?H K}}", partialScore0);
      partialScore0.getReasons();
      partialScore0.add(745.92694F);
      partialScore0.add(1.0F);
      partialScore0.getValue();
      partialScore0.getReasons();
      partialScore0.add(1.0F);
      partialScore0.add(0.0F, (Map<String, ?>) hashMap0);
      partialScore0.add(1492.8539F, (Map<String, ?>) hashMap0);
      partialScore0.setNewValue(1436.951F, hashMap0);
      Set<Reason> set0 = partialScore0.getReasons();
      assertEquals(5, set0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore(1.0F);
      partialScore0.toString();
      partialScore0.toString();
      HashMap<String, Reason> hashMap0 = new HashMap<String, Reason>();
      partialScore0.add(0.0F, (Map<String, ?>) hashMap0);
      HashMap<String, Reason> hashMap1 = new HashMap<String, Reason>();
      partialScore0.setNewValue(1.0F, hashMap1);
      partialScore0.toString();
      PartialScore partialScore1 = new PartialScore();
      partialScore0.add(partialScore1);
      Reason reason0 = new Reason(1242.2871F, hashMap1);
      hashMap1.getOrDefault((Object) null, reason0);
      partialScore0.getReasons();
      partialScore0.add(0.0F, (Map<String, ?>) hashMap1);
      partialScore0.getValue();
      partialScore0.add(1.0F);
      assertNotSame(partialScore0, partialScore1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PartialScore partialScore0 = new PartialScore(678.56946F, hashMap0);
      String string0 = partialScore0.toString();
      assertEquals("{value:678.56946, {value:678.56946}}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore(2189.94F);
      partialScore0.toString();
      PartialScore partialScore1 = new PartialScore(558.9561F);
      PartialScore partialScore2 = new PartialScore(2189.94F);
      partialScore0.add(partialScore2);
      partialScore1.add(partialScore0);
      partialScore1.add((-3832.6392F));
      partialScore1.getValue();
      partialScore0.add(partialScore1);
      HashMap<String, Reason> hashMap0 = new HashMap<String, Reason>();
      partialScore0.add((-3832.6392F), (Map<String, ?>) hashMap0);
      partialScore1.add((-3832.6392F));
      assertNotSame(partialScore1, partialScore0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      String string0 = partialScore0.toString();
      assertEquals("0.0", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      // Undeclared exception!
      try { 
        partialScore0.add((PartialScore) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphaware.reco.generic.result.PartialScore", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      PartialScore partialScore1 = new PartialScore(0.0F);
      partialScore0.add(partialScore1);
      assertNotSame(partialScore1, partialScore0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      Set<Reason> set0 = partialScore0.getReasons();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      PartialScore partialScore1 = new PartialScore();
      HashMap<String, Reason> hashMap0 = new HashMap<String, Reason>();
      Reason reason0 = new Reason((-1417.543F), hashMap0);
      hashMap0.put("Vnf$Y!8w\"2jJ-NOC", reason0);
      partialScore0.setNewValue(1980.738F, hashMap0);
      partialScore0.setNewValue(1980.738F, hashMap0);
      partialScore1.getValue();
      partialScore0.add(partialScore1);
      PartialScore partialScore2 = new PartialScore();
      partialScore0.add(partialScore2);
      partialScore0.getValue();
      partialScore2.add(1980.738F);
      assertNotSame(partialScore2, partialScore0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      partialScore0.getValue();
      Set<Reason> set0 = partialScore0.getReasons();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore((-1855.2783F));
      HashMap<String, Reason> hashMap0 = new HashMap<String, Reason>();
      partialScore0.add((-2736.0F), (Map<String, ?>) hashMap0);
      partialScore0.setNewValue((-1855.2783F), hashMap0);
      float float0 = partialScore0.getValue();
      assertEquals((-1855.2783F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      HashMap<String, Reason> hashMap0 = new HashMap<String, Reason>();
      partialScore0.setNewValue(328.924F, hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PartialScore partialScore0 = new PartialScore(682.79F, hashMap0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore();
      HashMap<String, Reason> hashMap0 = new HashMap<String, Reason>();
      BiFunction<Object, Reason, Reason> biFunction0 = (BiFunction<Object, Reason, Reason>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any(com.graphaware.reco.generic.result.Reason.class));
      hashMap0.compute("{cz>m3T7)jwAA<", biFunction0);
      partialScore0.add(2007.0F, (Map<String, ?>) hashMap0);
      partialScore0.setNewValue(2007.0F, hashMap0);
      partialScore0.add(1.0F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PartialScore partialScore0 = new PartialScore((-450.86F));
      Set<Reason> set0 = partialScore0.getReasons();
      assertTrue(set0.isEmpty());
  }
}
