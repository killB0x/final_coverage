/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 20:41:07 GMT 2022
 */

package cn.showcodes.promise;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import cn.showcodes.promise.DefaultPromise;
import java.util.function.BiConsumer;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractPromise_ESTest extends AbstractPromise_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BiConsumer<Consumer<Integer>, Consumer<Integer>> biConsumer0 = (BiConsumer<Consumer<Integer>, Consumer<Integer>>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      DefaultPromise<Integer, Integer> defaultPromise0 = new DefaultPromise<Integer, Integer>(biConsumer0);
  }
}
