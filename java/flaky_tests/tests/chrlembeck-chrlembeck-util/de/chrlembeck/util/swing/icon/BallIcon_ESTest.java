/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 18:14:40 GMT 2022
 */

package de.chrlembeck.util.swing.icon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.chrlembeck.util.swing.icon.BallIcon;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.DebugGraphics;
import javax.swing.JRadioButton;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BallIcon_ESTest extends BallIcon_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Color color0 = Color.blue;
      BufferedImage bufferedImage0 = new BufferedImage(15, 206, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BallIcon.paintSphere(graphics2D0, 1, 1, (-1.0F), color0, false);
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Color color0 = Color.lightGray;
      Character character0 = Character.valueOf('\'');
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont("", 0, 0);
      BallIcon ballIcon0 = new BallIcon(1605, color0, 176.0F, color0, character0, color0, font0, false);
      int int0 = ballIcon0.getSize();
      assertEquals(1605, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.controlText;
      Character character0 = Character.valueOf(';');
      Font font0 = Font.decode("");
      BallIcon ballIcon0 = new BallIcon((-1), systemColor0, (-1), systemColor0, character0, systemColor0, font0, false);
      int int0 = ballIcon0.getSize();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Color color0 = Color.BLACK;
      Character character0 = Character.valueOf('M');
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      BallIcon ballIcon0 = new BallIcon(3, color0, 3, color0, character0, color0, font0, true);
      int int0 = ballIcon0.getIconWidth();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Color color0 = Color.CYAN;
      Character character0 = Character.valueOf('-');
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      AttributeSet attributeSet0 = SimpleAttributeSet.EMPTY;
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(attributeSet0);
      Font font0 = styleContext0.getFont((AttributeSet) styleContext_SmallAttributeSet0);
      BallIcon ballIcon0 = new BallIcon((-313), color0, (-313), color0, character0, color0, font0, true);
      int int0 = ballIcon0.getIconWidth();
      assertEquals((-313), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Character character0 = Character.valueOf('#');
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      Font font0 = defaultStyledDocument0.getFont(styleContext_NamedStyle0);
      BallIcon ballIcon0 = new BallIcon(0, (Color) null, 0, (Color) null, character0, (Color) null, font0, false);
      int int0 = ballIcon0.getIconHeight();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Color color0 = Color.CYAN;
      Character character0 = Character.valueOf('-');
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      AttributeSet attributeSet0 = SimpleAttributeSet.EMPTY;
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(attributeSet0);
      Font font0 = styleContext0.getFont((AttributeSet) styleContext_SmallAttributeSet0);
      BallIcon ballIcon0 = new BallIcon((-313), color0, (-313), color0, character0, color0, font0, true);
      int int0 = ballIcon0.getIconHeight();
      assertEquals((-313), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Character character0 = Character.valueOf('');
      BallIcon ballIcon0 = new BallIcon((-781), (Color) null, (-781), (Color) null, character0, (Color) null, (Font) null, false);
      ballIcon0.getColor();
      assertEquals((-781), ballIcon0.getIconHeight());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Color color0 = Color.DARK_GRAY;
      BallIcon ballIcon0 = new BallIcon(1, color0, 1, color0, (Character) null, color0, (Font) null, false);
      ballIcon0.getColor();
      assertEquals(1, ballIcon0.getIconWidth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.controlText;
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("p@vXR~APdX", (-462), (-462));
      BallIcon ballIcon0 = new BallIcon(0, systemColor0, 2152.07F, systemColor0, (Character) null, systemColor0, font0, false);
      ballIcon0.getColor();
      assertEquals(0, ballIcon0.getIconHeight());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Character character0 = Character.valueOf('$');
      HashMap<AttributedCharacterIterator.Attribute, Integer> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Integer>();
      Font font0 = new Font(hashMap0);
      BallIcon ballIcon0 = new BallIcon(0, (Color) null, 0, (Color) null, character0, (Color) null, font0, false);
      ballIcon0.getBorderColor();
      assertEquals(0, ballIcon0.getSize());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      Character character0 = Character.valueOf('8');
      BallIcon ballIcon0 = new BallIcon(3009, color0, 3009, color0, character0, color0, (Font) null, false);
      ballIcon0.getBorderColor();
      assertEquals(3009, ballIcon0.getIconWidth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      SystemColor systemColor1 = SystemColor.textHighlight;
      Character character0 = Character.valueOf('J');
      Hashtable<AttributedCharacterIterator.Attribute, Object> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, Object>();
      Font font0 = new Font(hashtable0);
      BallIcon ballIcon0 = new BallIcon(1, systemColor0, 1, systemColor1, character0, systemColor0, font0, true);
      Color color0 = ballIcon0.getBorderColor();
      assertEquals(0, color0.getGreen());
      assertEquals(1, ballIcon0.getSize());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Color color0 = Color.GREEN;
      Color color1 = new Color(1957, true);
      Character character0 = Character.valueOf('b');
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont("", 1108, 1957);
      BallIcon ballIcon0 = new BallIcon(1957, color0, 1957, color1, character0, color1, font0, true);
      Color color2 = ballIcon0.getBorderColor();
      assertEquals(1957, ballIcon0.getIconHeight());
      assertEquals(1957, color2.getRGB());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        BallIcon.paintSphere((Graphics2D) null, 0.0F, 0.0F, 0.0F, (Color) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.chrlembeck.util.swing.icon.BallIcon", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Color color0 = Color.PINK;
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        BallIcon.paintSphere(graphics2D0, (-1.0F), (-1.0F), (-1.0F), color0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Radius must be greater than zero
         //
         verifyException("java.awt.RadialGradientPaint", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BallIcon ballIcon0 = new BallIcon('^', (Color) null, 0.0F, (Color) null, (Character) null, (Color) null, (Font) null, true);
      BufferedImage bufferedImage0 = new BufferedImage(1, '^', 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        ballIcon0.paintIcon((Component) null, graphics2D0, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.MultipleGradientPaint", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Color color0 = Color.PINK;
      BallIcon ballIcon0 = new BallIcon(1, color0, 1, color0, (Character) null, color0, (Font) null, true);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JRadioButton jRadioButton0 = new JRadioButton();
      // Undeclared exception!
      try { 
        ballIcon0.paintIcon(jRadioButton0, graphics2D0, 1, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Radius must be greater than zero
         //
         verifyException("java.awt.RadialGradientPaint", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Color color0 = Color.CYAN;
      BallIcon ballIcon0 = new BallIcon(1, color0, 0.0F, color0, (Character) null, color0, (Font) null, false);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JRadioButton jRadioButton0 = new JRadioButton();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0, jRadioButton0);
      // Undeclared exception!
      try { 
        ballIcon0.paintIcon(jRadioButton0, debugGraphics0, 1, 495573165);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class javax.swing.DebugGraphics cannot be cast to class java.awt.Graphics2D (javax.swing.DebugGraphics and java.awt.Graphics2D are in module java.desktop of loader 'bootstrap')
         //
         verifyException("de.chrlembeck.util.swing.icon.BallIcon", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Character character0 = Character.valueOf('^');
      Color color0 = Color.cyan;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JRadioButton jRadioButton0 = new JRadioButton();
      BallIcon ballIcon0 = new BallIcon(1, color0, 0.3F, (Color) null, character0, color0, (Font) null, false);
      ballIcon0.paintIcon(jRadioButton0, graphics2D0, 1952257861, 4924);
      assertEquals(1, ballIcon0.getIconWidth());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Character character0 = Character.valueOf('^');
      Color color0 = Color.cyan;
      BallIcon ballIcon0 = new BallIcon(2145840003, color0, 0.4F, color0, character0, color0, (Font) null, true);
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JRadioButton jRadioButton0 = new JRadioButton();
      ballIcon0.paintIcon(jRadioButton0, graphics2D0, 1952257861, 4924);
      assertEquals(2145840003, ballIcon0.getIconHeight());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Color color0 = Color.CYAN;
      BallIcon ballIcon0 = new BallIcon(1, color0, 0.0F, color0, (Character) null, color0, (Font) null, true);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JRadioButton jRadioButton0 = new JRadioButton();
      ballIcon0.paintIcon(jRadioButton0, graphics2D0, 1, 1);
      assertFalse(jRadioButton0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.controlText;
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("p@vXR~APdX", (-462), (-462));
      BallIcon ballIcon0 = new BallIcon(0, systemColor0, 2152.07F, systemColor0, (Character) null, systemColor0, font0, false);
      int int0 = ballIcon0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Color color0 = Color.GREEN;
      Character character0 = Character.valueOf('b');
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont("", 1108, 1957);
      BallIcon ballIcon0 = new BallIcon(1957, color0, 1957, color0, character0, color0, font0, true);
      ballIcon0.getBorderColor();
      assertEquals(1957, ballIcon0.getIconHeight());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Color color0 = Color.blue;
      Character character0 = Character.valueOf('8');
      BallIcon ballIcon0 = new BallIcon(0, color0, 0.0F, color0, character0, color0, (Font) null, true);
      int int0 = ballIcon0.getIconWidth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      Character character0 = Character.valueOf('J');
      Hashtable<AttributedCharacterIterator.Attribute, Object> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, Object>();
      Font font0 = new Font(hashtable0);
      BallIcon ballIcon0 = new BallIcon(1, systemColor0, 1, systemColor0, character0, systemColor0, font0, true);
      int int0 = ballIcon0.getIconHeight();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Color color0 = Color.CYAN;
      BallIcon ballIcon0 = new BallIcon(1, color0, 1961.786F, color0, (Character) null, color0, (Font) null, false);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JRadioButton jRadioButton0 = new JRadioButton();
      ballIcon0.paintIcon(jRadioButton0, graphics2D0, 1, 1);
      assertFalse(jRadioButton0.isFocusTraversalPolicyProvider());
  }
}
