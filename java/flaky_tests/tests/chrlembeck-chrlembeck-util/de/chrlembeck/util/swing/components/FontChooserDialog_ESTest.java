/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 18:01:10 GMT 2022
 */

package de.chrlembeck.util.swing.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.chrlembeck.util.swing.components.FontChooserDialog;
import java.awt.Dialog;
import java.awt.Font;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.Window;
import javax.swing.JPasswordField;
import javax.swing.JTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FontChooserDialog_ESTest extends FontChooserDialog_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper(1691);
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper1 = new FontChooserDialog.StyleWrapper(2);
      boolean boolean0 = fontChooserDialog_StyleWrapper1.equals(fontChooserDialog_StyleWrapper0);
      assertEquals("Kursiv", fontChooserDialog_StyleWrapper1.toString());
      assertFalse(boolean0);
      assertFalse(fontChooserDialog_StyleWrapper0.equals((Object)fontChooserDialog_StyleWrapper1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("3D;rT0=Vs");
      Font font0 = Font.decode("3D;rT0=Vs");
      // Undeclared exception!
      try { 
        FontChooserDialog.openFontDialog(jPasswordField0, "3D;rT0=Vs", font0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper(601);
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper1 = new FontChooserDialog.StyleWrapper((-1238));
      boolean boolean0 = fontChooserDialog_StyleWrapper0.equals(fontChooserDialog_StyleWrapper1);
      assertEquals("-1238", fontChooserDialog_StyleWrapper1.toString());
      assertFalse(boolean0);
      assertFalse(fontChooserDialog_StyleWrapper1.equals((Object)fontChooserDialog_StyleWrapper0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper(1691);
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper1 = new FontChooserDialog.StyleWrapper(1691);
      boolean boolean0 = fontChooserDialog_StyleWrapper1.equals(fontChooserDialog_StyleWrapper0);
      assertEquals("1691", fontChooserDialog_StyleWrapper1.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FontChooserDialog.SizeWrapper fontChooserDialog_SizeWrapper0 = new FontChooserDialog.SizeWrapper((-1.6561615F));
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper((-1238));
      boolean boolean0 = fontChooserDialog_StyleWrapper0.equals(fontChooserDialog_SizeWrapper0);
      assertFalse(boolean0);
      assertEquals((-1238), fontChooserDialog_StyleWrapper0.getStyle());
      assertEquals((-1.6561615F), fontChooserDialog_SizeWrapper0.getSize(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper((-2358));
      boolean boolean0 = fontChooserDialog_StyleWrapper0.equals(fontChooserDialog_StyleWrapper0);
      assertTrue(boolean0);
      assertEquals("-2358", fontChooserDialog_StyleWrapper0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper(663);
      boolean boolean0 = fontChooserDialog_StyleWrapper0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(663, fontChooserDialog_StyleWrapper0.getStyle());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper(1923);
      String string0 = fontChooserDialog_StyleWrapper0.toString();
      assertEquals("1923", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper(0);
      String string0 = fontChooserDialog_StyleWrapper0.toString();
      assertEquals("Normal", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FontChooserDialog.SizeWrapper fontChooserDialog_SizeWrapper0 = new FontChooserDialog.SizeWrapper(0.0F);
      String string0 = fontChooserDialog_SizeWrapper0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FontChooserDialog.SizeWrapper fontChooserDialog_SizeWrapper0 = new FontChooserDialog.SizeWrapper(0.0F);
      float float0 = fontChooserDialog_SizeWrapper0.getSize();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Font font0 = Font.decode("");
      FontChooserDialog fontChooserDialog0 = null;
      try {
        fontChooserDialog0 = new FontChooserDialog("", font0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.APPLICATION_MODAL;
      FontChooserDialog fontChooserDialog0 = null;
      try {
        fontChooserDialog0 = new FontChooserDialog((Frame) null, "GULU@&Q1[i6XF", (Font) null, dialog_ModalityType0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Font font0 = Font.decode("OK");
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.TOOLKIT_MODAL;
      FontChooserDialog fontChooserDialog0 = null;
      try {
        fontChooserDialog0 = new FontChooserDialog((Dialog) null, "OK", font0, dialog_ModalityType0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[4];
      FontChooserDialog.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.TOOLKIT_MODAL;
      FontChooserDialog fontChooserDialog0 = null;
      try {
        fontChooserDialog0 = new FontChooserDialog((Window) null, "Q_^z^z|T$@;5kdut", (Font) null, dialog_ModalityType0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FontChooserDialog.StyleWrapper[] fontChooserDialog_StyleWrapperArray0 = FontChooserDialog.StyleWrapper.getStyles();
      JTree jTree0 = new JTree(fontChooserDialog_StyleWrapperArray0);
      assertEquals(4, fontChooserDialog_StyleWrapperArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FontChooserDialog.StyleWrapper fontChooserDialog_StyleWrapper0 = new FontChooserDialog.StyleWrapper((-2212));
      int int0 = fontChooserDialog_StyleWrapper0.getStyle();
      assertEquals((-2212), int0);
  }
}
