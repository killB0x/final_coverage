/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 18:25:07 GMT 2022
 */

package de.chrlembeck.util.swing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.chrlembeck.util.swing.SimpleDocumentListener;
import java.util.function.Consumer;
import javax.swing.event.DocumentEvent;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.PlainDocument;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleDocumentListener_ESTest extends SimpleDocumentListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleDocumentListener simpleDocumentListener0 = new SimpleDocumentListener((Consumer<DocumentEvent>) null);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.CHANGE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent((-1838), (-1838), documentEvent_EventType0);
      // Undeclared exception!
      try { 
        simpleDocumentListener0.removeUpdate(abstractDocument_DefaultDocumentEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.chrlembeck.util.swing.SimpleDocumentListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleDocumentListener simpleDocumentListener0 = new SimpleDocumentListener((Consumer<DocumentEvent>) null);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.CHANGE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent(0, 0, documentEvent_EventType0);
      // Undeclared exception!
      try { 
        simpleDocumentListener0.changedUpdate(abstractDocument_DefaultDocumentEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.chrlembeck.util.swing.SimpleDocumentListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Consumer<DocumentEvent> consumer0 = (Consumer<DocumentEvent>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SimpleDocumentListener simpleDocumentListener0 = new SimpleDocumentListener(consumer0);
      PlainDocument plainDocument0 = new PlainDocument();
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument0.new DefaultDocumentEvent(0, (-321), documentEvent_EventType0);
      simpleDocumentListener0.removeUpdate(abstractDocument_DefaultDocumentEvent0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Consumer<DocumentEvent> consumer0 = (Consumer<DocumentEvent>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SimpleDocumentListener simpleDocumentListener0 = new SimpleDocumentListener(consumer0);
      PlainDocument plainDocument0 = new PlainDocument();
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument0.new DefaultDocumentEvent(0, (-321), documentEvent_EventType0);
      simpleDocumentListener0.changedUpdate(abstractDocument_DefaultDocumentEvent0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Consumer<DocumentEvent> consumer0 = (Consumer<DocumentEvent>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SimpleDocumentListener simpleDocumentListener0 = new SimpleDocumentListener(consumer0);
      PlainDocument plainDocument0 = new PlainDocument();
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument0.new DefaultDocumentEvent(0, (-321), documentEvent_EventType0);
      simpleDocumentListener0.insertUpdate(abstractDocument_DefaultDocumentEvent0);
  }
}
