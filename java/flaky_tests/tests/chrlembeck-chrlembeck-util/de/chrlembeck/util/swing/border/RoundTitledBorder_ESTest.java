/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 18:15:53 GMT 2022
 */

package de.chrlembeck.util.swing.border;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.chrlembeck.util.swing.border.RoundTitledBorder;
import java.awt.Checkbox;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DebugGraphics;
import javax.swing.JCheckBox;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JLayer;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.JViewport;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.GapContent;
import javax.swing.text.LabelView;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RoundTitledBorder_ESTest extends RoundTitledBorder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Color color0 = Color.ORANGE;
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GapContent gapContent0 = new GapContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane();
      Element element0 = defaultStyledDocument0.getDefaultRootElement();
      LabelView labelView0 = new LabelView(element0);
      Font font0 = labelView0.getFont();
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, (-1582.565F), 1, "gyAgy?wy4k", color0, (Color) null, font0);
      // Undeclared exception!
      try { 
        roundTitledBorder0.paintBorder(jTextPane0, graphics2D0, 53, (-646), 1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative width
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      JPasswordField jPasswordField0 = new JPasswordField("de.chrlembeck.util.swing.formatter.FormatterInputVerifier", 0);
      Color color1 = jPasswordField0.getSelectionColor();
      HashMap<AttributedCharacterIterator.Attribute, Object> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Object>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, (-320.57593F), 10, "aun;6[", color1, color0, font0);
      Insets insets0 = roundTitledBorder0.getBorderInsets(jPasswordField0);
      assertEquals((-315), insets0.left);
      assertEquals((-938), insets0.top);
      assertEquals((-315), insets0.right);
      assertEquals((-315), insets0.bottom);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Color color0 = Color.GRAY;
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, (-11), 0, (String) null, color0, color0, (Font) null);
      BufferedImage bufferedImage0 = new BufferedImage(1, 2, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0);
      // Undeclared exception!
      try { 
        roundTitledBorder0.paintBorder((Component) null, debugGraphics0, (-2951), 1, (-1034), 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class javax.swing.DebugGraphics cannot be cast to class java.awt.Graphics2D (javax.swing.DebugGraphics and java.awt.Graphics2D are in module java.desktop of loader 'bootstrap')
         //
         verifyException("de.chrlembeck.util.swing.border.RoundTitledBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Color color0 = Color.ORANGE;
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, 2340.0F, 9, (String) null, color0, color0, (Font) null);
      JLayer<Checkbox> jLayer0 = new JLayer<Checkbox>();
      // Undeclared exception!
      try { 
        roundTitledBorder0.paintBorder(jLayer0, graphics2D0, 1, (-2809), 1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Color color0 = Color.red;
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, (-1.0F), 2552, (String) null, color0, color0, (Font) null);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem((String) null, false);
      BufferedImage bufferedImage0 = new BufferedImage(4, 1759, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JScrollPane jScrollPane0 = new JScrollPane(jCheckBoxMenuItem0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      // Undeclared exception!
      try { 
        roundTitledBorder0.paintBorder(jViewport0, graphics2D0, 0, 0, 4, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative width
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField((String) null, 0);
      Color color0 = jPasswordField0.getSelectionColor();
      HashMap<AttributedCharacterIterator.Attribute, Object> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Object>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, (-320.57593F), 0, "", color0, color0, font0);
      Insets insets0 = roundTitledBorder0.getBorderInsets(jPasswordField0);
      assertEquals((-320), insets0.left);
      assertEquals((-320), insets0.top);
      assertEquals((-320), insets0.right);
      assertEquals((-320), insets0.bottom);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Color color0 = DebugGraphics.flashColor();
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, (-11), (-11), "de.chrlembeck.util.swing.formatter.BackgroundModifier", color0, color0, (Font) null);
      JCheckBox jCheckBox0 = new JCheckBox("de.chrlembeck.util.swing.formatter.BackgroundModifier");
      // Undeclared exception!
      try { 
        roundTitledBorder0.getBorderInsets(jCheckBox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Color color0 = Color.ORANGE;
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, (-2), (-2), (String) null, color0, color0, (Font) null);
      boolean boolean0 = roundTitledBorder0.isBorderOpaque();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Color color0 = Color.ORANGE;
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GapContent gapContent0 = new GapContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane();
      Element element0 = defaultStyledDocument0.getDefaultRootElement();
      LabelView labelView0 = new LabelView(element0);
      Font font0 = labelView0.getFont();
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder((Color) null, 0.0F, 1, "o]5HiZOx&iqf3VH", color0, color0, font0);
      roundTitledBorder0.paintBorder(jTextPane0, graphics2D0, 53, (-646), 1, 0);
      assertTrue(jTextPane0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Color color0 = Color.RED;
      RoundTitledBorder roundTitledBorder0 = new RoundTitledBorder(color0, 1, 1, "{", color0, color0, (Font) null);
      // Undeclared exception!
      try { 
        roundTitledBorder0.isInTitle((JComponent) null, (Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.chrlembeck.util.swing.border.RoundTitledBorder", e);
      }
  }
}
