/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 21:59:00 GMT 2022
 */

package com.shedhack.thread.context.handler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.shedhack.thread.context.handler.SimpleThreadContextHandler;
import com.shedhack.thread.context.handler.ThreadContextAfterSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleThreadContextHandler_ESTest extends SimpleThreadContextHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleThreadContextHandler simpleThreadContextHandler0 = new SimpleThreadContextHandler((List<ThreadContextAfterSet>) null);
      // Undeclared exception!
      try { 
        simpleThreadContextHandler0.setThreadContext("/U");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.shedhack.thread.context.handler.ThreadContextHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<ThreadContextAfterSet> linkedList0 = new LinkedList<ThreadContextAfterSet>();
      SimpleThreadContextHandler simpleThreadContextHandler0 = new SimpleThreadContextHandler(linkedList0);
      Optional<String> optional0 = simpleThreadContextHandler0.convertFromString("TTQ&4");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleThreadContextHandler simpleThreadContextHandler0 = new SimpleThreadContextHandler();
      simpleThreadContextHandler0.setThreadContext("");
      assertEquals("TEST_EXECUTION_THREAD_1", simpleThreadContextHandler0.getRawContext());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleThreadContextHandler simpleThreadContextHandler0 = new SimpleThreadContextHandler();
      simpleThreadContextHandler0.setThreadContext((String) null);
      //  // Unstable assertion: assertEquals("TEST_EXECUTION_THREAD_1", simpleThreadContextHandler0.getRawContext());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<ThreadContextAfterSet> linkedList0 = new LinkedList<ThreadContextAfterSet>();
      SimpleThreadContextHandler simpleThreadContextHandler0 = new SimpleThreadContextHandler(linkedList0);
      Optional<String> optional0 = simpleThreadContextHandler0.getThreadContext();
      assertNotNull(optional0);
  }
}
