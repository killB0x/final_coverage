/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 02:24:35 GMT 2022
 */

package simplenlg.lexicon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.net.URI;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;
import simplenlg.framework.LexicalCategory;
import simplenlg.framework.WordElement;
import simplenlg.lexicon.XMLLexicon;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XMLLexicon_ESTest extends XMLLexicon_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = null;
      XMLLexicon xMLLexicon0 = null;
      try {
        xMLLexicon0 = new XMLLexicon((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.ADVERB;
      xMLLexicon0.lookupWord((String) null);
      xMLLexicon0.getWordFromVariant((String) null, lexicalCategory0);
      xMLLexicon0.lookupWord("%4 ");
      LexicalCategory lexicalCategory1 = LexicalCategory.MODAL;
      xMLLexicon0.getWords((String) null, lexicalCategory1);
      LexicalCategory lexicalCategory2 = LexicalCategory.VERB;
      xMLLexicon0.hasWord("EoU)D)J4eR0", lexicalCategory1);
      xMLLexicon0.getWordsFromVariant(", features={", lexicalCategory2);
      xMLLexicon0.getWordsByID("");
      xMLLexicon0.getWords((String) null, lexicalCategory0);
      xMLLexicon0.getWordsFromVariant((String) null, lexicalCategory0);
      xMLLexicon0.getWordsFromVariant("be", lexicalCategory0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon("");
      xMLLexicon0.getWordByID("");
      LexicalCategory lexicalCategory0 = LexicalCategory.MODAL;
      xMLLexicon0.hasWord("");
      xMLLexicon0.getWordsFromVariant("", lexicalCategory0);
      xMLLexicon0.getWordsByID("");
      xMLLexicon0.getWordsFromVariant("is", lexicalCategory0);
      xMLLexicon0.getWordsByID("");
      xMLLexicon0.getWordsByID("is");
      xMLLexicon0.getWordsByID("");
      xMLLexicon0.hasWord("oXy", lexicalCategory0);
      LexicalCategory lexicalCategory1 = LexicalCategory.SYMBOL;
      xMLLexicon0.getWords("", lexicalCategory1);
      xMLLexicon0.getWords("", lexicalCategory0);
      LexicalCategory lexicalCategory2 = LexicalCategory.PRONOUN;
      xMLLexicon0.getWordByID("z4n1@f,937|}-oy-S");
      xMLLexicon0.getWordsFromVariant("");
      xMLLexicon0.getWords("", lexicalCategory2);
      xMLLexicon0.getWords("", lexicalCategory0);
      xMLLexicon0.getWords("", lexicalCategory0);
      xMLLexicon0.getWordsByID("");
      xMLLexicon0.getWordsByID("is");
      LexicalCategory lexicalCategory3 = LexicalCategory.DETERMINER;
      xMLLexicon0.getWords("", lexicalCategory3);
      xMLLexicon0.getWordsFromVariant("", lexicalCategory1);
      LexicalCategory lexicalCategory4 = LexicalCategory.PREPOSITION;
      xMLLexicon0.getWordsFromVariant("", lexicalCategory4);
      xMLLexicon0.getWordsByID("");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      xMLLexicon0.lookupWord("java.lang.String@0000002225");
      MockFile mockFile0 = new MockFile("reflexive");
      MockFile mockFile1 = new MockFile(mockFile0, "er");
      XMLLexicon xMLLexicon1 = new XMLLexicon(mockFile1);
      xMLLexicon1.getWordsByID("E0018036");
      XMLLexicon xMLLexicon2 = new XMLLexicon("gender");
      XMLLexicon xMLLexicon3 = new XMLLexicon("reflexive");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.AUXILIARY;
      xMLLexicon0.getWordsByID("");
      xMLLexicon0.getWords("  <id>%s</id>%n", lexicalCategory0);
      xMLLexicon0.getWords("");
      LexicalCategory lexicalCategory1 = LexicalCategory.MODAL;
      xMLLexicon0.getWords("g}u|U", lexicalCategory1);
      xMLLexicon0.getWordsByID("  <id>%s</id>%n");
      xMLLexicon0.getWordsByID("g}u|U");
      xMLLexicon0.getWordsByID("  <id>%s</id>%n");
      xMLLexicon0.getWordsFromVariant("_rJl\"~)jx7<0@WVu(-y", lexicalCategory0);
      LexicalCategory lexicalCategory2 = LexicalCategory.SYMBOL;
      xMLLexicon0.getWordsFromVariant("", lexicalCategory2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      xMLLexicon0.hasWord("|COl");
      xMLLexicon0.getWordByID("E0018036");
      LexicalCategory lexicalCategory0 = LexicalCategory.NOUN;
      xMLLexicon0.getWordsFromVariant("present3s", lexicalCategory0);
      xMLLexicon0.getWordFromVariant("they", lexicalCategory0);
      xMLLexicon0.getWordsByID("commitment");
      xMLLexicon0.getWordsFromVariant((String) null);
      LexicalCategory lexicalCategory1 = LexicalCategory.AUXILIARY;
      xMLLexicon0.getWords(".NL$Ucnl,|&XXaiho", lexicalCategory1);
      xMLLexicon0.getWordsByID("(8 ");
      xMLLexicon0.lookupWord("L@", lexicalCategory1);
      xMLLexicon0.getWordsFromVariant("er", lexicalCategory0);
      LexicalCategory lexicalCategory2 = LexicalCategory.DETERMINER;
      xMLLexicon0.lookupWord("committing", lexicalCategory2);
      xMLLexicon0.hasWordFromVariant("L3-M13sgu*g.2+B");
      LexicalCategory lexicalCategory3 = LexicalCategory.SYMBOL;
      xMLLexicon0.getWords("X 3{s#,Pl{k8}*f-O", lexicalCategory3);
      xMLLexicon0.getWordsByID("E0018036");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile(".JN5d", ".JN5d");
      XMLLexicon xMLLexicon0 = new XMLLexicon(file0);
      XMLLexicon xMLLexicon1 = new XMLLexicon();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("acronym_of", "tense");
      mockFile0.toURI();
      mockFile0.deleteOnExit();
      mockFile0.deleteOnExit();
      XMLLexicon xMLLexicon0 = new XMLLexicon(mockFile0);
      xMLLexicon0.hasWordByID("tense");
      LexicalCategory lexicalCategory0 = LexicalCategory.ADJECTIVE;
      xMLLexicon0.getWordFromVariant("", lexicalCategory0);
      xMLLexicon0.getWordsByID("fB.-RF");
      LexicalCategory lexicalCategory1 = LexicalCategory.SYMBOL;
      xMLLexicon0.lookupWord("fB.-RF", lexicalCategory1);
      xMLLexicon0.getWordsByID("acronym_of");
      xMLLexicon0.getWordByID((String) null);
      LexicalCategory lexicalCategory2 = LexicalCategory.SYMBOL;
      xMLLexicon0.getWords("acronym_of", lexicalCategory2);
      xMLLexicon0.getWordsFromVariant((String) null, lexicalCategory2);
      xMLLexicon0.getWordsFromVariant((String) null, lexicalCategory2);
      mockFile0.delete();
      mockFile0.setExecutable(true, false);
      xMLLexicon0.getWordsByID("_rLoZ1&~bq2");
      LexicalCategory lexicalCategory3 = LexicalCategory.CONJUNCTION;
      mockFile0.setExecutable(false);
      xMLLexicon0.getWordsFromVariant("6", lexicalCategory3);
      xMLLexicon0.getWordsByID("acronym_of");
      xMLLexicon0.getWordsByID("h@.b<1Hx0@P");
      LexicalCategory lexicalCategory4 = LexicalCategory.PREPOSITION;
      xMLLexicon0.getWordsFromVariant("fB.-RF", lexicalCategory4);
      xMLLexicon0.getWords((String) null, lexicalCategory3);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      xMLLexicon0.getWordsByID("x");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.relativize(uRI0, uRI0);
      XMLLexicon xMLLexicon0 = new XMLLexicon(uRI1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon("id");
      LexicalCategory lexicalCategory0 = LexicalCategory.COMPLEMENTISER;
      xMLLexicon0.getWordsFromVariant("id", lexicalCategory0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          URI uRI0 = MockURI.aHttpURI;
          XMLLexicon xMLLexicon0 = new XMLLexicon(uRI0);
          xMLLexicon0.getWord("");
          LexicalCategory lexicalCategory0 = LexicalCategory.AUXILIARY;
          List<WordElement> list0 = xMLLexicon0.getWordsFromVariant("", lexicalCategory0);
          assertEquals(0, list0.size());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
