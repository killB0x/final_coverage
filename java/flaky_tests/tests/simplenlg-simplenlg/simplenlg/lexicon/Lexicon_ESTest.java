/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 02:35:48 GMT 2022
 */

package simplenlg.lexicon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import simplenlg.features.Tense;
import simplenlg.framework.LexicalCategory;
import simplenlg.framework.WordElement;
import simplenlg.lexicon.Lexicon;
import simplenlg.lexicon.MultipleLexicon;
import simplenlg.lexicon.NIHDBLexicon;
import simplenlg.lexicon.XMLLexicon;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Lexicon_ESTest extends Lexicon_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Lexicon lexicon0 = Lexicon.getDefaultLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.DETERMINER;
      List<WordElement> list0 = lexicon0.getWordsFromVariant((String) null, lexicalCategory0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.ANY;
      List<WordElement> list0 = xMLLexicon0.getWordsFromVariant("colour", lexicalCategory0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      List<WordElement> list0 = xMLLexicon0.getWordsFromVariant("colour");
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      List<WordElement> list0 = multipleLexicon0.getWordsByID("");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.DETERMINER;
      List<WordElement> list0 = multipleLexicon0.getWords("#A~", lexicalCategory0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      Lexicon[] lexiconArray0 = new Lexicon[1];
      lexiconArray0[0] = (Lexicon) xMLLexicon0;
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      List<WordElement> list0 = multipleLexicon0.getWords("colour");
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.AUXILIARY;
      WordElement wordElement0 = multipleLexicon0.getWord((String) null, lexicalCategory0);
      assertEquals(Tense.PRESENT, wordElement0.getTense());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[0];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.NOUN;
      WordElement wordElement0 = multipleLexicon0.createWord("colour", lexicalCategory0);
      assertEquals("colour", wordElement0.getBaseForm());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      WordElement wordElement0 = multipleLexicon0.createWord("7T(<");
      assertNull(wordElement0.getId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      LexicalCategory lexicalCategory0 = LexicalCategory.COMPLEMENTISER;
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.lookupWord(",", lexicalCategory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LexicalCategory lexicalCategory0 = LexicalCategory.ADJECTIVE;
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("Q?}z", "", "eU", (String) null);
      // Undeclared exception!
      try { 
        nIHDBLexicon0.lookupWord((String) null, lexicalCategory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.lookupWord("(xH.pl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("8QK1[8*r*");
      multipleLexicon0.addFinalLexicon(nIHDBLexicon0);
      // Undeclared exception!
      try { 
        multipleLexicon0.lookupWord("/5}SSp/}Fjge-'G");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.PREPOSITION;
      // Undeclared exception!
      try { 
        multipleLexicon0.hasWordFromVariant("dcolour", lexicalCategory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("colour", "colour", "colour", "colour");
      LexicalCategory lexicalCategory0 = LexicalCategory.AUXILIARY;
      // Undeclared exception!
      try { 
        nIHDBLexicon0.hasWordFromVariant("colour", lexicalCategory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("wx^");
      multipleLexicon0.addInitialLexicon(nIHDBLexicon0);
      // Undeclared exception!
      try { 
        multipleLexicon0.hasWordFromVariant("0WZE.{f8[3Lj");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("9dhj[6]NM+J");
      // Undeclared exception!
      try { 
        nIHDBLexicon0.hasWordByID((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.MODAL;
      // Undeclared exception!
      try { 
        multipleLexicon0.hasWord("colour", lexicalCategory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("fPW");
      LexicalCategory lexicalCategory0 = LexicalCategory.SYMBOL;
      // Undeclared exception!
      try { 
        nIHDBLexicon0.hasWord("A]%ZwmZ1(qd,JA0bp5", lexicalCategory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.hasWord("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon(">,N%Ht=");
      // Undeclared exception!
      try { 
        nIHDBLexicon0.hasWord(">,N%Ht=");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.PREPOSITION;
      multipleLexicon0.addFinalLexicon(multipleLexicon0);
      // Undeclared exception!
      multipleLexicon0.getWordsFromVariant("", lexicalCategory0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.VERB;
      // Undeclared exception!
      try { 
        multipleLexicon0.getWordsFromVariant("", lexicalCategory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      Lexicon[] lexiconArray0 = new Lexicon[6];
      lexiconArray0[0] = (Lexicon) multipleLexicon0;
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("");
      lexiconArray0[1] = (Lexicon) nIHDBLexicon0;
      MultipleLexicon multipleLexicon1 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.VERB;
      // Undeclared exception!
      try { 
        multipleLexicon1.getWordsFromVariant("", lexicalCategory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[6];
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("");
      lexiconArray0[0] = (Lexicon) nIHDBLexicon0;
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.getWordsFromVariant("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon((String) null, "wzz)p", "colour", "simplenlg.lexicon.Lexicon");
      lexiconArray0[0] = (Lexicon) nIHDBLexicon0;
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.getWordsByID((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("tNW");
      LexicalCategory lexicalCategory0 = LexicalCategory.PREPOSITION;
      // Undeclared exception!
      try { 
        nIHDBLexicon0.getWords("tNW", lexicalCategory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      multipleLexicon0.addInitialLexicon(multipleLexicon0);
      // Undeclared exception!
      multipleLexicon0.getWords("");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      multipleLexicon0.addInitialLexicon((Lexicon) null);
      // Undeclared exception!
      try { 
        multipleLexicon0.getWords("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("simplenlg.lexicon.Lexicon", "simplenlg.lexicon.Lexicon", "b*{CFC,|\"NYo.M", "b*{CFC,|\"NYo.M");
      // Undeclared exception!
      try { 
        nIHDBLexicon0.getWords("b*{CFC,|\"NYo.M");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      multipleLexicon0.addInitialLexicon(multipleLexicon0);
      LexicalCategory lexicalCategory0 = LexicalCategory.ANY;
      // Undeclared exception!
      multipleLexicon0.getWordFromVariant("simplenlg.lexicon.Lexicon", lexicalCategory0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.MODAL;
      // Undeclared exception!
      try { 
        multipleLexicon0.getWordFromVariant("", lexicalCategory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon((String) null, "", "spell_vars", "");
      LexicalCategory lexicalCategory0 = LexicalCategory.PRONOUN;
      // Undeclared exception!
      try { 
        nIHDBLexicon0.getWordFromVariant((String) null, lexicalCategory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.getWordFromVariant("colour");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("tht");
      // Undeclared exception!
      try { 
        nIHDBLexicon0.getWordFromVariant("nu5`");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.getWordByID("our");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.lexicon.MultipleLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("");
      // Undeclared exception!
      try { 
        nIHDBLexicon0.getWordByID("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.PRONOUN;
      multipleLexicon0.addFinalLexicon(multipleLexicon0);
      // Undeclared exception!
      multipleLexicon0.getWord("}gh!`nW00J", lexicalCategory0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("simplenlg.lexicon.Lexicon", "simplenlg.lexicon.Lexicon", (String) null, (String) null);
      LexicalCategory lexicalCategory0 = LexicalCategory.DETERMINER;
      // Undeclared exception!
      try { 
        nIHDBLexicon0.getWord((String) null, lexicalCategory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.getWord("colour");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NIHDBLexicon nIHDBLexicon0 = new NIHDBLexicon("j&ng'56QyY*", "simplenlg.framework.PhraseCategory", "colour", "l:f");
      // Undeclared exception!
      try { 
        nIHDBLexicon0.getWord("CKt(B~_gWf");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gov/nih/nlm/nls/lexAccess/Api/LexAccessApi
         //
         verifyException("simplenlg.lexicon.NIHDBLexicon", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "");
      XMLLexicon xMLLexicon0 = new XMLLexicon(mockFile0);
      LexicalCategory lexicalCategory0 = LexicalCategory.COMPLEMENTISER;
      boolean boolean0 = xMLLexicon0.hasWordFromVariant("", lexicalCategory0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      boolean boolean0 = multipleLexicon0.hasWordByID("simplenlg.lexicon.Lexicon");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      Lexicon[] lexiconArray0 = new Lexicon[1];
      lexiconArray0[0] = (Lexicon) xMLLexicon0;
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.VERB;
      boolean boolean0 = multipleLexicon0.hasWord("colour", lexicalCategory0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.ADJECTIVE;
      boolean boolean0 = multipleLexicon0.hasWord("", lexicalCategory0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      Lexicon[] lexiconArray0 = new Lexicon[1];
      lexiconArray0[0] = (Lexicon) xMLLexicon0;
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      LexicalCategory lexicalCategory0 = LexicalCategory.ANY;
      WordElement wordElement0 = multipleLexicon0.lookupWord("colour", lexicalCategory0);
      assertFalse(wordElement0.isNegated());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.ADJECTIVE;
      WordElement wordElement0 = multipleLexicon0.lookupWord((String) null, lexicalCategory0);
      assertNull(wordElement0.getId());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon("");
      List<WordElement> list0 = xMLLexicon0.getWordsFromVariant("THK`\";03_,T`fd");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon("");
      List<WordElement> list0 = xMLLexicon0.getWords("");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      Lexicon[] lexiconArray0 = new Lexicon[1];
      lexiconArray0[0] = (Lexicon) xMLLexicon0;
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      boolean boolean0 = multipleLexicon0.hasWordFromVariant("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      boolean boolean0 = xMLLexicon0.hasWordFromVariant("colour");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      WordElement wordElement0 = xMLLexicon0.getWordFromVariant("m?[e}*");
      assertEquals(Tense.PRESENT, wordElement0.getTense());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      WordElement wordElement0 = xMLLexicon0.getWordFromVariant("colour");
      assertNull(wordElement0.getId());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.VERB;
      boolean boolean0 = xMLLexicon0.hasWordFromVariant("colour", lexicalCategory0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.PREPOSITION;
      WordElement wordElement0 = multipleLexicon0.getWordFromVariant("%J-vG|usGWrT", lexicalCategory0);
      assertFalse(wordElement0.isNegated());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.VERB;
      WordElement wordElement0 = xMLLexicon0.getWordFromVariant("colour", lexicalCategory0);
      assertEquals(Tense.PRESENT, wordElement0.getTense());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon("");
      boolean boolean0 = xMLLexicon0.hasWord("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      WordElement wordElement0 = xMLLexicon0.getWord("<~Z5`fGEx|z7zM4>z#");
      assertNull(wordElement0.getId());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      WordElement wordElement0 = xMLLexicon0.getWord("colour");
      assertFalse(wordElement0.isNegated());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon("");
      WordElement wordElement0 = xMLLexicon0.lookupWord("");
      assertEquals(Tense.PRESENT, wordElement0.getTense());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Lexicon[] lexiconArray0 = new Lexicon[1];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon(lexiconArray0);
      // Undeclared exception!
      try { 
        multipleLexicon0.hasWordFromVariant("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Lexicon lexicon0 = Lexicon.getDefaultLexicon();
      LexicalCategory lexicalCategory0 = LexicalCategory.NOUN;
      List<WordElement> list0 = lexicon0.getWords("colour", lexicalCategory0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      boolean boolean0 = xMLLexicon0.hasWord("colour");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon("");
      WordElement wordElement0 = xMLLexicon0.getWordByID("");
      assertEquals(Tense.PRESENT, wordElement0.getTense());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XMLLexicon xMLLexicon0 = new XMLLexicon();
      xMLLexicon0.close();
  }
}
