/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:14:08 GMT 2022
 */

package simplenlg.xmlrealiser.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import simplenlg.xmlrealiser.wrapper.XmlAdvPhraseSpec;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlAdvPhraseSpec_ESTest extends XmlAdvPhraseSpec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlAdvPhraseSpec xmlAdvPhraseSpec0 = new XmlAdvPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlAdvPhraseSpec0.setISSUPERLATIVE(boolean0);
      Boolean boolean1 = xmlAdvPhraseSpec0.isISSUPERLATIVE();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlAdvPhraseSpec xmlAdvPhraseSpec0 = new XmlAdvPhraseSpec();
      Boolean boolean0 = Boolean.valueOf("9HR./w");
      xmlAdvPhraseSpec0.setISSUPERLATIVE(boolean0);
      Boolean boolean1 = xmlAdvPhraseSpec0.isISSUPERLATIVE();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlAdvPhraseSpec xmlAdvPhraseSpec0 = new XmlAdvPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(true);
      xmlAdvPhraseSpec0.setISCOMPARATIVE(boolean0);
      Boolean boolean1 = xmlAdvPhraseSpec0.isISCOMPARATIVE();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlAdvPhraseSpec xmlAdvPhraseSpec0 = new XmlAdvPhraseSpec();
      Boolean boolean0 = Boolean.valueOf("9HR./w");
      xmlAdvPhraseSpec0.setISCOMPARATIVE(boolean0);
      Boolean boolean1 = xmlAdvPhraseSpec0.isISCOMPARATIVE();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlAdvPhraseSpec xmlAdvPhraseSpec0 = new XmlAdvPhraseSpec();
      Boolean boolean0 = xmlAdvPhraseSpec0.isISSUPERLATIVE();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlAdvPhraseSpec xmlAdvPhraseSpec0 = new XmlAdvPhraseSpec();
      Boolean boolean0 = xmlAdvPhraseSpec0.isISCOMPARATIVE();
      xmlAdvPhraseSpec0.setISSUPERLATIVE(boolean0);
      assertNull(xmlAdvPhraseSpec0.getCat());
  }
}
