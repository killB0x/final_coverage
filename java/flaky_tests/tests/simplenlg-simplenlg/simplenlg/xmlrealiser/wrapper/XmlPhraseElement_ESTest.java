/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 02:58:42 GMT 2022
 */

package simplenlg.xmlrealiser.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import simplenlg.xmlrealiser.wrapper.XmlAdjPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlAdvPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlDiscourseFunction;
import simplenlg.xmlrealiser.wrapper.XmlNLGElement;
import simplenlg.xmlrealiser.wrapper.XmlNPPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlPPPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlPhraseCategory;
import simplenlg.xmlrealiser.wrapper.XmlSPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlWordElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlPhraseElement_ESTest extends XmlPhraseElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.FALSE;
      xmlSPhraseSpec0.setAppositive(boolean0);
      assertNull(xmlSPhraseSpec0.getDiscourseFunction());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlAdjPhraseSpec xmlAdjPhraseSpec0 = new XmlAdjPhraseSpec();
      XmlWordElement xmlWordElement0 = new XmlWordElement();
      xmlAdjPhraseSpec0.head = xmlWordElement0;
      XmlWordElement xmlWordElement1 = xmlAdjPhraseSpec0.getHead();
      assertNull(xmlWordElement1.isPROPER());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlPPPhraseSpec xmlPPPhraseSpec0 = new XmlPPPhraseSpec();
      LinkedList<XmlNLGElement> linkedList0 = new LinkedList<XmlNLGElement>();
      XmlWordElement xmlWordElement0 = new XmlWordElement();
      linkedList0.push(xmlWordElement0);
      xmlPPPhraseSpec0.frontMod = (List<XmlNLGElement>) linkedList0;
      List<XmlNLGElement> list0 = xmlPPPhraseSpec0.getFrontMod();
      assertNotNull(list0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlDiscourseFunction xmlDiscourseFunction0 = XmlDiscourseFunction.OBJECT;
      xmlSPhraseSpec0.setDiscourseFunction(xmlDiscourseFunction0);
      XmlDiscourseFunction xmlDiscourseFunction1 = xmlSPhraseSpec0.getDiscourseFunction();
      assertSame(xmlDiscourseFunction1, xmlDiscourseFunction0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlPPPhraseSpec xmlPPPhraseSpec0 = new XmlPPPhraseSpec();
      LinkedList<XmlNLGElement> linkedList0 = new LinkedList<XmlNLGElement>();
      xmlPPPhraseSpec0.compl = (List<XmlNLGElement>) linkedList0;
      XmlWordElement xmlWordElement0 = new XmlWordElement();
      linkedList0.push(xmlWordElement0);
      List<XmlNLGElement> list0 = xmlPPPhraseSpec0.getCompl();
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlPhraseCategory xmlPhraseCategory0 = XmlPhraseCategory.CLAUSE;
      xmlSPhraseSpec0.setCat(xmlPhraseCategory0);
      XmlPhraseCategory xmlPhraseCategory1 = xmlSPhraseSpec0.getCat();
      assertEquals(XmlPhraseCategory.CLAUSE, xmlPhraseCategory1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlPPPhraseSpec xmlPPPhraseSpec0 = new XmlPPPhraseSpec();
      List<XmlNLGElement> list0 = xmlPPPhraseSpec0.getPostMod();
      List<XmlNLGElement> list1 = xmlPPPhraseSpec0.getPostMod();
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlAdjPhraseSpec xmlAdjPhraseSpec0 = new XmlAdjPhraseSpec();
      List<XmlNLGElement> list0 = xmlAdjPhraseSpec0.getCompl();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      List<XmlNLGElement> list0 = xmlNPPhraseSpec0.getPreMod();
      List<XmlNLGElement> list1 = xmlNPPhraseSpec0.getPreMod();
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      List<XmlNLGElement> list0 = xmlSPhraseSpec0.getFrontMod();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = xmlNPPhraseSpec0.isAppositive();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlAdjPhraseSpec xmlAdjPhraseSpec0 = new XmlAdjPhraseSpec();
      XmlWordElement xmlWordElement0 = xmlAdjPhraseSpec0.getHead();
      assertNull(xmlWordElement0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.getDiscourseFunction();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      XmlWordElement xmlWordElement0 = new XmlWordElement();
      xmlNPPhraseSpec0.setHead(xmlWordElement0);
      assertNull(xmlNPPhraseSpec0.getGENDER());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XmlAdvPhraseSpec xmlAdvPhraseSpec0 = new XmlAdvPhraseSpec();
      xmlAdvPhraseSpec0.getCat();
  }
}
