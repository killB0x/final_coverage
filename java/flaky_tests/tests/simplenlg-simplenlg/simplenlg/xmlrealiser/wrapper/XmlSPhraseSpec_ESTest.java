/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:05:38 GMT 2022
 */

package simplenlg.xmlrealiser.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import simplenlg.xmlrealiser.wrapper.XmlAdjPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlClauseStatus;
import simplenlg.xmlrealiser.wrapper.XmlForm;
import simplenlg.xmlrealiser.wrapper.XmlInterrogativeType;
import simplenlg.xmlrealiser.wrapper.XmlNLGElement;
import simplenlg.xmlrealiser.wrapper.XmlNPPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlPerson;
import simplenlg.xmlrealiser.wrapper.XmlSPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlTense;
import simplenlg.xmlrealiser.wrapper.XmlVPPhraseSpec;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlSPhraseSpec_ESTest extends XmlSPhraseSpec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlSPhraseSpec0.setSUPRESSEDCOMPLEMENTISER(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isSUPRESSEDCOMPLEMENTISER();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(false);
      xmlSPhraseSpec0.supressedcomplementiser = boolean0;
      Boolean boolean1 = xmlSPhraseSpec0.isSUPRESSEDCOMPLEMENTISER();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(true);
      xmlSPhraseSpec0.setSUPPRESSGENITIVEINGERUND(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isSUPPRESSGENITIVEINGERUND();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.FALSE;
      xmlSPhraseSpec0.setSUPPRESSGENITIVEINGERUND(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isSUPPRESSGENITIVEINGERUND();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlSPhraseSpec0.setPROGRESSIVE(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isPROGRESSIVE();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(":g${b#");
      xmlSPhraseSpec0.progressive = boolean0;
      Boolean boolean1 = xmlSPhraseSpec0.isPROGRESSIVE();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlSPhraseSpec0.setPERFECT(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isPERFECT();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.FALSE;
      xmlSPhraseSpec0.setPERFECT(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isPERFECT();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlSPhraseSpec0.passive = boolean0;
      Boolean boolean1 = xmlSPhraseSpec0.isPASSIVE();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(false);
      xmlSPhraseSpec0.setPASSIVE(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isPASSIVE();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.valueOf("y");
      xmlSPhraseSpec0.negated = boolean0;
      Boolean boolean1 = xmlSPhraseSpec0.isNEGATED();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.valueOf("");
      xmlSPhraseSpec0.aggregateauxiliary = boolean0;
      Boolean boolean1 = xmlSPhraseSpec0.isAGGREGATEAUXILIARY();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlAdjPhraseSpec xmlAdjPhraseSpec0 = new XmlAdjPhraseSpec();
      xmlSPhraseSpec0.vp = (XmlNLGElement) xmlAdjPhraseSpec0;
      XmlAdjPhraseSpec xmlAdjPhraseSpec1 = (XmlAdjPhraseSpec)xmlSPhraseSpec0.getVp();
      assertNull(xmlAdjPhraseSpec1.isAppositive());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      LinkedList<XmlNLGElement> linkedList0 = new LinkedList<XmlNLGElement>();
      xmlSPhraseSpec0.subj = (List<XmlNLGElement>) linkedList0;
      linkedList0.add((XmlNLGElement) xmlSPhraseSpec0);
      List<XmlNLGElement> list0 = xmlSPhraseSpec0.getSubj();
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlPerson xmlPerson0 = XmlPerson.FIRST;
      xmlSPhraseSpec0.person = xmlPerson0;
      XmlPerson xmlPerson1 = xmlSPhraseSpec0.getPERSON();
      assertEquals(XmlPerson.FIRST, xmlPerson1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.setMODAL("simplenlg.xmlrealiser.wrapper.XmlSPhraseSpec");
      String string0 = xmlSPhraseSpec0.getMODAL();
      assertEquals("simplenlg.xmlrealiser.wrapper.XmlSPhraseSpec", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.setMODAL("");
      String string0 = xmlSPhraseSpec0.getMODAL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlInterrogativeType xmlInterrogativeType0 = XmlInterrogativeType.WHO_OBJECT;
      xmlSPhraseSpec0.setINTERROGATIVETYPE(xmlInterrogativeType0);
      XmlInterrogativeType xmlInterrogativeType1 = xmlSPhraseSpec0.getINTERROGATIVETYPE();
      assertSame(xmlInterrogativeType1, xmlInterrogativeType0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlForm xmlForm0 = XmlForm.PRESENT_PARTICIPLE;
      xmlSPhraseSpec0.setFORM(xmlForm0);
      XmlForm xmlForm1 = xmlSPhraseSpec0.getFORM();
      assertEquals(XmlForm.PRESENT_PARTICIPLE, xmlForm1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlVPPhraseSpec xmlVPPhraseSpec0 = new XmlVPPhraseSpec();
      xmlSPhraseSpec0.cuePhrase = (XmlNLGElement) xmlVPPhraseSpec0;
      XmlVPPhraseSpec xmlVPPhraseSpec1 = (XmlVPPhraseSpec)xmlSPhraseSpec0.getCuePhrase();
      assertNull(xmlVPPhraseSpec1.getFORM());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.setCOMPLEMENTISER("{s");
      String string0 = xmlSPhraseSpec0.getCOMPLEMENTISER();
      assertEquals("{s", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.complementiser = "";
      String string0 = xmlSPhraseSpec0.getCOMPLEMENTISER();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlClauseStatus xmlClauseStatus0 = XmlClauseStatus.SUBORDINATE;
      xmlSPhraseSpec0.clausestatus = xmlClauseStatus0;
      XmlClauseStatus xmlClauseStatus1 = xmlSPhraseSpec0.getCLAUSESTATUS();
      assertEquals(XmlClauseStatus.SUBORDINATE, xmlClauseStatus1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      List<XmlNLGElement> list0 = xmlSPhraseSpec0.getSubj();
      List<XmlNLGElement> list1 = xmlSPhraseSpec0.getSubj();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      String string0 = xmlSPhraseSpec0.getCOMPLEMENTISER();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(true);
      xmlSPhraseSpec0.setAGGREGATEAUXILIARY(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isAGGREGATEAUXILIARY();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlNLGElement xmlNLGElement0 = xmlSPhraseSpec0.getCuePhrase();
      assertNull(xmlNLGElement0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = xmlSPhraseSpec0.isAGGREGATEAUXILIARY();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.getINTERROGATIVETYPE();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.getCLAUSESTATUS();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = xmlSPhraseSpec0.isPERFECT();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      String string0 = xmlSPhraseSpec0.getMODAL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlNLGElement xmlNLGElement0 = xmlSPhraseSpec0.getVp();
      assertNull(xmlNLGElement0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlPerson xmlPerson0 = XmlPerson.FIRST;
      xmlSPhraseSpec0.setPERSON(xmlPerson0);
      assertNull(xmlSPhraseSpec0.isPERFECT());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.getPERSON();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = xmlSPhraseSpec0.isPASSIVE();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlSPhraseSpec0.setNEGATED(boolean0);
      Boolean boolean1 = xmlSPhraseSpec0.isNEGATED();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = xmlSPhraseSpec0.isPROGRESSIVE();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlTense xmlTense0 = XmlTense.PAST;
      xmlSPhraseSpec0.setTENSE(xmlTense0);
      XmlTense xmlTense1 = xmlSPhraseSpec0.getTENSE();
      assertSame(xmlTense1, xmlTense0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      xmlSPhraseSpec0.setCuePhrase(xmlNPPhraseSpec0);
      assertNull(xmlNPPhraseSpec0.getGENDER());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = xmlSPhraseSpec0.isSUPPRESSGENITIVEINGERUND();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlVPPhraseSpec xmlVPPhraseSpec0 = new XmlVPPhraseSpec();
      xmlSPhraseSpec0.setVp(xmlVPPhraseSpec0);
      assertNull(xmlVPPhraseSpec0.isNEGATED());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      XmlClauseStatus xmlClauseStatus0 = XmlClauseStatus.MATRIX;
      xmlSPhraseSpec0.setCLAUSESTATUS(xmlClauseStatus0);
      assertEquals(XmlClauseStatus.MATRIX, xmlSPhraseSpec0.getCLAUSESTATUS());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.getFORM();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = xmlSPhraseSpec0.isNEGATED();
      xmlSPhraseSpec0.setSUPRESSEDCOMPLEMENTISER(boolean0);
      assertNull(xmlSPhraseSpec0.getFORM());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      Boolean boolean0 = xmlSPhraseSpec0.isSUPRESSEDCOMPLEMENTISER();
      xmlSPhraseSpec0.setPASSIVE(boolean0);
      assertNull(xmlSPhraseSpec0.isSUPRESSEDCOMPLEMENTISER());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlSPhraseSpec0.getTENSE();
  }
}
