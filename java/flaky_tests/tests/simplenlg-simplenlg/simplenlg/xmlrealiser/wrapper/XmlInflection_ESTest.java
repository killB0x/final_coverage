/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:13:33 GMT 2022
 */

package simplenlg.xmlrealiser.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import simplenlg.xmlrealiser.wrapper.XmlInflection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlInflection_ESTest extends XmlInflection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlInflection[] xmlInflectionArray0 = XmlInflection.values();
      assertEquals(6, xmlInflectionArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlInflection xmlInflection0 = XmlInflection.valueOf("IRREGULAR");
      assertEquals(XmlInflection.IRREGULAR, xmlInflection0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlInflection xmlInflection0 = XmlInflection.fromValue("REGULAR");
      assertEquals(XmlInflection.REGULAR, xmlInflection0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlInflection xmlInflection0 = XmlInflection.REGULAR;
      String string0 = xmlInflection0.value();
      assertEquals("REGULAR", string0);
  }
}
