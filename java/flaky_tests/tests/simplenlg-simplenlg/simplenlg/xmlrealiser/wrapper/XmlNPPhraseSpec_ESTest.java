/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:17:13 GMT 2022
 */

package simplenlg.xmlrealiser.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import simplenlg.xmlrealiser.wrapper.XmlCoordinatedPhraseElement;
import simplenlg.xmlrealiser.wrapper.XmlGender;
import simplenlg.xmlrealiser.wrapper.XmlNLGElement;
import simplenlg.xmlrealiser.wrapper.XmlNPPhraseSpec;
import simplenlg.xmlrealiser.wrapper.XmlNumberAgreement;
import simplenlg.xmlrealiser.wrapper.XmlPerson;
import simplenlg.xmlrealiser.wrapper.XmlSPhraseSpec;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlNPPhraseSpec_ESTest extends XmlNPPhraseSpec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlNPPhraseSpec0.setPRONOMINAL(boolean0);
      assertTrue(xmlNPPhraseSpec0.isPRONOMINAL());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      XmlSPhraseSpec xmlSPhraseSpec0 = new XmlSPhraseSpec();
      xmlNPPhraseSpec0.setSpec(xmlSPhraseSpec0);
      assertNull(xmlSPhraseSpec0.isSUPRESSEDCOMPLEMENTISER());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlNPPhraseSpec0.pronominal = boolean0;
      Boolean boolean1 = xmlNPPhraseSpec0.isPRONOMINAL();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.FALSE;
      xmlNPPhraseSpec0.pronominal = boolean0;
      Boolean boolean1 = xmlNPPhraseSpec0.isPRONOMINAL();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.valueOf("q>j|%3BHZx2B%~<");
      xmlNPPhraseSpec0.possessive = boolean0;
      Boolean boolean1 = xmlNPPhraseSpec0.isPOSSESSIVE();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlNPPhraseSpec0.setELIDED(boolean0);
      Boolean boolean1 = xmlNPPhraseSpec0.isELIDED();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.valueOf("");
      xmlNPPhraseSpec0.setELIDED(boolean0);
      Boolean boolean1 = xmlNPPhraseSpec0.isELIDED();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.TRUE;
      xmlNPPhraseSpec0.setADJECTIVEORDERING(boolean0);
      Boolean boolean1 = xmlNPPhraseSpec0.isADJECTIVEORDERING();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(" wZ3tIo");
      xmlNPPhraseSpec0.adjectiveordering = boolean0;
      Boolean boolean1 = xmlNPPhraseSpec0.isADJECTIVEORDERING();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      XmlCoordinatedPhraseElement xmlCoordinatedPhraseElement0 = new XmlCoordinatedPhraseElement();
      xmlNPPhraseSpec0.spec = (XmlNLGElement) xmlCoordinatedPhraseElement0;
      XmlCoordinatedPhraseElement xmlCoordinatedPhraseElement1 = (XmlCoordinatedPhraseElement)xmlNPPhraseSpec0.getSpec();
      assertNull(xmlCoordinatedPhraseElement1.isPROGRESSIVE());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      XmlPerson xmlPerson0 = XmlPerson.SECOND;
      xmlNPPhraseSpec0.setPERSON(xmlPerson0);
      XmlPerson xmlPerson1 = xmlNPPhraseSpec0.getPERSON();
      assertSame(xmlPerson1, xmlPerson0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      XmlGender xmlGender0 = XmlGender.MASCULINE;
      xmlNPPhraseSpec0.setGENDER(xmlGender0);
      XmlGender xmlGender1 = xmlNPPhraseSpec0.getGENDER();
      assertSame(xmlGender1, xmlGender0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = xmlNPPhraseSpec0.isELIDED();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      xmlNPPhraseSpec0.getGENDER();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = xmlNPPhraseSpec0.isPRONOMINAL();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = Boolean.valueOf(true);
      xmlNPPhraseSpec0.setPOSSESSIVE(boolean0);
      Boolean boolean1 = xmlNPPhraseSpec0.isPOSSESSIVE();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      XmlNumberAgreement xmlNumberAgreement0 = XmlNumberAgreement.SINGULAR;
      xmlNPPhraseSpec0.setNUMBER(xmlNumberAgreement0);
      XmlNumberAgreement xmlNumberAgreement1 = xmlNPPhraseSpec0.getNUMBER();
      assertSame(xmlNumberAgreement1, xmlNumberAgreement0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = xmlNPPhraseSpec0.isPOSSESSIVE();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      xmlNPPhraseSpec0.getPERSON();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      XmlNLGElement xmlNLGElement0 = xmlNPPhraseSpec0.getSpec();
      assertNull(xmlNLGElement0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      Boolean boolean0 = xmlNPPhraseSpec0.isADJECTIVEORDERING();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XmlNPPhraseSpec xmlNPPhraseSpec0 = new XmlNPPhraseSpec();
      xmlNPPhraseSpec0.getNUMBER();
  }
}
