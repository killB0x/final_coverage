/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:01:29 GMT 2022
 */

package simplenlg.format.english;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import simplenlg.format.english.NumberedPrefix;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NumberedPrefix_ESTest extends NumberedPrefix_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.setPrefix((String) null);
      String string0 = numberedPrefix0.getPrefix();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.setPrefix((String) null);
      // Undeclared exception!
      try { 
        numberedPrefix0.upALevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.prefix = "";
      // Undeclared exception!
      try { 
        numberedPrefix0.increment();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.setPrefix((String) null);
      // Undeclared exception!
      try { 
        numberedPrefix0.increment();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.format.english.NumberedPrefix", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.prefix = null;
      // Undeclared exception!
      try { 
        numberedPrefix0.downALevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.format.english.NumberedPrefix", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.downALevel();
      assertEquals("0", numberedPrefix0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.prefix = "im$7T$0~s3y9g";
      numberedPrefix0.upALevel();
      numberedPrefix0.downALevel();
      assertEquals("im$7T$0~s3y9g", numberedPrefix0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.increment();
      assertEquals("1", numberedPrefix0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      numberedPrefix0.upALevel();
      numberedPrefix0.upALevel();
      numberedPrefix0.increment();
      assertEquals("1.2", numberedPrefix0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      assertEquals("0", numberedPrefix0.getPrefix());
      
      numberedPrefix0.setPrefix("");
      String string0 = numberedPrefix0.getPrefix();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumberedPrefix numberedPrefix0 = new NumberedPrefix();
      String string0 = numberedPrefix0.getPrefix();
      assertEquals("0", string0);
  }
}
