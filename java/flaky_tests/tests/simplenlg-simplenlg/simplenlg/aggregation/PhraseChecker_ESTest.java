/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 02:20:02 GMT 2022
 */

package simplenlg.aggregation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import simplenlg.aggregation.PhraseChecker;
import simplenlg.aggregation.PhraseSet;
import simplenlg.framework.DocumentElement;
import simplenlg.framework.ListElement;
import simplenlg.framework.NLGElement;
import simplenlg.framework.NLGFactory;
import simplenlg.framework.WordElement;
import simplenlg.lexicon.Lexicon;
import simplenlg.lexicon.MultipleLexicon;
import simplenlg.lexicon.XMLLexicon;
import simplenlg.phrasespec.NPPhraseSpec;
import simplenlg.phrasespec.SPhraseSpec;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PhraseChecker_ESTest extends PhraseChecker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      LinkedList<DocumentElement> linkedList0 = new LinkedList<DocumentElement>();
      DocumentElement documentElement0 = nLGFactory0.createList((List<DocumentElement>) linkedList0);
      SPhraseSpec sPhraseSpec1 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec1;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.sameVPModifiers(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.sameVPArgs(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      // Undeclared exception!
      try { 
        PhraseChecker.sameVPArgs(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = new SPhraseSpec(nLGFactory0);
      NLGElement[] nLGElementArray0 = new NLGElement[15];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.sameVP(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.sameVP(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      NLGElement[] nLGElementArray0 = new NLGElement[7];
      DocumentElement documentElement0 = nLGFactory0.createListItem();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.sameVPHead(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      // Undeclared exception!
      try { 
        PhraseChecker.samePostMods(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ListElement listElement0 = new ListElement();
      listElement0.setFeature("cue_phrase", 1516L);
      NLGElement[] nLGElementArray0 = new NLGElement[3];
      nLGElementArray0[0] = (NLGElement) listElement0;
      nLGElementArray0[1] = (NLGElement) listElement0;
      nLGElementArray0[2] = (NLGElement) listElement0;
      boolean boolean0 = PhraseChecker.sameFrontMods(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      // Undeclared exception!
      try { 
        PhraseChecker.sameSentences(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVPModifiers(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory((Lexicon) null);
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[5];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[2] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[3] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[4] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVPArgs(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVP(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory((Lexicon) null);
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[5];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[2] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[3] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[4] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameSubjects(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Lexicon lexicon0 = Lexicon.getDefaultLexicon();
      NLGFactory nLGFactory0 = new NLGFactory(lexicon0);
      DocumentElement documentElement0 = nLGFactory0.createSection();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) documentElement0;
      nLGElementArray0[2] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[3] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[4] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[5] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameSentences(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[3] = (NLGElement) sPhraseSpec0;
      sPhraseSpec0.setVerbPhrase(nLGElementArray0[3]);
      // Undeclared exception!
      PhraseChecker.sameSurfaceSubjects(nLGElementArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[1];
      // Undeclared exception!
      try { 
        PhraseChecker.sameSurfaceSubjects(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      // Undeclared exception!
      try { 
        PhraseChecker.sameSubjects(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[3];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      sPhraseSpec0.setVerbPhrase(nLGElementArray0[0]);
      // Undeclared exception!
      PhraseChecker.nonePassive(nLGElementArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[3];
      NLGFactory nLGFactory0 = new NLGFactory((Lexicon) null);
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      sPhraseSpec0.setVerbPhrase(nLGElementArray0[0]);
      // Undeclared exception!
      PhraseChecker.haveSameVoice(nLGElementArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        PhraseChecker.expletiveSubjects((NLGElement[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[7];
      // Undeclared exception!
      try { 
        PhraseChecker.allPassive(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[3];
      NLGFactory nLGFactory0 = new NLGFactory((Lexicon) null);
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      sPhraseSpec0.setVerbPhrase(nLGElementArray0[0]);
      // Undeclared exception!
      PhraseChecker.allActive(nLGElementArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[1];
      // Undeclared exception!
      try { 
        PhraseChecker.allActive(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      MultipleLexicon multipleLexicon0 = new MultipleLexicon();
      NLGFactory nLGFactory0 = new NLGFactory(multipleLexicon0);
      DocumentElement documentElement0 = nLGFactory0.createDocument();
      nLGElementArray0[0] = (NLGElement) documentElement0;
      nLGElementArray0[1] = (NLGElement) documentElement0;
      boolean boolean0 = PhraseChecker.allActive(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.allPassive(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      ListElement listElement0 = new ListElement();
      nLGElementArray0[0] = (NLGElement) listElement0;
      boolean boolean0 = PhraseChecker.allPassive(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[1];
      boolean boolean0 = PhraseChecker.sameSubjects(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[1];
      ListElement listElement0 = new ListElement();
      nLGElementArray0[0] = (NLGElement) listElement0;
      boolean boolean0 = PhraseChecker.nonePassive(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[3];
      // Undeclared exception!
      try { 
        PhraseChecker.nonePassive(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[9];
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = new SPhraseSpec(nLGFactory0);
      sPhraseSpec0.addPostModifier("postmodifiers");
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.rightPeriphery(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[9];
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.rightPeriphery(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      NLGElement[] nLGElementArray0 = new NLGElement[17];
      DocumentElement documentElement0 = nLGFactory0.createListItem();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.rightPeriphery(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[1];
      ListElement listElement0 = new ListElement();
      nLGElementArray0[0] = (NLGElement) listElement0;
      List<PhraseSet> list0 = PhraseChecker.rightPeriphery(nLGElementArray0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      NLGElement[] nLGElementArray0 = new NLGElement[18];
      DocumentElement documentElement0 = nLGFactory0.createList();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.leftPeriphery(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      sPhraseSpec0.addFrontModifier((NLGElement) sPhraseSpec0);
      NLGElement[] nLGElementArray0 = new NLGElement[7];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      // Undeclared exception!
      try { 
        PhraseChecker.leftPeriphery(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ListElement listElement0 = new ListElement();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) listElement0;
      listElement0.setFeature("cue_phrase", 1516L);
      // Undeclared exception!
      try { 
        PhraseChecker.leftPeriphery(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      List<PhraseSet> list0 = PhraseChecker.leftPeriphery(nLGElementArray0);
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.sameVPModifiers(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      LinkedList<DocumentElement> linkedList0 = new LinkedList<DocumentElement>();
      DocumentElement documentElement0 = nLGFactory0.createList((List<DocumentElement>) linkedList0);
      SPhraseSpec sPhraseSpec1 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec1;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVPArgs(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = new SPhraseSpec(nLGFactory0);
      NPPhraseSpec nPPhraseSpec0 = nLGFactory0.createNounPhrase();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) nPPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVP(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ListElement listElement0 = new ListElement();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) listElement0;
      nLGElementArray0[1] = (NLGElement) listElement0;
      boolean boolean0 = PhraseChecker.haveSameVoice(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[3];
      // Undeclared exception!
      try { 
        PhraseChecker.haveSameVoice(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.haveSameVoice(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      LinkedList<DocumentElement> linkedList0 = new LinkedList<DocumentElement>();
      DocumentElement documentElement0 = nLGFactory0.createList((List<DocumentElement>) linkedList0);
      SPhraseSpec sPhraseSpec1 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec1;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVPHead(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      DocumentElement documentElement0 = nLGFactory0.createListItem();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVPHead(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = new SPhraseSpec(nLGFactory0);
      NPPhraseSpec nPPhraseSpec0 = nLGFactory0.createNounPhrase((Object) sPhraseSpec0, (Object) sPhraseSpec0);
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) nPPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVPHead(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ListElement listElement0 = new ListElement();
      NLGElement[] nLGElementArray0 = new NLGElement[20];
      nLGElementArray0[0] = (NLGElement) listElement0;
      nLGElementArray0[1] = (NLGElement) listElement0;
      boolean boolean0 = PhraseChecker.sameVPHead(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameVPHead(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.sameVPHead(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      LinkedList<DocumentElement> linkedList0 = new LinkedList<DocumentElement>();
      DocumentElement documentElement0 = nLGFactory0.createList((List<DocumentElement>) linkedList0);
      SPhraseSpec sPhraseSpec1 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec1;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[2] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[3] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[4] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[5] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameSurfaceSubjects(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      LinkedList<DocumentElement> linkedList0 = new LinkedList<DocumentElement>();
      DocumentElement documentElement0 = nLGFactory0.createList((List<DocumentElement>) linkedList0);
      SPhraseSpec sPhraseSpec1 = nLGFactory0.createClause((Object) documentElement0, (Object) documentElement0, (Object) documentElement0);
      nLGElementArray0[0] = (NLGElement) sPhraseSpec1;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameSubjects(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.sameSurfaceSubjects(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.sameSurfaceSubjects(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Lexicon lexicon0 = Lexicon.getDefaultLexicon();
      NLGFactory nLGFactory0 = new NLGFactory(lexicon0);
      DocumentElement documentElement0 = nLGFactory0.createSection();
      SPhraseSpec sPhraseSpec0 = nLGFactory0.createClause();
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) documentElement0;
      nLGElementArray0[2] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[3] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[4] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[5] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.samePostMods(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.samePostMods(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ListElement listElement0 = new ListElement();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) listElement0;
      listElement0.setFeature("cue_phrase", 1516L);
      nLGElementArray0[1] = (NLGElement) listElement0;
      boolean boolean0 = PhraseChecker.sameFrontMods(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ListElement listElement0 = new ListElement();
      listElement0.setFeature("cue_phrase", 1516L);
      NLGElement[] nLGElementArray0 = new NLGElement[3];
      nLGElementArray0[0] = (NLGElement) listElement0;
      MockFile mockFile0 = new MockFile("pf9aQ:rK|6[Qbn", "cue_phrase");
      XMLLexicon xMLLexicon0 = new XMLLexicon(mockFile0);
      WordElement wordElement0 = xMLLexicon0.getWord("pf9aQ:rK|6[Qbn");
      nLGElementArray0[1] = (NLGElement) wordElement0;
      boolean boolean0 = PhraseChecker.sameFrontMods(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ListElement listElement0 = new ListElement();
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      nLGElementArray0[0] = (NLGElement) listElement0;
      listElement0.setFeature("cue_phrase", 1516L);
      // Undeclared exception!
      try { 
        PhraseChecker.sameFrontMods(nLGElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("simplenlg.aggregation.PhraseChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = new SPhraseSpec(nLGFactory0);
      List<NLGElement> list0 = sPhraseSpec0.getChildren();
      ListElement listElement0 = new ListElement(list0);
      listElement0.setFeature("cue_phrase", 1211L);
      NLGElement[] nLGElementArray0 = new NLGElement[6];
      nLGElementArray0[0] = (NLGElement) sPhraseSpec0;
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      DocumentElement documentElement0 = nLGFactory0.createDocument("subjects");
      nLGElementArray0[2] = (NLGElement) documentElement0;
      nLGElementArray0[3] = (NLGElement) listElement0;
      boolean boolean0 = PhraseChecker.sameFrontMods(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.sameFrontMods(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      SPhraseSpec sPhraseSpec0 = new SPhraseSpec(nLGFactory0);
      NLGElement[] nLGElementArray0 = new NLGElement[9];
      nLGElementArray0[1] = (NLGElement) sPhraseSpec0;
      boolean boolean0 = PhraseChecker.expletiveSubjects(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[9];
      boolean boolean0 = PhraseChecker.expletiveSubjects(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[2];
      boolean boolean0 = PhraseChecker.expletiveSubjects(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.expletiveSubjects(nLGElementArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      NLGFactory nLGFactory0 = new NLGFactory();
      DocumentElement documentElement0 = nLGFactory0.createSentence("~Q");
      NLGElement[] nLGElementArray0 = new NLGElement[5];
      nLGElementArray0[0] = (NLGElement) documentElement0;
      nLGElementArray0[1] = (NLGElement) documentElement0;
      nLGElementArray0[2] = (NLGElement) documentElement0;
      nLGElementArray0[3] = (NLGElement) documentElement0;
      boolean boolean0 = PhraseChecker.sameSentences(nLGElementArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      NLGElement[] nLGElementArray0 = new NLGElement[0];
      boolean boolean0 = PhraseChecker.sameSentences(nLGElementArray0);
      assertFalse(boolean0);
  }
}
