/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 07:05:07 GMT 2022
 */

package org.valdroz.vscript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.valdroz.vscript.DefaultVariantContainer;
import org.valdroz.vscript.LocalVariantContainer;
import org.valdroz.vscript.Variant;
import org.valdroz.vscript.VariantContainer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalVariantContainer_ESTest extends LocalVariantContainer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer((VariantContainer) null);
      // Undeclared exception!
      try { 
        localVariantContainer0.getVariant((String) null, 1342);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.valdroz.vscript.LocalVariantContainer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer((VariantContainer) null);
      // Undeclared exception!
      try { 
        localVariantContainer0.contains("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.valdroz.vscript.LocalVariantContainer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultVariantContainer defaultVariantContainer0 = new DefaultVariantContainer();
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer(defaultVariantContainer0);
      Variant variant0 = Variant.emptyArray();
      defaultVariantContainer0.setVariant("", 0, variant0);
      boolean boolean0 = localVariantContainer0.contains("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultVariantContainer defaultVariantContainer0 = new DefaultVariantContainer();
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer(defaultVariantContainer0);
      boolean boolean0 = localVariantContainer0.contains("Error: %s; Line %d, Pos %d");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultVariantContainer defaultVariantContainer0 = new DefaultVariantContainer();
      Variant variant0 = defaultVariantContainer0.getVariant("Missing comma", 0);
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer(defaultVariantContainer0);
      localVariantContainer0.setVariant("Missing comma", 0, variant0);
      boolean boolean0 = localVariantContainer0.contains("Missing comma");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultVariantContainer defaultVariantContainer0 = new DefaultVariantContainer();
      Variant variant0 = defaultVariantContainer0.getVariant("Missing comma", 0);
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer(defaultVariantContainer0);
      localVariantContainer0.setVariant("Missing comma", 0, variant0);
      Variant variant1 = localVariantContainer0.getVariant("Missing comma", 2115);
      assertEquals((-1), variant1.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer((VariantContainer) null);
      Variant variant0 = Variant.fromLong(1L);
      localVariantContainer0.setVariant("", variant0);
      Variant variant1 = localVariantContainer0.getVariant("");
      assertFalse(variant1.isArray());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LocalVariantContainer localVariantContainer0 = new LocalVariantContainer((VariantContainer) null);
      // Undeclared exception!
      try { 
        localVariantContainer0.getVariant("e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.valdroz.vscript.LocalVariantContainer", e);
      }
  }
}
