/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 20:04:43 GMT 2022
 */

package com.xero.models.project;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.project.ChargeType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChargeType_ESTest extends ChargeType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChargeType chargeType0 = ChargeType.fromValue("TIME");
      assertEquals(ChargeType.TIME, chargeType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChargeType[] chargeTypeArray0 = ChargeType.values();
      assertEquals(3, chargeTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChargeType chargeType0 = ChargeType.valueOf("TIME");
      assertEquals("TIME", chargeType0.getValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChargeType chargeType0 = ChargeType.fromValue("FIXED");
      assertEquals(ChargeType.FIXED, chargeType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChargeType.fromValue("m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'm'
         //
         verifyException("com.xero.models.project.ChargeType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChargeType chargeType0 = ChargeType.FIXED;
      String string0 = chargeType0.toString();
      assertEquals("FIXED", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ChargeType chargeType0 = ChargeType.FIXED;
      String string0 = chargeType0.getValue();
      assertEquals("FIXED", string0);
  }
}
