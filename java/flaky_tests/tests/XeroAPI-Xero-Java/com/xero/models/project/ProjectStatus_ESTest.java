/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:53:18 GMT 2022
 */

package com.xero.models.project;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.project.ProjectStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProjectStatus_ESTest extends ProjectStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProjectStatus projectStatus0 = ProjectStatus.fromValue("INPROGRESS");
      assertEquals(ProjectStatus.INPROGRESS, projectStatus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ProjectStatus[] projectStatusArray0 = ProjectStatus.values();
      assertEquals(2, projectStatusArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ProjectStatus projectStatus0 = ProjectStatus.valueOf("INPROGRESS");
      assertEquals(ProjectStatus.INPROGRESS, projectStatus0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ProjectStatus projectStatus0 = ProjectStatus.INPROGRESS;
      String string0 = projectStatus0.toString();
      assertEquals("INPROGRESS", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ProjectStatus projectStatus0 = ProjectStatus.fromValue("CLOSED");
      assertEquals(ProjectStatus.CLOSED, projectStatus0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        ProjectStatus.fromValue("4LO1hst");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '4LO1hst'
         //
         verifyException("com.xero.models.project.ProjectStatus", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ProjectStatus projectStatus0 = ProjectStatus.INPROGRESS;
      String string0 = projectStatus0.getValue();
      assertEquals("INPROGRESS", string0);
  }
}
