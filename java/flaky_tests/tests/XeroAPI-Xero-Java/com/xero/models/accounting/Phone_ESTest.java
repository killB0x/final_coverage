/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 15:21:02 GMT 2022
 */

package com.xero.models.accounting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.accounting.Phone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Phone_ESTest extends Phone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Phone.PhoneTypeEnum phone_PhoneTypeEnum0 = Phone.PhoneTypeEnum.fromValue("DEFAULT");
      assertEquals(Phone.PhoneTypeEnum.DEFAULT, phone_PhoneTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Phone.PhoneTypeEnum phone_PhoneTypeEnum0 = Phone.PhoneTypeEnum.fromValue("FAX");
      assertEquals(Phone.PhoneTypeEnum.FAX, phone_PhoneTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Phone.PhoneTypeEnum.fromValue("\")ff`a5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '\")ff`a5'
         //
         verifyException("com.xero.models.accounting.Phone$PhoneTypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Phone phone0 = null;
      try {
        phone0 = new Phone();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.accounting.Phone", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Phone.PhoneTypeEnum phone_PhoneTypeEnum0 = Phone.PhoneTypeEnum.FAX;
      String string0 = phone_PhoneTypeEnum0.toString();
      assertEquals("FAX", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Phone.PhoneTypeEnum phone_PhoneTypeEnum0 = Phone.PhoneTypeEnum.FAX;
      String string0 = phone_PhoneTypeEnum0.getValue();
      assertEquals("FAX", string0);
  }
}
