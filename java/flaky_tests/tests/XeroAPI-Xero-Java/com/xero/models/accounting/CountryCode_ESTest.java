/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 20:08:16 GMT 2022
 */

package com.xero.models.accounting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.accounting.CountryCode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CountryCode_ESTest extends CountryCode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CountryCode[] countryCodeArray0 = CountryCode.values();
      assertEquals(240, countryCodeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CountryCode countryCode0 = CountryCode.valueOf("VA");
      assertEquals(CountryCode.VA, countryCode0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CountryCode countryCode0 = CountryCode.fromValue("MP");
      assertEquals(CountryCode.MP, countryCode0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        CountryCode.fromValue("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value ''
         //
         verifyException("com.xero.models.accounting.CountryCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CountryCode countryCode0 = CountryCode.AI;
      String string0 = countryCode0.getValue();
      assertEquals("AI", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CountryCode countryCode0 = CountryCode.AI;
      String string0 = countryCode0.toString();
      assertEquals("AI", string0);
  }
}
