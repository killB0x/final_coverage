/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 20:07:21 GMT 2022
 */

package com.xero.models.accounting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.accounting.QuoteStatusCodes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteStatusCodes_ESTest extends QuoteStatusCodes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuoteStatusCodes quoteStatusCodes0 = QuoteStatusCodes.fromValue("SENT");
      assertEquals(QuoteStatusCodes.SENT, quoteStatusCodes0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuoteStatusCodes[] quoteStatusCodesArray0 = QuoteStatusCodes.values();
      assertEquals(6, quoteStatusCodesArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuoteStatusCodes quoteStatusCodes0 = QuoteStatusCodes.valueOf("SENT");
      assertEquals("SENT", quoteStatusCodes0.getValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuoteStatusCodes quoteStatusCodes0 = QuoteStatusCodes.fromValue("ACCEPTED");
      assertEquals(QuoteStatusCodes.ACCEPTED, quoteStatusCodes0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        QuoteStatusCodes.fromValue("M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'M'
         //
         verifyException("com.xero.models.accounting.QuoteStatusCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QuoteStatusCodes quoteStatusCodes0 = QuoteStatusCodes.DECLINED;
      String string0 = quoteStatusCodes0.getValue();
      assertEquals("DECLINED", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QuoteStatusCodes quoteStatusCodes0 = QuoteStatusCodes.SENT;
      String string0 = quoteStatusCodes0.toString();
      assertEquals("SENT", string0);
  }
}
