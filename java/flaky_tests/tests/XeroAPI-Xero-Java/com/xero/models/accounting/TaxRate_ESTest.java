/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 12:44:33 GMT 2022
 */

package com.xero.models.accounting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.accounting.TaxRate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TaxRate_ESTest extends TaxRate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TaxRate.ReportTaxTypeEnum taxRate_ReportTaxTypeEnum0 = TaxRate.ReportTaxTypeEnum.fromValue("TXRCN33INPUT");
      assertEquals(TaxRate.ReportTaxTypeEnum.TXRCN33INPUT, taxRate_ReportTaxTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TaxRate.StatusEnum taxRate_StatusEnum0 = TaxRate.StatusEnum.fromValue("PENDING");
      assertEquals(TaxRate.StatusEnum.PENDING, taxRate_StatusEnum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        TaxRate.ReportTaxTypeEnum.fromValue("TjZ8yL}C9?O]\"`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'TjZ8yL}C9?O]\"`'
         //
         verifyException("com.xero.models.accounting.TaxRate$ReportTaxTypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TaxRate.StatusEnum taxRate_StatusEnum0 = TaxRate.StatusEnum.fromValue("DELETED");
      assertEquals(TaxRate.StatusEnum.DELETED, taxRate_StatusEnum0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        TaxRate.StatusEnum.fromValue("    isCompound: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '    isCompound: '
         //
         verifyException("com.xero.models.accounting.TaxRate$StatusEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TaxRate taxRate0 = null;
      try {
        taxRate0 = new TaxRate();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.accounting.TaxRate", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TaxRate.ReportTaxTypeEnum taxRate_ReportTaxTypeEnum0 = TaxRate.ReportTaxTypeEnum.fromValue("NRINPUT");
      String string0 = taxRate_ReportTaxTypeEnum0.toString();
      assertEquals("NRINPUT", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TaxRate.ReportTaxTypeEnum taxRate_ReportTaxTypeEnum0 = TaxRate.ReportTaxTypeEnum.ES33OUTPUT;
      String string0 = taxRate_ReportTaxTypeEnum0.getValue();
      assertEquals("ES33OUTPUT", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TaxRate.StatusEnum taxRate_StatusEnum0 = TaxRate.StatusEnum.DELETED;
      String string0 = taxRate_StatusEnum0.toString();
      assertEquals("DELETED", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TaxRate.StatusEnum taxRate_StatusEnum0 = TaxRate.StatusEnum.PENDING;
      String string0 = taxRate_StatusEnum0.getValue();
      assertEquals("PENDING", string0);
  }
}
