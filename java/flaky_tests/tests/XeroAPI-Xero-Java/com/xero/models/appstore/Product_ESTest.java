/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 14:28:15 GMT 2022
 */

package com.xero.models.appstore;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.appstore.Product;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Product_ESTest extends Product_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Product.TypeEnum product_TypeEnum0 = Product.TypeEnum.fromValue("PER_SEAT");
      assertEquals(Product.TypeEnum.PER_SEAT, product_TypeEnum0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Product.TypeEnum product_TypeEnum0 = Product.TypeEnum.fromValue("FIXED");
      assertEquals(Product.TypeEnum.FIXED, product_TypeEnum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Product.TypeEnum.fromValue("zBAy");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'zBAy'
         //
         verifyException("com.xero.models.appstore.Product$TypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Product product0 = null;
      try {
        product0 = new Product();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.appstore.Product", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Product.TypeEnum product_TypeEnum0 = Product.TypeEnum.FIXED;
      String string0 = product_TypeEnum0.toString();
      assertEquals("FIXED", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Product.TypeEnum product_TypeEnum0 = Product.TypeEnum.FIXED;
      String string0 = product_TypeEnum0.getValue();
      assertEquals("FIXED", string0);
  }
}
