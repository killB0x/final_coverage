/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:45:22 GMT 2022
 */

package com.xero.models.payrollau;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollau.AllowanceType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AllowanceType_ESTest extends AllowanceType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AllowanceType allowanceType0 = AllowanceType.fromValue("TOOLS");
      assertEquals(AllowanceType.TOOLS, allowanceType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AllowanceType[] allowanceTypeArray0 = AllowanceType.values();
      assertEquals(10, allowanceTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AllowanceType allowanceType0 = AllowanceType.valueOf("TOOLS");
      assertEquals(AllowanceType.TOOLS, allowanceType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AllowanceType allowanceType0 = AllowanceType.fromValue("LAUNDRY");
      assertEquals(AllowanceType.LAUNDRY, allowanceType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        AllowanceType.fromValue("2!cLP/wC4F\"b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '2!cLP/wC4F\"b'
         //
         verifyException("com.xero.models.payrollau.AllowanceType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AllowanceType allowanceType0 = AllowanceType.LAUNDRY;
      String string0 = allowanceType0.toString();
      assertEquals("LAUNDRY", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AllowanceType allowanceType0 = AllowanceType.LAUNDRY;
      String string0 = allowanceType0.getValue();
      assertEquals("LAUNDRY", string0);
  }
}
