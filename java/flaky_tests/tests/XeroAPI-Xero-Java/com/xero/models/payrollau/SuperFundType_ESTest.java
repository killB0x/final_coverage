/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 20:02:58 GMT 2022
 */

package com.xero.models.payrollau;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollau.SuperFundType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SuperFundType_ESTest extends SuperFundType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SuperFundType superFundType0 = SuperFundType.fromValue("REGULATED");
      assertEquals(SuperFundType.REGULATED, superFundType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SuperFundType[] superFundTypeArray0 = SuperFundType.values();
      assertEquals(2, superFundTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SuperFundType superFundType0 = SuperFundType.valueOf("SMSF");
      assertEquals(SuperFundType.SMSF, superFundType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SuperFundType superFundType0 = SuperFundType.fromValue("SMSF");
      assertEquals(SuperFundType.SMSF, superFundType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        SuperFundType.fromValue((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'null'
         //
         verifyException("com.xero.models.payrollau.SuperFundType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SuperFundType superFundType0 = SuperFundType.SMSF;
      String string0 = superFundType0.toString();
      assertEquals("SMSF", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SuperFundType superFundType0 = SuperFundType.SMSF;
      String string0 = superFundType0.getValue();
      assertEquals("SMSF", string0);
  }
}
