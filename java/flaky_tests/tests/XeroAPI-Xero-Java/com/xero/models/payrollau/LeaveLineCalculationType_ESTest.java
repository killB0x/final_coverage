/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:56:49 GMT 2022
 */

package com.xero.models.payrollau;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollau.LeaveLineCalculationType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LeaveLineCalculationType_ESTest extends LeaveLineCalculationType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LeaveLineCalculationType leaveLineCalculationType0 = LeaveLineCalculationType.fromValue("BASEDONORDINARYEARNINGS");
      assertEquals(LeaveLineCalculationType.BASEDONORDINARYEARNINGS, leaveLineCalculationType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LeaveLineCalculationType[] leaveLineCalculationTypeArray0 = LeaveLineCalculationType.values();
      assertEquals(5, leaveLineCalculationTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LeaveLineCalculationType leaveLineCalculationType0 = LeaveLineCalculationType.valueOf("BASEDONORDINARYEARNINGS");
      assertEquals(LeaveLineCalculationType.BASEDONORDINARYEARNINGS, leaveLineCalculationType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LeaveLineCalculationType leaveLineCalculationType0 = LeaveLineCalculationType.EMPTY;
      String string0 = leaveLineCalculationType0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LeaveLineCalculationType leaveLineCalculationType0 = LeaveLineCalculationType.EMPTY;
      String string0 = leaveLineCalculationType0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LeaveLineCalculationType leaveLineCalculationType0 = LeaveLineCalculationType.fromValue("");
      assertEquals(LeaveLineCalculationType.EMPTY, leaveLineCalculationType0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        LeaveLineCalculationType.fromValue("tNyvO_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'tNyvO_'
         //
         verifyException("com.xero.models.payrollau.LeaveLineCalculationType", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LeaveLineCalculationType leaveLineCalculationType0 = LeaveLineCalculationType.FIXEDAMOUNTEACHPERIOD;
      String string0 = leaveLineCalculationType0.getValue();
      assertEquals("FIXEDAMOUNTEACHPERIOD", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LeaveLineCalculationType leaveLineCalculationType0 = LeaveLineCalculationType.FIXEDAMOUNTEACHPERIOD;
      String string0 = leaveLineCalculationType0.toString();
      assertEquals("FIXEDAMOUNTEACHPERIOD", string0);
  }
}
