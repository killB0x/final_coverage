/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:50:36 GMT 2022
 */

package com.xero.models.payrollau;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollau.RateType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RateType_ESTest extends RateType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RateType rateType0 = RateType.fromValue("MULTIPLE");
      assertEquals(RateType.MULTIPLE, rateType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RateType[] rateTypeArray0 = RateType.values();
      assertEquals(3, rateTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RateType rateType0 = RateType.valueOf("FIXEDAMOUNT");
      assertEquals(RateType.FIXEDAMOUNT, rateType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RateType rateType0 = RateType.fromValue("FIXEDAMOUNT");
      assertEquals(RateType.FIXEDAMOUNT, rateType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        RateType.fromValue("*Hp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '*Hp'
         //
         verifyException("com.xero.models.payrollau.RateType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RateType rateType0 = RateType.FIXEDAMOUNT;
      String string0 = rateType0.getValue();
      assertEquals("FIXEDAMOUNT", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RateType rateType0 = RateType.FIXEDAMOUNT;
      String string0 = rateType0.toString();
      assertEquals("FIXEDAMOUNT", string0);
  }
}
