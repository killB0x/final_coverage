/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:41:47 GMT 2022
 */

package com.xero.models.payrollau;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollau.LeaveCategoryCode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LeaveCategoryCode_ESTest extends LeaveCategoryCode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LeaveCategoryCode leaveCategoryCode0 = LeaveCategoryCode.fromValue("JURYDUTYLEAVE");
      assertEquals(LeaveCategoryCode.JURYDUTYLEAVE, leaveCategoryCode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LeaveCategoryCode[] leaveCategoryCodeArray0 = LeaveCategoryCode.values();
      assertEquals(12, leaveCategoryCodeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LeaveCategoryCode leaveCategoryCode0 = LeaveCategoryCode.valueOf("JURYDUTYLEAVE");
      assertEquals("JURYDUTYLEAVE", leaveCategoryCode0.getValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LeaveCategoryCode leaveCategoryCode0 = LeaveCategoryCode.fromValue("COMMUNITYSERVICELEAVE");
      assertEquals(LeaveCategoryCode.COMMUNITYSERVICELEAVE, leaveCategoryCode0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        LeaveCategoryCode.fromValue("j&)5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'j&)5'
         //
         verifyException("com.xero.models.payrollau.LeaveCategoryCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LeaveCategoryCode leaveCategoryCode0 = LeaveCategoryCode.FAMILYANDDOMESTICVIOLENCELEAVE;
      String string0 = leaveCategoryCode0.getValue();
      assertEquals("FAMILYANDDOMESTICVIOLENCELEAVE", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LeaveCategoryCode leaveCategoryCode0 = LeaveCategoryCode.ROSTEREDDAYOFF;
      String string0 = leaveCategoryCode0.toString();
      assertEquals("ROSTEREDDAYOFF", string0);
  }
}
