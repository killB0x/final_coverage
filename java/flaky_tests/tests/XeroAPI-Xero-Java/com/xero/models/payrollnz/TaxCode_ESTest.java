/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 20:14:26 GMT 2022
 */

package com.xero.models.payrollnz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollnz.TaxCode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TaxCode_ESTest extends TaxCode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TaxCode taxCode0 = TaxCode.fromValue("SSL");
      assertEquals(TaxCode.SSL, taxCode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TaxCode[] taxCodeArray0 = TaxCode.values();
      assertEquals(19, taxCodeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TaxCode taxCode0 = TaxCode.valueOf("SSL");
      assertEquals(TaxCode.SSL, taxCode0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TaxCode taxCode0 = TaxCode.fromValue("SH");
      assertEquals(TaxCode.SH, taxCode0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        TaxCode.fromValue("^a7o/-:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '^a7o/-:'
         //
         verifyException("com.xero.models.payrollnz.TaxCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TaxCode taxCode0 = TaxCode.SH;
      String string0 = taxCode0.toString();
      assertEquals("SH", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TaxCode taxCode0 = TaxCode.SH;
      String string0 = taxCode0.getValue();
      assertEquals("SH", string0);
  }
}
