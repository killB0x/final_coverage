/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 15:46:06 GMT 2022
 */

package com.xero.models.payrollnz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollnz.Account;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Account_ESTest extends Account_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Account.TypeEnum account_TypeEnum0 = Account.TypeEnum.fromValue("PAYELIABILITY");
      assertEquals(Account.TypeEnum.PAYELIABILITY, account_TypeEnum0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Account.TypeEnum account_TypeEnum0 = Account.TypeEnum.fromValue("WAGESPAYABLE");
      assertEquals(Account.TypeEnum.WAGESPAYABLE, account_TypeEnum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Account.TypeEnum.fromValue((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'null'
         //
         verifyException("com.xero.models.payrollnz.Account$TypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Account account0 = null;
      try {
        account0 = new Account();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.payrollnz.Account", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Account.TypeEnum account_TypeEnum0 = Account.TypeEnum.WAGESPAYABLE;
      String string0 = account_TypeEnum0.getValue();
      assertEquals("WAGESPAYABLE", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Account.TypeEnum account_TypeEnum0 = Account.TypeEnum.WAGESPAYABLE;
      String string0 = account_TypeEnum0.toString();
      assertEquals("WAGESPAYABLE", string0);
  }
}
