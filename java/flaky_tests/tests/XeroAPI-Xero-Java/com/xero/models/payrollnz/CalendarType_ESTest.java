/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 20:15:18 GMT 2022
 */

package com.xero.models.payrollnz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrollnz.CalendarType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CalendarType_ESTest extends CalendarType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CalendarType calendarType0 = CalendarType.fromValue("Monthly");
      assertEquals(CalendarType.MONTHLY, calendarType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CalendarType[] calendarTypeArray0 = CalendarType.values();
      assertEquals(7, calendarTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CalendarType calendarType0 = CalendarType.valueOf("FOURWEEKLY");
      assertEquals("FourWeekly", calendarType0.getValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CalendarType calendarType0 = CalendarType.fromValue("Annual");
      assertEquals(CalendarType.ANNUAL, calendarType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarType.fromValue("~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '~'
         //
         verifyException("com.xero.models.payrollnz.CalendarType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CalendarType calendarType0 = CalendarType.MONTHLY;
      String string0 = calendarType0.getValue();
      assertEquals("Monthly", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CalendarType calendarType0 = CalendarType.MONTHLY;
      String string0 = calendarType0.toString();
      assertEquals("Monthly", string0);
  }
}
