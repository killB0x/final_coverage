/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 13:04:28 GMT 2022
 */

package com.xero.models.bankfeeds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.bankfeeds.FeedConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FeedConnection_ESTest extends FeedConnection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FeedConnection.StatusEnum feedConnection_StatusEnum0 = FeedConnection.StatusEnum.fromValue("PENDING");
      assertEquals(FeedConnection.StatusEnum.PENDING, feedConnection_StatusEnum0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FeedConnection.AccountTypeEnum feedConnection_AccountTypeEnum0 = FeedConnection.AccountTypeEnum.fromValue("BANK");
      assertEquals(FeedConnection.AccountTypeEnum.BANK, feedConnection_AccountTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FeedConnection.StatusEnum feedConnection_StatusEnum0 = FeedConnection.StatusEnum.fromValue("REJECTED");
      assertEquals(FeedConnection.StatusEnum.REJECTED, feedConnection_StatusEnum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        FeedConnection.StatusEnum.fromValue("CREDITCARD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'CREDITCARD'
         //
         verifyException("com.xero.models.bankfeeds.FeedConnection$StatusEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FeedConnection.AccountTypeEnum feedConnection_AccountTypeEnum0 = FeedConnection.AccountTypeEnum.fromValue("CREDITCARD");
      assertEquals(FeedConnection.AccountTypeEnum.CREDITCARD, feedConnection_AccountTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        FeedConnection.AccountTypeEnum.fromValue("BA^NK");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'BA^NK'
         //
         verifyException("com.xero.models.bankfeeds.FeedConnection$AccountTypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FeedConnection feedConnection0 = null;
      try {
        feedConnection0 = new FeedConnection();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.bankfeeds.FeedConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FeedConnection.StatusEnum feedConnection_StatusEnum0 = FeedConnection.StatusEnum.REJECTED;
      String string0 = feedConnection_StatusEnum0.getValue();
      assertEquals("REJECTED", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FeedConnection.StatusEnum feedConnection_StatusEnum0 = FeedConnection.StatusEnum.REJECTED;
      String string0 = feedConnection_StatusEnum0.toString();
      assertEquals("REJECTED", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FeedConnection.AccountTypeEnum feedConnection_AccountTypeEnum0 = FeedConnection.AccountTypeEnum.CREDITCARD;
      String string0 = feedConnection_AccountTypeEnum0.toString();
      assertEquals("CREDITCARD", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FeedConnection.AccountTypeEnum feedConnection_AccountTypeEnum0 = FeedConnection.AccountTypeEnum.BANK;
      String string0 = feedConnection_AccountTypeEnum0.getValue();
      assertEquals("BANK", string0);
  }
}
