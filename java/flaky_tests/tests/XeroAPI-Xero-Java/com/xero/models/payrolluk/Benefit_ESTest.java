/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 12:38:26 GMT 2022
 */

package com.xero.models.payrolluk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrolluk.Benefit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Benefit_ESTest extends Benefit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Benefit.CalculationTypeEnum benefit_CalculationTypeEnum0 = Benefit.CalculationTypeEnum.fromValue("FixedAmount");
      assertEquals(Benefit.CalculationTypeEnum.FIXEDAMOUNT, benefit_CalculationTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Benefit.CategoryEnum benefit_CategoryEnum0 = Benefit.CategoryEnum.fromValue("Other");
      assertEquals(Benefit.CategoryEnum.OTHER, benefit_CategoryEnum0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Benefit.CalculationTypeEnum benefit_CalculationTypeEnum0 = Benefit.CalculationTypeEnum.fromValue("PercentageOfGross");
      assertEquals(Benefit.CalculationTypeEnum.PERCENTAGEOFGROSS, benefit_CalculationTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Benefit.CalculationTypeEnum.fromValue("hu9WB5o");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'hu9WB5o'
         //
         verifyException("com.xero.models.payrolluk.Benefit$CalculationTypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Benefit.CategoryEnum benefit_CategoryEnum0 = Benefit.CategoryEnum.fromValue("StakeholderPension");
      assertEquals(Benefit.CategoryEnum.STAKEHOLDERPENSION, benefit_CategoryEnum0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Benefit.CategoryEnum.fromValue("Othr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'Othr'
         //
         verifyException("com.xero.models.payrolluk.Benefit$CategoryEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Benefit.CalculationTypeEnum benefit_CalculationTypeEnum0 = Benefit.CalculationTypeEnum.FIXEDAMOUNT;
      String string0 = benefit_CalculationTypeEnum0.toString();
      assertEquals("FixedAmount", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Benefit.CalculationTypeEnum benefit_CalculationTypeEnum0 = Benefit.CalculationTypeEnum.FIXEDAMOUNT;
      String string0 = benefit_CalculationTypeEnum0.getValue();
      assertEquals("FixedAmount", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Benefit benefit0 = null;
      try {
        benefit0 = new Benefit();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.payrolluk.Benefit", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Benefit.CategoryEnum benefit_CategoryEnum0 = Benefit.CategoryEnum.STAKEHOLDERPENSION;
      String string0 = benefit_CategoryEnum0.getValue();
      assertEquals("StakeholderPension", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Benefit.CategoryEnum benefit_CategoryEnum0 = Benefit.CategoryEnum.STAKEHOLDERPENSION;
      String string0 = benefit_CategoryEnum0.toString();
      assertEquals("StakeholderPension", string0);
  }
}
