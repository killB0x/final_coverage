/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 17:37:49 GMT 2022
 */

package com.xero.models.payrolluk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrolluk.PaymentMethod;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaymentMethod_ESTest extends PaymentMethod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PaymentMethod.PaymentMethodEnum paymentMethod_PaymentMethodEnum0 = PaymentMethod.PaymentMethodEnum.fromValue("Cheque");
      assertEquals(PaymentMethod.PaymentMethodEnum.CHEQUE, paymentMethod_PaymentMethodEnum0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        PaymentMethod.PaymentMethodEnum.fromValue("ar7epE{QGC4,u*L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'ar7epE{QGC4,u*L'
         //
         verifyException("com.xero.models.payrolluk.PaymentMethod$PaymentMethodEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PaymentMethod paymentMethod0 = null;
      try {
        paymentMethod0 = new PaymentMethod();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.payrolluk.PaymentMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PaymentMethod.PaymentMethodEnum paymentMethod_PaymentMethodEnum0 = PaymentMethod.PaymentMethodEnum.MANUAL;
      String string0 = paymentMethod_PaymentMethodEnum0.getValue();
      assertEquals("Manual", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PaymentMethod.PaymentMethodEnum paymentMethod_PaymentMethodEnum0 = PaymentMethod.PaymentMethodEnum.fromValue("Manual");
      String string0 = paymentMethod_PaymentMethodEnum0.toString();
      assertEquals("Manual", string0);
  }
}
