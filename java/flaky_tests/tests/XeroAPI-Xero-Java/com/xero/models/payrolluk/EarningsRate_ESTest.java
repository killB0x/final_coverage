/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 13:00:49 GMT 2022
 */

package com.xero.models.payrolluk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.models.payrolluk.EarningsRate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EarningsRate_ESTest extends EarningsRate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EarningsRate.RateTypeEnum earningsRate_RateTypeEnum0 = EarningsRate.RateTypeEnum.fromValue("MultipleOfOrdinaryEarningsRate");
      assertEquals(EarningsRate.RateTypeEnum.MULTIPLEOFORDINARYEARNINGSRATE, earningsRate_RateTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EarningsRate.EarningsTypeEnum earningsRate_EarningsTypeEnum0 = EarningsRate.EarningsTypeEnum.fromValue("StatutoryMaternityPay");
      assertEquals(EarningsRate.EarningsTypeEnum.STATUTORYMATERNITYPAY, earningsRate_EarningsTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EarningsRate.RateTypeEnum earningsRate_RateTypeEnum0 = EarningsRate.RateTypeEnum.fromValue("FixedAmount");
      assertEquals(EarningsRate.RateTypeEnum.FIXEDAMOUNT, earningsRate_RateTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        EarningsRate.RateTypeEnum.fromValue("StatutorySickPayNonPensionable");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'StatutorySickPayNonPensionable'
         //
         verifyException("com.xero.models.payrolluk.EarningsRate$RateTypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EarningsRate.EarningsTypeEnum earningsRate_EarningsTypeEnum0 = EarningsRate.EarningsTypeEnum.fromValue("RegularEarnings");
      assertEquals(EarningsRate.EarningsTypeEnum.REGULAREARNINGS, earningsRate_EarningsTypeEnum0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        EarningsRate.EarningsTypeEnum.fromValue("    ratePerUnit: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '    ratePerUnit: '
         //
         verifyException("com.xero.models.payrolluk.EarningsRate$EarningsTypeEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EarningsRate.EarningsTypeEnum earningsRate_EarningsTypeEnum0 = EarningsRate.EarningsTypeEnum.LUMPSUM;
      String string0 = earningsRate_EarningsTypeEnum0.toString();
      assertEquals("LumpSum", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EarningsRate.EarningsTypeEnum earningsRate_EarningsTypeEnum0 = EarningsRate.EarningsTypeEnum.LUMPSUM;
      String string0 = earningsRate_EarningsTypeEnum0.getValue();
      assertEquals("LumpSum", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EarningsRate earningsRate0 = null;
      try {
        earningsRate0 = new EarningsRate();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/threeten/bp/ZoneId
         //
         verifyException("com.xero.models.payrolluk.EarningsRate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EarningsRate.RateTypeEnum earningsRate_RateTypeEnum0 = EarningsRate.RateTypeEnum.RATEPERUNIT;
      String string0 = earningsRate_RateTypeEnum0.getValue();
      assertEquals("RatePerUnit", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EarningsRate.RateTypeEnum earningsRate_RateTypeEnum0 = EarningsRate.RateTypeEnum.RATEPERUNIT;
      String string0 = earningsRate_RateTypeEnum0.toString();
      assertEquals("RatePerUnit", string0);
  }
}
