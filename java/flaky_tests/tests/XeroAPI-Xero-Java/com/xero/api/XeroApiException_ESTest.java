/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:48:51 GMT 2022
 */

package com.xero.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xero.api.XeroApiException;
import com.xero.models.accounting.Error;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XeroApiException_ESTest extends XeroApiException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockException mockException0 = new MockException();
      XeroApiException xeroApiException0 = new XeroApiException(4, "%Z6~& t", mockException0);
      XeroApiException xeroApiException1 = new XeroApiException(0, (Error) null, xeroApiException0);
      int int0 = xeroApiException1.getResponseCode();
      assertEquals(0, int0);
      assertEquals(4, xeroApiException0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XeroApiException xeroApiException0 = new XeroApiException((-2043));
      int int0 = xeroApiException0.getResponseCode();
      assertEquals((-2043), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      XeroApiException xeroApiException0 = new XeroApiException(314, hashMap0);
      xeroApiException0.getMessages();
      assertEquals(" - ", xeroApiException0.getMessage());
      assertEquals(314, xeroApiException0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XeroApiException xeroApiException0 = new XeroApiException(14);
      xeroApiException0.getMessage();
      assertEquals(14, xeroApiException0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XeroApiException xeroApiException0 = new XeroApiException(2262, "O}?)8", (Error) null, (Exception) null);
      xeroApiException0.getMessage();
      assertEquals(2262, xeroApiException0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XeroApiException xeroApiException0 = null;
      try {
        xeroApiException0 = new XeroApiException((-421), (Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.xero.api.XeroApiException", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      hashMap0.put("Z2kjc`AZg", "Z2kjc`AZg");
      XeroApiException xeroApiException0 = new XeroApiException((-1379), hashMap0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XeroApiException xeroApiException0 = new XeroApiException((-10));
      xeroApiException0.getMessages();
      assertEquals((-10), xeroApiException0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockException mockException0 = new MockException();
      XeroApiException xeroApiException0 = new XeroApiException(0, "", mockException0);
      xeroApiException0.getMessage();
      assertEquals(0, xeroApiException0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XeroApiException xeroApiException0 = new XeroApiException(1800);
      int int0 = xeroApiException0.getResponseCode();
      assertEquals(1800, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockException mockException0 = new MockException();
      XeroApiException xeroApiException0 = new XeroApiException(0, "", mockException0);
      xeroApiException0.getError();
      assertEquals(0, xeroApiException0.getResponseCode());
  }
}
