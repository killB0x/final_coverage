/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 19:03:22 GMT 2022
 */

package org.moskito.javaagent.request;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.moskito.javaagent.request.RequestResultData;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RequestResultData_ESTest extends RequestResultData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      MockIOException mockIOException0 = new MockIOException();
      requestResultData0.setIOException(mockIOException0);
      Throwable throwable0 = requestResultData0.getException();
      assertSame(throwable0, mockIOException0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      requestResultData0.setDuration(2586L);
      long long0 = requestResultData0.getDuration();
      assertEquals(2586L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      MockIOException mockIOException0 = new MockIOException("Ev!cbX|p");
      MockThrowable mockThrowable0 = new MockThrowable(mockIOException0);
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("Ev!cbX|p", mockThrowable0);
      requestResultData0.setRuntimeException(mockRuntimeException0);
      assertEquals(0L, requestResultData0.getDuration());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      MockIOException mockIOException0 = new MockIOException("Ev!cbX|p");
      requestResultData0.setServletException(mockIOException0);
      assertEquals(0L, requestResultData0.getDuration());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      MockError mockError0 = new MockError((String) null);
      requestResultData0.setError(mockError0);
      assertEquals(0L, requestResultData0.getDuration());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      RequestResultData.ExceptionKind requestResultData_ExceptionKind0 = requestResultData0.getExceptionKind();
      assertEquals(RequestResultData.ExceptionKind.NONE, requestResultData_ExceptionKind0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      long long0 = requestResultData0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      requestResultData0.setDuration((-1L));
      long long0 = requestResultData0.getDuration();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RequestResultData requestResultData0 = new RequestResultData();
      Throwable throwable0 = requestResultData0.getException();
      assertNull(throwable0);
  }
}
