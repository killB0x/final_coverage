/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 16:29:19 GMT 2022
 */

package com.github.myzhan.locust4j.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.myzhan.locust4j.utils.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = Utils.round(1595L, (-1));
      assertEquals(1590L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long long0 = Utils.round(741, (-1840));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      long long0 = Utils.now();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis((-1840));
      long long0 = Utils.now();
      assertEquals((-1840L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = Utils.getSystemEnvWithDefault("", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = Utils.getSystemEnvWithDefault("z)n", "");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(256);
      long long0 = Utils.currentTimeInSeconds();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-1840));
      long long0 = Utils.currentTimeInSeconds();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.getSystemEnvWithDefault((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.ProcessEnvironment$Variable", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = Utils.md5(stringArray0);
      assertEquals("d41d8cd98f00b204e9800998ecf8427e", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        Utils.md5(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.myzhan.locust4j.utils.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long long0 = Utils.currentTimeInSeconds();
      assertEquals(1392409281L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long long0 = Utils.now();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = Utils.getHostname();
      assertEquals("192.168.1.42", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = Utils.getSystemEnvWithDefault("MD5", "@[%9UV =mCkN_");
      assertNotNull(string0);
      assertEquals("@[%9UV =mCkN_", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = Utils.getSystemEnvWithDefault("_", "_");
      assertEquals("/usr/bin/java", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long long0 = Utils.round(1528, (-1));
      assertEquals(1530L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long long0 = Utils.round((-1), 5);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Utils utils0 = new Utils();
      assertEquals(1392409281320L, utils0.now());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = Utils.getNodeID();
      assertEquals("192.168.1.42_22ebf9114a229e34c4e4776edea53044", string0);
  }
}
