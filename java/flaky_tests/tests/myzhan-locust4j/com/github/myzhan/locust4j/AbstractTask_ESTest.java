/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 16:26:58 GMT 2022
 */

package com.github.myzhan.locust4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.myzhan.locust4j.taskset.WeighingTaskSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractTask_ESTest extends AbstractTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("onStart", 0);
      int int0 = weighingTaskSet0.getWeight();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("", 1223);
      int int0 = weighingTaskSet0.getWeight();
      assertEquals(1223, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("onStart", (-21));
      int int0 = weighingTaskSet0.getWeight();
      assertEquals((-21), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet((String) null, 256);
      String string0 = weighingTaskSet0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("}n-LfX,aOxejXg%x{", (-580));
      String string0 = weighingTaskSet0.getName();
      assertEquals("}n-LfX,aOxejXg%x{", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("", (-354));
      String string0 = weighingTaskSet0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("", 1223);
      weighingTaskSet0.addTask(weighingTaskSet0);
      // Undeclared exception!
      try { 
        weighingTaskSet0.execute();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("unknown", 1);
      try { 
        weighingTaskSet0.execute();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be positive
         //
         verifyException("java.util.concurrent.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("", (-354));
      weighingTaskSet0.onStart();
      assertEquals((-354), weighingTaskSet0.getWeight());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("", (-354));
      weighingTaskSet0.onStop();
      assertEquals((-354), weighingTaskSet0.getWeight());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WeighingTaskSet weighingTaskSet0 = new WeighingTaskSet("unknown", 1);
      // Undeclared exception!
      try { 
        weighingTaskSet0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.myzhan.locust4j.AbstractTask", e);
      }
  }
}
