/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 04:51:52 GMT 2022
 */

package termo.matter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.beans.PropertyChangeEvent;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import termo.activityModel.NRTLActivityModel;
import termo.activityModel.VanLaarActivityModel;
import termo.binaryParameter.ActivityModelBinaryParameter;
import termo.binaryParameter.InteractionParameter;
import termo.component.Compound;
import termo.eos.Cubic;
import termo.eos.alpha.Alpha;
import termo.eos.alpha.GeneralTwuEquation;
import termo.eos.alpha.TwoEquationsAlphaExpression;
import termo.eos.alpha.TwuEquation;
import termo.eos.mixingRule.HuronVidalMixingRule;
import termo.eos.mixingRule.HuronVidalModified2Order;
import termo.eos.mixingRule.HuronVidalOrbeySandlerModification;
import termo.eos.mixingRule.TwoParameterVanDerWaals;
import termo.matter.HeterogeneousMixture;
import termo.matter.HeterogeneousSubstance;
import termo.matter.Homogeneous;
import termo.matter.Mixture;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Heterogeneous_ESTest extends Heterogeneous_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      heterogeneousSubstance0.setTemperature(1362.1186491852);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(heterogeneousMixture0, "B2cRNv{k", heterogeneousSubstance1, heterogeneousSubstance0);
      heterogeneousMixture0.propertyChange(propertyChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      heterogeneousSubstance0.setPressure(0.378893);
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      heterogeneousSubstance0.equals(heterogeneousSubstance1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      heterogeneousSubstance0.temperature = 1.0;
      heterogeneousSubstance0.equals(heterogeneousSubstance1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      heterogeneousSubstance1.setvF(3802.9);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(heterogeneousSubstance0, "alpha(T) = 10^{left(A+B+C\right)left(1-T_r\right)}", heterogeneousSubstance1, heterogeneousSubstance0);
      heterogeneousMixture0.propertyChange(propertyChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flashEstimateLiquidFractions((-265.6300772901), (-1512));
      heterogeneousMixture0.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.setPressure((-265.6300772901));
      heterogeneousMixture0.hashCode();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      TwoParameterVanDerWaals twoParameterVanDerWaals0 = new TwoParameterVanDerWaals();
      LinkedHashSet<Compound> linkedHashSet0 = new LinkedHashSet<Compound>();
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture(cubic0, (Alpha) null, twoParameterVanDerWaals0, linkedHashSet0, (InteractionParameter) null);
      heterogeneousMixture0.vF = (-2481.0809651762024);
      heterogeneousMixture0.calculateGibbs();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flashImpl((-266.2635786183), (-22.037117200508018), (-22.037117200508018));
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateGibbs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Mixture", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Compound compound0 = new Compound();
      GeneralTwuEquation generalTwuEquation0 = new GeneralTwuEquation();
      Cubic cubic0 = new Cubic();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance(cubic0, generalTwuEquation0, compound0);
      heterogeneousSubstance0.setvF(203.36);
      heterogeneousSubstance0.calculateEntropy();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      TwoParameterVanDerWaals twoParameterVanDerWaals0 = new TwoParameterVanDerWaals();
      LinkedHashSet<Compound> linkedHashSet0 = new LinkedHashSet<Compound>();
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture(cubic0, (Alpha) null, twoParameterVanDerWaals0, linkedHashSet0, (InteractionParameter) null);
      heterogeneousMixture0.vF = (-2481.0809651762024);
      heterogeneousMixture0.calculateEnthalpy();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.calculateVF();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.setvF(0.378893);
      heterogeneousMixture0.getvF();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.vapor = null;
      heterogeneousMixture0.getVapor();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Compound compound0 = new Compound();
      GeneralTwuEquation generalTwuEquation0 = new GeneralTwuEquation();
      Cubic cubic0 = new Cubic();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance(cubic0, generalTwuEquation0, compound0);
      heterogeneousSubstance0.bubbleTemperatureImpl();
      heterogeneousSubstance0.getVapor();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flashEstimateLiquidFractions((-265.6300772901), (-1512));
      heterogeneousMixture0.getVapor();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Compound compound0 = new Compound();
      GeneralTwuEquation generalTwuEquation0 = new GeneralTwuEquation();
      Cubic cubic0 = new Cubic();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance(cubic0, generalTwuEquation0, compound0);
      heterogeneousSubstance0.getVapor();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.setPressure(1.01);
      heterogeneousMixture0.getVapor();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.setPressure((-265.6300772901));
      heterogeneousMixture0.getVapor();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flashEstimateLiquidFractions(0.5, 0.0);
      heterogeneousMixture0.getTemperature();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flashEstimateEquilibriumRelations((-3295.09238270673), (-3295.09238270673));
      heterogeneousMixture0.getTemperature();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flashImpl((-266.2635786183), 3.4, 3.4);
      heterogeneousMixture0.getPressure();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flashImpl((-266.2635786183), (-22.037117200508018), (-22.037117200508018));
      heterogeneousMixture0.getPressure();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.setTemperature((-579.086614618387));
      heterogeneousMixture0.getLiquid();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.getLiquid();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.bubblePressure(0.378893, (Map<String, Double>) null);
      heterogeneousMixture0.getLiquid();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.flash(165.8672, (-1798.35));
      heterogeneousMixture0.getLiquid();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.mpcs = null;
      // Undeclared exception!
      try { 
        heterogeneousMixture0.setPressure((-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Heterogeneous", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      // Undeclared exception!
      try { 
        heterogeneousMixture0.propertyChange((PropertyChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Heterogeneous", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      // Undeclared exception!
      try { 
        heterogeneousSubstance0.calculateVF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      VanLaarActivityModel vanLaarActivityModel0 = new VanLaarActivityModel();
      Cubic cubic0 = new Cubic();
      HuronVidalModified2Order huronVidalModified2Order0 = new HuronVidalModified2Order(vanLaarActivityModel0, cubic0);
      heterogeneousMixture0.setMixingRule(huronVidalModified2Order0);
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateGibbs();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      NRTLActivityModel nRTLActivityModel0 = new NRTLActivityModel();
      HuronVidalModified2Order huronVidalModified2Order0 = new HuronVidalModified2Order(nRTLActivityModel0, cubic0);
      LinkedHashSet<Compound> linkedHashSet0 = new LinkedHashSet<Compound>();
      ActivityModelBinaryParameter activityModelBinaryParameter0 = new ActivityModelBinaryParameter();
      InteractionParameter interactionParameter0 = activityModelBinaryParameter0.getAlpha();
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture(cubic0, (Alpha) null, huronVidalModified2Order0, linkedHashSet0, interactionParameter0);
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateGibbs();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class termo.binaryParameter.InteractionParameter cannot be cast to class termo.binaryParameter.ActivityModelBinaryParameter (termo.binaryParameter.InteractionParameter and termo.binaryParameter.ActivityModelBinaryParameter are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9b4b2)
         //
         verifyException("termo.activityModel.NRTLActivityModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      VanLaarActivityModel vanLaarActivityModel0 = new VanLaarActivityModel();
      Cubic cubic0 = new Cubic();
      HuronVidalMixingRule huronVidalMixingRule0 = new HuronVidalMixingRule(vanLaarActivityModel0, cubic0);
      heterogeneousMixture0.setMixingRule(huronVidalMixingRule0);
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateEntropy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      TwoEquationsAlphaExpression twoEquationsAlphaExpression0 = new TwoEquationsAlphaExpression();
      NRTLActivityModel nRTLActivityModel0 = new NRTLActivityModel();
      HuronVidalMixingRule huronVidalMixingRule0 = new HuronVidalMixingRule(nRTLActivityModel0, cubic0, false);
      LinkedHashSet<Compound> linkedHashSet0 = new LinkedHashSet<Compound>();
      InteractionParameter interactionParameter0 = new InteractionParameter(false);
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture(cubic0, twoEquationsAlphaExpression0, huronVidalMixingRule0, linkedHashSet0, interactionParameter0);
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateEntropy();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class termo.binaryParameter.InteractionParameter cannot be cast to class termo.binaryParameter.ActivityModelBinaryParameter (termo.binaryParameter.InteractionParameter and termo.binaryParameter.ActivityModelBinaryParameter are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9b4b2)
         //
         verifyException("termo.activityModel.NRTLActivityModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GeneralTwuEquation generalTwuEquation0 = new GeneralTwuEquation();
      LinkedHashSet<Compound> linkedHashSet0 = new LinkedHashSet<Compound>();
      Cubic cubic0 = new Cubic();
      VanLaarActivityModel vanLaarActivityModel0 = new VanLaarActivityModel();
      HuronVidalOrbeySandlerModification huronVidalOrbeySandlerModification0 = new HuronVidalOrbeySandlerModification(vanLaarActivityModel0, cubic0);
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture(cubic0, generalTwuEquation0, huronVidalOrbeySandlerModification0, linkedHashSet0, (InteractionParameter) null);
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateEnthalpy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      TwuEquation twuEquation0 = new TwuEquation();
      TwoParameterVanDerWaals twoParameterVanDerWaals0 = new TwoParameterVanDerWaals();
      LinkedHashSet<Compound> linkedHashSet0 = new LinkedHashSet<Compound>();
      ActivityModelBinaryParameter activityModelBinaryParameter0 = new ActivityModelBinaryParameter();
      InteractionParameter interactionParameter0 = activityModelBinaryParameter0.getA();
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture(cubic0, twuEquation0, twoParameterVanDerWaals0, linkedHashSet0, interactionParameter0);
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateEnthalpy();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class termo.binaryParameter.InteractionParameter cannot be cast to class termo.binaryParameter.ActivityModelBinaryParameter (termo.binaryParameter.InteractionParameter and termo.binaryParameter.ActivityModelBinaryParameter are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9b4b2)
         //
         verifyException("termo.eos.mixingRule.TwoParameterVanDerWaals", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("pressure", "pressure", "pressure", "pressure");
      // Undeclared exception!
      try { 
        heterogeneousMixture0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.lang.Double (java.lang.String and java.lang.Double are in module java.base of loader 'bootstrap')
         //
         verifyException("termo.matter.Heterogeneous", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("temperature", "temperature", "temperature", "temperature");
      // Undeclared exception!
      try { 
        heterogeneousMixture0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.lang.Double (java.lang.String and java.lang.Double are in module java.base of loader 'bootstrap')
         //
         verifyException("termo.matter.Heterogeneous", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      TwoParameterVanDerWaals twoParameterVanDerWaals0 = new TwoParameterVanDerWaals();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance(cubic0, (Alpha) null, (Compound) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(twoParameterVanDerWaals0, "", heterogeneousSubstance0, (Object) null);
      heterogeneousSubstance0.propertyChange(propertyChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("phase", "phase", heterogeneousMixture0, "phase");
      heterogeneousMixture0.propertyChange(propertyChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.addPropertyChangeListener(heterogeneousMixture0);
      heterogeneousMixture0.bubbleTemperature();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      Mixture mixture0 = new Mixture();
      heterogeneousSubstance1.vapor = (Homogeneous) mixture0;
      heterogeneousSubstance1.equals(heterogeneousSubstance0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      heterogeneousSubstance1.setPressure((-837.16302215));
      heterogeneousSubstance1.equals(heterogeneousSubstance0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      HeterogeneousMixture heterogeneousMixture1 = new HeterogeneousMixture();
      heterogeneousMixture0.equals(heterogeneousMixture1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      heterogeneousSubstance0.liquid = null;
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      heterogeneousSubstance1.liquid = null;
      heterogeneousSubstance0.equals(heterogeneousSubstance1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      heterogeneousSubstance0.liquid = null;
      HeterogeneousSubstance heterogeneousSubstance1 = new HeterogeneousSubstance();
      heterogeneousSubstance0.equals(heterogeneousSubstance1);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      heterogeneousMixture0.equals(heterogeneousSubstance0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.setVapor((Mixture) null);
      heterogeneousMixture0.hashCode();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.liquid = null;
      heterogeneousMixture0.hashCode();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      heterogeneousSubstance0.getvF();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.getPressure();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      // Undeclared exception!
      try { 
        heterogeneousMixture0.calculateEnthalpy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Mixture", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.getTemperature();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance(cubic0, (Alpha) null, (Compound) null);
      // Undeclared exception!
      try { 
        heterogeneousSubstance0.calculateEntropy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HeterogeneousSubstance heterogeneousSubstance0 = new HeterogeneousSubstance();
      heterogeneousSubstance0.setvF((-0.2699));
      heterogeneousSubstance0.getvF();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HeterogeneousMixture heterogeneousMixture0 = new HeterogeneousMixture();
      heterogeneousMixture0.addPropertyChangeListener(heterogeneousMixture0);
      heterogeneousMixture0.dewPressure();
      assertEquals(Double.NaN, heterogeneousMixture0.getPressure(), 0.01);
  }
}
