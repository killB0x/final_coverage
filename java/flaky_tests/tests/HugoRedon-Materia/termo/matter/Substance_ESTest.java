/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 05:05:00 GMT 2022
 */

package termo.matter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.beans.PropertyChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import termo.component.Compound;
import termo.eos.Cubic;
import termo.eos.alpha.AdachiAndLuAlphaExpresion;
import termo.eos.alpha.Alpha;
import termo.eos.alpha.AndroulakisEtAl;
import termo.eos.alpha.AndroulakisEtAlAboveTc;
import termo.eos.alpha.CommonAlphaEquation;
import termo.eos.alpha.GCEOSEquation;
import termo.eos.alpha.GeneralTwuEquation;
import termo.eos.alpha.MathiasAboveTcAlphaEquation;
import termo.eos.alpha.MathiasCopemanEquation;
import termo.eos.alpha.MelhemEtAl;
import termo.eos.alpha.Soave2Parameters;
import termo.eos.alpha.TwoEquationsAlphaExpression;
import termo.eos.alpha.UnitAlpha;
import termo.eos.alpha.YuAndLu;
import termo.eos.alpha.YuAndLuAboveTc;
import termo.eos.alpha.commonaAlphaEquationsImplementation.MathiasAlpha;
import termo.eos.alpha.commonaAlphaEquationsImplementation.PengAndRobinsonAlpha;
import termo.eos.alpha.commonaAlphaEquationsImplementation.SoaveAlpha;
import termo.eos.alpha.commonaAlphaEquationsImplementation.StryjekAndVera;
import termo.matter.Substance;
import termo.phase.Phase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Substance_ESTest extends Substance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasAlpha mathiasAlpha0 = new MathiasAlpha();
      Phase phase0 = Phase.LIQUID;
      Compound compound0 = new Compound("'");
      Substance substance0 = new Substance(cubic0, mathiasAlpha0, compound0, phase0);
      assertEquals(Double.NaN, substance0.calculatetAcentricFactorBasedVaporPressure(), 0.01);
      
      substance0.setTemperature(Double.NaN);
      substance0.calculatetAcentricFactorBasedVaporPressure();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      compound0.setCriticalTemperature((-0.17131848));
      double double0 = substance0.calculatetAcentricFactorBasedVaporPressure();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAcentricFactor(122.64);
      YuAndLu yuAndLu0 = new YuAndLu();
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      double double0 = substance0.calculatetAcentricFactorBasedVaporPressure();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasAlpha mathiasAlpha0 = new MathiasAlpha();
      Phase phase0 = Phase.LIQUID;
      Compound compound0 = new Compound("'");
      Substance substance0 = new Substance(cubic0, mathiasAlpha0, compound0, phase0);
      substance0.setTemperature(Double.NaN);
      substance0.calculateIdealGasEntropy();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      SoaveAlpha soaveAlpha0 = new SoaveAlpha();
      Phase phase0 = Phase.LIQUID;
      compound0.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa(290.1743);
      Substance substance0 = new Substance(cubic0, soaveAlpha0, compound0, phase0);
      substance0.calculateGibbs();
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("alpha");
      Phase phase0 = Phase.LIQUID;
      compound0.setAbsoluteEntropyofIdealGasat298_15Kand101325Pa(298.15);
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.calculateEntropy();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("alpha");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
      
      cubic0.setOmega_b(Double.NaN);
      substance0.calculateGibbs();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      compound0.setCriticalPressure(3868.0902462425);
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      substance0.calculateGibbs();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(0.0, substance0.calculate_b_cubicParameter(), 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      substance0.calculatePressure(0.0, 2426.7);
      substance0.calculateGibbs();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      compound0.setCriticalTemperature((-0.17131848));
      substance0.calculateGibbs();
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AndroulakisEtAl androulakisEtAl0 = new AndroulakisEtAl();
      Phase phase0 = Phase.VAPOR;
      cubic0.setOmega_a(4675.12596911947);
      Substance substance0 = new Substance(cubic0, androulakisEtAl0, compound0, phase0);
      substance0.calculateCompresibilityFactor();
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      assertEquals(Double.NaN, substance0.calculatetAcentricFactorBasedVaporPressure(), 0.01);
      
      substance0.calculatePressure(416.11488, 416.11488);
      double double0 = substance0.calculatetAcentricFactorBasedVaporPressure();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AndroulakisEtAlAboveTc androulakisEtAlAboveTc0 = new AndroulakisEtAlAboveTc();
      Compound compound0 = new Compound("butk:7%.YR&'Xn~}I");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, androulakisEtAlAboveTc0, compound0, phase0);
      Substance substance1 = new Substance();
      // Undeclared exception!
      try { 
        substance0.oneOver_N_Parcial_b(substance1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      compound0.setEnthalpyofFormationofIdealgasat298_15Kand101325Pa(0.378893);
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      substance0.calculateGibbs();
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound("UTrU%DA9y");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      String string0 = substance0.toString();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals("Pure substance with: Cubic Equation of State: null Alpha Expression: Stryjek and Vera Component: utru%da9y", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Substance substance0 = new Substance();
      substance0.hashCode();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.oneOver_N_Parcial_a(substance0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.calculate_a_cubicParameter();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, pengAndRobinsonAlpha0, compound0, phase0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(compound0, "alpha", (Object) null, (Object) null);
      substance0.propertyChange(propertyChangeEvent0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      compound0.setCriticalPressure(3868.0902462425);
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      double double0 = substance0.oneOver_N_Parcial_b(substance0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AndroulakisEtAl androulakisEtAl0 = new AndroulakisEtAl();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, androulakisEtAl0, compound0, phase0);
      Double double0 = new Double(0.0);
      substance0.setMolarFraction(double0);
      Double double1 = substance0.getMolarFraction();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Substance substance0 = new Substance();
      Double double0 = substance0.getMolarFraction();
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Substance substance0 = new Substance();
      substance0.setMolarFraction((Double) null);
      Double double0 = substance0.getMolarFraction();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.LIQUID;
      MelhemEtAl melhemEtAl0 = new MelhemEtAl();
      Substance substance0 = new Substance(cubic0, melhemEtAl0, compound0, phase0);
      Double double0 = new Double((-2320.3650712));
      substance0.setMolarFraction(double0);
      Double double1 = substance0.getMolarFraction();
      assertEquals((-2320.3650712), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponentAlphaParameters();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Substance substance0 = new Substance();
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      compound0.setUpperFlammabilityLimitTemperature(3.4);
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      UnitAlpha unitAlpha0 = new UnitAlpha();
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimitTemperature((-117.95));
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, unitAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AndroulakisEtAlAboveTc androulakisEtAlAboveTc0 = new AndroulakisEtAlAboveTc();
      Compound compound0 = new Compound("7,ZyYN{M#lF2.7");
      compound0.setUpperFlammabilityLimit(1090.3922778912);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, androulakisEtAlAboveTc0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      TwoEquationsAlphaExpression twoEquationsAlphaExpression0 = new TwoEquationsAlphaExpression();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, twoEquationsAlphaExpression0, compound0, phase0);
      compound0.setUpperFlammabilityLimit((-2607.5));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      MathiasAlpha mathiasAlpha0 = new MathiasAlpha();
      Compound compound0 = new Compound("BDA.>n*Oj@'XU");
      compound0.setTriplePointTemperature(1.0);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance((Cubic) null, mathiasAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MelhemEtAl melhemEtAl0 = new MelhemEtAl();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      compound0.setTriplePointTemperature((-2410.0));
      Substance substance0 = new Substance(cubic0, melhemEtAl0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AndroulakisEtAlAboveTc androulakisEtAlAboveTc0 = new AndroulakisEtAlAboveTc();
      Compound compound0 = new Compound("7,ZyYN{M#lF2.7");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, androulakisEtAlAboveTc0, compound0, phase0);
      compound0.setTriplePointPressure(10.0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      UnitAlpha unitAlpha0 = new UnitAlpha();
      Compound compound0 = new Compound("m8^");
      compound0.setTriplePointPressure((-2776.8));
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, unitAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      TwoEquationsAlphaExpression twoEquationsAlphaExpression0 = new TwoEquationsAlphaExpression();
      Compound compound0 = new Compound("*W73Yu$|SW~0MLdN}");
      Phase phase0 = Phase.LIQUID;
      compound0.setSolubilityParameterat298_15K(1736.2926);
      Substance substance0 = new Substance(cubic0, twoEquationsAlphaExpression0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      compound0.setSolubilityParameterat298_15K((-2181.082817456444));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      compound0.setRefractiveIndexat298_15K(634.19729695708);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound("");
      Phase phase0 = Phase.VAPOR;
      compound0.setRefractiveIndexat298_15K((-254.9284));
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Compound compound0 = new Compound();
      compound0.setRadiusofGyration(3524.0292619198);
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound("UTrU%DA9y");
      compound0.setRadiusofGyration((-192.758486));
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      UnitAlpha unitAlpha0 = new UnitAlpha();
      Compound compound0 = new Compound();
      compound0.setR_UNIQUAC(0.5);
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, unitAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("alpha");
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      compound0.setQ_UNIQUAC(Double.NaN);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      Phase phase0 = Phase.LIQUID;
      Compound compound0 = new Compound("+ C ");
      Substance substance0 = new Substance(cubic0, pengAndRobinsonAlpha0, compound0, phase0);
      compound0.setQ_UNIQUAC((-1688.9573651));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Compound compound0 = new Compound();
      compound0.setNormalBoilingPoint_1atm(634.19729695708);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Compound compound0 = new Compound();
      compound0.setNormalBoilingPoint_1atm((-2.3333333333333335));
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Compound compound0 = new Compound(" Component: ");
      Phase phase0 = Phase.VAPOR;
      compound0.setNetEnthalpyofCombustionStandardState298_15K(3.358894796607);
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      MathiasAboveTcAlphaEquation mathiasAboveTcAlphaEquation0 = new MathiasAboveTcAlphaEquation(pengAndRobinsonAlpha0);
      Compound compound0 = new Compound("Pure substance with: Cubic Equation of State: ");
      Phase phase0 = Phase.LIQUID;
      compound0.setNetEnthalpyofCombustionStandardState298_15K((-493.8709679));
      Substance substance0 = new Substance(cubic0, mathiasAboveTcAlphaEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      SoaveAlpha soaveAlpha0 = new SoaveAlpha();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soaveAlpha0, compound0, phase0);
      compound0.setN_Twu(Double.NaN);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound("v-X!pJa");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      compound0.setN_Twu((-211.0));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      MathiasAboveTcAlphaEquation mathiasAboveTcAlphaEquation0 = new MathiasAboveTcAlphaEquation((CommonAlphaEquation) null);
      Compound compound0 = new Compound("e#tw3bBoi");
      Phase phase0 = Phase.VAPOR;
      compound0.setMeltingPoint_1atm(2457.919568771);
      Substance substance0 = new Substance((Cubic) null, mathiasAboveTcAlphaEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      compound0.setM_Twu(8314.472);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound("");
      Phase phase0 = Phase.LIQUID;
      compound0.setLowerFlammabilityLimitTemperature(3517.46);
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      compound0.setLowerFlammabilityLimitTemperature((-1681.240955999));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLuAboveTc yuAndLuAboveTc0 = new YuAndLuAboveTc();
      Compound compound0 = new Compound("B-uwkB}Lg)Ix>Pd/e@");
      compound0.setLowerFlammabilityLimit((-2990.167594));
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, yuAndLuAboveTc0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GeneralTwuEquation generalTwuEquation0 = new GeneralTwuEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      compound0.setLiquidMolarVolumeat298_15K(2444.069871142063);
      Substance substance0 = new Substance(cubic0, generalTwuEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      Phase phase0 = Phase.LIQUID;
      Compound compound0 = new Compound("+ C ");
      compound0.setLiquidMolarVolumeat298_15K((-3417.0));
      Substance substance0 = new Substance(cubic0, pengAndRobinsonAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("alpha");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      compound0.setL_Twu(Double.NaN);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      AndroulakisEtAlAboveTc androulakisEtAlAboveTc0 = new AndroulakisEtAlAboveTc();
      Substance substance0 = new Substance(cubic0, androulakisEtAlAboveTc0, compound0, phase0);
      compound0.setL_Twu((-0.2699));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Compound compound0 = new Compound("ny'(X_,^Lq*y\"CT9o");
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      compound0.setK_StryjekAndVera(0.5);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound("IoNg>V*AK%ms_;>'");
      compound0.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa(1108.7);
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AndroulakisEtAlAboveTc androulakisEtAlAboveTc0 = new AndroulakisEtAlAboveTc();
      Compound compound0 = new Compound("7,ZyYN{M#lF2.7");
      compound0.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa((-687.10285372355));
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, androulakisEtAlAboveTc0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      compound0.setGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa((-63.906289));
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      compound0.setFlashPoint(8314.472);
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      compound0.setF_PolinomialCp(298.15);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MathiasAlpha mathiasAlpha0 = new MathiasAlpha();
      Compound compound0 = new Compound("BDA.>n*Oj@'XU");
      Phase phase0 = Phase.LIQUID;
      compound0.setEnthalpyorHeatofSublimation(1598.4297006572694);
      Substance substance0 = new Substance((Cubic) null, mathiasAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      MathiasAlpha mathiasAlpha0 = new MathiasAlpha();
      Compound compound0 = new Compound("BDA.>n*Oj@'XU");
      Phase phase0 = Phase.LIQUID;
      compound0.setEnthalpyorHeatofSublimation((-939.083515103569));
      Substance substance0 = new Substance((Cubic) null, mathiasAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyofFusionatMeltingPoint(101325.0);
      YuAndLu yuAndLu0 = new YuAndLu();
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      compound0.setEnthalpyofFusionatMeltingPoint((-1237.11279002));
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound("UTrU%DA9y");
      compound0.setEnthalpyofFormationofIdealgasat298_15Kand101325Pa(1641.0633447);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      MelhemEtAl melhemEtAl0 = new MelhemEtAl();
      Phase phase0 = Phase.VAPOR;
      compound0.setEnthalpyofFormationofIdealgasat298_15Kand101325Pa((-38.47521866));
      Substance substance0 = new Substance(cubic0, melhemEtAl0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Compound compound0 = new Compound(" Component: ");
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      compound0.setE_dippr107Cp(964.0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Phase phase0 = Phase.VAPOR;
      Compound compound0 = new Compound("tsBOfJ!QLkEf");
      compound0.setE_dippr107Cp((-1803.7325582818053));
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound();
      compound0.setE_PolinomialCp(1383.935);
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      compound0.setE_PolinomialCp((-1188.593));
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound();
      compound0.setDipprChemID(92909918);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MelhemEtAl melhemEtAl0 = new MelhemEtAl();
      Compound compound0 = new Compound("");
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, melhemEtAl0, compound0, phase0);
      compound0.setDipprChemID((-2069));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      UnitAlpha unitAlpha0 = new UnitAlpha();
      Compound compound0 = new Compound();
      compound0.setDielectricConstant(8314.472);
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, unitAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      compound0.setDielectricConstant((-0.6666666666666666));
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      compound0.setD_dippr107Cp((-2.3333333333333335));
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      compound0.setD_PolinomialCp(1557.2382586954002);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound("UTrU%DA9y");
      Phase phase0 = Phase.LIQUID;
      compound0.setCriticalVolume(298.15);
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MelhemEtAl melhemEtAl0 = new MelhemEtAl();
      Compound compound0 = new Compound("");
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, melhemEtAl0, compound0, phase0);
      compound0.setCriticalPressure((-2069));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      compound0.setCriticalCompressibilityFactor(3524.0292619198);
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.LIQUID;
      compound0.setCriticalCompressibilityFactor((-2.3333333333333335));
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Compound compound0 = new Compound("=1>]qoy");
      Phase phase0 = Phase.VAPOR;
      compound0.setC_dippr107Cp(10.0);
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      Phase phase0 = Phase.LIQUID;
      Compound compound0 = new Compound("+ C ");
      Substance substance0 = new Substance(cubic0, pengAndRobinsonAlpha0, compound0, phase0);
      compound0.setC_dippr107Cp((-1.0));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      compound0.setC_YuAndLu(Double.NaN);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      compound0.setC_PolinomialCp(298.15);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      compound0.setC_Mathias_Copeman(2214.3419454);
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, pengAndRobinsonAlpha0, compound0, phase0);
      compound0.setC_Mathias_Copeman((-4014.394890655));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLuAboveTc yuAndLuAboveTc0 = new YuAndLuAboveTc();
      Compound compound0 = new Compound("B-uwkB}Lg)Ix>Pd/e@");
      Phase phase0 = Phase.VAPOR;
      compound0.setC_AndroulakisEtAl(2598.0);
      Substance substance0 = new Substance(cubic0, yuAndLuAboveTc0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Compound compound0 = new Compound("ln{alpha(T)} = Aleft( 1- T_r\right) + B (1-sqrt{T_r})^2");
      Phase phase0 = Phase.VAPOR;
      compound0.setB_dippr107Cp(10.0);
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound("KR4N3}");
      Phase phase0 = Phase.LIQUID;
      compound0.setB_dippr107Cp((-428.87945181526896));
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasCopemanEquation mathiasCopemanEquation0 = new MathiasCopemanEquation();
      Compound compound0 = new Compound("ln{alpha(T)} = Aleft( 1- T_r\right) + B (1-sqrt{T_r})^2");
      Phase phase0 = Phase.VAPOR;
      compound0.setB_YuAndLu(1.54226);
      Substance substance0 = new Substance(cubic0, mathiasCopemanEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      compound0.setB_YuAndLu((-5451.536));
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MelhemEtAl melhemEtAl0 = new MelhemEtAl();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, melhemEtAl0, compound0, phase0);
      compound0.setB_Soave(1641.0633447);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      Phase phase0 = Phase.LIQUID;
      Compound compound0 = new Compound("+ C ");
      compound0.setB_PolinomialCp(1929.4799332081832);
      Substance substance0 = new Substance(cubic0, pengAndRobinsonAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      compound0.setB_PolinomialCp((-192.758486));
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      TwoEquationsAlphaExpression twoEquationsAlphaExpression0 = new TwoEquationsAlphaExpression();
      Compound compound0 = new Compound("*W73Yu$|SW~0MLdN}");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, twoEquationsAlphaExpression0, compound0, phase0);
      compound0.setB_MelhemEtAl(Double.NaN);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      Phase phase0 = Phase.LIQUID;
      Compound compound0 = new Compound("+ C ");
      Substance substance0 = new Substance(cubic0, pengAndRobinsonAlpha0, compound0, phase0);
      compound0.setB_Mathias_Copeman((-1.0));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      compound0.setB_AndroulakisEtAl(1232.7226935);
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_AdachiAndLu(2191.42751);
      Cubic cubic0 = new Cubic();
      AndroulakisEtAl androulakisEtAl0 = new AndroulakisEtAl();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, androulakisEtAl0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLuAboveTc yuAndLuAboveTc0 = new YuAndLuAboveTc();
      Compound compound0 = new Compound("B-uwkB}Lg)Ix>Pd/e@");
      compound0.setB_AdachiAndLu((-54.08421656336332));
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, yuAndLuAboveTc0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      compound0.setAutoIgnitionTermperature(3625.365049);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      YuAndLu yuAndLu0 = new YuAndLu();
      compound0.setAutoIgnitionTermperature((-3037.4783579384457));
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.VAPOR;
      compound0.setAcentricFactor(10.0);
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound("");
      Phase phase0 = Phase.VAPOR;
      compound0.setAbsoluteEntropyofIdealGasat298_15Kand101325Pa(1033.1307);
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      PengAndRobinsonAlpha pengAndRobinsonAlpha0 = new PengAndRobinsonAlpha();
      MathiasAboveTcAlphaEquation mathiasAboveTcAlphaEquation0 = new MathiasAboveTcAlphaEquation(pengAndRobinsonAlpha0);
      Compound compound0 = new Compound("Pure substance with: Cubic Equation of State: ");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, mathiasAboveTcAlphaEquation0, compound0, phase0);
      compound0.setAbsoluteEntropyofIdealGasat298_15Kand101325Pa((-513.0));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAbsoluteEntropyinStandardStateat298_15Kand101325Pa(1.54226);
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.LIQUID;
      MelhemEtAl melhemEtAl0 = new MelhemEtAl();
      Substance substance0 = new Substance(cubic0, melhemEtAl0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      SoaveAlpha soaveAlpha0 = new SoaveAlpha();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soaveAlpha0, compound0, phase0);
      compound0.setA_dippr107Cp(5.0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      compound0.setA_YuAndLu(Double.NaN);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      compound0.setA_Soave(1608.66);
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      compound0.setA_PolinomialCp(Double.NaN);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      compound0.setA_PolinomialCp((-1308.876815217686));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      compound0.setA_MelhemEtAl(298.15);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Compound compound0 = new Compound("SLG&NUNp");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, stryjekAndVera0, compound0, phase0);
      compound0.setA_MelhemEtAl((-412.27));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      MathiasAlpha mathiasAlpha0 = new MathiasAlpha();
      Compound compound0 = new Compound(" Component: ");
      Phase phase0 = Phase.VAPOR;
      compound0.setA_Mathias_Copeman(4058.101342947053);
      Substance substance0 = new Substance(cubic0, mathiasAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      compound0.setA_Mathias_Copeman((-56.42));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      MathiasAlpha mathiasAlpha0 = new MathiasAlpha();
      Compound compound0 = new Compound();
      mathiasAlpha0.setParameter(1.4897153, compound0, 0);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance((Cubic) null, mathiasAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Phase phase0 = Phase.LIQUID;
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      compound0.setA_Mathias((-508.3498461778076));
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_AndroulakisEtAl(1582.829);
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      UnitAlpha unitAlpha0 = new UnitAlpha();
      Compound compound0 = new Compound("m8^");
      compound0.setA_AdachiAndLu(10.0);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, unitAlpha0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      compound0.setA_AdachiAndLu((-1129.107049));
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.getComponent();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      substance0.getAlpha();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      compound0.setCriticalPressure(2.0);
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      double double0 = substance0.calculate_b_cubicParameter();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.propertyChange((PropertyChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Homogeneous", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.partial_aPartial_temperature();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.oneOver_N_Parcial_a(substance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.getComponentAlphaParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.equals(substance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.calculatetAcentricFactorBasedVaporPressure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.calculate_b_cubicParameter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.calculate_a_cubicParameter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.calculateIdealGasEntropy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.calculateIdealGasEnthalpy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.calculateFugacityCoefficient();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Substance substance0 = new Substance();
      // Undeclared exception!
      try { 
        substance0.calculateFugacity();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLuAboveTc yuAndLuAboveTc0 = new YuAndLuAboveTc();
      Compound compound0 = new Compound("Pure substance with: Cubic Equation of State: ");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLuAboveTc0, compound0, phase0);
      substance0.getAlpha();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Compound compound0 = new Compound();
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      compound0.setAbsoluteEntropyofIdealGasat298_15Kand101325Pa((-192.758486));
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.calculateGibbs();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AndroulakisEtAl androulakisEtAl0 = new AndroulakisEtAl();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, androulakisEtAl0, compound0, phase0);
      Substance substance1 = new Substance(cubic0, (Alpha) null, compound0, phase0);
      boolean boolean0 = substance1.equals(substance0);
      assertEquals(1.0, substance1.getMolarFraction(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AndroulakisEtAl androulakisEtAl0 = new AndroulakisEtAl();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, androulakisEtAl0, compound0, phase0);
      Cubic cubic1 = new Cubic();
      Substance substance1 = new Substance(cubic1, androulakisEtAl0, compound0, phase0);
      cubic1.setW(298.15);
      boolean boolean0 = substance1.equals(substance0);
      assertEquals(1.0, substance1.getMolarFraction(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      boolean boolean0 = substance0.equals(substance0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      Substance substance1 = new Substance();
      boolean boolean0 = substance1.equals(substance0);
      assertEquals(1.0, substance1.getMolarFraction(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Substance substance0 = new Substance();
      Cubic cubic0 = new Cubic();
      StryjekAndVera stryjekAndVera0 = new StryjekAndVera();
      Phase phase0 = Phase.VAPOR;
      Substance substance1 = new Substance(cubic0, stryjekAndVera0, (Compound) null, phase0);
      boolean boolean0 = substance0.equals((Object) substance1);
      assertEquals(1.0, substance1.getMolarFraction(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Substance substance0 = new Substance();
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("~c");
      Phase phase0 = Phase.VAPOR;
      Substance substance1 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      boolean boolean0 = substance0.equals((Object) substance1);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(1.0, substance1.getMolarFraction(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Substance substance0 = new Substance();
      boolean boolean0 = substance0.equals((Object) substance0);
      assertTrue(boolean0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Substance substance0 = new Substance();
      boolean boolean0 = substance0.equals((Object) null);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      Compound compound0 = new Compound("KR4N3}");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, gCEOSEquation0, compound0, phase0);
      boolean boolean0 = substance0.equals((Object) cubic0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("alpha");
      Cubic cubic0 = new Cubic();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "alpha", object0, substance0);
      // Undeclared exception!
      try { 
        substance0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class termo.matter.Substance cannot be cast to class termo.eos.alpha.Alpha (termo.matter.Substance and termo.eos.alpha.Alpha are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @78b55c79)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("alpha");
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(phase0, "]+1L5Mz2A+", substance0, "alpha");
      substance0.propertyChange(propertyChangeEvent0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Substance substance0 = new Substance();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("component", "component", substance0, substance0);
      // Undeclared exception!
      try { 
        substance0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class termo.matter.Substance cannot be cast to class termo.component.Compound (termo.matter.Substance and termo.component.Compound are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @78b55c79)
         //
         verifyException("termo.matter.Substance", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.calculateIdealGasEnthalpy();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.getComponentAlphaParameters();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.partial_aPartial_temperature();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      UnitAlpha unitAlpha0 = new UnitAlpha();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, unitAlpha0, compound0, phase0);
      substance0.setAlpha(unitAlpha0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Substance substance0 = new Substance();
      Compound compound0 = new Compound();
      substance0.setComponent(compound0);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      AdachiAndLuAlphaExpresion adachiAndLuAlphaExpresion0 = new AdachiAndLuAlphaExpresion();
      Compound compound0 = new Compound(" Component: ");
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, adachiAndLuAlphaExpresion0, compound0, phase0);
      substance0.calculateFugacityCoefficient();
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      Soave2Parameters soave2Parameters0 = new Soave2Parameters();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.VAPOR;
      Substance substance0 = new Substance(cubic0, soave2Parameters0, compound0, phase0);
      substance0.hashCode();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Cubic cubic0 = new Cubic();
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound();
      Phase phase0 = Phase.LIQUID;
      Substance substance0 = new Substance(cubic0, yuAndLu0, compound0, phase0);
      substance0.calculateFugacity();
      assertEquals(1.0, substance0.getMolarFraction(), 0.01);
      assertEquals(Double.NaN, substance0.calculate_b_cubicParameter(), 0.01);
  }
}
