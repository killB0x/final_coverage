/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 04:35:58 GMT 2022
 */

package termo.component;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import termo.component.Compound;
import termo.cp.DIPPR_107_Equation;
import termo.data.ExperimentalData;
import termo.data.ExperimentalDataList;
import termo.eos.alpha.Alpha;
import termo.eos.alpha.GCEOSEquation;
import termo.eos.alpha.YuAndLu;
import termo.equations.Eqn101VaporPressure;
import termo.equations.Eqn10VaporPressure;
import termo.equations.EqnVaporPressure;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Compound_ESTest extends Compound_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setMinTemperature((-2176.056802912203));
      ExperimentalDataList experimentalDataList0 = compound0.getVaporPressureList(eqn10VaporPressure0);
      assertEquals("Estimados ecuaci\u00F3n 10 (Antoine)", experimentalDataList0.getName());
      assertEquals("Datos estimados con ecuaci\u00F3n, parametros obtenidos de Chemsep", experimentalDataList0.getSource());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa((-95.859259));
      Compound compound1 = new Compound("");
      boolean boolean0 = compound1.equals(compound0);
      assertEquals((-95.859259), compound0.getGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAcentricFactor((-550.6039650090065));
      Compound compound1 = new Compound();
      boolean boolean0 = compound0.equals(compound1);
      assertEquals((-550.6039650090065), compound0.getAcentricFactor(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Compound compound0 = new Compound("Androulakis, et al.");
      compound0.setLowerFlammabilityLimitTemperature((-894.136658));
      Compound compound1 = new Compound();
      boolean boolean0 = compound0.equals(compound1);
      assertEquals((-894.136658), compound0.getLowerFlammabilityLimitTemperature(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Compound compound0 = new Compound("N");
      compound0.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa((-3518.7074));
      compound0.hashCode();
      assertEquals(0.0, compound0.getD_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getC_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getE_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getA_dippr107Cp(), 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAcentricFactor((-3071.4312766));
      ExperimentalDataList experimentalDataList0 = new ExperimentalDataList();
      compound0.addExperimentalDataList(experimentalDataList0);
      assertEquals((-3071.4312766), compound0.getAcentricFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalCompressibilityFactor((-614.786041892093));
      compound0.hashCode();
      assertEquals(0.0, compound0.getD_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getB_dippr107Cp(), 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimitTemperature((-0.6666666666666666));
      ExperimentalDataList experimentalDataList0 = new ExperimentalDataList();
      compound0.addExperimentalDataList(experimentalDataList0);
      assertEquals(0.0, compound0.getB_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getD_dippr107Cp(), 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setLowerFlammabilityLimitTemperature((-3358.1222866824032));
      compound0.hashCode();
      assertEquals((-3358.1222866824032), compound0.getLowerFlammabilityLimitTemperature(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Compound compound0 = new Compound("N");
      compound0.setMolecularWeight(908.49);
      compound0.hashCode();
      assertEquals(908.49, compound0.getMolecularWeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setMolecularWeight((-732.0));
      compound0.hashCode();
      assertEquals(0.0, compound0.getB_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getA_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getD_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getE_dippr107Cp(), 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Compound compound0 = new Compound("termo.eos.alpha.YuAndLuAboveTc");
      String string0 = compound0.toString();
      assertEquals("termo.eos.alpha.yuandluabovetc", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Compound compound0 = new Compound("");
      String string0 = compound0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Compound compound0 = new Compound("nT?8:=");
      compound0.setVanderWaalsArea(2157.369635881168);
      double double0 = compound0.getVanderWaalsArea();
      assertEquals(2157.369635881168, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Compound compound0 = new Compound("termo.component.Compound");
      compound0.setVanderWaalsArea((-1326.43232));
      double double0 = compound0.getVanderWaalsArea();
      assertEquals((-1326.43232), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Compound compound0 = new Compound("HS`BW");
      compound0.setVanDerWaalsReducedVolume(10.0);
      double double0 = compound0.getVanDerWaalsReducedVolume();
      assertEquals(10.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Compound compound0 = new Compound("Estimados Dippr 101 ");
      compound0.setVanDerWaalsReducedVolume((-1047.6394));
      double double0 = compound0.getVanDerWaalsReducedVolume();
      assertEquals((-1047.6394), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimitTemperature(1.55171);
      double double0 = compound0.getUpperFlammabilityLimitTemperature();
      assertEquals(1.55171, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimitTemperature((-306.77354708));
      double double0 = compound0.getUpperFlammabilityLimitTemperature();
      assertEquals((-306.77354708), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimit(1359.20595489);
      double double0 = compound0.getUpperFlammabilityLimit();
      assertEquals(1359.20595489, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimit((-1026.42));
      double double0 = compound0.getUpperFlammabilityLimit();
      assertEquals((-1026.42), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Compound compound0 = new Compound("Androulakis, et al.");
      compound0.setTriplePointTemperature((-894.136658));
      double double0 = compound0.getTriplePointTemperature();
      assertEquals((-894.136658), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setTriplePointPressure(40.01);
      double double0 = compound0.getTriplePointPressure();
      assertEquals(40.01, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setTriplePointPressure((-1316.6605578));
      double double0 = compound0.getTriplePointPressure();
      assertEquals((-1316.6605578), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Compound compound0 = new Compound("[*J0fP>GBL^eG}<1");
      compound0.setSubFamily("[*J0fP>GBL^eG}<1");
      String string0 = compound0.getSubFamily();
      assertEquals("[*J0fP>GBL^eG}<1", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setStructure("-----T < T_c ");
      String string0 = compound0.getStructure();
      assertEquals("-----T < T_c ", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setStructure("");
      String string0 = compound0.getStructure();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setStandardState("M=nS21>1D-tG0ja`?*");
      String string0 = compound0.getStandardState();
      assertEquals("M=nS21>1D-tG0ja`?*", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setStandardState("");
      String string0 = compound0.getStandardState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setSolubilityParameterat298_15K(1172.886600342);
      double double0 = compound0.getSolubilityParameterat298_15K();
      assertEquals(1172.886600342, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setSolubilityParameterat298_15K((-3034.127270421));
      double double0 = compound0.getSolubilityParameterat298_15K();
      assertEquals((-3034.127270421), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Compound compound0 = new Compound("#}8xv%A>9Ki{");
      compound0.setSmiles("Y1-");
      String string0 = compound0.getSmiles();
      assertEquals("Y1-", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Compound compound0 = new Compound("#}8xv%A>9Ki{");
      compound0.setSmiles("");
      String string0 = compound0.getSmiles();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setRefractiveIndexat298_15K(1438.9517416220128);
      double double0 = compound0.getRefractiveIndexat298_15K();
      assertEquals(1438.9517416220128, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setRefractiveIndexat298_15K((-3083.9972871023597));
      double double0 = compound0.getRefractiveIndexat298_15K();
      assertEquals((-3083.9972871023597), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setRadiusofGyration(1265.402149);
      double double0 = compound0.getRadiusofGyration();
      assertEquals(1265.402149, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Compound compound0 = new Compound("c[l|l]wa|S ");
      compound0.setRadiusofGyration((-856.79541));
      double double0 = compound0.getRadiusofGyration();
      assertEquals((-856.79541), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setR_UNIQUAC(253.572356);
      double double0 = compound0.getR_UNIQUAC();
      assertEquals(253.572356, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setR_UNIQUAC((-784.8331221));
      double double0 = compound0.getR_UNIQUAC();
      assertEquals((-784.8331221), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setQ_UNIQUAC(1078.48071279907);
      double double0 = compound0.getQ_UNIQUAC();
      assertEquals(1078.48071279907, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setQ_UNIQUAC((-151.63043));
      double double0 = compound0.getQ_UNIQUAC();
      assertEquals((-151.63043), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setNormalBoilingPoint_1atm(4074.0);
      double double0 = compound0.getNormalBoilingPoint_1atm();
      assertEquals(4074.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setNormalBoilingPoint_1atm((-616.40931));
      double double0 = compound0.getNormalBoilingPoint_1atm();
      assertEquals((-616.40931), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setNetEnthalpyofCombustionStandardState298_15K(695.92494074);
      double double0 = compound0.getNetEnthalpyofCombustionStandardState298_15K();
      assertEquals(695.92494074, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Compound compound0 = new Compound("ln{alpha(T)} = Aleft( 1- T_r\right) + B (1-sqrt{T_r})^2");
      compound0.setNetEnthalpyofCombustionStandardState298_15K((-308));
      double double0 = compound0.getNetEnthalpyofCombustionStandardState298_15K();
      assertEquals((-308.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Compound compound0 = new Compound();
      String string0 = compound0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Compound compound0 = new Compound("");
      String string0 = compound0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Compound compound0 = new Compound("y}.y");
      compound0.setN_Twu((-252.896212881848));
      double double0 = compound0.getN_Twu();
      assertEquals((-252.896212881848), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Compound compound0 = new Compound("Mathias");
      compound0.setMolecularWeight(3468.276448355307);
      double double0 = compound0.getMolecularWeight();
      assertEquals(3468.276448355307, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setMolecularWeight((-2.0));
      double double0 = compound0.getMolecularWeight();
      assertEquals((-2.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setMeltingPoint_1atm(1.0);
      double double0 = compound0.getMeltingPoint_1atm();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setMeltingPoint_1atm((-0.6666666666666666));
      double double0 = compound0.getMeltingPoint_1atm();
      assertEquals((-0.6666666666666666), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setM_Twu(1054.9048966);
      double double0 = compound0.getM_Twu();
      assertEquals(1054.9048966, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Compound compound0 = new Compound("Estimados Dippr 101 ");
      compound0.setM_Twu((-2.0));
      double double0 = compound0.getM_Twu();
      assertEquals((-2.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setLowerFlammabilityLimitTemperature(1.0);
      double double0 = compound0.getLowerFlammabilityLimitTemperature();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Compound compound0 = new Compound("N");
      compound0.setLowerFlammabilityLimitTemperature((-434.074659));
      double double0 = compound0.getLowerFlammabilityLimitTemperature();
      assertEquals((-434.074659), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setLowerFlammabilityLimit(1.0);
      double double0 = compound0.getLowerFlammabilityLimit();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Compound compound0 = new Compound("[9$1ye?1\"$J&P_vqRH");
      compound0.setLiquidMolarVolumeat298_15K(2837.949);
      double double0 = compound0.getLiquidMolarVolumeat298_15K();
      assertEquals(2837.949, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setLiquidMolarVolumeat298_15K((-1.0));
      double double0 = compound0.getLiquidMolarVolumeat298_15K();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setL_Twu(1477.3971041);
      double double0 = compound0.getL_Twu();
      assertEquals(1477.3971041, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setL_Twu((-3647.320164545886));
      double double0 = compound0.getL_Twu();
      assertEquals((-3647.320164545886), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setK_StryjekAndVera(1.54226);
      double double0 = compound0.getK_StryjekAndVera();
      assertEquals(1.54226, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Compound compound0 = new Compound("Androulakis, et al.");
      compound0.setK_StryjekAndVera((-894.136658));
      double double0 = compound0.getK_StryjekAndVera();
      assertEquals((-894.136658), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Compound compound0 = new Compound("Estimados Dippr 101 ");
      Long long0 = new Long(4659690075252361433L);
      compound0.setId(long0);
      Long long1 = compound0.getId();
      assertEquals(4659690075252361433L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Compound compound0 = new Compound();
      Long long0 = new Long((-3009L));
      compound0.setId(long0);
      Long long1 = compound0.getId();
      assertEquals((-3009L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa(3501.85);
      double double0 = compound0.getGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa();
      assertEquals(3501.85, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa((-1502.9532478096));
      double double0 = compound0.getGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa();
      assertEquals((-1502.9532478096), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa(697.4814115473);
      double double0 = compound0.getGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa();
      assertEquals(697.4814115473, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Compound compound0 = new Compound("Sw%oLxrFYdVd6\"Q_|'");
      compound0.setGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa((-2.0));
      double double0 = compound0.getGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa();
      assertEquals((-2.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setFormula("-Op:1^v'#");
      String string0 = compound0.getFormula();
      assertEquals("-Op:1^v'#", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Compound compound0 = new Compound("Twu");
      compound0.setFlashPoint(1.0);
      double double0 = compound0.getFlashPoint();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setFlashPoint((-2110.12552));
      double double0 = compound0.getFlashPoint();
      assertEquals((-2110.12552), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Compound compound0 = new Compound("[9$1ye?1\"$J&P_vqRH");
      compound0.setFamily("[9$1ye?1\"$J&P_vqRH");
      String string0 = compound0.getFamily();
      assertEquals("[9$1ye?1\"$J&P_vqRH", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setFamily("");
      String string0 = compound0.getFamily();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Compound compound0 = new Compound("Yu and Lu");
      compound0.setF_PolinomialCp(2470.243238473083);
      double double0 = compound0.getF_PolinomialCp();
      assertEquals(2470.243238473083, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setF_PolinomialCp((-1.0));
      double double0 = compound0.getF_PolinomialCp();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Compound compound0 = new Compound("[*J0fP>GBL^eG}<1");
      compound0.setExperimentalLists((Set<ExperimentalDataList>) null);
      Set<ExperimentalDataList> set0 = compound0.getExperimentalLists();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Compound compound0 = new Compound();
      ExperimentalDataList experimentalDataList0 = new ExperimentalDataList();
      compound0.addExperimentalDataList(experimentalDataList0);
      Set<ExperimentalDataList> set0 = compound0.getExperimentalLists();
      assertTrue(set0.contains(experimentalDataList0));
      assertEquals(0.0, compound0.getE_dippr107Cp(), 0.01);
      assertEquals(0.0, compound0.getD_dippr107Cp(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Compound compound0 = new Compound(")@+=+~E{A~");
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setMinTemperature(413.0695841214);
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertEquals(0.0, eqn10VaporPressure1.getC(), 0.01);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Compound compound0 = new Compound("Adachi and Lu");
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setMinTemperature((-57.32));
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertEquals(0.0, eqn10VaporPressure1.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setC(2692.271303183304);
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertEquals(2692.271303183304, eqn10VaporPressure1.getC(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Compound compound0 = new Compound("");
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setC((-1.0));
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertEquals((-1.0), eqn10VaporPressure1.getC(), 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setB(607.47);
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertSame(eqn10VaporPressure1, eqn10VaporPressure0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Compound compound0 = new Compound("Adachi and Lu");
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setB((-57.32));
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertEquals(0.0, eqn10VaporPressure1.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Compound compound0 = new Compound("t9#ACHRghrhFfD*{");
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      eqn10VaporPressure0.setA(509.652212882);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertNull(eqn10VaporPressure1.getId());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Compound compound0 = new Compound("Adachi and Lu");
      Eqn10VaporPressure eqn10VaporPressure0 = new Eqn10VaporPressure();
      eqn10VaporPressure0.setA((-683.69197162));
      compound0.setEqn10VaporPressure(eqn10VaporPressure0);
      Eqn10VaporPressure eqn10VaporPressure1 = compound0.getEqn10VaporPressure();
      assertEquals(0.0, eqn10VaporPressure1.getB(), 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Compound compound0 = new Compound("Estimados ecuaci\u00F3n 10 (Antoine)");
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setMinTemperature(2463.244014);
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals(0.0, eqn101VaporPressure1.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Compound compound0 = new Compound("/\">|<+Y");
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setMinTemperature((-2578.0));
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertSame(eqn101VaporPressure1, eqn101VaporPressure0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setMaxTemperature(64.398214129);
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertSame(eqn101VaporPressure1, eqn101VaporPressure0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setMaxTemperature((-1.0));
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals((-1.0), eqn101VaporPressure1.getMaxTemperature(), 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Compound compound0 = new Compound("/\">|<+Y");
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setE(0.3);
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertSame(eqn101VaporPressure1, eqn101VaporPressure0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Compound compound0 = new Compound("YR$GqyGZLp\"oT,.`\"u");
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setE((-91.45736080169));
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertSame(eqn101VaporPressure1, eqn101VaporPressure0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Compound compound0 = new Compound("Txu");
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setD(0.37464);
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals(0.0, eqn101VaporPressure1.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Compound compound0 = new Compound("N");
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setC(2323.69919);
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals(0.0, eqn101VaporPressure1.getE(), 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Compound compound0 = new Compound("Estimados ecuaci\u00F3n 10 (Antoine)");
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setC((-1L));
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals(0.0, eqn101VaporPressure1.getB(), 0.01);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      eqn101VaporPressure0.setB((-734.20266557733));
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals(0.0, eqn101VaporPressure1.getE(), 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      eqn101VaporPressure0.setA(64.398214129);
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals(0.0, eqn101VaporPressure1.getE(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Compound compound0 = new Compound("nT?8:=");
      compound0.setEnthalpyorHeatofSublimation(1910.557797);
      double double0 = compound0.getEnthalpyorHeatofSublimation();
      assertEquals(1910.557797, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyorHeatofSublimation((-0.2699));
      double double0 = compound0.getEnthalpyorHeatofSublimation();
      assertEquals((-0.2699), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Compound compound0 = new Compound("'oTb,g{FUW1s");
      compound0.setEnthalpyofFusionatMeltingPoint(0.3);
      double double0 = compound0.getEnthalpyofFusionatMeltingPoint();
      assertEquals(0.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyofFusionatMeltingPoint((-2143.121709555));
      double double0 = compound0.getEnthalpyofFusionatMeltingPoint();
      assertEquals((-2143.121709555), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyofFormationofIdealgasat298_15Kand101325Pa(1636.589268238);
      double double0 = compound0.getEnthalpyofFormationofIdealgasat298_15Kand101325Pa();
      assertEquals(1636.589268238, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyofFormationofIdealgasat298_15Kand101325Pa((-2006.9560993));
      double double0 = compound0.getEnthalpyofFormationofIdealgasat298_15Kand101325Pa();
      assertEquals((-2006.9560993), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Compound compound0 = new Compound("YR$GqyGZLp\"oT,.`\"u");
      double double0 = compound0.getE_dippr107Cp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setE_dippr107Cp(669.889028967442);
      double double0 = compound0.getE_dippr107Cp();
      assertEquals(669.889028967442, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Compound compound0 = new Compound("lr-");
      compound0.setE_dippr107Cp((-1499.7810529299663));
      double double0 = compound0.getE_dippr107Cp();
      assertEquals((-1499.7810529299663), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Compound compound0 = new Compound("8(syfy");
      compound0.setE_PolinomialCp(1.0);
      double double0 = compound0.getE_PolinomialCp();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setE_PolinomialCp((-4580.0227));
      double double0 = compound0.getE_PolinomialCp();
      assertEquals((-4580.0227), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setDipprChemID(2);
      int int0 = compound0.getDipprChemID();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setDipprChemID((-659));
      int int0 = compound0.getDipprChemID();
      assertEquals((-659), int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Compound compound0 = new Compound("(NJ:cNa@4?;a");
      compound0.setDipoleMoment(0.0196554);
      double double0 = compound0.getDipoleMoment();
      assertEquals(0.0196554, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setDipoleMoment((-1840.37));
      double double0 = compound0.getDipoleMoment();
      assertEquals((-1840.37), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setDielectricConstant(653.38964);
      double double0 = compound0.getDielectricConstant();
      assertEquals(653.38964, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setDielectricConstant((-1158.86644335));
      double double0 = compound0.getDielectricConstant();
      assertEquals((-1158.86644335), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getD_dippr107Cp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setD_dippr107Cp(180.993);
      double double0 = compound0.getD_dippr107Cp();
      assertEquals(180.993, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setD_dippr107Cp((-1135.23100913516));
      double double0 = compound0.getD_dippr107Cp();
      assertEquals((-1135.23100913516), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setD_PolinomialCp(111.337377751566);
      double double0 = compound0.getD_PolinomialCp();
      assertEquals(111.337377751566, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Compound compound0 = new Compound("qF^0|($|rapv_k_v");
      compound0.setD_PolinomialCp((-3893.014));
      double double0 = compound0.getD_PolinomialCp();
      assertEquals((-3893.014), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalVolume(1472.4);
      double double0 = compound0.getCriticalVolume();
      assertEquals(1472.4, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalVolume((-306.77354708));
      double double0 = compound0.getCriticalVolume();
      assertEquals((-306.77354708), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalTemperature(1575.93);
      double double0 = compound0.getCriticalTemperature();
      assertEquals(1575.93, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalTemperature((-406.942213848));
      double double0 = compound0.getCriticalTemperature();
      assertEquals((-406.942213848), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalPressure(1890.510139);
      double double0 = compound0.getCriticalPressure();
      assertEquals(1890.510139, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Compound compound0 = new Compound(".]F$z4A@P=MH2%X");
      compound0.setCriticalPressure((-4621.238816766325));
      double double0 = compound0.getCriticalPressure();
      assertEquals((-4621.238816766325), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Compound compound0 = new Compound("Expresi\u00F3n independiente de T (Van Der Waals");
      compound0.setCriticalCompressibilityFactor(726.1956445663);
      double double0 = compound0.getCriticalCompressibilityFactor();
      assertEquals(726.1956445663, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Compound compound0 = new Compound("N");
      compound0.setCriticalCompressibilityFactor((-342.840308));
      double double0 = compound0.getCriticalCompressibilityFactor();
      assertEquals((-342.840308), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCasNumber("1eWCF;s");
      String string0 = compound0.getCasNumber();
      assertEquals("1eWCF;s", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCasNumber("");
      String string0 = compound0.getCasNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Compound compound0 = new Compound("Estimados Dippr 101 ");
      double double0 = compound0.getC_dippr107Cp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Compound compound0 = new Compound("9:dhi0H7U`&8b>nKfW");
      compound0.setC_dippr107Cp(946.87934627);
      double double0 = compound0.getC_dippr107Cp();
      assertEquals(946.87934627, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Compound compound0 = new Compound("w9&4x%YbG$U}");
      compound0.setC_dippr107Cp((-3473.52216));
      double double0 = compound0.getC_dippr107Cp();
      assertEquals((-3473.52216), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setC_YuAndLu(134.0525757380653);
      double double0 = compound0.getC_YuAndLu();
      assertEquals(134.0525757380653, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Compound compound0 = new Compound("Soave 2 par\u00E1metros");
      compound0.setC_YuAndLu((-1906.338149797444));
      double double0 = compound0.getC_YuAndLu();
      assertEquals((-1906.338149797444), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setC_PolinomialCp(0.3);
      double double0 = compound0.getC_PolinomialCp();
      assertEquals(0.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Compound compound0 = new Compound(".!y");
      compound0.setC_PolinomialCp((-89.58746988));
      double double0 = compound0.getC_PolinomialCp();
      assertEquals((-89.58746988), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setC_Mathias_Copeman(2658.0183);
      double double0 = compound0.getC_Mathias_Copeman();
      assertEquals(2658.0183, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setC_Mathias_Copeman((-3724.0));
      double double0 = compound0.getC_Mathias_Copeman();
      assertEquals((-3724.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setC_AndroulakisEtAl(2372.31028435);
      double double0 = compound0.getC_AndroulakisEtAl();
      assertEquals(2372.31028435, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Compound compound0 = new Compound("c'");
      compound0.setC_AndroulakisEtAl((-3846.426655769));
      double double0 = compound0.getC_AndroulakisEtAl();
      assertEquals((-3846.426655769), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Compound compound0 = new Compound("L");
      double double0 = compound0.getB_dippr107Cp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_dippr107Cp(2692.271303183304);
      double double0 = compound0.getB_dippr107Cp();
      assertEquals(2692.271303183304, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_dippr107Cp((-5068.4));
      double double0 = compound0.getB_dippr107Cp();
      assertEquals((-5068.4), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Compound compound0 = new Compound("M,]rQ=^Rz");
      compound0.setB_YuAndLu(0.5);
      double double0 = compound0.getB_YuAndLu();
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setB_YuAndLu((-6329.98882029));
      double double0 = compound0.getB_YuAndLu();
      assertEquals((-6329.98882029), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Compound compound0 = new Compound("");
      compound0.setB_Soave((-263.6982350512));
      double double0 = compound0.getB_Soave();
      assertEquals((-263.6982350512), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_PolinomialCp(2175.0);
      double double0 = compound0.getB_PolinomialCp();
      assertEquals(2175.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_PolinomialCp((-2770.37871));
      double double0 = compound0.getB_PolinomialCp();
      assertEquals((-2770.37871), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Compound compound0 = new Compound(" omega ^3");
      compound0.setB_MelhemEtAl(3.4);
      double double0 = compound0.getB_MelhemEtAl();
      assertEquals(3.4, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_MelhemEtAl((-973.8600832966467));
      double double0 = compound0.getB_MelhemEtAl();
      assertEquals((-973.8600832966467), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_Mathias_Copeman(1910.275412819);
      double double0 = compound0.getB_Mathias_Copeman();
      assertEquals(1910.275412819, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_Mathias_Copeman((-534.9144319));
      double double0 = compound0.getB_Mathias_Copeman();
      assertEquals((-534.9144319), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Compound compound0 = new Compound("Estimados Dippr 101 ");
      compound0.setB_AndroulakisEtAl(1.0);
      double double0 = compound0.getB_AndroulakisEtAl();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_AndroulakisEtAl((-2567.978073861));
      double double0 = compound0.getB_AndroulakisEtAl();
      assertEquals((-2567.978073861), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Compound compound0 = new Compound("M");
      compound0.setB_AdachiAndLu(2567.9269907);
      double double0 = compound0.getB_AdachiAndLu();
      assertEquals(2567.9269907, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_AdachiAndLu((-3165.348822429411));
      double double0 = compound0.getB_AdachiAndLu();
      assertEquals((-3165.348822429411), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAutoIgnitionTermperature(8314.472);
      double double0 = compound0.getAutoIgnitionTermperature();
      assertEquals(8314.472, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAutoIgnitionTermperature((-552.6));
      double double0 = compound0.getAutoIgnitionTermperature();
      assertEquals((-552.6), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAcentricFactor(1.0);
      double double0 = compound0.getAcentricFactor();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAcentricFactor((-1116.4516797072658));
      double double0 = compound0.getAcentricFactor();
      assertEquals((-1116.4516797072658), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Compound compound0 = new Compound("186LwSEP!L2lz%");
      compound0.setAbsoluteEntropyofIdealGasat298_15Kand101325Pa(3091.7899079088575);
      double double0 = compound0.getAbsoluteEntropyofIdealGasat298_15Kand101325Pa();
      assertEquals(3091.7899079088575, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Compound compound0 = new Compound("termo.component.Compound");
      compound0.setAbsoluteEntropyofIdealGasat298_15Kand101325Pa((-4171.294517128786));
      double double0 = compound0.getAbsoluteEntropyofIdealGasat298_15Kand101325Pa();
      assertEquals((-4171.294517128786), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Compound compound0 = new Compound("`=@zCr=Q5`YA'emj");
      compound0.setAbsoluteEntropyinStandardStateat298_15Kand101325Pa(698.729252411411);
      double double0 = compound0.getAbsoluteEntropyinStandardStateat298_15Kand101325Pa();
      assertEquals(698.729252411411, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAbsoluteEntropyinStandardStateat298_15Kand101325Pa((-507.0));
      double double0 = compound0.getAbsoluteEntropyinStandardStateat298_15Kand101325Pa();
      assertEquals((-507.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_dippr107Cp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_dippr107Cp(4985.1);
      double double0 = compound0.getA_dippr107Cp();
      assertEquals(4985.1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_dippr107Cp((-1.0));
      double double0 = compound0.getA_dippr107Cp();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Compound compound0 = new Compound(":U");
      compound0.setA_YuAndLu((-632.0698525098878));
      double double0 = compound0.getA_YuAndLu();
      assertEquals((-632.0698525098878), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_Soave(341.372593);
      double double0 = compound0.getA_Soave();
      assertEquals(341.372593, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_Soave((-2.0));
      double double0 = compound0.getA_Soave();
      assertEquals((-2.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_PolinomialCp(0.6666666666666666);
      double double0 = compound0.getA_PolinomialCp();
      assertEquals(0.6666666666666666, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_PolinomialCp((-1.0));
      double double0 = compound0.getA_PolinomialCp();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_MelhemEtAl(2116.766258440583);
      double double0 = compound0.getA_MelhemEtAl();
      assertEquals(2116.766258440583, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Compound compound0 = new Compound("pU`hr");
      compound0.setA_MelhemEtAl((-1072.823));
      double double0 = compound0.getA_MelhemEtAl();
      assertEquals((-1072.823), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Compound compound0 = new Compound(")pL<}GNeZGB|9f");
      compound0.setA_Mathias_Copeman(1.0);
      double double0 = compound0.getA_Mathias_Copeman();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Compound compound0 = new Compound("Estimados Dippr 101 ");
      compound0.setA_Mathias_Copeman((-1047.6394));
      double double0 = compound0.getA_Mathias_Copeman();
      assertEquals((-1047.6394), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_Mathias(3399.7608546109);
      double double0 = compound0.getA_Mathias();
      assertEquals(3399.7608546109, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_Mathias((-1833.065321685842));
      double double0 = compound0.getA_Mathias();
      assertEquals((-1833.065321685842), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_AndroulakisEtAl(1426.5775980338);
      double double0 = compound0.getA_AndroulakisEtAl();
      assertEquals(1426.5775980338, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_AndroulakisEtAl((-3761.691));
      double double0 = compound0.getA_AndroulakisEtAl();
      assertEquals((-3761.691), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_AdachiAndLu(264.0);
      double double0 = compound0.getA_AdachiAndLu();
      assertEquals(264.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Compound compound0 = new Compound("`z[Dp@");
      compound0.setA_AdachiAndLu((-1271.037675618609));
      double double0 = compound0.getA_AdachiAndLu();
      assertEquals((-1271.037675618609), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Compound compound0 = new Compound();
      // Undeclared exception!
      try { 
        compound0.setName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.component.Compound", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Compound compound0 = new Compound();
      // Undeclared exception!
      try { 
        compound0.getAlphaParametersFor((Alpha) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.component.Compound", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Compound compound0 = new Compound();
      ExperimentalDataList experimentalDataList0 = new ExperimentalDataList();
      ExperimentalData experimentalData0 = new ExperimentalData();
      experimentalDataList0.addExperimentalData(experimentalData0);
      // Undeclared exception!
      try { 
        compound0.addExperimentalDataList(experimentalDataList0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Compound compound0 = new Compound();
      // Undeclared exception!
      try { 
        compound0.addExperimentalDataList((ExperimentalDataList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.component.Compound", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Compound compound0 = null;
      try {
        compound0 = new Compound((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.component.Compound", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Compound compound0 = new Compound();
      DIPPR_107_Equation dIPPR_107_Equation0 = (DIPPR_107_Equation)compound0.getCp();
      assertEquals(0.0, dIPPR_107_Equation0.getD(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getC(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getB(), 0.01);
      assertNotNull(dIPPR_107_Equation0);
      assertEquals(0.0, dIPPR_107_Equation0.getE(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.hashCode();
      DIPPR_107_Equation dIPPR_107_Equation0 = (DIPPR_107_Equation)compound0.getCp();
      assertEquals(0.0, dIPPR_107_Equation0.getC(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getB(), 0.01);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Compound compound0 = new Compound(".]F$z4A@P=MH2%X");
      // Undeclared exception!
      try { 
        compound0.getVaporPressureList((EqnVaporPressure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("termo.component.Compound", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      ExperimentalDataList experimentalDataList0 = compound0.getVaporPressureList(eqn101VaporPressure0);
      compound0.addExperimentalDataList(experimentalDataList0);
      compound0.addExperimentalDataList(experimentalDataList0);
      assertEquals("Estimados Dippr 101 ", experimentalDataList0.getName());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setFamily("termo.component.Compound");
      boolean boolean0 = compound1.equals(compound0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("");
      compound1.setFormula("]s}#=A`J/\"R+nK+/u");
      compound0.setName("");
      boolean boolean0 = compound1.equals(compound0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("Estimados ecuaci\u00F3n 10 (Antoine)");
      boolean boolean0 = compound1.equals(compound0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("XCs]S/7v/;'");
      compound0.hashCode();
      compound1.equals(compound0);
      assertEquals(0.0, compound1.getE_dippr107Cp(), 0.01);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setQ_UNIQUAC((-481.1998071));
      compound1.equals(compound0);
      assertEquals((-481.1998071), compound1.getQ_UNIQUAC(), 0.01);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setR_UNIQUAC(1522.311);
      compound1.equals(compound0);
      assertEquals(1522.311, compound1.getR_UNIQUAC(), 0.01);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound0.setA_Mathias_Copeman(4012.0);
      compound1.equals(compound0);
      assertEquals(4012.0, compound0.getA_Mathias_Copeman(), 0.01);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Compound compound0 = new Compound("M<");
      Compound compound1 = new Compound();
      compound1.setM_Twu(811.715069);
      compound1.equals(compound0);
      assertEquals(811.715069, compound1.getM_Twu(), 0.01);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setK_StryjekAndVera((-3356.56999161531));
      compound0.equals(compound1);
      assertEquals((-3356.56999161531), compound1.getK_StryjekAndVera(), 0.01);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("");
      compound1.setLowerFlammabilityLimit((-375.578057089773));
      compound1.equals(compound0);
      assertEquals((-375.578057089773), compound1.getLowerFlammabilityLimit(), 0.01);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setLiquidMolarVolumeat298_15K(1919.5);
      Compound compound1 = new Compound("Estimados ecuaci\u00F3n 10 (Antoine)");
      compound1.equals(compound0);
      assertEquals(1919.5, compound0.getLiquidMolarVolumeat298_15K(), 0.01);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setAbsoluteEntropyinStandardStateat298_15Kand101325Pa((-222.66073));
      Compound compound1 = new Compound("Estimados ecuaci\u00F3n 10 (Antoine)");
      compound1.equals(compound0);
      assertEquals((-222.66073), compound0.getAbsoluteEntropyinStandardStateat298_15Kand101325Pa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setAutoIgnitionTermperature(726.66727608796);
      compound0.equals(compound1);
      assertEquals(726.66727608796, compound1.getAutoIgnitionTermperature(), 0.01);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("");
      compound0.setRefractiveIndexat298_15K((-692.9181));
      compound0.equals(compound1);
      assertEquals((-692.9181), compound0.getRefractiveIndexat298_15K(), 0.01);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setCriticalPressure((-1.0));
      compound0.equals(compound1);
      assertEquals((-1.0), compound1.getCriticalPressure(), 0.01);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setNetEnthalpyofCombustionStandardState298_15K((-191.0));
      Compound compound1 = new Compound();
      compound1.equals(compound0);
      assertEquals((-191.0), compound0.getNetEnthalpyofCombustionStandardState298_15K(), 0.01);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound0.setAbsoluteEntropyofIdealGasat298_15Kand101325Pa((-3571.0));
      compound1.equals(compound0);
      assertEquals((-3571.0), compound0.getAbsoluteEntropyofIdealGasat298_15Kand101325Pa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("Estimados ecuaci\u00F3n 10 (Antoine)");
      compound1.setCriticalTemperature((-612.1284));
      compound1.equals(compound0);
      assertEquals((-612.1284), compound1.getCriticalTemperature(), 0.01);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("+");
      compound0.setTriplePointTemperature((-219.117654));
      compound0.equals(compound1);
      assertEquals((-219.117654), compound0.getTriplePointTemperature(), 0.01);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound0.setDipoleMoment((-1.0));
      compound1.equals(compound0);
      assertEquals((-1.0), compound0.getDipoleMoment(), 0.01);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa((-2571.90144));
      compound1.equals(compound0);
      assertEquals((-2571.90144), compound1.getGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound("");
      compound1.setVanderWaalsArea((-456.36329558549));
      compound1.equals(compound0);
      assertEquals((-456.36329558549), compound1.getVanderWaalsArea(), 0.01);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setVanDerWaalsReducedVolume(1.0);
      Compound compound1 = new Compound();
      boolean boolean0 = compound0.equals(compound1);
      assertEquals(1.0, compound0.getVanDerWaalsReducedVolume(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa((-1.0));
      boolean boolean0 = compound1.equals(compound0);
      assertEquals((-1.0), compound1.getGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setAcentricFactor(1125.0);
      boolean boolean0 = compound1.equals(compound0);
      assertEquals(1125.0, compound1.getAcentricFactor(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalCompressibilityFactor((-0.8973009933866904));
      Compound compound1 = new Compound("");
      boolean boolean0 = compound0.equals(compound1);
      assertEquals((-0.8973009933866904), compound0.getCriticalCompressibilityFactor(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Compound compound0 = new Compound();
      Compound compound1 = new Compound();
      compound1.setLowerFlammabilityLimitTemperature((-576.9885));
      boolean boolean0 = compound0.equals(compound1);
      assertEquals((-576.9885), compound1.getLowerFlammabilityLimitTemperature(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setMolecularWeight((-1.0));
      Compound compound1 = new Compound("+");
      boolean boolean0 = compound0.equals(compound1);
      assertEquals((-1.0), compound0.getMolecularWeight(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Compound compound0 = new Compound();
      Object object0 = new Object();
      boolean boolean0 = compound0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Compound compound0 = new Compound();
      boolean boolean0 = compound0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Compound compound0 = new Compound("M<");
      boolean boolean0 = compound0.equals(compound0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Compound compound0 = new Compound();
      GCEOSEquation gCEOSEquation0 = new GCEOSEquation();
      gCEOSEquation0.setName("Melhem, et al.");
      ArrayList<Field> arrayList0 = compound0.getAlphaParametersFor(gCEOSEquation0);
      assertEquals(2, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      YuAndLu yuAndLu0 = new YuAndLu();
      Compound compound0 = new Compound("M<");
      ArrayList<Field> arrayList0 = compound0.getAlphaParametersFor(yuAndLu0);
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Compound compound0 = new Compound();
      DIPPR_107_Equation dIPPR_107_Equation0 = new DIPPR_107_Equation(compound0);
      compound0.setCp(dIPPR_107_Equation0);
      assertEquals(0.0, dIPPR_107_Equation0.getE(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getD(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getC(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getB(), 0.01);
      assertEquals(0.0, dIPPR_107_Equation0.getA(), 0.01);
      assertEquals(0.0, compound0.getB_dippr107Cp(), 0.01);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_Soave();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Compound compound0 = new Compound("qF^0|($|rapv_k_v");
      double double0 = compound0.getB_PolinomialCp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getE_PolinomialCp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getMeltingPoint_1atm();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_MelhemEtAl();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getAutoIgnitionTermperature();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Compound compound0 = new Compound();
      int int0 = compound0.getDipprChemID();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Compound compound0 = new Compound();
      Set<ExperimentalDataList> set0 = compound0.getExperimentalLists();
      compound0.setExperimentalLists(set0);
      assertEquals(0.0, compound0.getA_AdachiAndLu(), 0.01);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Compound compound0 = new Compound("Sw%oLxrFYdVd6\"Q_|'");
      double double0 = compound0.getL_Twu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Compound compound0 = new Compound("9:dhi0H7U`&8b>nKfW");
      String string0 = compound0.getName();
      assertEquals("9:dhi0h7u`&8b>nkfw", string0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setTriplePointPressure(1.0);
      Compound compound1 = new Compound();
      compound1.equals(compound0);
      assertEquals(1.0, compound0.getTriplePointPressure(), 0.01);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn10VaporPressure eqn10VaporPressure0 = compound0.getEqn10VaporPressure();
      assertNull(eqn10VaporPressure0);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getCriticalCompressibilityFactor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Compound compound0 = new Compound("Mathias");
      double double0 = compound0.getCriticalPressure();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setTriplePointTemperature(341.3);
      double double0 = compound0.getTriplePointTemperature();
      assertEquals(341.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn101VaporPressure eqn101VaporPressure0 = compound0.getEqn101VaporPressure();
      assertNull(eqn101VaporPressure0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Compound compound0 = new Compound("Adachi and Lu");
      String string0 = compound0.getFormula();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getDielectricConstant();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Compound compound0 = new Compound("9:dhi0H7U`&8b>nKfW");
      double double0 = compound0.getLowerFlammabilityLimitTemperature();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_Mathias();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_Mathias_Copeman((-2511.0));
      Compound compound1 = new Compound("4d1ARkg");
      compound1.equals(compound0);
      assertEquals((-2511.0), compound0.getB_Mathias_Copeman(), 0.01);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getUpperFlammabilityLimit();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getSolubilityParameterat298_15K();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getUpperFlammabilityLimitTemperature();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyorHeatofSublimation(1.0);
      Compound compound1 = new Compound();
      compound1.equals(compound0);
      assertEquals(1.0, compound0.getEnthalpyorHeatofSublimation(), 0.01);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Compound compound0 = new Compound();
      String string0 = compound0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Compound compound0 = new Compound();
      Eqn101VaporPressure eqn101VaporPressure0 = new Eqn101VaporPressure();
      compound0.setEqn101VaporPressure(eqn101VaporPressure0);
      eqn101VaporPressure0.setA((-1984.1346));
      Eqn101VaporPressure eqn101VaporPressure1 = compound0.getEqn101VaporPressure();
      assertEquals(0.0, eqn101VaporPressure1.getE(), 0.01);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Compound compound0 = new Compound("");
      double double0 = compound0.getC_Mathias_Copeman();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setN_Twu(0.37464);
      double double0 = compound0.getN_Twu();
      assertEquals(0.37464, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getAbsoluteEntropyinStandardStateat298_15Kand101325Pa();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getR_UNIQUAC();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getEnthalpyofFormationofIdealgasat298_15Kand101325Pa();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setLowerFlammabilityLimit((-2176.056802912203));
      double double0 = compound0.getLowerFlammabilityLimit();
      assertEquals((-2176.056802912203), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setB_Soave(1295.94655468986);
      double double0 = compound0.getB_Soave();
      assertEquals(1295.94655468986, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Compound compound0 = new Compound("Adachi and Lu");
      String string0 = compound0.getSubFamily();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getB_Soave();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Compound compound0 = new Compound();
      String string0 = compound0.getStructure();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getTriplePointTemperature();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getD_PolinomialCp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Compound compound0 = new Compound("HS`BW");
      double double0 = compound0.getVanDerWaalsReducedVolume();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCasNumber("`wWo6");
      Compound compound1 = new Compound();
      boolean boolean0 = compound1.equals(compound0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getGibbsEnergyofFormationofIdealGasat298_15Kand101325Pa();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getRefractiveIndexat298_15K();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyofFusionatMeltingPoint(7.72);
      Compound compound1 = new Compound();
      compound0.equals(compound1);
      assertEquals(7.72, compound0.getEnthalpyofFusionatMeltingPoint(), 0.01);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_YuAndLu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_PolinomialCp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getCriticalTemperature();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setFlashPoint(3845.1012481);
      Compound compound1 = new Compound();
      compound1.equals(compound0);
      assertEquals(3845.1012481, compound0.getFlashPoint(), 0.01);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Compound compound0 = new Compound();
      String string0 = compound0.getStandardState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getGibbsEnergyofFormationinStandardStateat298_15Kand101325Pa();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Compound compound0 = new Compound("M<");
      Long long0 = compound0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Compound compound0 = new Compound("termo.component.Compound");
      double double0 = compound0.getVanderWaalsArea();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setStandardState("yZP");
      Compound compound1 = new Compound();
      boolean boolean0 = compound1.equals(compound0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Compound compound0 = new Compound("");
      double double0 = compound0.getA_AndroulakisEtAl();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getC_PolinomialCp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getF_PolinomialCp();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setSubFamily("fD1MFS@<#O<");
      Compound compound1 = new Compound();
      boolean boolean0 = compound0.equals(compound1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getC_AndroulakisEtAl();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_AdachiAndLu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getN_Twu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getM_Twu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getCriticalVolume();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getB_YuAndLu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setA_YuAndLu(1.0);
      double double0 = compound0.getA_YuAndLu();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Compound compound0 = new Compound();
      String string0 = compound0.getFamily();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Compound compound0 = new Compound();
      String string0 = compound0.getSmiles();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getEnthalpyofFusionatMeltingPoint();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Compound compound0 = new Compound();
      String string0 = compound0.getCasNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Compound compound0 = new Compound("Mathias");
      double double0 = compound0.getMolecularWeight();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimit((-1.0));
      Compound compound1 = new Compound("");
      compound1.equals(compound0);
      assertEquals((-1.0), compound0.getUpperFlammabilityLimit(), 0.01);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setDipprChemID(82);
      Compound compound1 = new Compound();
      compound1.equals(compound0);
      assertEquals(82, compound0.getDipprChemID());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getDipoleMoment();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setEnthalpyofFormationofIdealgasat298_15Kand101325Pa(371.877664862);
      Compound compound1 = new Compound();
      compound0.equals(compound1);
      assertEquals(371.877664862, compound0.getEnthalpyofFormationofIdealgasat298_15Kand101325Pa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getC_YuAndLu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setUpperFlammabilityLimitTemperature(944.0);
      Compound compound1 = new Compound();
      boolean boolean0 = compound1.equals(compound0);
      assertEquals(944.0, compound0.getUpperFlammabilityLimitTemperature(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getQ_UNIQUAC();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getTriplePointPressure();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Compound compound0 = new Compound("Mathias");
      double double0 = compound0.getFlashPoint();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getLiquidMolarVolumeat298_15K();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getA_Mathias_Copeman();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getB_Mathias_Copeman();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getNetEnthalpyofCombustionStandardState298_15K();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getAcentricFactor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getLowerFlammabilityLimit();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Compound compound0 = new Compound();
      compound0.setCriticalVolume((-459.54));
      Compound compound1 = new Compound();
      compound0.equals(compound1);
      assertEquals((-459.54), compound0.getCriticalVolume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getEnthalpyorHeatofSublimation();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getB_AndroulakisEtAl();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getAbsoluteEntropyofIdealGasat298_15Kand101325Pa();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getB_AdachiAndLu();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Compound compound0 = new Compound();
      double double0 = compound0.getK_StryjekAndVera();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Compound compound0 = new Compound("9:dhi0H7U`&8b>nKfW");
      double double0 = compound0.getNormalBoilingPoint_1atm();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Compound compound0 = new Compound();
      Long long0 = new Long(0L);
      compound0.setId(long0);
      Long long1 = compound0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Compound compound0 = new Compound("186LwSEP!L2lz%");
      double double0 = compound0.getB_MelhemEtAl();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Compound compound0 = new Compound("186LwSEP!L2lz%");
      double double0 = compound0.getRadiusofGyration();
      assertEquals(0.0, double0, 0.01);
  }
}
