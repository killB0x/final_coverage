/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:28:54 GMT 2022
 */

package org.tinyconfiguration.abc.ex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.tinyconfiguration.abc.ex.ConfigurationException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigurationException_ESTest extends ConfigurationException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfigurationException configurationException0 = new ConfigurationException();
      ConfigurationException configurationException1 = null;
      try {
        configurationException1 = new ConfigurationException("", configurationException0, true, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      ConfigurationException configurationException0 = new ConfigurationException("org.tinyconfiguration.abc.ex.ConfigurationException", mockThrowable0, true, true);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      ConfigurationException configurationException0 = new ConfigurationException(mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConfigurationException configurationException0 = new ConfigurationException();
      ConfigurationException configurationException1 = new ConfigurationException("-,h", configurationException0);
      assertFalse(configurationException1.equals((Object)configurationException0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConfigurationException configurationException0 = new ConfigurationException("");
  }
}
