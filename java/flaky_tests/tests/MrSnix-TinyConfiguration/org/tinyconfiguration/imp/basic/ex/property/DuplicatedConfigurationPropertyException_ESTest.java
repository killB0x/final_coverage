/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:36:26 GMT 2022
 */

package org.tinyconfiguration.imp.basic.ex.property;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.tinyconfiguration.imp.basic.Property;
import org.tinyconfiguration.imp.basic.ex.property.DuplicatedConfigurationPropertyException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DuplicatedConfigurationPropertyException_ESTest extends DuplicatedConfigurationPropertyException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DuplicatedConfigurationPropertyException duplicatedConfigurationPropertyException0 = null;
      try {
        duplicatedConfigurationPropertyException0 = new DuplicatedConfigurationPropertyException((Property) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.tinyconfiguration.imp.basic.ex.property.DuplicatedConfigurationPropertyException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Property property0 = mock(Property.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(property0).toString();
      doReturn((String) null).when(property0).getKey();
      DuplicatedConfigurationPropertyException duplicatedConfigurationPropertyException0 = new DuplicatedConfigurationPropertyException(property0);
      Property property1 = duplicatedConfigurationPropertyException0.getDuplicatedProperty();
      assertNull(property1.getKey());
  }
}
