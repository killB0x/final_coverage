/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:57:53 GMT 2022
 */

package com.imadcn.framework.idworker.register.zookeeper;

import org.junit.Test;
import static org.junit.Assert.*;
import com.imadcn.framework.idworker.register.zookeeper.NodeInfo;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NodeInfo_ESTest extends NodeInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Integer integer0 = new Integer(0);
      nodeInfo0.setWorkerId(integer0);
      Integer integer1 = nodeInfo0.getWorkerId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Integer integer0 = new Integer(394);
      nodeInfo0.setWorkerId(integer0);
      Integer integer1 = nodeInfo0.getWorkerId();
      assertEquals(394, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Integer integer0 = new Integer((-426));
      nodeInfo0.setWorkerId(integer0);
      Integer integer1 = nodeInfo0.getWorkerId();
      assertEquals((-426), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      Date date0 = Date.from(instant0);
      nodeInfo0.setUpdateTime(date0);
      Date date1 = nodeInfo0.getUpdateTime();
      assertSame(date1, date0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Long long0 = new Long(0L);
      nodeInfo0.setSessionId(long0);
      Long long1 = nodeInfo0.getSessionId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Long long0 = new Long(2243L);
      nodeInfo0.setSessionId(long0);
      Long long1 = nodeInfo0.getSessionId();
      assertEquals(2243L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Long long0 = new Long((-1L));
      nodeInfo0.setSessionId(long0);
      Long long1 = nodeInfo0.getSessionId();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setPid("Z7eWz8uaLdf<'^ret");
      String string0 = nodeInfo0.getPid();
      assertEquals("Z7eWz8uaLdf<'^ret", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setPid("");
      String string0 = nodeInfo0.getPid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setNodeId("]");
      String string0 = nodeInfo0.getNodeId();
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setIp("");
      String string0 = nodeInfo0.getIp();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setHostName("-KWa>HBr>&col");
      String string0 = nodeInfo0.getHostName();
      assertEquals("-KWa>HBr>&col", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setGroupName("");
      String string0 = nodeInfo0.getGroupName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      nodeInfo0.setCreateTime(mockDate0);
      Date date0 = nodeInfo0.getCreateTime();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setNodeId("");
      String string0 = nodeInfo0.getNodeId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setHostName("");
      String string0 = nodeInfo0.getHostName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      String string0 = nodeInfo0.getGroupName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Date date0 = nodeInfo0.getUpdateTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Long long0 = nodeInfo0.getSessionId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Date date0 = nodeInfo0.getCreateTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setGroupName("]");
      String string0 = nodeInfo0.getGroupName();
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      String string0 = nodeInfo0.getPid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      String string0 = nodeInfo0.toString();
      assertEquals("NodeInfo [nodeId=null, groupName=null, workerId=null, ip=null, hostName=null, updateTime=null, createTime=null]", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      String string0 = nodeInfo0.getHostName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      nodeInfo0.setIp("3");
      String string0 = nodeInfo0.getIp();
      assertEquals("3", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      Integer integer0 = nodeInfo0.getWorkerId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      String string0 = nodeInfo0.getIp();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NodeInfo nodeInfo0 = new NodeInfo();
      String string0 = nodeInfo0.getNodeId();
      assertNull(string0);
  }
}
