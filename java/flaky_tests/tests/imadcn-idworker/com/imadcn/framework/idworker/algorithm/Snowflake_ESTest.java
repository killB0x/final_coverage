/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:45:40 GMT 2022
 */

package com.imadcn.framework.idworker.algorithm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.imadcn.framework.idworker.algorithm.Snowflake;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Snowflake_ESTest extends Snowflake_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create(10L);
      // Undeclared exception!
      snowflake0.nextId(100000);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create(1023L);
      // Undeclared exception!
      try { 
        snowflake0.nextId((-2151));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Size can't be greater than 100000 or less than 0
         //
         verifyException("com.imadcn.framework.idworker.algorithm.Snowflake", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create(0L);
      snowflake0.nextId(3394);
      // Undeclared exception!
      snowflake0.nextId(3394);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create(10L);
      snowflake0.nextId();
      long long0 = snowflake0.nextId();
      assertEquals((-380803874522357759L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create((long) 140);
      snowflake0.nextId(115);
      System.setCurrentTimeMillis(115);
      // Undeclared exception!
      try { 
        snowflake0.nextId();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Clock moved backwards. Refusing to generate id for 1392409281205 milliseconds.
         //
         verifyException("com.imadcn.framework.idworker.algorithm.Snowflake", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create(1014L);
      // Undeclared exception!
      try { 
        snowflake0.nextId(2146599546);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Size can't be greater than 100000 or less than 0
         //
         verifyException("com.imadcn.framework.idworker.algorithm.Snowflake", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create((long) 0);
      // Undeclared exception!
      try { 
        snowflake0.nextId(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Size can't be greater than 100000 or less than 0
         //
         verifyException("com.imadcn.framework.idworker.algorithm.Snowflake", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Snowflake.create((-140L), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // worker Id can't be greater than 1023 or less than 0
         //
         verifyException("com.imadcn.framework.idworker.algorithm.Snowflake", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Snowflake.create(1392409281320L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // worker Id can't be greater than 1023 or less than 0
         //
         verifyException("com.imadcn.framework.idworker.algorithm.Snowflake", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create((long) 140, false);
      System.setCurrentTimeMillis((-897L));
      // Undeclared exception!
      try { 
        snowflake0.nextId(140);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Clock moved backwards. Refusing to generate id for 896 milliseconds.
         //
         verifyException("com.imadcn.framework.idworker.algorithm.Snowflake", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Snowflake snowflake0 = Snowflake.create(10L);
      snowflake0.nextId();
      snowflake0.nextId(4095);
      // Undeclared exception!
      snowflake0.nextId();
  }
}
