/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:55:17 GMT 2022
 */

package com.imadcn.framework.idworker.config;

import org.junit.Test;
import static org.junit.Assert.*;
import com.imadcn.framework.idworker.config.ZookeeperConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ZookeeperConfiguration_ESTest extends ZookeeperConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setSessionTimeoutMilliseconds(1);
      int int0 = zookeeperConfiguration0.getSessionTimeoutMilliseconds();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setSessionTimeoutMilliseconds((-1596));
      int int0 = zookeeperConfiguration0.getSessionTimeoutMilliseconds();
      assertEquals((-1596), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setServerLists("");
      zookeeperConfiguration0.getServerLists();
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      
      zookeeperConfiguration0.setNamespace((String) null);
      zookeeperConfiguration0.getNamespace();
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      
      zookeeperConfiguration0.setNamespace("");
      zookeeperConfiguration0.getNamespace();
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setMaxSleepTimeMilliseconds((-1897));
      int int0 = zookeeperConfiguration0.getMaxSleepTimeMilliseconds();
      assertEquals((-1897), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      
      zookeeperConfiguration0.setMaxRetries(0);
      int int0 = zookeeperConfiguration0.getMaxRetries();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setMaxRetries((-2882));
      int int0 = zookeeperConfiguration0.getMaxRetries();
      assertEquals((-2882), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setDigest("");
      zookeeperConfiguration0.getDigest();
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setConnectionTimeoutMilliseconds(482);
      int int0 = zookeeperConfiguration0.getConnectionTimeoutMilliseconds();
      assertEquals(482, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setBaseSleepTimeMilliseconds((-1596));
      int int0 = zookeeperConfiguration0.getBaseSleepTimeMilliseconds();
      assertEquals((-1596), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      String string0 = zookeeperConfiguration0.getNamespace();
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals("idworker", string0);
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      
      zookeeperConfiguration0.setMaxSleepTimeMilliseconds(0);
      int int0 = zookeeperConfiguration0.getMaxSleepTimeMilliseconds();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      int int0 = zookeeperConfiguration0.getBaseSleepTimeMilliseconds();
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(1000, int0);
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.getServerLists();
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.getDigest();
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setConnectionTimeoutMilliseconds((-1207));
      int int0 = zookeeperConfiguration0.getConnectionTimeoutMilliseconds();
      assertEquals((-1207), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      
      zookeeperConfiguration0.setBaseSleepTimeMilliseconds(0);
      int int0 = zookeeperConfiguration0.getBaseSleepTimeMilliseconds();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setServerLists("Y 8$+GSiUicG");
      zookeeperConfiguration0.getServerLists();
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      int int0 = zookeeperConfiguration0.getMaxRetries();
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(3, int0);
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      int int0 = zookeeperConfiguration0.getSessionTimeoutMilliseconds();
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals(0, int0);
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      int int0 = zookeeperConfiguration0.getConnectionTimeoutMilliseconds();
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals(0, int0);
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      zookeeperConfiguration0.setDigest("Y 8$+GSiUicG");
      zookeeperConfiguration0.getDigest();
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals(3000, zookeeperConfiguration0.getMaxSleepTimeMilliseconds());
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ZookeeperConfiguration zookeeperConfiguration0 = new ZookeeperConfiguration();
      int int0 = zookeeperConfiguration0.getMaxSleepTimeMilliseconds();
      assertEquals(1000, zookeeperConfiguration0.getBaseSleepTimeMilliseconds());
      assertEquals(3, zookeeperConfiguration0.getMaxRetries());
      assertEquals(3000, int0);
      assertEquals("idworker", zookeeperConfiguration0.getNamespace());
  }
}
