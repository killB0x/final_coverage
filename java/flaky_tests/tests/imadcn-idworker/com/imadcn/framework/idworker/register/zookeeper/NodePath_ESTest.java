/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:58:34 GMT 2022
 */

package com.imadcn.framework.idworker.register.zookeeper;

import org.junit.Test;
import static org.junit.Assert.*;
import com.imadcn.framework.idworker.register.zookeeper.NodePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NodePath_ESTest extends NodePath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NodePath nodePath0 = new NodePath((String) null);
      nodePath0.setWorkerId(2002L);
      long long0 = nodePath0.getWorkerId();
      assertEquals(2002L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NodePath nodePath0 = new NodePath("");
      nodePath0.setWorkerId((-2728L));
      long long0 = nodePath0.getWorkerId();
      assertEquals((-2728L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NodePath nodePath0 = new NodePath(" Q`pRApkF^csebs~");
      nodePath0.setSessionId(0L);
      long long0 = nodePath0.getSessionId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NodePath nodePath0 = new NodePath((String) null);
      nodePath0.getGroupName();
      assertEquals((-1L), nodePath0.getSessionId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NodePath nodePath0 = new NodePath(" Q`pRApkF^csebs~");
      nodePath0.getGroupName();
      assertEquals((-1L), nodePath0.getSessionId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NodePath nodePath0 = new NodePath("udy&V77.!CV%V");
      String string0 = nodePath0.getWorkerPath();
      assertEquals((-1L), nodePath0.getSessionId());
      assertEquals("/udy&V77.!CV%V/worker", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NodePath nodePath0 = new NodePath("udy&V77.!CV%V");
      nodePath0.getWorkerId();
      assertEquals((-1L), nodePath0.getSessionId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NodePath nodePath0 = new NodePath("");
      long long0 = nodePath0.getSessionId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NodePath nodePath0 = new NodePath("");
      String string0 = nodePath0.getGroupPath();
      assertEquals("/", string0);
      assertEquals((-1L), nodePath0.getSessionId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodePath nodePath0 = new NodePath("");
      nodePath0.getGroupName();
      assertEquals((-1L), nodePath0.getSessionId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NodePath nodePath0 = new NodePath("");
      nodePath0.setSessionId(490L);
      long long0 = nodePath0.getSessionId();
      assertEquals(490L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NodePath nodePath0 = new NodePath("udy&V77.!CV%V");
      String string0 = nodePath0.getWorkerIdPath();
      assertEquals("/udy&V77.!CV%V/worker/0", string0);
      assertEquals((-1L), nodePath0.getSessionId());
  }
}
