/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 02:15:03 GMT 2022
 */

package com.github.qrenfeng.common.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.qrenfeng.common.exception.CommonException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CommonException_ESTest extends CommonException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder0 = new CommonException.CommonExceptionBuilder();
      CommonException commonException0 = commonException_CommonExceptionBuilder0.build();
      commonException0.setMsg("");
      commonException0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder0 = CommonException.builder();
      CommonException commonException0 = commonException_CommonExceptionBuilder0.build();
      commonException0.setMsg("CommonException(code=");
      CommonException commonException1 = new CommonException();
      commonException1.setMsg(";}#'!?i9*}FoO}R=[<");
      boolean boolean0 = commonException0.equals(commonException1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      commonException0.setMsg("CommonException.CommonExceptionBuilder(code=B!I\n3p,, msg=null)");
      String string0 = commonException0.getMsg();
      assertEquals("CommonException.CommonExceptionBuilder(code=B!I\n3p,, msg=null)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder0 = new CommonException.CommonExceptionBuilder();
      CommonException commonException0 = commonException_CommonExceptionBuilder0.build();
      commonException0.setMsg("");
      String string0 = commonException0.getMsg();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      String string0 = commonException0.getCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CommonException commonException0 = new CommonException("", "_9I&T%5");
      String string0 = commonException0.getCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CommonException commonException0 = new CommonException("0JDm+", "?4");
      boolean boolean0 = commonException0.canEqual(commonException0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      Object object0 = new Object();
      boolean boolean0 = commonException0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      String string0 = commonException0.getMsg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CommonException commonException0 = new CommonException("0JDm+", "?4");
      String string0 = commonException0.getCode();
      assertEquals("0JDm+", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      CommonException commonException1 = new CommonException((String) null, "[A");
      boolean boolean0 = commonException0.equals(commonException1);
      assertFalse(commonException1.equals((Object)commonException0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CommonException commonException0 = new CommonException("", "");
      CommonException commonException1 = new CommonException();
      boolean boolean0 = commonException0.equals(commonException1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      CommonException commonException1 = new CommonException("O#E:3srWUXO=e+Z'Q3", "O#E:3srWUXO=e+Z'Q3");
      boolean boolean0 = commonException0.equals(commonException1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder0 = CommonException.builder();
      CommonException commonException0 = commonException_CommonExceptionBuilder0.build();
      CommonException commonException1 = new CommonException();
      boolean boolean0 = commonException0.equals(commonException1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      Object object0 = new Object();
      boolean boolean0 = commonException0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      boolean boolean0 = commonException0.equals(commonException0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      commonException0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CommonException commonException0 = new CommonException(", msg=", ", msg=");
      commonException0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder0 = new CommonException.CommonExceptionBuilder();
      String string0 = commonException_CommonExceptionBuilder0.toString();
      assertEquals("CommonException.CommonExceptionBuilder(code=null, msg=null)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder0 = CommonException.builder();
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder1 = commonException_CommonExceptionBuilder0.code("");
      assertSame(commonException_CommonExceptionBuilder1, commonException_CommonExceptionBuilder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder0 = CommonException.builder();
      CommonException.CommonExceptionBuilder commonException_CommonExceptionBuilder1 = commonException_CommonExceptionBuilder0.msg(";}#'!?i9*}FoO}R=[<");
      assertSame(commonException_CommonExceptionBuilder1, commonException_CommonExceptionBuilder0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CommonException commonException0 = new CommonException("0JDm+", "?4");
      commonException0.setCode("?4");
      assertEquals("?4", commonException0.getCode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CommonException commonException0 = new CommonException();
      String string0 = commonException0.toString();
      assertEquals("CommonException(code=null, msg=null)", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CommonException commonException0 = new CommonException("", "");
      CommonException commonException1 = new CommonException("", "");
      boolean boolean0 = commonException0.equals(commonException1);
      assertTrue(boolean0);
  }
}
