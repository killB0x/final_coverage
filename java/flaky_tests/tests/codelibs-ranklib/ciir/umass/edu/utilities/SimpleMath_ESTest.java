/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:46:04 GMT 2022
 */

package ciir.umass.edu.utilities;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.utilities.SimpleMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleMath_ESTest extends SimpleMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleMath.min((-1), (-1));
      SimpleMath.round((double) (-1));
      SimpleMath.logBase10((-1));
      SimpleMath.round(1.0F);
      SimpleMath.logBase2(1.0F);
      SimpleMath.ln((-1.0));
      SimpleMath.round(0.0, (-1));
      SimpleMath.min(264, 10000);
      SimpleMath.round(0.0F);
      SimpleMath.round(0.0, 0);
      SimpleMath.ln(483.0);
      SimpleMath.min((-185), 0);
      SimpleMath.round(0.0F, (-185));
      SimpleMath.round(0.0F);
      SimpleMath.round(1594.88);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 10000;
      // Undeclared exception!
      SimpleMath.round((-1335.4561585023646), 10000);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleMath.round(1576.3422986518, 1260);
      SimpleMath.p(1260, 580L);
      SimpleMath.round(0.0F);
      SimpleMath.logBase10(0.0);
      SimpleMath.round(1576.3422986518);
      SimpleMath.round(2.0, 1260);
      SimpleMath.round((float) 1260);
      SimpleMath.logBase10(0.0);
      SimpleMath.min((-609), (-609));
      SimpleMath.round((float) (-609));
      SimpleMath.logBase10(2.0);
      SimpleMath.logBase2(2.1695352839931155);
      SimpleMath.round(0.0F, (-609));
      SimpleMath.min((-609), 1260);
      SimpleMath.p((-609), 1260);
      SimpleMath.logBase2(1931.10777);
      SimpleMath.round(0.0, (-609));
      SimpleMath.p(0L, (-609));
      SimpleMath.p(0L, (-609));
      SimpleMath.min((-1), (-2118));
      SimpleMath.round(605.0F, 4424);
      SimpleMath.round(10.0, 0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleMath.round(198.49531, 43);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleMath.round((-1074.09124782));
      SimpleMath.round(0.0, (-1));
      SimpleMath.logBase2(0.0);
      SimpleMath.min((-1), 10);
      SimpleMath.round(3012.599F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleMath.round((-489.4508F), 0);
      SimpleMath.p(0L, 1L);
      SimpleMath.logBase2(28.0);
      SimpleMath.ln(4.807354922057604);
      SimpleMath.min(0, 420);
      SimpleMath.logBase2((-2308.851057));
      SimpleMath.round((-489.4508F), 0);
      SimpleMath.round((-1367.0F));
      SimpleMath.round((double) (-489.0F));
      SimpleMath.round(2853.891, 0);
      SimpleMath.round(1.570147020606335, 0);
      SimpleMath.min(0, 420);
      SimpleMath.round(0.25, 0);
      SimpleMath.logBase10(0.0);
      SimpleMath.min(0, 0);
      SimpleMath.round(1640.4497F);
      SimpleMath.round(1640.4497);
      SimpleMath.round(1215.823F);
      SimpleMath.p(0, 0L);
      SimpleMath.round(10000.0F, 420);
      SimpleMath.min(0, (-1618));
      SimpleMath.round((-1.0F));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleMath.min((-125), (-125));
      SimpleMath.min(0, 1);
      SimpleMath.p(1, (-125));
      SimpleMath.round((double) (-125));
      SimpleMath.logBase2((-125));
      SimpleMath.ln(1.0);
      SimpleMath.p((-125), 0);
      SimpleMath.round(3035.1504F, (-125));
      SimpleMath.round((float) 1, (-2832));
      SimpleMath.logBase10((-3043.15));
      SimpleMath.round((float) 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleMath.p(0L, 0L);
      SimpleMath.round((-1.0F));
      SimpleMath.round(0.0F, 0);
      SimpleMath.round(0.0F, 0);
      SimpleMath.min(0, 1768);
      SimpleMath.logBase2((-1.0F));
      SimpleMath.round((float) 0L);
      SimpleMath.ln(52.9494);
      SimpleMath.logBase2(2554.63);
      SimpleMath.round((double) 0.0F);
      SimpleMath.ln(0.0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleMath.p(1L, 1L);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleMath.logBase10(0.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleMath.round((-1300.7575189914633));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleMath.min(934, (-1));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleMath.p((-1L), (-1L));
      SimpleMath.ln(Double.NEGATIVE_INFINITY);
      SimpleMath.min(1, 1);
      SimpleMath.logBase10(0.0);
      SimpleMath.logBase10(1);
      SimpleMath.logBase10(Double.NEGATIVE_INFINITY);
      SimpleMath.round(0.0, 1);
      SimpleMath.ln(0.0);
      SimpleMath.round((-2155.74655), 1);
      SimpleMath.p(1L, (-1276L));
      SimpleMath.round((-0.001176470588235294), 1);
      SimpleMath.round(2774.22);
      SimpleMath.min(342, 0);
      SimpleMath.round(0.0F, 10);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleMath.ln((-194.6));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleMath.logBase2((-1.0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleMath.min((-3134), (-3134));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleMath.round(198.49531, 0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleMath.p(1931L, 1343L);
      SimpleMath.min((-841), (-841));
      SimpleMath.round(0.0F, (-841));
      SimpleMath.round((double) 1343L);
      SimpleMath.round(1.0);
      SimpleMath.logBase10(1931L);
      SimpleMath.min(0, (-1));
      SimpleMath.round(0.0);
      SimpleMath.logBase10((-909.844));
      SimpleMath.logBase10((-1));
      SimpleMath.min(821, (-841));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleMath.round(1.0F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleMath.round(0.0F, (-1061));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      SimpleMath.round((-2111.65F), 10000);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = SimpleMath.round(750.3777F);
      assertEquals(750.3777, double0, 0.01);
      
      double double1 = SimpleMath.ln(0.0);
      assertEquals(Double.NEGATIVE_INFINITY, double1, 0.01);
      
      SimpleMath.logBase2(Double.NEGATIVE_INFINITY);
      SimpleMath.round(750.3777F, 1452);
      int int0 = SimpleMath.min(0, 1452);
      assertEquals(0, int0);
      
      int int1 = SimpleMath.min((-738), 0);
      assertEquals((-738), int1);
      
      SimpleMath.round((-1.0F), (-3073));
      float float0 = SimpleMath.round((-858.0F), 0);
      assertEquals((-858.0F), float0, 0.01F);
      
      double double2 = SimpleMath.round(0.0, (-738));
      assertEquals(0.0, double2, 0.01);
      
      SimpleMath.ln((-738));
      SimpleMath.round(3841.92F, 2746);
      SimpleMath.round(0.0F);
      double double3 = SimpleMath.logBase2(399.95082238);
      assertEquals(8.64367880809925, double3, 0.01);
      
      float float1 = SimpleMath.round((float) 1452, 165);
      assertEquals(Float.NaN, float1, 0.01F);
  }
}
