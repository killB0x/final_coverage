/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:20:34 GMT 2022
 */

package ciir.umass.edu.utilities;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.utilities.FileUtils;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.UnsupportedEncodingException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileUtils_ESTest extends FileUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = FileUtils.makePathStandard("s 9% p!2w}rNE8b");
      assertEquals("s 9% p!2w}rNE8b/", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = FileUtils.makePathStandard("Error in FileUtils.copyFile: ");
      assertEquals("Error in FileUtils.copyFile: /", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = FileUtils.getFileName("frr)3H(s");
      assertEquals("frr)3H(s", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("l,4T2Tt");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        FileUtils.gzipFile("l,4T2Tt", ".gz");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("java.util.zip.GZIPOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.gzipFile("V=#\"&H|7", "|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("kZ'ADRlj7", "ciir.umass.edu.utilities.RankLibError");
      MockFile mockFile1 = new MockFile("ciir.umass.edu.utilities.RankLibError");
      // Undeclared exception!
      try { 
        FileUtils.gunzipFile(mockFile0, mockFile1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in gunzipFile(): java.io.FileNotFoundException
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("l,4T2Ttl,4T2Tt");
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("l,4T2Tt");
      FileUtils.copyFiles("l,4T2Tt", "l,4T2Tt", linkedList0);
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      BufferedReader bufferedReader0 = FileUtils.smartReader("Q?8y6:H|+Ch91^0", "UTF-8");
      assertNotNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = FileUtils.getAllFiles("yfi2Yz_qGF6#7{R");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jksubuw.ahOmZYx<");
      String[] stringArray0 = FileUtils.getAllFiles("");
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = FileUtils.exists("UTF-8");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.write("<Ol*N\"SUx9~L1IZa", (String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException: charsetName
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.smartReader((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        FileUtils.smartReader(".", ".");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        FileUtils.smartReader("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.makePathStandard("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.makePathStandard((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.utilities.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        FileUtils.gunzipFile(mockFile0, mockFile0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.gunzipFile((File) null, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.utilities.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.utilities.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getAllFiles2((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getAllFiles((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.exists((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.copyFiles("pEV25", "pEV25", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.utilities.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.copyFile("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in FileUtils.copyFile: 
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.copyFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      String string0 = FileUtils.read("Q?8y6:H|+Ch91^0", "UTF-8");
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "&,G-T '?,M9@");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        FileUtils.read("Q?8y6:H|+Ch91^0", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jksubuw.ahOmZYx<");
      try { 
        FileUtils.smartReader("Q?8y6:H|+Ch91^0", "Q?8y6:H|+Ch91^0");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = FileUtils.makePathStandard("8b/");
      assertEquals("8b/", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = FileUtils.getFileName("/");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("|!pnjv");
      // Undeclared exception!
      try { 
        FileUtils.copyFiles("|!pnjv", "", linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in FileUtils.copyFile: 
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jksubuw.ahOmZYx<");
      FileUtils.copyFile("Q?8y6:H|+Ch91^0", "Jksubuw.ahOmZYx<");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("kZ'ADRlj7");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "kZ'ADRlj7");
      List<String> list0 = FileUtils.getAllFiles2("");
      assertTrue(list0.contains("kZ'ADRlj7"));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      List<String> list0 = FileUtils.getAllFiles2("");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      List<String> list0 = FileUtils.getAllFiles2("kZ'ADRlj7");
      assertFalse(list0.contains("kZ'ADRlj7"));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jksubuw.ahOmZYx<");
      List<String> list0 = FileUtils.readLine("Q?8y6:H|+Ch91^0", "UTF-8");
      assertTrue(list0.contains("Jksubuw.ahOmZYx<"));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      List<String> list0 = FileUtils.readLine("Q?8y6:H|+Ch91^0", "UTF-8");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jksubuw.ahOmZYx<");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      // Undeclared exception!
      try { 
        FileUtils.readLine("Q?8y6:H|+Ch91^0", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("=.[Qll-/.gz");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R8hQ");
      // Undeclared exception!
      try { 
        FileUtils.read("=.[Qll-/.gz", "=.[Qll-/.gz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.util.zip.ZipException: Not in GZIP format
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q?8y6:H|+Ch91^0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jksubuw.ahOmZYx<");
      BufferedReader bufferedReader0 = FileUtils.smartReader("Q?8y6:H|+Ch91^0");
      assertNotNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = FileUtils.getAllFiles("");
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileUtils fileUtils0 = new FileUtils();
      assertEquals(51200, FileUtils.BUF_SIZE);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileUtils.write("QRji/|HuC![@0bu", "UTF-8", "ciir.umass.edu.utilities.RankLibError");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = FileUtils.exists("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.smartReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
