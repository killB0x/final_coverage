/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:35:24 GMT 2022
 */

package ciir.umass.edu.features;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.features.LinearNormalizer;
import ciir.umass.edu.learning.DataPoint;
import ciir.umass.edu.learning.RankList;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LinearNormalizer_ESTest extends LinearNormalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinearNormalizer linearNormalizer0 = new LinearNormalizer();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        linearNormalizer0.normalize((RankList) null, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.features.LinearNormalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinearNormalizer linearNormalizer0 = new LinearNormalizer();
      // Undeclared exception!
      try { 
        linearNormalizer0.normalize((RankList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.features.LinearNormalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinearNormalizer linearNormalizer0 = new LinearNormalizer();
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        linearNormalizer0.normalize(rankList0, intArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in LinearNormalizor::normalize(): The input ranked list is empty
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinearNormalizer linearNormalizer0 = new LinearNormalizer();
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      // Undeclared exception!
      try { 
        linearNormalizer0.normalize(rankList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in LinearNormalizor::normalize(): The input ranked list is empty
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinearNormalizer linearNormalizer0 = new LinearNormalizer();
      String string0 = linearNormalizer0.name();
      assertEquals("linear", string0);
  }
}
