/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:34:28 GMT 2022
 */

package ciir.umass.edu.learning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.learning.DataPoint;
import ciir.umass.edu.learning.RankList;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RankList_ESTest extends RankList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      assertEquals(0, rankList0.getFeatureCount());
      
      rankList0.featureCount = 3041;
      String string0 = rankList0.toString();
      assertEquals("RankList (0, 3041)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      assertEquals(0, rankList0.getFeatureCount());
      
      rankList0.featureCount = 3041;
      RankList rankList1 = rankList0.getRanking((short) (-842));
      assertEquals(0, rankList1.getFeatureCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      RankList rankList1 = rankList0.getCorrectRanking();
      rankList1.featureCount = 1;
      DataPoint[] dataPointArray0 = new DataPoint[9];
      rankList1.rl = dataPointArray0;
      // Undeclared exception!
      try { 
        rankList1.getCorrectRanking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      int[] intArray0 = new int[2];
      RankList rankList1 = null;
      try {
        rankList1 = new RankList(rankList0, intArray0, (-685));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 685 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      RankList rankList1 = rankList0.getCorrectRanking();
      DataPoint[] dataPointArray0 = new DataPoint[9];
      rankList1.rl = dataPointArray0;
      int[] intArray0 = new int[2];
      RankList rankList2 = null;
      try {
        rankList2 = new RankList(rankList1, intArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      RankList rankList1 = rankList0.getCorrectRanking();
      DataPoint[] dataPointArray0 = new DataPoint[9];
      rankList1.rl = dataPointArray0;
      int[] intArray0 = new int[9];
      RankList rankList2 = null;
      try {
        rankList2 = new RankList(rankList1, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      linkedList0.add((DataPoint) null);
      linkedList0.add((DataPoint) null);
      RankList rankList0 = null;
      try {
        rankList0 = new RankList(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      rankList0.init();
      assertEquals(0, rankList0.getFeatureCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      DataPoint[] dataPointArray0 = new DataPoint[3];
      rankList0.rl = dataPointArray0;
      rankList0.set(0, (DataPoint) null);
      assertEquals(0, rankList0.getFeatureCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      assertEquals(0, rankList0.getFeatureCount());
      
      rankList0.featureCount = 1;
      int int0 = rankList0.getFeatureCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      rankList0.featureCount = (-363);
      int int0 = rankList0.getFeatureCount();
      assertEquals((-363), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      RankList rankList1 = rankList0.getCorrectRanking();
      DataPoint[] dataPointArray0 = new DataPoint[9];
      rankList1.rl = dataPointArray0;
      rankList1.get(7);
      assertEquals(0, rankList1.getFeatureCount());
      assertEquals(0, rankList0.getFeatureCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      rankList0.rl = null;
      // Undeclared exception!
      try { 
        rankList0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      rankList0.rl = null;
      // Undeclared exception!
      try { 
        rankList0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      RankList rankList1 = rankList0.getCorrectRanking();
      DataPoint[] dataPointArray0 = new DataPoint[9];
      rankList1.rl = dataPointArray0;
      // Undeclared exception!
      try { 
        rankList1.getID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      int[] intArray0 = new int[0];
      RankList rankList1 = new RankList(rankList0, intArray0);
      assertEquals(0, rankList0.getFeatureCount());
      assertEquals(0, rankList1.getFeatureCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      rankList0.size();
      assertEquals(0, rankList0.getFeatureCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      rankList0.rl = null;
      String string0 = rankList0.toString();
      assertEquals("RankList (0, 0)", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      RankList rankList1 = rankList0.getCorrectRanking();
      DataPoint[] dataPointArray0 = new DataPoint[9];
      rankList1.rl = dataPointArray0;
      // Undeclared exception!
      try { 
        rankList1.getRanking((short)3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      int[] intArray0 = new int[0];
      RankList rankList1 = new RankList(rankList0, intArray0, (-4776));
      assertEquals(0, rankList1.getFeatureCount());
      assertEquals(0, rankList0.getFeatureCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      int[] intArray0 = new int[9];
      RankList rankList1 = null;
      try {
        rankList1 = new RankList(rankList0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DataPoint[] dataPointArray0 = new DataPoint[9];
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      rankList0.rl = dataPointArray0;
      RankList rankList1 = null;
      try {
        rankList1 = new RankList(rankList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      RankList rankList1 = new RankList(rankList0);
      DataPoint[] dataPointArray0 = new DataPoint[9];
      rankList1.featureCount = (-1);
      rankList1.rl = dataPointArray0;
      // Undeclared exception!
      try { 
        rankList1.getRanking((short)3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      // Undeclared exception!
      try { 
        rankList0.getID();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      // Undeclared exception!
      try { 
        rankList0.get((-4776));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4776 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      int int0 = rankList0.getFeatureCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      // Undeclared exception!
      try { 
        rankList0.set(4, (DataPoint) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.RankList", e);
      }
  }
}
