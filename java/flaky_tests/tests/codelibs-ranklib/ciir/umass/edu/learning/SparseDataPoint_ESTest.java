/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:16:16 GMT 2022
 */

package ciir.umass.edu.learning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.learning.DataPoint;
import ciir.umass.edu.learning.SparseDataPoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SparseDataPoint_ESTest extends SparseDataPoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      sparseDataPoint0.knownFeatures = 1850;
      // Undeclared exception!
      try { 
        sparseDataPoint0.getFeatureVector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1849 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("6 mC");
      int[] intArray0 = new int[3];
      intArray0[1] = 43;
      sparseDataPoint0.fIds = intArray0;
      sparseDataPoint0.featureCount = 43;
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureValue(43, 43);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("6 mC");
      sparseDataPoint0.featureCount = 447;
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureValue(43, 43);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in SparseDataPoint::setFeatureValue(): feature (id=43) not found.
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureValue(0, 0.0F);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in SparseDataPoint::setFeatureValue(): feature (id=0) out of range.
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      int[] intArray0 = new int[3];
      intArray0[1] = 26;
      sparseDataPoint0.fIds = intArray0;
      sparseDataPoint0.featureCount = 26;
      // Undeclared exception!
      try { 
        sparseDataPoint0.getFeatureValue(26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      // Undeclared exception!
      try { 
        sparseDataPoint0.getFeatureValue((-5987));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in SparseDataPoint::getFeatureValue(): requesting unspecified feature, fid=-5987
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      float[] floatArray0 = new float[0];
      sparseDataPoint0.setFeatureVector(floatArray0);
      assertFalse(DataPoint.missingZero);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("12 OC'");
      sparseDataPoint0.knownFeatures = 58;
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureVector(floatArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("6 mC");
      int[] intArray0 = new int[3];
      intArray0[0] = 43;
      sparseDataPoint0.featureCount = 43;
      intArray0[1] = 447;
      float[] floatArray0 = new float[6];
      sparseDataPoint0.fVals = floatArray0;
      sparseDataPoint0.fIds = intArray0;
      sparseDataPoint0.setFeatureValue(43, 43);
      assertEquals("", sparseDataPoint0.getDescription());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureVector((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      sparseDataPoint0.knownFeatures = (-1994);
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureVector(floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1994
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      sparseDataPoint0.fIds = null;
      // Undeclared exception!
      try { 
        sparseDataPoint0.hasFeature((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 G");
      sparseDataPoint0.fIds = null;
      // Undeclared exception!
      try { 
        sparseDataPoint0.getFeatureVector();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = null;
      try {
        sparseDataPoint0 = new SparseDataPoint("YCQ_0JC]Oso*[ee)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in DataPoint::parse()
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = null;
      try {
        sparseDataPoint0 = new SparseDataPoint((SparseDataPoint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      float[] floatArray0 = new float[9];
      floatArray0[1] = Float.NaN;
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureVector(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 OC'");
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureValue(589, 589);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in SparseDataPoint::setFeatureValue(): feature (id=589) out of range.
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 3'");
      // Undeclared exception!
      try { 
        sparseDataPoint0.setFeatureValue((-263), (-263));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in SparseDataPoint::setFeatureValue(): feature (id=-263) out of range.
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("6 mC");
      int[] intArray0 = new int[3];
      intArray0[0] = 43;
      intArray0[1] = 447;
      sparseDataPoint0.fIds = intArray0;
      sparseDataPoint0.featureCount = 43;
      // Undeclared exception!
      try { 
        sparseDataPoint0.getFeatureValue(43);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.SparseDataPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      // Undeclared exception!
      try { 
        sparseDataPoint0.getFeatureValue(1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in SparseDataPoint::getFeatureValue(): requesting unspecified feature, fid=1
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 G");
      sparseDataPoint0.featureCount = 19;
      float float0 = sparseDataPoint0.getFeatureValue(2);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      // Undeclared exception!
      try { 
        sparseDataPoint0.getFeatureValue(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in SparseDataPoint::getFeatureValue(): requesting unspecified feature, fid=0
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("6 mC");
      int[] intArray0 = new int[3];
      intArray0[1] = 447;
      sparseDataPoint0.fIds = intArray0;
      boolean boolean0 = sparseDataPoint0.hasFeature(447);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      boolean boolean0 = sparseDataPoint0.hasFeature(16);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SparseDataPoint sparseDataPoint0 = new SparseDataPoint("2 '");
      SparseDataPoint sparseDataPoint1 = new SparseDataPoint(sparseDataPoint0);
      assertEquals("", sparseDataPoint1.getDescription());
      assertEquals((-1.0), sparseDataPoint1.getCached(), 0.01);
      assertEquals("'", sparseDataPoint1.getID());
      assertEquals(2.0F, sparseDataPoint1.getLabel(), 0.01F);
  }
}
