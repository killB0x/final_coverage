/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:23:05 GMT 2022
 */

package ciir.umass.edu.learning.tree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.learning.DataPoint;
import ciir.umass.edu.learning.RankList;
import ciir.umass.edu.learning.tree.Ensemble;
import ciir.umass.edu.learning.tree.RFRanker;
import ciir.umass.edu.metric.MetricScorer;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RFRanker_ESTest extends RFRanker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      RFRanker.nTrees = 300;
      // Undeclared exception!
      try { 
        rFRanker0.model();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.tree.RFRanker", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      Ensemble[] ensembleArray0 = new Ensemble[2];
      Ensemble ensemble0 = new Ensemble();
      ensembleArray0[0] = ensemble0;
      rFRanker0.ensembles = ensembleArray0;
      // Undeclared exception!
      try { 
        rFRanker0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.tree.RFRanker", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      RFRanker.nBag = (-17);
      String string0 = rFRanker0.model();
      assertEquals("## Random Forests\n## No. of bags = -17\n## Sub-sampling = 1.0\n## Feature-sampling = 0.3\n## No. of trees = 1\n## No. of leaves = 100\n## No. of threshold candidates = 256\n## Learning rate = 0.1\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      Ensemble[] ensembleArray0 = new Ensemble[2];
      rFRanker0.ensembles = ensembleArray0;
      Ensemble[] ensembleArray1 = rFRanker0.getEnsembles();
      assertEquals(2, ensembleArray1.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      rFRanker0.loadFromString("-OOB");
      Ensemble[] ensembleArray0 = rFRanker0.getEnsembles();
      assertEquals(0, ensembleArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      rFRanker0.loadFromString("ciir.umass.edu.parsing.ModelLineProducer");
      // Undeclared exception!
      try { 
        rFRanker0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.tree.RFRanker", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      rFRanker0.loadFromString("ciir.umass.edu.learning.tree.RegressionTree");
      // Undeclared exception!
      try { 
        rFRanker0.model();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.tree.RFRanker", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      RFRanker rFRanker1 = (RFRanker)rFRanker0.createNew();
      assertEquals(100, RFRanker.nTreeLeaves);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      String string0 = rFRanker0.name();
      assertEquals("Random Forests", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      rFRanker0.loadFromString("<ensemble>\n</ensemble>\n");
      assertEquals(0.0, rFRanker0.getScoreOnValidationData(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      // Undeclared exception!
      try { 
        rFRanker0.loadFromString("-OOB</ens#mble></ensemble>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in Emsemble(xmlRepresentation): 
         //
         verifyException("ciir.umass.edu.utilities.RankLibError", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      RFRanker.nBag = (-1934469803);
      String string0 = rFRanker0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      Ensemble[] ensembleArray0 = new Ensemble[3];
      rFRanker0.ensembles = ensembleArray0;
      // Undeclared exception!
      try { 
        rFRanker0.eval((DataPoint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.tree.RFRanker", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      rFRanker0.loadFromString("+M1");
      double double0 = rFRanker0.eval((DataPoint) null);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      Ensemble[] ensembleArray0 = rFRanker0.getEnsembles();
      assertNull(ensembleArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      // Undeclared exception!
      try { 
        rFRanker0.learn();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      // Undeclared exception!
      try { 
        rFRanker0.printParameters();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<RankList> linkedList0 = new LinkedList<RankList>();
      RFRanker rFRanker0 = new RFRanker(linkedList0, (int[]) null, (MetricScorer) null);
      assertEquals(256, RFRanker.nThreshold);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RFRanker rFRanker0 = new RFRanker();
      // Undeclared exception!
      try { 
        rFRanker0.init();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }
}
