/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:49:12 GMT 2022
 */

package ciir.umass.edu.learning.boosting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.learning.DataPoint;
import ciir.umass.edu.learning.RankList;
import ciir.umass.edu.learning.boosting.WeakRanker;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WeakRanker_ESTest extends WeakRanker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker(0);
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      LinkedList<RankList> linkedList1 = new LinkedList<RankList>();
      linkedList1.add(rankList0);
      List<RankList> list0 = weakRanker0.rank((List<RankList>) linkedList1);
      assertEquals(0, weakRanker0.getFID());
      assertFalse(list0.contains(rankList0));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker(0);
      int int0 = weakRanker0.getFID();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker(520);
      int int0 = weakRanker0.getFID();
      assertEquals(520, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker(35);
      // Undeclared exception!
      try { 
        weakRanker0.rank((RankList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.boosting.WeakRanker", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker((-15));
      LinkedList<RankList> linkedList0 = new LinkedList<RankList>();
      linkedList0.add((RankList) null);
      // Undeclared exception!
      try { 
        weakRanker0.rank((List<RankList>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.boosting.WeakRanker", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker((-15));
      LinkedList<RankList> linkedList0 = new LinkedList<RankList>();
      weakRanker0.rank((List<RankList>) linkedList0);
      assertEquals((-15), weakRanker0.getFID());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker((-1661));
      LinkedList<DataPoint> linkedList0 = new LinkedList<DataPoint>();
      RankList rankList0 = new RankList(linkedList0);
      weakRanker0.rank(rankList0);
      assertEquals((-1661), weakRanker0.getFID());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WeakRanker weakRanker0 = new WeakRanker((-1661));
      int int0 = weakRanker0.getFID();
      assertEquals((-1661), int0);
  }
}
