/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:43:22 GMT 2022
 */

package ciir.umass.edu.learning.neuralnet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.learning.neuralnet.ListNeuron;
import ciir.umass.edu.learning.neuralnet.Neuron;
import ciir.umass.edu.learning.neuralnet.PropParameter;
import ciir.umass.edu.learning.neuralnet.Synapse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListNeuron_ESTest extends ListNeuron_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      int[][] intArray0 = new int[0][9];
      PropParameter propParameter0 = new PropParameter(956, intArray0);
      listNeuron0.computeDelta(propParameter0);
      Synapse synapse0 = new Synapse(listNeuron0, listNeuron0);
      listNeuron0.updateWeight(propParameter0);
      assertEquals(0.9, Neuron.momentum, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      int[][] intArray0 = new int[0][9];
      PropParameter propParameter0 = new PropParameter(956, intArray0);
      listNeuron0.computeDelta(propParameter0);
      Synapse synapse0 = new Synapse(listNeuron0, listNeuron0);
      listNeuron0.computeOutput();
      listNeuron0.updateWeight(propParameter0);
      assertEquals(0.9, Neuron.momentum, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      int[][] intArray0 = new int[0][9];
      PropParameter propParameter0 = new PropParameter(956, intArray0);
      float[] floatArray0 = new float[14];
      propParameter0.labels = floatArray0;
      Synapse synapse0 = new Synapse(listNeuron0, listNeuron0);
      listNeuron0.addOutput(956);
      listNeuron0.addOutput(956);
      listNeuron0.computeDelta(propParameter0);
      listNeuron0.updateWeight(propParameter0);
      assertEquals(0.001, Neuron.learningRate, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      double[] doubleArray0 = new double[6];
      listNeuron0.d1 = doubleArray0;
      listNeuron0.d2 = doubleArray0;
      Synapse synapse0 = new Synapse(listNeuron0, listNeuron0);
      // Undeclared exception!
      try { 
        listNeuron0.updateWeight((PropParameter) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      listNeuron0.addOutput((-255.55057));
      // Undeclared exception!
      try { 
        listNeuron0.computeDelta((PropParameter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.neuralnet.ListNeuron", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      float[] floatArray0 = new float[0];
      PropParameter propParameter0 = new PropParameter(floatArray0);
      listNeuron0.addOutput(5186.52);
      // Undeclared exception!
      try { 
        listNeuron0.computeDelta(propParameter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.neuralnet.ListNeuron", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      float[] floatArray0 = new float[1];
      Synapse synapse0 = new Synapse(listNeuron0, listNeuron0);
      PropParameter propParameter0 = new PropParameter(floatArray0);
      // Undeclared exception!
      try { 
        listNeuron0.updateWeight(propParameter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.learning.neuralnet.ListNeuron", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ListNeuron listNeuron0 = new ListNeuron();
      listNeuron0.computeDelta((PropParameter) null);
      double[] doubleArray0 = new double[2];
      listNeuron0.d1 = doubleArray0;
      Synapse synapse0 = new Synapse(listNeuron0, listNeuron0);
      // Undeclared exception!
      try { 
        listNeuron0.updateWeight((PropParameter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("ciir.umass.edu.learning.neuralnet.ListNeuron", e);
      }
  }
}
