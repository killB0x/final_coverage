/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 17:52:14 GMT 2022
 */

package ciir.umass.edu.metric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ciir.umass.edu.metric.ERRScorer;
import ciir.umass.edu.metric.METRIC;
import ciir.umass.edu.metric.MetricScorer;
import ciir.umass.edu.metric.MetricScorerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MetricScorerFactory_ESTest extends MetricScorerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      MetricScorer metricScorer0 = metricScorerFactory0.createScorer("P");
      assertEquals(10, metricScorer0.getK());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      METRIC mETRIC0 = METRIC.ERR;
      MetricScorer metricScorer0 = metricScorerFactory0.createScorer(mETRIC0, 0);
      assertEquals(0, metricScorer0.getK());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      METRIC mETRIC0 = METRIC.Reciprocal;
      MetricScorer metricScorer0 = metricScorerFactory0.createScorer(mETRIC0, (-3393));
      assertEquals((-3393), metricScorer0.getK());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      METRIC mETRIC0 = METRIC.Reciprocal;
      MetricScorer metricScorer0 = metricScorerFactory0.createScorer(mETRIC0);
      assertEquals(0, metricScorer0.getK());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      // Undeclared exception!
      try { 
        metricScorerFactory0.createScorer("@/phi");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"/phi\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      // Undeclared exception!
      try { 
        metricScorerFactory0.createScorer((METRIC) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.metric.MetricScorerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      // Undeclared exception!
      try { 
        metricScorerFactory0.createScorer((METRIC) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.metric.MetricScorerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      // Undeclared exception!
      try { 
        metricScorerFactory0.createScorer("PcLz'p2}n@9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ciir.umass.edu.metric.MetricScorerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      MetricScorer metricScorer0 = metricScorerFactory0.createScorer("MAP");
      assertEquals("MAP", metricScorer0.name());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      METRIC mETRIC0 = METRIC.ERR;
      ERRScorer eRRScorer0 = (ERRScorer)metricScorerFactory0.createScorer(mETRIC0);
      assertEquals(16.0, ERRScorer.MAX, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetricScorerFactory metricScorerFactory0 = new MetricScorerFactory();
      METRIC mETRIC0 = METRIC.ERR;
      MetricScorer metricScorer0 = metricScorerFactory0.createScorer(mETRIC0, 1140);
      assertEquals(1140, metricScorer0.getK());
  }
}
