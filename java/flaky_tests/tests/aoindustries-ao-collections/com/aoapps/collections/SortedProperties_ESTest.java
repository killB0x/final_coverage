/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:19:45 GMT 2022
 */

package com.aoapps.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aoapps.collections.SortedProperties;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SortedProperties_ESTest extends SortedProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      sortedProperties0.setProperty("TxS'Fj{=wNE", "");
      Set<Map.Entry<Object, Object>> set0 = (Set<Map.Entry<Object, Object>>)sortedProperties0.entrySet();
      Integer integer0 = new Integer(0);
      BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(biFunction0).apply(any() , any());
      sortedProperties0.compute(set0, biFunction0);
      // Undeclared exception!
      try { 
        sortedProperties0.entrySet();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.TreeSet cannot be cast to class java.lang.String (java.util.TreeSet and java.lang.String are in module java.base of loader 'bootstrap')
         //
         verifyException("java.text.Collator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      Integer integer0 = new Integer((-109));
      sortedProperties0.put(integer0, integer0);
      // Undeclared exception!
      try { 
        sortedProperties0.keys();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')
         //
         verifyException("java.text.Collator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      Comparator<Object> comparator0 = sortedProperties0.getKeyComparator();
      assertNotNull(comparator0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      sortedProperties0.setProperty("TxS'Fj{=wNE", "");
      Enumeration<Object> enumeration0 = sortedProperties0.keys();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      SortedProperties sortedProperties1 = new SortedProperties(sortedProperties0);
      assertTrue(sortedProperties1.equals((Object)sortedProperties0));
  }
}
