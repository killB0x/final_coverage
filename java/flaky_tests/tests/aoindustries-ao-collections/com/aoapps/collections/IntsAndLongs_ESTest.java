/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:20:30 GMT 2022
 */

package com.aoapps.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aoapps.collections.IntArrayList;
import com.aoapps.collections.IntList;
import com.aoapps.collections.IntsAndLongs;
import com.aoapps.collections.LongArrayList;
import com.aoapps.collections.SortedIntArrayList;
import com.aoapps.collections.SortedLongArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntsAndLongs_ESTest extends IntsAndLongs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList(2);
      long[] longArray0 = new long[1];
      LongArrayList longArrayList0 = new LongArrayList(longArray0);
      IntsAndLongs intsAndLongs0 = null;
      try {
        intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, longArrayList0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // ints.size() != longs.size()
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList(0);
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      sortedIntArrayList0.add(0);
      int int0 = intsAndLongs0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      Integer integer0 = new Integer(223);
      sortedIntArrayList0.add(integer0);
      int int0 = intsAndLongs0.indexOf(223);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[5] = 1;
      IntArrayList intArrayList0 = new IntArrayList(intArray0);
      LongArrayList longArrayList0 = new LongArrayList(intArrayList0);
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(intArrayList0, longArrayList0);
      int int0 = intsAndLongs0.indexOf(1);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList(0);
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      sortedLongArrayList0.add(0);
      long long0 = intsAndLongs0.getLong(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList(0);
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      Long long0 = new Long(4149L);
      sortedLongArrayList0.add(long0);
      long long1 = intsAndLongs0.getLong(0);
      assertEquals(4149L, long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList(0);
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      sortedIntArrayList0.add(0);
      int int0 = intsAndLongs0.getInt(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      LongArrayList longArrayList0 = new LongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, longArrayList0);
      sortedIntArrayList0.add(520);
      int int0 = intsAndLongs0.getInt(0);
      assertEquals(520, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      LongArrayList longArrayList0 = new LongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, longArrayList0);
      sortedIntArrayList0.add((-3291));
      int int0 = intsAndLongs0.getInt(0);
      assertEquals((-3291), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = (-1);
      IntArrayList intArrayList0 = new IntArrayList(intArray0);
      LongArrayList longArrayList0 = new LongArrayList(intArrayList0);
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(intArrayList0, longArrayList0);
      boolean boolean0 = intsAndLongs0.contains((-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      LongArrayList longArrayList0 = new LongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, longArrayList0);
      // Undeclared exception!
      try { 
        intsAndLongs0.getLong(1096);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1096, Size: 0
         //
         verifyException("com.aoapps.collections.LongArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList(0);
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      // Undeclared exception!
      try { 
        intsAndLongs0.getLong((-1127));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1127 out of bounds for length 0
         //
         verifyException("com.aoapps.collections.LongArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      sortedIntArrayList0.elementData = null;
      // Undeclared exception!
      try { 
        intsAndLongs0.getInt((-1439));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aoapps.collections.IntArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      LongArrayList longArrayList0 = new LongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, longArrayList0);
      // Undeclared exception!
      try { 
        intsAndLongs0.getInt(6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 0
         //
         verifyException("com.aoapps.collections.IntArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      IntsAndLongs intsAndLongs0 = null;
      try {
        intsAndLongs0 = new IntsAndLongs((IntList) null, sortedLongArrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aoapps.collections.IntsAndLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      sortedIntArrayList0.add(1386);
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      IntsAndLongs intsAndLongs0 = null;
      try {
        intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // ints.size() != longs.size()
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntArrayList intArrayList0 = new IntArrayList();
      Integer integer0 = new Integer(10);
      intArrayList0.add(integer0);
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      sortedLongArrayList0.add((-1862L));
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(intArrayList0, sortedLongArrayList0);
      long long0 = intsAndLongs0.getLong(0);
      assertEquals((-1862L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      // Undeclared exception!
      try { 
        intsAndLongs0.getInt((-1439));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1439 out of bounds for length 10
         //
         verifyException("com.aoapps.collections.IntArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      int int0 = intsAndLongs0.indexOf(223);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      SortedLongArrayList sortedLongArrayList0 = new SortedLongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, sortedLongArrayList0);
      int int0 = intsAndLongs0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SortedIntArrayList sortedIntArrayList0 = new SortedIntArrayList();
      LongArrayList longArrayList0 = new LongArrayList();
      IntsAndLongs intsAndLongs0 = new IntsAndLongs(sortedIntArrayList0, longArrayList0);
      boolean boolean0 = intsAndLongs0.contains(3);
      assertFalse(boolean0);
  }
}
