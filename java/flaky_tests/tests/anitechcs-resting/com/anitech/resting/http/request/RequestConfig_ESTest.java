/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 09:54:42 GMT 2022
 */

package com.anitech.resting.http.request;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.anitech.resting.http.Header;
import com.anitech.resting.http.request.RequestConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RequestConfig_ESTest extends RequestConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.addHeader("", "D@Y.Vt7pX9Y");
      assertEquals((-1), requestConfig0.getConnectTimeout());
      assertEquals((-1), requestConfig0.getSocketTimeout());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      assertEquals((-1), requestConfig0.getSocketTimeout());
      
      requestConfig0.setSocketTimeout(0);
      int int0 = requestConfig0.getSocketTimeout();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.addHeader("D@Y.Vt7pX9Y", "D@Y.Vt7pX9Y");
      requestConfig0.getHeaders();
      assertEquals((-1), requestConfig0.getConnectTimeout());
      assertEquals((-1), requestConfig0.getSocketTimeout());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      assertEquals((-1), requestConfig0.getConnectTimeout());
      
      requestConfig0.setConnectTimeout(0);
      int int0 = requestConfig0.getConnectTimeout();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      // Undeclared exception!
      try { 
        requestConfig0.setHeaders((Header[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.addHeader((String) null, (String) null);
      // Undeclared exception!
      try { 
        requestConfig0.getHeader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      Header[] headerArray0 = new Header[14];
      requestConfig0.setHeaders(headerArray0);
      // Undeclared exception!
      try { 
        requestConfig0.addHeader("", "");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      Header[] headerArray0 = new Header[4];
      Header header0 = new Header("", "");
      requestConfig0.setHeaders(headerArray0);
      // Undeclared exception!
      try { 
        requestConfig0.addHeader(header0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.addHeader("D@Y.Vt7pX9Y", "D@Y.Vt7pX9Y");
      Header header0 = requestConfig0.getHeader("D@Y.Vt7pX9Y");
      assertEquals((-1), requestConfig0.getSocketTimeout());
      assertNotNull(header0);
      assertEquals((-1), requestConfig0.getConnectTimeout());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.addHeader("D@Y.Vt7pX9Y", "D@Y.Vt7pX9Y");
      Header header0 = requestConfig0.getHeader("wp>50A+*!}1~O2");
      assertEquals((-1), requestConfig0.getConnectTimeout());
      assertEquals((-1), requestConfig0.getSocketTimeout());
      assertNull(header0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.setConnectTimeout(1220);
      int int0 = requestConfig0.getConnectTimeout();
      assertEquals(1220, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      int int0 = requestConfig0.getConnectTimeout();
      assertEquals((-1), int0);
      assertEquals((-1), requestConfig0.getSocketTimeout());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.setSocketTimeout(1220);
      int int0 = requestConfig0.getSocketTimeout();
      assertEquals(1220, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      requestConfig0.getHeaders();
      assertEquals((-1), requestConfig0.getSocketTimeout());
      assertEquals((-1), requestConfig0.getConnectTimeout());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      int int0 = requestConfig0.getSocketTimeout();
      assertEquals((-1), requestConfig0.getConnectTimeout());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RequestConfig requestConfig0 = new RequestConfig();
      Header header0 = requestConfig0.getHeader("wp>50A+*!}1~O2");
      requestConfig0.addHeader(header0);
      assertEquals((-1), requestConfig0.getSocketTimeout());
      assertEquals((-1), requestConfig0.getConnectTimeout());
  }
}
