/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 10:36:32 GMT 2022
 */

package io.gsonfire.util.reflection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.gsonfire.util.reflection.FieldInspector;
import java.lang.reflect.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldInspector_ESTest extends FieldInspector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldInspector fieldInspector0 = new FieldInspector();
      Class<Field> class0 = Field.class;
      Field[] fieldArray0 = fieldInspector0.getDeclaredMembers(class0);
      assertEquals(12, fieldArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldInspector fieldInspector0 = new FieldInspector();
      Class<Object> class0 = Object.class;
      Field[] fieldArray0 = fieldInspector0.getDeclaredMembers(class0);
      assertEquals(0, fieldArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldInspector fieldInspector0 = new FieldInspector();
      // Undeclared exception!
      try { 
        fieldInspector0.getDeclaredMembers((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldInspector fieldInspector0 = new FieldInspector();
      Field field0 = fieldInspector0.map((Field) null);
      assertNull(field0);
  }
}
