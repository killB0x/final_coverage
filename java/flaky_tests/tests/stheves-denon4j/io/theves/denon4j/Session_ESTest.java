/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:09:06 GMT 2022
 */

package io.theves.denon4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.theves.denon4j.DenonReceiver;
import io.theves.denon4j.Session;
import io.theves.denon4j.Stats;
import io.theves.denon4j.net.Event;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Session_ESTest extends Session_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-1707));
      Session session0 = new Session(denonReceiver0);
      byte[] byteArray0 = new byte[8];
      Event event0 = Event.create(byteArray0);
      session0.received(event0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", event0.asciiValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Session session0 = null;
      try {
        session0 = new Session((DenonReceiver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.Session", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("io.theves.denon4j.DenonReceiver$9", 0);
      Session session0 = new Session(denonReceiver0);
      byte[] byteArray0 = new byte[6];
      Event event0 = Event.create(byteArray0);
      denonReceiver0.dispatch(event0);
      Stats stats0 = session0.stats();
      assertEquals(1, stats0.eventCounter());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-1707));
      Session session0 = new Session(denonReceiver0);
      session0.finish();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("io.theves.denon4j.DenonReceiver$9", 0);
      Session session0 = new Session(denonReceiver0);
      Stats stats0 = session0.stats();
      assertEquals(0, stats0.eventCounter());
  }
}
