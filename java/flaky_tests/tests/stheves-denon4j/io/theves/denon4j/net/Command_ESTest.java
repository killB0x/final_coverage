/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 15:50:28 GMT 2022
 */

package io.theves.denon4j.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.theves.denon4j.net.Command;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Command_ESTest extends Command_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Command command0 = Command.createCommand("@p");
      assertEquals("@p", command0.signature());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Command command0 = new Command("", "");
      String string0 = command0.signature();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Command command0 = Command.createCommand((String) null, (String) null);
      String string0 = command0.getPrefix();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Command command0 = Command.createCommand("", "");
      String string0 = command0.getPrefix();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Command command0 = Command.createCommand("", (String) null);
      command0.getParameter();
      assertEquals("null", command0.signature());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Command command0 = new Command("", "");
      String string0 = command0.getParameter();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Command command0 = Command.createCommand(":}vpPx{+!ZM", ":}vpPx{+!ZM");
      String string0 = command0.getParameter();
      assertEquals(":}vpPx{+!ZM", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Command command0 = Command.createCommand(":}vpPx{+!ZM", ":}vpPx{+!ZM");
      String string0 = command0.getPrefix();
      assertEquals(":}vpPx{+!ZM", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Command command0 = Command.createCommand("jH*VOQg.|", "");
      String string0 = command0.signature();
      assertEquals("jH*VOQg.|", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Command command0 = Command.createCommand("jH*VOQg.|", "");
      Command command1 = new Command("", "");
      boolean boolean0 = command0.equals(command1);
      assertFalse(boolean0);
      assertEquals("", command0.getParameter());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Command command0 = Command.createCommand("jH*VOQg.|", "");
      boolean boolean0 = command0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("jH*VOQg.|", command0.signature());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Command command0 = Command.createCommand(":}vpPx{+!ZM", ":}vpPx{+!ZM");
      boolean boolean0 = command0.equals(command0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Command command0 = Command.createCommand("jH*VOQg.|", "");
      boolean boolean0 = command0.equals("Command{jH*VOQg.|}");
      assertFalse(boolean0);
      assertEquals("jH*VOQg.|", command0.signature());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Command.createCommand("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Command length must be > 2
         //
         verifyException("io.theves.denon4j.net.Command", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Command command0 = Command.createCommand("jH*VOQg.|");
      assertEquals("jH*VOQg.|", command0.signature());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        Command.createCommand((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Command length must be > 2
         //
         verifyException("io.theves.denon4j.net.Command", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Command command0 = Command.createCommand("jH*VOQg.|", "");
      command0.hashCode();
      assertEquals("jH*VOQg.|", command0.signature());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Command command0 = Command.createCommand("", "");
      String string0 = command0.toString();
      assertEquals("Command{}", string0);
  }
}
