/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:05:07 GMT 2022
 */

package io.theves.denon4j.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.theves.denon4j.net.Event;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Event_ESTest extends Event_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Event event0 = Event.create(byteArray0);
      byte[] byteArray1 = event0.getRaw();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Event event0 = Event.create(byteArray0);
      String string0 = event0.asciiValue();
      assertEquals("\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Event.create((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Event event0 = Event.create(byteArray0);
      String string0 = event0.asciiValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Event event0 = Event.create(byteArray0);
      byte[] byteArray1 = event0.getRaw();
      assertSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Event event0 = Event.create(byteArray0);
      String string0 = event0.toString();
      assertEquals("Event{asciiValue=''}", string0);
  }
}
