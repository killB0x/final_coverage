/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 15:43:54 GMT 2022
 */

package io.theves.denon4j.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.theves.denon4j.net.EventReader;
import io.theves.denon4j.net.Tcp;
import java.net.Socket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EventReader_ESTest extends EventReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      EventReader eventReader0 = new EventReader((Tcp) null, mockSocket0);
      // Undeclared exception!
      try { 
        eventReader0.run();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.SocketException: Socket is not connected
         //
         verifyException("io.theves.denon4j.net.EventReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EventReader eventReader0 = new EventReader((Tcp) null, (Socket) null);
      // Undeclared exception!
      try { 
        eventReader0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.net.EventReader", e);
      }
  }
}
