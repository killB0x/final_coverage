/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 15:41:28 GMT 2022
 */

package io.theves.denon4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.theves.denon4j.Condition;
import io.theves.denon4j.DenonReceiver;
import io.theves.denon4j.Session;
import io.theves.denon4j.controls.AbstractControl;
import io.theves.denon4j.controls.Menu;
import io.theves.denon4j.controls.NetUsbIPodControl;
import io.theves.denon4j.controls.Setting;
import io.theves.denon4j.controls.SleepTimer;
import io.theves.denon4j.controls.Slider;
import io.theves.denon4j.controls.Toggle;
import io.theves.denon4j.controls.Volume;
import io.theves.denon4j.net.Event;
import io.theves.denon4j.net.EventListener;
import io.theves.denon4j.net.Protocol;
import java.util.Collection;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DenonReceiver_ESTest extends DenonReceiver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Protocol protocol0 = Protocol.tcp((String) null, 1460);
      DenonReceiver denonReceiver0 = new DenonReceiver(protocol0);
      // Undeclared exception!
      try { 
        denonReceiver0.send((String) null, "\"s5SN");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Arguments must not be null
         //
         verifyException("io.theves.denon4j.DenonReceiver", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("SL DOWN", 0);
      byte[] byteArray0 = new byte[1];
      Event event0 = Event.create(byteArray0);
      denonReceiver0.dispatch(event0);
      assertFalse(denonReceiver0.isConnected());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 625);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DenonReceiver denonReceiver0 = new DenonReceiver(".R+D", 625);
      denonReceiver0.connect(625);
      denonReceiver0.disconnect();
      assertTrue(denonReceiver0.isConnected());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 625);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DenonReceiver denonReceiver0 = new DenonReceiver(".R+D", 625);
      denonReceiver0.connect(625);
      Session session0 = denonReceiver0.getSession();
      assertNotNull(session0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("PB", 1);
      // Undeclared exception!
      try { 
        denonReceiver0.send("PB", "PB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not connected.
         //
         verifyException("io.theves.denon4j.net.Tcp", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Condition condition0 = Condition.size(39);
      DenonReceiver denonReceiver0 = new DenonReceiver("cU_4+{c", 39);
      // Undeclared exception!
      try { 
        denonReceiver0.send("cU_4+{c", condition0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not connected.
         //
         verifyException("io.theves.denon4j.net.Tcp", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("cU_4+{c", 39);
      // Undeclared exception!
      try { 
        denonReceiver0.send("cU_4+{c");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not connected.
         //
         verifyException("io.theves.denon4j.net.Tcp", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("cU_4+{c", 1290);
      // Undeclared exception!
      try { 
        denonReceiver0.connect(1290);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot establishConnection to host/ip cU_4+{c on port 1290
         //
         verifyException("io.theves.denon4j.net.Tcp", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DenonReceiver denonReceiver0 = null;
      try {
        denonReceiver0 = new DenonReceiver((Protocol) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", 2853);
      Condition condition0 = Condition.regex("");
      // Undeclared exception!
      try { 
        denonReceiver0.send("", condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Command length must be > 2
         //
         verifyException("io.theves.denon4j.net.Command", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", 1);
      Condition condition0 = Condition.size(938);
      // Undeclared exception!
      try { 
        denonReceiver0.send((String) null, condition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Arguments must not be null
         //
         verifyException("io.theves.denon4j.DenonReceiver", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("92", 1498);
      Setting setting0 = denonReceiver0.tunerMode();
      denonReceiver0.removeListener(setting0);
      assertFalse(denonReceiver0.isConnected());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Protocol protocol0 = Protocol.tcp("", 7);
      DenonReceiver denonReceiver0 = new DenonReceiver(protocol0);
      Session session0 = new Session(denonReceiver0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-1903));
      Collection<AbstractControl> collection0 = denonReceiver0.getControls();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver(".R+D", 625);
      // Undeclared exception!
      try { 
        denonReceiver0.disconnect();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.DenonReceiver", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("cU_q4+{lc", 1234);
      // Undeclared exception!
      try { 
        denonReceiver0.send("cU_q4+{lc", (Condition) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Arguments must not be null
         //
         verifyException("io.theves.denon4j.DenonReceiver", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", 3284);
      denonReceiver0.removeListener((EventListener) null);
      assertFalse(denonReceiver0.isConnected());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("jK^(mY[ $", 598);
      denonReceiver0.addListener((EventListener) null);
      assertFalse(denonReceiver0.isConnected());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", 0);
      Volume volume0 = denonReceiver0.subwooferVolume();
      // Undeclared exception!
      try { 
        volume0.set("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("bjeqliRM}[Sqa#'b%np", (-200));
      Volume volume0 = denonReceiver0.frontLeftVolume();
      // Undeclared exception!
      try { 
        volume0.set("bjeqliRM}[Sqa#'b%np");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("^_jl<{mb", (-784));
      Volume volume0 = denonReceiver0.surroundRightVolume();
      // Undeclared exception!
      try { 
        volume0.set("^_jl<{mb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-1903));
      Setting setting0 = denonReceiver0.input();
      assertEquals("Select INPUT Source", setting0.getName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver(" EC;>B%N", 284);
      Slider slider0 = denonReceiver0.tunerPreset();
      assertEquals("Tuner Preset", slider0.getName());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("?jK^(mY8[ $", 39);
      // Undeclared exception!
      try { 
        denonReceiver0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.DenonReceiver", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", 0);
      SleepTimer sleepTimer0 = denonReceiver0.sleepTimer();
      assertEquals("Main Zone Sleep Timer setting", sleepTimer0.getName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("PseWuq``/+MB}k", (-2906));
      Volume volume0 = denonReceiver0.frontHeightLeftVolume();
      // Undeclared exception!
      try { 
        volume0.set("PseWuq``/+MB}k");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("9isNN", 32);
      Toggle toggle0 = denonReceiver0.mainZone();
      assertEquals("ZM", toggle0.getCommandPrefix());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("Front Height Left Volume", (-613));
      Volume volume0 = denonReceiver0.surroundBackLeftVolume();
      // Undeclared exception!
      try { 
        volume0.set("Front Height Left Volume");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("U`tmT%&rx90", 2626);
      Setting setting0 = denonReceiver0.video();
      assertEquals("Select VIDEO Source", setting0.getName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver((String) null, (-803));
      Volume volume0 = denonReceiver0.centerVolume();
      // Undeclared exception!
      try { 
        volume0.set((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("cU_4+{c", 39);
      boolean boolean0 = denonReceiver0.isConnected();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("/:8)nSCz'", 2506);
      Toggle toggle0 = denonReceiver0.mute();
      assertEquals("Mute Toggle", toggle0.getName());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.151", 23);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DenonReceiver denonReceiver0 = new DenonReceiver("$J]");
      Toggle toggle0 = denonReceiver0.power();
      assertEquals("PW", toggle0.getCommandPrefix());
      assertEquals("Power Switch", toggle0.getName());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DenonReceiver denonReceiver0 = null;
      try {
        denonReceiver0 = new DenonReceiver("{t`vm/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No receivers found
         //
         verifyException("io.theves.denon4j.DenonReceiver", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("FSy2q~Sl", (-2300));
      Slider slider0 = denonReceiver0.tunerFrequency();
      assertEquals("TFAN", slider0.getCommandPrefix());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("<mtS~", 2147483645);
      Session session0 = denonReceiver0.getSession();
      assertNull(session0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("io.theves.denon4j.controls.SleepTimer", 24);
      Volume volume0 = denonReceiver0.surroundBackVolume();
      // Undeclared exception!
      try { 
        volume0.set("io.theves.denon4j.controls.SleepTimer");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver(".R+D", 625);
      NetUsbIPodControl netUsbIPodControl0 = denonReceiver0.netUsb();
      assertEquals("Network Audio/USB /iPod DIRECT Extended Control", netUsbIPodControl0.getName());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("bjeqliRM}[Sqa#'b%np", (-200));
      Volume volume0 = denonReceiver0.surroundBackRightVolume();
      // Undeclared exception!
      try { 
        volume0.set("bjeqliRM}[Sqa#'b%np");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", 4452);
      Menu menu0 = denonReceiver0.menu();
      assertEquals("MN", menu0.getCommandPrefix());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("s", 1270);
      // Undeclared exception!
      try { 
        denonReceiver0.send("s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Command length must be > 2
         //
         verifyException("io.theves.denon4j.net.Command", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("2vn  6eCY", 3437);
      Volume volume0 = denonReceiver0.surroundLeftVolume();
      // Undeclared exception!
      try { 
        volume0.set("2vn  6eCY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-405));
      List<EventListener> list0 = denonReceiver0.getEventListeners();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("bjeqliRM}[Sqa#'b%np", 1);
      Volume volume0 = denonReceiver0.frontHeightRightVolume();
      // Undeclared exception!
      try { 
        volume0.set("bjeqliRM}[Sqa#'b%np");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("Front Height Left Volume", (-610));
      Volume volume0 = denonReceiver0.frontRightVolume();
      // Undeclared exception!
      try { 
        volume0.set("Front Height Left Volume");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-98));
      // Undeclared exception!
      try { 
        denonReceiver0.connect((-98));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-98
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-667));
      // Undeclared exception!
      try { 
        denonReceiver0.dispatch((Event) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", 10);
      Setting setting0 = denonReceiver0.surroundMode();
      assertEquals("MS", setting0.getCommandPrefix());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("PT", 9);
      Volume volume0 = denonReceiver0.masterVolume();
      assertEquals("Master Volume", volume0.getName());
      assertEquals("MV", volume0.getCommandPrefix());
  }
}
