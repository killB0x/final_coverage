/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:03:08 GMT 2022
 */

package io.theves.denon4j.controls;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.theves.denon4j.DenonReceiver;
import io.theves.denon4j.controls.Menu;
import io.theves.denon4j.controls.MenuNavigation;
import io.theves.denon4j.net.Event;
import io.theves.denon4j.net.Protocol;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Menu_ESTest extends Menu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Protocol protocol0 = Protocol.tcp("", 0);
      DenonReceiver denonReceiver0 = new DenonReceiver(protocol0);
      Menu menu0 = denonReceiver0.menu();
      MenuNavigation menuNavigation0 = MenuNavigation.CURSOR_RIGHT;
      // Undeclared exception!
      try { 
        menu0.control(menuNavigation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not connected.
         //
         verifyException("io.theves.denon4j.net.Tcp", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Protocol protocol0 = Protocol.tcp("", 0);
      DenonReceiver denonReceiver0 = new DenonReceiver(protocol0);
      Menu menu0 = denonReceiver0.menu();
      byte[] byteArray0 = new byte[0];
      Event event0 = Event.create(byteArray0);
      menu0.doHandle(event0);
      assertEquals("Main Menu", menu0.getName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Menu menu0 = new Menu((DenonReceiver) null);
      MenuNavigation menuNavigation0 = MenuNavigation.CURSOR_LEFT;
      // Undeclared exception!
      try { 
        menu0.control(menuNavigation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.controls.AbstractControl", e);
      }
  }
}
