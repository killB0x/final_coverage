/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 15:52:14 GMT 2022
 */

package io.theves.denon4j.controls;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.theves.denon4j.DenonReceiver;
import io.theves.denon4j.controls.Volume;
import io.theves.denon4j.net.Event;
import io.theves.denon4j.net.Protocol;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Volume_ESTest extends Volume_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Volume volume0 = new Volume((DenonReceiver) null, "00", "00", "00");
      // Undeclared exception!
      try { 
        volume0.set("00");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.controls.AbstractControl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Protocol protocol0 = Protocol.tcp("", 4285);
      DenonReceiver denonReceiver0 = new DenonReceiver(protocol0);
      Volume volume0 = new Volume(denonReceiver0, "", "", "");
      // Undeclared exception!
      try { 
        volume0.get();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Command length must be > 2
         //
         verifyException("io.theves.denon4j.net.Command", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("XxFg|", 13);
      Volume volume0 = denonReceiver0.surroundLeftVolume();
      // Undeclared exception!
      try { 
        volume0.get();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not connected.
         //
         verifyException("io.theves.denon4j.net.Tcp", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Volume volume0 = new Volume((DenonReceiver) null, "tZTOSZ }SNu)*W5J]M^", "tZTOSZ }SNu)*W5J]M^", "tZTOSZ }SNu)*W5J]M^");
      // Undeclared exception!
      try { 
        volume0.doHandle((Event) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver((String) null, (-2074296830));
      Volume volume0 = null;
      try {
        volume0 = new Volume(denonReceiver0, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Protocol protocol0 = Protocol.tcp("", 4);
      DenonReceiver denonReceiver0 = new DenonReceiver(protocol0);
      Volume volume0 = new Volume(denonReceiver0, "", "", "93");
      byte[] byteArray0 = new byte[9];
      Event event0 = Event.create(byteArray0);
      volume0.doHandle(event0);
      assertNull(volume0.getMax());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Volume volume0 = new Volume((DenonReceiver) null, "Qq^ET]EJU", "Qq^ET]EJU", "Qq^ET]EJU");
      byte[] byteArray0 = new byte[12];
      Event event0 = Event.create(byteArray0);
      volume0.doHandle(event0);
      assertEquals("Qq^ET]EJU", volume0.getCommandPrefix());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Volume volume0 = new Volume((DenonReceiver) null, "ddd?", "ddd?", "ddd?");
      // Undeclared exception!
      try { 
        volume0.set("ddd?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Protocol protocol0 = Protocol.tcp("", 4);
      DenonReceiver denonReceiver0 = new DenonReceiver(protocol0);
      Volume volume0 = new Volume(denonReceiver0, "", "", "93");
      // Undeclared exception!
      try { 
        volume0.set("93");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not connected.
         //
         verifyException("io.theves.denon4j.net.Tcp", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Volume volume0 = new Volume((DenonReceiver) null, ":7", ":7", ":7");
      // Undeclared exception!
      try { 
        volume0.set((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value must match '\\d\\d\\d?'
         //
         verifyException("io.theves.denon4j.controls.Volume", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DenonReceiver denonReceiver0 = new DenonReceiver("", (-80789189));
      Volume volume0 = new Volume(denonReceiver0, "", "Event{asciiValue='\uFFFD\uFFFD\uFFFD\uFFFD \uFFFDO\u0000\uFFFD'}", "CV\f\uFFFD\uFFFD\u0007\uFFFD\uFFFD\uFFFD7\uFFFD");
      String string0 = volume0.getMax();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Volume volume0 = new Volume((DenonReceiver) null, "tZTOSZ }SNu)*W5J]M^", "tZTOSZ }SNu)*W5J]M^", "tZTOSZ }SNu)*W5J]M^");
      // Undeclared exception!
      try { 
        volume0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.theves.denon4j.controls.AbstractControl", e);
      }
  }
}
