/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 13:11:56 GMT 2022
 */

package hu.meza.tools.barrier;

import org.junit.Test;
import static org.junit.Assert.*;
import hu.meza.tools.barrier.Response;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Response_ESTest extends Response_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      Response response0 = new Response(object0, false);
      boolean boolean0 = response0.success();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable();
      Response response0 = new Response(object0, true, mockThrowable0);
      response0.exception();
      assertTrue(response0.success());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Response response0 = new Response((Object) null);
      response0.result();
      assertTrue(response0.success());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      Response response0 = new Response(object0, true);
      response0.exception();
      assertTrue(response0.success());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable();
      Response response0 = new Response(object0, true, mockThrowable0);
      response0.result();
      assertTrue(response0.success());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable();
      Response response0 = new Response(object0, true, mockThrowable0);
      boolean boolean0 = response0.success();
      assertTrue(boolean0);
  }
}
