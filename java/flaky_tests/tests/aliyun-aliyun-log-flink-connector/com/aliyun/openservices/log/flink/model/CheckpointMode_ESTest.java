/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:12:35 GMT 2022
 */

package com.aliyun.openservices.log.flink.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aliyun.openservices.log.flink.model.CheckpointMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CheckpointMode_ESTest extends CheckpointMode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CheckpointMode checkpointMode0 = CheckpointMode.fromString("periodic");
      assertEquals(CheckpointMode.PERIODIC, checkpointMode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CheckpointMode[] checkpointModeArray0 = CheckpointMode.values();
      assertEquals(3, checkpointModeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CheckpointMode checkpointMode0 = CheckpointMode.valueOf("DISABLED");
      assertEquals(CheckpointMode.DISABLED, checkpointMode0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckpointMode checkpointMode0 = CheckpointMode.fromString("on_checkpoints");
      assertEquals(CheckpointMode.ON_CHECKPOINTS, checkpointMode0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckpointMode.fromString("_o");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal checkpoint mode: _o
         //
         verifyException("com.aliyun.openservices.log.flink.model.CheckpointMode", e);
      }
  }
}
