/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:10:16 GMT 2022
 */

package com.aliyun.openservices.log.flink.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aliyun.openservices.log.flink.model.CheckpointMode;
import com.aliyun.openservices.log.flink.util.LogUtil;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogUtil_ESTest extends LogUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        LogUtil.parseCheckpointMode((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.log.flink.util.LogUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        LogUtil.getDefaultPosition((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.log.flink.util.LogUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      String string0 = LogUtil.getDefaultPosition(properties0);
      assertEquals("begin_cursor", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      CheckpointMode checkpointMode0 = LogUtil.parseCheckpointMode(properties0);
      assertEquals(CheckpointMode.ON_CHECKPOINTS, checkpointMode0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        LogUtil.getCommitIntervalMs(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/flink/util/PropertiesUtil
         //
         verifyException("com.aliyun.openservices.log.flink.util.LogUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        LogUtil.getFetchIntervalMillis((Properties) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/flink/util/PropertiesUtil
         //
         verifyException("com.aliyun.openservices.log.flink.util.LogUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        LogUtil.getDiscoveryIntervalMs(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/flink/util/PropertiesUtil
         //
         verifyException("com.aliyun.openservices.log.flink.util.LogUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        LogUtil.getNumberPerFetch(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/flink/util/PropertiesUtil
         //
         verifyException("com.aliyun.openservices.log.flink.util.LogUtil", e);
      }
  }
}
