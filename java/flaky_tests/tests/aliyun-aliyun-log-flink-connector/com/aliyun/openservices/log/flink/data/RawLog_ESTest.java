/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:15:19 GMT 2022
 */

package com.aliyun.openservices.log.flink.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aliyun.openservices.log.flink.data.RawLog;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RawLog_ESTest extends RawLog_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.setTime(168);
      int int0 = rawLog0.getTime();
      assertEquals(168, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.setTime((-405));
      int int0 = rawLog0.getTime();
      assertEquals((-405), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.setTags((Map<String, String>) null);
      Map<String, String> map0 = rawLog0.getTags();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.addTags("a|er", "");
      Map<String, String> map0 = rawLog0.getTags();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.setContents((Map<String, String>) null);
      Map<String, String> map0 = rawLog0.getContents();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.addContent("eNJEWW[,[(%", "!o6F7S");
      Map<String, String> map0 = rawLog0.getContents();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.setTags((Map<String, String>) null);
      // Undeclared exception!
      try { 
        rawLog0.addTags(", contents=", "*=1oD9wgqip;@HQP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.log.flink.data.RawLog", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      Map<String, String> map0 = rawLog0.getContents();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      int int0 = rawLog0.getTime();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      Map<String, String> map0 = rawLog0.getTags();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      rawLog0.setContents((Map<String, String>) null);
      // Undeclared exception!
      try { 
        rawLog0.addContent("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.log.flink.data.RawLog", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawLog rawLog0 = new RawLog();
      String string0 = rawLog0.toString();
      assertEquals("RawLog{time=0, contents={}, tags={}}", string0);
  }
}
