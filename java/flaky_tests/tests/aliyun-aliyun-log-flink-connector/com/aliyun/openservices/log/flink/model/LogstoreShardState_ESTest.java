/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:11:30 GMT 2022
 */

package com.aliyun.openservices.log.flink.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aliyun.openservices.log.flink.model.LogstoreShardMeta;
import com.aliyun.openservices.log.flink.model.LogstoreShardState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogstoreShardState_ESTest extends LogstoreShardState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LogstoreShardState logstoreShardState0 = new LogstoreShardState((LogstoreShardMeta) null, "");
      LogstoreShardMeta logstoreShardMeta0 = logstoreShardState0.getShardMeta();
      assertNull(logstoreShardMeta0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta("", (-3064), "");
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      logstoreShardMeta0.setShardStatus("readonly");
      LogstoreShardMeta logstoreShardMeta1 = logstoreShardState0.getShardMeta();
      assertSame(logstoreShardMeta0, logstoreShardMeta1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta();
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      LogstoreShardMeta logstoreShardMeta1 = logstoreShardState0.getShardMeta();
      assertSame(logstoreShardMeta1, logstoreShardMeta0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta("readonly", 5, "readwrite");
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "readwrite");
      LogstoreShardMeta logstoreShardMeta1 = logstoreShardState0.getShardMeta();
      assertNull(logstoreShardMeta1.getEndCursor());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta();
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      logstoreShardState0.setOffset("LogstoreShardMeta{logstore='null', shardId=0, shardStatus='null', endCursor='null'}");
      String string0 = logstoreShardState0.getOffset();
      assertEquals("LogstoreShardMeta{logstore='null', shardId=0, shardStatus='null', endCursor='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LogstoreShardState logstoreShardState0 = new LogstoreShardState((LogstoreShardMeta) null, "");
      // Undeclared exception!
      try { 
        logstoreShardState0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.log.flink.model.LogstoreShardState", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LogstoreShardState logstoreShardState0 = new LogstoreShardState((LogstoreShardMeta) null, "");
      // Undeclared exception!
      try { 
        logstoreShardState0.isEndReached();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.log.flink.model.LogstoreShardState", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta("", (-3064), "");
      logstoreShardMeta0.setEndCursor("");
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      logstoreShardMeta0.setShardStatus("readonly");
      boolean boolean0 = logstoreShardState0.isEndReached();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta("readonly", (-2041420911), "readonly");
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, (String) null);
      boolean boolean0 = logstoreShardState0.isEndReached();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta("", (-3064), "");
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      logstoreShardMeta0.setShardStatus("readonly");
      boolean boolean0 = logstoreShardState0.isEndReached();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta();
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      boolean boolean0 = logstoreShardState0.isEndReached();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta();
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      logstoreShardState0.setOffset((String) null);
      String string0 = logstoreShardState0.getOffset();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta();
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      String string0 = logstoreShardState0.getOffset();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta("", (-3064), "");
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      String string0 = logstoreShardState0.toString();
      assertEquals("LogstoreShardState{shardMeta=LogstoreShardMeta{logstore='', shardId=-3064, shardStatus='', endCursor='null'}, offset=''}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LogstoreShardMeta logstoreShardMeta0 = new LogstoreShardMeta("", (-3064), "");
      LogstoreShardState logstoreShardState0 = new LogstoreShardState(logstoreShardMeta0, "");
      logstoreShardState0.setShardMeta(logstoreShardMeta0);
      assertNull(logstoreShardMeta0.getEndCursor());
  }
}
