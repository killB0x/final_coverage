/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 03:36:11 GMT 2022
 */

package org.fluentd.logger.sender;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.fluentd.logger.errorhandler.ErrorHandler;
import org.fluentd.logger.sender.NullSender;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullSender_ESTest extends NullSender_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullSender nullSender0 = new NullSender("<)$=9)HH", 0, (-2638), 1);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      boolean boolean0 = nullSender0.emit("org.fluentd.logger.sender.NullSender", (long) 0, (Map<String, Object>) hashMap0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullSender nullSender0 = new NullSender("", (-2004), (-2297), (-513));
      boolean boolean0 = nullSender0.isConnected();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NullSender nullSender0 = new NullSender("<)$=9)HH", 0, (-2638), 1);
      String string0 = nullSender0.toString();
      assertEquals("org.fluentd.logger.sender.NullSender", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NullSender nullSender0 = new NullSender("", (-2004), (-2297), (-513));
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      boolean boolean0 = nullSender0.emit("null", (Map<String, Object>) hashMap0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NullSender nullSender0 = new NullSender("", (-2004), (-2297), (-513));
      nullSender0.flush();
      assertTrue(nullSender0.isConnected());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullSender nullSender0 = new NullSender("", (-2004), (-2297), (-513));
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      nullSender0.setErrorHandler(errorHandler0);
      assertEquals("null", nullSender0.getName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NullSender nullSender0 = new NullSender("", (-2004), (-2297), (-513));
      String string0 = nullSender0.getName();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NullSender nullSender0 = new NullSender("W:2'I@", (-30), (-30), (-30));
      nullSender0.close();
      assertTrue(nullSender0.isConnected());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NullSender nullSender0 = new NullSender("", 0, 0, 0);
      nullSender0.removeErrorHandler();
      assertTrue(nullSender0.isConnected());
  }
}
