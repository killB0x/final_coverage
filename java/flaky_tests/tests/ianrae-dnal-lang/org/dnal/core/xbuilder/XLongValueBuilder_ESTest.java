/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:59:09 GMT 2022
 */

package org.dnal.core.xbuilder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dnal.core.DType;
import org.dnal.core.DValueImpl;
import org.dnal.core.DValueProxy;
import org.dnal.core.Shape;
import org.dnal.core.xbuilder.XLongValueBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XLongValueBuilder_ESTest extends XLongValueBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType1);
      xLongValueBuilder0.buildFromString("DATE");
      assertFalse(xLongValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XLongValueBuilder xLongValueBuilder0 = null;
      try {
        xLongValueBuilder0 = new XLongValueBuilder((DType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XLongValueBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      DValueImpl dValueImpl0 = new DValueImpl(dType0, "pA:)>R_/H\"-");
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType1);
      xLongValueBuilder0.buildFrom((Long) null);
      assertFalse(xLongValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType1);
      Long long0 = new Long((-1885L));
      xLongValueBuilder0.buildFrom(long0);
      assertFalse(xLongValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "m:b9d2!I~y408", (DType) null);
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType0);
      xLongValueBuilder0.buildFromString((String) null);
      assertFalse(xLongValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType1);
      xLongValueBuilder0.buildFromString("8");
      assertFalse(xLongValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Shape shape0 = Shape.LONG;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DValueImpl dValueImpl0 = new DValueImpl(dType0, "pA:)>R_/H\"-");
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      DType dType2 = new DType(shape0, "pA:)>R_/H\"-", dType1);
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType2);
      assertFalse(xLongValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType1);
      xLongValueBuilder0.onFinish();
      assertFalse(xLongValueBuilder0.wasSuccessful());
  }
}
