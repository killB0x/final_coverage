/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:31:17 GMT 2022
 */

package org.dnal.core.xbuilder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dnal.core.DListType;
import org.dnal.core.DStructType;
import org.dnal.core.DType;
import org.dnal.core.OrderedMap;
import org.dnal.core.Shape;
import org.dnal.core.xbuilder.XBuilderFactory;
import org.dnal.core.xbuilder.XDValueBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XBuilderFactory_ESTest extends XBuilderFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      // Undeclared exception!
      try { 
        xBuilderFactory0.createBuilderFor((DType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XBuilderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.ENUM;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "", dType0, orderedMap0);
      DListType dListType0 = new DListType(shape0, "e}P3_@c/w", dStructType0, dStructType0);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dListType0);
      assertFalse(xDValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.STRUCT;
      DType dType0 = new DType(shape0, "org.dnal.core.ErrorType", (DType) null);
      // Undeclared exception!
      try { 
        xBuilderFactory0.createBuilderFor(dType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DType cannot be cast to class org.dnal.core.DStructType (org.dnal.core.DType and org.dnal.core.DStructType are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1a5f5483)
         //
         verifyException("org.dnal.core.xbuilder.XBuilderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.LIST;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DListType dListType0 = new DListType(shape0, "sNk4s", dType0, dType0);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dListType0);
      assertFalse(xDValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.DATE;
      DType dType0 = new DType(shape0, "", (DType) null);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dType0);
      assertFalse(xDValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.BOOLEAN;
      DListType dListType0 = new DListType(shape0, "INVALIDRULE", (DType) null, (DType) null);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dListType0);
      assertFalse(xDValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.STRING;
      DType dType0 = new DType(shape0, "?p=ms-*WWy%#Ae", (DType) null);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dType0);
      assertFalse(xDValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.NUMBER;
      DType dType0 = new DType(shape0, "i", (DType) null);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dType0);
      assertFalse(xDValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.ANY;
      DListType dListType0 = new DListType(shape0, "org.dnal.core.xbuilder.XBuilderFactory$1", (DType) null, (DType) null);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dListType0);
      assertNull(xDValueBuilder0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      XBuilderFactory xBuilderFactory0 = new XBuilderFactory();
      Shape shape0 = Shape.INTEGER;
      DListType dListType0 = new DListType(shape0, "3n&Td,d_>%q8", (DType) null, (DType) null);
      XDValueBuilder xDValueBuilder0 = xBuilderFactory0.createBuilderFor(dListType0);
      assertFalse(xDValueBuilder0.wasSuccessful());
  }
}
