/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:53:07 GMT 2022
 */

package org.dnal.core.xbuilder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.dnal.core.DListType;
import org.dnal.core.DMapType;
import org.dnal.core.DStructType;
import org.dnal.core.DType;
import org.dnal.core.DValue;
import org.dnal.core.ErrorType;
import org.dnal.core.NewErrorMessage;
import org.dnal.core.OrderedMap;
import org.dnal.core.Shape;
import org.dnal.core.ValidationState;
import org.dnal.core.xbuilder.XBooleanValueBuilder;
import org.dnal.core.xbuilder.XDateValueBuilder;
import org.dnal.core.xbuilder.XIntegerValueBuilder;
import org.dnal.core.xbuilder.XListValueBuilder;
import org.dnal.core.xbuilder.XLongValueBuilder;
import org.dnal.core.xbuilder.XMapValueBuilder;
import org.dnal.core.xbuilder.XNumberValueBuilder;
import org.dnal.core.xbuilder.XStringValueBuilder;
import org.dnal.core.xbuilder.XStructValueBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XDValueBuilder_ESTest extends XDValueBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "<;svN30/70.DQPg)D;", (DType) null);
      XBooleanValueBuilder xBooleanValueBuilder0 = new XBooleanValueBuilder(dType0);
      xBooleanValueBuilder0.addMissingFieldError("RV:4uU{}}N[", "<;svN30/70.DQPg)D;");
      assertFalse(xBooleanValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Shape shape0 = Shape.NUMBER;
      DMapType dMapType0 = new DMapType(shape0, "?", (DType) null, (DType) null);
      XMapValueBuilder xMapValueBuilder0 = new XMapValueBuilder(dMapType0);
      xMapValueBuilder0.addDuplicateFieldError((String) null, "");
      assertFalse(xMapValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Shape shape0 = Shape.STRING;
      DListType dListType0 = new DListType(shape0, "H2n6O41't&'@c", (DType) null, (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dListType0);
      xStringValueBuilder0.buildFromString("");
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Shape shape0 = Shape.NUMBER;
      DMapType dMapType0 = new DMapType(shape0, "?", (DType) null, (DType) null);
      XNumberValueBuilder xNumberValueBuilder0 = new XNumberValueBuilder(dMapType0);
      xNumberValueBuilder0.addWrongTypeError("?");
      assertFalse(xNumberValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Shape shape0 = Shape.ANY;
      DType dType0 = new DType(shape0, "#q1bOQ", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.addParsingError("#q1bOQ", "#q1bOQ");
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      DStructType dStructType0 = new DStructType(shape0, "3=IAdI=Rfk`dC", (DType) null, (OrderedMap) null);
      DListType dListType0 = new DListType(shape0, "3=IAdI=Rfk`dC", dStructType0, dStructType0);
      DMapType dMapType0 = new DMapType(shape0, "3=IAdI=Rfk`dC", dListType0, (DType) null);
      XMapValueBuilder xMapValueBuilder0 = new XMapValueBuilder(dMapType0);
      xMapValueBuilder0.valErrorList = null;
      List<NewErrorMessage> list0 = xMapValueBuilder0.getValidationErrors();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Shape shape0 = Shape.DATE;
      DMapType dMapType0 = new DMapType(shape0, "H2n6O41't&'@c", (DType) null, (DType) null);
      XMapValueBuilder xMapValueBuilder0 = new XMapValueBuilder(dMapType0);
      List<NewErrorMessage> list0 = xMapValueBuilder0.getValidationErrors();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Shape shape0 = Shape.STRUCT;
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "f S[X2V[0n&X", (DType) null, orderedMap0);
      XStructValueBuilder xStructValueBuilder0 = new XStructValueBuilder(dStructType0);
      DType dType0 = xStructValueBuilder0.getType();
      assertFalse(dType0.hasRules());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "", (DType) null);
      Shape shape1 = Shape.MAP;
      DMapType dMapType0 = new DMapType(shape1, "unknown fiel$ '%s'", (DType) null, dType0);
      XMapValueBuilder xMapValueBuilder0 = new XMapValueBuilder(dMapType0);
      DType dType1 = xMapValueBuilder0.getType();
      assertEquals(0, dType1.getBitIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DListType dListType0 = new DListType(shape0, "+'Lpp3_k(PxC#3", (DType) null, (DType) null);
      XListValueBuilder xListValueBuilder0 = new XListValueBuilder(dListType0);
      DType dType0 = xListValueBuilder0.getType();
      assertFalse(dType0.isMapShape());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Shape shape0 = Shape.STRING;
      DListType dListType0 = new DListType(shape0, "H2n6O41't&'@c", (DType) null, (DType) null);
      dListType0.setBitIndex((-2));
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dListType0);
      DType dType0 = xStringValueBuilder0.getType();
      assertEquals("H2n6O41't&'@c", dType0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      DListType dListType0 = new DListType(shape0, "[?$_u::jw", (DType) null, (DType) null);
      XNumberValueBuilder xNumberValueBuilder0 = new XNumberValueBuilder(dListType0);
      Double double0 = new Double(0.0);
      xNumberValueBuilder0.buildFrom(double0);
      DValue dValue0 = xNumberValueBuilder0.getDValue();
      assertEquals(0.0, dValue0.asNumber(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "odH", (DType) null);
      DListType dListType0 = new DListType(shape0, "ZE(]", dType0, (DType) null);
      XNumberValueBuilder xNumberValueBuilder0 = new XNumberValueBuilder(dListType0);
      Double double0 = new Double(2943.7246272848815);
      xNumberValueBuilder0.buildFrom(double0);
      DValue dValue0 = xNumberValueBuilder0.getDValue();
      assertEquals(ValidationState.UNKNOWN, dValue0.getValState());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Shape shape0 = Shape.BOOLEAN;
      DMapType dMapType0 = new DMapType(shape0, "", (DType) null, (DType) null);
      XNumberValueBuilder xNumberValueBuilder0 = new XNumberValueBuilder(dMapType0);
      Double double0 = new Double((-1));
      xNumberValueBuilder0.buildFrom(double0);
      DValue dValue0 = xNumberValueBuilder0.getDValue();
      assertEquals(ValidationState.UNKNOWN, dValue0.getValState());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "org.dnal.core.xbuilder.XDValueBuilder", (DType) null);
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType0);
      Long long0 = new Long(0L);
      xLongValueBuilder0.buildFrom(long0);
      DValue dValue0 = xLongValueBuilder0.getDValue();
      assertEquals(ValidationState.UNKNOWN, dValue0.getValState());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DType dType0 = new DType(shape0, "C>", (DType) null);
      XIntegerValueBuilder xIntegerValueBuilder0 = new XIntegerValueBuilder(dType0);
      Integer integer0 = new Integer(833);
      xIntegerValueBuilder0.buildFrom(integer0);
      DValue dValue0 = xIntegerValueBuilder0.getDValue();
      assertEquals(833, dValue0.asInt());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DMapType dMapType0 = new DMapType(shape0, "5A_4QsES/$BnoR", (DType) null, (DType) null);
      XIntegerValueBuilder xIntegerValueBuilder0 = new XIntegerValueBuilder(dMapType0);
      Integer integer0 = new Integer((-5));
      xIntegerValueBuilder0.buildFrom(integer0);
      DValue dValue0 = xIntegerValueBuilder0.getDValue();
      assertEquals(ValidationState.UNKNOWN, dValue0.getValState());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Shape shape0 = Shape.ANY;
      DMapType dMapType0 = new DMapType(shape0, "org.dnal.core.xbuilder.XListValueBuilder", (DType) null, (DType) null);
      XBooleanValueBuilder xBooleanValueBuilder0 = new XBooleanValueBuilder(dMapType0);
      Boolean boolean0 = Boolean.valueOf(true);
      xBooleanValueBuilder0.buildFrom(boolean0);
      DValue dValue0 = xBooleanValueBuilder0.getDValue();
      assertFalse(dValue0.isValid());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Shape shape0 = Shape.ANY;
      DMapType dMapType0 = new DMapType(shape0, "org.dnal.core.xbuilder.XListValueBuilder", (DType) null, (DType) null);
      XBooleanValueBuilder xBooleanValueBuilder0 = new XBooleanValueBuilder(dMapType0);
      Boolean boolean0 = Boolean.FALSE;
      xBooleanValueBuilder0.buildFrom(boolean0);
      DValue dValue0 = xBooleanValueBuilder0.getDValue();
      assertFalse(dValue0.isValid());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DType dType0 = new DType(shape0, "yyyy", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.valErrorList = null;
      // Undeclared exception!
      try { 
        xStringValueBuilder0.finish();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      DMapType dMapType0 = new DMapType(shape0, "org.dnal.core.xbuilder.XDValueBuilder", (DType) null, (DType) null);
      XMapValueBuilder xMapValueBuilder0 = new XMapValueBuilder(dMapType0);
      xMapValueBuilder0.valErrorList = null;
      // Undeclared exception!
      try { 
        xMapValueBuilder0.addRefError("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XDValueBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Shape shape0 = Shape.DATE;
      DType dType0 = new DType(shape0, "", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.valErrorList = null;
      // Undeclared exception!
      try { 
        xStringValueBuilder0.addParsingError("org.dnal.core.xbuilder.XDValueBuilder", "", "eq00");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XDValueBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Shape shape0 = Shape.STRING;
      DListType dListType0 = new DListType(shape0, "H2n6O41't&'@c", (DType) null, (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dListType0);
      // Undeclared exception!
      try { 
        xStringValueBuilder0.addOldErrorMsgZ((ErrorType) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XDValueBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "|At #6/kOeP%BgG/'9", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.valErrorList = null;
      // Undeclared exception!
      try { 
        xStringValueBuilder0.addNoDataError("|At #6/kOeP%BgG/'9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XDValueBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "w", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.valErrorList = null;
      // Undeclared exception!
      try { 
        xStringValueBuilder0.addNoDataError();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XDValueBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Shape shape0 = Shape.NUMBER;
      DMapType dMapType0 = new DMapType(shape0, "?", (DType) null, (DType) null);
      XMapValueBuilder xMapValueBuilder0 = new XMapValueBuilder(dMapType0);
      xMapValueBuilder0.valErrorList = null;
      // Undeclared exception!
      try { 
        xMapValueBuilder0.addDuplicateFieldError((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.xbuilder.XDValueBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DMapType dMapType0 = new DMapType(shape0, "enum %s does not contain '%s'", (DType) null, (DType) null);
      DListType dListType0 = new DListType(shape0, "enum %s does not contain '%s'", dMapType0, dMapType0);
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "enum %s does not contain '%s'", dListType0, orderedMap0);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dStructType0);
      xStringValueBuilder0.fieldName = "~#pwE5.KK";
      ErrorType errorType0 = ErrorType.MISSINGFIELD;
      NewErrorMessage newErrorMessage0 = xStringValueBuilder0.addOldErrorMsgZ(errorType0, "enum %s does not contain '%s'");
      assertEquals("?", newErrorMessage0.getTypeName());
      assertEquals("?", newErrorMessage0.getSrcFile());
      assertEquals("enum %s does not contain '%s'", newErrorMessage0.getMessage());
      assertEquals("~#pwE5.KK", newErrorMessage0.getFieldName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      ErrorType errorType0 = ErrorType.MISSINGFIELD;
      NewErrorMessage newErrorMessage0 = xStringValueBuilder0.addOldErrorMsgZ(errorType0, "unknown field '%s'");
      assertEquals("?", newErrorMessage0.getTypeName());
      assertEquals("?", newErrorMessage0.getSrcFile());
      assertEquals("?", newErrorMessage0.getFieldName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      boolean boolean0 = xStringValueBuilder0.finish();
      assertFalse(boolean0);
      
      boolean boolean1 = xStringValueBuilder0.wasSuccessful();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Shape shape0 = Shape.STRING;
      DMapType dMapType0 = new DMapType(shape0, "DDiYlA", (DType) null, (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dMapType0);
      xStringValueBuilder0.finish();
      boolean boolean0 = xStringValueBuilder0.wasSuccessful();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Shape shape0 = Shape.NUMBER;
      DType dType0 = new DType(shape0, "V2$,12Cyc/", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.fieldName = "V2$,12Cyc/";
      xStringValueBuilder0.addUnknownFieldError("V2$,12Cyc/");
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DListType dListType0 = new DListType(shape0, "W#y2)l5KfkO@Gh0", (DType) null, (DType) null);
      XListValueBuilder xListValueBuilder0 = new XListValueBuilder(dListType0);
      xListValueBuilder0.onFinish();
      assertFalse(xListValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DListType dListType0 = new DListType(shape0, "W#y2)l5KfkO@Gh0", (DType) null, (DType) null);
      XListValueBuilder xListValueBuilder0 = new XListValueBuilder(dListType0);
      List<NewErrorMessage> list0 = xListValueBuilder0.getValidationErrors();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "org.dnal.core.xbuilder.XDValueBuilder", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.addNoDataError("");
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Shape shape0 = Shape.DATE;
      DType dType0 = new DType(shape0, "", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.addParsingError("org.dnal.core.xbuilder.XDValueBuilder", "", "eq00");
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DListType dListType0 = new DListType(shape0, "W#y2)l5KfkO@Gh0", (DType) null, (DType) null);
      XDateValueBuilder xDateValueBuilder0 = new XDateValueBuilder(dListType0);
      xDateValueBuilder0.buildFromString("W#y2)l5KfkO@Gh0");
      assertFalse(xDateValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "org.dnal.core.xbuilder.XDValueBuilder", (DType) null);
      XLongValueBuilder xLongValueBuilder0 = new XLongValueBuilder(dType0);
      DValue dValue0 = xLongValueBuilder0.getDValue();
      assertNull(dValue0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.addNoDataError();
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      DType dType0 = new DType(shape0, "~QU%xF", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.addRefError("~QU%xF");
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DType dType0 = new DType(shape0, "", (DType) null);
      DMapType dMapType0 = new DMapType(shape0, "unknown fiel$ '%s'", (DType) null, dType0);
      XMapValueBuilder xMapValueBuilder0 = new XMapValueBuilder(dMapType0);
      DType dType1 = xMapValueBuilder0.getType();
      assertNull(dType1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "#q1bOQ", (DType) null);
      XStringValueBuilder xStringValueBuilder0 = new XStringValueBuilder(dType0);
      xStringValueBuilder0.addDuplicateFieldError("#q1bOQ", "#q1bOQ");
      assertFalse(xStringValueBuilder0.wasSuccessful());
  }
}
