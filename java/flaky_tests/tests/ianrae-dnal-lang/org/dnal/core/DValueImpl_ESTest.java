/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:57:52 GMT 2022
 */

package org.dnal.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.ThaiBuddhistDate;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.dnal.core.DStructHelper;
import org.dnal.core.DType;
import org.dnal.core.DValue;
import org.dnal.core.DValueImpl;
import org.dnal.core.DValueProxy;
import org.dnal.core.Shape;
import org.dnal.core.ValidationState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DValueImpl_ESTest extends DValueImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.setPersistenceId((Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject((Object) null);
      dValueProxy0.setPersistenceId((Object) null);
      // Undeclared exception!
      try { 
        dValueProxy0.getValState();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(974L);
      System.setCurrentTimeMillis(974L);
      Shape shape0 = Shape.LIST;
      DType dType0 = new DType(shape0, "", (DType) null);
      DValueImpl dValueImpl0 = new DValueImpl(dType0, (Object) null);
      dType0.isScalarShape();
      dType0.setBitIndex((-59));
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceType(dType0);
      dValueProxy0.getType();
      // Undeclared exception!
      try { 
        dValueProxy0.asString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      assertFalse(dValueImpl0.isValid());
      
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      assertFalse(dValueProxy0.isFutureValue());
      
      dValueProxy0.asStruct();
      dValueProxy0.forceObject(dValueProxy0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        dValueProxy0.asLong();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DType dType0 = null;
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.asStruct();
      DValueProxy dValueProxy1 = new DValueProxy(dValueProxy0);
      dValueProxy1.asDate();
      dValueProxy0.forceObject(dValueProxy1);
      Object object0 = new Object();
      DValueImpl dValueImpl1 = new DValueImpl((DType) null, object0);
      dValueImpl1.forceObject((Object) null);
      // Undeclared exception!
      try { 
        dValueProxy1.asString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Shape shape0 = Shape.NUMBER;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DType dType1 = new DType(shape0, "", dType0);
      DValueImpl dValueImpl0 = new DValueImpl(dType1, shape0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType2 = dValueProxy0.getType();
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn("", "").when(dValue0).toString();
      doReturn((-4344.54510741475)).when(dValue0).asNumber();
      doReturn(dType2, dType1).when(dValue0).getType();
      DValueProxy dValueProxy1 = new DValueProxy(dValue0);
      DType dType3 = dValueProxy1.getType();
      dValueProxy1.asNumber();
      DValueImpl dValueImpl1 = new DValueImpl(dType3, dValueProxy1);
      // Undeclared exception!
      try { 
        dValueImpl1.asList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DValueProxy cannot be cast to class java.util.List (org.dnal.core.DValueProxy is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d; java.util.List is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject((Object) null);
      // Undeclared exception!
      try { 
        dValueProxy0.asDate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueImpl dValueImpl1 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl1);
      dValueProxy0.asDate();
      DValueProxy dValueProxy1 = new DValueProxy(dValueProxy0);
      dValueProxy1.forceObject(dValueProxy0);
      Long long0 = new Long(0L);
      dValueProxy0.forceObject((Object) null);
      // Undeclared exception!
      try { 
        dValueProxy1.asStruct();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.getType();
      DType dType0 = new DType(shape0, "org.dnal.core.DValueImpl", (DType) null);
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn("org.dnal.core.DValueImpl", "org.dnal.core.DValueImpl").when(dValue0).toString();
      doReturn(2688.327215725379).when(dValue0).asNumber();
      doReturn(dType0, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy1 = new DValueProxy(dValue0);
      dValueProxy1.getType();
      dValueProxy1.asNumber();
      DValueImpl dValueImpl1 = new DValueImpl((DType) null, dValueProxy1);
      // Undeclared exception!
      try { 
        dValueImpl1.asList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DValueProxy cannot be cast to class java.util.List (org.dnal.core.DValueProxy is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d; java.util.List is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "IyGW0LV9Lkplp#|", (DType) null);
      DValueImpl dValueImpl0 = new DValueImpl(dType0, "IyGW0LV9Lkplp#|");
      dValueImpl0.getType();
      // Undeclared exception!
      try { 
        dValueImpl0.asLong();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.lang.Long (java.lang.String and java.lang.Long are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Long long0 = new Long(764L);
      dValueImpl0.forceObject(long0);
      dValueImpl0.asStruct();
      ValidationState validationState0 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      MockDate mockDate0 = new MockDate();
      mockDate0.toInstant();
      mockDate0.getTime();
      dValueProxy0.forceObject(mockDate0);
      dValueProxy0.forceType((DType) null);
      // Undeclared exception!
      try { 
        dValueProxy0.getObject();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.evosuite.runtime.mock.java.util.MockDate cannot be cast to class org.dnal.core.DValue (org.evosuite.runtime.mock.java.util.MockDate is in unnamed module of loader 'app'; org.dnal.core.DValue is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dValue0).toString();
      doReturn(0.0).when(dValue0).asNumber();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      dValueProxy0.asNumber();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, dValueProxy0);
      // Undeclared exception!
      try { 
        dValueImpl0.asList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DValueProxy cannot be cast to class java.util.List (org.dnal.core.DValueProxy is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d; java.util.List is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.asStruct();
      Object object0 = new Object();
      dValueProxy0.forceObject(dValueProxy0);
      // Undeclared exception!
      try { 
        dValueProxy0.asInt();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dValue0).toString();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      DType dType0 = new DType(shape0, (String) null, (DType) null);
      MockDate mockDate0 = new MockDate();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, mockDate0);
      DType dType1 = dValueImpl0.getType();
      assertFalse(dType1.hasRules());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      Object object0 = new Object();
      dValueProxy0.forceObject(object0);
      // Undeclared exception!
      try { 
        dValueProxy0.asStruct();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class org.dnal.core.DValue (java.lang.Object is in module java.base of loader 'bootstrap'; org.dnal.core.DValue is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dValue0).toString();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      Long long0 = new Long((-190L));
      Long long1 = Long.getLong("fB;G@ArM1!:M", long0);
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, long1);
      dValueImpl0.asStruct();
      Long long2 = new Long((-149L));
      dValueProxy0.setPersistenceId("fB;G@ArM1!:M");
      dValueImpl0.asStruct();
      Object object0 = new Object();
      dValueProxy0.forceObject(object0);
      dValueImpl0.asInt();
      Object object1 = new Object();
      Object object2 = new Object();
      dValueImpl0.asLong();
      // Undeclared exception!
      try { 
        dValueProxy0.getType();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class org.dnal.core.DValue (java.lang.Object is in module java.base of loader 'bootstrap'; org.dnal.core.DValue is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = Long.valueOf((-817L));
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, long0);
      dValueImpl0.asStruct();
      dValueImpl0.asInt();
      // Undeclared exception!
      try { 
        dValueImpl0.asList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Long cannot be cast to class java.util.List (java.lang.Long and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = new Long((-1L));
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, long0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      long long1 = dValueProxy0.asLong();
      assertEquals((-1L), long1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dType0).toString();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      DType dType2 = new DType(shape0, (String) null, dType1);
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dValue0).toString();
      doReturn(3370L).when(dValue0).asLong();
      doReturn(dType2, dType1).when(dValue0).getType();
      DValueProxy dValueProxy1 = new DValueProxy(dValue0);
      dValueProxy1.getType();
      long long0 = dValueProxy1.asLong();
      assertEquals(3370L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Shape shape0 = Shape.DATE;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn("LIST", "STRUCT", "STRUCT").when(dValue0).toString();
      doReturn(2809).when(dValue0).asInt();
      doReturn("").when(dValue0).asString();
      doReturn(dType0, dType0).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      DType dType1 = dValueProxy0.getType();
      DType dType2 = new DType(shape0, "STRUCT", dType1);
      dType2.getRules();
      DValueImpl dValueImpl0 = new DValueImpl(dType2, (Object) null);
      dValueImpl0.getType();
      dValueProxy0.setFutureValue(false);
      dValueProxy0.asString();
      dValueProxy0.asInt();
      Map<String, DValue> map0 = dValueImpl0.asMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dType0).toString();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      DType dType2 = new DType(shape0, (String) null, dType1);
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dValue0).toString();
      doReturn(0L).when(dValue0).asLong();
      doReturn(dType2, dType1).when(dValue0).getType();
      DValueProxy dValueProxy1 = new DValueProxy(dValue0);
      dValueProxy1.getType();
      long long0 = dValueProxy1.asLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, "$$qRRjTL}5Z;nmUj1U");
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.getType();
      HashMap<String, DValue> hashMap0 = new HashMap<String, DValue>();
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn("$$qRRjTL}5Z;nmUj1U", "j`OprJ]F\u0005cb[sMp4", "ENUM", "Jd/Pm:{X),%k?4xhkHo", "j`OprJ]F\u0005cb[sMp4").when(dValue0).toString();
      doReturn(true).when(dValue0).asBoolean();
      doReturn(0, 0).when(dValue0).asInt();
      doReturn(hashMap0, hashMap0).when(dValue0).asMap();
      doReturn((DType) null, (DType) null, (DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy1 = new DValueProxy(dValue0);
      dValueProxy1.getType();
      DValueProxy dValueProxy2 = new DValueProxy(dValueProxy1);
      dValueProxy1.setFutureValue(false);
      MockDate mockDate0 = new MockDate((-105), 10, 3749, 0, 10, 10);
      MockDate mockDate1 = new MockDate(0, (-313), (-105), (-313), 3749, 1319);
      Object object0 = new Object();
      dValueProxy1.setPersistenceId(object0);
      MockDate mockDate2 = new MockDate(2051L);
      Object object1 = new Object();
      dValueProxy1.setPersistenceId(object1);
      DValueProxy dValueProxy3 = new DValueProxy(dValueProxy2);
      dValueProxy3.asInt();
      dValueProxy3.asInt();
      dValueProxy1.asBoolean();
      dValueProxy3.asMap();
      Object object2 = new Object();
      dValueProxy3.setPersistenceId(dValueProxy1);
      Map<String, DValue> map0 = dValueProxy3.asMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Shape shape0 = Shape.STRUCT;
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dValue0).toString();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      DType dType0 = new DType(shape0, "org.dnal.core.DValueProxy", (DType) null);
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dValueProxy0);
      dValueImpl0.getType();
      // Undeclared exception!
      try { 
        dValueImpl0.asList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DValueProxy cannot be cast to class java.util.List (org.dnal.core.DValueProxy is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d; java.util.List is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Shape shape0 = Shape.ANY;
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dValue0).toString();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      DType dType0 = new DType(shape0, "NUMBER", (DType) null);
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, object0);
      DType dType1 = dValueImpl0.getType();
      assertFalse(dType1.isMapShape());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject((Object) null);
      dValueProxy0.forceObject((Object) null);
      dValueImpl0.asList();
      // Undeclared exception!
      try { 
        dValueProxy0.isValid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Shape shape0 = Shape.DATE;
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(dValue0).toString();
      doReturn(0).when(dValue0).asInt();
      doReturn((String) null).when(dValue0).asString();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      DType dType0 = new DType(shape0, "STRUCT", (DType) null);
      dType0.getRules();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, (Object) null);
      dValueImpl0.getType();
      dValueProxy0.setFutureValue(false);
      dValueProxy0.asString();
      dValueProxy0.asInt();
      Map<String, DValue> map0 = dValueImpl0.asMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DType dType0 = null;
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject((Object) null);
      ValidationState validationState0 = ValidationState.UNKNOWN;
      // Undeclared exception!
      try { 
        dValueProxy0.changeValidState(validationState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Object object0 = new Object();
      dValueImpl0.setPersistenceId(object0);
      MockDate mockDate0 = new MockDate(1264L);
      mockDate0.toInstant();
      DValueImpl dValueImpl1 = new DValueImpl((DType) null, mockDate0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl1);
      dValueProxy0.asDate();
      // Undeclared exception!
      try { 
        dValueImpl0.asBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      dValueImpl0.forceObject((Object) null);
      ValidationState validationState0 = ValidationState.VALID;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.isValid();
      dValueImpl0.getValState();
      // Undeclared exception!
      try { 
        dValueImpl0.asInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, thaiBuddhistDate0);
      // Undeclared exception!
      try { 
        dValueImpl0.asLong();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.time.chrono.ThaiBuddhistDate cannot be cast to class java.lang.Long (java.time.chrono.ThaiBuddhistDate and java.lang.Long are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Shape shape0 = Shape.LIST;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dType0).toString();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, "");
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      DType dType2 = new DType(shape0, "", dType1);
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(dValue0).toString();
      doReturn((DStructHelper) null).when(dValue0).asStruct();
      doReturn(dType2, dType2, dType1, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy1 = new DValueProxy(dValue0);
      DType dType3 = dValueProxy1.getType();
      dValueProxy1.forceType(dType3);
      DType dType4 = dValueProxy1.getType();
      DValueImpl dValueImpl1 = new DValueImpl(dType4, dType4);
      dValueProxy1.asStruct();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      dValueImpl1.setPersistenceId(object2);
      DValueProxy dValueProxy2 = new DValueProxy(dValueProxy1);
      // Undeclared exception!
      try { 
        dValueImpl1.asMap();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DType$MockitoMock$1807878418 cannot be cast to class java.util.Map (org.dnal.core.DType$MockitoMock$1807878418 is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d; java.util.Map is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      Object object0 = new Object();
      dValueProxy0.forceObject(object0);
      // Undeclared exception!
      try { 
        dValueProxy0.getValState();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      // Undeclared exception!
      try { 
        dValueImpl0.asMap();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.util.Map (java.lang.Object and java.util.Map are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DType dType0 = null;
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DStructHelper dStructHelper0 = dValueProxy0.asStruct();
      dValueProxy0.setPersistenceId(dValueImpl0);
      dValueProxy0.setPersistenceId(dValueImpl0);
      dValueProxy0.forceObject(dStructHelper0);
      ValidationState validationState0 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.asList();
      // Undeclared exception!
      try { 
        dValueProxy0.isValid();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, "$$qRRjTL}5Z;nmUj1U");
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.getType();
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn("$$qRRjTL}5Z;nmUj1U", "j`OprJ]F\u0005cb[sMp4", (String) null, (String) null, (String) null).when(dValue0).toString();
      doReturn(false).when(dValue0).asBoolean();
      doReturn(0, 0).when(dValue0).asInt();
      doReturn((Map) null, (Map) null).when(dValue0).asMap();
      doReturn((DType) null, (DType) null, (DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy1 = new DValueProxy(dValue0);
      dValueProxy1.getType();
      DValueProxy dValueProxy2 = new DValueProxy(dValueProxy1);
      dValueProxy1.setFutureValue(false);
      MockDate mockDate0 = new MockDate((-105), 10, 3749, 0, 10, 10);
      MockDate mockDate1 = new MockDate(0, (-313), (-105), (-313), 3749, 1319);
      Object object0 = new Object();
      dValueProxy1.setPersistenceId(object0);
      MockDate mockDate2 = new MockDate(2051L);
      Object object1 = new Object();
      dValueProxy1.setPersistenceId(object1);
      DValueProxy dValueProxy3 = new DValueProxy(dValueProxy2);
      dValueProxy3.asInt();
      dValueProxy3.asInt();
      dValueProxy1.asBoolean();
      Map<String, DValue> map0 = dValueProxy3.asMap();
      Object object2 = new Object();
      dValueProxy3.setPersistenceId(dValueProxy1);
      Map<String, DValue> map1 = dValueProxy3.asMap();
      assertTrue(map1.equals((Object)map0));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(dValue0).toString();
      doReturn((List) null).when(dValue0).asList();
      doReturn((String) null).when(dValue0).asString();
      doReturn((DType) null, (DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      dValueProxy0.forceType((DType) null);
      dValueProxy0.getType();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Object object0 = new Object();
      dValueImpl0.setPersistenceId(object0);
      dValueImpl0.asMap();
      dValueImpl0.isValid();
      dValueProxy0.asString();
      List<DValue> list0 = dValueProxy0.asList();
      assertFalse(list0.contains(dValue0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.setPersistenceId((Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.setFutureValue(false);
      dValueProxy0.getType();
      dValueProxy0.setPersistenceId((Object) null);
      dValueImpl0.setPersistenceId((Object) null);
      ValidationState validationState0 = dValueProxy0.getValState();
      assertEquals(ValidationState.UNKNOWN, validationState0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Object object0 = new Object();
      dValueImpl0.setPersistenceId(object0);
      dValueImpl0.forceObject((Object) null);
      ValidationState validationState0 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.asList();
      dValueImpl0.isValid();
      // Undeclared exception!
      try { 
        dValueImpl0.asLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      // Undeclared exception!
      try { 
        dValueImpl0.asLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      Object object1 = new Object();
      dValueProxy0.setPersistenceId(object1);
      dValueProxy0.forceObject((Object) null);
      // Undeclared exception!
      try { 
        dValueProxy0.asList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      // Undeclared exception!
      try { 
        dValueImpl0.asList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.util.List (java.lang.Object and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Long long0 = new Long(0L);
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, long0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      Object object0 = new Object();
      dValueProxy0.forceObject(object0);
      ValidationState validationState0 = ValidationState.INVALID;
      // Undeclared exception!
      try { 
        dValueProxy0.changeValidState(validationState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class org.dnal.core.DValueImpl (java.lang.Object is in module java.base of loader 'bootstrap'; org.dnal.core.DValueImpl is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dValue0).toString();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      DValue dValue1 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn("org.dnal.core.DValueImpl", "org.dnal.core.DValueImpl", (String) null, (String) null).when(dValue1).toString();
      doReturn((List) null).when(dValue1).asList();
      doReturn((DType) null, (DType) null).when(dValue1).getType();
      doReturn((ValidationState) null).when(dValue1).getValState();
      doReturn(false).when(dValue1).isValid();
      DValueProxy dValueProxy1 = new DValueProxy(dValue1);
      dValueProxy1.getType();
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      Object object1 = new Object();
      ValidationState validationState0 = ValidationState.VALID;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.setPersistenceId((Object) null);
      dValueImpl0.forceObject((Object) null);
      ValidationState validationState1 = ValidationState.INVALID;
      dValueImpl0.changeValidState(validationState1);
      dValueProxy1.asList();
      dValueProxy1.isValid();
      dValueProxy1.getValState();
      // Undeclared exception!
      try { 
        dValueImpl0.asNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Object object0 = new Object();
      DValueImpl dValueImpl1 = new DValueImpl((DType) null, object0);
      dValueImpl1.asString();
      // Undeclared exception!
      try { 
        dValueImpl1.asInt();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Long (java.lang.Object and java.lang.Long are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Object object0 = new Object();
      ValidationState validationState0 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.setPersistenceId(object0);
      dValueImpl0.forceObject((Object) null);
      ValidationState validationState1 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState1);
      dValueImpl0.asList();
      // Undeclared exception!
      try { 
        dValueImpl0.asBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Map<String, DValue> map0 = dValueImpl0.asMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      ValidationState validationState0 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.changeValidState(validationState0);
      Object object0 = new Object();
      dValueImpl0.setPersistenceId(object0);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.getValState();
      dValueImpl0.getValState();
      dValueImpl0.asDate();
      ValidationState validationState1 = ValidationState.INVALID;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.changeValidState(validationState1);
      dValueImpl0.asStruct();
      dValueImpl0.getValState();
      dValueImpl0.asMap();
      // Undeclared exception!
      try { 
        dValueImpl0.asNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DStructHelper dStructHelper0 = dValueProxy0.asStruct();
      dValueProxy0.setPersistenceId(dValueImpl0);
      dValueProxy0.setPersistenceId(dValueImpl0);
      dValueImpl0.asStruct();
      ValidationState validationState0 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState0);
      DValueProxy dValueProxy1 = new DValueProxy(dValueImpl0);
      dValueProxy1.forceType((DType) null);
      dValueProxy1.getObject();
      dValueProxy0.setPersistenceId((Object) null);
      dValueProxy0.setPersistenceId(dValueProxy1);
      DStructHelper dStructHelper1 = dValueProxy1.asStruct();
      assertFalse(dStructHelper1.equals((Object)dStructHelper0));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      // Undeclared exception!
      try { 
        dValueImpl0.asInt();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Long (java.lang.Object and java.lang.Long are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DType dType0 = null;
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      ValidationState validationState0 = ValidationState.INVALID;
      dValueImpl0.asStruct();
      dValueImpl0.setPersistenceId(validationState0);
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.forceObject(validationState0);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.getValState();
      dValueImpl0.getPersistenceId();
      // Undeclared exception!
      try { 
        ValidationState.valueOf("INTEGER");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.dnal.core.ValidationState.INTEGER
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      // Undeclared exception!
      try { 
        dValueImpl0.asInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.asStruct();
      dValueProxy0.setPersistenceId(dValueImpl0);
      dValueProxy0.setPersistenceId(dValueImpl0);
      dValueImpl0.asStruct();
      dValueProxy0.setFutureValue(false);
      MockDate mockDate0 = new MockDate((-3731), (-3731), 142, 4339, (-1240), 0);
      dValueProxy0.setPersistenceId(mockDate0);
      dValueImpl0.setPersistenceId(mockDate0);
      // Undeclared exception!
      try { 
        dValueImpl0.asInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Shape shape0 = Shape.NUMBER;
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dValue0).toString();
      doReturn((DType) null, (DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      dValueProxy0.getType();
      DType dType0 = new DType(shape0, "org.dnal.core.DValueImpl", (DType) null);
      DValueImpl dValueImpl0 = new DValueImpl(dType0, (Object) null);
      Date date0 = dValueImpl0.asDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      // Undeclared exception!
      try { 
        dValueImpl0.asNumber();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Double (java.lang.Object and java.lang.Double are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      Object object1 = new Object();
      dValueImpl0.forceObject(object1);
      Object object2 = new Object();
      dValueImpl0.setPersistenceId(object2);
      dValueImpl0.getObject();
      // Undeclared exception!
      try { 
        dValueImpl0.asNumber();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Double (java.lang.Object and java.lang.Double are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      // Undeclared exception!
      try { 
        dValueImpl0.asBoolean();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Boolean (java.lang.Object and java.lang.Boolean are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      ValidationState validationState0 = ValidationState.INVALID;
      dValueImpl0.forceObject(object0);
      dValueImpl0.forceObject(object0);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.asStruct();
      dValueImpl0.forceType((DType) null);
      Object object1 = new Object();
      dValueImpl0.forceObject(object1);
      dValueImpl0.asStruct();
      dValueImpl0.forceObject((Object) null);
      dValueImpl0.setPersistenceId(validationState0);
      dValueImpl0.setPersistenceId(validationState0);
      dValueImpl0.forceObject(validationState0);
      dValueImpl0.changeValidState(validationState0);
      // Undeclared exception!
      try { 
        dValueImpl0.asBoolean();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.ValidationState cannot be cast to class java.lang.Boolean (org.dnal.core.ValidationState is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d; java.lang.Boolean is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      // Undeclared exception!
      try { 
        dValueImpl0.asBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DType dType0 = null;
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      dValueImpl0.forceType((DType) null);
      dValueImpl0.setPersistenceId((Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject((Object) null);
      dValueProxy0.setFutureValue(false);
      // Undeclared exception!
      try { 
        dValueProxy0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DType dType0 = null;
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      // Undeclared exception!
      try { 
        dValueImpl0.asDate();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.util.Date (java.lang.Object and java.util.Date are in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Shape shape0 = Shape.NUMBER;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DType dType1 = new DType(shape0, "BhNi;jd]&Qr1", dType0);
      DValueImpl dValueImpl0 = new DValueImpl(dType1, shape0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType2 = dValueProxy0.getType();
      dValueImpl0.asStruct();
      dValueProxy0.asStruct();
      Object object0 = new Object();
      DValueImpl dValueImpl1 = new DValueImpl(dType2, object0);
      dValueImpl1.setPersistenceId(dValueImpl0);
      dValueProxy0.setPersistenceId(shape0);
      // Undeclared exception!
      try { 
        dValueImpl0.asDate();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.Shape cannot be cast to class java.util.Date (org.dnal.core.Shape is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5ce8a07d; java.util.Date is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Date date0 = dValueImpl0.asDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      // Undeclared exception!
      try { 
        dValueImpl0.asString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      dValueImpl0.forceType((DType) null);
      assertEquals(ValidationState.UNKNOWN, dValueImpl0.getValState());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Shape shape0 = Shape.BOOLEAN;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dType0).toString();
      doReturn(false).when(dType0).isScalarShape();
      doReturn(false, false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      DValueImpl dValueImpl0 = new DValueImpl(dType0, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      Shape shape1 = Shape.ANY;
      Shape shape2 = Shape.ANY;
      dType1.isShape(shape2);
      dType1.isShape(shape1);
      dType1.isScalarShape();
      dValueProxy0.asStruct();
      DType dType2 = new DType(shape0, "org.dnal.core.DValueImpl", dType1);
      Object object0 = new Object();
      DValueImpl dValueImpl1 = new DValueImpl(dType2, object0);
      dValueImpl0.forceType(dType2);
      // Undeclared exception!
      try { 
        dValueProxy0.asString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2744L);
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, mockDate0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject(mockDate0);
      // Undeclared exception!
      try { 
        dValueProxy0.asString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      DType dType0 = new DType(shape0, (String) null, (DType) null);
      DValueImpl dValueImpl0 = new DValueImpl(dType0, shape0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.getPersistenceId();
      DStructHelper dStructHelper0 = dValueProxy0.asStruct();
      DValueImpl dValueImpl1 = new DValueImpl((DType) null, dStructHelper0);
      DValueImpl dValueImpl2 = new DValueImpl(dType0, (Object) null);
      // Undeclared exception!
      try { 
        dValueImpl2.asString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      Date date0 = dValueProxy0.asDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DStructHelper dStructHelper0 = dValueImpl0.asStruct();
      assertNotNull(dStructHelper0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      String string0 = null;
      DType dType0 = new DType(shape0, (String) null, (DType) null);
      DValueImpl dValueImpl0 = new DValueImpl(dType0, shape0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.getPersistenceId();
      dValueProxy0.asStruct();
      ValidationState validationState0 = ValidationState.UNKNOWN;
      Object object0 = new Object();
      dValueProxy0.forceObject(object0);
      dValueImpl0.changeValidState(validationState0);
      // Undeclared exception!
      try { 
        dValueProxy0.asString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      ValidationState validationState0 = ValidationState.VALID;
      dValueImpl0.changeValidState(validationState0);
      assertEquals(ValidationState.VALID, dValueImpl0.getValState());
      
      dValueImpl0.asList();
      dValueImpl0.isValid();
      dValueImpl0.getValState();
      // Undeclared exception!
      try { 
        dValueImpl0.asInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      dValueImpl0.setPersistenceId((Object) null);
      assertEquals(ValidationState.UNKNOWN, dValueImpl0.getValState());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      ValidationState validationState0 = dValueImpl0.getValState();
      assertEquals(ValidationState.UNKNOWN, validationState0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      List<DValue> list0 = dValueImpl0.asList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      // Undeclared exception!
      try { 
        dValueImpl0.asNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      dValueImpl0.forceObject((Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      assertEquals(ValidationState.UNKNOWN, dValueProxy0.getValState());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      boolean boolean0 = dValueImpl0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, (Object) null);
      Object object0 = new Object();
      ValidationState validationState0 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState0);
      dValueImpl0.setPersistenceId(object0);
      dValueImpl0.forceObject((Object) null);
      ValidationState validationState1 = ValidationState.UNKNOWN;
      dValueImpl0.changeValidState(validationState1);
      dValueImpl0.asList();
      dValueImpl0.isValid();
      dValueImpl0.getValState();
      // Undeclared exception!
      try { 
        dValueImpl0.asNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }
}
