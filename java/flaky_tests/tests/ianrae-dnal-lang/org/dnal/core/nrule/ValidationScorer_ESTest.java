/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:32:59 GMT 2022
 */

package org.dnal.core.nrule;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dnal.core.DType;
import org.dnal.core.DValue;
import org.dnal.core.DValueImpl;
import org.dnal.core.DValueProxy;
import org.dnal.core.Shape;
import org.dnal.core.ValidationState;
import org.dnal.core.nrule.ValidationScorer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidationScorer_ESTest extends ValidationScorer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      validationScorer0.count = 2537;
      int int0 = validationScorer0.getUnknownCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      validationScorer0.count = 2537;
      int int0 = validationScorer0.getInvalidCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      validationScorer0.count = 2537;
      int int0 = validationScorer0.getValidCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, dValueProxy0);
      ValidationState validationState0 = ValidationState.INVALID;
      dValueImpl0.changeValidState(validationState0);
      validationScorer0.score(dValueImpl0);
      boolean boolean0 = validationScorer0.someUnknown();
      assertTrue(validationScorer0.someInvalid());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      validationScorer0.count = 2537;
      boolean boolean0 = validationScorer0.someInvalid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      assertTrue(validationScorer0.allValid());
      
      validationScorer0.count = (-1881);
      boolean boolean0 = validationScorer0.allValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      validationScorer0.score(dValueImpl0);
      int int0 = validationScorer0.getUnknownCount();
      assertTrue(validationScorer0.someUnknown());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      ValidationState validationState0 = ValidationState.INVALID;
      dValueImpl0.changeValidState(validationState0);
      validationScorer0.score(dValueProxy0);
      int int0 = validationScorer0.getInvalidCount();
      assertTrue(validationScorer0.someInvalid());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      validationScorer0.count = 2537;
      int int0 = validationScorer0.getCount();
      assertEquals(2537, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      validationScorer0.count = (-259);
      int int0 = validationScorer0.getCount();
      assertEquals((-259), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      Shape shape0 = Shape.NUMBER;
      DType dType0 = new DType(shape0, "@j#Im[8I6^{", (DType) null);
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, object0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject(dValueProxy0);
      // Undeclared exception!
      try { 
        validationScorer0.score(dValueProxy0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      // Undeclared exception!
      try { 
        validationScorer0.score((DValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.nrule.ValidationScorer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, validationScorer0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject(validationScorer0);
      // Undeclared exception!
      try { 
        validationScorer0.score(dValueProxy0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.nrule.ValidationScorer cannot be cast to class org.dnal.core.DValue (org.dnal.core.nrule.ValidationScorer and org.dnal.core.DValue are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @4503f14e)
         //
         verifyException("org.dnal.core.DValueProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      validationScorer0.score(dValueImpl0);
      boolean boolean0 = validationScorer0.someUnknown();
      assertEquals(1, validationScorer0.count);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      boolean boolean0 = validationScorer0.allValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, dValueProxy0);
      ValidationState validationState0 = ValidationState.INVALID;
      dValueImpl0.changeValidState(validationState0);
      validationScorer0.score(dValueImpl0);
      boolean boolean0 = validationScorer0.someInvalid();
      assertEquals(1, validationScorer0.count);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      DValue dValue0 = mock(DValue.class, new ViolatedAssumptionAnswer());
      doReturn((DType) null).when(dValue0).getType();
      DValueProxy dValueProxy0 = new DValueProxy(dValue0);
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, dValueProxy0);
      validationScorer0.score(dValueImpl0);
      boolean boolean0 = validationScorer0.allValid();
      assertEquals(1, validationScorer0.getUnknownCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      ValidationState validationState0 = ValidationState.VALID;
      dValueProxy0.changeValidState(validationState0);
      validationScorer0.score(dValueProxy0);
      int int0 = validationScorer0.getValidCount();
      assertEquals(1, validationScorer0.count);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValidationScorer validationScorer0 = new ValidationScorer();
      int int0 = validationScorer0.getCount();
      assertEquals(0, int0);
  }
}
