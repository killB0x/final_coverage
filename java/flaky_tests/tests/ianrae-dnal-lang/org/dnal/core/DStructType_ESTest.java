/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:50:25 GMT 2022
 */

package org.dnal.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.dnal.core.DStructType;
import org.dnal.core.DType;
import org.dnal.core.OrderedMap;
import org.dnal.core.Shape;
import org.dnal.core.TypePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DStructType_ESTest extends DStructType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Shape shape0 = Shape.DATE;
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "M0`mU4Y%zR~>", (DType) null, orderedMap0);
      DStructType dStructType1 = new DStructType(shape0, "eWo", dStructType0, orderedMap0);
      orderedMap0.add("2kI;W)PLKTRkz5cP", dStructType0, false, false);
      DStructType dStructType2 = new DStructType(shape0, "eWo", dStructType1, orderedMap0);
      List<TypePair> list0 = dStructType2.getAllFields();
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OrderedMap orderedMap0 = new OrderedMap();
      orderedMap0.orderedList = null;
      Shape shape0 = Shape.NUMBER;
      DStructType dStructType0 = new DStructType(shape0, "s(m#k=g", (DType) null, orderedMap0);
      List<String> list0 = dStructType0.orderedList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "org.dnal.core.DType$1", (DType) null, orderedMap0);
      orderedMap0.add("org.dnal.core.DType$1", dStructType0, true, true);
      List<String> list0 = dStructType0.orderedList();
      assertTrue(list0.contains("org.dnal.core.DType$1"));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OrderedMap orderedMap0 = new OrderedMap();
      Shape shape0 = Shape.NUMBER;
      orderedMap0.map = null;
      DStructType dStructType0 = new DStructType(shape0, "4-y*4njKD^j#9G4WT", (DType) null, orderedMap0);
      Map<String, DType> map0 = dStructType0.getFields();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Shape shape0 = Shape.STRING;
      OrderedMap orderedMap0 = new OrderedMap();
      HashMap<String, DType> hashMap0 = new HashMap<String, DType>();
      orderedMap0.map = (Map<String, DType>) hashMap0;
      DStructType dStructType0 = new DStructType(shape0, "*,FEznrZNr_52U&Ccaj", (DType) null, orderedMap0);
      Map<String, DType> map0 = dStructType0.getFields();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "org.dnal.core.DType$1", (DType) null, orderedMap0);
      orderedMap0.add("org.dnal.core.DType$1", dStructType0, true, true);
      HashMap<String, DType> hashMap0 = new HashMap<String, DType>(orderedMap0.map);
      orderedMap0.map = (Map<String, DType>) hashMap0;
      Map<String, DType> map0 = dStructType0.getFields();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Shape shape0 = Shape.BOOLEAN;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DType dType1 = new DType(shape0, "7", dType0);
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "7", dType1, orderedMap0);
      orderedMap0.add("7", dType1, true, true);
      boolean boolean0 = dStructType0.fieldIsUnique("7");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Shape shape0 = Shape.STRING;
      OrderedMap orderedMap0 = new OrderedMap();
      orderedMap0.add("Z<]m.T(r9!~^vv0J!J~", (DType) null, true, false);
      DStructType dStructType0 = new DStructType(shape0, "qO@6!H\"i#+8pM", (DType) null, orderedMap0);
      boolean boolean0 = dStructType0.fieldIsOptional("Z<]m.T(r9!~^vv0J!J~");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DStructType dStructType0 = new DStructType(shape0, "B(", (DType) null, (OrderedMap) null);
      // Undeclared exception!
      try { 
        dStructType0.orderedList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DStructType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      DStructType dStructType0 = new DStructType(shape0, "", (DType) null, (OrderedMap) null);
      // Undeclared exception!
      try { 
        dStructType0.getFields();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DStructType", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Shape shape0 = Shape.MAP;
      DStructType dStructType0 = new DStructType(shape0, "M0`mU4Y%zR~>", (DType) null, (OrderedMap) null);
      // Undeclared exception!
      try { 
        dStructType0.getAllFields();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DStructType", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Shape shape0 = Shape.BOOLEAN;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DType dType1 = new DType(shape0, "7", dType0);
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "7", dType1, orderedMap0);
      // Undeclared exception!
      try { 
        dStructType0.getAllFields();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DType cannot be cast to class org.dnal.core.DStructType (org.dnal.core.DType and org.dnal.core.DStructType are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7e036ddc)
         //
         verifyException("org.dnal.core.DStructType", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DStructType dStructType0 = new DStructType(shape0, (String) null, (DType) null, (OrderedMap) null);
      // Undeclared exception!
      try { 
        dStructType0.fieldIsUnique((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DStructType", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Shape shape0 = Shape.INTEGER;
      DStructType dStructType0 = new DStructType(shape0, (String) null, (DType) null, (OrderedMap) null);
      // Undeclared exception!
      try { 
        dStructType0.fieldIsOptional((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.DStructType", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Shape shape0 = Shape.DATE;
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "M0`mU4Y%zR~>", (DType) null, orderedMap0);
      DStructType dStructType1 = new DStructType(shape0, "eWo", dStructType0, orderedMap0);
      DStructType dStructType2 = new DStructType(shape0, "M0`mU4Y%zR~>", dStructType1, orderedMap0);
      List<TypePair> list0 = dStructType2.getAllFields();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "org.dnal.core.DType$1", (DType) null, orderedMap0);
      List<String> list0 = dStructType0.orderedList();
      assertFalse(list0.contains("org.dnal.core.DType$1"));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OrderedMap orderedMap0 = new OrderedMap();
      Shape shape0 = Shape.MAP;
      DStructType dStructType0 = new DStructType(shape0, "org.dnal.core.DStructType", (DType) null, orderedMap0);
      dStructType0.getAllFields();
      List<TypePair> list0 = dStructType0.getAllFields();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Shape shape0 = Shape.ENUM;
      OrderedMap orderedMap0 = new OrderedMap();
      DStructType dStructType0 = new DStructType(shape0, "?B|5gM'poMg", (DType) null, orderedMap0);
      boolean boolean0 = dStructType0.fieldIsOptional("?B|5gM'poMg");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OrderedMap orderedMap0 = new OrderedMap();
      Shape shape0 = Shape.LIST;
      DStructType dStructType0 = new DStructType(shape0, (String) null, (DType) null, orderedMap0);
      boolean boolean0 = dStructType0.fieldIsUnique((String) null);
      assertFalse(boolean0);
  }
}
