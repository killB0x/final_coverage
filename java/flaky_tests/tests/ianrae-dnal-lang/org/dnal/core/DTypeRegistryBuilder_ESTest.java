/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:42:15 GMT 2022
 */

package org.dnal.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dnal.core.DTypeRegistry;
import org.dnal.core.DTypeRegistryBuilder;
import org.dnal.core.repository.MockRepositoryFactory;
import org.dnal.core.repository.World;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DTypeRegistryBuilder_ESTest extends DTypeRegistryBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DTypeRegistryBuilder dTypeRegistryBuilder0 = new DTypeRegistryBuilder();
      World world0 = new World();
      MockRepositoryFactory mockRepositoryFactory0 = new MockRepositoryFactory();
      world0.setRepositoryFactory(mockRepositoryFactory0);
      dTypeRegistryBuilder0.init(world0);
      DTypeRegistry dTypeRegistry0 = dTypeRegistryBuilder0.getRegistry();
      assertEquals(10, dTypeRegistry0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DTypeRegistryBuilder dTypeRegistryBuilder0 = new DTypeRegistryBuilder();
      DTypeRegistry dTypeRegistry0 = dTypeRegistryBuilder0.getRegistry();
      assertEquals(0, dTypeRegistry0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DTypeRegistryBuilder dTypeRegistryBuilder0 = new DTypeRegistryBuilder();
      World world0 = new World();
      // Undeclared exception!
      try { 
        dTypeRegistryBuilder0.init(world0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.core.repository.World", e);
      }
  }
}
