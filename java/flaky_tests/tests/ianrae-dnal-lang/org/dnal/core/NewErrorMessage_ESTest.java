/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:50:20 GMT 2022
 */

package org.dnal.core;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dnal.core.NewErrorMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NewErrorMessage_ESTest extends NewErrorMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setVarName("jgZEl*237&G4`39dyF");
      String string0 = newErrorMessage0.getVarName();
      assertEquals("jgZEl*237&G4`39dyF", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setVarName("");
      String string0 = newErrorMessage0.getVarName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setTypeName("S&3j)WmSQs.4_1");
      String string0 = newErrorMessage0.getTypeName();
      assertEquals("S&3j)WmSQs.4_1", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setSrcFile("");
      String string0 = newErrorMessage0.getSrcFile();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setMessage("4h39:+");
      String string0 = newErrorMessage0.getMessage();
      assertEquals("4h39:+", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setMessage("");
      String string0 = newErrorMessage0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setListIndex(1);
      int int0 = newErrorMessage0.getListIndex();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setListIndex((-678));
      int int0 = newErrorMessage0.getListIndex();
      assertEquals((-678), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setLineNum(370);
      int int0 = newErrorMessage0.getLineNum();
      assertEquals(370, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setLineNum((-59));
      int int0 = newErrorMessage0.getLineNum();
      assertEquals((-59), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setFieldName("VALIDATION_ERROR");
      String string0 = newErrorMessage0.getFieldName();
      assertEquals("VALIDATION_ERROR", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setErrorName("");
      String string0 = newErrorMessage0.getErrorName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setActualValue("P'$Cs`>");
      String string0 = newErrorMessage0.getActualValue();
      assertEquals("P'$Cs`>", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setActualValue("");
      String string0 = newErrorMessage0.getActualValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      int int0 = newErrorMessage0.getLineNum();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      int int0 = newErrorMessage0.getListIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setFieldName("");
      String string0 = newErrorMessage0.getFieldName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      String string0 = newErrorMessage0.getVarName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setTypeName("");
      String string0 = newErrorMessage0.getTypeName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setErrorName("VALIDATION_ERROR");
      String string0 = newErrorMessage0.getErrorName();
      assertEquals("VALIDATION_ERROR", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      String string0 = newErrorMessage0.getErrorName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      NewErrorMessage.Type newErrorMessage_Type0 = newErrorMessage0.getErrorType();
      assertEquals(NewErrorMessage.Type.IO_ERROR, newErrorMessage_Type0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      newErrorMessage0.setSrcFile("*s=Eu E8.ZBz'LZ23N");
      String string0 = newErrorMessage0.getSrcFile();
      assertEquals("*s=Eu E8.ZBz'LZ23N", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      NewErrorMessage.Type newErrorMessage_Type0 = NewErrorMessage.Type.VALIDATION_ERROR;
      newErrorMessage0.setErrorType(newErrorMessage_Type0);
      assertNull(newErrorMessage0.getActualValue());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      String string0 = newErrorMessage0.getActualValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      String string0 = newErrorMessage0.getFieldName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      String string0 = newErrorMessage0.getTypeName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      String string0 = newErrorMessage0.getSrcFile();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NewErrorMessage newErrorMessage0 = new NewErrorMessage();
      String string0 = newErrorMessage0.getMessage();
      assertNull(string0);
  }
}
