/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:29:47 GMT 2022
 */

package org.dnal.api.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dnal.api.impl.AddObserver;
import org.dnal.core.DType;
import org.dnal.core.DValueImpl;
import org.dnal.core.DValueProxy;
import org.dnal.core.Shape;
import org.dnal.core.ValidationState;
import org.dnal.core.repository.World;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AddObserver_ESTest extends AddObserver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      World world0 = new World();
      AddObserver addObserver0 = new AddObserver(world0);
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isScalarShape();
      doReturn(false, false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      doReturn(false).when(dType0).isStructShape();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, (Object) null);
      addObserver0.observe(dValueImpl0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      World world0 = new World();
      Object object0 = new Object();
      DValueImpl dValueImpl0 = new DValueImpl((DType) null, object0);
      AddObserver addObserver0 = new AddObserver(world0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      dValueProxy0.forceObject(dValueProxy0);
      // Undeclared exception!
      try { 
        addObserver0.observe(dValueProxy0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      World world0 = new World();
      AddObserver addObserver0 = new AddObserver(world0);
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isScalarShape();
      doReturn(false, false).when(dType0).isShape(any(org.dnal.core.Shape.class));
      doReturn(false).when(dType0).isStructShape();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      addObserver0.observe(dValueProxy0);
      assertEquals(ValidationState.UNKNOWN, dValueProxy0.getValState());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      World world0 = new World();
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dType0).isScalarShape();
      doReturn(true).when(dType0).isShape(any(org.dnal.core.Shape.class));
      doReturn(false).when(dType0).isStructShape();
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      AddObserver addObserver0 = new AddObserver(world0);
      // Undeclared exception!
      try { 
        addObserver0.observe(dValueImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DType$MockitoMock$1806958076 cannot be cast to class java.util.Map (org.dnal.core.DType$MockitoMock$1806958076 is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @413c78f4; java.util.Map is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      World world0 = new World();
      Shape shape0 = Shape.STRUCT;
      DType dType0 = new DType(shape0, "org.dnal.core.DStructType", (DType) null);
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      AddObserver addObserver0 = new AddObserver(world0);
      // Undeclared exception!
      try { 
        addObserver0.observe(dValueImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.dnal.core.DType cannot be cast to class java.util.Map (org.dnal.core.DType is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @413c78f4; java.util.Map is in module java.base of loader 'bootstrap')
         //
         verifyException("org.dnal.core.DValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      World world0 = new World();
      AddObserver addObserver0 = new AddObserver(world0);
      Shape shape0 = Shape.ANY;
      DType dType0 = mock(DType.class, new ViolatedAssumptionAnswer());
      DValueImpl dValueImpl0 = new DValueImpl(dType0, dType0);
      DValueProxy dValueProxy0 = new DValueProxy(dValueImpl0);
      DType dType1 = dValueProxy0.getType();
      DType dType2 = new DType(shape0, (String) null, dType1);
      DValueImpl dValueImpl1 = new DValueImpl(dType2, addObserver0);
      addObserver0.observe(dValueImpl1);
      assertEquals(ValidationState.UNKNOWN, dValueImpl1.getValState());
  }
}
