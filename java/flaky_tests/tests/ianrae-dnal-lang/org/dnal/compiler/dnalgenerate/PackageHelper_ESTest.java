/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:37:00 GMT 2022
 */

package org.dnal.compiler.dnalgenerate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dnal.compiler.dnalgenerate.PackageHelper;
import org.dnal.core.DType;
import org.dnal.core.DTypeRegistry;
import org.dnal.core.Shape;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PackageHelper_ESTest extends PackageHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "");
      String string0 = packageHelper0.getPackageName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      Shape shape0 = Shape.STRUCT;
      DType dType0 = new DType(shape0, "DqAC@dobo,b.O\"(", (DType) null);
      dTypeRegistry0.add("DqAC@dobo,b.O\"(", dType0);
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "org.dnal.compiler.dnalgenerate.PackageHelper");
      DType dType1 = packageHelper0.findRegisteredType("DqAC@dobo,b.O\"(");
      assertFalse(dType1.isMapShape());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      Shape shape0 = Shape.LIST;
      DType dType0 = new DType(shape0, "", (DType) null);
      dTypeRegistry0.add("Qs*R8FH%$2K", dType0);
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "3v0>mOTl");
      DType dType1 = packageHelper0.findRegisteredType("Qs*R8FH%$2K");
      assertTrue(dType1.isListShape());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "org.dnal.compiler.dnalgenerate.PackageHelper");
      Shape shape0 = Shape.ANY;
      DType dType0 = new DType(shape0, "org.dnal.compiler.dnalgenerate.PackageHelper", (DType) null);
      packageHelper0.registerType("org.dnal.compiler.dnalgenerate.PackageHelper", dType0);
      DType dType1 = packageHelper0.findRegisteredType("org.dnal.compiler.dnalgenerate.PackageHelper");
      assertEquals(Shape.ANY, dType1.getShape());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      Shape shape0 = Shape.NUMBER;
      DType dType0 = new DType(shape0, "u$s>", (DType) null);
      dTypeRegistry0.add("u$s>", dType0);
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "kBPu8g1l@>O2sn");
      DType dType1 = new DType(shape0, (String) null, (DType) null);
      packageHelper0.registerType("kBPu8g1l@>O2sn", dType1);
      DType dType2 = packageHelper0.findRegisteredType((String) null);
      assertEquals(Shape.NUMBER, dType2.getShape());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "");
      String string0 = packageHelper0.buildCompleteName((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "");
      String string0 = packageHelper0.buildCompleteName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "");
      Shape shape0 = Shape.ANY;
      DType dType0 = new DType(shape0, "", (DType) null);
      // Undeclared exception!
      try { 
        packageHelper0.registerType("", dType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name or type were null
         //
         verifyException("org.dnal.core.DTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, (String) null);
      // Undeclared exception!
      try { 
        packageHelper0.findRegisteredType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "dSYAA/,CkqQOz");
      // Undeclared exception!
      try { 
        packageHelper0.existsRegisteredType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "&{R8#i2^J");
      // Undeclared exception!
      try { 
        packageHelper0.addPackage((DType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.compiler.dnalgenerate.PackageHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "");
      packageHelper0.addPackage((DType) null);
      assertNull(packageHelper0.getPackageName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "kBPu8g1l@>O2sn");
      String string0 = packageHelper0.buildCompleteName("fJno^K6CowVY");
      assertEquals("kBPu8g1l@>O2sn.fJno^K6CowVY", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      Shape shape0 = Shape.ANY;
      DType dType0 = new DType(shape0, "", (DType) null);
      dTypeRegistry0.add("P&4A/g4AMIN", dType0);
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "P&4A/g4AMIN");
      boolean boolean0 = packageHelper0.existsRegisteredType("P&4A/g4AMIN");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "P&4A/g4AMIN");
      boolean boolean0 = packageHelper0.existsRegisteredType("P&4A/g4AMIN");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "list<any>");
      DType dType0 = packageHelper0.findRegisteredType("list<any>");
      assertNull(dType0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "map<any>");
      DType dType0 = packageHelper0.findRegisteredType("map<any>");
      assertNull(dType0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "");
      DType dType0 = dTypeRegistry0.getType("");
      // Undeclared exception!
      try { 
        packageHelper0.registerType("", dType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.compiler.dnalgenerate.PackageHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "org.dnal.compiler.dnalgenerate.PackageHelper");
      String string0 = packageHelper0.getPackageName();
      assertEquals("org.dnal.compiler.dnalgenerate.PackageHelper", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DTypeRegistry dTypeRegistry0 = new DTypeRegistry();
      PackageHelper packageHelper0 = new PackageHelper(dTypeRegistry0, "org.dnal.compiler.dnalgenerate.PackageHelper");
      Shape shape0 = Shape.MAP;
      DType dType0 = new DType(shape0, "org.dnal.compiler.dnalgenerate.PackageHelper", (DType) null);
      packageHelper0.registerType("org.dnal.compiler.dnalgenerate.PackageHelper", dType0);
      assertEquals("org.dnal.compiler.dnalgenerate.PackageHelper.org.dnal.compiler.dnalgenerate.PackageHelper", dType0.getCompleteName());
      
      DType dType1 = packageHelper0.findRegisteredType("org.dnal.compiler.dnalgenerate.PackageHelper");
      assertEquals("org.dnal.compiler.dnalgenerate.PackageHelper.org.dnal.compiler.dnalgenerate.PackageHelper", dType1.getCompleteName());
  }
}
