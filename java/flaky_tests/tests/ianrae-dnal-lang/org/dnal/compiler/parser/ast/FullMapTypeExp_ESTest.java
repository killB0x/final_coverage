/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:35:27 GMT 2022
 */

package org.dnal.compiler.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.dnal.compiler.parser.ast.ComparisonRuleExp;
import org.dnal.compiler.parser.ast.FullMapTypeExp;
import org.dnal.compiler.parser.ast.IdentExp;
import org.dnal.compiler.parser.ast.ImportExp;
import org.dnal.compiler.parser.ast.PackageExp;
import org.dnal.compiler.parser.ast.RuleExp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FullMapTypeExp_ESTest extends FullMapTypeExp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImportExp importExp0 = new ImportExp("<t`qlL%CX1^o`!");
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp((-3308), importExp0, importExp0, importExp0, (List<RuleExp>) null);
      // Undeclared exception!
      try { 
        fullMapTypeExp0.getListElementType();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImportExp importExp0 = new ImportExp("");
      IdentExp identExp0 = new IdentExp("");
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp(0, importExp0, importExp0, identExp0, (List<RuleExp>) null);
      // Undeclared exception!
      try { 
        fullMapTypeExp0.getListElementType();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImportExp importExp0 = new ImportExp((String) null);
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp(1, importExp0, importExp0, importExp0, (List<RuleExp>) null);
      String string0 = fullMapTypeExp0.strValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IdentExp identExp0 = new IdentExp((-563), "_%Y>DXqimq2NB84eT}_");
      LinkedList<ComparisonRuleExp> linkedList0 = new LinkedList<ComparisonRuleExp>();
      LinkedList<RuleExp> linkedList1 = new LinkedList<RuleExp>(linkedList0);
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp((-563), identExp0, identExp0, identExp0, linkedList1);
      String string0 = fullMapTypeExp0.strValue();
      assertEquals("_%Y>DXqimq2NB84eT}_", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PackageExp packageExp0 = new PackageExp("hui:\"B=rd`^&%p/>1+R");
      packageExp0.val = "hui:\"B=rd`^&%p/>1+R";
      LinkedList<RuleExp> linkedList0 = new LinkedList<RuleExp>();
      packageExp0.val = "";
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp((-790), packageExp0, packageExp0, packageExp0, linkedList0);
      String string0 = fullMapTypeExp0.strValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IdentExp identExp0 = new IdentExp((-563), "_%Y>DXqimq2NB84eT}_");
      LinkedList<ComparisonRuleExp> linkedList0 = new LinkedList<ComparisonRuleExp>();
      LinkedList<RuleExp> linkedList1 = new LinkedList<RuleExp>(linkedList0);
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp((-563), identExp0, identExp0, identExp0, linkedList1);
      String string0 = fullMapTypeExp0.getListElementType();
      assertEquals("_%Y", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<RuleExp> linkedList0 = new LinkedList<RuleExp>();
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp(15, (IdentExp) null, (IdentExp) null, (IdentExp) null, linkedList0);
      // Undeclared exception!
      try { 
        fullMapTypeExp0.getListElementType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.compiler.parser.ast.FullMapTypeExp", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedList<RuleExp> linkedList0 = new LinkedList<RuleExp>();
      PackageExp packageExp0 = new PackageExp(">8;6'Z1*zAe:r*");
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp(0, (IdentExp) null, packageExp0, packageExp0, linkedList0);
      String string0 = fullMapTypeExp0.getListElementType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedList<RuleExp> linkedList0 = new LinkedList<RuleExp>();
      FullMapTypeExp fullMapTypeExp0 = new FullMapTypeExp(60, (IdentExp) null, (IdentExp) null, (IdentExp) null, linkedList0);
      // Undeclared exception!
      try { 
        fullMapTypeExp0.strValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dnal.compiler.parser.ast.FullTypeExp", e);
      }
  }
}
