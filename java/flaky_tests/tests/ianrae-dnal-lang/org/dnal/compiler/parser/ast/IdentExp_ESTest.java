/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:37:34 GMT 2022
 */

package org.dnal.compiler.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dnal.compiler.parser.ast.IdentExp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IdentExp_ESTest extends IdentExp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IdentExp identExp0 = new IdentExp("");
      identExp0.val = "B]6InMES9~J#]=*[@A";
      identExp0.val = "B]6InMES9~J#]=*[@A";
      identExp0.val = null;
      String string0 = identExp0.strValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IdentExp identExp0 = new IdentExp("org.dnal.compiler.parser.ast.IdentExp");
      String string0 = identExp0.strValue();
      assertEquals("org.dnal.compiler.parser.ast.IdentExp", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IdentExp identExp0 = new IdentExp("");
      identExp0.val = "B]6InMES9~J#]=*[@A";
      identExp0.val = "B]6InMES9~J#]=*[@A";
      identExp0.val = null;
      String string0 = identExp0.name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IdentExp identExp0 = new IdentExp("");
      String string0 = identExp0.name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IdentExp identExp0 = new IdentExp("org.dnal.compiler.parser.ast.IdentExp");
      String string0 = identExp0.name();
      assertEquals("org.dnal.compiler.parser.ast.IdentExp", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IdentExp identExp0 = new IdentExp((-1), "");
      String string0 = identExp0.strValue();
      assertEquals((-1), identExp0.pos);
      assertNotNull(string0);
  }
}
