/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 21:48:41 GMT 2022
 */

package top.guokaicn.tools.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import top.guokaicn.tools.utils.AssertUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AssertUtils_ESTest extends AssertUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isIdentityStrong("RK_LG+RHOck:a$+^<", "12");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isDate("08sk[0R", "c_4?li'K(Q^");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isUrl("07AC=P#y/D~D-k", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isEmail("", (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isPhone((String) null, "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.equals((String) null, "d/mciTL", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.equals("yoZK", "", "y#S+u*?PzT`_7{wXT/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // y#S+u*?PzT`_7{wXT/
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.equals("|", (String) null, "s!L*t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // s!L*t
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.notEquals((String) null, (String) null, "oQy@VF4xa1ft");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // oQy@VF4xa1ft
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.notEquals("6lfv\"A=", "6lfv\"A=", "mFi");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // mFi
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AssertUtils.notEquals("6lfv\"MhA", "", "mFi");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isBlank("", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.notBlank("$ @~BMI`}+8N=0^8)q", "I9J<'p@-H&");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AssertUtils.isString("6lfv\"MhA", "6lfv\"MhA");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1584L);
      AssertUtils.isDate((Object) mockDate0, "fY+hd6;&f[$=");
      assertEquals("Thu Jan 01 00:00:01 GMT 1970", mockDate0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isTrue((Object) "Hp$^E9;Jv25'i", "Hp$^E9;Jv25'i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Hp$^E9;Jv25'i
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isIdentity((String) null, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isFalse((Object) "<c/", "<c/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // <c/
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Object> class0 = Object.class;
      MockDate mockDate0 = new MockDate();
      AssertUtils.isInstanceOf(class0, mockDate0, "");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Date> class0 = Date.class;
      // Undeclared exception!
      try { 
        AssertUtils.isInstanceOf(class0, class0, "|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // |
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      AssertUtils.notNull(object0, "");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isString((Object) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      LinkedList<Date> linkedList0 = new LinkedList<Date>();
      LinkedHashSet<Date> linkedHashSet0 = new LinkedHashSet<Date>(linkedList0);
      linkedHashSet0.add(mockDate0);
      AssertUtils.notEmpty((Collection<?>) linkedHashSet0, "%");
      assertEquals(1, linkedHashSet0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<Date> linkedList0 = new LinkedList<Date>();
      LinkedHashSet<Date> linkedHashSet0 = new LinkedHashSet<Date>(linkedList0);
      // Undeclared exception!
      try { 
        AssertUtils.notEmpty((Collection<?>) linkedHashSet0, "%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // %
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.notEmpty((Collection<?>) null, "pGdTg>K-v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // pGdTg>K-v
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put("X", "X");
      AssertUtils.notEmpty((Map<?, ?>) hashMap0, "X");
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      // Undeclared exception!
      try { 
        AssertUtils.notEmpty((Map<?, ?>) hashMap0, "X");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // X
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.notEmpty((Map<?, ?>) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AssertUtils.equals("<c/", "<c/", "<c/");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AssertUtils.equals((String) null, (String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.notEquals("ttc#e.Z", (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AssertUtils.isIpAddress("^", "^");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.notNull((Object) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isNull("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AssertUtils.isNull((Object) null, "#");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isFalse(true, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AssertUtils.isFalse(false, "");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isTrue(false, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AssertUtils.isTrue(true, "9=RMsr=?;");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AssertUtils assertUtils0 = new AssertUtils();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isIpAddress((Object) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtils.isDate((Object) "qPKFc/`6 3gLR5b~Q", "qPKFc/`6 3gLR5b~Q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // qPKFc/`6 3gLR5b~Q
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }
}
