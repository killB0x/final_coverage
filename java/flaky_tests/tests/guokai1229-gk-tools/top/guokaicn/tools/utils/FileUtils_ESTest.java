/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 21:54:21 GMT 2022
 */

package top.guokaicn.tools.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import top.guokaicn.tools.utils.FileUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileUtils_ESTest extends FileUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = FileUtils.getSize(2768L);
      assertEquals("2.70KB   ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = FileUtils.getSize(1048599L);
      assertEquals("1.00MB   ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = FileUtils.removePrefix("1/IH`%}:6", "");
      assertEquals("1/IH`%}:6", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileUtils.copyFile("}=Nw:Fd%Z;:'>", "bg.rB~o4_!YYR");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileString("", "top.guokaicn.tools.utils.FileUtils");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = FileUtils.getFileString("#IXR>nA:gh6t.33", ".|eFuT");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileUtils.moveFolder("FEF", (String) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileUtils.moveFile((String) null, "TK7'(l(O\"I>s");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BufferedReader bufferedReader0 = FileUtils.getFileReader((String) null);
      assertNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = FileUtils.deleteFile((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/rYX30Wm7+fV}>ofi");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "MB   os.name");
      File file0 = FileUtils.createFile("/rYX30Wm7+fV}>ofi", "/rYX30Wm7+fV}>ofi");
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileUtils.copyFolder("/UpFkZDBn_", (String) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileUtils.copyFile((String) null, "/vDiMWs&6p#tkBE9F");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      File file0 = FileUtils.createFile("/dfs", "/dfs");
      assertNotNull(file0);
      assertEquals(4L, file0.length());
      
      boolean boolean0 = FileUtils.renameFile("/dfs", (String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = FileUtils.removePrefix("@^%7~b;Dc", "$OB.");
      assertEquals("@^%7~b;Dc", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = FileUtils.getRelativeRootPath("KB   ", "");
      assertEquals("KB   ", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = FileUtils.deleteFolder((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = FileUtils.createFolder((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      File file0 = FileUtils.createFile("", "");
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File file0 = FileUtils.createFile("/.dfs", "/.dfs");
      assertNotNull(file0);
      assertEquals(5L, file0.length());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = FileUtils.createFile("/dfs", "/dfs");
      assertNotNull(file0);
      
      File file1 = FileUtils.createFile("/dfs");
      assertNotNull(file1);
      assertEquals(4L, file1.length());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      File file0 = FileUtils.createFile("/dfs");
      assertNotNull(file0);
      assertTrue(file0.canRead());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.renameFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.removePrefix((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getRelativeRootPath((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileWriter("/(QM^ve{gD/K0GH\"4", false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileString((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileBytes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.deleteAllFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.createFile("pz}U{KF|$/2i44|X%4", "pz}U{KF|$/2i44|X%4", "pz}U{KF|$/2i44|X%4");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.createFile("/dfs", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "\"vJLfO:FpoznJ,Y");
      List<File> list0 = FileUtils.getFileList((File) mockFile0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "");
      BufferedReader bufferedReader0 = FileUtils.getFileReader((File) mockFile0, "");
      assertNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, ";4zm\fL");
      BufferedReader bufferedReader0 = FileUtils.getFileReader((File) mockFile0, "");
      assertNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      File file0 = MockFile.createTempFile("0.00", "us");
      BufferedWriter bufferedWriter0 = FileUtils.getFileWriter(file0, "us", true);
      assertNotNull(bufferedWriter0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("pz}U{KF|$");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = FileUtils.createFile("pz}U{KF|$/2iA4|X%4");
      assertNotNull(file0);
      
      File file1 = FileUtils.createFile("pz}U{KF|$/2iA4|X%4");
      assertNotNull(file1);
      assertTrue(file1.canRead());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.createFile("fD9fulSH>*/rz");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.createFolder("KFT 57jnO(_");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = FileUtils.getSize(1433L);
      assertEquals("1.40KB   ", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = FileUtils.getSize(0L);
      assertEquals("0B   ", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = FileUtils.getSize(1073741824L);
      assertEquals("1.00GB   ", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = FileUtils.getSize(1073741801L);
      assertEquals("1024.00MB   ", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = FileUtils.removePrefix("v1}", "v1}");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = FileUtils.joinFileSeparator(stringArray0);
      assertEquals("null/null/null/null", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = FileUtils.joinFileSeparator(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = FileUtils.joinFileSeparator((String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = FileUtils.getRelativeRootPath("pz}U{KF|$/2i44|X%4", "pz}U{KF|$/2i44|X%4");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = FileUtils.getRelativeRootPath(">", "G#vSyJ=J");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.moveFolder("", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileUtils.moveFolder("MB   ", "");
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.moveFile("", ".]");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileUtils.moveFile("d_)FN`", "d_)FN`");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.copyFolder("", "KB   ");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileUtils.copyFolder("user.name", "top.guokaicn.tools.utils.FileUtils");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.copyFile("", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.deleteFolder("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      boolean boolean0 = FileUtils.deleteFolder("USc8");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.deleteAllFile("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      boolean boolean0 = FileUtils.deleteAllFile("DIUE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      boolean boolean0 = FileUtils.deleteFile("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      boolean boolean0 = FileUtils.deleteFile("CX_l0`&nMij[P\"yVU");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      List<File> list0 = FileUtils.getFileList((File) mockFile0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      List<File> list0 = FileUtils.getFileList("KB   ");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("pz}U{KF|$");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = FileUtils.createFile("pz}U{KF|$/2iA4|X%4");
      assertNotNull(file0);
      
      FileUtils.getFileList(file0);
      assertTrue(file0.canWrite());
      assertEquals(1392409281320L, file0.lastModified());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      List<File> list0 = FileUtils.getFileList((File) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileString("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = FileUtils.getFileString("-4187B   ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileBytes("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = FileUtils.getFileBytes("B   ");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileUtils.createFile("/dfs", "/dfs");
      BufferedReader bufferedReader0 = FileUtils.getFileReader("/dfs");
      assertNotNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BufferedReader bufferedReader0 = FileUtils.getFileReader((File) null, (String) null);
      assertNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      MockFile mockFile0 = new MockFile("|-N_m");
      FileUtils.getFileWriter((File) mockFile0, "|-N_m", true);
      assertEquals(0L, mockFile0.lastModified());
      assertFalse(mockFile0.canRead());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      BufferedWriter bufferedWriter0 = FileUtils.getFileWriter((File) null, "java.home", true);
      assertNull(bufferedWriter0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BufferedWriter bufferedWriter0 = FileUtils.getFileWriter("/dfs", false);
      assertNotNull(bufferedWriter0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("pz}U{KF|$");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      BufferedWriter bufferedWriter0 = FileUtils.getFileWriter("pz}U{KF|$/2iA4|X%4", true);
      assertNull(bufferedWriter0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      File file0 = FileUtils.createFile("java.home", "java.home", "java.home");
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("pz}U{KF|$");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File file0 = FileUtils.createFile("pz}U{KF|$/2iA4|X%4");
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("pz}U{KF|$");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileUtils.createFile("pz}U{KF|$/2i44|X%4", "pz}U{KF|$/2i44|X%4", "pz}U{KF|$/2i44|X%4");
      File file0 = FileUtils.createFile("pz}U{KF|$/2i44|X%4", "");
      assertNotNull(file0);
      assertEquals(0L, file0.length());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      boolean boolean0 = FileUtils.createFolder("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFilePrefix("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FilenameUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      boolean boolean0 = FileUtils.renameFile("/dfs", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.createFile("pz}U{KF|$/2i44|X%4", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("pz}U{KF|$");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = FileUtils.createFile("pz}U{KF|$/2iA4|X%4");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("pz}U{KF|$/2iA4|X%4");
      // Undeclared exception!
      try { 
        FileUtils.copyInputStreamToFile(mockFileInputStream0, file0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FileUtils fileUtils0 = new FileUtils();
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFilePostfix("s[2k");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FilenameUtils
         //
         verifyException("top.guokaicn.tools.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getFileList((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      BufferedReader bufferedReader0 = FileUtils.getFileReader("ZRn}9v*{Dz\"8Udr", "MB   ");
      assertNull(bufferedReader0);
  }
}
