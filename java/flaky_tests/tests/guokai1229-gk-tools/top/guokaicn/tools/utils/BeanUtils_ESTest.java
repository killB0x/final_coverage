/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 22:07:39 GMT 2022
 */

package top.guokaicn.tools.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import top.guokaicn.tools.utils.BeanUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanUtils_ESTest extends BeanUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        BeanUtils.mapToBean((Map<String, Object>) null, class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // map is null
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        BeanUtils.beanToMap((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bean is null
         //
         verifyException("top.guokaicn.tools.utils.AssertUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Map<String, Object> map0 = BeanUtils.beanToMap("");
      Class<String> class0 = String.class;
      BeanUtils.mapToBean(map0, class0);
      assertEquals(3, map0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Map<String, Object> map0 = BeanUtils.beanToMap("");
      Class<Object> class0 = Object.class;
      Object object0 = BeanUtils.mapToBean(map0, class0);
      BeanUtils.beanToMap(object0);
      assertEquals(3, map0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BeanUtils beanUtils0 = new BeanUtils();
  }
}
