/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 22:16:31 GMT 2022
 */

package top.guokaicn.tools.lang.rest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import top.guokaicn.tools.lang.rest.RestResult;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RestResult_ESTest extends RestResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.ok("r51oLf%=D*=A!9D1E:");
      System.setCurrentTimeMillis(0);
      RestResult<Object> restResult1 = RestResult.ok("", (Object) restResult0);
      assertTrue(restResult1.getSuccess());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-1167L));
      Integer integer0 = new Integer(1);
      RestResult<Integer> restResult0 = RestResult.ok("", integer0);
      assertTrue(restResult0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis((-625L));
      RestResult<Integer> restResult0 = RestResult.ok("KOZN");
      assertTrue(restResult0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(0);
      RestResult<Object> restResult0 = RestResult.ok((Object) null);
      assertTrue(restResult0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RestResult<Integer> restResult0 = RestResult.ok((-38), "X'WLZIE", (Integer) null);
      assertEquals((-38), (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      System.setCurrentTimeMillis((-1));
      RestResult<Object> restResult0 = RestResult.ok(0, "", (Object) integer0);
      assertEquals(0, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RestResult<Object> restResult0 = RestResult.ok(1, "");
      assertEquals(1, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-2784L));
      RestResult<Object> restResult0 = RestResult.ok(0, "$VALUES");
      assertEquals(0, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RestResult<Integer> restResult0 = RestResult.ok();
      assertTrue(restResult0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis((-1));
      RestResult<Integer> restResult0 = RestResult.ok();
      assertEquals("\u6210\u529F", restResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RestResult<Object> restResult0 = RestResult.ok("~czgX@I8=");
      long long0 = restResult0.getTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis((-1167L));
      Object object0 = new Object();
      RestResult<Object> restResult0 = RestResult.ok(object0);
      long long0 = restResult0.getTimestamp();
      assertEquals((-1167L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RestResult<Integer> restResult0 = RestResult.ok((-1716), "Yl0by`", (Integer) null);
      restResult0.getSuccess();
      assertEquals((-1716), (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.ok("*Xy9d{emdE", (Object) "*Xy9d{emdE");
      Boolean boolean0 = Boolean.valueOf("*Xy9d{emdE");
      restResult0.setSuccess(boolean0);
      Boolean boolean1 = restResult0.getSuccess();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.error("");
      String string0 = restResult0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.ok((Object) "AyhqIM?");
      Object object0 = restResult0.getData();
      assertEquals("AyhqIM?", object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(0);
      RestResult<Integer> restResult0 = RestResult.ok(0, "", integer0);
      Integer integer1 = restResult0.getCode();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RestResult<Integer> restResult0 = RestResult.ok(140, "f\"k4W/&]#.rDdK-/}0M");
      Integer integer0 = restResult0.getCode();
      assertEquals(140, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer((-829));
      RestResult<Integer> restResult0 = RestResult.ok(integer0);
      restResult0.setCode(integer0);
      Integer integer1 = restResult0.getCode();
      assertEquals((-829), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(0);
      System.setCurrentTimeMillis(0);
      RestResult<Integer> restResult0 = RestResult.error("top.guokaicn.tools.lang.rest.RestResult", integer0);
      assertFalse(restResult0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis((-2784L));
      Integer integer0 = new Integer(96);
      RestResult<Integer> restResult0 = RestResult.error("top.guokaicn.tools.lang.rest.RestResult", integer0);
      assertEquals((-2784L), restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RestResult<Integer> restResult0 = RestResult.error("}<LMhPhJeQo");
      assertEquals(500, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis((-1));
      RestResult<Object> restResult0 = RestResult.error("6@qg;X Rfi<");
      assertEquals((-1L), restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RestResult<Object> restResult0 = RestResult.error((Object) null);
      assertEquals(0L, restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      System.setCurrentTimeMillis((-1));
      RestResult<Integer> restResult0 = RestResult.error(integer0);
      assertEquals((-1L), restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockException mockException0 = new MockException(mockThrowable0);
      System.setCurrentTimeMillis(0);
      RestResult<Integer> restResult0 = RestResult.error((Exception) mockException0);
      assertEquals(0L, restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      MockException mockException0 = new MockException("275cx");
      RestResult<Object> restResult0 = RestResult.error((Exception) mockException0);
      assertEquals(500, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Object object0 = new Object();
      RestResult<Object> restResult0 = RestResult.error((-38), "", object0);
      assertEquals((-38), (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System.setCurrentTimeMillis((-1167L));
      Object object0 = new Object();
      RestResult<Object> restResult0 = RestResult.error(1564, (String) null, object0);
      assertEquals(1564, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RestResult<Integer> restResult0 = RestResult.error(1, "");
      assertEquals(1, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      RestResult<Integer> restResult0 = RestResult.error((-1714), "275cx");
      assertEquals((-1714), (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      System.setCurrentTimeMillis(0);
      RestResult<Integer> restResult0 = RestResult.error();
      assertEquals(0L, restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      System.setCurrentTimeMillis((-1));
      RestResult<Object> restResult0 = RestResult.error();
      assertEquals((-1L), restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        RestResult.error((Exception) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.lang.rest.RestResultUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.error((-1), "", (Object) "");
      Boolean boolean0 = Boolean.valueOf(true);
      restResult0.setSuccess(boolean0);
      assertEquals((-1), (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RestResult<Integer> restResult0 = new RestResult<Integer>();
      Integer integer0 = new Integer((-3114));
      restResult0.setData(integer0);
      assertNull(restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object object0 = new Object();
      RestResult<Object> restResult0 = RestResult.ok(object0);
      restResult0.setMessage("");
      assertTrue(restResult0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockException mockException0 = new MockException(mockThrowable0);
      RestResult<Object> restResult0 = RestResult.error((Exception) mockException0);
      assertFalse(restResult0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      RestResult<Object> restResult0 = RestResult.ok(object0);
      long long0 = restResult0.getTimestamp();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RestResult<Object> restResult0 = new RestResult<Object>();
      String string0 = restResult0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer(1);
      RestResult<Integer> restResult0 = RestResult.error("ZmSCK.$(d4", integer0);
      assertEquals(1392409281320L, restResult0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.ok();
      String string0 = restResult0.getMessage();
      assertEquals("\u6210\u529F", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.error();
      assertEquals("\u9519\u8BEF", restResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RestResult<Integer> restResult0 = new RestResult<Integer>();
      Boolean boolean0 = restResult0.getSuccess();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.error(0, "Vb14\"lr");
      assertEquals(0, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.error((Object) null);
      assertEquals(500, (int)restResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RestResult<Object> restResult0 = RestResult.ok("r51oLf%=D*=A!9D1E:");
      Object object0 = restResult0.getData();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RestResult<Integer> restResult0 = new RestResult<Integer>();
      Integer integer0 = restResult0.getCode();
      assertNull(integer0);
  }
}
