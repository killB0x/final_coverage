/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 22:08:42 GMT 2022
 */

package top.guokaicn.tools.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import top.guokaicn.tools.security.AESUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AESUtils_ESTest extends AESUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        AESUtils.encryptBase64("", ">#hHcVB\"");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("top.guokaicn.tools.security.AESUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = AESUtils.decrypt("DA2A1561DB3FEE7729E86CA4252B5443", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = AESUtils.encrypt((String) null, "AES");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = AESUtils.decryptBase64("AS", "AS");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = AESUtils.decrypt("2", "2");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        AESUtils.decryptBase64("AES", "AES");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u0000\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        AESUtils.decryptBase64((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        AESUtils.decryptBase64("rtk'", "rtk'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal base64 character 27
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        AESUtils.decrypt("{ewvG^)w5", "{ewvG^)w5");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"{\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        AESUtils.decrypt((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.security.AESUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = AESUtils.decrypt("", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = AESUtils.decrypt("ED65E382621C96742ED5E6792B8475EEEAEEADD0A4EA264F4003C09B7133F417", "OZV}u`;;1(C1=w[08P");
      assertEquals("OZV}u`;;1(C1=w[08P", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = AESUtils.decryptBase64("", "DA2A1561DB3FEE7729E86CA4252B5443");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AESUtils aESUtils0 = new AESUtils();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = AESUtils.encrypt("OZV}u`;;1(C1=w[08P", "OZV}u`;;1(C1=w[08P");
      assertEquals("ED65E382621C96742ED5E6792B8475EEEAEEADD0A4EA264F4003C09B7133F417", string0);
      assertNotNull(string0);
  }
}
