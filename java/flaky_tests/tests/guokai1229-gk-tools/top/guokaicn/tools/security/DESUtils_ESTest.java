/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 22:12:26 GMT 2022
 */

package top.guokaicn.tools.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import top.guokaicn.tools.security.DESUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DESUtils_ESTest extends DESUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = DESUtils.decryptHexString((String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = DESUtils.encrypt((byte[]) null, "");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = DESUtils.decryptString("", "&>6{S6JK\"bm/%*vluc");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = DESUtils.decryptHexString("", "xNNZ-8z+p?#SYs+Z");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = DESUtils.decrypt(byteArray0, "N}u-2CKC,5N}Ts|Iv/O");
      assertNotNull(byteArray1);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DESUtils.encryptString("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Base64$Encoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DESUtils.encryptHexString((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.security.DESUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DESUtils.decryptString((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("top.guokaicn.tools.security.DESUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DESUtils.decryptString("twxswyV1b`P/H|Y|d'", "twxswyV1b`P/H|Y|d'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal base64 character 60
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = DESUtils.decrypt(byteArray0, "l;UHL,[_eXi=[_y{b");
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = DESUtils.encrypt(byteArray0, "l;UHL,[_eXi=[_y{b");
      byte[] byteArray2 = DESUtils.decrypt(byteArray1, "l;UHL,[_eXi=[_y{b");
      assertEquals(7, byteArray2.length);
      assertNotNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = DESUtils.decryptString("", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = DESUtils.decryptHexString("fed8fbf9c1484b65dcb6b158368db530e6fd5e1bc6659000", "twxswsyV1b`k/H|Y|d'");
      assertNotNull(string0);
      assertEquals("twxswsyV1b`k/H|Y|d'", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = DESUtils.decryptHexString("", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = DESUtils.encryptHexString("", "5w->3s*xRq'wL/`");
      assertEquals("b28d26e42254d8af", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = DESUtils.encryptHexString("", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = DESUtils.encryptString("&#&%_uYPa2n<Q\"f<", "&#&%_uYPa2n<Q\"f<");
      assertEquals("xvFTRMqPwW9V8yUE7m2k+baHRnCLN9ow", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DESUtils dESUtils0 = new DESUtils();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = DESUtils.decryptString("xvFTRMqPwW9V8yUE7m2k+baHRnCLN9ow", "&#&%_uYPa2n<Q\"f<");
      assertNotNull(string0);
      assertEquals("&#&%_uYPa2n<Q\"f<", string0);
  }
}
