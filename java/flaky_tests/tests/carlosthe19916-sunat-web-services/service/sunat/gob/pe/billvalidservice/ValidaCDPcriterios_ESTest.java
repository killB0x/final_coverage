/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:34:43 GMT 2022
 */

package service.sunat.gob.pe.billvalidservice;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import service.sunat.gob.pe.billvalidservice.ValidaCDPcriterios;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidaCDPcriterios_ESTest extends ValidaCDPcriterios_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      Double double0 = Double.valueOf(0.0);
      validaCDPcriterios0.setImporteTotal(double0);
      assertNull(validaCDPcriterios0.getRucEmisor());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setNumeroDocIdReceptor("");
      assertNull(validaCDPcriterios0.getRucEmisor());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.tipoDocIdReceptor = ">B^od";
      String string0 = validaCDPcriterios0.getTipoDocIdReceptor();
      assertEquals(">B^od", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setTipoDocIdReceptor("");
      String string0 = validaCDPcriterios0.getTipoDocIdReceptor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setTipoCDP("@bL(eUy$&");
      String string0 = validaCDPcriterios0.getTipoCDP();
      assertEquals("@bL(eUy$&", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.tipoCDP = "";
      String string0 = validaCDPcriterios0.getTipoCDP();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setSerieCDP("ClU'~ZOYMq-{(s:5!%");
      String string0 = validaCDPcriterios0.getSerieCDP();
      assertEquals("ClU'~ZOYMq-{(s:5!%", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.serieCDP = "";
      String string0 = validaCDPcriterios0.getSerieCDP();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setRucEmisor("");
      String string0 = validaCDPcriterios0.getRucEmisor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.numeroDocIdReceptor = "1 ";
      String string0 = validaCDPcriterios0.getNumeroDocIdReceptor();
      assertEquals("1 ", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.numeroDocIdReceptor = "";
      String string0 = validaCDPcriterios0.getNumeroDocIdReceptor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setNumeroCDP("K(^{X>(b>N#K.");
      String string0 = validaCDPcriterios0.getNumeroCDP();
      assertEquals("K(^{X>(b>N#K.", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.numeroCDP = "";
      String string0 = validaCDPcriterios0.getNumeroCDP();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setNroAutorizacion("N+'CVX ||u6qzy9v}E");
      String string0 = validaCDPcriterios0.getNroAutorizacion();
      assertEquals("N+'CVX ||u6qzy9v}E", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.nroAutorizacion = "";
      String string0 = validaCDPcriterios0.getNroAutorizacion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      Double double0 = Double.valueOf(0.0);
      validaCDPcriterios0.importeTotal = double0;
      Double double1 = validaCDPcriterios0.getImporteTotal();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      Double double0 = Double.valueOf(205.92227227737);
      validaCDPcriterios0.importeTotal = double0;
      Double double1 = validaCDPcriterios0.getImporteTotal();
      assertEquals(205.92227227737, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      Double double0 = Double.valueOf((-835.0546989933046));
      validaCDPcriterios0.importeTotal = double0;
      Double double1 = validaCDPcriterios0.getImporteTotal();
      assertEquals((-835.0546989933046), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setFechaEmision("1 ");
      String string0 = validaCDPcriterios0.getFechaEmision();
      assertEquals("1 ", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.fechaEmision = "";
      String string0 = validaCDPcriterios0.getFechaEmision();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getRucEmisor();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getNumeroCDP();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getFechaEmision();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getSerieCDP();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getNroAutorizacion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getTipoCDP();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      Double double0 = validaCDPcriterios0.getImporteTotal();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getTipoDocIdReceptor();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      validaCDPcriterios0.setRucEmisor("v^]L[0N)1jG>+HX");
      String string0 = validaCDPcriterios0.getRucEmisor();
      assertEquals("v^]L[0N)1jG>+HX", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ValidaCDPcriterios validaCDPcriterios0 = new ValidaCDPcriterios();
      String string0 = validaCDPcriterios0.getNumeroDocIdReceptor();
      assertNull(string0);
  }
}
