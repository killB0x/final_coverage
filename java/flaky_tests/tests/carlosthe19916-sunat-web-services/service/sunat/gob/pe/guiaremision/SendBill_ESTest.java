/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:15:53 GMT 2022
 */

package service.sunat.gob.pe.guiaremision;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.net.URL;
import java.net.URLStreamHandler;
import javax.activation.DataHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;
import service.sunat.gob.pe.guiaremision.SendBill;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SendBill_ESTest extends SendBill_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      sendBill0.setPartyType("service.sunat.gob.pe.guiaremision.SendBill");
      String string0 = sendBill0.getPartyType();
      assertEquals("service.sunat.gob.pe.guiaremision.SendBill", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      sendBill0.setPartyType("");
      String string0 = sendBill0.getPartyType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      sendBill0.fileName = "V\"_/z~Z";
      String string0 = sendBill0.getFileName();
      assertEquals("V\"_/z~Z", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      sendBill0.setFileName("");
      String string0 = sendBill0.getFileName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      DataHandler dataHandler0 = sendBill0.getContentFile();
      assertNull(dataHandler0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 0, "", uRLStreamHandler0);
      DataHandler dataHandler0 = new DataHandler(uRL0);
      sendBill0.setContentFile(dataHandler0);
      DataHandler dataHandler1 = sendBill0.getContentFile();
      assertSame(dataHandler1, dataHandler0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      String string0 = sendBill0.getPartyType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SendBill sendBill0 = new SendBill();
      String string0 = sendBill0.getFileName();
      assertNull(string0);
  }
}
