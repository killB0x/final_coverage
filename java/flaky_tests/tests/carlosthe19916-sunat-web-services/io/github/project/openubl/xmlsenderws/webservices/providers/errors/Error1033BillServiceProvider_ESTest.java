/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 17:54:20 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.providers.errors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.project.openubl.xmlsenderws.webservices.providers.BillServiceModel;
import io.github.project.openubl.xmlsenderws.webservices.providers.errors.Error1033BillServiceProvider;
import io.github.project.openubl.xmlsenderws.webservices.wrappers.ServiceConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Error1033BillServiceProvider_ESTest extends Error1033BillServiceProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Error1033BillServiceProvider error1033BillServiceProvider0 = new Error1033BillServiceProvider((Integer) null);
      ServiceConfig serviceConfig0 = mock(ServiceConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(serviceConfig0).getPassword();
      doReturn((String) null).when(serviceConfig0).getUsername();
      // Undeclared exception!
      try { 
        error1033BillServiceProvider0.sendBill("?:00000000000-00-0000-0", (byte[]) null, serviceConfig0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/cxf/jaxws/JaxWsProxyFactoryBean
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.wrappers.SunatServiceFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Error1033BillServiceProvider error1033BillServiceProvider0 = new Error1033BillServiceProvider((Integer) null);
      // Undeclared exception!
      try { 
        error1033BillServiceProvider0.sendBill("?:00000000000-00-0000-0", (byte[]) null, (ServiceConfig) null);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.providers.errors.Error1033BillServiceProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Error1033BillServiceProvider error1033BillServiceProvider0 = new Error1033BillServiceProvider((Integer) null);
      BillServiceModel billServiceModel0 = error1033BillServiceProvider0.sendBill("?:0000000000-00-0000-0", (byte[]) null, (ServiceConfig) null);
      assertNull(billServiceModel0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-896));
      BillServiceModel billServiceModel0 = new BillServiceModel();
      Error1033BillServiceProvider error1033BillServiceProvider0 = new Error1033BillServiceProvider(integer0, billServiceModel0);
      byte[] byteArray0 = new byte[4];
      ServiceConfig serviceConfig0 = mock(ServiceConfig.class, new ViolatedAssumptionAnswer());
      BillServiceModel billServiceModel1 = error1033BillServiceProvider0.sendBill(".b", byteArray0, serviceConfig0);
      assertNull(billServiceModel1);
  }
}
