/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:18:02 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.managers.smart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.project.openubl.xmlsenderws.webservices.managers.smart.SmartBillServiceConfig;
import io.github.project.openubl.xmlsenderws.webservices.managers.smart.SmartBillServiceManager;
import io.github.project.openubl.xmlsenderws.webservices.xml.XmlContentModel;
import java.io.File;
import java.io.IOException;
import java.nio.file.InvalidPathException;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SmartBillServiceManager_ESTest extends SmartBillServiceManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlContentModel xmlContentModel0 = new XmlContentModel();
      // Undeclared exception!
      try { 
        SmartBillServiceManager.getStatus("ik:jpGKP:DA\"h4KN", xmlContentModel0, "io.github.project.openubl.xmlsenderws.webservices.managers.smart.SmartBillServiceManager", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/cxf/jaxws/JaxWsProxyFactoryBean
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.wrappers.SunatServiceFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        SmartBillServiceManager.send(byteArray0, "", "rP6Qz}dPCt15~0=");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.managers.smart.custom.CustomSmartBillServiceManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      try { 
        SmartBillServiceManager.send((File) mockFile0, (String) null, "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartBillServiceConfig smartBillServiceConfig0 = SmartBillServiceConfig.getInstance();
      SmartBillServiceManager.BillServiceConfig smartBillServiceManager_BillServiceConfig0 = new SmartBillServiceManager.BillServiceConfig(smartBillServiceConfig0);
      String string0 = smartBillServiceManager_BillServiceConfig0.getInvoiceAndNoteDeliveryURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("q");
      Path path0 = mockFile0.toPath();
      try { 
        SmartBillServiceManager.send(path0, "q", "q");
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      try { 
        SmartBillServiceManager.send(path0, "", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("+LnEU");
      try { 
        SmartBillServiceManager.send((File) mockFile0, "+LnEU", "+LnEU");
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("No se pudo convertir el valor del cat\u00E1logo");
      // Undeclared exception!
      try { 
        SmartBillServiceManager.send((File) mockFile0, "", "M(2au~R}");
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBillServiceManager.send((File) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.managers.smart.SmartBillServiceManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBillServiceManager.send((Path) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartBillServiceConfig smartBillServiceConfig0 = SmartBillServiceConfig.getInstance();
      SmartBillServiceManager.BillServiceConfig smartBillServiceManager_BillServiceConfig0 = new SmartBillServiceManager.BillServiceConfig(smartBillServiceConfig0);
      String string0 = smartBillServiceManager_BillServiceConfig0.getPerceptionAndRetentionDeliveryURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartBillServiceConfig smartBillServiceConfig0 = SmartBillServiceConfig.getInstance();
      SmartBillServiceManager.BillServiceConfig smartBillServiceManager_BillServiceConfig0 = new SmartBillServiceManager.BillServiceConfig(smartBillServiceConfig0);
      String string0 = smartBillServiceManager_BillServiceConfig0.getDespatchAdviceDeliveryURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBillServiceManager.getStatus("", (XmlContentModel) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.managers.smart.custom.CustomSmartBillServiceManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBillServiceManager.send((byte[]) null, "Tn%7[H<!d)+=q1u", "Tn%7[H<!d)+=q1u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
}
