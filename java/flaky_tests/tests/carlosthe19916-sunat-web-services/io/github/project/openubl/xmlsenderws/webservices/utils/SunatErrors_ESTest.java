/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:02:07 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.project.openubl.xmlsenderws.webservices.utils.SunatErrors;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SunatErrors_ESTest extends SunatErrors_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SunatErrors sunatErrors0 = SunatErrors.getInstance();
      String string0 = sunatErrors0.getWithMaxLength(2126, 0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SunatErrors sunatErrors0 = SunatErrors.getInstance();
      String string0 = sunatErrors0.get(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SunatErrors sunatErrors0 = SunatErrors.getInstance();
      // Undeclared exception!
      try { 
        sunatErrors0.getWithMaxLength(2502, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SunatErrors sunatErrors0 = SunatErrors.getInstance();
      String string0 = sunatErrors0.getWithMaxLength(2502, 2502);
      assertEquals("Los valores totales deben ser mayores a cero", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SunatErrors sunatErrors0 = SunatErrors.getInstance();
      String string0 = sunatErrors0.getWithMaxLength(0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SunatErrors sunatErrors0 = SunatErrors.getInstance();
      SunatErrors sunatErrors1 = SunatErrors.getInstance();
      assertSame(sunatErrors1, sunatErrors0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SunatErrors sunatErrors0 = SunatErrors.getInstance();
      assertNotNull(sunatErrors0);
      
      String string0 = sunatErrors0.get(2502);
      assertEquals("Los valores totales deben ser mayores a cero", string0);
      assertNotNull(string0);
  }
}
