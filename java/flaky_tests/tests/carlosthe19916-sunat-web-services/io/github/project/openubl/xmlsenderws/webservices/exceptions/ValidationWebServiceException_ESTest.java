/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:42:45 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.project.openubl.xmlsenderws.webservices.exceptions.ValidationWebServiceException;
import javax.xml.soap.SOAPFault;
import javax.xml.ws.soap.SOAPFaultException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidationWebServiceException_ESTest extends ValidationWebServiceException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sOAPFault0).getFaultCode();
      doReturn("0", "0").when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      ValidationWebServiceException validationWebServiceException0 = new ValidationWebServiceException(sOAPFaultException0);
      Integer integer0 = validationWebServiceException0.getSUNATErrorCode();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sOAPFault0).getFaultCode();
      doReturn((String) null, (String) null).when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      ValidationWebServiceException validationWebServiceException0 = new ValidationWebServiceException(sOAPFaultException0);
      Integer integer0 = validationWebServiceException0.getSUNATErrorCode();
      assertEquals((-1), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValidationWebServiceException validationWebServiceException0 = null;
      try {
        validationWebServiceException0 = new ValidationWebServiceException((SOAPFaultException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.exceptions.AbstractWebServiceException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn(";OA!,\"o|}L0x ").when(sOAPFault0).getFaultCode();
      doReturn("8", "8").when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      ValidationWebServiceException validationWebServiceException0 = new ValidationWebServiceException(sOAPFaultException0);
      Integer integer0 = validationWebServiceException0.getSUNATErrorCode();
      assertEquals(8, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn(";OA!,\"o|}L0x ").when(sOAPFault0).getFaultCode();
      doReturn("8", "8").when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      ValidationWebServiceException validationWebServiceException0 = new ValidationWebServiceException(sOAPFaultException0);
      String string0 = validationWebServiceException0.getSUNATErrorMessage(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn(";OA!,\"o|}L0x ").when(sOAPFault0).getFaultCode();
      doReturn("8", "8").when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      ValidationWebServiceException validationWebServiceException0 = new ValidationWebServiceException(sOAPFaultException0);
      String string0 = validationWebServiceException0.getSUNATErrorMessage();
      assertNull(string0);
  }
}
