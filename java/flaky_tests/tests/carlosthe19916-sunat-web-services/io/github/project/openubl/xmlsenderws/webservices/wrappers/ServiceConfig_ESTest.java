/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:00:12 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.wrappers;

import org.junit.Test;
import static org.junit.Assert.*;
import io.github.project.openubl.xmlsenderws.webservices.wrappers.ServiceConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ServiceConfig_ESTest extends ServiceConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig.Builder serviceConfig_Builder1 = serviceConfig_Builder0.username("hPgM7?fZBlZv}KVc*");
      ServiceConfig serviceConfig0 = serviceConfig_Builder1.build();
      String string0 = serviceConfig0.getUsername();
      assertEquals("hPgM7?fZBlZv}KVc*", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      serviceConfig_Builder0.url("hPgM7?fZBlZv}KVc*");
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      String string0 = serviceConfig0.getUrl();
      assertEquals("hPgM7?fZBlZv}KVc*", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      serviceConfig_Builder0.password(")wpuI4b/'BLU7^}mc=");
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      String string0 = serviceConfig0.getPassword();
      assertEquals(")wpuI4b/'BLU7^}mc=", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      serviceConfig_Builder0.password("");
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      String string0 = serviceConfig0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      serviceConfig_Builder0.password(")wpuI4b/'BLU7^}mc=");
      ServiceConfig serviceConfig1 = serviceConfig_Builder0.build();
      boolean boolean0 = serviceConfig0.equals(serviceConfig1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      serviceConfig_Builder0.username("x8M_n]R`C9'");
      ServiceConfig serviceConfig1 = serviceConfig_Builder0.build();
      boolean boolean0 = serviceConfig0.equals(serviceConfig1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      serviceConfig_Builder0.url("");
      ServiceConfig serviceConfig1 = serviceConfig_Builder0.build();
      boolean boolean0 = serviceConfig0.equals(serviceConfig1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      ServiceConfig serviceConfig1 = serviceConfig_Builder0.build();
      boolean boolean0 = serviceConfig0.equals(serviceConfig1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      boolean boolean0 = serviceConfig0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      boolean boolean0 = serviceConfig0.equals(serviceConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      Object object0 = new Object();
      boolean boolean0 = serviceConfig0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig.Builder serviceConfig_Builder1 = serviceConfig_Builder0.url("");
      ServiceConfig serviceConfig0 = serviceConfig_Builder1.build();
      String string0 = serviceConfig0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      serviceConfig_Builder0.username("");
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      String string0 = serviceConfig0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      String string0 = serviceConfig0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      serviceConfig0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      String string0 = serviceConfig0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ServiceConfig.Builder serviceConfig_Builder0 = new ServiceConfig.Builder();
      ServiceConfig serviceConfig0 = serviceConfig_Builder0.build();
      String string0 = serviceConfig0.getUrl();
      assertNull(string0);
  }
}
