/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:41:50 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.models;

import org.junit.Test;
import static org.junit.Assert.*;
import io.github.project.openubl.xmlsenderws.webservices.models.TicketResponseType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TicketResponseType_ESTest extends TicketResponseType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TicketResponseType[] ticketResponseTypeArray0 = TicketResponseType.values();
      assertEquals(3, ticketResponseTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TicketResponseType ticketResponseType0 = TicketResponseType.valueOf("PROCESO_CORRECTAMENTE");
      assertEquals(0, ticketResponseType0.getCode());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TicketResponseType ticketResponseType0 = TicketResponseType.valueOf("EN_PROCESO");
      assertEquals(98, ticketResponseType0.getCode());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TicketResponseType ticketResponseType0 = TicketResponseType.PROCESO_CON_ERRORES;
      int int0 = ticketResponseType0.getCode();
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TicketResponseType ticketResponseType0 = TicketResponseType.PROCESO_CORRECTAMENTE;
      int int0 = ticketResponseType0.getCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TicketResponseType ticketResponseType0 = TicketResponseType.PROCESO_CON_ERRORES;
      String string0 = ticketResponseType0.getDescription();
      assertEquals("Proces\u00F3 con errores", string0);
  }
}
