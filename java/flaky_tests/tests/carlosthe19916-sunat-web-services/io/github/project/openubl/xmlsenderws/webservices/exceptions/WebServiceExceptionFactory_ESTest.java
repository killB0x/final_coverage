/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:14:49 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.project.openubl.xmlsenderws.webservices.exceptions.AbstractWebServiceException;
import io.github.project.openubl.xmlsenderws.webservices.exceptions.WebServiceExceptionFactory;
import javax.xml.soap.SOAPFault;
import javax.xml.ws.soap.SOAPFaultException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WebServiceExceptionFactory_ESTest extends WebServiceExceptionFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        WebServiceExceptionFactory.createWebServiceException((SOAPFaultException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.utils.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn("ZUgN]|8e-5;w#'aBLnK", "").when(sOAPFault0).getFaultCode();
      doReturn(".xml", "7", "").when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      AbstractWebServiceException abstractWebServiceException0 = WebServiceExceptionFactory.createWebServiceException(sOAPFaultException0);
      AbstractWebServiceException abstractWebServiceException1 = WebServiceExceptionFactory.createWebServiceException(abstractWebServiceException0);
      assertEquals("io.github.project.openubl.xmlsenderws.webservices.exceptions.ValidationWebServiceException: ", abstractWebServiceException1.toString());
  }
}
