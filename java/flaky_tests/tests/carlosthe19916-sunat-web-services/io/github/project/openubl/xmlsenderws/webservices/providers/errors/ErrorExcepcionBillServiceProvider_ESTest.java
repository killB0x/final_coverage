/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:28:05 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.providers.errors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.project.openubl.xmlsenderws.webservices.providers.BillServiceModel;
import io.github.project.openubl.xmlsenderws.webservices.providers.errors.ErrorExcepcionBillServiceProvider;
import io.github.project.openubl.xmlsenderws.webservices.wrappers.ServiceConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ErrorExcepcionBillServiceProvider_ESTest extends ErrorExcepcionBillServiceProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(2608);
      BillServiceModel billServiceModel0 = new BillServiceModel();
      ErrorExcepcionBillServiceProvider errorExcepcionBillServiceProvider0 = new ErrorExcepcionBillServiceProvider(integer0, billServiceModel0);
      byte[] byteArray0 = new byte[3];
      ServiceConfig serviceConfig0 = mock(ServiceConfig.class, new ViolatedAssumptionAnswer());
      BillServiceModel billServiceModel1 = errorExcepcionBillServiceProvider0.sendBill("9Pb>$lu]rIB4", byteArray0, serviceConfig0);
      assertEquals("Los montos de pago, percibidos y montos cobrados consignados para el documento relacionado no son correctos.", billServiceModel1.getDescription());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ErrorExcepcionBillServiceProvider errorExcepcionBillServiceProvider0 = new ErrorExcepcionBillServiceProvider((Integer) null);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        errorExcepcionBillServiceProvider0.sendBill("x\"[(.Nj", byteArray0, (ServiceConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.providers.errors.ErrorExcepcionBillServiceProvider", e);
      }
  }
}
