/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 17:50:46 GMT 2022
 */

package io.github.project.openubl.xmlsenderws.webservices.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.project.openubl.xmlsenderws.webservices.providers.BillServiceModel;
import io.github.project.openubl.xmlsenderws.webservices.utils.Utils;
import java.util.Optional;
import javax.xml.soap.SOAPFault;
import javax.xml.ws.soap.SOAPFaultException;
import javax.xml.xpath.XPathExpressionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.xml.sax.SAXParseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = Utils.getFileNameWithoutExtension("EXCEPCION");
      assertEquals("EXCEPCION", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.getFirstXmlFileFromZip((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.getFileNameWithoutExtension((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.utils.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.getErrorCode((SOAPFaultException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.project.openubl.xmlsenderws.webservices.utils.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        Utils.getDocumentFromBytes(byteArray0);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = Utils.getFirstXmlFileFromZip(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.getDocumentFromBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = Utils.getFileNameWithoutExtension(".ohu}$B+YG3EB");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn("0").when(sOAPFault0).getFaultCode();
      doReturn("0").when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      Optional<Integer> optional0 = Utils.getErrorCode(sOAPFaultException0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sOAPFault0).getFaultCode();
      doReturn((String) null).when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      Optional<Integer> optional0 = Utils.getErrorCode(sOAPFaultException0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SOAPFault sOAPFault0 = mock(SOAPFault.class, new ViolatedAssumptionAnswer());
      doReturn("Jf-1tg\"gjQ").when(sOAPFault0).getFaultCode();
      doReturn("YF'l^/0!F`zI").when(sOAPFault0).getFaultString();
      SOAPFaultException sOAPFaultException0 = new SOAPFaultException(sOAPFault0);
      Optional<Integer> optional0 = Utils.getErrorCode(sOAPFaultException0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BillServiceModel billServiceModel0 = Utils.toModel("");
      assertNull(billServiceModel0.getStatus());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        Utils.toModel(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        Utils.extractResponse((Document) null);
        fail("Expecting exception: XPathExpressionException");
      
      } catch(XPathExpressionException e) {
      }
  }
}
