/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:33:36 GMT 2022
 */

package org.xson.tangyuan.spring;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.xson.tangyuan.spring.AopBean;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AopBean_ESTest extends AopBean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AopBean aopBean0 = new AopBean();
      try { 
        aopBean0.onException((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.executor.ServiceActuator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AopBean aopBean0 = new AopBean();
      MockThrowable mockThrowable0 = new MockThrowable("org.xson.tangyuan.logging.LogException");
      try { 
        aopBean0.onException(mockThrowable0);
        fail("Expecting exception: Throwable");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AopBean aopBean0 = new AopBean();
      aopBean0.after();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AopBean aopBean0 = new AopBean();
      // Undeclared exception!
      try { 
        aopBean0.before();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.xson.tangyuan.TangYuanContainer
         //
         verifyException("org.xson.tangyuan.executor.ServiceContext", e);
      }
  }
}
