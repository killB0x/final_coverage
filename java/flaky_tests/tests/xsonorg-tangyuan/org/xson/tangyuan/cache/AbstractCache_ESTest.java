/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:22:15 GMT 2022
 */

package org.xson.tangyuan.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.EhCacheCache;
import org.xson.tangyuan.cache.FIFOCache;
import org.xson.tangyuan.cache.ICache;
import org.xson.tangyuan.cache.LocalCache;
import org.xson.tangyuan.cache.LoggingCache;
import org.xson.tangyuan.cache.MemcachedCache;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.SoftCache;
import org.xson.tangyuan.cache.SynchronizedCache;
import org.xson.tangyuan.cache.WeakCache;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCache_ESTest extends AbstractCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      loggingCache0.stop();
      assertNull(loggingCache0.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      redisCache0.clear();
      assertNull(redisCache0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      String string0 = memcachedCache0.parseKey(loggingCache0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      FIFOCache fIFOCache0 = new FIFOCache(localCache0, 0);
      int int0 = fIFOCache0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      localCache0.putObject((Object) "socketTimeOut", (Object) null);
      int int0 = localCache0.getSize();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      String string0 = ehCacheCache0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("Ximq|E%AU&?VOC<^>");
      String string0 = localCache0.getId();
      assertEquals("Ximq|E%AU&?VOC<^>", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SoftCache softCache0 = new SoftCache(localCache0, 2564);
      String string0 = softCache0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        ehCacheCache0.start("SyI", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find resource SyI
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        synchronizedCache0.start("^a2g]", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      WeakCache weakCache0 = new WeakCache((ICache) null, 0);
      // Undeclared exception!
      try { 
        weakCache0.putObject((Object) ehCacheCache0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.WeakCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      // Undeclared exception!
      try { 
        synchronizedCache0.putObject((Object) null, (Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      // Undeclared exception!
      try { 
        ehCacheCache0.putObject((Object) "", (Object) "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Element
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.putObject((Object) ehCacheCache0, (Object) ehCacheCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Element
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      // Undeclared exception!
      try { 
        ehCacheCache0.getSize();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FIFOCache fIFOCache0 = new FIFOCache((ICache) null, 0);
      // Undeclared exception!
      try { 
        fIFOCache0.getId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.FIFOCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      String string0 = ehCacheCache0.parseKey("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      // Undeclared exception!
      try { 
        ehCacheCache0.parseKey((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // cache key does not allow null
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      RedisCache redisCache0 = new RedisCache();
      // Undeclared exception!
      try { 
        redisCache0.putObject((Object) ehCacheCache0, (Object) ehCacheCache0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.io.NotSerializableException: org.xson.tangyuan.cache.EhCacheCache
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.logging.LogFactory$1");
      // Undeclared exception!
      try { 
        localCache0.start("org.xson.tangyuan.logging.LogFactory$1", (Map<String, String>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // This method subclass must implement
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      int int0 = memcachedCache0.getSize();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.SoftCache");
      // Undeclared exception!
      try { 
        localCache0.stop();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // This method subclass must implement
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }
}
