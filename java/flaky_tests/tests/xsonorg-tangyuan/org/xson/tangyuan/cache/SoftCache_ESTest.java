/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:07:36 GMT 2022
 */

package org.xson.tangyuan.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.ref.ReferenceQueue;
import java.lang.ref.SoftReference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.EhCacheCache;
import org.xson.tangyuan.cache.FIFOCache;
import org.xson.tangyuan.cache.ICache;
import org.xson.tangyuan.cache.LRUCache;
import org.xson.tangyuan.cache.LocalCache;
import org.xson.tangyuan.cache.LoggingCache;
import org.xson.tangyuan.cache.MemcachedCache;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.ScheduledCache;
import org.xson.tangyuan.cache.SoftCache;
import org.xson.tangyuan.cache.SynchronizedCache;
import org.xson.tangyuan.cache.WeakCache;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SoftCache_ESTest extends SoftCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SoftCache softCache0 = new SoftCache(localCache0, 1);
      Integer integer0 = new Integer((-2750));
      softCache0.putObject((Object) localCache0, (Object) "", integer0);
      softCache0.getObject(localCache0);
      assertEquals(1, localCache0.getSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.SoftCache$SoftEntry");
      SoftCache softCache0 = new SoftCache(localCache0, 1436);
      Object object0 = new Object();
      Integer integer0 = new Integer(3606);
      softCache0.putObject(object0, (Object) null, integer0);
      softCache0.getObject(object0);
      assertEquals(0, localCache0.getSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.SoftCache$SoftEntry");
      SoftCache softCache0 = new SoftCache(localCache0, 1436);
      Integer integer0 = Integer.getInteger("org.xson.tangyuan.cache.SoftCache$SoftEntry", (-2862));
      softCache0.putObject((Object) null, (Object) localCache0, integer0);
      softCache0.removeObject((Object) null);
      assertEquals(0, localCache0.getSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.SoftCache$SoftEntry");
      SoftCache softCache0 = new SoftCache(localCache0, 1436);
      Object object0 = softCache0.getObject("org.xson.tangyuan.cache.SoftCache$SoftEntry");
      Integer integer0 = new Integer(3606);
      softCache0.putObject(object0, (Object) null, integer0);
      int int0 = softCache0.getSize();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(loggingCache0);
      SoftCache softCache0 = new SoftCache(synchronizedCache0, (-957));
      int int0 = softCache0.getSize();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LocalCache localCache0 = new LocalCache((String) null);
      SoftCache softCache0 = new SoftCache(localCache0, 0);
      String string0 = softCache0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("9");
      WeakCache weakCache0 = new WeakCache(localCache0, (-1335));
      FIFOCache fIFOCache0 = new FIFOCache(weakCache0, 270);
      SoftCache softCache0 = new SoftCache(fIFOCache0, (-1));
      String string0 = softCache0.getId();
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      SoftCache softCache0 = new SoftCache(redisCache0, 1343);
      // Undeclared exception!
      try { 
        softCache0.removeObject(redisCache0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      LRUCache lRUCache0 = new LRUCache(loggingCache0, 443);
      SoftCache softCache0 = new SoftCache(lRUCache0, 443);
      Integer integer0 = new Integer(443);
      SoftReference<Integer> softReference0 = new SoftReference<Integer>(integer0, (ReferenceQueue<? super Integer>) null);
      // Undeclared exception!
      try { 
        softCache0.removeObject(softReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SoftCache softCache0 = new SoftCache(ehCacheCache0, (-1));
      SoftReference<Object> softReference0 = new SoftReference<Object>(softCache0);
      // Undeclared exception!
      try { 
        softCache0.removeObject(softReference0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      SoftCache softCache0 = new SoftCache(redisCache0, 1);
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        softCache0.putObject((Object) redisCache0, (Object) redisCache0, integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.io.NotSerializableException: org.xson.tangyuan.cache.SoftCache$SoftEntry
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      WeakCache weakCache0 = new WeakCache(loggingCache0, (-1));
      SoftCache softCache0 = new SoftCache(weakCache0, 2203);
      SoftReference<Object> softReference0 = new SoftReference<Object>((Object) null);
      // Undeclared exception!
      try { 
        softCache0.putObject((Object) null, (Object) softReference0, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      SoftCache softCache0 = new SoftCache(memcachedCache0, 0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        softCache0.putObject(object0, object0, (Integer) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SoftCache softCache0 = new SoftCache((ICache) null, 1);
      // Undeclared exception!
      try { 
        softCache0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SoftCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(loggingCache0);
      SoftCache softCache0 = new SoftCache(synchronizedCache0, (-957));
      // Undeclared exception!
      try { 
        softCache0.getObject((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // cache key does not allow null
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SoftCache softCache0 = new SoftCache((ICache) null, 16);
      // Undeclared exception!
      try { 
        softCache0.getObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SoftCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SoftCache softCache0 = new SoftCache(ehCacheCache0, 0);
      // Undeclared exception!
      try { 
        softCache0.getObject(ehCacheCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(loggingCache0);
      SoftCache softCache0 = new SoftCache(synchronizedCache0, (-957));
      // Undeclared exception!
      try { 
        softCache0.getObject(synchronizedCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.SoftCache$SoftEntry");
      SoftCache softCache0 = new SoftCache(localCache0, 1436);
      Integer integer0 = new Integer(3606);
      softCache0.putObject((Object) "org.xson.tangyuan.cache.SoftCache$SoftEntry", (Object) integer0);
      SoftCache softCache1 = new SoftCache(softCache0, 3606);
      // Undeclared exception!
      try { 
        softCache1.getObject("org.xson.tangyuan.cache.SoftCache$SoftEntry");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class java.lang.ref.SoftReference (java.lang.Integer and java.lang.ref.SoftReference are in module java.base of loader 'bootstrap')
         //
         verifyException("org.xson.tangyuan.cache.SoftCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ScheduledCache scheduledCache0 = new ScheduledCache((ICache) null, 232);
      LoggingCache loggingCache0 = new LoggingCache(scheduledCache0);
      SoftCache softCache0 = new SoftCache(loggingCache0, 232);
      // Undeclared exception!
      try { 
        softCache0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.ScheduledCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WeakCache weakCache0 = new WeakCache((ICache) null, 12);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(weakCache0);
      LRUCache lRUCache0 = new LRUCache(synchronizedCache0, 12);
      SoftCache softCache0 = new SoftCache(lRUCache0, 12);
      // Undeclared exception!
      try { 
        softCache0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.WeakCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      SoftCache softCache0 = new SoftCache(memcachedCache0, 0);
      // Undeclared exception!
      try { 
        softCache0.clear();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("serverlist");
      SoftCache softCache0 = new SoftCache(localCache0, 21);
      softCache0.setSize((-1));
      softCache0.putObject((Object) localCache0, (Object) "serverlist");
      softCache0.getObject(localCache0);
      assertEquals(1, localCache0.getSize());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SoftCache softCache0 = new SoftCache(localCache0, 2);
      String string0 = softCache0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.SoftCache$SoftEntry");
      SoftCache softCache0 = new SoftCache(localCache0, 1436);
      int int0 = softCache0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.SoftCache$SoftEntry");
      SoftCache softCache0 = new SoftCache(localCache0, 1436);
      softCache0.clear();
      assertEquals("org.xson.tangyuan.cache.SoftCache$SoftEntry", softCache0.getId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.ScheduledCache");
      SoftCache softCache0 = new SoftCache(localCache0, 1);
      Object object0 = new Object();
      Object object1 = softCache0.removeObject(object0);
      assertNull(object1);
  }
}
