/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:19:54 GMT 2022
 */

package org.xson.tangyuan.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.EhCacheCache;
import org.xson.tangyuan.cache.ICache;
import org.xson.tangyuan.cache.LocalCache;
import org.xson.tangyuan.cache.LoggingCache;
import org.xson.tangyuan.cache.MemcachedCache;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.ScheduledCache;
import org.xson.tangyuan.cache.SynchronizedCache;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoggingCache_ESTest extends LoggingCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LocalCache localCache0 = new LocalCache("Cache Hit Ratio [");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      loggingCache0.getObject("Cache Hit Ratio [");
      Object object0 = loggingCache0.getObject(memcachedCache0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      loggingCache0.stop();
      assertNull(loggingCache0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("org.xson.tangyuan.cache.MemcachedCache");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      loggingCache0.clear();
      assertEquals("org.xson.tangyuan.cache.MemcachedCache", loggingCache0.getId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("^$o.Wr3r-5}|-WK^|m");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      Integer integer0 = new Integer(0);
      loggingCache0.putObject((Object) "^$o.Wr3r-5}|-WK^|m", (Object) "^$o.Wr3r-5}|-WK^|m", integer0);
      Object object0 = loggingCache0.removeObject("^$o.Wr3r-5}|-WK^|m");
      assertEquals("^$o.Wr3r-5}|-WK^|m", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LocalCache localCache0 = new LocalCache("Cache Hit Ratio [");
      Integer integer0 = new Integer((-1215));
      localCache0.putObject((Object) memcachedCache0, (Object) "", integer0);
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      int int0 = loggingCache0.getSize();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      int int0 = loggingCache0.getSize();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      String string0 = loggingCache0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("W4W|?");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      String string0 = loggingCache0.getId();
      assertEquals("W4W|?", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      boolean boolean0 = loggingCache0.equals(localCache0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.stop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        loggingCache0.start("Cache Hit Ratio [", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("W4W|?");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        loggingCache0.start("W4W|?", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // This method subclass must implement
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      // Undeclared exception!
      try { 
        loggingCache0.removeObject(redisCache0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.removeObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.removeObject(synchronizedCache0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.removeObject(memcachedCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.removeObject(ehCacheCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      Integer integer0 = new Integer(50);
      // Undeclared exception!
      try { 
        loggingCache0.putObject((Object) redisCache0, (Object) null, integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        loggingCache0.putObject((Object) null, (Object) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        loggingCache0.putObject((Object) null, (Object) synchronizedCache0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      LoggingCache loggingCache0 = new LoggingCache(ehCacheCache0);
      Integer integer0 = new Integer(3);
      // Undeclared exception!
      try { 
        loggingCache0.putObject((Object) ehCacheCache0, (Object) ehCacheCache0, integer0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Element
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      LoggingCache loggingCache0 = new LoggingCache(ehCacheCache0);
      // Undeclared exception!
      try { 
        loggingCache0.getSize();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.getSize();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      // Undeclared exception!
      try { 
        loggingCache0.getObject(redisCache0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.getObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.getObject(synchronizedCache0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.getObject(memcachedCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.getObject(synchronizedCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.getId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LocalCache localCache0 = new LocalCache((String) null);
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      // Undeclared exception!
      try { 
        loggingCache0.equals(localCache0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cache instances require an ID.
         //
         verifyException("org.xson.tangyuan.cache.LocalCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.equals((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      ScheduledCache scheduledCache0 = new ScheduledCache(synchronizedCache0, 1800000);
      LoggingCache loggingCache0 = new LoggingCache(scheduledCache0);
      // Undeclared exception!
      try { 
        loggingCache0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LoggingCache loggingCache0 = new LoggingCache(memcachedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.clear();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      LoggingCache loggingCache0 = new LoggingCache(synchronizedCache0);
      // Undeclared exception!
      try { 
        loggingCache0.clear();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      LocalCache localCache0 = new LocalCache("Cache Hit Ratio [");
      Integer integer0 = new Integer((-1215));
      localCache0.putObject((Object) memcachedCache0, (Object) "", integer0);
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      Object object0 = loggingCache0.getObject(memcachedCache0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      String string0 = loggingCache0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.start("", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("Cache Hit Ratio [");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      int int0 = loggingCache0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("Cache Hit Ratio [");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      loggingCache0.hashCode();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("Cache Hit Ratio [");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      boolean boolean0 = loggingCache0.equals("Cache Hit Ratio [");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("Cache Hit Ratio [");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      Object object0 = loggingCache0.removeObject((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LoggingCache loggingCache0 = new LoggingCache((ICache) null);
      // Undeclared exception!
      try { 
        loggingCache0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.LoggingCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      LoggingCache loggingCache0 = new LoggingCache(localCache0);
      // Undeclared exception!
      try { 
        loggingCache0.stop();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // This method subclass must implement
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }
}
