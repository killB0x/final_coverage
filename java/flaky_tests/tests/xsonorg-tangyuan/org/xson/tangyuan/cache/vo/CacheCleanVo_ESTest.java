/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:42:09 GMT 2022
 */

package org.xson.tangyuan.cache.vo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.vo.CacheCleanVo;
import org.xson.tangyuan.cache.vo.CacheVo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CacheCleanVo_ESTest extends CacheCleanVo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo((CacheVo) null, "IYh1", stringArray0, "IYh1");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[17];
      CacheCleanVo cacheCleanVo0 = null;
      try {
        cacheCleanVo0 = new CacheCleanVo((CacheVo) null, (String) null, stringArray0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.vo.CacheBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo((CacheVo) null, "minSpareConnections", stringArray0, "minSpareConnections");
      // Undeclared exception!
      try { 
        cacheCleanVo0.removeObject("minSpareConnections");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.xson.tangyuan.TangYuanContainer
         //
         verifyException("org.xson.tangyuan.cache.vo.CacheCleanVo", e);
      }
  }
}
