/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:39:49 GMT 2022
 */

package org.xson.tangyuan.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.EhCacheCache;
import org.xson.tangyuan.cache.FIFOCache;
import org.xson.tangyuan.cache.ICache;
import org.xson.tangyuan.cache.LRUCache;
import org.xson.tangyuan.cache.LocalCache;
import org.xson.tangyuan.cache.LoggingCache;
import org.xson.tangyuan.cache.MemcachedCache;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.ScheduledCache;
import org.xson.tangyuan.cache.SynchronizedCache;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SynchronizedCache_ESTest extends SynchronizedCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(redisCache0);
      synchronizedCache0.stop();
      assertNull(synchronizedCache0.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("]MLWu]oEW?xub{I6m");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      Integer integer0 = new Integer(0);
      synchronizedCache0.putObject((Object) null, (Object) null, integer0);
      assertEquals("]MLWu]oEW?xub{I6m", synchronizedCache0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      Object object0 = synchronizedCache0.removeObject((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      localCache0.putObject((Object) "", (Object) "f^4e,YZ\"H'.");
      Object object0 = synchronizedCache0.removeObject("");
      assertEquals("f^4e,YZ\"H'.", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("Cache instances require an ID.");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      int int0 = synchronizedCache0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LocalCache localCache0 = new LocalCache(":/VD[^5 )>U^6");
      ScheduledCache scheduledCache0 = new ScheduledCache(localCache0, 527);
      LRUCache lRUCache0 = new LRUCache(scheduledCache0, 527);
      Integer integer0 = new Integer((-1202));
      lRUCache0.putObject((Object) ":/VD[^5 )>U^6", (Object) scheduledCache0, integer0);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(lRUCache0);
      int int0 = synchronizedCache0.getSize();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      FIFOCache fIFOCache0 = new FIFOCache(redisCache0, 206);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(fIFOCache0);
      int int0 = synchronizedCache0.getSize();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      Object object0 = synchronizedCache0.getObject((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("tYQYX");
      Object object0 = new Object();
      Integer integer0 = new Integer(464);
      localCache0.putObject((Object) "tYQYX", object0, integer0);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      Object object1 = synchronizedCache0.getObject("tYQYX");
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      LoggingCache loggingCache0 = new LoggingCache(redisCache0);
      LRUCache lRUCache0 = new LRUCache(loggingCache0, 3864);
      ScheduledCache scheduledCache0 = new ScheduledCache(lRUCache0, 3864);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(scheduledCache0);
      String string0 = synchronizedCache0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalCache localCache0 = new LocalCache(":/VD[^5 )>U^6");
      ScheduledCache scheduledCache0 = new ScheduledCache(localCache0, 527);
      LRUCache lRUCache0 = new LRUCache(scheduledCache0, 527);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(lRUCache0);
      String string0 = synchronizedCache0.getId();
      assertEquals(":/VD[^5 )>U^6", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.stop();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // This method subclass must implement
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(redisCache0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        synchronizedCache0.start("nx", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.start("", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // This method subclass must implement
         //
         verifyException("org.xson.tangyuan.cache.AbstractCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(redisCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.removeObject(redisCache0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      // Undeclared exception!
      try { 
        synchronizedCache0.removeObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalCache localCache0 = new LocalCache((String) null);
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        synchronizedCache0.putObject((Object) localCache0, (Object) localCache0, integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cache instances require an ID.
         //
         verifyException("org.xson.tangyuan.cache.LocalCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      Integer integer0 = new Integer((-1275));
      // Undeclared exception!
      try { 
        synchronizedCache0.putObject((Object) null, (Object) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(memcachedCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.putObject((Object) memcachedCache0, (Object) memcachedCache0, (Integer) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.getSize();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RedisCache redisCache0 = new RedisCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(redisCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.getObject(redisCache0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        synchronizedCache0.getObject(object0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      // Undeclared exception!
      try { 
        synchronizedCache0.getId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MemcachedCache memcachedCache0 = new MemcachedCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(memcachedCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.clear();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        synchronizedCache0.putObject(object0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      synchronizedCache0.clear();
      assertEquals("", synchronizedCache0.getId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocalCache localCache0 = new LocalCache("");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      String string0 = synchronizedCache0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      // Undeclared exception!
      try { 
        synchronizedCache0.getObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      // Undeclared exception!
      try { 
        synchronizedCache0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      // Undeclared exception!
      try { 
        synchronizedCache0.stop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(ehCacheCache0);
      // Undeclared exception!
      try { 
        synchronizedCache0.removeObject(ehCacheCache0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // net/sf/ehcache/Cache
         //
         verifyException("org.xson.tangyuan.cache.EhCacheCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SynchronizedCache synchronizedCache0 = new SynchronizedCache((ICache) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        synchronizedCache0.start(" 7MP", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.cache.SynchronizedCache", e);
      }
  }
}
