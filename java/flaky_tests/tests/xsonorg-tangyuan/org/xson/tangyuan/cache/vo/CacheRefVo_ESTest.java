/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:45:39 GMT 2022
 */

package org.xson.tangyuan.cache.vo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.EhCacheCache;
import org.xson.tangyuan.cache.LocalCache;
import org.xson.tangyuan.cache.LoggingCache;
import org.xson.tangyuan.cache.SoftCache;
import org.xson.tangyuan.cache.vo.CacheRefVo;
import org.xson.tangyuan.cache.vo.CacheVo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CacheRefVo_ESTest extends CacheRefVo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheRefVo cacheRefVo0 = new CacheRefVo((CacheVo) null, (String[]) null, (String[]) null);
      String[] stringArray0 = cacheRefVo0.getInclude();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.REDIS;
      LocalCache localCache0 = new LocalCache((String) null);
      SoftCache softCache0 = new SoftCache(localCache0, (-1623));
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CacheVo cacheVo0 = new CacheVo("QX;m6", cacheVo_CacheType0, softCache0, true, "", hashMap0);
      String[] stringArray0 = new String[0];
      CacheRefVo cacheRefVo0 = new CacheRefVo(cacheVo0, stringArray0, stringArray0);
      String[] stringArray1 = cacheRefVo0.getInclude();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CacheRefVo cacheRefVo0 = new CacheRefVo((CacheVo) null, (String[]) null, (String[]) null);
      String[] stringArray0 = cacheRefVo0.getExclude();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CacheVo cacheVo0 = new CacheVo("", false);
      String[] stringArray0 = new String[3];
      String[] stringArray1 = new String[0];
      CacheRefVo cacheRefVo0 = new CacheRefVo(cacheVo0, stringArray0, stringArray1);
      String[] stringArray2 = cacheRefVo0.getExclude();
      assertEquals(0, stringArray2.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.REDIS;
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      LoggingCache loggingCache0 = new LoggingCache(ehCacheCache0);
      CacheVo cacheVo0 = new CacheVo("M*0G&7!g|Ge4G", cacheVo_CacheType0, loggingCache0, false, "M*0G&7!g|Ge4G", (Map<String, String>) null);
      String[] stringArray0 = new String[5];
      cacheVo0.group = true;
      CacheRefVo cacheRefVo0 = new CacheRefVo(cacheVo0, stringArray0, stringArray0);
      CacheVo cacheVo1 = cacheRefVo0.getCacheVo();
      assertTrue(cacheVo1.isGroup());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.REDIS;
      EhCacheCache ehCacheCache0 = new EhCacheCache();
      LoggingCache loggingCache0 = new LoggingCache(ehCacheCache0);
      CacheVo cacheVo0 = new CacheVo("M*0G&7!g|Ge4G", cacheVo_CacheType0, loggingCache0, false, "M*0G&7!g|Ge4G", (Map<String, String>) null);
      String[] stringArray0 = new String[5];
      CacheRefVo cacheRefVo0 = new CacheRefVo(cacheVo0, stringArray0, stringArray0);
      CacheVo cacheVo1 = cacheRefVo0.getCacheVo();
      assertEquals("M*0G&7!g|Ge4G", cacheVo1.getId());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CacheVo cacheVo0 = new CacheVo("M*0G&7!g|Ge4G", true);
      String[] stringArray0 = new String[5];
      CacheRefVo cacheRefVo0 = new CacheRefVo(cacheVo0, stringArray0, stringArray0);
      String[] stringArray1 = cacheRefVo0.getExclude();
      assertEquals(5, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CacheVo cacheVo0 = new CacheVo("M*0G&7!g|Ge4G", true);
      String[] stringArray0 = new String[5];
      CacheRefVo cacheRefVo0 = new CacheRefVo(cacheVo0, stringArray0, stringArray0);
      CacheVo cacheVo1 = cacheRefVo0.getCacheVo();
      assertSame(cacheVo0, cacheVo1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CacheVo cacheVo0 = new CacheVo("M*0G&7!g|Ge4G", true);
      String[] stringArray0 = new String[5];
      CacheRefVo cacheRefVo0 = new CacheRefVo(cacheVo0, stringArray0, stringArray0);
      String[] stringArray1 = cacheRefVo0.getInclude();
      assertEquals(5, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CacheRefVo cacheRefVo0 = new CacheRefVo((CacheVo) null, (String[]) null, (String[]) null);
      CacheVo cacheVo0 = cacheRefVo0.getCacheVo();
      assertNull(cacheVo0);
  }
}
