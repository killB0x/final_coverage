/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:05:54 GMT 2022
 */

package org.xson.tangyuan.xml.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.WeakCache;
import org.xson.tangyuan.cache.vo.CacheCleanVo;
import org.xson.tangyuan.cache.vo.CacheVo;
import org.xson.tangyuan.executor.ServiceContext;
import org.xson.tangyuan.ognl.vars.VariableVo;
import org.xson.tangyuan.xml.node.ForEachNode;
import org.xson.tangyuan.xml.node.InternalDeleteNode;
import org.xson.tangyuan.xml.node.ProcedureNode;
import org.xson.tangyuan.xml.node.SqlNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InternalDeleteNode_ESTest extends InternalDeleteNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProcedureNode procedureNode0 = new ProcedureNode();
      VariableVo variableVo0 = mock(VariableVo.class, new ViolatedAssumptionAnswer());
      ForEachNode forEachNode0 = new ForEachNode(procedureNode0, variableVo0, "rYT(Zf_E{Eb", (String) null, "Jl/?u|M/*v!", "@z>s_@1qBM]fZ?BH");
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.REDIS;
      RedisCache redisCache0 = new RedisCache();
      WeakCache weakCache0 = new WeakCache(redisCache0, (-748));
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CacheVo cacheVo0 = new CacheVo((String) null, cacheVo_CacheType0, weakCache0, true, (String) null, hashMap0);
      String[] stringArray0 = new String[5];
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo(cacheVo0, "3wW4Qk\"FF", stringArray0, (String) null);
      InternalDeleteNode internalDeleteNode0 = new InternalDeleteNode("service", "@z>s_@1qBM]fZ?BH", forEachNode0, cacheCleanVo0);
      assertFalse(internalDeleteNode0.isSimple());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InternalDeleteNode internalDeleteNode0 = new InternalDeleteNode("(e?8c", "(e?8c", (SqlNode) null, (CacheCleanVo) null);
      try { 
        internalDeleteNode0.execute((ServiceContext) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.InternalDeleteNode", e);
      }
  }
}
