/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:14:51 GMT 2022
 */

package org.xson.tangyuan.xml.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.vo.CacheCleanVo;
import org.xson.tangyuan.executor.ServiceContext;
import org.xson.tangyuan.transaction.XTransactionDefinition;
import org.xson.tangyuan.xml.node.DeleteNode;
import org.xson.tangyuan.xml.node.SqlNode;
import org.xson.tangyuan.xml.node.StaticTextNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeleteNode_ESTest extends DeleteNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition((String) null);
      DeleteNode deleteNode0 = new DeleteNode("org.xson.tangyuan.xml.XmlParseException", "org.xson.tangyuan.xml.XmlParseException", "", (String) null, xTransactionDefinition0, (SqlNode) null, (CacheCleanVo) null);
      assertTrue(deleteNode0.isSimple());
      assertEquals("", deleteNode0.getServiceKey());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("lAG");
      StaticTextNode staticTextNode0 = new StaticTextNode("CO,/Gke.?p3q{O");
      DeleteNode deleteNode0 = new DeleteNode("CO,/Gke.?p3q{O", "", "CO,/Gke.?p3q{O", "<w:vcb,M?W8l++0%", xTransactionDefinition0, staticTextNode0, (CacheCleanVo) null);
      assertTrue(deleteNode0.isSimple());
      assertEquals("<w:vcb,M?W8l++0%", deleteNode0.getDsKey());
      assertEquals("CO,/Gke.?p3q{O", deleteNode0.getServiceKey());
      assertEquals("", deleteNode0.getNs());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("org.xson.tangyFan.ml.|mlParseException");
      DeleteNode deleteNode0 = new DeleteNode("org.xson.tangyFan.ml.|mlParseException", "org.xson.tangyFan.ml.|mlParseException", "org.xson.tangyFan.ml.|mlParseException", "org.xson.tangyFan.ml.|mlParseException", xTransactionDefinition0, (SqlNode) null, (CacheCleanVo) null);
      try { 
        deleteNode0.execute((ServiceContext) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.DeleteNode", e);
      }
  }
}
