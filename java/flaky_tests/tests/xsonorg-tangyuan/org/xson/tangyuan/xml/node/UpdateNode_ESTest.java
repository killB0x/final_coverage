/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:17:23 GMT 2022
 */

package org.xson.tangyuan.xml.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.vo.CacheCleanVo;
import org.xson.tangyuan.cache.vo.CacheVo;
import org.xson.tangyuan.executor.ServiceContext;
import org.xson.tangyuan.transaction.XTransactionDefinition;
import org.xson.tangyuan.xml.node.DynamicTextNode;
import org.xson.tangyuan.xml.node.UpdateNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UpdateNode_ESTest extends UpdateNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(270);
      Boolean boolean0 = Boolean.TRUE;
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("5level slow sql service ", "@fuEO2>oy7WYM3+XAsm", integer0, integer0, integer0, boolean0);
      DynamicTextNode dynamicTextNode0 = new DynamicTextNode("pim");
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.EHCACHE;
      RedisCache redisCache0 = new RedisCache();
      CacheVo cacheVo0 = new CacheVo((String) null, cacheVo_CacheType0, redisCache0, false, (String) null, (Map<String, String>) null);
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo(cacheVo0, "org.xson.tangyuan.xml.node.SelectSetNode", (String[]) null, "5level slow sql service ");
      UpdateNode updateNode0 = new UpdateNode((String) null, "@fuEO2>oy7WYM3+XAsm", "", "sql execution time: ", xTransactionDefinition0, dynamicTextNode0, cacheCleanVo0);
      assertEquals("sql execution time: ", updateNode0.getDsKey());
      assertEquals("", updateNode0.getServiceKey());
      assertTrue(updateNode0.isSimple());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("c@,=}E");
      DynamicTextNode dynamicTextNode0 = new DynamicTextNode("c@,=}E");
      UpdateNode updateNode0 = new UpdateNode("c@,=}E", "c@,=}E", "c@,=}E", "c@,=}E", xTransactionDefinition0, dynamicTextNode0, (CacheCleanVo) null);
      try { 
        updateNode0.execute((ServiceContext) null, dynamicTextNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.UpdateNode", e);
      }
  }
}
