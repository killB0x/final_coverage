/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:30:47 GMT 2022
 */

package org.xson.tangyuan.xml.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.ICache;
import org.xson.tangyuan.cache.LocalCache;
import org.xson.tangyuan.cache.MemcachedCache;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.SoftCache;
import org.xson.tangyuan.cache.SynchronizedCache;
import org.xson.tangyuan.cache.WeakCache;
import org.xson.tangyuan.cache.vo.CacheCleanVo;
import org.xson.tangyuan.cache.vo.CacheUseVo;
import org.xson.tangyuan.cache.vo.CacheVo;
import org.xson.tangyuan.executor.ServiceContext;
import org.xson.tangyuan.mapping.DefaultMappingHandler;
import org.xson.tangyuan.mapping.MappingVo;
import org.xson.tangyuan.ognl.expr.ExprGroupVo;
import org.xson.tangyuan.transaction.XTransactionDefinition;
import org.xson.tangyuan.xml.node.DynamicTextNode;
import org.xson.tangyuan.xml.node.ExceptionNode;
import org.xson.tangyuan.xml.node.InsertNode;
import org.xson.tangyuan.xml.node.SelectSetNode;
import org.xson.tangyuan.xml.node.SelectVarNode;
import org.xson.tangyuan.xml.node.SqlNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SelectSetNode_ESTest extends SelectSetNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("");
      Class<Object> class0 = Object.class;
      SelectSetNode selectSetNode0 = new SelectSetNode("", "", "", class0, (MappingVo) null, "", (Integer) 1, xTransactionDefinition0, (SqlNode) null, (CacheUseVo) null);
      // Undeclared exception!
      try { 
        selectSetNode0.getResult((ServiceContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.SelectSetNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("e 9Kfz[`HQ|Fu1dw");
      Class<Object> class0 = Object.class;
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.EHCACHE;
      RedisCache redisCache0 = new RedisCache();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CacheVo cacheVo0 = new CacheVo("Ewdo#KNB?X(6sI@", cacheVo_CacheType0, redisCache0, true, "jI6?vv[{,6 gzPjlHC~", hashMap0);
      String[] stringArray0 = new String[2];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, "jI6?vv[{,6 gzPjlHC~", (Integer) null, stringArray0, "");
      SelectSetNode selectSetNode0 = new SelectSetNode("", "e 9Kfz[`HQ|Fu1dw", "", class0, (MappingVo) null, "", (Integer) 4, xTransactionDefinition0, (SqlNode) null, cacheUseVo0);
      try { 
        selectSetNode0.execute((ServiceContext) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("8");
      Class<Object> class0 = Object.class;
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.LOCAL;
      MemcachedCache memcachedCache0 = new MemcachedCache();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CacheVo cacheVo0 = new CacheVo("@aL~q", cacheVo_CacheType0, memcachedCache0, true, "4o1}'TFZVed", hashMap0);
      String[] stringArray0 = new String[0];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, "4o1}'TFZVed", (Integer) xTransactionDefinition0.TIMEOUT_DEFAULT, stringArray0, "");
      SelectSetNode selectSetNode0 = new SelectSetNode("@aL~q", "8", "@aL~q", class0, (MappingVo) null, "@aL~q", (Integer) (-1), xTransactionDefinition0, (SqlNode) null, cacheUseVo0);
      try { 
        selectSetNode0.execute((ServiceContext) null, hashMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      DynamicTextNode dynamicTextNode0 = new DynamicTextNode("0_bq~x@W[8");
      Integer integer0 = new Integer((-16));
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.MEMCACHE;
      LocalCache localCache0 = new LocalCache("0_bq~x@W[8");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      WeakCache weakCache0 = new WeakCache(synchronizedCache0, (-16));
      CacheVo cacheVo0 = new CacheVo("0_bq~x@W[8", cacheVo_CacheType0, weakCache0, false, "0_bq~x@W[8", (Map<String, String>) null);
      String[] stringArray0 = new String[13];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, "0_bq~x@W[8", integer0, stringArray0, "0_bq~x@W[8");
      Class<Object> class0 = Object.class;
      Class<SelectSetNode> class1 = SelectSetNode.class;
      MappingVo mappingVo0 = new MappingVo("", "org.xson.tangyuan.mapping.MappingVo", class1, defaultMappingHandler0, (Map<String, String>) null);
      SoftCache softCache0 = new SoftCache(synchronizedCache0, 1);
      CacheVo cacheVo1 = new CacheVo("0_bq~x@W[8", cacheVo_CacheType0, softCache0, false, "org.xson.tangyuan.executor.ServiceException", (Map<String, String>) null);
      cacheVo1.putObject("0_bq~x@W[8", class0, integer0, stringArray0, "0_bq~x@W[8");
      SelectSetNode selectSetNode0 = new SelectSetNode("I8k'OqjV(av:{1Bl5V", "0_bq~x@W[8", "org.xson.tangyuan.mapping.MappingVo", class0, mappingVo0, "1", integer0, (XTransactionDefinition) null, dynamicTextNode0, cacheUseVo0);
      try { 
        selectSetNode0.execute((ServiceContext) null, "org.xson.tangyuan.executor.ServiceException");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.xson.tangyuan.cache.SoftCache$SoftEntry cannot be cast to class java.lang.ref.WeakReference (org.xson.tangyuan.cache.SoftCache$SoftEntry is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1703f23b; java.lang.ref.WeakReference is in module java.base of loader 'bootstrap')
         //
         verifyException("org.xson.tangyuan.cache.WeakCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<SelectSetNode> class1 = SelectSetNode.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo(",oM_F3", ",oM_F3", class1, defaultMappingHandler0, hashMap0);
      Integer integer0 = Integer.valueOf(1604);
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition((String) null);
      ExprGroupVo exprGroupVo0 = new ExprGroupVo();
      ExceptionNode exceptionNode0 = new ExceptionNode(exprGroupVo0, 2582, "", "T<W\"_");
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.EHCACHE;
      CacheVo cacheVo0 = new CacheVo("\":>T&a]ePk$c7/[=h}", cacheVo_CacheType0, (ICache) null, true, "K&WH~`M", hashMap0);
      String[] stringArray0 = new String[9];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, "", (Integer) xTransactionDefinition0.PROPAGATION_REQUIRED, stringArray0, (String) null);
      SelectVarNode selectVarNode0 = new SelectVarNode("\":>T&a]ePk$c7/[=h}", "\":>T&a]ePk$c7/[=h}", "\":>T&a]ePk$c7/[=h}", "\":>T&a]ePk$c7/[=h}", xTransactionDefinition0, exceptionNode0, cacheUseVo0);
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo(cacheVo0, "(}bief~u(.", stringArray0, (String) null);
      InsertNode insertNode0 = new InsertNode("K&WH~`M", "`gJ", "K&WH~`M", class0, "`gJ", xTransactionDefinition0, selectVarNode0, cacheCleanVo0);
      SelectSetNode selectSetNode0 = new SelectSetNode(",oM_F3", ",oM_F3", ",oM_F3", class0, mappingVo0, "sql execution time: ", integer0, xTransactionDefinition0, insertNode0, cacheUseVo0);
      Class<?> class2 = selectSetNode0.getResultType();
      assertEquals("sql execution time: ", selectSetNode0.getDsKey());
      assertTrue(selectSetNode0.isSimple());
      assertEquals("class java.lang.Object", class2.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("");
      SelectSetNode selectSetNode0 = new SelectSetNode("yZ]0UpW0", "3.OtL[jPRBUu)7A_>", "", (Class<?>) null, (MappingVo) null, "", (Integer) xTransactionDefinition0.PROPAGATION_NOT_SUPPORTED, xTransactionDefinition0, (SqlNode) null, (CacheUseVo) null);
      // Undeclared exception!
      try { 
        selectSetNode0.getResultType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.SelectSetNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      DynamicTextNode dynamicTextNode0 = new DynamicTextNode("0_bq~x@W[8");
      Integer integer0 = new Integer((-16));
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.MEMCACHE;
      LocalCache localCache0 = new LocalCache("0_bq~x@W[8");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      WeakCache weakCache0 = new WeakCache(synchronizedCache0, (-16));
      CacheVo cacheVo0 = new CacheVo("0_bq~x@W[8", cacheVo_CacheType0, weakCache0, true, "0_bq~x@W[8", (Map<String, String>) null);
      String[] stringArray0 = new String[13];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, "0_bq~x@W[8", integer0, stringArray0, "0_bq~x@W[8");
      Class<Object> class0 = Object.class;
      MappingVo mappingVo0 = new MappingVo(stringArray0[0], "0_bq~x@W[8", class0, defaultMappingHandler0, (Map<String, String>) null);
      cacheVo0.putObject("0_bq~x@W[8", "0_bq~x@W[8", integer0, stringArray0, "0_bq~x@W[8");
      SelectSetNode selectSetNode0 = new SelectSetNode("0_bq~x@W[8", "0_bq~x@W[8", "0_bq~x@W[8", class0, mappingVo0, "0_bq~x@W[8", integer0, (XTransactionDefinition) null, dynamicTextNode0, cacheUseVo0);
      try { 
        selectSetNode0.execute((ServiceContext) null, cacheVo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.SelectSetNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<SelectSetNode> class0 = SelectSetNode.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      MappingVo mappingVo0 = new MappingVo("0_q~x@W[8", "[rjgb#X9&", class0, defaultMappingHandler0, (Map<String, String>) null);
      DynamicTextNode dynamicTextNode0 = new DynamicTextNode("oN~(U_");
      Integer integer0 = new Integer(5313);
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.REDIS;
      LocalCache localCache0 = new LocalCache(">guP8.M1xs<Q");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      WeakCache weakCache0 = new WeakCache(synchronizedCache0, 0);
      CacheVo cacheVo0 = new CacheVo("0_q~x@W[8", cacheVo_CacheType0, weakCache0, false, "oN~(U_", (Map<String, String>) null);
      String[] stringArray0 = new String[1];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, ")6}1)xC\"R.5hpRp ", integer0, stringArray0, ">guP8.M1xs<Q");
      SelectSetNode selectSetNode0 = new SelectSetNode("!}*xV;H", "!}*xV;H", "!}*xV;H", class0, mappingVo0, "Field does not exist: ", integer0, (XTransactionDefinition) null, dynamicTextNode0, cacheUseVo0);
      try { 
        selectSetNode0.execute((ServiceContext) null, weakCache0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.SelectSetNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("G");
      Class<Object> class0 = Object.class;
      SelectSetNode selectSetNode0 = new SelectSetNode("G", "G", "G", class0, (MappingVo) null, "G", (Integer) 1, xTransactionDefinition0, (SqlNode) null, (CacheUseVo) null);
      try { 
        selectSetNode0.execute((ServiceContext) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.SelectSetNode", e);
      }
  }
}
