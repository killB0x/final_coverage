/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:59:22 GMT 2022
 */

package org.xson.tangyuan.xml.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.cache.LocalCache;
import org.xson.tangyuan.cache.MemcachedCache;
import org.xson.tangyuan.cache.RedisCache;
import org.xson.tangyuan.cache.SoftCache;
import org.xson.tangyuan.cache.SynchronizedCache;
import org.xson.tangyuan.cache.vo.CacheCleanVo;
import org.xson.tangyuan.cache.vo.CacheUseVo;
import org.xson.tangyuan.cache.vo.CacheVo;
import org.xson.tangyuan.executor.ServiceContext;
import org.xson.tangyuan.transaction.XTransactionDefinition;
import org.xson.tangyuan.xml.node.LogNode;
import org.xson.tangyuan.xml.node.ServiceNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ServiceNode_ESTest extends ServiceNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition(")cVzGL>");
      LogNode logNode0 = new LogNode(4, ")cVzGL>");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String[] stringArray0 = new String[6];
      Class<ServiceNode> class0 = ServiceNode.class;
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.EHCACHE;
      RedisCache redisCache0 = new RedisCache();
      CacheVo cacheVo0 = new CacheVo("n|$q]<+vu`~SV*", cacheVo_CacheType0, redisCache0, true, "n|$q]<+vu`~SV*", hashMap0);
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, "c0A1AW_y-kg", (Integer) 1, stringArray0, ")cVzGL>");
      ServiceNode serviceNode0 = new ServiceNode("}tm'/e,/YvH8K}!B", "}tm'/e,/YvH8K}!B", "}tm'/e,/YvH8K}!B", ")cVzGL>", xTransactionDefinition0, logNode0, cacheUseVo0, (CacheCleanVo) null, class0);
      Object object0 = new Object();
      try { 
        serviceNode0.execute((ServiceContext) null, object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: org/xson/thirdparty/redis/JedisClient
         //
         verifyException("org.xson.tangyuan.cache.RedisCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition(")cVzaL8");
      LogNode logNode0 = new LogNode(4, ")cVzaL8");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.MEMCACHE;
      MemcachedCache memcachedCache0 = new MemcachedCache();
      CacheVo cacheVo0 = new CacheVo(")cVzaL8", cacheVo_CacheType0, memcachedCache0, true, ")cVzaL8", hashMap0);
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, ")cVzaL8", (Integer) 5, (String[]) null, "7ry\"l");
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo(cacheVo0, "7ry\"l", (String[]) null, "7ry\"l");
      Class<ServiceNode> class0 = ServiceNode.class;
      ServiceNode serviceNode0 = new ServiceNode("7ry\"l", "==", "wLb[tFLwt#-L#G-u", "7ry\"l", xTransactionDefinition0, logNode0, cacheUseVo0, cacheCleanVo0, class0);
      try { 
        serviceNode0.execute((ServiceContext) null, "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/whalin/MemCached/MemCachedClient
         //
         verifyException("org.xson.tangyuan.cache.MemcachedCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition("cVzGL>");
      LogNode logNode0 = new LogNode(4, "cVzGL>");
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.LOCAL;
      LocalCache localCache0 = new LocalCache("cVzGL>");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      synchronizedCache0.putObject((Object) "cVzGL>", (Object) logNode0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SoftCache softCache0 = new SoftCache(localCache0, 0);
      CacheVo cacheVo0 = new CacheVo("cVzGL>", cacheVo_CacheType0, softCache0, true, "", hashMap0);
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, "cVzGL>", (Integer) 4, (String[]) null, "org.xson.tangyuan.xml.node.TransGroupNode");
      String[] stringArray0 = new String[7];
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo(cacheVo0, "dIU<T", stringArray0, "");
      Class<ServiceNode> class0 = ServiceNode.class;
      ServiceNode serviceNode0 = new ServiceNode((String) null, "org.xson.tangyuan.xml.node.TransGroupNode", "y0t`MBIr%>fi|J$)\"", (String) null, xTransactionDefinition0, logNode0, cacheUseVo0, cacheCleanVo0, class0);
      try { 
        serviceNode0.execute((ServiceContext) null, "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.xson.tangyuan.xml.node.LogNode cannot be cast to class java.lang.ref.SoftReference (org.xson.tangyuan.xml.node.LogNode is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @668394c1; java.lang.ref.SoftReference is in module java.base of loader 'bootstrap')
         //
         verifyException("org.xson.tangyuan.cache.SoftCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition(")cVzGL>");
      LogNode logNode0 = new LogNode(4, ")cVzGL>");
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.EHCACHE;
      LocalCache localCache0 = new LocalCache(")cVzGL>");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      synchronizedCache0.putObject((Object) ")cVzGL>", (Object) logNode0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CacheVo cacheVo0 = new CacheVo(")cVzGL>", cacheVo_CacheType0, synchronizedCache0, true, ")cVzGL>", hashMap0);
      String[] stringArray0 = new String[0];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, ")cVzGL>", (Integer) 6, stringArray0, ")cVzGL>");
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo(cacheVo0, ")cVzGL>", stringArray0, ")cVzGL>");
      Class<ServiceNode> class0 = ServiceNode.class;
      ServiceNode serviceNode0 = new ServiceNode(")cVzGL>", ")cVzGL>", ")cVzGL>", ")cVzGL>", xTransactionDefinition0, logNode0, cacheUseVo0, cacheCleanVo0, class0);
      try { 
        serviceNode0.execute((ServiceContext) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.ServiceNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition(")cVzGL>");
      LogNode logNode0 = new LogNode(4, ")cVzGL>");
      Class<Object> class0 = Object.class;
      ServiceNode serviceNode0 = new ServiceNode(")cVzGL>", ")cVzGL>", ")cVzGL>", ")cVzGL>", xTransactionDefinition0, logNode0, (CacheUseVo) null, (CacheCleanVo) null, class0);
      try { 
        serviceNode0.execute((ServiceContext) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.ServiceNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XTransactionDefinition xTransactionDefinition0 = new XTransactionDefinition(")cVzGL>");
      LogNode logNode0 = new LogNode(4, ")cVzGL>");
      CacheVo.CacheType cacheVo_CacheType0 = CacheVo.CacheType.EHCACHE;
      LocalCache localCache0 = new LocalCache(")cVzGL>");
      SynchronizedCache synchronizedCache0 = new SynchronizedCache(localCache0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CacheVo cacheVo0 = new CacheVo(")cVzGL>", cacheVo_CacheType0, synchronizedCache0, true, ")cVzGL>", hashMap0);
      String[] stringArray0 = new String[0];
      CacheUseVo cacheUseVo0 = new CacheUseVo(cacheVo0, ")cVzGL>", (Integer) 6, stringArray0, ")cVzGL>");
      CacheCleanVo cacheCleanVo0 = new CacheCleanVo(cacheVo0, ")cVzGL>", stringArray0, ")cVzGL>");
      Class<ServiceNode> class0 = ServiceNode.class;
      ServiceNode serviceNode0 = new ServiceNode(")cVzGL>", ")cVzGL>", ")cVzGL>", ")cVzGL>", xTransactionDefinition0, logNode0, cacheUseVo0, cacheCleanVo0, class0);
      try { 
        serviceNode0.execute((ServiceContext) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.xml.node.ServiceNode", e);
      }
  }
}
