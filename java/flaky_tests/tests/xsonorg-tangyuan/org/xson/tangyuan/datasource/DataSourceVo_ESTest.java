/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:35:34 GMT 2022
 */

package org.xson.tangyuan.datasource;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.datasource.DataSourceVo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataSourceVo_ESTest extends DataSourceVo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.JNDI;
      DataSourceVo dataSourceVo0 = new DataSourceVo("/QI)*l3um_0Hl '", dataSourceVo_ConnPoolType0, true, (Map<String, String>) null);
      assertFalse(dataSourceVo0.isGroup());
      
      dataSourceVo0.group = true;
      dataSourceVo0.isGroup();
      assertTrue(dataSourceVo0.isDefaultDs());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.DRUID;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo dataSourceVo0 = new DataSourceVo("", dataSourceVo_ConnPoolType0, true, hashMap0);
      boolean boolean0 = dataSourceVo0.isDefaultDs();
      assertTrue(boolean0);
      assertFalse(dataSourceVo0.isGroup());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.DBCP;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo dataSourceVo0 = new DataSourceVo((String) null, dataSourceVo_ConnPoolType0, false, hashMap0);
      dataSourceVo0.getType();
      assertFalse(dataSourceVo0.isGroup());
      assertFalse(dataSourceVo0.isDefaultDs());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.DBCP;
      DataSourceVo dataSourceVo0 = new DataSourceVo("", dataSourceVo_ConnPoolType0, true, (Map<String, String>) null);
      dataSourceVo0.getProperties();
      assertTrue(dataSourceVo0.isDefaultDs());
      assertFalse(dataSourceVo0.isGroup());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      DataSourceVo dataSourceVo0 = new DataSourceVo("", (DataSourceVo.ConnPoolType) null, true, hashMap0);
      dataSourceVo0.getProperties();
      assertTrue(dataSourceVo0.isDefaultDs());
      assertFalse(dataSourceVo0.isGroup());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.C3P0;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo dataSourceVo0 = new DataSourceVo((String) null, dataSourceVo_ConnPoolType0, false, hashMap0);
      dataSourceVo0.getId();
      assertFalse(dataSourceVo0.isGroup());
      assertFalse(dataSourceVo0.isDefaultDs());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.DBCP;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo dataSourceVo0 = new DataSourceVo("", dataSourceVo_ConnPoolType0, false, hashMap0);
      dataSourceVo0.getId();
      assertFalse(dataSourceVo0.isGroup());
      assertFalse(dataSourceVo0.isDefaultDs());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo dataSourceVo0 = new DataSourceVo("", (DataSourceVo.ConnPoolType) null, true, hashMap0);
      dataSourceVo0.getProperties();
      assertTrue(dataSourceVo0.isDefaultDs());
      assertFalse(dataSourceVo0.isGroup());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo dataSourceVo0 = new DataSourceVo("", (DataSourceVo.ConnPoolType) null, true, hashMap0);
      dataSourceVo0.getType();
      assertFalse(dataSourceVo0.isGroup());
      assertTrue(dataSourceVo0.isDefaultDs());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.DBCP;
      DataSourceVo dataSourceVo0 = new DataSourceVo("JNDI", dataSourceVo_ConnPoolType0, false, hashMap0);
      boolean boolean0 = dataSourceVo0.isGroup();
      assertFalse(dataSourceVo0.isDefaultDs());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.PROXOOL;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DataSourceVo dataSourceVo0 = new DataSourceVo("", dataSourceVo_ConnPoolType0, false, hashMap0);
      boolean boolean0 = dataSourceVo0.isDefaultDs();
      assertFalse(dataSourceVo0.isGroup());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataSourceVo.ConnPoolType dataSourceVo_ConnPoolType0 = DataSourceVo.ConnPoolType.JNDI;
      DataSourceVo dataSourceVo0 = new DataSourceVo("/QI)*l3um_0Hl '", dataSourceVo_ConnPoolType0, true, (Map<String, String>) null);
      dataSourceVo0.getId();
      assertTrue(dataSourceVo0.isDefaultDs());
      assertFalse(dataSourceVo0.isGroup());
  }
}
