/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:21:28 GMT 2022
 */

package org.xson.tangyuan.executor.monitor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xson.tangyuan.executor.monitor.MonitorWriter;
import org.xson.tangyuan.executor.monitor.SqlServiceContextInfo;
import org.xson.tangyuan.executor.monitor.SqlServiceMonitor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SqlServiceMonitor_ESTest extends SqlServiceMonitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MonitorWriter monitorWriter0 = mock(MonitorWriter.class, new ViolatedAssumptionAnswer());
      SqlServiceMonitor sqlServiceMonitor0 = new SqlServiceMonitor(monitorWriter0);
      sqlServiceMonitor0.start();
      SqlServiceContextInfo sqlServiceContextInfo0 = new SqlServiceContextInfo(1);
      sqlServiceMonitor0.add(sqlServiceContextInfo0);
      assertTrue(sqlServiceContextInfo0.isRunning());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MonitorWriter monitorWriter0 = mock(MonitorWriter.class, new ViolatedAssumptionAnswer());
      SqlServiceMonitor sqlServiceMonitor0 = new SqlServiceMonitor(monitorWriter0);
      sqlServiceMonitor0.start();
      sqlServiceMonitor0.stop();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MonitorWriter monitorWriter0 = mock(MonitorWriter.class, new ViolatedAssumptionAnswer());
      SqlServiceMonitor sqlServiceMonitor0 = new SqlServiceMonitor(monitorWriter0);
      sqlServiceMonitor0.stop();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MonitorWriter monitorWriter0 = mock(MonitorWriter.class, new ViolatedAssumptionAnswer());
      SqlServiceMonitor sqlServiceMonitor0 = new SqlServiceMonitor(monitorWriter0);
      sqlServiceMonitor0.start();
      sqlServiceMonitor0.start();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MonitorWriter monitorWriter0 = mock(MonitorWriter.class, new ViolatedAssumptionAnswer());
      SqlServiceMonitor sqlServiceMonitor0 = new SqlServiceMonitor(monitorWriter0);
      SqlServiceContextInfo sqlServiceContextInfo0 = new SqlServiceContextInfo(3414);
      // Undeclared exception!
      try { 
        sqlServiceMonitor0.add(sqlServiceContextInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.executor.monitor.SqlServiceMonitor", e);
      }
  }
}
