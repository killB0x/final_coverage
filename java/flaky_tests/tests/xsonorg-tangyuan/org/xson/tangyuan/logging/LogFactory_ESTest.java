/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:28:19 GMT 2022
 */

package org.xson.tangyuan.logging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.logging.Log;
import org.xson.tangyuan.logging.LogFactory;
import org.xson.tangyuan.logging.log4j.Log4jImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogFactory_ESTest extends LogFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Log log0 = LogFactory.getLog(class0);
      assertNotNull(log0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        LogFactory.getLog((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error creating logger for logger null.  Cause: java.lang.reflect.InvocationTargetException
         //
         verifyException("org.xson.tangyuan.logging.LogFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Log4jImpl> class0 = Log4jImpl.class;
      // Undeclared exception!
      try { 
        LogFactory.useCustomLogging(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error setting Log implementation.  Cause: java.lang.reflect.InvocationTargetException
         //
         verifyException("org.xson.tangyuan.logging.LogFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LogFactory.useSlf4jLogging();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Log log0 = LogFactory.getLog("3xg+>\"|:C_+");
      assertNotNull(log0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        LogFactory.useLog4JLogging();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error setting Log implementation.  Cause: java.lang.reflect.InvocationTargetException
         //
         verifyException("org.xson.tangyuan.logging.LogFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        LogFactory.getLog((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xson.tangyuan.logging.LogFactory", e);
      }
  }
}
