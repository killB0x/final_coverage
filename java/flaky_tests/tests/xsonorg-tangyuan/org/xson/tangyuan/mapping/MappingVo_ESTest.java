/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:01:53 GMT 2022
 */

package org.xson.tangyuan.mapping;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xson.tangyuan.mapping.DefaultMappingHandler;
import org.xson.tangyuan.mapping.MappingHandler;
import org.xson.tangyuan.mapping.MappingVo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MappingVo_ESTest extends MappingVo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<String> class0 = String.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      MappingVo mappingVo0 = new MappingVo(":1\"^B{Ww@vvE|p", "", class0, defaultMappingHandler0, (Map<String, String>) null);
      mappingVo0.getProperty("");
      assertEquals(":1\"^B{Ww@vvE|p", mappingVo0.getId());
      assertEquals("", mappingVo0.getType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      Class<String> class0 = String.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo(":)H$Fl>+Om~J`|t,HS", "=P3rWMW'", class0, defaultMappingHandler0, hashMap0);
      String string0 = mappingVo0.getType();
      assertEquals(":)H$Fl>+Om~J`|t,HS", mappingVo0.getId());
      assertEquals("=P3rWMW'", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<String> class0 = String.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      MappingVo mappingVo0 = new MappingVo(":1\"^B{Ww@vvE|p", "", class0, defaultMappingHandler0, (Map<String, String>) null);
      String string0 = mappingVo0.getType();
      assertEquals(":1\"^B{Ww@vvE|p", mappingVo0.getId());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo((String) null, (String) null, class0, defaultMappingHandler0, hashMap0);
      hashMap0.put((String) null, "");
      String string0 = mappingVo0.getProperty((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo((String) null, (String) null, class0, defaultMappingHandler0, hashMap0);
      String string0 = mappingVo0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("", "", class0, defaultMappingHandler0, hashMap0);
      String string0 = mappingVo0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<String> class0 = String.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      MappingVo mappingVo0 = new MappingVo(":1\"^B{Ww@vvE|p", "", class0, defaultMappingHandler0, (Map<String, String>) null);
      mappingVo0.getHandler();
      assertEquals(":1\"^B{Ww@vvE|p", mappingVo0.getId());
      assertEquals("", mappingVo0.getType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<String> class0 = String.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      MappingVo mappingVo0 = new MappingVo(":1\"^B{Ww@vvE|p", "", class0, defaultMappingHandler0, (Map<String, String>) null);
      mappingVo0.getColumnMap();
      assertEquals("", mappingVo0.getType());
      assertEquals(":1\"^B{Ww@vvE|p", mappingVo0.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("org.xson.tangyuan.mapping.DefaultMappingHandler", (String) null, class0, (MappingHandler) null, hashMap0);
      hashMap0.put("", "org.xson.tangyuan.mapping.DefaultMappingHandler");
      Map<String, String> map0 = mappingVo0.getColumnMap();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("org.xson.tangyuan.mapping.DefaultMappingHandler", (String) null, class0, (MappingHandler) null, hashMap0);
      Class<?> class1 = mappingVo0.getBeanClass();
      assertEquals(1, class1.getModifiers());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("org.xson.tangyuan.mapping.DefaultMappingHandler", (String) null, class0, (MappingHandler) null, hashMap0);
      hashMap0.put("", "org.xson.tangyuan.mapping.DefaultMappingHandler");
      String string0 = mappingVo0.getProperty("");
      assertEquals("org.xson.tangyuan.mapping.DefaultMappingHandler", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("org.xson.tangyuan.mapping.DefaultMappingHandler", (String) null, class0, (MappingHandler) null, hashMap0);
      String string0 = mappingVo0.getProperty("org.xson.tangyuan.mapping.DefaultMappingHandler");
      assertEquals("org.xson.tangyuan.mapping.DefaultMappingHandler", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<String> class0 = String.class;
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      MappingVo mappingVo0 = new MappingVo(":1\"^B{Ww@vvE|p", "", class0, defaultMappingHandler0, (Map<String, String>) null);
      mappingVo0.getProperty((String) null);
      assertEquals("", mappingVo0.getType());
      assertEquals(":1\"^B{Ww@vvE|p", mappingVo0.getId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("org.xson.tangyuan.mapping.DefaultMappingHandler", (String) null, class0, (MappingHandler) null, hashMap0);
      String string0 = mappingVo0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("org.xson.tangyuan.mapping.DefaultMappingHandler", (String) null, class0, (MappingHandler) null, hashMap0);
      Map<String, String> map0 = mappingVo0.getColumnMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("XGC<$", "XGC<$", class0, (MappingHandler) null, hashMap0);
      String string0 = mappingVo0.getId();
      assertEquals("XGC<$", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultMappingHandler defaultMappingHandler0 = new DefaultMappingHandler();
      MappingVo mappingVo0 = new MappingVo("N`'o<AYex", "N`'o<AYex", (Class<?>) null, defaultMappingHandler0, (Map<String, String>) null);
      Class<?> class0 = mappingVo0.getBeanClass();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Object> class0 = Object.class;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MappingVo mappingVo0 = new MappingVo("XGC<$", "XGC<$", class0, (MappingHandler) null, hashMap0);
      MappingHandler mappingHandler0 = mappingVo0.getHandler();
      assertNull(mappingHandler0);
  }
}
