/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 27 19:35:57 GMT 2022
 */

package com.conversantmedia.util.collection.spatial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.conversantmedia.util.collection.geometry.Point2d;
import com.conversantmedia.util.collection.geometry.Rect2d;
import com.conversantmedia.util.collection.spatial.HyperRect;
import com.conversantmedia.util.collection.spatial.Node;
import com.conversantmedia.util.collection.spatial.QuadraticSplitLeaf;
import com.conversantmedia.util.collection.spatial.RectBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuadraticSplitLeaf_ESTest extends QuadraticSplitLeaf_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RectBuilder<Integer> rectBuilder0 = (RectBuilder<Integer>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      doReturn((HyperRect) null).when(rectBuilder0).getBBox(anyInt());
      QuadraticSplitLeaf<Integer> quadraticSplitLeaf0 = new QuadraticSplitLeaf<Integer>(rectBuilder0, 971, 971);
      quadraticSplitLeaf0.size = (-1658);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        quadraticSplitLeaf0.split(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1659 out of bounds for length 971
         //
         verifyException("com.conversantmedia.util.collection.spatial.QuadraticSplitLeaf", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RectBuilder<Integer> rectBuilder0 = (RectBuilder<Integer>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      doReturn((HyperRect) null).when(rectBuilder0).getBBox(anyInt());
      QuadraticSplitLeaf<Integer> quadraticSplitLeaf0 = new QuadraticSplitLeaf<Integer>(rectBuilder0, 0, 1);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        quadraticSplitLeaf0.split(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("com.conversantmedia.util.collection.spatial.QuadraticSplitLeaf", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point2d point2d0 = new Point2d((-6685399.954651281), 1.0);
      Rect2d rect2d0 = new Rect2d(point2d0, point2d0);
      RectBuilder<Integer> rectBuilder0 = (RectBuilder<Integer>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      doReturn(rect2d0, rect2d0, rect2d0, rect2d0, (HyperRect) null).when(rectBuilder0).getBBox(anyInt());
      QuadraticSplitLeaf<Integer> quadraticSplitLeaf0 = new QuadraticSplitLeaf<Integer>(rectBuilder0, 1, 1);
      quadraticSplitLeaf0.add((Integer) point2d0.X);
      // Undeclared exception!
      try { 
        quadraticSplitLeaf0.split((Integer) point2d0.X);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.conversantmedia.util.collection.spatial.Leaf", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuadraticSplitLeaf<Object> quadraticSplitLeaf0 = null;
      try {
        quadraticSplitLeaf0 = new QuadraticSplitLeaf<Object>((RectBuilder<Object>) null, 36, (-1853));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1853
         //
         verifyException("com.conversantmedia.util.collection.spatial.Leaf", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Rect2d rect2d0 = new Rect2d(4653.492062323553, 4653.492062323553, 4653.492062323553, 4653.492062323553);
      RectBuilder<Integer> rectBuilder0 = (RectBuilder<Integer>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      doReturn(rect2d0, rect2d0, rect2d0, rect2d0, rect2d0).when(rectBuilder0).getBBox(anyInt());
      QuadraticSplitLeaf<Integer> quadraticSplitLeaf0 = new QuadraticSplitLeaf<Integer>(rectBuilder0, 2402, 2402);
      Integer integer0 = new Integer(2402);
      Node<Integer> node0 = quadraticSplitLeaf0.add(integer0);
      quadraticSplitLeaf0.classify(node0, node0, integer0);
      quadraticSplitLeaf0.add(integer0);
      Node<Integer> node1 = quadraticSplitLeaf0.split(integer0);
      assertEquals(4, node1.totalSize());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Rect2d rect2d0 = new Rect2d((-2240.0402), 2975.7878799845, 708.1908765, 708.1908765);
      RectBuilder<Integer> rectBuilder0 = (RectBuilder<Integer>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      doReturn(rect2d0, rect2d0, rect2d0, rect2d0, (HyperRect) null).when(rectBuilder0).getBBox(anyInt());
      QuadraticSplitLeaf<Integer> quadraticSplitLeaf0 = new QuadraticSplitLeaf<Integer>(rectBuilder0, 4, 4);
      Integer integer0 = new Integer(4);
      quadraticSplitLeaf0.add(integer0);
      quadraticSplitLeaf0.add(integer0);
      // Undeclared exception!
      try { 
        quadraticSplitLeaf0.split(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
