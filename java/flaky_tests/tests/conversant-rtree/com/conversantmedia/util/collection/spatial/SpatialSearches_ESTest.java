/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 27 19:40:41 GMT 2022
 */

package com.conversantmedia.util.collection.spatial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.conversantmedia.util.collection.spatial.RTree;
import com.conversantmedia.util.collection.spatial.RectBuilder;
import com.conversantmedia.util.collection.spatial.SpatialSearch;
import com.conversantmedia.util.collection.spatial.SpatialSearches;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpatialSearches_ESTest extends SpatialSearches_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RectBuilder<Object> rectBuilder0 = (RectBuilder<Object>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      RTree.Split rTree_Split0 = RTree.Split.LINEAR;
      SpatialSearch<Object> spatialSearch0 = SpatialSearches.lockingRTree(rectBuilder0, 0, 40, (RTree.Split) rTree_Split0);
      assertNotNull(spatialSearch0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RTree.Split rTree_Split0 = RTree.Split.LINEAR;
      RectBuilder<Object> rectBuilder0 = (RectBuilder<Object>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      SpatialSearch<Object> spatialSearch0 = SpatialSearches.rTree(rectBuilder0, 987, (-958), (RTree.Split) rTree_Split0);
      assertNotNull(spatialSearch0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RectBuilder<Object> rectBuilder0 = (RectBuilder<Object>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      SpatialSearch<Object> spatialSearch0 = SpatialSearches.rTree(rectBuilder0);
      assertNotNull(spatialSearch0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RectBuilder<Object> rectBuilder0 = (RectBuilder<Object>) mock(RectBuilder.class, new ViolatedAssumptionAnswer());
      SpatialSearch<Object> spatialSearch0 = SpatialSearches.lockingRTree(rectBuilder0);
      assertNotNull(spatialSearch0);
  }
}
