/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 27 19:36:57 GMT 2022
 */

package com.conversantmedia.util.collection.geometry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.conversantmedia.util.collection.geometry.Point1d;
import com.conversantmedia.util.collection.geometry.Point2d;
import com.conversantmedia.util.collection.geometry.Point3d;
import com.conversantmedia.util.collection.spatial.HyperPoint;
import com.conversantmedia.util.collection.spatial.HyperRect;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point1d_ESTest extends Point1d_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Point1d point1d0 = new Point1d(0.0);
      Point1d point1d1 = new Point1d(0.0);
      Point1d.Builder point1d_Builder0 = new Point1d.Builder();
      HyperRect hyperRect0 = point1d_Builder0.getMbr(point1d1, point1d0);
      assertEquals(0.0, hyperRect0.cost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Point1d.Builder point1d_Builder0 = new Point1d.Builder();
      Point1d point1d0 = new Point1d(4154.0519406);
      Point2d point2d0 = new Point2d(4154.0519406, 4154.0519406);
      // Undeclared exception!
      try { 
        point1d_Builder0.getMbr(point2d0, point1d0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.conversantmedia.util.collection.geometry.Point2d cannot be cast to class com.conversantmedia.util.collection.geometry.Point1d (com.conversantmedia.util.collection.geometry.Point2d and com.conversantmedia.util.collection.geometry.Point1d are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @c53ee23)
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Point1d point1d0 = new Point1d(2.0);
      // Undeclared exception!
      try { 
        point1d0.distance((HyperPoint) point1d0, (-26));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid dimension
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point1d point1d0 = new Point1d(0.0);
      // Undeclared exception!
      try { 
        point1d0.getCoord((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid dimension
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Point1d point1d0 = new Point1d(0);
      Double double0 = point1d0.getCoord(0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point1d point1d0 = new Point1d(3391.6878);
      Double double0 = point1d0.getCoord(0);
      assertEquals(3391.6878, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Point1d point1d0 = new Point1d(0.0);
      Point1d point1d1 = new Point1d((-244.7134));
      double double0 = point1d1.distance((HyperPoint) point1d0, 0);
      assertEquals(244.7134, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point1d point1d0 = new Point1d((-557.635046383216));
      Point1d point1d1 = new Point1d((-244.7134));
      double double0 = point1d1.distance((HyperPoint) point1d0, 0);
      assertEquals((-312.92164638321606), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Point1d point1d0 = new Point1d((-557.635046383216));
      Point1d point1d1 = new Point1d(3391.6878);
      double double0 = point1d0.distance((HyperPoint) point1d1);
      assertEquals(3949.322846383216, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point1d point1d0 = new Point1d(1.0);
      Point1d point1d1 = new Point1d(0.0);
      double double0 = point1d0.distance((HyperPoint) point1d1);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point1d point1d0 = new Point1d(2.0);
      // Undeclared exception!
      try { 
        point1d0.distance((HyperPoint) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point1d point1d0 = new Point1d(1645.591899919);
      Point3d point3d0 = new Point3d(1645.591899919, 1645.591899919, 1645.591899919);
      // Undeclared exception!
      try { 
        point1d0.distance((HyperPoint) point3d0, 1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.conversantmedia.util.collection.geometry.Point3d cannot be cast to class com.conversantmedia.util.collection.geometry.Point1d (com.conversantmedia.util.collection.geometry.Point3d and com.conversantmedia.util.collection.geometry.Point1d are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @c53ee23)
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point1d point1d0 = new Point1d((-3347.16648622633));
      // Undeclared exception!
      try { 
        point1d0.distance((HyperPoint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point1d point1d0 = new Point1d(1.0);
      Point2d point2d0 = new Point2d(1.0, 1.0);
      // Undeclared exception!
      try { 
        point1d0.distance((HyperPoint) point2d0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.conversantmedia.util.collection.geometry.Point2d cannot be cast to class com.conversantmedia.util.collection.geometry.Point1d (com.conversantmedia.util.collection.geometry.Point2d and com.conversantmedia.util.collection.geometry.Point1d are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @c53ee23)
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point1d point1d0 = new Point1d((-557.635046383216));
      double double0 = point1d0.distance((HyperPoint) point1d0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point1d point1d0 = new Point1d(0.0);
      Point1d point1d1 = new Point1d((-244.7134));
      boolean boolean0 = point1d0.equals(point1d1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point1d point1d0 = new Point1d(1.0);
      boolean boolean0 = point1d0.equals(point1d0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Point1d point1d0 = new Point1d(0.0);
      Object object0 = new Object();
      boolean boolean0 = point1d0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point1d point1d0 = new Point1d(0.0);
      // Undeclared exception!
      try { 
        point1d0.distance((HyperPoint) point1d0, 968);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid dimension
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Point1d point1d0 = new Point1d((-557.635046383216));
      Double double0 = point1d0.getCoord(0);
      assertEquals((-557.635046383216), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Point1d point1d0 = new Point1d(1193);
      // Undeclared exception!
      try { 
        point1d0.getCoord(1193);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid dimension
         //
         verifyException("com.conversantmedia.util.collection.geometry.Point1d", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Point1d.Builder point1d_Builder0 = new Point1d.Builder();
      Point1d point1d0 = new Point1d((-557.635046383216));
      HyperRect hyperRect0 = point1d_Builder0.getBBox(point1d0);
      assertEquals(1, hyperRect0.getNDim());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Point1d point1d0 = new Point1d((-557.635046383216));
      double double0 = point1d0.distance((HyperPoint) point1d0, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Point1d point1d0 = new Point1d((-0.6061397131311705));
      int int0 = point1d0.getNDim();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Point1d point1d0 = new Point1d((-557.635046383216));
      point1d0.hashCode();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Point1d point1d0 = new Point1d(1645.591899919);
      boolean boolean0 = point1d0.equals((Object) null);
      assertFalse(boolean0);
  }
}
