/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 01:06:17 GMT 2022
 */

package net.jhorstmann.packedtime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.time.format.DateTimeParseException;
import net.jhorstmann.packedtime.DateTimeParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateTimeParser_ESTest extends DateTimeParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalTime("30");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalTime("310");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // expected ':' at index 2 but got '0'
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalDate(",A;\b>id?BmSo0N~");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // not a digit at index 0
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DateTimeParser.Index dateTimeParser_Index0 = new DateTimeParser.Index();
      int int0 = dateTimeParser_Index0.postInc(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DateTimeParser.Index dateTimeParser_Index0 = new DateTimeParser.Index();
      int int0 = dateTimeParser_Index0.postInc();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateTimeParser.Index dateTimeParser_Index0 = new DateTimeParser.Index();
      dateTimeParser_Index0.inc();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetTime("1}+aO-@&nxNgw}");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // not a digit at index 1
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetTime("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTimeWithDefaultZone("", (ZoneId) null);
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // not a digit at index 0
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTimeWithDefaultZone("", (ZoneId) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTimeWithDefaultZone((String) null, (ZoneId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTimeWithDefaultOffset("-_ ~P<[-X_NqJj>Z#}", 663);
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // not a digit at index 1
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTimeWithDefaultOffset("", 52);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTimeWithDefaultOffset((String) null, 262);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTime("expected '");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // not a digit at index 0
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTime("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetDateTime((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalTime((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalDateTime("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalDateTime((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalDate("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalDate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DateTimeParser.Time dateTimeParser_Time0 = new DateTimeParser.Time(60, 1266, 60, 0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalDateTime("-T`A`V6vNuq");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // not a digit at index 1
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DateTimeParser.Index dateTimeParser_Index0 = new DateTimeParser.Index();
      dateTimeParser_Index0.inc(60);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DateTimeParser.Date dateTimeParser_Date0 = new DateTimeParser.Date((-2278), 10, 48);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "75:(5OM~@7f\\uZ8";
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalTime(string0);
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // not a digit at index 3
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseOffsetTime((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateTimeParser.parseLocalDate("9137]b%");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // expected '-' at index 4 but got ']'
         //
         verifyException("net.jhorstmann.packedtime.DateTimeParser", e);
      }
  }
}
