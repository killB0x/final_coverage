/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:12:20 GMT 2022
 */

package com.easyinnova.tiff.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.easyinnova.tiff.io.MappedByteInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MappedByteInputStream_ESTest extends MappedByteInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/RVA0RVA");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "46c''yco\"TGCH>I");
      File file0 = MockFile.createTempFile("RVA", "RVA");
      MappedByteInputStream mappedByteInputStream0 = new MappedByteInputStream(file0);
      long long0 = mappedByteInputStream0.size();
      assertEquals(16L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      File file0 = MockFile.createTempFile("K,kN%EQtYU(k)+\"", "K,kN%EQtYU(k)+\"");
      MappedByteInputStream mappedByteInputStream0 = new MappedByteInputStream(file0);
      // Undeclared exception!
      try { 
        mappedByteInputStream0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.io.MappedByteInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MappedByteInputStream mappedByteInputStream0 = null;
      try {
        mappedByteInputStream0 = new MappedByteInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.io.MappedByteInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MappedByteInputStream mappedByteInputStream0 = null;
      try {
        mappedByteInputStream0 = new MappedByteInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      File file0 = MockFile.createTempFile("^O-", "");
      MappedByteInputStream mappedByteInputStream0 = new MappedByteInputStream(file0);
      // Undeclared exception!
      try { 
        mappedByteInputStream0.seek((-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.io.MappedByteInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      File file0 = MockFile.createTempFile("@u1/JJ^|i <0A=NQ`;", "{");
      MappedByteInputStream mappedByteInputStream0 = new MappedByteInputStream(file0);
      mappedByteInputStream0.close();
      assertEquals(0L, mappedByteInputStream0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      File file0 = MockFile.createTempFile("'O5U]", "'O5U]");
      MappedByteInputStream mappedByteInputStream0 = new MappedByteInputStream(file0);
      String string0 = mappedByteInputStream0.getPath();
      assertEquals("/tmp/'O5U]0'O5U]", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      File file0 = MockFile.createTempFile("@u1/JJ^|i <0A=NQ`;", "{");
      MappedByteInputStream mappedByteInputStream0 = new MappedByteInputStream(file0);
      long long0 = mappedByteInputStream0.size();
      assertEquals(0L, long0);
  }
}
