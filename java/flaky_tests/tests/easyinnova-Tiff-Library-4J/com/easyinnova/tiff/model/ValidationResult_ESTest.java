/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:10:42 GMT 2022
 */

package com.easyinnova.tiff.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.easyinnova.tiff.model.ValidationEvent;
import com.easyinnova.tiff.model.ValidationResult;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidationResult_ESTest extends ValidationResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.addError((String) null, (String) null, 0L);
      ValidationResult validationResult1 = new ValidationResult(false);
      validationResult0.add(validationResult1);
      assertTrue(validationResult1.correct);
      assertFalse(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      assertTrue(validationResult0.correct);
      
      validationResult0.correct = false;
      validationResult0.isCorrect();
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.warnings = null;
      ArrayList<ValidationEvent> arrayList0 = validationResult0.getWarnings();
      assertFalse(validationResult0.getFatalError());
      assertNull(arrayList0);
      assertTrue(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.setFatalError(true, (String) null);
      validationResult0.getFatalErrorMessage();
      assertEquals("null", validationResult0.getFatalErrorMessage());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.setFatalError(true, "+N`+_1,.L/*ZDLx");
      boolean boolean0 = validationResult0.getFatalError();
      assertEquals("+N`+_1,.L/*ZDLx", validationResult0.getFatalErrorMessage());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.errors = null;
      ArrayList<ValidationEvent> arrayList0 = validationResult0.getErrors();
      assertNull(arrayList0);
      assertFalse(validationResult0.getFatalError());
      assertTrue(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      assertTrue(validationResult0.correct);
      
      validationResult0.addError("", "$-Q:>okv>O8;3", (-1.0F));
      validationResult0.getErrors();
      assertFalse(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.warnings = null;
      // Undeclared exception!
      try { 
        validationResult0.printWarnings();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.errors = null;
      // Undeclared exception!
      try { 
        validationResult0.printErrors();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.warnings = null;
      // Undeclared exception!
      try { 
        validationResult0.addWarning("", "gB(zdZ~1w", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.errors = null;
      // Undeclared exception!
      try { 
        validationResult0.addErrorLoc("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.errors = null;
      // Undeclared exception!
      try { 
        validationResult0.addError("YUea-?Pw/)\"l]}RJVC:", "t", "com.easyinnova.tiff.model.ValidationResult");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.errors = null;
      // Undeclared exception!
      try { 
        validationResult0.addError((String) null, "", 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.errors = null;
      // Undeclared exception!
      try { 
        validationResult0.addError("com.easyinnova.tiff.model.ValidationResult", "nQm8u+=%62TZG=", 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.errors = null;
      ValidationResult validationResult1 = new ValidationResult(true);
      // Undeclared exception!
      try { 
        validationResult1.add(validationResult0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.addWarning("", "", "");
      validationResult0.printWarnings();
      assertFalse(validationResult0.getFatalError());
      assertTrue(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      assertTrue(validationResult0.correct);
      
      validationResult0.addError((String) null, (String) null, 0L);
      validationResult0.printErrors();
      assertFalse(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.add(validationResult0);
      assertTrue(validationResult0.correct);
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.setFatalError(false, "com.easyinnova.tiff.model.ValidationEvent");
      validationResult0.setFatalError(true, "+N`+_1,.L/*ZDLx");
      assertTrue(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.addWarning("", " (", (String) null);
      ArrayList<ValidationEvent> arrayList0 = validationResult0.getWarnings();
      assertEquals(1, arrayList0.size());
      assertTrue(validationResult0.correct);
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.getFatalErrorMessage();
      assertTrue(validationResult0.correct);
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      boolean boolean0 = validationResult0.getFatalError();
      assertFalse(boolean0);
      assertTrue(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.addError("Warning: ", "Warning: ", (-1.0F));
      assertTrue(validationResult0.correct);
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.getErrors();
      assertTrue(validationResult0.correct);
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      validationResult0.getWarnings();
      assertFalse(validationResult0.getFatalError());
      assertTrue(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.addWarning((String) null, (String) null, "com.easyinnova.tiff.model.ValidationEvent");
      assertTrue(validationResult0.correct);
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      validationResult0.addErrorLoc("}", (String) null);
      assertFalse(validationResult0.getFatalError());
      assertTrue(validationResult0.correct);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(false);
      boolean boolean0 = validationResult0.isCorrect();
      assertTrue(boolean0);
      assertFalse(validationResult0.getFatalError());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ValidationResult validationResult0 = new ValidationResult(true);
      assertTrue(validationResult0.correct);
      
      validationResult0.addError("", "", "");
      assertFalse(validationResult0.correct);
  }
}
