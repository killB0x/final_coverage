/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:03:16 GMT 2022
 */

package com.easyinnova.tiff.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.easyinnova.tiff.model.IfdTags;
import com.easyinnova.tiff.model.TagValue;
import com.easyinnova.tiff.model.TiffTags;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IfdTags_ESTest extends IfdTags_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag((String) null, "");
      ArrayList<TagValue> arrayList0 = ifdTags0.getTags();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag((String) null, "1891");
      TagValue tagValue0 = ifdTags0.get((-1));
      assertNotNull(tagValue0);
      
      tagValue0.setTagOffset(2);
      TagValue tagValue1 = ifdTags0.get((String) null);
      assertEquals(2, tagValue1.getType());
      assertEquals(5, tagValue1.getCardinality());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("", "");
      TagValue tagValue0 = ifdTags0.get("}");
      tagValue0.setTagOffset((-287));
      TagValue tagValue1 = ifdTags0.get("");
      assertEquals(2, tagValue1.getType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("FLOAT", "");
      TagValue tagValue0 = ifdTags0.get("FLOAT");
      tagValue0.setReadLength(9);
      TagValue tagValue1 = ifdTags0.get("yKhc+<$fpe");
      assertEquals(2, tagValue1.getType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("", "");
      TagValue tagValue0 = ifdTags0.get("}");
      tagValue0.setReadLength((-287));
      TagValue tagValue1 = ifdTags0.get("");
      assertEquals(2, tagValue1.getType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag((String) null, "");
      TagValue tagValue0 = ifdTags0.get(" || ");
      assertNotNull(tagValue0);
      
      tagValue0.setReadOffset(127);
      TagValue tagValue1 = ifdTags0.get(" || ");
      assertEquals(2, tagValue1.getType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      int[] intArray0 = new int[0];
      ifdTags0.addTag(">HR", intArray0);
      TagValue tagValue0 = ifdTags0.get("\"cardinality\"");
      assertNotNull(tagValue0);
      
      tagValue0.setReadOffset((-1799));
      TagValue tagValue1 = ifdTags0.get("-2283");
      assertEquals(3, tagValue1.getType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-1), (-562));
      ifdTags0.addTag(tagValue0);
      TagValue tagValue1 = ifdTags0.get("?");
      assertEquals((-1), tagValue1.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("g|I[9", "g|I[9");
      TagValue tagValue0 = ifdTags0.get("N");
      assertNotNull(tagValue0);
      assertEquals(7, tagValue0.getCardinality());
      assertEquals(2, tagValue0.getType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-2283), (-2283));
      ifdTags0.addTag(tagValue0);
      tagValue0.setTagOffset(2);
      TagValue tagValue1 = ifdTags0.get((-2283));
      assertEquals((-2283), tagValue1.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-2283), (-2283));
      ifdTags0.addTag(tagValue0);
      tagValue0.setTagOffset((-2283));
      TagValue tagValue1 = ifdTags0.get((-2283));
      assertEquals(0, tagValue1.getReadOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-2046), (-2218));
      tagValue0.setReadLength(127);
      ifdTags0.addTag(tagValue0);
      TagValue tagValue1 = ifdTags0.get((-2046));
      assertEquals(0, tagValue1.getReadOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-4687), (-4687));
      ifdTags0.addTag(tagValue0);
      tagValue0.setReadLength((-2689));
      TagValue tagValue1 = ifdTags0.get((-4687));
      assertEquals(0, tagValue1.getReadOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue(1, 1);
      tagValue0.setReadOffset(1);
      ifdTags0.addTag(tagValue0);
      TagValue tagValue1 = ifdTags0.get(1);
      assertNull(tagValue1.getContainer());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-2283), (-2283));
      ifdTags0.addTag(tagValue0);
      tagValue0.setReadOffset((-2283));
      TagValue tagValue1 = ifdTags0.get((-2283));
      assertEquals(0, tagValue1.getTagOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue(0, 0);
      ifdTags0.addTag(tagValue0);
      TagValue tagValue1 = ifdTags0.get(0);
      assertEquals(0, tagValue1.getTagOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-2283), (-2283));
      ifdTags0.addTag(tagValue0);
      boolean boolean0 = ifdTags0.containsTagId((-2283));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("\"forceDescription\"", "\"forceDescription\"");
      TiffTags.tagMap = null;
      // Undeclared exception!
      try { 
        ifdTags0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.TiffTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("-1", "-1");
      TiffTags.tagNames = null;
      // Undeclared exception!
      try { 
        ifdTags0.removeTag("-1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.TiffTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TiffTags.tagNames = null;
      // Undeclared exception!
      try { 
        ifdTags0.get("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.TiffTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      // Undeclared exception!
      try { 
        ifdTags0.addTag((String) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.IfdTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      // Undeclared exception!
      try { 
        ifdTags0.addTag((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.IfdTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      // Undeclared exception!
      try { 
        ifdTags0.addTag((TagValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.IfdTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = new TagValue((-4687), (-4687));
      ifdTags0.addTag(tagValue0);
      ifdTags0.addTag(tagValue0);
      assertEquals(0, tagValue0.getReadlength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      int[] intArray0 = new int[6];
      ifdTags0.addTag("HJmTx", intArray0);
      String string0 = ifdTags0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("2", "2");
      String string0 = ifdTags0.toString();
      assertEquals("[-1:2]\r\n", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      String string0 = ifdTags0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      int[] intArray0 = new int[7];
      ifdTags0.addTag("g|I[9", intArray0);
      ifdTags0.addTag("g|I[9", "g|I[9");
      ifdTags0.removeTag("-1");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ifdTags0.addTag("2", "2");
      ifdTags0.removeTag("description");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      ArrayList<TagValue> arrayList0 = ifdTags0.getTags();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      boolean boolean0 = ifdTags0.containsTagId((-2283));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = ifdTags0.get(1);
      assertNull(tagValue0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IfdTags ifdTags0 = new IfdTags();
      TagValue tagValue0 = ifdTags0.get("\">Tag type does not match</assert>");
      assertNull(tagValue0);
  }
}
