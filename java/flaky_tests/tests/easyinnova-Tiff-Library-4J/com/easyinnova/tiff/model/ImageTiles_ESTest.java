/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:29:07 GMT 2022
 */

package com.easyinnova.tiff.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.easyinnova.tiff.model.ImageTiles;
import com.easyinnova.tiff.model.Tile;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImageTiles_ESTest extends ImageTiles_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      LinkedList<Tile> linkedList0 = new LinkedList<Tile>();
      Tile tile0 = new Tile();
      linkedList0.add(tile0);
      imageTiles0.setTiles(linkedList0);
      List<Tile> list0 = imageTiles0.getTiles();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      imageTiles0.setTileWidth(1659);
      int int0 = imageTiles0.getTileWidth();
      assertEquals(1659, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      imageTiles0.setTileWidth((-3969));
      int int0 = imageTiles0.getTileWidth();
      assertEquals((-3969), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      imageTiles0.setTileHeight(1);
      int int0 = imageTiles0.getTileHeight();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      imageTiles0.setTileHeight((-1018));
      int int0 = imageTiles0.getTileHeight();
      assertEquals((-1018), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      LinkedList<Tile> linkedList0 = new LinkedList<Tile>();
      imageTiles0.setTiles(linkedList0);
      List<Tile> list0 = imageTiles0.getTiles();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      List<Tile> list0 = imageTiles0.getTiles();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      int int0 = imageTiles0.getTileHeight();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ImageTiles imageTiles0 = new ImageTiles();
      int int0 = imageTiles0.getTileWidth();
      assertEquals(0, int0);
  }
}
