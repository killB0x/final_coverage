/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:28:27 GMT 2022
 */

package com.easyinnova.tiff.model.types;

import org.junit.Test;
import static org.junit.Assert.*;
import com.easyinnova.tiff.model.types.Rational;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Rational_ESTest extends Rational_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Rational rational0 = new Rational(3420, 475);
      int int0 = rational0.getNumerator();
      assertEquals(8, rational0.getTypeSize());
      assertEquals(3420, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Rational rational0 = new Rational(363, 363);
      rational0.setNumerator((-1));
      int int0 = rational0.getNumerator();
      assertEquals(8, rational0.getTypeSize());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Rational rational0 = new Rational(0, (-254));
      float float0 = rational0.getFloatValue();
      assertEquals(8, rational0.getTypeSize());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Rational rational0 = new Rational(363, 363);
      float float0 = rational0.getFloatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(8, rational0.getTypeSize());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Rational rational0 = new Rational(0, 0);
      int int0 = rational0.getDenominator();
      assertEquals(8, rational0.getTypeSize());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Rational rational0 = new Rational(363, 363);
      rational0.setDenominator((-1));
      int int0 = rational0.getDenominator();
      assertEquals((-1), int0);
      assertEquals(8, rational0.getTypeSize());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Rational rational0 = new Rational(0, 3614);
      String string0 = rational0.toString();
      assertEquals(8, rational0.getTypeSize());
      assertEquals("0/3614", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Rational rational0 = new Rational(0, 3614);
      int int0 = rational0.getDenominator();
      assertEquals(8, rational0.getTypeSize());
      assertEquals(3614, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Rational rational0 = new Rational(0, 3614);
      int int0 = rational0.getNumerator();
      assertEquals(8, rational0.getTypeSize());
      assertEquals(0, int0);
  }
}
