/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 07:59:09 GMT 2022
 */

package com.easyinnova.tiff.model.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.easyinnova.tiff.model.ImageStrips;
import com.easyinnova.tiff.model.ImageTiles;
import com.easyinnova.tiff.model.TagValue;
import com.easyinnova.tiff.model.TiffTags;
import com.easyinnova.tiff.model.types.IFD;
import com.easyinnova.tiff.model.types.abstractTiffType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IFD_ESTest extends IFD_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setsubIFD((IFD) null);
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      TagValue tagValue0 = new TagValue(330, 330);
      iFD0.addTag(tagValue0);
      int int0 = iFD0.getLength();
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      TiffTags.tagTypes = null;
      iFD0.addTag("", "");
      iFD0.printTags();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      boolean boolean0 = iFD0.isImage();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      TagValue tagValue0 = new TagValue(330, 330);
      iFD0.addTag(tagValue0);
      boolean boolean0 = iFD0.hasSubIFD();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setsubIFD(iFD0);
      IFD iFD1 = iFD0.getsubIFD();
      assertTrue(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setsubIFD(iFD0);
      TagValue tagValue0 = new TagValue(330, 330);
      iFD0.addTag(tagValue0);
      IFD iFD1 = iFD0.getsubIFD();
      assertFalse(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      ImageStrips imageStrips0 = new ImageStrips();
      iFD0.setImageStrips(imageStrips0);
      iFD0.setsubIFD(iFD0);
      IFD iFD1 = iFD0.getsubIFD();
      assertFalse(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setTypeSize(239);
      iFD0.setsubIFD(iFD0);
      IFD iFD1 = iFD0.getsubIFD();
      assertFalse(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setsubIFD(iFD0);
      iFD0.setOffset(330);
      iFD0.getsubIFD();
      assertEquals(330, iFD0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setsubIFD(iFD0);
      iFD0.setNextOffset(1325);
      iFD0.getsubIFD();
      assertEquals(1325, iFD0.getNextOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      int[] intArray0 = new int[0];
      iFD0.addTag("TILES", intArray0);
      TagValue tagValue0 = iFD0.getTag("");
      assertNotNull(tagValue0);
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      IFD iFD1 = new IFD(false);
      iFD1.setParent(iFD0);
      IFD iFD2 = iFD1.getParent();
      assertFalse(iFD2.isImage());
      assertFalse(iFD2.hasParent());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setNextIFD(iFD0);
      iFD0.setParent(iFD0);
      IFD iFD1 = iFD0.getParent();
      assertFalse(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setTypeSize(824);
      iFD0.setParent(iFD0);
      IFD iFD1 = iFD0.getParent();
      assertTrue(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setParent(iFD0);
      iFD0.setOffset(1000);
      iFD0.getParent();
      assertEquals(1000, iFD0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setOffset((-2387));
      iFD0.setParent(iFD0);
      iFD0.getParent();
      assertEquals((-2387), iFD0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setOffset(3);
      int int0 = iFD0.getOffset();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setOffset((-1295));
      int int0 = iFD0.getOffset();
      assertEquals((-1295), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setNextOffset(50);
      int int0 = iFD0.getNextOffset();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setNextOffset((-2631));
      int int0 = iFD0.getNextOffset();
      assertEquals((-2631), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setNextIFD(iFD0);
      IFD iFD1 = iFD0.getNextIFD();
      assertTrue(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      TagValue tagValue0 = new TagValue(330, 330);
      iFD0.setNextIFD(iFD0);
      iFD0.addTag(tagValue0);
      IFD iFD1 = iFD0.getNextIFD();
      assertFalse(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      IFD iFD1 = new IFD(false);
      iFD0.setNextIFD(iFD1);
      IFD iFD2 = iFD0.getNextIFD();
      assertFalse(iFD2.hasNextIFD());
      assertFalse(iFD2.isImage());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      ImageTiles imageTiles0 = new ImageTiles();
      imageTiles0.setTileWidth(12);
      iFD0.setImageTiles(imageTiles0);
      iFD0.getImageTiles();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      ImageTiles imageTiles0 = new ImageTiles();
      iFD0.setImageTiles(imageTiles0);
      iFD0.getImageTiles();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      ImageTiles imageTiles0 = new ImageTiles();
      imageTiles0.setTileHeight(12);
      iFD0.setImageTiles(imageTiles0);
      iFD0.getImageTiles();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      ImageTiles imageTiles0 = new ImageTiles();
      imageTiles0.setTileHeight((-967));
      iFD0.setImageTiles(imageTiles0);
      iFD0.getImageTiles();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      ImageStrips imageStrips0 = new ImageStrips();
      imageStrips0.setRowsPerStrip(1741L);
      iFD0.setImageStrips(imageStrips0);
      iFD0.getImageStrips();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.addTag((String) null, "O");
      boolean boolean0 = iFD0.containsTagId((-1));
      assertTrue(boolean0);
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      int[] intArray0 = new int[0];
      iFD0.addTag("1NBRR6e>@3@", intArray0);
      iFD0.setParent(iFD0);
      // Undeclared exception!
      try { 
        iFD0.isThumbnail();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      TagValue tagValue0 = new TagValue(330, 330);
      abstractTiffType abstractTiffType0 = new abstractTiffType();
      tagValue0.add(abstractTiffType0);
      iFD0.addTag(tagValue0);
      // Undeclared exception!
      try { 
        iFD0.getSubIFD();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.easyinnova.tiff.model.types.abstractTiffType cannot be cast to class com.easyinnova.tiff.model.types.IFD (com.easyinnova.tiff.model.types.abstractTiffType and com.easyinnova.tiff.model.types.IFD are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @21a82a36)
         //
         verifyException("com.easyinnova.tiff.model.types.IFD", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      // Undeclared exception!
      try { 
        iFD0.addTag("description", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.IfdTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      // Undeclared exception!
      try { 
        iFD0.addTag((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.IfdTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      // Undeclared exception!
      try { 
        iFD0.addTag((TagValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.IfdTags", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.hasParent();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setParent(iFD0);
      boolean boolean0 = iFD0.hasParent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.getImageSize();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.getParent();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.getsubIFD();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.getMetadata();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.hasSubIFD();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      ImageTiles imageTiles0 = new ImageTiles();
      iFD0.setImageTiles(imageTiles0);
      boolean boolean0 = iFD0.hasTiles();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      boolean boolean0 = iFD0.hasTiles();
      assertFalse(boolean0);
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      ImageStrips imageStrips0 = new ImageStrips();
      iFD0.setImageStrips(imageStrips0);
      boolean boolean0 = iFD0.hasStrips();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      boolean boolean0 = iFD0.hasStrips();
      assertFalse(iFD0.isImage());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      String string0 = iFD0.toString();
      assertEquals("IFD", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setParent(iFD0);
      iFD0.toString();
      assertTrue(iFD0.hasParent());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      String string0 = iFD0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      int[] intArray0 = new int[9];
      iFD0.addTag("1$N1>2", intArray0);
      TagValue tagValue0 = iFD0.getTag("");
      assertTrue(iFD0.isImage());
      assertNotNull(tagValue0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.getTag((String) null);
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      boolean boolean0 = iFD0.hasNextIFD();
      assertFalse(iFD0.isImage());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.addTag(")I$]$HTB9kop`NLA>", "");
      iFD0.createMetadata();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TagValue tagValue0 = new TagValue(255, 255);
      tagValue0.add((abstractTiffType) null);
      IFD iFD0 = new IFD(true);
      iFD0.addTag(tagValue0);
      // Undeclared exception!
      try { 
        iFD0.createMetadata();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.types.IFD", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TagValue tagValue0 = new TagValue(255, 255);
      IFD iFD0 = new IFD(true);
      iFD0.addTag(tagValue0);
      iFD0.createMetadata();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      TagValue tagValue0 = new TagValue(330, 330);
      tagValue0.add(iFD0);
      iFD0.addTag(tagValue0);
      iFD0.getSubIFD();
      assertTrue(iFD0.hasSubIFD());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      TagValue tagValue0 = new TagValue(330, 330);
      iFD0.addTag(tagValue0);
      iFD0.getSubIFD();
      assertTrue(iFD0.hasSubIFD());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.getSubIFD();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      TagValue tagValue0 = new TagValue(255, 255);
      tagValue0.add(iFD0);
      iFD0.addTag(tagValue0);
      boolean boolean0 = iFD0.isThumbnail();
      assertFalse(boolean0);
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      TagValue tagValue0 = new TagValue(255, 255);
      iFD0.addTag(tagValue0);
      boolean boolean0 = iFD0.isThumbnail();
      assertFalse(boolean0);
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      TagValue tagValue0 = new TagValue(254, 254);
      tagValue0.add(iFD0);
      iFD0.addTag(tagValue0);
      iFD0.isThumbnail();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      TagValue tagValue0 = new TagValue(254, 254);
      iFD0.addTag(tagValue0);
      boolean boolean0 = iFD0.isThumbnail();
      assertFalse(iFD0.isImage());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.addTag(")I$]$HTB9kop`NLA>", "");
      iFD0.getImageSize();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setParent(iFD0);
      boolean boolean0 = iFD0.isThumbnail();
      assertTrue(iFD0.hasParent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.containsTagId(1);
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      int int0 = iFD0.getNextOffset();
      assertEquals(0, int0);
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setNextOffset(9);
      iFD0.setParent(iFD0);
      iFD0.getParent();
      assertEquals(9, iFD0.getNextOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.setIsIFD(true);
      iFD0.setParent(iFD0);
      iFD0.getParent();
      assertTrue(iFD0.isIFD());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      int int0 = iFD0.getOffset();
      assertFalse(iFD0.isImage());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.getNextIFD();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.removeTag("");
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.addTag("", "");
      iFD0.printTags();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      int[] intArray0 = new int[0];
      iFD0.addTag("", intArray0);
      // Undeclared exception!
      try { 
        iFD0.getImageSize();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      TagValue tagValue0 = new TagValue(330, 330);
      iFD0.addTag(tagValue0);
      // Undeclared exception!
      try { 
        iFD0.isThumbnail();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.model.types.IFD", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.getImageStrips();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setsubIFD(iFD0);
      TagValue tagValue0 = new TagValue(330, 330);
      iFD0.addTag(tagValue0);
      boolean boolean0 = iFD0.isThumbnail();
      assertTrue(iFD0.hasSubIFD());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      boolean boolean0 = iFD0.isImage();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      IFD iFD0 = new IFD(true);
      iFD0.getImageTiles();
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.setNextIFD(iFD0);
      boolean boolean0 = iFD0.hasNextIFD();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      iFD0.getTags();
      assertFalse(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      assertFalse(iFD0.isImage());
      
      iFD0.setIsImage(true);
      assertTrue(iFD0.isImage());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      IFD iFD0 = new IFD(false);
      ImageStrips imageStrips0 = new ImageStrips();
      iFD0.setImageStrips(imageStrips0);
      iFD0.getImageStrips();
      assertFalse(iFD0.isImage());
  }
}
