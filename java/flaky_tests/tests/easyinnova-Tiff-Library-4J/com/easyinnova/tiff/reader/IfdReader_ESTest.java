/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:00:41 GMT 2022
 */

package com.easyinnova.tiff.reader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.easyinnova.tiff.model.ImageStrips;
import com.easyinnova.tiff.model.ImageTiles;
import com.easyinnova.tiff.model.types.IFD;
import com.easyinnova.tiff.reader.IfdReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IfdReader_ESTest extends IfdReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      ifdReader0.setNextIfdOffset(1495);
      int int0 = ifdReader0.getNextIfdOffset();
      assertEquals(1495, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      ifdReader0.setNextIfdOffset((-1));
      int int0 = ifdReader0.getNextIfdOffset();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(true);
      ifdReader0.ifd = iFD0;
      ifdReader0.ifd.setIsIFD(true);
      IFD iFD1 = ifdReader0.getIfd();
      assertFalse(iFD1.hasNextIFD());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      ImageTiles imageTiles0 = new ImageTiles();
      iFD0.setImageTiles(imageTiles0);
      IFD iFD1 = ifdReader0.getIfd();
      assertSame(iFD1, iFD0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      ImageStrips imageStrips0 = new ImageStrips();
      ifdReader0.ifd.setImageStrips(imageStrips0);
      IFD iFD1 = ifdReader0.getIfd();
      assertEquals(0, iFD1.getTypeSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      ifdReader0.ifd.setParent(ifdReader0.ifd);
      IFD iFD1 = ifdReader0.getIfd();
      assertFalse(iFD1.hasStrips());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      iFD0.setNextIFD(ifdReader0.ifd);
      IFD iFD1 = ifdReader0.getIfd();
      assertFalse(iFD1.hasStrips());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      iFD0.setTypeSize(8);
      IFD iFD1 = ifdReader0.getIfd();
      assertSame(iFD1, iFD0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      ifdReader0.ifd.setTypeSize((-3154));
      IFD iFD1 = ifdReader0.getIfd();
      assertFalse(iFD1.hasNextIFD());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      iFD0.setOffset(5);
      IFD iFD1 = ifdReader0.getIfd();
      assertFalse(iFD1.hasNextIFD());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      ifdReader0.ifd.setOffset((-2426));
      IFD iFD1 = ifdReader0.getIfd();
      assertEquals(0, iFD1.getTypeSize());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      iFD0.setNextOffset(4659);
      IFD iFD1 = ifdReader0.getIfd();
      assertEquals(0, iFD1.getTypeSize());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      iFD0.setNextOffset((-859));
      ifdReader0.setIfd(iFD0);
      IFD iFD1 = ifdReader0.getIfd();
      assertFalse(iFD1.isImage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      // Undeclared exception!
      try { 
        ifdReader0.readImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.easyinnova.tiff.reader.IfdReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      int[] intArray0 = new int[0];
      iFD0.addTag("", intArray0);
      // Undeclared exception!
      try { 
        ifdReader0.readImage();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      ifdReader0.readImage();
      assertEquals(0, ifdReader0.getNextIfdOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = new IFD(false);
      ifdReader0.ifd = iFD0;
      iFD0.addTag("WyH>(wTMLYn", "ImageWidth");
      // Undeclared exception!
      try { 
        ifdReader0.readImage();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.easyinnova.tiff.reader.IfdReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      int int0 = ifdReader0.getNextIfdOffset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IfdReader ifdReader0 = new IfdReader();
      IFD iFD0 = ifdReader0.getIfd();
      assertNull(iFD0);
  }
}
