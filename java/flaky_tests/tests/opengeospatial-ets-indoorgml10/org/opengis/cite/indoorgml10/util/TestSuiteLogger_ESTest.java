/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 20:17:41 GMT 2022
 */

package org.opengis.cite.indoorgml10.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.logging.Level;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.opengis.cite.indoorgml10.util.TestSuiteLogger;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TestSuiteLogger_ESTest extends TestSuiteLogger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Level level0 = Level.OFF;
      boolean boolean0 = TestSuiteLogger.isLoggable(level0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Level level0 = Level.FINE;
      boolean boolean0 = TestSuiteLogger.isLoggable(level0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestSuiteLogger.log((Level) null, "YG|PdM", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.logging.Logger", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockException mockException0 = new MockException();
      // Undeclared exception!
      try { 
        TestSuiteLogger.log((Level) null, "6)SthzFhRJ(NM", (Exception) mockException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.logging.Logger", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestSuiteLogger.log((Level) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.logging.Logger", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Level level0 = Level.INFO;
      // Undeclared exception!
      try { 
        TestSuiteLogger.log(level0, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Level level0 = Level.ALL;
      TestSuiteLogger.log(level0, "org.opengis.cite.indoorgml10.util.TestSuiteLogger");
      assertEquals("ALL", level0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Level level0 = Level.WARNING;
      MockThrowable mockThrowable0 = new MockThrowable();
      MockException mockException0 = new MockException(mockThrowable0);
      // Undeclared exception!
      try { 
        TestSuiteLogger.log(level0, "", (Exception) mockException0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Level level0 = Level.ALL;
      MockException mockException0 = new MockException();
      TestSuiteLogger.log(level0, "=Hsgs<", (Exception) mockException0);
      assertEquals("ALL", level0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Level level0 = Level.INFO;
      // Undeclared exception!
      try { 
        TestSuiteLogger.log(level0, "", (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Level level0 = Level.FINE;
      Object[] objectArray0 = new Object[5];
      TestSuiteLogger.log(level0, "", objectArray0);
      assertEquals("FINE", level0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestSuiteLogger.isLoggable((Level) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.logging.Logger", e);
      }
  }
}
