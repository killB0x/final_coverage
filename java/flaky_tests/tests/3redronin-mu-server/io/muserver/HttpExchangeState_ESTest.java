/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:38:40 GMT 2022
 */

package io.muserver;

import org.junit.Test;
import static org.junit.Assert.*;
import io.muserver.HttpExchangeState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HttpExchangeState_ESTest extends HttpExchangeState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HttpExchangeState[] httpExchangeStateArray0 = HttpExchangeState.values();
      assertEquals(4, httpExchangeStateArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HttpExchangeState httpExchangeState0 = HttpExchangeState.valueOf("UPGRADED");
      assertTrue(httpExchangeState0.endState());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HttpExchangeState httpExchangeState0 = HttpExchangeState.valueOf("IN_PROGRESS");
      assertFalse(httpExchangeState0.endState());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HttpExchangeState httpExchangeState0 = HttpExchangeState.IN_PROGRESS;
      boolean boolean0 = httpExchangeState0.endState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HttpExchangeState httpExchangeState0 = HttpExchangeState.UPGRADED;
      boolean boolean0 = httpExchangeState0.endState();
      assertTrue(boolean0);
  }
}
