/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:01:40 GMT 2022
 */

package io.muserver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.ParseUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseUtils_ESTest extends ParseUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = ParseUtils.isOWS('\u0006');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = ParseUtils.isVChar('~');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = ParseUtils.isVChar('!');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("$ X");
      assertEquals("\"$ X\"", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("-SBaIg0XTuQ?=FkBj/F");
      assertEquals("\"-SBaIg0XTuQ?=FkBj/F\"", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("Z_lVf9eglY$sq");
      assertEquals("Z_lVf9eglY$sq", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = ParseUtils.isTChar(']');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseUtils.quoteIfNeeded((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.muserver.ParseUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = ParseUtils.isOWS('\t');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = ParseUtils.isOWS('R');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = ParseUtils.isOWS(' ');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = ParseUtils.isVChar('');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = ParseUtils.isVChar(' ');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = ParseUtils.isTChar('~');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("!|Dt@(F");
      assertEquals("\"!|Dt@(F\"", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("9N!.");
      assertEquals("9N!.", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("-*_rP+]iTTxXQ-R");
      assertEquals("\"-*_rP+]iTTxXQ-R\"", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("c'SX`mvAIa,PF");
      assertEquals("\"c'SX`mvAIa,PF\"", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("wx55UJ^x&Ia\"W");
      assertEquals("\"wx55UJ^x&Ia\\\"W\"", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("LkkW%");
      assertEquals("LkkW%", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("m#");
      assertEquals("m#", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = ParseUtils.quoteIfNeeded("psNe`DQzu{Egp~PO");
      assertEquals("\"psNe`DQzu{Egp~PO\"", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParseUtils parseUtils0 = new ParseUtils();
  }
}
