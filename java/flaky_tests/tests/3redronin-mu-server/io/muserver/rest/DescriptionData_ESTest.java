/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:40:51 GMT 2022
 */

package io.muserver.rest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.ExternalDocumentationObject;
import io.muserver.openapi.TagObject;
import io.muserver.rest.DescriptionData;
import java.lang.annotation.Annotation;
import java.lang.reflect.AnnotatedElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DescriptionData_ESTest extends DescriptionData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExternalDocumentationObject externalDocumentationObject0 = mock(ExternalDocumentationObject.class, new ViolatedAssumptionAnswer());
      DescriptionData descriptionData0 = new DescriptionData((String) null, "{RP{5F*0Xm(>JJ", externalDocumentationObject0, "{RP{5F*0Xm(>JJ");
      String string0 = descriptionData0.summaryAndDescription();
      assertEquals(" - {RP{5F*0Xm(>JJ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DescriptionData descriptionData0 = new DescriptionData((String) null, "uq", (ExternalDocumentationObject) null, (String) null);
      // Undeclared exception!
      try { 
        descriptionData0.toTag();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DescriptionData descriptionData0 = new DescriptionData("<p~z)0M26=ft1b]n6P", "<p~z)0M26=ft1b]n6P", (ExternalDocumentationObject) null, "<p~z)0M26=ft1b]n6P");
      TagObject tagObject0 = descriptionData0.toTag();
      assertEquals("<p~z)0M26=ft1b]n6P", tagObject0.description());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        DescriptionData.fromAnnotation((AnnotatedElement) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.muserver.rest.DescriptionData", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Annotation annotation0 = mock(Annotation.class, new ViolatedAssumptionAnswer());
      AnnotatedElement annotatedElement0 = mock(AnnotatedElement.class, new ViolatedAssumptionAnswer());
      doReturn(annotation0).when(annotatedElement0).getAnnotation(any(java.lang.Class.class));
      // Undeclared exception!
      try { 
        DescriptionData.fromAnnotation(annotatedElement0, "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.evosuite.shaded.org.mockito.codegen.Annotation$MockitoMock$1078960390 cannot be cast to class io.muserver.rest.Description (org.evosuite.shaded.org.mockito.codegen.Annotation$MockitoMock$1078960390 is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7572851b; io.muserver.rest.Description is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @670aa3b0)
         //
         verifyException("io.muserver.rest.DescriptionData", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExternalDocumentationObject externalDocumentationObject0 = mock(ExternalDocumentationObject.class, new ViolatedAssumptionAnswer());
      DescriptionData descriptionData0 = new DescriptionData("", "c;Hsq)V;%?jv3", externalDocumentationObject0, "yl1cfg??s}FQ7");
      String string0 = descriptionData0.summaryAndDescription();
      assertEquals(" - c;Hsq)V;%?jv3", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AnnotatedElement annotatedElement0 = mock(AnnotatedElement.class, new ViolatedAssumptionAnswer());
      doReturn((Annotation) null).when(annotatedElement0).getAnnotation(any(java.lang.Class.class));
      DescriptionData descriptionData0 = DescriptionData.fromAnnotation(annotatedElement0, "");
      String string0 = descriptionData0.summaryAndDescription();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ExternalDocumentationObject externalDocumentationObject0 = mock(ExternalDocumentationObject.class, new ViolatedAssumptionAnswer());
      DescriptionData descriptionData0 = new DescriptionData((String) null, "{RP{5F*0Xm(>JJ", externalDocumentationObject0, "{RP{5F*0Xm(>JJ");
      // Undeclared exception!
      try { 
        descriptionData0.toTag();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }
}
