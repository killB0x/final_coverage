/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:24:08 GMT 2022
 */

package io.muserver.handlers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.handlers.BytesRange;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BytesRange_ESTest extends BytesRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      List<BytesRange> list0 = BytesRange.parse(2L, "bytes=1-T!Ug@s}_");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      List<BytesRange> list0 = BytesRange.parse(0L, "bytes=,");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesRange.parse((-1L), "bytes=byte=-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid range value: byte=-
         //
         verifyException("io.muserver.handlers.BytesRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      List<BytesRange> list0 = BytesRange.parse(1418L, "bytes=1-T!Ug@s}_");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesRange.parse(2758L, "bytes=1TUg@s__");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid range
         //
         verifyException("io.muserver.handlers.BytesRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      List<BytesRange> list0 = BytesRange.parse((-1502L), ",");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      List<BytesRange> list0 = BytesRange.parse(0L, "");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      List<BytesRange> list0 = BytesRange.parse(0L, (String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      List<BytesRange> list0 = BytesRange.parse(221L, "bytes=bytes=sQwQcFJ}`r<x&A-3");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesRange.parse((-2924L), "bytes=sQwQcFJ}`r<x&A-3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The range 0 and -2925 is invalid for length -2924
         //
         verifyException("io.muserver.handlers.BytesRange", e);
      }
  }
}
