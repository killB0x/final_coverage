/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:35:13 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.EncodingObject;
import io.muserver.openapi.ExampleObject;
import io.muserver.openapi.HeaderObject;
import io.muserver.openapi.MediaTypeObject;
import io.muserver.openapi.SchemaObject;
import java.io.StringWriter;
import java.io.Writer;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HeaderObject_ESTest extends HeaderObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("*V&8u");
      HeaderObject headerObject0 = new HeaderObject("*V&8u", true, boolean0, (String) null, (String) null, (SchemaObject) null, "*V&8u", (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      StringWriter stringWriter0 = new StringWriter();
      headerObject0.writeJson(stringWriter0);
      assertTrue(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf((String) null);
      HashMap<String, ExampleObject> hashMap0 = new HashMap<String, ExampleObject>();
      HeaderObject headerObject0 = new HeaderObject((String) null, true, boolean0, (String) null, (String) null, (SchemaObject) null, (Object) null, hashMap0, (Map<String, MediaTypeObject>) null);
      headerObject0.style();
      assertTrue(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Object object0 = new Object();
      HeaderObject headerObject0 = new HeaderObject("O;<;)u:Pd]2:Y1o<1L", false, boolean0, (String) null, " Ct)+$<E78?/i'q;", (SchemaObject) null, object0, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      boolean boolean1 = headerObject0.required();
      assertEquals("O;<;)u:Pd]2:Y1o<1L", headerObject0.description());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Object object0 = new Object();
      HeaderObject headerObject0 = new HeaderObject("O;<;)u:Pd]2:Y1o<1L", false, boolean0, (String) null, " Ct)+$<E78?/i'q;", (SchemaObject) null, object0, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      headerObject0.explode();
      assertFalse(headerObject0.required());
      assertEquals("O;<;)u:Pd]2:Y1o<1L", headerObject0.description());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      HeaderObject headerObject0 = new HeaderObject("|^Ku1", false, boolean0, (String) null, "deprecated", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      headerObject0.examples();
      assertEquals("|^Ku1", headerObject0.description());
      assertFalse(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      HeaderObject headerObject0 = new HeaderObject("|^Ku1", false, boolean0, (String) null, "deprecated", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      headerObject0.example();
      assertEquals("|^Ku1", headerObject0.description());
      assertFalse(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      HeaderObject headerObject0 = new HeaderObject((String) null, false, boolean0, (String) null, "2.&C*|hG\"7H", (SchemaObject) null, ":T\"Q Hz'O~Q", (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      String string0 = headerObject0.description();
      assertFalse(headerObject0.required());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      hashMap0.put("deepObject", (MediaTypeObject) null);
      HeaderObject headerObject0 = new HeaderObject("deepObject", true, boolean0, "deepObject", "deepObject", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, hashMap0);
      headerObject0.description();
      assertTrue(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      HeaderObject headerObject0 = new HeaderObject((String) null, false, boolean0, (String) null, (String) null, (SchemaObject) null, boolean0, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      headerObject0.deprecated();
      assertFalse(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      HeaderObject headerObject0 = new HeaderObject("1t[0:k1i%p", false, boolean0, (String) null, (String) null, (SchemaObject) null, "1t[0:k1i%p", (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      headerObject0.deprecated();
      assertFalse(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      HeaderObject headerObject0 = new HeaderObject("`", true, boolean0, (String) null, "`", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      headerObject0.content();
      assertTrue(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      hashMap0.put((String) null, (MediaTypeObject) null);
      HashMap<String, ExampleObject> hashMap1 = new HashMap<String, ExampleObject>();
      HeaderObject headerObject0 = null;
      try {
        headerObject0 = new HeaderObject("deepObject", false, boolean0, "deepObject", "deepObject", (SchemaObject) null, hashMap1, hashMap1, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only one of 'example' and 'examples' can be supplied
         //
         verifyException("io.muserver.openapi.HeaderObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      HashMap<String, ExampleObject> hashMap1 = new HashMap<String, ExampleObject>();
      HeaderObject headerObject0 = null;
      try {
        headerObject0 = new HeaderObject("deepObject", false, boolean0, "deepObject", "deepObject", (SchemaObject) null, hashMap1, hashMap1, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'content', when specified, must have a single value only, but was {}
         //
         verifyException("io.muserver.openapi.HeaderObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      String string0 = "`GR!& 7J}FR/oH\\u";
      Object object0 = new Object();
      HeaderObject headerObject0 = null;
      try {
        headerObject0 = new HeaderObject("Only one of 'example' and 'examples' can be supplied", true, boolean0, string0, "DxvEr4%[J&", (SchemaObject) null, object0, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'style' must be one of [matrix, label, form, simple, spaceDelimited, pipeDelimited, deepObject] but was `GR!& 7J}FR/oH\\u
         //
         verifyException("io.muserver.openapi.HeaderObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      HeaderObject headerObject0 = new HeaderObject("`", true, boolean0, (String) null, "`", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      // Undeclared exception!
      try { 
        headerObject0.writeJson((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.muserver.openapi.HeaderObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      HashMap<String, EncodingObject> hashMap1 = new HashMap<String, EncodingObject>();
      MediaTypeObject mediaTypeObject0 = new MediaTypeObject((SchemaObject) null, hashMap0, (Map<String, ExampleObject>) null, hashMap1);
      hashMap0.putIfAbsent("3-dl. -0", mediaTypeObject0);
      HeaderObject headerObject0 = new HeaderObject("DxvEr4%[J&", true, boolean0, "deepObject", "DxvEr4%[J&", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, hashMap0);
      headerObject0.content();
      assertTrue(headerObject0.required());
      assertEquals("DxvEr4%[J&", headerObject0.description());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      HeaderObject headerObject0 = new HeaderObject("*V&8u", false, boolean0, (String) null, (String) null, (SchemaObject) null, "*V&8u", (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      headerObject0.example();
      assertFalse(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      HashMap<String, EncodingObject> hashMap1 = new HashMap<String, EncodingObject>();
      MediaTypeObject mediaTypeObject0 = new MediaTypeObject((SchemaObject) null, hashMap0, (Map<String, ExampleObject>) null, hashMap1);
      hashMap0.putIfAbsent("3-dl. -0", mediaTypeObject0);
      HeaderObject headerObject0 = new HeaderObject("DxvEr4%[J&", true, boolean0, "deepObject", "DxvEr4%[J&", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, hashMap0);
      headerObject0.schema();
      assertTrue(headerObject0.required());
      assertEquals("DxvEr4%[J&", headerObject0.description());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      HashMap<String, EncodingObject> hashMap1 = new HashMap<String, EncodingObject>();
      MediaTypeObject mediaTypeObject0 = new MediaTypeObject((SchemaObject) null, hashMap0, (Map<String, ExampleObject>) null, hashMap1);
      hashMap0.putIfAbsent("3-dl. -0", mediaTypeObject0);
      HeaderObject headerObject0 = new HeaderObject("DxvEr4%[J&", true, boolean0, "deepObject", "DxvEr4%[J&", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, hashMap0);
      boolean boolean1 = headerObject0.required();
      assertEquals("DxvEr4%[J&", headerObject0.description());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      HeaderObject headerObject0 = new HeaderObject("", true, boolean0, "deepObject", "deepObject", (SchemaObject) null, boolean0, (Map<String, ExampleObject>) null, (Map<String, MediaTypeObject>) null);
      String string0 = headerObject0.description();
      assertTrue(headerObject0.required());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf((String) null);
      HashMap<String, ExampleObject> hashMap0 = new HashMap<String, ExampleObject>();
      HeaderObject headerObject0 = new HeaderObject((String) null, true, boolean0, (String) null, (String) null, (SchemaObject) null, (Object) null, hashMap0, (Map<String, MediaTypeObject>) null);
      headerObject0.explode();
      assertTrue(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf((String) null);
      HashMap<String, ExampleObject> hashMap0 = new HashMap<String, ExampleObject>();
      HeaderObject headerObject0 = new HeaderObject((String) null, true, boolean0, (String) null, (String) null, (SchemaObject) null, (Object) null, hashMap0, (Map<String, MediaTypeObject>) null);
      headerObject0.examples();
      assertTrue(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      HashMap<String, EncodingObject> hashMap1 = new HashMap<String, EncodingObject>();
      MediaTypeObject mediaTypeObject0 = new MediaTypeObject((SchemaObject) null, boolean0, (Map<String, ExampleObject>) null, hashMap1);
      hashMap0.put("deepObject", mediaTypeObject0);
      HeaderObject headerObject0 = new HeaderObject("DxvEr4%[J&", true, boolean0, "deepObject", "DxvEr4%[J&", (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, hashMap0);
      headerObject0.style();
      assertEquals("DxvEr4%[J&", headerObject0.description());
      assertTrue(headerObject0.required());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      hashMap0.put("", (MediaTypeObject) null);
      HeaderObject headerObject0 = new HeaderObject("*V&8u", false, (Boolean) null, (String) null, (String) null, (SchemaObject) null, (Object) null, (Map<String, ExampleObject>) null, hashMap0);
      headerObject0.deprecated();
      assertFalse(headerObject0.required());
  }
}
