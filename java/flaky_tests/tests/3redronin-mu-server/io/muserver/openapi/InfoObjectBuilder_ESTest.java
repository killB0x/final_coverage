/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:26:21 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.ContactObject;
import io.muserver.openapi.InfoObject;
import io.muserver.openapi.InfoObjectBuilder;
import io.muserver.openapi.LicenseObject;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InfoObjectBuilder_ESTest extends InfoObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InfoObjectBuilder infoObjectBuilder0 = new InfoObjectBuilder();
      InfoObjectBuilder infoObjectBuilder1 = infoObjectBuilder0.withTitle((String) null);
      // Undeclared exception!
      try { 
        infoObjectBuilder1.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // title cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InfoObjectBuilder infoObjectBuilder0 = new InfoObjectBuilder();
      InfoObject infoObject0 = infoObjectBuilder0.build();
      assertEquals("1.0", infoObject0.version());
      assertEquals("API Documentation", infoObject0.title());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InfoObjectBuilder infoObjectBuilder0 = InfoObjectBuilder.infoObject();
      InfoObjectBuilder infoObjectBuilder1 = infoObjectBuilder0.withDescription((String) null);
      assertSame(infoObjectBuilder0, infoObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InfoObjectBuilder infoObjectBuilder0 = new InfoObjectBuilder();
      InfoObjectBuilder infoObjectBuilder1 = infoObjectBuilder0.withVersion("io.muserver.openapi.ContactObject");
      assertSame(infoObjectBuilder1, infoObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InfoObjectBuilder infoObjectBuilder0 = new InfoObjectBuilder();
      URI uRI0 = MockURI.aFTPURI;
      InfoObjectBuilder infoObjectBuilder1 = infoObjectBuilder0.withTermsOfService(uRI0);
      assertSame(infoObjectBuilder1, infoObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InfoObjectBuilder infoObjectBuilder0 = new InfoObjectBuilder();
      InfoObjectBuilder infoObjectBuilder1 = infoObjectBuilder0.withLicense((LicenseObject) null);
      assertSame(infoObjectBuilder0, infoObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InfoObjectBuilder infoObjectBuilder0 = InfoObjectBuilder.infoObject();
      InfoObjectBuilder infoObjectBuilder1 = infoObjectBuilder0.withContact((ContactObject) null);
      assertSame(infoObjectBuilder1, infoObjectBuilder0);
  }
}
