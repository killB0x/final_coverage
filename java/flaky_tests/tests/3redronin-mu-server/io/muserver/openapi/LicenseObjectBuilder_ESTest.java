/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:42:07 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.LicenseObject;
import io.muserver.openapi.LicenseObjectBuilder;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LicenseObjectBuilder_ESTest extends LicenseObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LicenseObjectBuilder licenseObjectBuilder0 = new LicenseObjectBuilder();
      URI uRI0 = MockURI.URI("");
      LicenseObjectBuilder licenseObjectBuilder1 = licenseObjectBuilder0.withUrl(uRI0);
      assertSame(licenseObjectBuilder0, licenseObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LicenseObjectBuilder licenseObjectBuilder0 = new LicenseObjectBuilder();
      LicenseObjectBuilder licenseObjectBuilder1 = licenseObjectBuilder0.withName("");
      LicenseObject licenseObject0 = licenseObjectBuilder1.build();
      assertEquals("", licenseObject0.name());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LicenseObjectBuilder licenseObjectBuilder0 = LicenseObjectBuilder.licenseObject();
      assertNotNull(licenseObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LicenseObjectBuilder licenseObjectBuilder0 = new LicenseObjectBuilder();
      // Undeclared exception!
      try { 
        licenseObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LicenseObject licenseObject0 = LicenseObjectBuilder.TheUnlicense();
      assertEquals("The Unlicense", licenseObject0.name());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LicenseObject licenseObject0 = LicenseObjectBuilder.MITLicense();
      assertEquals("MIT License", licenseObject0.name());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LicenseObject licenseObject0 = LicenseObjectBuilder.Apache2_0();
      assertEquals("Apache 2.0", licenseObject0.name());
  }
}
