/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:31:22 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.OAuthFlowObject;
import io.muserver.openapi.OAuthFlowObjectBuilder;
import java.net.URI;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OAuthFlowObjectBuilder_ESTest extends OAuthFlowObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuthFlowObjectBuilder oAuthFlowObjectBuilder0 = new OAuthFlowObjectBuilder();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuthFlowObjectBuilder oAuthFlowObjectBuilder0 = OAuthFlowObjectBuilder.oAuthFlowObject();
      URI uRI0 = MockURI.aFileURI;
      OAuthFlowObjectBuilder oAuthFlowObjectBuilder1 = oAuthFlowObjectBuilder0.withRefreshUrl(uRI0);
      assertSame(oAuthFlowObjectBuilder1, oAuthFlowObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OAuthFlowObjectBuilder oAuthFlowObjectBuilder0 = OAuthFlowObjectBuilder.oAuthFlowObject();
      // Undeclared exception!
      try { 
        oAuthFlowObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // authorizationUrl cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OAuthFlowObjectBuilder oAuthFlowObjectBuilder0 = OAuthFlowObjectBuilder.oAuthFlowObject();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      OAuthFlowObjectBuilder oAuthFlowObjectBuilder1 = oAuthFlowObjectBuilder0.withScopes(hashMap0);
      URI uRI0 = MockURI.aFileURI;
      OAuthFlowObjectBuilder oAuthFlowObjectBuilder2 = oAuthFlowObjectBuilder1.withAuthorizationUrl(uRI0);
      oAuthFlowObjectBuilder2.withTokenUrl(uRI0);
      OAuthFlowObject oAuthFlowObject0 = oAuthFlowObjectBuilder1.build();
      assertNotNull(oAuthFlowObject0);
  }
}
