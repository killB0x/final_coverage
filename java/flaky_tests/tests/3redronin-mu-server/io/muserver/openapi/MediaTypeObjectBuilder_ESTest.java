/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:49:59 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.EncodingObject;
import io.muserver.openapi.ExampleObject;
import io.muserver.openapi.MediaTypeObject;
import io.muserver.openapi.MediaTypeObjectBuilder;
import io.muserver.openapi.SchemaObject;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MediaTypeObjectBuilder_ESTest extends MediaTypeObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MediaTypeObjectBuilder mediaTypeObjectBuilder0 = MediaTypeObjectBuilder.mediaTypeObject();
      HashMap<String, EncodingObject> hashMap0 = new HashMap<String, EncodingObject>();
      MediaTypeObjectBuilder mediaTypeObjectBuilder1 = mediaTypeObjectBuilder0.withEncoding(hashMap0);
      assertSame(mediaTypeObjectBuilder1, mediaTypeObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MediaTypeObjectBuilder mediaTypeObjectBuilder0 = new MediaTypeObjectBuilder();
      HashMap<String, ExampleObject> hashMap0 = new HashMap<String, ExampleObject>();
      MediaTypeObjectBuilder mediaTypeObjectBuilder1 = mediaTypeObjectBuilder0.withExample(hashMap0);
      assertSame(mediaTypeObjectBuilder0, mediaTypeObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MediaTypeObjectBuilder mediaTypeObjectBuilder0 = new MediaTypeObjectBuilder();
      HashMap<String, ExampleObject> hashMap0 = new HashMap<String, ExampleObject>();
      MediaTypeObjectBuilder mediaTypeObjectBuilder1 = mediaTypeObjectBuilder0.withExamples(hashMap0);
      mediaTypeObjectBuilder1.withExample(hashMap0);
      // Undeclared exception!
      try { 
        mediaTypeObjectBuilder1.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only one of 'example' and 'examples' can be supplied
         //
         verifyException("io.muserver.openapi.MediaTypeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MediaTypeObjectBuilder mediaTypeObjectBuilder0 = MediaTypeObjectBuilder.mediaTypeObject();
      MediaTypeObjectBuilder mediaTypeObjectBuilder1 = mediaTypeObjectBuilder0.withSchema((SchemaObject) null);
      assertSame(mediaTypeObjectBuilder0, mediaTypeObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MediaTypeObjectBuilder mediaTypeObjectBuilder0 = MediaTypeObjectBuilder.mediaTypeObject();
      MediaTypeObject mediaTypeObject0 = mediaTypeObjectBuilder0.build();
      assertNotNull(mediaTypeObject0);
  }
}
