/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:35:00 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import io.muserver.openapi.XmlObject;
import io.muserver.openapi.XmlObjectBuilder;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlObjectBuilder_ESTest extends XmlObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlObjectBuilder xmlObjectBuilder0 = new XmlObjectBuilder();
      URI uRI0 = MockURI.aFTPURI;
      XmlObjectBuilder xmlObjectBuilder1 = xmlObjectBuilder0.withNamespace(uRI0);
      assertSame(xmlObjectBuilder0, xmlObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlObjectBuilder xmlObjectBuilder0 = new XmlObjectBuilder();
      xmlObjectBuilder0.withAttribute(true);
      XmlObject xmlObject0 = xmlObjectBuilder0.build();
      assertTrue(xmlObject0.attribute);
      assertFalse(xmlObject0.wrapped);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlObjectBuilder xmlObjectBuilder0 = new XmlObjectBuilder();
      XmlObjectBuilder xmlObjectBuilder1 = xmlObjectBuilder0.withPrefix("$6Mf");
      assertSame(xmlObjectBuilder1, xmlObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlObjectBuilder xmlObjectBuilder0 = new XmlObjectBuilder();
      xmlObjectBuilder0.withWrapped(true);
      XmlObject xmlObject0 = xmlObjectBuilder0.build();
      assertFalse(xmlObject0.attribute);
      assertTrue(xmlObject0.wrapped);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlObjectBuilder xmlObjectBuilder0 = XmlObjectBuilder.xmlObject();
      XmlObjectBuilder xmlObjectBuilder1 = xmlObjectBuilder0.withName("");
      assertSame(xmlObjectBuilder1, xmlObjectBuilder0);
  }
}
