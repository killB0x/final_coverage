/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:50:50 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.CallbackObject;
import io.muserver.openapi.CallbackObjectBuilder;
import io.muserver.openapi.PathItemObject;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CallbackObjectBuilder_ESTest extends CallbackObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CallbackObjectBuilder callbackObjectBuilder0 = new CallbackObjectBuilder();
      // Undeclared exception!
      try { 
        callbackObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // callbacks cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CallbackObjectBuilder callbackObjectBuilder0 = CallbackObjectBuilder.callbackObject();
      assertNotNull(callbackObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CallbackObjectBuilder callbackObjectBuilder0 = new CallbackObjectBuilder();
      HashMap<String, PathItemObject> hashMap0 = new HashMap<String, PathItemObject>();
      CallbackObjectBuilder callbackObjectBuilder1 = callbackObjectBuilder0.withCallbacks(hashMap0);
      CallbackObject callbackObject0 = callbackObjectBuilder1.build();
      assertNotNull(callbackObject0);
  }
}
