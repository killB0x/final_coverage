/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:27:56 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.ExternalDocumentationObject;
import io.muserver.openapi.ExternalDocumentationObjectBuilder;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExternalDocumentationObjectBuilder_ESTest extends ExternalDocumentationObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExternalDocumentationObjectBuilder externalDocumentationObjectBuilder0 = ExternalDocumentationObjectBuilder.externalDocumentationObject();
      URI uRI0 = MockURI.aFTPURI;
      externalDocumentationObjectBuilder0.withUrl(uRI0);
      ExternalDocumentationObject externalDocumentationObject0 = externalDocumentationObjectBuilder0.build();
      assertNull(externalDocumentationObject0.description());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExternalDocumentationObjectBuilder externalDocumentationObjectBuilder0 = new ExternalDocumentationObjectBuilder();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExternalDocumentationObjectBuilder externalDocumentationObjectBuilder0 = ExternalDocumentationObjectBuilder.externalDocumentationObject();
      ExternalDocumentationObjectBuilder externalDocumentationObjectBuilder1 = externalDocumentationObjectBuilder0.withDescription("L3");
      assertSame(externalDocumentationObjectBuilder0, externalDocumentationObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExternalDocumentationObjectBuilder externalDocumentationObjectBuilder0 = ExternalDocumentationObjectBuilder.externalDocumentationObject();
      // Undeclared exception!
      try { 
        externalDocumentationObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // url cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }
}
