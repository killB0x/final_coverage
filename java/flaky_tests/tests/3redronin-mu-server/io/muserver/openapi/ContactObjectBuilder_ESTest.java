/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:42:58 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.ContactObject;
import io.muserver.openapi.ContactObjectBuilder;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ContactObjectBuilder_ESTest extends ContactObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContactObjectBuilder contactObjectBuilder0 = new ContactObjectBuilder();
      contactObjectBuilder0.withEmail("{");
      // Undeclared exception!
      try { 
        contactObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'email' must be a valid email address, but was {
         //
         verifyException("io.muserver.openapi.ContactObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ContactObjectBuilder contactObjectBuilder0 = new ContactObjectBuilder();
      URI uRI0 = MockURI.aFTPURI;
      ContactObjectBuilder contactObjectBuilder1 = contactObjectBuilder0.withUrl(uRI0);
      assertSame(contactObjectBuilder1, contactObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ContactObjectBuilder contactObjectBuilder0 = new ContactObjectBuilder();
      ContactObject contactObject0 = contactObjectBuilder0.build();
      assertNull(contactObject0.email());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContactObjectBuilder contactObjectBuilder0 = ContactObjectBuilder.contactObject();
      assertNotNull(contactObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ContactObjectBuilder contactObjectBuilder0 = new ContactObjectBuilder();
      ContactObjectBuilder contactObjectBuilder1 = contactObjectBuilder0.withName("io.muserver.openapi.ContactObject");
      assertSame(contactObjectBuilder0, contactObjectBuilder1);
  }
}
