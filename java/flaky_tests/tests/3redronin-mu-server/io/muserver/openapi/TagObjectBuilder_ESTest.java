/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:18:03 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.ExternalDocumentationObject;
import io.muserver.openapi.TagObject;
import io.muserver.openapi.TagObjectBuilder;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TagObjectBuilder_ESTest extends TagObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TagObjectBuilder tagObjectBuilder0 = new TagObjectBuilder();
      tagObjectBuilder0.withName("sa%?--G[Ec");
      TagObject tagObject0 = tagObjectBuilder0.build();
      assertNull(tagObject0.description());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TagObjectBuilder tagObjectBuilder0 = TagObjectBuilder.tagObject();
      assertNotNull(tagObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TagObjectBuilder tagObjectBuilder0 = new TagObjectBuilder();
      TagObjectBuilder tagObjectBuilder1 = tagObjectBuilder0.withDescription("description");
      assertSame(tagObjectBuilder0, tagObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TagObjectBuilder tagObjectBuilder0 = new TagObjectBuilder();
      // Undeclared exception!
      try { 
        tagObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TagObjectBuilder tagObjectBuilder0 = new TagObjectBuilder();
      URI uRI0 = MockURI.aFileURI;
      ExternalDocumentationObject externalDocumentationObject0 = new ExternalDocumentationObject("description", uRI0);
      TagObjectBuilder tagObjectBuilder1 = tagObjectBuilder0.withExternalDocs(externalDocumentationObject0);
      assertSame(tagObjectBuilder1, tagObjectBuilder0);
  }
}
