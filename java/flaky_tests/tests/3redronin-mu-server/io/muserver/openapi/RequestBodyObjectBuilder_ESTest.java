/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:44:21 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.MediaTypeObject;
import io.muserver.openapi.RequestBodyObject;
import io.muserver.openapi.RequestBodyObjectBuilder;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RequestBodyObjectBuilder_ESTest extends RequestBodyObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RequestBodyObjectBuilder requestBodyObjectBuilder0 = RequestBodyObjectBuilder.requestBodyObject();
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      requestBodyObjectBuilder0.withContent(hashMap0);
      requestBodyObjectBuilder0.withRequired(true);
      RequestBodyObject requestBodyObject0 = requestBodyObjectBuilder0.build();
      assertTrue(requestBodyObject0.required);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RequestBodyObjectBuilder requestBodyObjectBuilder0 = RequestBodyObjectBuilder.requestBodyObject();
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      RequestBodyObjectBuilder requestBodyObjectBuilder1 = requestBodyObjectBuilder0.withContent(hashMap0);
      RequestBodyObject requestBodyObject0 = requestBodyObjectBuilder1.build();
      assertFalse(requestBodyObject0.required());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RequestBodyObjectBuilder requestBodyObjectBuilder0 = RequestBodyObjectBuilder.requestBodyObject();
      RequestBodyObjectBuilder requestBodyObjectBuilder1 = requestBodyObjectBuilder0.withDescription(", deprecated=");
      assertSame(requestBodyObjectBuilder1, requestBodyObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RequestBodyObjectBuilder requestBodyObjectBuilder0 = RequestBodyObjectBuilder.requestBodyObject();
      // Undeclared exception!
      try { 
        requestBodyObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // content cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RequestBodyObjectBuilder requestBodyObjectBuilder0 = new RequestBodyObjectBuilder();
      HashMap<String, MediaTypeObject> hashMap0 = new HashMap<String, MediaTypeObject>();
      RequestBodyObjectBuilder requestBodyObjectBuilder1 = requestBodyObjectBuilder0.withContent(hashMap0);
      assertSame(requestBodyObjectBuilder1, requestBodyObjectBuilder0);
  }
}
