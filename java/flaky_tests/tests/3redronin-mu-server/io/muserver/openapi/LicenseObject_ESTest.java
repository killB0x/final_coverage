/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:22:11 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.LicenseObject;
import java.io.StringWriter;
import java.io.Writer;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LicenseObject_ESTest extends LicenseObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LicenseObject licenseObject0 = new LicenseObject("", (URI) null);
      URI uRI0 = licenseObject0.url();
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URI uRI0 = MockURI.URI("name", "name", "name");
      LicenseObject licenseObject0 = new LicenseObject("name", uRI0);
      URI uRI1 = licenseObject0.url();
      assertEquals("name:name#name", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LicenseObject licenseObject0 = new LicenseObject("", (URI) null);
      String string0 = licenseObject0.name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LicenseObject licenseObject0 = new LicenseObject("", (URI) null);
      // Undeclared exception!
      try { 
        licenseObject0.writeJson((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.muserver.openapi.LicenseObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LicenseObject licenseObject0 = null;
      try {
        licenseObject0 = new LicenseObject((String) null, (URI) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "aFUrT3y|PB+x!8c*", "6w", 2040, (String) null, "[4|'R6KHg", "aFUrT3y|PB+x!8c*");
      LicenseObject licenseObject0 = new LicenseObject("6w", uRI0);
      String string0 = licenseObject0.name();
      assertEquals("6w", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "aFUrT3y|PB+x!8c*", "6w", 2040, (String) null, "[4|'R6KHg", "aFUrT3y|PB+x!8c*");
      LicenseObject licenseObject0 = new LicenseObject("6w", uRI0);
      StringWriter stringWriter0 = new StringWriter();
      licenseObject0.writeJson(stringWriter0);
      assertEquals("6w", licenseObject0.name());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "aFUrT3y|PB+x!8c*", "6w", 2040, (String) null, "[4|'R6KHg", "aFUrT3y|PB+x!8c*");
      LicenseObject licenseObject0 = new LicenseObject("6w", uRI0);
      URI uRI1 = licenseObject0.url();
      assertEquals("[4%7C'R6KHg", uRI1.getRawQuery());
  }
}
