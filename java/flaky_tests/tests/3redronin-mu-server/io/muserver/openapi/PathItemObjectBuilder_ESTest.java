/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:21:30 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.OperationObject;
import io.muserver.openapi.ParameterObject;
import io.muserver.openapi.PathItemObject;
import io.muserver.openapi.PathItemObjectBuilder;
import io.muserver.openapi.ServerObject;
import io.muserver.openapi.ServerVariableObject;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathItemObjectBuilder_ESTest extends PathItemObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = PathItemObjectBuilder.pathItemObject();
      pathItemObjectBuilder0.withSummary("`");
      String string0 = pathItemObjectBuilder0.summary();
      assertEquals("`", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      LinkedList<ServerObject> linkedList0 = new LinkedList<ServerObject>();
      PathItemObjectBuilder pathItemObjectBuilder1 = pathItemObjectBuilder0.withServers(linkedList0);
      HashMap<String, ServerVariableObject> hashMap0 = new HashMap<String, ServerVariableObject>();
      ServerObject serverObject0 = new ServerObject("", (String) null, hashMap0);
      linkedList0.add(serverObject0);
      List<ServerObject> list0 = pathItemObjectBuilder1.servers();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = PathItemObjectBuilder.pathItemObject();
      LinkedList<ParameterObject> linkedList0 = new LinkedList<ParameterObject>();
      pathItemObjectBuilder0.withParameters(linkedList0);
      List<ParameterObject> list0 = pathItemObjectBuilder0.parameters();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      HashMap<String, OperationObject> hashMap0 = new HashMap<String, OperationObject>();
      pathItemObjectBuilder0.withOperations(hashMap0);
      Map<String, OperationObject> map0 = pathItemObjectBuilder0.operations();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      HashMap<String, OperationObject> hashMap0 = new HashMap<String, OperationObject>();
      hashMap0.put("", (OperationObject) null);
      pathItemObjectBuilder0.withOperations(hashMap0);
      Map<String, OperationObject> map0 = pathItemObjectBuilder0.operations();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      pathItemObjectBuilder0.withDescription("lY?X");
      String string0 = pathItemObjectBuilder0.description();
      assertEquals("lY?X", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      pathItemObjectBuilder0.withDescription("");
      String string0 = pathItemObjectBuilder0.description();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = PathItemObjectBuilder.pathItemObject();
      LinkedList<ParameterObject> linkedList0 = new LinkedList<ParameterObject>();
      PathItemObjectBuilder pathItemObjectBuilder1 = pathItemObjectBuilder0.withParameters(linkedList0);
      linkedList0.add((ParameterObject) null);
      // Undeclared exception!
      try { 
        pathItemObjectBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.muserver.openapi.PathItemObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      List<ServerObject> list0 = pathItemObjectBuilder0.servers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      PathItemObjectBuilder pathItemObjectBuilder1 = pathItemObjectBuilder0.withSummary("");
      String string0 = pathItemObjectBuilder1.summary();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = PathItemObjectBuilder.pathItemObject();
      LinkedList<ServerObject> linkedList0 = new LinkedList<ServerObject>();
      pathItemObjectBuilder0.withServers(linkedList0);
      List<ServerObject> list0 = pathItemObjectBuilder0.servers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      String string0 = pathItemObjectBuilder0.description();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      List<ParameterObject> list0 = pathItemObjectBuilder0.parameters();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = PathItemObjectBuilder.pathItemObject();
      Map<String, OperationObject> map0 = pathItemObjectBuilder0.operations();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = PathItemObjectBuilder.pathItemObject();
      String string0 = pathItemObjectBuilder0.summary();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = PathItemObjectBuilder.pathItemObject();
      PathItemObject pathItemObject0 = pathItemObjectBuilder0.build();
      assertNull(pathItemObject0.summary());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PathItemObjectBuilder pathItemObjectBuilder0 = new PathItemObjectBuilder();
      LinkedList<ParameterObject> linkedList0 = new LinkedList<ParameterObject>();
      pathItemObjectBuilder0.withParameters(linkedList0);
      linkedList0.add((ParameterObject) null);
      List<ParameterObject> list0 = pathItemObjectBuilder0.parameters();
      assertFalse(list0.isEmpty());
  }
}
