/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:24:16 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.PathItemObject;
import io.muserver.openapi.PathsObject;
import io.muserver.openapi.PathsObjectBuilder;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathsObjectBuilder_ESTest extends PathsObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PathsObjectBuilder pathsObjectBuilder0 = PathsObjectBuilder.pathsObject();
      HashMap<String, PathItemObject> hashMap0 = new HashMap<String, PathItemObject>();
      hashMap0.put((String) null, (PathItemObject) null);
      pathsObjectBuilder0.withPathItemObjects(hashMap0);
      // Undeclared exception!
      try { 
        pathsObjectBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.muserver.openapi.PathsObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PathsObjectBuilder pathsObjectBuilder0 = PathsObjectBuilder.pathsObject();
      HashMap<String, PathItemObject> hashMap0 = new HashMap<String, PathItemObject>();
      hashMap0.put(", allOf=", (PathItemObject) null);
      PathsObjectBuilder pathsObjectBuilder1 = pathsObjectBuilder0.withPathItemObjects(hashMap0);
      // Undeclared exception!
      try { 
        pathsObjectBuilder1.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Each path must start with a '/' but got ', allOf=' from {, allOf==null}
         //
         verifyException("io.muserver.openapi.PathsObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PathsObjectBuilder pathsObjectBuilder0 = PathsObjectBuilder.pathsObject();
      PathsObject pathsObject0 = pathsObjectBuilder0.build();
      assertNotNull(pathsObject0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PathsObjectBuilder pathsObjectBuilder0 = new PathsObjectBuilder();
      PathsObjectBuilder pathsObjectBuilder1 = pathsObjectBuilder0.withPathItemObjects((Map<String, PathItemObject>) null);
      assertSame(pathsObjectBuilder0, pathsObjectBuilder1);
  }
}
