/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:33:36 GMT 2022
 */

package io.muserver.openapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.muserver.openapi.ServerVariableObject;
import io.muserver.openapi.ServerVariableObjectBuilder;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ServerVariableObjectBuilder_ESTest extends ServerVariableObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ServerVariableObjectBuilder serverVariableObjectBuilder0 = ServerVariableObjectBuilder.serverVariableObject();
      serverVariableObjectBuilder0.withDefaultValue("rU>U:`&+nZ+]");
      ServerVariableObject serverVariableObject0 = serverVariableObjectBuilder0.build();
      assertNull(serverVariableObject0.description());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ServerVariableObjectBuilder serverVariableObjectBuilder0 = ServerVariableObjectBuilder.serverVariableObject();
      ServerVariableObjectBuilder serverVariableObjectBuilder1 = serverVariableObjectBuilder0.withDescription("");
      assertSame(serverVariableObjectBuilder0, serverVariableObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ServerVariableObjectBuilder serverVariableObjectBuilder0 = ServerVariableObjectBuilder.serverVariableObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ServerVariableObjectBuilder serverVariableObjectBuilder1 = serverVariableObjectBuilder0.withEnumValues(linkedList0);
      assertSame(serverVariableObjectBuilder1, serverVariableObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ServerVariableObjectBuilder serverVariableObjectBuilder0 = new ServerVariableObjectBuilder();
      // Undeclared exception!
      try { 
        serverVariableObjectBuilder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // defaultValue cannot be null
         //
         verifyException("io.muserver.Mutils", e);
      }
  }
}
