/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:45:02 GMT 2022
 */

package io.muserver;

import org.junit.Test;
import static org.junit.Assert.*;
import io.muserver.ResponseState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResponseState_ESTest extends ResponseState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResponseState[] responseStateArray0 = ResponseState.values();
      assertEquals(9, responseStateArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResponseState responseState0 = ResponseState.valueOf("FINISHED");
      assertEquals(ResponseState.FINISHED, responseState0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResponseState responseState0 = ResponseState.valueOf("FINISHING");
      assertFalse(responseState0.completedSuccessfully());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResponseState responseState0 = ResponseState.CLIENT_DISCONNECTED;
      boolean boolean0 = responseState0.endState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ResponseState responseState0 = ResponseState.TIMED_OUT;
      boolean boolean0 = responseState0.completedSuccessfully();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ResponseState responseState0 = ResponseState.FULL_SENT;
      boolean boolean0 = responseState0.completedSuccessfully();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ResponseState responseState0 = ResponseState.FINISHING;
      boolean boolean0 = responseState0.endState();
      assertFalse(boolean0);
  }
}
