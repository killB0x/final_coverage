/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 16:10:22 GMT 2022
 */

package com.tecacet.finance.service.currency;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tecacet.finance.service.currency.GrandtrunkCurrencyExchangeService;
import java.time.LocalDate;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GrandtrunkCurrencyExchangeService_ESTest extends GrandtrunkCurrencyExchangeService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      try { 
        grandtrunkCurrencyExchangeService0.getCurrentExchangeRate("j}z)w^x", "com.tecacet.finance.service.currency.GrandtrunkCurrencyExchangeService");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Connect to http://currencies.apps.grandtrunk.net/getlatest/j}z)w^x/com.tecacet.finance.service.currency.GrandtrunkCurrencyExchangeService failed with response code 404 and message: Not Found
         //
         verifyException("com.tecacet.finance.service.currency.GrandtrunkCurrencyExchangeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://currencies.apps.grandtrunk.net/currencies");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "8v9j");
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      List<String> list0 = grandtrunkCurrencyExchangeService0.getSupportedCurrencies();
      assertTrue(list0.contains("8v9j"));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://currencies.apps.grandtrunk.net/getrate/2014-02-14/b/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        grandtrunkCurrencyExchangeService0.getExchangeRate("b", "", localDate0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      // Undeclared exception!
      try { 
        grandtrunkCurrencyExchangeService0.getExchangeRate("yyyy-MM-dd", "yyyy-MM-dd", (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://currencies.apps.grandtrunk.net/getlatest/>0@FxKZTpK8h-!/>0@FxKZTpK8h-!");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "False");
      try { 
        grandtrunkCurrencyExchangeService0.getCurrentExchangeRate(">0@FxKZTpK8h-!", ">0@FxKZTpK8h-!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No exchange rate found
         //
         verifyException("com.tecacet.finance.service.currency.GrandtrunkCurrencyExchangeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://currencies.apps.grandtrunk.net/getlatest/>0@FxKZTpK8h-!/>0@FxKZTpK8h-!");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "6");
      double double0 = grandtrunkCurrencyExchangeService0.getCurrentExchangeRate(">0@FxKZTpK8h-!", ">0@FxKZTpK8h-!");
      assertEquals(6.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      try { 
        grandtrunkCurrencyExchangeService0.getSupportedCurrencies();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Connect to http://currencies.apps.grandtrunk.net/currencies failed with response code 404 and message: Not Found
         //
         verifyException("com.tecacet.finance.service.currency.GrandtrunkCurrencyExchangeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GrandtrunkCurrencyExchangeService grandtrunkCurrencyExchangeService0 = new GrandtrunkCurrencyExchangeService();
      LocalDate localDate0 = MockLocalDate.now();
      try { 
        grandtrunkCurrencyExchangeService0.getExchangeRate("b", "", localDate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Connect to http://currencies.apps.grandtrunk.net/getrate/2014-02-14/b/ failed with response code 404 and message: Not Found
         //
         verifyException("com.tecacet.finance.service.currency.GrandtrunkCurrencyExchangeService", e);
      }
  }
}
