/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 15:50:57 GMT 2022
 */

package com.tecacet.finance.service.stock.yahoo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tecacet.finance.model.Split;
import com.tecacet.finance.model.StandardPeriodType;
import com.tecacet.finance.service.stock.yahoo.YahooSplitService;
import java.io.IOException;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.chrono.IsoChronology;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractYahooService_ESTest extends AbstractYahooService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      LocalDate localDate0 = MockLocalDate.now();
      LocalDate localDate1 = MockLocalDate.ofYearDay((-1236), 301);
      StandardPeriodType standardPeriodType0 = StandardPeriodType.YEAR;
      try { 
        yahooSplitService0.getRequestParams(localDate0, localDate1, standardPeriodType0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Period type YEAR not supported
         //
         verifyException("com.tecacet.finance.service.stock.yahoo.AbstractYahooService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://finance.yahoo.com/quote/%5EGSPC/options");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "F+1]?Cv{C`MBF,");
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("https://query1.finance.yahoo.com/v1/test/getcrumb");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "F+1]?Cv{C`MBF,");
      Period period0 = Period.of(31, 163, 31);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      EvoSuiteURL evoSuiteURL2 = new EvoSuiteURL("https://query1.finance.yahoo.com/v7/finance/download/F%2B1%5D%3FCv%7BC%60MBF%2C?period1=1392354000&period2=1392354000&interval=1d&crumb=F%2B1%5D%3FCv%7BC%60MBF%2C&events=split");
      NetworkHandling.createRemoteTextFile(evoSuiteURL2, "F+1]?Cv{C`MBF,");
      List<Split> list0 = yahooSplitService0.getSplitHistory("F+1]?Cv{C`MBF,", localDate0, localDate0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://finance.yahoo.com/quote/%5EGSPC/options");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "F+1]?Cv{C`MBF,");
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("https://query1.finance.yahoo.com/v1/test/getcrumb");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "F+1]?Cv{C`MBF,");
      LocalDate localDate0 = MockLocalDate.ofYearDay((-3307), 302);
      StandardPeriodType standardPeriodType0 = StandardPeriodType.DAY;
      Map<String, String> map0 = yahooSplitService0.getRequestParams(localDate0, localDate0, standardPeriodType0);
      assertEquals(4, map0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        yahooSplitService0.getUrlStream((String) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      try { 
        yahooSplitService0.getUrlStream("M:aKSrqD+pLPZEv", map0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      StandardPeriodType standardPeriodType0 = StandardPeriodType.MONTH;
      // Undeclared exception!
      try { 
        yahooSplitService0.getRequestParams((LocalDate) null, (LocalDate) null, standardPeriodType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tecacet.finance.service.stock.yahoo.AbstractYahooService", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      LocalDate localDate0 = MockLocalDate.now();
      StandardPeriodType standardPeriodType0 = StandardPeriodType.MONTH;
      try { 
        yahooSplitService0.getRequestParams(localDate0, localDate0, standardPeriodType0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      YahooSplitService yahooSplitService0 = new YahooSplitService();
      LocalDate localDate0 = MockLocalDate.now();
      StandardPeriodType standardPeriodType0 = StandardPeriodType.WEEK;
      try { 
        yahooSplitService0.getRequestParams(localDate0, localDate0, standardPeriodType0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }
}
