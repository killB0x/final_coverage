/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:11:17 GMT 2022
 */

package org.la4j.inversion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.la4j.Matrix;
import org.la4j.inversion.NoPivotGaussInverter;
import org.la4j.matrix.DenseMatrix;
import org.la4j.matrix.RowMajorSparseMatrix;
import org.la4j.vector.DenseVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NoPivotGaussInverter_ESTest extends NoPivotGaussInverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2762.44516;
      doubleArray0[1] = 4.9E-324;
      DenseVector denseVector0 = DenseVector.fromArray(doubleArray0);
      Matrix matrix0 = denseVector0.toDiagonalMatrix();
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(matrix0);
      // Undeclared exception!
      try { 
        noPivotGaussInverter0.inverse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // This matrix cannot be inverted with a non-pivoting Gauss elimination method.
         //
         verifyException("org.la4j.inversion.NoPivotGaussInverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.zero(0, 2928, 0);
      Matrix matrix0 = rowMajorSparseMatrix0.transpose();
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(matrix0);
      // Undeclared exception!
      try { 
        noPivotGaussInverter0.inverse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong matrix size: rows != columns
         //
         verifyException("org.la4j.inversion.NoPivotGaussInverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DenseMatrix denseMatrix0 = DenseMatrix.fromCSV("");
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(denseMatrix0);
      Matrix matrix0 = noPivotGaussInverter0.self();
      assertEquals(0, matrix0.rows());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DenseVector denseVector0 = DenseVector.zero(14);
      Matrix matrix0 = denseVector0.toRowMatrix();
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(matrix0);
      Matrix matrix1 = noPivotGaussInverter0.self();
      assertSame(matrix0, matrix1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DenseMatrix denseMatrix0 = DenseMatrix.fromCSV("");
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(denseMatrix0);
      Matrix matrix0 = noPivotGaussInverter0.inverse();
      assertNotSame(denseMatrix0, matrix0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DenseMatrix denseMatrix0 = DenseMatrix.unit(4058, 4058);
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(denseMatrix0);
      // Undeclared exception!
      noPivotGaussInverter0.inverse();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter((Matrix) null);
      // Undeclared exception!
      try { 
        noPivotGaussInverter0.inverse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.la4j.inversion.NoPivotGaussInverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Matrix matrix0 = Matrix.from1DArray(3, 3, doubleArray0);
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(matrix0);
      // Undeclared exception!
      try { 
        noPivotGaussInverter0.inverse();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2762.44516;
      DenseVector denseVector0 = DenseVector.fromArray(doubleArray0);
      Matrix matrix0 = denseVector0.toDiagonalMatrix();
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(matrix0);
      // Undeclared exception!
      try { 
        noPivotGaussInverter0.inverse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // This matrix cannot be inverted with a non-pivoting Gauss elimination method.
         //
         verifyException("org.la4j.inversion.NoPivotGaussInverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DenseMatrix denseMatrix0 = DenseMatrix.identity(1);
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(denseMatrix0);
      Matrix matrix0 = noPivotGaussInverter0.inverse();
      assertTrue(matrix0.equals((Object)denseMatrix0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DenseVector denseVector0 = DenseVector.zero(32);
      Matrix matrix0 = denseVector0.toRowMatrix();
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter(matrix0);
      // Undeclared exception!
      try { 
        noPivotGaussInverter0.inverse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong matrix size: rows != columns
         //
         verifyException("org.la4j.inversion.NoPivotGaussInverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoPivotGaussInverter noPivotGaussInverter0 = new NoPivotGaussInverter((Matrix) null);
      Matrix matrix0 = noPivotGaussInverter0.self();
      assertNull(matrix0);
  }
}
