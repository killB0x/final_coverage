/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:45:03 GMT 2022
 */

package org.la4j.operation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.la4j.Matrix;
import org.la4j.matrix.ColumnMajorSparseMatrix;
import org.la4j.matrix.DenseMatrix;
import org.la4j.matrix.RowMajorSparseMatrix;
import org.la4j.matrix.dense.Basic2DMatrix;
import org.la4j.matrix.sparse.CRSMatrix;
import org.la4j.operation.MatrixOperation;
import org.la4j.operation.ooplace.OoPlaceMatricesAddition;
import org.la4j.operation.ooplace.OoPlaceMatrixByItsTransposeMultiplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MatrixOperation_ESTest extends MatrixOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.zero(0, 13, 0);
      OoPlaceMatricesAddition ooPlaceMatricesAddition0 = new OoPlaceMatricesAddition();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.diagonal(0, 1433.40038);
      MatrixOperation<Matrix> matrixOperation0 = ooPlaceMatricesAddition0.partiallyApply(columnMajorSparseMatrix0);
      CRSMatrix cRSMatrix0 = (CRSMatrix)matrixOperation0.apply(rowMajorSparseMatrix0);
      assertEquals(0, cRSMatrix0.rows());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OoPlaceMatrixByItsTransposeMultiplication ooPlaceMatrixByItsTransposeMultiplication0 = new OoPlaceMatrixByItsTransposeMultiplication();
      DenseMatrix denseMatrix0 = DenseMatrix.zero(0, 0);
      Basic2DMatrix basic2DMatrix0 = (Basic2DMatrix)ooPlaceMatrixByItsTransposeMultiplication0.apply(denseMatrix0);
      assertEquals(0, basic2DMatrix0.columns());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OoPlaceMatrixByItsTransposeMultiplication ooPlaceMatrixByItsTransposeMultiplication0 = new OoPlaceMatrixByItsTransposeMultiplication();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(0);
      CRSMatrix cRSMatrix0 = (CRSMatrix)ooPlaceMatrixByItsTransposeMultiplication0.apply(columnMajorSparseMatrix0);
      assertEquals(0.0, cRSMatrix0.max(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OoPlaceMatrixByItsTransposeMultiplication ooPlaceMatrixByItsTransposeMultiplication0 = new OoPlaceMatrixByItsTransposeMultiplication();
      DenseMatrix denseMatrix0 = DenseMatrix.diagonal(37, 0.0);
      // Undeclared exception!
      ooPlaceMatrixByItsTransposeMultiplication0.apply(denseMatrix0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OoPlaceMatrixByItsTransposeMultiplication ooPlaceMatrixByItsTransposeMultiplication0 = new OoPlaceMatrixByItsTransposeMultiplication();
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[6];
      doubleArray0[0] = doubleArray1;
      DenseMatrix denseMatrix0 = DenseMatrix.from2DArray(doubleArray0);
      // Undeclared exception!
      try { 
        ooPlaceMatrixByItsTransposeMultiplication0.apply(denseMatrix0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("org.la4j.matrix.dense.Basic2DMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OoPlaceMatrixByItsTransposeMultiplication ooPlaceMatrixByItsTransposeMultiplication0 = new OoPlaceMatrixByItsTransposeMultiplication();
      // Undeclared exception!
      try { 
        ooPlaceMatrixByItsTransposeMultiplication0.apply((ColumnMajorSparseMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.la4j.operation.ooplace.OoPlaceMatrixByItsTransposeMultiplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OoPlaceMatrixByItsTransposeMultiplication ooPlaceMatrixByItsTransposeMultiplication0 = new OoPlaceMatrixByItsTransposeMultiplication();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(2083);
      ooPlaceMatrixByItsTransposeMultiplication0.ensureApplicableTo(columnMajorSparseMatrix0);
      assertEquals(4.8007681228996637E-4, columnMajorSparseMatrix0.density(), 0.01);
  }
}
