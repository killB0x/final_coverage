/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:35:44 GMT 2022
 */

package org.la4j.operation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.la4j.Matrix;
import org.la4j.matrix.ColumnMajorSparseMatrix;
import org.la4j.matrix.DenseMatrix;
import org.la4j.matrix.RowMajorSparseMatrix;
import org.la4j.matrix.dense.Basic2DMatrix;
import org.la4j.matrix.sparse.CCSMatrix;
import org.la4j.matrix.sparse.CRSMatrix;
import org.la4j.operation.ooplace.OoPlaceKroneckerProduct;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CommonMatrixMatrixOperation_ESTest extends CommonMatrixMatrixOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.zero(203, 0);
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, (ColumnMajorSparseMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      double[][] doubleArray0 = new double[0][4];
      DenseMatrix denseMatrix0 = DenseMatrix.from2DArray(doubleArray0);
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply((DenseMatrix) null, denseMatrix0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.identity(0);
      Matrix matrix0 = ooPlaceKroneckerProduct0.apply(rowMajorSparseMatrix0, rowMajorSparseMatrix0);
      assertTrue(matrix0.equals((Object)rowMajorSparseMatrix0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.identity(0);
      DenseMatrix denseMatrix0 = DenseMatrix.zero(32, 37);
      CRSMatrix cRSMatrix0 = (CRSMatrix)ooPlaceKroneckerProduct0.apply(rowMajorSparseMatrix0, denseMatrix0);
      assertEquals(0, cRSMatrix0.cardinality());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.diagonal(0, 0);
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.zero(0, 0);
      Matrix matrix0 = ooPlaceKroneckerProduct0.apply(rowMajorSparseMatrix0, columnMajorSparseMatrix0);
      assertTrue(matrix0.equals((Object)rowMajorSparseMatrix0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      DenseMatrix denseMatrix0 = DenseMatrix.identity(0);
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.block(denseMatrix0, denseMatrix0, denseMatrix0, denseMatrix0);
      Basic2DMatrix basic2DMatrix0 = (Basic2DMatrix)ooPlaceKroneckerProduct0.apply(denseMatrix0, rowMajorSparseMatrix0);
      assertEquals(0, basic2DMatrix0.rows());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      DenseMatrix denseMatrix0 = DenseMatrix.constant(0, 0, 0);
      double[][] doubleArray0 = new double[5][0];
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.from2DArray(doubleArray0);
      Basic2DMatrix basic2DMatrix0 = (Basic2DMatrix)ooPlaceKroneckerProduct0.apply(denseMatrix0, columnMajorSparseMatrix0);
      assertEquals(0, basic2DMatrix0.columns());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(0);
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.zero(2797, 32);
      CCSMatrix cCSMatrix0 = (CCSMatrix)ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, rowMajorSparseMatrix0);
      assertEquals(0.0, cCSMatrix0.min(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      double[][] doubleArray0 = new double[4][7];
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.from2DArray(doubleArray0);
      DenseMatrix denseMatrix0 = DenseMatrix.identity(0);
      CCSMatrix cCSMatrix0 = (CCSMatrix)ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, denseMatrix0);
      assertFalse(cCSMatrix0.isRowMajor());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(0);
      CCSMatrix cCSMatrix0 = (CCSMatrix)ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, columnMajorSparseMatrix0);
      assertEquals(0.0, cCSMatrix0.max(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.identity(48);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(rowMajorSparseMatrix0, rowMajorSparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.diagonal(501, 48);
      DenseMatrix denseMatrix0 = DenseMatrix.diagonal(48, 3230.917);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(rowMajorSparseMatrix0, denseMatrix0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.identity(1);
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.zero(203, 203);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(rowMajorSparseMatrix0, columnMajorSparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.zero(2487, 1887, 0);
      DenseMatrix denseMatrix0 = columnMajorSparseMatrix0.toDenseMatrix();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.zero(1541, 1541);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(denseMatrix0, rowMajorSparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      DenseMatrix denseMatrix0 = DenseMatrix.constant(48, 48, 48);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(denseMatrix0, denseMatrix0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      DenseMatrix denseMatrix0 = DenseMatrix.identity(4113);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(denseMatrix0, denseMatrix0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      double[][] doubleArray0 = new double[3][5];
      double[] doubleArray1 = new double[9];
      doubleArray0[0] = doubleArray1;
      DenseMatrix denseMatrix0 = DenseMatrix.from2DArray(doubleArray0);
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply(denseMatrix0, denseMatrix0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      double[][] doubleArray0 = new double[5][8];
      DenseMatrix denseMatrix0 = DenseMatrix.from2DArray(doubleArray0);
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.zero(2920, 0);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(denseMatrix0, columnMajorSparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(1575);
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.diagonal(1575, 1575);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, rowMajorSparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.zero(1, 747);
      DenseMatrix denseMatrix0 = DenseMatrix.zero(2613, 1);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, denseMatrix0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(48);
      double[][] doubleArray0 = new double[8][1];
      double[] doubleArray1 = new double[0];
      doubleArray0[2] = doubleArray1;
      DenseMatrix denseMatrix0 = DenseMatrix.from2DArray(doubleArray0);
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, denseMatrix0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.identity(448);
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply((RowMajorSparseMatrix) null, rowMajorSparseMatrix0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(0);
      DenseMatrix denseMatrix0 = columnMajorSparseMatrix0.toDenseMatrix();
      Basic2DMatrix basic2DMatrix0 = (Basic2DMatrix)ooPlaceKroneckerProduct0.apply(denseMatrix0, denseMatrix0);
      assertEquals(0, basic2DMatrix0.rows());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply((ColumnMajorSparseMatrix) null, (DenseMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.diagonal(614, 1.0);
      // Undeclared exception!
      ooPlaceKroneckerProduct0.apply(columnMajorSparseMatrix0, columnMajorSparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply((DenseMatrix) null, (ColumnMajorSparseMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply((ColumnMajorSparseMatrix) null, (RowMajorSparseMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.diagonal(0, 0);
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply((DenseMatrix) null, rowMajorSparseMatrix0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      RowMajorSparseMatrix rowMajorSparseMatrix0 = RowMajorSparseMatrix.fromCSV("");
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply(rowMajorSparseMatrix0, (DenseMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OoPlaceKroneckerProduct ooPlaceKroneckerProduct0 = new OoPlaceKroneckerProduct();
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.identity(1);
      // Undeclared exception!
      try { 
        ooPlaceKroneckerProduct0.apply((RowMajorSparseMatrix) null, columnMajorSparseMatrix0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
