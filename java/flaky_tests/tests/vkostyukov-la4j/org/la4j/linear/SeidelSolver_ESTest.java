/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:13:05 GMT 2022
 */

package org.la4j.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.la4j.Matrix;
import org.la4j.Vector;
import org.la4j.linear.SeidelSolver;
import org.la4j.matrix.SparseMatrix;
import org.la4j.matrix.sparse.CRSMatrix;
import org.la4j.operation.ooplace.OoPlaceMatricesSubtraction;
import org.la4j.vector.DenseVector;
import org.la4j.vector.SparseVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SeidelSolver_ESTest extends SeidelSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Matrix matrix0 = Matrix.identity(0);
      SeidelSolver seidelSolver0 = new SeidelSolver(matrix0);
      SparseVector sparseVector0 = SparseVector.zero(0);
      seidelSolver0.solve(sparseVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CRSMatrix cRSMatrix0 = (CRSMatrix)Matrix.identity(37);
      SeidelSolver seidelSolver0 = new SeidelSolver(cRSMatrix0);
      OoPlaceMatricesSubtraction ooPlaceMatricesSubtraction0 = new OoPlaceMatricesSubtraction();
      CRSMatrix cRSMatrix1 = (CRSMatrix)ooPlaceMatricesSubtraction0.applySimple((SparseMatrix) cRSMatrix0, (SparseMatrix) cRSMatrix0);
      seidelSolver0.applicableTo(cRSMatrix1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SparseMatrix sparseMatrix0 = SparseMatrix.diagonal(25, 25);
      DenseVector denseVector0 = DenseVector.constant(25, Double.POSITIVE_INFINITY);
      SeidelSolver seidelSolver0 = new SeidelSolver(sparseMatrix0);
      // Undeclared exception!
      seidelSolver0.solve(denseVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Matrix matrix0 = Matrix.identity(20);
      SeidelSolver seidelSolver0 = new SeidelSolver(matrix0);
      // Undeclared exception!
      try { 
        seidelSolver0.solve((Vector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.la4j.linear.AbstractSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Matrix matrix0 = Matrix.identity(48);
      DenseVector denseVector0 = DenseVector.constant(48, 48);
      SeidelSolver seidelSolver0 = new SeidelSolver(matrix0);
      seidelSolver0.unknowns = (-855);
      // Undeclared exception!
      try { 
        seidelSolver0.solve(denseVector0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -855
         //
         verifyException("org.la4j.vector.dense.BasicVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Matrix matrix0 = Matrix.identity(23);
      SeidelSolver seidelSolver0 = new SeidelSolver(matrix0);
      Vector vector0 = Vector.fromCSV("");
      // Undeclared exception!
      try { 
        seidelSolver0.solve(vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong length of RHS vector: 0.
         //
         verifyException("org.la4j.linear.AbstractSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Matrix matrix0 = Matrix.identity(37);
      SeidelSolver seidelSolver0 = new SeidelSolver(matrix0);
      seidelSolver0.applicableTo(matrix0);
      SeidelSolver seidelSolver1 = new SeidelSolver(matrix0);
      SeidelSolver seidelSolver2 = new SeidelSolver(matrix0);
      // Undeclared exception!
      seidelSolver2.applicableTo(matrix0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Matrix matrix0 = Matrix.identity(2);
      SeidelSolver seidelSolver0 = new SeidelSolver(matrix0);
      // Undeclared exception!
      try { 
        seidelSolver0.applicableTo((Matrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.la4j.linear.SeidelSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SparseMatrix sparseMatrix0 = SparseMatrix.identity(4595);
      SeidelSolver seidelSolver0 = new SeidelSolver(sparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SeidelSolver seidelSolver0 = null;
      try {
        seidelSolver0 = new SeidelSolver((Matrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.la4j.linear.SeidelSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SparseMatrix sparseMatrix0 = SparseMatrix.zero(13, 13, 13);
      SeidelSolver seidelSolver0 = null;
      try {
        seidelSolver0 = new SeidelSolver(sparseMatrix0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Given coefficient matrix can not be used with this solver.
         //
         verifyException("org.la4j.linear.AbstractSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Matrix matrix0 = Matrix.from1DArray(4595, 4595, doubleArray0);
      SeidelSolver seidelSolver0 = null;
      try {
        seidelSolver0 = new SeidelSolver(matrix0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("org.la4j.matrix.dense.Basic1DMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SparseMatrix sparseMatrix0 = SparseMatrix.diagonal(2, 2);
      SeidelSolver seidelSolver0 = new SeidelSolver(sparseMatrix0);
      DenseVector denseVector0 = DenseVector.constant(2, 2);
      Vector vector0 = seidelSolver0.solve(denseVector0);
      assertFalse(vector0.equals((Object)denseVector0));
  }
}
