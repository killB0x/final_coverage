/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:04:27 GMT 2022
 */

package org.la4j.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.la4j.Matrix;
import org.la4j.Vector;
import org.la4j.linear.SweepSolver;
import org.la4j.matrix.ColumnMajorSparseMatrix;
import org.la4j.matrix.SparseMatrix;
import org.la4j.vector.DenseVector;
import org.la4j.vector.SparseVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SweepSolver_ESTest extends SweepSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DenseVector denseVector0 = DenseVector.constant(0, 0);
      Matrix matrix0 = denseVector0.toDiagonalMatrix();
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      Vector vector0 = sweepSolver0.solve(denseVector0);
      assertTrue(vector0.equals((Object)denseVector0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SparseVector sparseVector0 = SparseVector.zero(13);
      Matrix matrix0 = sparseVector0.toDiagonalMatrix();
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      boolean boolean0 = sweepSolver0.applicableTo(matrix0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SparseVector sparseVector0 = SparseVector.zero(13);
      Matrix matrix0 = sparseVector0.toDiagonalMatrix();
      DenseVector denseVector0 = DenseVector.unit(13);
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      Matrix matrix1 = denseVector0.toRowMatrix();
      boolean boolean0 = sweepSolver0.applicableTo(matrix1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DenseVector denseVector0 = DenseVector.constant(37, 37);
      Matrix matrix0 = denseVector0.toDiagonalMatrix();
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      // Undeclared exception!
      sweepSolver0.solve(denseVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SparseMatrix sparseMatrix0 = SparseMatrix.identity(5);
      SweepSolver sweepSolver0 = new SweepSolver(sparseMatrix0);
      // Undeclared exception!
      try { 
        sweepSolver0.solve((Vector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.la4j.linear.AbstractSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SparseVector sparseVector0 = SparseVector.zero(13);
      Matrix matrix0 = sparseVector0.toDiagonalMatrix();
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      Matrix matrix1 = Matrix.zero(673, 13);
      sweepSolver0.a = matrix1;
      // Undeclared exception!
      try { 
        sweepSolver0.solve(sparseVector0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Column '13' is invalid.
         //
         verifyException("org.la4j.Matrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SparseVector sparseVector0 = SparseVector.zero(13);
      Matrix matrix0 = sparseVector0.toDiagonalMatrix();
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      double[] doubleArray0 = new double[9];
      Vector vector0 = Vector.fromArray(doubleArray0);
      // Undeclared exception!
      try { 
        sweepSolver0.solve(vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong length of RHS vector: 9.
         //
         verifyException("org.la4j.linear.AbstractSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SparseVector sparseVector0 = SparseVector.zero(51);
      Matrix matrix0 = sparseVector0.toDiagonalMatrix();
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      // Undeclared exception!
      sweepSolver0.applicableTo(matrix0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColumnMajorSparseMatrix columnMajorSparseMatrix0 = ColumnMajorSparseMatrix.diagonal(83, 83);
      SweepSolver sweepSolver0 = new SweepSolver(columnMajorSparseMatrix0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SweepSolver sweepSolver0 = null;
      try {
        sweepSolver0 = new SweepSolver((Matrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.la4j.linear.SweepSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Matrix matrix0 = Matrix.unit(13, 13);
      SweepSolver sweepSolver0 = null;
      try {
        sweepSolver0 = new SweepSolver(matrix0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Given coefficient matrix can not be used with this solver.
         //
         verifyException("org.la4j.linear.AbstractSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SparseVector sparseVector0 = SparseVector.zero(13);
      Matrix matrix0 = sparseVector0.toDiagonalMatrix();
      DenseVector denseVector0 = DenseVector.unit(13);
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      Vector vector0 = sweepSolver0.solve(denseVector0);
      assertEquals(13, vector0.length());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SparseVector sparseVector0 = SparseVector.zero(13);
      Matrix matrix0 = sparseVector0.toDiagonalMatrix();
      SweepSolver sweepSolver0 = new SweepSolver(matrix0);
      Matrix matrix1 = Matrix.zero(27, 13);
      sweepSolver0.a = matrix1;
      // Undeclared exception!
      try { 
        sweepSolver0.solve(sparseVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
