/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:32:44 GMT 2022
 */

package org.la4j.iterator;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.la4j.iterator.JoinFunction;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JoinFunction_ESTest extends JoinFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.ADD;
      double double0 = joinFunction0.DIV.apply((-5359.074824), (-1.0));
      assertEquals(5359.074824, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.MUL;
      double double0 = joinFunction0.MUL.apply((-1.0), 0.0);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.ADD;
      double double0 = joinFunction0.apply(1701.934, 1.0);
      assertEquals(1702.934, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.SUB;
      double double0 = joinFunction0.apply(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.MUL;
      double double0 = joinFunction0.SUB.apply((-1.0), 1100.52619);
      assertEquals((-1101.52619), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.DIV;
      double double0 = joinFunction0.apply((-7.7750794914148145), (-7.7750794914148145));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.MUL;
      double double0 = joinFunction0.apply(1100.52619, 1100.52619);
      assertEquals(1211157.8948759162, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JoinFunction joinFunction0 = JoinFunction.MOD;
      double double0 = joinFunction0.apply(0.0, 0.0);
      assertEquals(Double.NaN, double0, 0.01);
  }
}
