/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 11:18:57 GMT 2022
 */

package com.tomgibara.geo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.geo.Datum;
import com.tomgibara.geo.Ellipsoid;
import com.tomgibara.geo.GridRef;
import com.tomgibara.geo.GridRefSystem;
import com.tomgibara.geo.LatLon;
import com.tomgibara.geo.OSGrid;
import com.tomgibara.geo.OSIGrid;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GridRef_ESTest extends GridRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, (-24), 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = new GridRef(gridRefSystem0, 0, (-24));
      GridRef gridRef1 = new GridRef(gridRefSystem0, 0, (-5948));
      boolean boolean0 = gridRef0.equals(gridRef1);
      assertEquals((-5948), gridRef1.getNorthing());
      assertEquals(0, gridRef1.getEasting());
      assertFalse(boolean0);
      assertFalse(gridRef1.equals((Object)gridRef0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, (-39), 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef((-39), (-39));
      LatLon latLon0 = datum0.createLatLonRadians(1623.2458, 564.855240785);
      GridRef gridRef1 = gridRefSystem0.latLonToGridRef(latLon0);
      boolean boolean0 = gridRef0.equals(gridRef1);
      assertFalse(boolean0);
      assertEquals((-39), gridRef0.getEasting());
      assertEquals((-39), gridRef0.getNorthing());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = new GridRef(gridRefSystem0, (-3455), 0);
      gridRef0.hashCode();
      assertEquals(0, gridRef0.getNorthing());
      assertEquals((-3455), gridRef0.getEasting());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxes(298.26, 298.26);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 298.26, 0.0, 298.26, 0.0, 0.0);
      OSGrid oSGrid0 = OSGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSGrid0);
      LatLon latLon0 = datum0.createLatLonRadians(0.0, 298.26);
      GridRef gridRef0 = gridRefSystem0.latLonToGridRef(latLon0);
      LatLon latLon1 = gridRef0.toLatLon();
      assertEquals((-3.312842558934196E30), latLon1.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, (-24), 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = new GridRef(gridRefSystem0, (-24), (-24));
      LatLon latLon0 = gridRef0.toLatLon();
      assertEquals(2.4238299611163234, latLon0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 3164.7628593866);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 6.318590394941426E-4, (-2158.885135817), 1624.2458, 6377340.189, (-832.8662965020886));
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(0, 0);
      int int0 = gridRef0.getNorthing();
      assertEquals(0, int0);
      assertEquals(0, gridRef0.getEasting());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = new GridRef(gridRefSystem0, 0, 676);
      int int0 = gridRef0.getNorthing();
      assertEquals(676, int0);
      assertEquals(0, gridRef0.getEasting());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      LatLon latLon0 = datum0.createLatLonRadians(1623.2458, 564.855240785);
      GridRef gridRef0 = gridRefSystem0.latLonToGridRef(latLon0);
      int int0 = gridRef0.getEasting();
      assertEquals(0, int0);
      assertEquals(0, gridRef0.getNorthing());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(676, 439);
      int int0 = gridRef0.getEasting();
      assertEquals(439, gridRef0.getNorthing());
      assertEquals(676, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef((-3455), (-3455));
      int int0 = gridRef0.getEasting();
      assertEquals((-3455), int0);
      assertEquals((-3455), gridRef0.getNorthing());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(0, 0);
      // Undeclared exception!
      try { 
        gridRef0.toLatLon();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid latitude
         //
         verifyException("com.tomgibara.geo.LatLon", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef((-3455), (-3455));
      int int0 = gridRef0.getNorthing();
      assertEquals((-3455), int0);
      assertEquals((-3455), gridRef0.getEasting());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1604.8100104321304, 1604.8100104321304);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, (-24), 0.0012458651555521394, 0.0012458651555521394, 0.0012458651555521394, 1604.8100104321304);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = new GridRef(gridRefSystem0, (-24), (-24));
      GridRef gridRef1 = gridRefSystem0.createGridRef((-24), (-1178));
      boolean boolean0 = gridRef1.equals(gridRef0);
      assertFalse(boolean0);
      assertEquals((-24), gridRef1.getEasting());
      assertFalse(gridRef0.equals((Object)gridRef1));
      assertEquals((-1178), gridRef1.getNorthing());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 10, 0.0012309616744201612, 0.0012309616744201612, 0.0012309616744201612, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(10, 10);
      LatLon latLon0 = datum0.createLatLonRadians(1623.2458, 564.855240785);
      GridRef gridRef1 = gridRefSystem0.latLonToGridRef(latLon0);
      boolean boolean0 = gridRef0.equals(gridRef1);
      assertEquals(Integer.MAX_VALUE, gridRef1.getNorthing());
      assertEquals(Integer.MAX_VALUE, gridRef1.getEasting());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 1624.2458, 0.0, 0.0, 0.0, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(0, 31);
      boolean boolean0 = gridRef0.equals(datum0);
      assertEquals(31, gridRef0.getNorthing());
      assertFalse(boolean0);
      assertEquals(0, gridRef0.getEasting());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1604.8100104321304, 1604.8100104321304);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012458651555521394, 0.0012458651555521394, 0.0012458651555521394, 1604.8100104321304);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = new GridRef(gridRefSystem0, 0, 0);
      boolean boolean0 = gridRef0.equals(gridRef0);
      assertEquals(0, gridRef0.getNorthing());
      assertTrue(boolean0);
      assertEquals(0, gridRef0.getEasting());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1604.8100104321304, 1604.8100104321304);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 0, 0.0012458651555521394, 0.0012458651555521394, 0.0012458651555521394, 1604.8100104321304);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(0, 0);
      GridRef gridRef1 = gridRefSystem0.createGridRef(0, 0);
      boolean boolean0 = gridRef0.equals(gridRef1);
      assertEquals(0, gridRef1.getEasting());
      assertEquals(0, gridRef1.getNorthing());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GridRef gridRef0 = null;
      try {
        gridRef0 = new GridRef((GridRefSystem) null, (-1265), (-1265));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null grid
         //
         verifyException("com.tomgibara.geo.GridRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1604.8100104321304, 1604.8100104321304);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, (-64), 0.0012458651555521394, 0.0012458651555521394, 0.0012458651555521394, 1604.8100104321304);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = new GridRef(gridRefSystem0, (-64), (-64));
      String string0 = gridRef0.toString();
      assertEquals("V -0064 -0064", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 1624.2458, 0.0, 0.0, 0.0, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(0, 31);
      gridRef0.hashCode();
      assertEquals(31, gridRef0.getNorthing());
      assertEquals(0, gridRef0.getEasting());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 1624.2458, 0.0, 0.0, 0.0, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(0, 31);
      LatLon latLon0 = gridRef0.toLatLon();
      assertEquals((-0.034602056412879834), latLon0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ellipsoid ellipsoid0 = Ellipsoid.withAxisAndInvFlat(1624.2458, 1624.2458);
      Datum datum0 = Datum.withDegreesMeters(ellipsoid0, 1624.2458, 0.0, 0.0, 0.0, 1624.2458);
      OSIGrid oSIGrid0 = OSIGrid.instance;
      GridRefSystem gridRefSystem0 = GridRefSystem.withDatumAndGrid(datum0, oSIGrid0);
      GridRef gridRef0 = gridRefSystem0.createGridRef(0, 31);
      gridRef0.getSystem();
      assertEquals(0, gridRef0.getEasting());
      assertEquals(31, gridRef0.getNorthing());
  }
}
