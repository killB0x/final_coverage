/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 11:13:50 GMT 2022
 */

package com.tomgibara.geo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.geo.Cartesian;
import com.tomgibara.geo.Datum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cartesian_ESTest extends Cartesian_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      Cartesian cartesian1 = Cartesian.inMeters(0.0, 0.0, 2094.36);
      boolean boolean0 = cartesian0.equals(cartesian1);
      assertEquals(0.0, cartesian1.getY(), 0.01);
      assertEquals(0.0, cartesian1.getX(), 0.01);
      assertFalse(boolean0);
      assertEquals(2094.36, cartesian1.getZ(), 0.01);
      assertFalse(cartesian1.equals((Object)cartesian0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      Cartesian cartesian1 = Cartesian.inMeters(0.0, 3090.35791497041, 0.0);
      boolean boolean0 = cartesian0.equals(cartesian1);
      assertEquals(0.0, cartesian1.getZ(), 0.01);
      assertEquals(0.0, cartesian1.getX(), 0.01);
      assertFalse(cartesian1.equals((Object)cartesian0));
      assertEquals(3090.35791497041, cartesian1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 22.8405354);
      Cartesian cartesian1 = Cartesian.inMeters((-3231.843515), (-3231.843515), 1796.57682025253);
      boolean boolean0 = cartesian1.equals(cartesian0);
      assertFalse(boolean0);
      assertEquals(1796.57682025253, cartesian1.getZ(), 0.01);
      assertEquals((-3231.843515), cartesian1.getX(), 0.01);
      assertEquals((-3231.843515), cartesian1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters((-4266.231), 0.0, 0.0);
      cartesian0.hashCode();
      assertEquals(0.0, cartesian0.getZ(), 0.01);
      assertEquals((-4266.231), cartesian0.getX(), 0.01);
      assertEquals(0.0, cartesian0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(298.247167427, 15.37, 2048.0);
      double double0 = cartesian0.getZ();
      assertEquals(298.247167427, cartesian0.getX(), 0.01);
      assertEquals(15.37, cartesian0.getY(), 0.01);
      assertEquals(2048.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, (-1439.101077793), (-233.0));
      double double0 = cartesian0.getZ();
      assertEquals((-233.0), double0, 0.01);
      assertEquals((-1439.101077793), cartesian0.getY(), 0.01);
      assertEquals(0.0, cartesian0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, (-1439.101077793), (-233.0));
      double double0 = cartesian0.getY();
      assertEquals(0.0, cartesian0.getX(), 0.01);
      assertEquals((-1439.101077793), double0, 0.01);
      assertEquals((-233.0), cartesian0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(6377563.396, (-1.0), (-234.4674715427359));
      double double0 = cartesian0.getX();
      assertEquals(6377563.396, double0, 0.01);
      assertEquals((-234.4674715427359), cartesian0.getZ(), 0.01);
      assertEquals((-1.0), cartesian0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters((-4266.231), 0.0, 0.0);
      double double0 = cartesian0.getX();
      assertEquals(0.0, cartesian0.getY(), 0.01);
      assertEquals(0.0, cartesian0.getZ(), 0.01);
      assertEquals((-4266.231), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      double double0 = cartesian0.getY();
      assertEquals(0.0, cartesian0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, cartesian0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      double double0 = cartesian0.getZ();
      assertEquals(0.0, cartesian0.getX(), 0.01);
      assertEquals(0.0, cartesian0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters((-3621.0735414), (-3621.0735414), (-3621.0735414));
      Cartesian cartesian1 = Cartesian.inMeters((-3621.0735414), (-3621.0735414), (-498.311));
      boolean boolean0 = cartesian1.equals(cartesian0);
      assertFalse(boolean0);
      assertEquals((-3621.0735414), cartesian1.getX(), 0.01);
      assertEquals((-3621.0735414), cartesian1.getY(), 0.01);
      assertEquals((-3621.0735414), cartesian0.getZ(), 0.01);
      assertFalse(cartesian0.equals((Object)cartesian1));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(298.247167427, 15.37, 2048.0);
      Cartesian cartesian1 = Cartesian.inMeters(298.247167427, 1.0, 298.247167427);
      boolean boolean0 = cartesian0.equals(cartesian1);
      assertEquals(1.0, cartesian1.getY(), 0.01);
      assertEquals(298.247167427, cartesian0.getX(), 0.01);
      assertEquals(2048.0, cartesian0.getZ(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      Cartesian cartesian1 = Cartesian.inMeters(0.0, 0.0, 0.0);
      boolean boolean0 = cartesian0.equals(cartesian1);
      assertEquals(0.0, cartesian1.getX(), 0.01);
      assertEquals(0.0, cartesian1.getY(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, cartesian1.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      Object object0 = new Object();
      boolean boolean0 = cartesian0.equals(object0);
      assertEquals(0.0, cartesian0.getZ(), 0.01);
      assertEquals(0.0, cartesian0.getX(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, cartesian0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters((-3621.0735414), (-3621.0735414), (-3621.0735414));
      boolean boolean0 = cartesian0.equals(cartesian0);
      assertEquals((-3621.0735414), cartesian0.getZ(), 0.01);
      assertEquals((-3621.0735414), cartesian0.getY(), 0.01);
      assertEquals((-3621.0735414), cartesian0.getX(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters((-0.9346490310750482), (-0.9346490310750482), (-0.9346490310750482));
      Cartesian cartesian1 = Cartesian.inMeters((-702.2731102247732), (-0.9346490310750482), (-0.9346490310750482));
      boolean boolean0 = cartesian0.equals(cartesian1);
      assertFalse(boolean0);
      assertEquals((-0.9346490310750482), cartesian1.getZ(), 0.01);
      assertEquals((-0.9346490310750482), cartesian0.getX(), 0.01);
      assertFalse(cartesian1.equals((Object)cartesian0));
      assertEquals((-0.9346490310750482), cartesian1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(25.21092640948317, 25.21092640948317, 25.21092640948317);
      // Undeclared exception!
      try { 
        cartesian0.toLatLonHeight((Datum) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null datum
         //
         verifyException("com.tomgibara.geo.Cartesian", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      String string0 = cartesian0.toString();
      assertEquals("[0.000000, 0.000000, 0.000000]", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters((-24.61229464594617), (-24.61229464594617), (-24.61229464594617));
      cartesian0.hashCode();
      assertEquals((-24.61229464594617), cartesian0.getZ(), 0.01);
      assertEquals((-24.61229464594617), cartesian0.getY(), 0.01);
      assertEquals((-24.61229464594617), cartesian0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Cartesian cartesian0 = Cartesian.inMeters(0.0, 0.0, 0.0);
      double double0 = cartesian0.getX();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, cartesian0.getY(), 0.01);
      assertEquals(0.0, cartesian0.getZ(), 0.01);
  }
}
