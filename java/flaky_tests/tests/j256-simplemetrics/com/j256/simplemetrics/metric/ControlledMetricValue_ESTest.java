/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 27 18:22:44 GMT 2022
 */

package com.j256.simplemetrics.metric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemetrics.metric.ControlledMetric;
import com.j256.simplemetrics.metric.ControlledMetricTimer;
import com.j256.simplemetrics.metric.ControlledMetricValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ControlledMetricValue_ESTest extends ControlledMetricValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount0 = ControlledMetricValue.ValueCount.createInitialValue();
      Double double0 = new Double(695.111675380843);
      Double double1 = new Double(0.0);
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount1 = controlledMetricValue_ValueCount0.makeAdjusted(double1);
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount2 = controlledMetricValue_ValueCount1.makeAdjusted(double0);
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount3 = controlledMetricValue_ValueCount2.makeAdjusted(double1);
      assertEquals(3, controlledMetricValue_ValueCount3.getNumSamples());
      assertEquals(0, controlledMetricValue_ValueCount0.getNumSamples());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount0 = ControlledMetricValue.ValueCount.createInitialValue();
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount1 = controlledMetricValue_ValueCount0.makePersisted();
      assertEquals(0, controlledMetricValue_ValueCount1.getNumSamples());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer(")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [");
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount0 = controlledMetricTimer0.createInitialValue();
      Number number0 = controlledMetricValue_ValueCount0.getValue();
      assertEquals(0.0, number0);
      assertEquals(0, controlledMetricValue_ValueCount0.getNumSamples());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ControlledMetricValue controlledMetricValue0 = new ControlledMetricValue("com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount");
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount0 = controlledMetricValue0.createInitialValue();
      int int0 = controlledMetricValue_ValueCount0.getNumSamples();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ControlledMetricValue controlledMetricValue0 = new ControlledMetricValue("com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount", "com.j256.simplemetrics.metric.ControlledMetricValue$ValueCount");
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount0 = controlledMetricValue0.createInitialValue();
      Number number0 = controlledMetricValue_ValueCount0.getMin();
      assertEquals(0.0, number0);
      assertEquals(0, controlledMetricValue_ValueCount0.getNumSamples());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer(")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [");
      Double double0 = new Double(1.0);
      Double double1 = controlledMetricTimer0.makeValueFromNumber(double0);
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("Kcp]{Cgp", "Kcp]{Cgp", "{~+dJ(HGL5", "c+ E3AoBgc}\"!u");
      Double double0 = new Double((-1.0));
      Double double1 = controlledMetricTimer0.makeValueFromNumber(double0);
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer(".Wj'pYJ_", ".Wj'pYJ_", "M.Gp(:G[y", "com.j256.simplemetrics.metric.ControlledMetricAccum$AccumValue");
      Double double0 = controlledMetricTimer0.makeValueFromLong(0L);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ControlledMetricValue controlledMetricValue0 = new ControlledMetricValue("JruMX;Jt", "dbn-]v8gRT$oZ", "dbn-]v8gRT$oZ", "JruMX;Jt", "GCh|Hh-_%sOiWc");
      Double double0 = controlledMetricValue0.makeValueFromLong(1245L);
      assertEquals(1245.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ControlledMetricValue controlledMetricValue0 = new ControlledMetricValue("Component cannot be null", "com.j256.simplemetrics.metric.ControlledMetricValue", "[pOa%l", "com.j256.simplemetrics.metric.ControlledMetricValue", "Component cannot be null");
      Double double0 = controlledMetricValue0.makeValueFromLong((-1863L));
      assertEquals((-1863.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer(")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [", ")zAFW(v7^iAE%%]2 [");
      ControlledMetric.AggregationType controlledMetric_AggregationType0 = controlledMetricTimer0.getAggregationType();
      assertEquals(ControlledMetric.AggregationType.AVERAGE, controlledMetric_AggregationType0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("com.j256.simplemetrics.metric.ControlledMetricValue", "com.j256.simplemetrics.metric.ControlledMetricValue", "com.j256.simplemetrics.metric.ControlledMetricValue", "com.j256.simplemetrics.metric.ControlledMetricValue");
      // Undeclared exception!
      try { 
        controlledMetricTimer0.makeValueFromNumber((Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemetrics.metric.ControlledMetricValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ControlledMetricValue controlledMetricValue0 = null;
      try {
        controlledMetricValue0 = new ControlledMetricValue((String) null, (String) null, "u$n(", "u$n(", "com.j256.simplemetrics.metric.ControlledMetricValue");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Component cannot be null
         //
         verifyException("com.j256.simplemetrics.metric.BaseControlledMetric", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ControlledMetricValue controlledMetricValue0 = null;
      try {
        controlledMetricValue0 = new ControlledMetricValue("", "", "", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Name cannot be an empty or blank string
         //
         verifyException("com.j256.simplemetrics.metric.BaseControlledMetric", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ControlledMetricValue.ValueCount controlledMetricValue_ValueCount0 = ControlledMetricValue.ValueCount.createInitialValue();
      Number number0 = controlledMetricValue_ValueCount0.getMax();
      assertEquals(0, controlledMetricValue_ValueCount0.getNumSamples());
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer(".Wj'pYJ_", ".Wj'pYJ_", "M.Gp(:G[y", "com.j256.simplemetrics.metric.ControlledMetricAccum$AccumValue");
      controlledMetricTimer0.adjustValue((-631L));
      Double double0 = Double.valueOf(4738.435728);
      controlledMetricTimer0.storeValue(double0);
      Number number0 = controlledMetricTimer0.getValueToPersist();
      assertEquals(2053.717864, number0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("com.j256.simplemetrics.metric.ControlledMetricRatio", "", "com.j256.simplemetrics.metric.ControlledMetricRatio", "com.j256.simplemetrics.metric.ControlledMetricRatio");
      controlledMetricTimer0.stop(0L);
      controlledMetricTimer0.adjustValue(1392409281320L);
      assertEquals("com.j256.simplemetrics.metric.ControlledMetricRatio", controlledMetricTimer0.getName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("com.j256.simplemetrics.metric.ControlledMetricRatio", "", "com.j256.simplemetrics.metric.ControlledMetricRatio", "com.j256.simplemetrics.metric.ControlledMetricRatio");
      long long0 = controlledMetricTimer0.stop((-415L));
      long long1 = controlledMetricTimer0.stop(0L);
      assertFalse(long1 == long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("com.j256.simplemetrics.metric.ControlledMetricRatio", "", "com.j256.simplemetrics.metric.ControlledMetricRatio", "com.j256.simplemetrics.metric.ControlledMetricRatio");
      Number number0 = controlledMetricTimer0.getValue();
      Double double0 = controlledMetricTimer0.makeValueFromNumber(number0);
      assertEquals(0.0, (double)double0, 0.01);
  }
}
