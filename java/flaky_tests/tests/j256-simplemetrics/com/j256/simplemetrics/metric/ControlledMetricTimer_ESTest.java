/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 27 18:22:58 GMT 2022
 */

package com.j256.simplemetrics.metric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemetrics.metric.ControlledMetricTimer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ControlledMetricTimer_ESTest extends ControlledMetricTimer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("^d'26G%{Eyg%)st", "^d'26G%{Eyg%)st", "bG&7_{iKj\n.", "^d'26G%{Eyg%)st");
      long long0 = controlledMetricTimer0.stop(1392409281320L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("^d'26G%{Eyg%)st", "^d'26G%{Eyg%)st", "bG&7_{iKj\n.", "^d'26G%{Eyg%)st");
      long long0 = controlledMetricTimer0.stop(1392409282749L);
      assertEquals((-1429L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("?&!E", "b", "b", "b");
      long long0 = controlledMetricTimer0.start();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("?&!E", "b", "b", "b");
      System.setCurrentTimeMillis((-348L));
      long long0 = controlledMetricTimer0.start();
      assertEquals((-348L), long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = null;
      try {
        controlledMetricTimer0 = new ControlledMetricTimer("Y \"N5g[c2r:6w^xFy", "Y \"N5g[c2r:6w^xFy", (String) null, "aH}kZ(p1pevV;Q]x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name cannot be null
         //
         verifyException("com.j256.simplemetrics.metric.BaseControlledMetric", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = null;
      try {
        controlledMetricTimer0 = new ControlledMetricTimer("", "", "&ahkhZ^8m", "6M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Component cannot be an empty or blank string
         //
         verifyException("com.j256.simplemetrics.metric.BaseControlledMetric", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("&ahkhZ^8m", "&ahkhZ^8m", "&ahkhZ^8m", "&ahkhZ^8m");
      long long0 = controlledMetricTimer0.stop((-371L));
      assertEquals(1392409281691L, long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ControlledMetricTimer controlledMetricTimer0 = new ControlledMetricTimer("?&!E", "b", "b", "b");
      long long0 = controlledMetricTimer0.start();
      assertEquals(1392409281320L, long0);
  }
}
