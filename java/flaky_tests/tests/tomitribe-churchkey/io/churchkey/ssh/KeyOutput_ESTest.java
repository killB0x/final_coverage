/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 17:31:42 GMT 2022
 */

package io.churchkey.ssh;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.churchkey.ssh.KeyOutput;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KeyOutput_ESTest extends KeyOutput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      // Undeclared exception!
      try { 
        keyOutput0.writeString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.churchkey.ssh.KeyOutput", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      // Undeclared exception!
      try { 
        keyOutput0.writeBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.churchkey.ssh.KeyOutput", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      // Undeclared exception!
      try { 
        keyOutput0.writeBigInteger((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.churchkey.ssh.KeyOutput", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      // Undeclared exception!
      try { 
        keyOutput0.writeAuthMagic((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.churchkey.ssh.KeyOutput", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      byte[] byteArray0 = new byte[6];
      keyOutput0.writeBytes(byteArray0);
      byte[] byteArray1 = keyOutput0.toByteArray();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)6, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      keyOutput0.writeAuthMagic("#");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      keyOutput0.writeString("#");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      byte[] byteArray0 = keyOutput0.toByteArray();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      KeyOutput keyOutput0 = new KeyOutput();
      BigInteger bigInteger0 = BigInteger.ONE;
      keyOutput0.writeBigInteger(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
  }
}
