/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 17:23:38 GMT 2022
 */

package io.churchkey.asn1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.churchkey.asn1.Asn1Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Asn1Type_ESTest extends Asn1Type_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Asn1Type asn1Type0 = Asn1Type.fromConstant(0);
      assertEquals(Asn1Type.ANY, asn1Type0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Asn1Type[] asn1TypeArray0 = Asn1Type.values();
      assertEquals(31, asn1TypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Asn1Type asn1Type0 = Asn1Type.valueOf("ANY");
      byte byte0 = asn1Type0.getConstant();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Asn1Type asn1Type0 = Asn1Type.fromConstant(11);
      assertEquals(Asn1Type.EMBEDDED_PDV, asn1Type0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Asn1Type.fromConstant(2196);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        Asn1Type.fromConstant(31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 31 out of bounds for length 31
         //
         verifyException("io.churchkey.asn1.Asn1Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Asn1Type.fromConstant((-1841));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Asn1Type asn1Type0 = Asn1Type.OBJECT_DESCRIPTOR;
      byte byte0 = asn1Type0.getConstant();
      assertEquals((byte)7, byte0);
  }
}
