/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 23:33:15 GMT 2022
 */

package com.github.powerlibraries.io.builder.targets;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.powerlibraries.io.builder.targets.FileTarget;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileTarget_ESTest extends FileTarget_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile((String) null, "");
      FileTarget fileTarget0 = new FileTarget(mockFile0);
      String string0 = fileTarget0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileTarget fileTarget0 = new FileTarget((File) null);
      // Undeclared exception!
      try { 
        fileTarget0.openStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileTarget fileTarget0 = new FileTarget(mockFile0);
      try { 
        fileTarget0.openStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileTarget fileTarget0 = new FileTarget((File) null);
      // Undeclared exception!
      try { 
        fileTarget0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.powerlibraries.io.builder.targets.FileTarget", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      File file0 = MockFile.createTempFile("2<9h=2r^_3@+Ft", "2<9h=2r^_3@+Ft");
      FileTarget fileTarget0 = new FileTarget(file0);
      OutputStream outputStream0 = fileTarget0.openStream();
      assertNotNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      File file0 = MockFile.createTempFile("2<9h=2r^_3@+Ft", "2<9h=2r^_3@+Ft");
      FileTarget fileTarget0 = new FileTarget(file0);
      String string0 = fileTarget0.getName();
      assertEquals("2<9h=2r^_3@+Ft02<9h=2r^_3@+Ft", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileTarget fileTarget0 = new FileTarget((File) null);
      boolean boolean0 = fileTarget0.hasName();
      assertTrue(boolean0);
  }
}
