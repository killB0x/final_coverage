/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 23:16:25 GMT 2022
 */

package com.github.powerlibraries.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.powerlibraries.io.Out;
import com.github.powerlibraries.io.builder.ByteOutBuilder;
import com.github.powerlibraries.io.builder.OutBuilder;
import com.github.powerlibraries.io.builder.StringOutBuilder;
import com.github.powerlibraries.io.builder.targets.ByteArrayTarget;
import com.github.powerlibraries.io.builder.targets.Target;
import java.io.File;
import java.io.OutputStream;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Out_ESTest extends Out_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutBuilder outBuilder0 = Out.file("(%HyY+ZWig,c", "x2nc)cL(($_I5");
      assertNotNull(outBuilder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("The given target was null");
      OutBuilder outBuilder0 = Out.file((File) mockFile0);
      assertNotNull(outBuilder0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Out.target((Target) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given target was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteArrayTarget byteArrayTarget0 = new ByteArrayTarget();
      OutBuilder outBuilder0 = Out.target(byteArrayTarget0);
      assertNotNull(outBuilder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Out.stream((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given inputStream was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteArrayTarget byteArrayTarget0 = new ByteArrayTarget();
      OutputStream outputStream0 = byteArrayTarget0.openStream();
      OutBuilder outBuilder0 = Out.stream(outputStream0);
      assertNotNull(outBuilder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Out.file("The given file was null", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given file was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Out.file((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given file was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      // Undeclared exception!
      try { 
        Out.file((File) mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given file was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      OutBuilder outBuilder0 = Out.file((File) mockFile0, "/tmp");
      assertNotNull(outBuilder0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Out.file((File) null, "jJ`A&[cZ[u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given file was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Out.file((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given file was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Out.file((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The given file was null
         //
         verifyException("com.github.powerlibraries.io.Out", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutBuilder outBuilder0 = Out.file("");
      assertNotNull(outBuilder0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOutBuilder byteOutBuilder0 = Out.bytes();
      assertNotNull(byteOutBuilder0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringOutBuilder stringOutBuilder0 = Out.string();
      assertNotNull(stringOutBuilder0);
  }
}
