/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 23:25:36 GMT 2022
 */

package com.github.powerlibraries.io.builder.sources;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.powerlibraries.io.builder.sources.URLSource;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class URLSource_ESTest extends URLSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      URLSource uRLSource0 = new URLSource(uRL0);
      InputStream inputStream0 = uRLSource0.openStream();
      assertNotNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("<;#([ `", "c3'", 1040, "nj'ogmAB*s5~0yk", uRLStreamHandler0);
      URLSource uRLSource0 = new URLSource(uRL0);
      String string0 = uRLSource0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLSource uRLSource0 = new URLSource(uRL0);
      // Undeclared exception!
      try { 
        uRLSource0.openStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URLSource uRLSource0 = new URLSource((URL) null);
      // Undeclared exception!
      try { 
        uRLSource0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLSource uRLSource0 = new URLSource(uRL0);
      try { 
        uRLSource0.openStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLSource uRLSource0 = new URLSource(uRL0);
      String string0 = uRLSource0.getName();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLSource uRLSource0 = new URLSource(uRL0);
      boolean boolean0 = uRLSource0.hasName();
      assertTrue(boolean0);
  }
}
