/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 23:18:09 GMT 2022
 */

package com.github.powerlibraries.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.powerlibraries.io.IOConfig;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IOConfig_ESTest extends IOConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        IOConfig.setDefaultCharset("G");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // G
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOConfig.setDefaultCharset("DreI&Q1`Mv");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // DreI&Q1`Mv
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOConfig.setDefaultCharset((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null charset name
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOConfig.setDefaultCharset((Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset can not be null
         //
         verifyException("com.github.powerlibraries.io.IOConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Charset charset0 = IOConfig.getDefaultCharset();
      IOConfig.setDefaultCharset(charset0);
      assertEquals("US-ASCII", charset0.name());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IOConfig.setDefaultCharset("L3");
  }
}
