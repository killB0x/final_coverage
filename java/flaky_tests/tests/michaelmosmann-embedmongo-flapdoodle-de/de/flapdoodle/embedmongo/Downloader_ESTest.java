/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:52:19 GMT 2022
 */

package de.flapdoodle.embedmongo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.flapdoodle.embedmongo.Downloader;
import de.flapdoodle.embedmongo.config.RuntimeConfig;
import de.flapdoodle.embedmongo.distribution.Distribution;
import de.flapdoodle.embedmongo.distribution.Version;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Downloader_ESTest extends Downloader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      Version version0 = Version.V1_8;
      Distribution distribution0 = Distribution.detectFor(version0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-1.8.5.tgz");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      File file0 = Downloader.download(runtimeConfig0, distribution0);
      assertEquals("embedmongo-download-00000000-0100-4000-8200-000003000000.TGZ", file0.getName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      // Undeclared exception!
      try { 
        Downloader.getDownloadUrl(runtimeConfig0, (Distribution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.flapdoodle.embedmongo.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      Version version0 = Version.V2_0_4;
      runtimeConfig0.setDownloadPath("\r");
      Distribution distribution0 = Distribution.detectFor(version0);
      try { 
        Downloader.download(runtimeConfig0, distribution0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: \rlinux/mongodb-linux-x86_64-2.0.4.tgz
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      // Undeclared exception!
      try { 
        Downloader.download(runtimeConfig0, (Distribution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.flapdoodle.embedmongo.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/embedmongo-download-00000000-0100-4000-8200-000003000000.TGZ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      Version version0 = Version.V1_8_2;
      Distribution distribution0 = Distribution.detectFor(version0);
      try { 
        Downloader.download(runtimeConfig0, distribution0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      Version version0 = Version.V1_8;
      Distribution distribution0 = Distribution.detectFor(version0);
      String string0 = Downloader.getDownloadUrl(runtimeConfig0, distribution0);
      assertEquals("http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-1.8.5.tgz", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-1.8.5.tgz");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "d");
      Version version0 = Version.V1_8;
      Distribution distribution0 = Distribution.detectFor(version0);
      File file0 = Downloader.download(runtimeConfig0, distribution0);
      assertEquals("embedmongo-download-00000000-0100-4000-8200-000003000000.TGZ", file0.getName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RuntimeConfig runtimeConfig0 = new RuntimeConfig();
      Version version0 = Version.V1_8;
      Distribution distribution0 = Distribution.detectFor(version0);
      try { 
        Downloader.download(runtimeConfig0, distribution0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: fastdl.mongodb.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }
}
