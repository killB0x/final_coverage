/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:54:14 GMT 2022
 */

package de.flapdoodle.embedmongo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.flapdoodle.embedmongo.MongodExecutable;
import de.flapdoodle.embedmongo.config.MongodConfig;
import de.flapdoodle.embedmongo.distribution.Version;
import java.io.File;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MongodExecutable_ESTest extends MongodExecutable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Version version0 = Version.V2_0_1;
      MongodConfig mongodConfig0 = new MongodConfig(version0, (-2776), false);
      File file0 = MockFile.createTempFile("08/5x(*Q}*D&duPL", "08/5x(*Q}*D&duPL");
      MongodExecutable mongodExecutable0 = new MongodExecutable(mongodConfig0, file0);
      MongodExecutable.JobKiller mongodExecutable_JobKiller0 = mongodExecutable0.new JobKiller();
      mongodExecutable_JobKiller0.run();
      assertFalse(file0.canRead());
      assertEquals(0L, file0.lastModified());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, (File) null);
      File file0 = mongodExecutable0.getFile();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = MockFile.createTempFile("de.flapdoodle.embedmongo.MongodExecutable", "de.flapdoodle.embedmongo.MongodExecutable");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/de.flapdoodle.embedmongo.MongodExecutable0de.flapdoodle.embedmongo.MongodExecutable");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, file0);
      File file1 = mongodExecutable0.getFile();
      assertTrue(file1.canWrite());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, mockFile0);
      File file0 = mongodExecutable0.getFile();
      assertFalse(file0.isFile());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = MockFile.createTempFile("de.flapdoodle.embedmongo.MongodExecutable", "de.flapdoodle.embedmongo.MongodExecutable");
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, file0);
      // Undeclared exception!
      try { 
        mongodExecutable0.start();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.flapdoodle.embedmongo.MongodProcess", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Version version0 = Version.V1_8_0_rc0;
      MongodConfig mongodConfig0 = new MongodConfig(version0, 18, true, "tv:");
      MongodExecutable mongodExecutable0 = new MongodExecutable(mongodConfig0, (File) null);
      try { 
        mongodExecutable0.start();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not create Tempdir: tv:
         //
         verifyException("de.flapdoodle.embedmongo.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, (File) null);
      // Undeclared exception!
      try { 
        mongodExecutable0.cleanup();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.flapdoodle.embedmongo.MongodExecutable", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = MockFile.createTempFile("'NjeN]pu", "'NjeN]pu");
      file0.setReadOnly();
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, file0);
      // Undeclared exception!
      try { 
        mongodExecutable0.cleanup();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, mockFile0);
      mongodExecutable0.cleanup();
      mongodExecutable0.cleanup();
      assertFalse(mockFile0.isDirectory());
      assertFalse(mockFile0.canExecute());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "V1_8_4");
      MongodExecutable mongodExecutable0 = new MongodExecutable((MongodConfig) null, mockFile0);
      mongodExecutable0.cleanup();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Version version0 = Version.V1_6;
      MongodConfig mongodConfig0 = new MongodConfig(version0, 1302, false, ". Will try to delete it again when program exits.");
      MockFile mockFile0 = new MockFile(". Will try to delete it again when program exits.", ". Will try to delete it again when program exits.");
      MongodExecutable mongodExecutable0 = new MongodExecutable(mongodConfig0, mockFile0);
      // Undeclared exception!
      try { 
        mongodExecutable0.start();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("de.flapdoodle.embedmongo.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Version version0 = Version.V1_6;
      MongodConfig mongodConfig0 = new MongodConfig(version0, 1302, false, ". Will try to delete it again when program exits.");
      MockFile mockFile0 = new MockFile(". Will try to delete it again when program exits.", ". Will try to delete it again when program exits.");
      MongodExecutable mongodExecutable0 = new MongodExecutable(mongodConfig0, mockFile0);
      File file0 = mongodExecutable0.getFile();
      assertSame(mockFile0, file0);
  }
}
