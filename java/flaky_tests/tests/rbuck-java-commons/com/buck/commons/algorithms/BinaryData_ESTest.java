/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 06:43:25 GMT 2022
 */

package com.buck.commons.algorithms;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.buck.commons.algorithms.BinaryData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BinaryData_ESTest extends BinaryData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-1);
      int int0 = BinaryData.loadIntAtOffset(byteArray0, (byte)0);
      assertEquals(65280, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      int int0 = BinaryData.loadIntAtOffset(byteArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BinaryData.storeIntAtOffset(byteArray0, (byte)0, 700);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)2, (byte) (-68)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      short short0 = BinaryData.loadShortAtOffset(byteArray0, (byte)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BinaryData.storeShortAtOffsetUnsafe(byteArray0, (-1), (byte) (-54));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      BinaryData.storeShortAtOffset(byteArray0, 4, (byte)8);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)8}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BinaryData.storeByteAtOffset(byteArray0, (byte)0, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BinaryData.storeShortAtOffsetUnsafe(byteArray0, 0, (short)3);
      assertArrayEquals(new byte[] {(byte)0, (byte)3, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BinaryData.storeLongAtOffsetUnsafe(byteArray0, (byte)0, 0L);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BinaryData.storeIntAtOffsetUnsafe(byteArray0, (byte)0, (byte) (-44));
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-44), (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      short short0 = BinaryData.loadShortAtOffsetUnsafe(byteArray0, 4);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)32;
      short short0 = BinaryData.loadShortAtOffsetUnsafe(byteArray0, (byte)0);
      assertEquals((short)32, short0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-74);
      short short0 = BinaryData.loadShortAtOffsetUnsafe(byteArray0, 2);
      assertEquals((short) (-18944), short0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)91;
      short short0 = BinaryData.loadShortAtOffset(byteArray0, (byte)0);
      assertEquals((short)23296, short0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-112);
      short short0 = BinaryData.loadShortAtOffset(byteArray0, (byte)1);
      assertEquals((short) (-28672), short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      long long0 = BinaryData.loadLongAtOffsetUnsafe(byteArray0, (byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-81);
      long long0 = BinaryData.loadLongAtOffsetUnsafe(byteArray0, (byte)0);
      assertEquals(192414534860800L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      BinaryData.storeLongAtOffset(byteArray0, 2, (-1750L));
      long long0 = BinaryData.loadLongAtOffsetUnsafe(byteArray0, 2);
      assertEquals((-1750L), long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)24;
      long long0 = BinaryData.loadLongAtOffset(byteArray0, 1);
      assertEquals(6755399441055744L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-34);
      long long0 = BinaryData.loadLongAtOffset(byteArray0, 0);
      assertEquals((-2449958197289549824L), long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[3] = (byte) (-1);
      int int0 = BinaryData.loadIntAtOffsetUnsafe(byteArray0, 0);
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-34);
      int int0 = BinaryData.loadIntAtOffsetUnsafe(byteArray0, 0);
      assertEquals((-570425344), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)99;
      int int0 = BinaryData.loadIntAtOffset(byteArray0, (byte)0);
      assertEquals(6488064, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-10);
      int int0 = BinaryData.loadIntAtOffset(byteArray0, (byte)2);
      assertEquals((-167772160), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)47;
      byte byte0 = BinaryData.loadByteAtOffsetUnsafe(byteArray0, 2);
      assertEquals((byte)47, byte0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BinaryData.storeByteAtOffsetUnsafe(byteArray0, 0, (byte) (-105));
      byte byte0 = BinaryData.loadByteAtOffsetUnsafe(byteArray0, 0);
      assertEquals((byte) (-105), byte0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)37;
      byte byte0 = BinaryData.loadByteAtOffset(byteArray0, 4);
      assertEquals((byte)37, byte0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-21);
      byte byte0 = BinaryData.loadByteAtOffset(byteArray0, 1);
      assertEquals((byte) (-21), byte0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.storeLongAtOffsetUnsafe(byteArray0, 5, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 9 out of bounds for length 9
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.storeLongAtOffset((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.storeByteAtOffsetUnsafe((byte[]) null, (byte)0, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        BinaryData.loadShortAtOffsetUnsafe(byteArray0, (-2276));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2276 out of bounds for length 6
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadShortAtOffset((byte[]) null, (short)27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        BinaryData.loadLongAtOffsetUnsafe(byteArray0, (byte)88);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 88 out of bounds for length 5
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadIntAtOffsetUnsafe((byte[]) null, (-35));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.loadIntAtOffsetUnsafe(byteArray0, 2700);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2700 out of bounds for length 9
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadIntAtOffset((byte[]) null, 443);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadByteAtOffsetUnsafe((byte[]) null, 2559);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.loadByteAtOffsetUnsafe(byteArray0, 1304);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1304 out of bounds for length 9
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadByteAtOffset((byte[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadShortAtOffsetUnsafe((byte[]) null, 4526);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadLongAtOffsetUnsafe((byte[]) null, (-3126));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.storeLongAtOffsetUnsafe((byte[]) null, (byte)91, (byte)91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BinaryData.storeByteAtOffsetUnsafe(byteArray0, (-896), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -896 out of bounds for length 1
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BinaryData.storeIntAtOffsetUnsafe(byteArray0, (-1), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        BinaryData.loadLongAtOffset(byteArray0, (byte)0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.loadLongAtOffset((byte[]) null, (-839));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        BinaryData.storeLongAtOffset(byteArray0, (byte)0, (byte)0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      try { 
        BinaryData.storeLongAtOffset(byteArray0, (byte) (-1), (byte) (-1));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        BinaryData.loadIntAtOffset(byteArray0, (byte)0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        BinaryData.loadIntAtOffset(byteArray0, (-471));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.storeIntAtOffset(byteArray0, 47, 47);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.storeIntAtOffset((byte[]) null, (-5), (-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BinaryData.loadShortAtOffset(byteArray0, (byte)0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.loadShortAtOffset(byteArray0, (-1142));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        BinaryData.storeShortAtOffset(byteArray0, (short)38, (short)38);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.storeShortAtOffset((byte[]) null, (byte) (-87), (byte) (-87));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = BinaryData.loadByteAtOffset(byteArray0, (byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.loadByteAtOffset(byteArray0, 1370);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.loadByteAtOffset(byteArray0, (-2241));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BinaryData.storeByteAtOffset(byteArray0, (byte)19, (byte)19);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.buck.commons.i18n.ResourceBundle
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryData.storeByteAtOffset((byte[]) null, (byte) (-87), (byte) (-87));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.buck.commons.algorithms.BinaryData", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BinaryData.storeLongAtOffset(byteArray0, (byte)0, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte byte0 = BinaryData.loadByteAtOffsetUnsafe(byteArray0, 2);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = BinaryData.loadIntAtOffsetUnsafe(byteArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BinaryData.storeByteAtOffset(byteArray0, (byte)2, (byte)2);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)2}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      BinaryData.storeIntAtOffset(byteArray0, (byte)0, (-40));
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-40), (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      long long0 = BinaryData.loadLongAtOffset(byteArray0, (byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BinaryData binaryData0 = new BinaryData();
      assertEquals(8, BinaryData.sizeOfLong);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BinaryData.storeShortAtOffset(byteArray0, (byte)0, (short)3315);
      assertArrayEquals(new byte[] {(byte)12, (byte) (-13), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }
}
