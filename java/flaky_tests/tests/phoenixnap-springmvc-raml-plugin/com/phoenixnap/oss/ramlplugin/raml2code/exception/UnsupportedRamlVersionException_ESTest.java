/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 04:54:23 GMT 2022
 */

package com.phoenixnap.oss.ramlplugin.raml2code.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.phoenixnap.oss.ramlplugin.raml2code.exception.UnsupportedRamlVersionException;
import com.phoenixnap.oss.ramlplugin.raml2code.raml.RamlVersion;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnsupportedRamlVersionException_ESTest extends UnsupportedRamlVersionException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnsupportedRamlVersionException unsupportedRamlVersionException0 = null;
      try {
        unsupportedRamlVersionException0 = new UnsupportedRamlVersionException((RamlVersion[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RamlVersion[] ramlVersionArray0 = new RamlVersion[0];
      UnsupportedRamlVersionException unsupportedRamlVersionException0 = new UnsupportedRamlVersionException(ramlVersionArray0);
  }
}
