/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 18:33:03 GMT 2022
 */

package hirondelle.date4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import hirondelle.date4j.DateTimeParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateTimeParser_ESTest extends DateTimeParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.parse("T");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected format for date:T
         //
         verifyException("hirondelle.date4j.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.parse(" ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected format for date:
         //
         verifyException("hirondelle.date4j.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateTimeParser.UnknownDateTimeFormat dateTimeParser_UnknownDateTimeFormat0 = new DateTimeParser.UnknownDateTimeFormat(".c|MIUyl33Q");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      int int0 = dateTimeParser0.getDateTimeSeparator("T");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      int int0 = dateTimeParser0.getDateTimeSeparator("Y)Y2&*i<`+1ITE*");
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      int int0 = dateTimeParser0.getDateTimeSeparator("NhA");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.parse("c`");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.getDateTimeSeparator((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hirondelle.date4j.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.parse("rBM>3DRl{*YplQ5uB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected format for time:rBM>3DRl{*YplQ5uB
         //
         verifyException("hirondelle.date4j.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.parse("9");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // DateTime string is null
         //
         verifyException("hirondelle.date4j.DateTimeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      DateTimeParser.UnknownDateTimeFormat dateTimeParser_UnknownDateTimeFormat0 = new DateTimeParser.UnknownDateTimeFormat("(dd)", mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateTimeParser dateTimeParser0 = new DateTimeParser();
      // Undeclared exception!
      try { 
        dateTimeParser0.parse("String passed to DateTime constructor is null. You can use an empty string, but not a null reference.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected format for date:String
         //
         verifyException("hirondelle.date4j.DateTimeParser", e);
      }
  }
}
