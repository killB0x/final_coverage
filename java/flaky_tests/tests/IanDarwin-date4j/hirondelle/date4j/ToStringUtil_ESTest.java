/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 18:34:22 GMT 2022
 */

package hirondelle.date4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import hirondelle.date4j.ToStringUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ToStringUtil_ESTest extends ToStringUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<ToStringUtil> class0 = ToStringUtil.class;
      String string0 = ToStringUtil.getText(class0);
      // Undeclared exception!
      ToStringUtil.getTextAvoidCyclicRefs(string0, class0, string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<ToStringUtil> class0 = ToStringUtil.class;
      String string0 = ToStringUtil.getText(class0);
      // Undeclared exception!
      ToStringUtil.getText(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringUtil.getText((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hirondelle.date4j.ToStringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<ToStringUtil> class0 = ToStringUtil.class;
      // Undeclared exception!
      try { 
        ToStringUtil.getTextAvoidCyclicRefs(class0, class0, "notifyAll");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hirondelle.date4j.ToStringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      String string0 = ToStringUtil.getText(class0);
      ToStringUtil.getTextAvoidCyclicRefs(string0, class0, string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      ToStringUtil.getText(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<ToStringUtil> class0 = ToStringUtil.class;
      // Undeclared exception!
      try { 
        ToStringUtil.getTextAvoidCyclicRefs(class0, class0, "elementAt");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ToStringUtil.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }
}
