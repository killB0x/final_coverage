/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 10:37:03 GMT 2022
 */

package com.github.druidgreeneyes.rivet.core.util.hilbert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.druidgreeneyes.rivet.core.util.hilbert.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point_ESTest extends Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point point0 = null;
      try {
        point0 = new Point((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.util.hilbert.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point point0 = new Point(0);
      Point point1 = new Point(point0.c);
      assertFalse(point1.equals((Object)point0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point point0 = null;
      try {
        point0 = new Point((-2431));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2431
         //
         verifyException("com.github.druidgreeneyes.rivet.core.util.hilbert.Point", e);
      }
  }
}
