/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 10:34:01 GMT 2022
 */

package com.github.druidgreeneyes.rivet.core.extras;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap;
import com.github.druidgreeneyes.rivet.core.labels.DenseRIV;
import com.github.druidgreeneyes.rivet.core.labels.RIV;
import java.util.concurrent.ConcurrentHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UntrainedCachedWordsMap_ESTest extends UntrainedCachedWordsMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivWords(stringArray0, 49, 0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConcurrentHashMap<String, RIV> concurrentHashMap0 = new ConcurrentHashMap<String, RIV>();
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.cacheingRivettizeText(concurrentHashMap0, ":p9[rUpb,jZ", 3220, 1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConcurrentHashMap<String, RIV> concurrentHashMap0 = new ConcurrentHashMap<String, RIV>();
      String[] stringArray0 = new String[0];
      RIV[] rIVArray0 = UntrainedCachedWordsMap.rivAndCacheWords(concurrentHashMap0, stringArray0, 0, 0);
      assertEquals(0, rIVArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.sumMapRIVs((RIV[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivettizeText("com.github.druidgreeneyes.rivet.core.exceptions.SizeMismatchException", (-1375), (-2070));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivWords((String[]) null, 6, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = UntrainedCachedWordsMap.tokenizeText("j%MP");
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivAndSumWords(stringArray0, 1609, 5052);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConcurrentHashMap<String, RIV> concurrentHashMap0 = new ConcurrentHashMap<String, RIV>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivAndCacheWords(concurrentHashMap0, stringArray0, (-2972), (-2972));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConcurrentHashMap<String, RIV> concurrentHashMap0 = new ConcurrentHashMap<String, RIV>(20);
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.cacheingRivettizeText(concurrentHashMap0, (String) null, 1, (-6144));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.tokenizeText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConcurrentHashMap<String, RIV> concurrentHashMap0 = new ConcurrentHashMap<String, RIV>();
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivAndCacheWords(concurrentHashMap0, (String[]) null, (-1), (-1914));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivWords(stringArray0, (-933), (-933));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConcurrentHashMap<String, RIV> concurrentHashMap0 = new ConcurrentHashMap<String, RIV>();
      int[] intArray0 = new int[5];
      DenseRIV denseRIV0 = new DenseRIV(intArray0);
      concurrentHashMap0.put("I_(zyH!?", denseRIV0);
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.cacheingRivettizeText(concurrentHashMap0, "I_(zyH!?", (-783), (-783));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivettizeText((String) null, (-955), (-955));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.rivAndSumWords((String[]) null, 7, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[0];
      RIV[] rIVArray0 = UntrainedCachedWordsMap.rivWords(stringArray0, 4, 4);
      // Undeclared exception!
      try { 
        UntrainedCachedWordsMap.sumMapRIVs(rIVArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/mutable/MutableDouble
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.UntrainedCachedWordsMap", e);
      }
  }
}
