/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 10:38:47 GMT 2022
 */

package com.github.druidgreeneyes.rivet.core.extras.topicheirarchy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.druidgreeneyes.rivet.core.extras.topicheirarchy.NamedRIV;
import com.github.druidgreeneyes.rivet.core.extras.topicheirarchy.NamedRIVMap;
import com.github.druidgreeneyes.rivet.core.labels.ArrayRIV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NamedRIVMap_ESTest extends NamedRIVMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayRIV arrayRIV0 = ArrayRIV.empty(Integer.MIN_VALUE);
      NamedRIV namedRIV0 = NamedRIV.make("", arrayRIV0);
      NamedRIV namedRIV1 = NamedRIV.make((String) null, arrayRIV0);
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(6060, namedRIV0);
      namedRIVMap0.put(namedRIV1);
      String string0 = namedRIVMap0.name();
      assertEquals("", string0);
      assertEquals(6060, namedRIVMap0.size);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(0);
      int int0 = namedRIVMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayRIV arrayRIV0 = ArrayRIV.empty(320);
      NamedRIV namedRIV0 = NamedRIV.make("=ayU+Y_AR=G!kJc", arrayRIV0);
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(320, namedRIV0);
      int int0 = namedRIVMap0.size();
      assertEquals(320, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(Integer.MIN_VALUE);
      int int0 = namedRIVMap0.size();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayRIV arrayRIV0 = ArrayRIV.empty(320);
      NamedRIV namedRIV0 = NamedRIV.make("=ayU+Y_AR=G!kJc", arrayRIV0);
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(320, namedRIV0);
      String string0 = namedRIVMap0.name();
      assertEquals(320, namedRIVMap0.size);
      assertEquals("=ayU+Y_AR=G!kJc", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap((-1041));
      ArrayRIV arrayRIV0 = namedRIVMap0.meanVector();
      assertEquals((-1041), arrayRIV0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(Integer.MIN_VALUE);
      ArrayRIV arrayRIV0 = ArrayRIV.empty(Integer.MIN_VALUE);
      NamedRIV namedRIV0 = NamedRIV.make("", arrayRIV0);
      NamedRIVMap namedRIVMap1 = new NamedRIVMap(6060, namedRIV0);
      namedRIVMap0.putAll(namedRIVMap1);
      int int0 = namedRIVMap0.count();
      assertFalse(namedRIVMap0.isEmpty());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayRIV arrayRIV0 = ArrayRIV.empty(320);
      NamedRIV namedRIV0 = NamedRIV.make("=ayU+Y_AR=G!kJc", arrayRIV0);
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(320, namedRIV0);
      namedRIVMap0.contains(namedRIV0);
      assertEquals(320, namedRIVMap0.size);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(287);
      // Undeclared exception!
      try { 
        namedRIVMap0.remove((NamedRIV) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.topicheirarchy.NamedRIVMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(2);
      // Undeclared exception!
      try { 
        namedRIVMap0.put((NamedRIV) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.topicheirarchy.NamedRIVMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(0);
      // Undeclared exception!
      try { 
        namedRIVMap0.contains((NamedRIV) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.topicheirarchy.NamedRIVMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = null;
      try {
        namedRIVMap0 = new NamedRIVMap((-1557), (NamedRIV) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.druidgreeneyes.rivet.core.extras.topicheirarchy.NamedRIVMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(293);
      namedRIVMap0.stream();
      assertEquals(293, namedRIVMap0.size);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(0);
      namedRIVMap0.count();
      assertEquals(0, namedRIVMap0.size);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(291);
      namedRIVMap0.magnitude();
      assertEquals(291, namedRIVMap0.size);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(0);
      ArrayRIV arrayRIV0 = namedRIVMap0.meanVector();
      NamedRIV namedRIV0 = NamedRIV.make("com.github.druidgreeneyes.rivet.core.extras.topicheirarchy.NamedRIVMap", arrayRIV0);
      namedRIVMap0.remove(namedRIV0);
      assertEquals(0, arrayRIV0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NamedRIVMap namedRIVMap0 = new NamedRIVMap(293);
      ArrayRIV arrayRIV0 = namedRIVMap0.meanVector();
      NamedRIV namedRIV0 = NamedRIV.make("", arrayRIV0);
      namedRIVMap0.contains(namedRIV0);
      assertEquals(293, arrayRIV0.size());
  }
}
