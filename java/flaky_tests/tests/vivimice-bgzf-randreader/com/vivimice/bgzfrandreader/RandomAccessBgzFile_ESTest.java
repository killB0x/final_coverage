/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 19:34:33 GMT 2022
 */

package com.vivimice.bgzfrandreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.vivimice.bgzfrandreader.RandomAccessBgzFile;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.nio.channels.ClosedChannelException;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.SeekableByteChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomAccessBgzFile_ESTest extends RandomAccessBgzFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/w4!D'h10N90w4!D'h10N9");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "S)D|3+VfK/#[qBN)");
      File file0 = MockFile.createTempFile("w4!D'h10N9", "w4!D'h10N9");
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(file0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Malformed block header
         //
         verifyException("com.vivimice.bgzfrandreader.RandomAccessBgzFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = MockFile.createTempFile("Malformed bck header", "Malformed bck header");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(fileChannel0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Header is broken
         //
         verifyException("com.vivimice.bgzfrandreader.RandomAccessBgzFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("=@8m|");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(fileChannel0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("v");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      fileChannel0.close();
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(fileChannel0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(fileChannel0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      File file0 = MockFile.createTempFile("com.vivimice.bgzfrandreader.BgzipBlock", "com.vivimice.bgzfrandreader.BgzipBlock");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Header is broken
         //
         verifyException("com.vivimice.bgzfrandreader.RandomAccessBgzFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.getChannel();
      mockFileInputStream0.close();
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(mockFileInputStream0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = MockFile.createTempFile("com.vivimice.bgzfrandreader.BgzipBlock", "com.vivimice.bgzfrandreader.BgzipBlock");
      FileSystemHandling.shouldAllThrowIOExceptions();
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(file0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/w4!D'h10N90w4!D'h10N9");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Wrong compressed data block: invalid zlib format");
      File file0 = MockFile.createTempFile("w4!D'h10N9", "w4!D'h10N9");
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(file0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Malformed block header
         //
         verifyException("com.vivimice.bgzfrandreader.RandomAccessBgzFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomAccessBgzFile randomAccessBgzFile0 = null;
      try {
        randomAccessBgzFile0 = new RandomAccessBgzFile((SeekableByteChannel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.vivimice.bgzfrandreader.RandomAccessBgzFile", e);
      }
  }
}
