/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 06:14:24 GMT 2022
 */

package com.sirding.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sirding.model.SectionField;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SectionField_ESTest extends SectionField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      HashMap<String, Field> hashMap0 = new HashMap<String, Field>();
      hashMap0.put("l1y(TLiHotQ/k", (Field) null);
      sectionField0.setSectionOptionsMap(hashMap0);
      Map<String, Field> map0 = sectionField0.getSectionOptionsMap();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      LinkedList<Field> linkedList0 = new LinkedList<Field>();
      sectionField0.setSectionOptionsList(linkedList0);
      linkedList0.add((Field) null);
      List<Field> list0 = sectionField0.getSectionOptionsList();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      LinkedList<Field> linkedList0 = new LinkedList<Field>();
      sectionField0.setObj(linkedList0);
      LinkedList linkedList1 = (LinkedList)sectionField0.getObj();
      assertEquals(0, linkedList1.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      sectionField0.setSectionOptionsMap((Map<String, Field>) null);
      Map<String, Field> map0 = sectionField0.getSectionOptionsMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      sectionField0.setSectionNameField((Field) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      Object object0 = sectionField0.getObj();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      List<Field> list0 = sectionField0.getSectionOptionsList();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      sectionField0.setSectionOptionsList((List<Field>) null);
      List<Field> list0 = sectionField0.getSectionOptionsList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      Map<String, Field> map0 = sectionField0.getSectionOptionsMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SectionField sectionField0 = new SectionField();
      Field field0 = sectionField0.getSectionNameField();
      assertNull(field0);
  }
}
