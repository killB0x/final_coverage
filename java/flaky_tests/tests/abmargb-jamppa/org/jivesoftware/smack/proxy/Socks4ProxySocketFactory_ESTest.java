/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:02:38 GMT 2022
 */

package org.jivesoftware.smack.proxy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jivesoftware.smack.proxy.ProxyInfo;
import org.jivesoftware.smack.proxy.Socks4ProxySocketFactory;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Socks4ProxySocketFactory_ESTest extends Socks4ProxySocketFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forSocks5Proxy("\"t 4a:]/=UCQV&d", 200, "\"t 4a:]/=UCQV&d", "(CjM'q8NZ");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 200);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      try { 
        socks4ProxySocketFactory0.createSocket("\"t 4a:]/=UCQV&d", (-3411));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Proxy Exception SOCKS4 : org.evosuite.runtime.mock.java.lang.MockThrowable: Proxy Exception SOCKS4 : stream is closed
         //
         verifyException("org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forDefaultProxy();
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      InetAddress inetAddress1 = MockInetAddress.getByName("");
      try { 
        socks4ProxySocketFactory0.createSocket(inetAddress1, 3332, inetAddress0, (-229));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Proxy Exception SOCKS4 : java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@5439c88a
         //
         verifyException("org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forDefaultProxy();
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket((InetAddress) null, 2, (InetAddress) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forSocks5Proxy((String) null, (-591), (String) null, (String) null);
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket(inetAddress0, (-591), inetAddress0, (-591));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-591
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forDefaultProxy();
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      try { 
        socks4ProxySocketFactory0.createSocket(inetAddress0, 6);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Proxy Exception SOCKS4 : java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@5439c88a
         //
         verifyException("org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forNoProxy();
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket((InetAddress) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forNoProxy();
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      try { 
        socks4ProxySocketFactory0.createSocket((String) null, 1133, inetAddress0, 1133);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Proxy Exception SOCKS4 : java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@5439c88a
         //
         verifyException("org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory((ProxyInfo) null);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket("P~M8Ga", 0, inetAddress0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory((ProxyInfo) null);
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket("Rq:y6tt,Y+HYT", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forSocks4Proxy("SOCKS4", (-816), "SOCKS4", "SOCKS4");
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket("SOCKS4", (-816));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-816
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forSocks4Proxy("qJiJ(@G0", 200, (String) null, "qJiJ(@G0");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 200);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      try { 
        socks4ProxySocketFactory0.createSocket("qJiJ(@G0", 200);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Proxy Exception SOCKS4 : org.evosuite.runtime.mock.java.lang.MockThrowable: Proxy Exception SOCKS4 : stream is closed
         //
         verifyException("org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProxyInfo.ProxyType proxyInfo_ProxyType0 = ProxyInfo.ProxyType.NONE;
      ProxyInfo proxyInfo0 = new ProxyInfo(proxyInfo_ProxyType0, "org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", (-1998), "org.jivesoftware.smack.proxy.Socks4ProxySocketFactory", "");
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket("", 2956, inetAddress0, (-1998));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1998
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProxyInfo proxyInfo0 = ProxyInfo.forSocks4Proxy("Proxy Exception ", (-660), "Proxy Exception ", "Proxy Exception ");
      Socks4ProxySocketFactory socks4ProxySocketFactory0 = new Socks4ProxySocketFactory(proxyInfo0);
      InetAddress inetAddress0 = MockInetAddress.getByName("Proxy Exception ");
      // Undeclared exception!
      try { 
        socks4ProxySocketFactory0.createSocket(inetAddress0, (-660));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-660
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }
}
