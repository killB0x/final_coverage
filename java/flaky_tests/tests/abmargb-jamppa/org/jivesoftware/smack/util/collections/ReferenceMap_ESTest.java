/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:25:29 GMT 2022
 */

package org.jivesoftware.smack.util.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jivesoftware.smack.util.collections.AbstractReferenceMap;
import org.jivesoftware.smack.util.collections.ReferenceMap;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReferenceMap_ESTest extends ReferenceMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = null;
      try {
        referenceMap0 = new ReferenceMap<Integer, Integer>(0, 180, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // valueType must be HARD, SOFT, WEAK.
         //
         verifyException("org.jivesoftware.smack.util.collections.AbstractReferenceMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = null;
      try {
        referenceMap0 = new ReferenceMap<Integer, Integer>(1, 1, 1, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Load factor must be greater than 0
         //
         verifyException("org.jivesoftware.smack.util.collections.AbstractHashedMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = null;
      try {
        referenceMap0 = new ReferenceMap<Integer, Integer>(1617, 2, 2, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keyType must be HARD, SOFT, WEAK.
         //
         verifyException("org.jivesoftware.smack.util.collections.AbstractReferenceMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = null;
      try {
        referenceMap0 = new ReferenceMap<Integer, Integer>((-1776), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keyType must be HARD, SOFT, WEAK.
         //
         verifyException("org.jivesoftware.smack.util.collections.AbstractReferenceMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = new ReferenceMap<Integer, Integer>();
      assertEquals(2, AbstractReferenceMap.WEAK);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = new ReferenceMap<Integer, Integer>(0, 2, 2, 1);
      assertEquals(0, AbstractReferenceMap.HARD);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = new ReferenceMap<Integer, Integer>(2, 2);
      assertEquals(2, AbstractReferenceMap.WEAK);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = new ReferenceMap<Integer, Integer>(0, 0, 1, 2, true);
      assertEquals(1, AbstractReferenceMap.SOFT);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReferenceMap<Integer, Integer> referenceMap0 = new ReferenceMap<Integer, Integer>(0, 1, true);
      assertEquals(1, AbstractReferenceMap.SOFT);
  }
}
