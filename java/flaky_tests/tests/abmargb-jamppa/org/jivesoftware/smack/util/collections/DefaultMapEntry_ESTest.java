/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:21:15 GMT 2022
 */

package org.jivesoftware.smack.util.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jivesoftware.smack.util.collections.DefaultMapEntry;
import org.jivesoftware.smack.util.collections.KeyValue;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultMapEntry_ESTest extends DefaultMapEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultMapEntry<Integer, Integer> defaultMapEntry0 = null;
      try {
        defaultMapEntry0 = new DefaultMapEntry<Integer, Integer>((KeyValue<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jivesoftware.smack.util.collections.DefaultMapEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultMapEntry<Integer, Integer> defaultMapEntry0 = null;
      try {
        defaultMapEntry0 = new DefaultMapEntry<Integer, Integer>((Map.Entry<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jivesoftware.smack.util.collections.DefaultMapEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-2072));
      DefaultMapEntry<Integer, Integer> defaultMapEntry0 = new DefaultMapEntry<Integer, Integer>(integer0, integer0);
      DefaultMapEntry<Integer, Integer> defaultMapEntry1 = new DefaultMapEntry<Integer, Integer>((Map.Entry<Integer, Integer>) defaultMapEntry0);
      assertTrue(defaultMapEntry1.equals((Object)defaultMapEntry0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultMapEntry<Integer, Integer> defaultMapEntry0 = new DefaultMapEntry<Integer, Integer>((Integer) null, (Integer) null);
      DefaultMapEntry<Integer, Integer> defaultMapEntry1 = new DefaultMapEntry<Integer, Integer>((KeyValue<Integer, Integer>) defaultMapEntry0);
      assertTrue(defaultMapEntry1.equals((Object)defaultMapEntry0));
  }
}
