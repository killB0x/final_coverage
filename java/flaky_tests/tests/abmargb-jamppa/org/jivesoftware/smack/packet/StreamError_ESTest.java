/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:15:37 GMT 2022
 */

package org.jivesoftware.smack.packet;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jivesoftware.smack.packet.StreamError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StreamError_ESTest extends StreamError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StreamError streamError0 = new StreamError((String) null);
      String string0 = streamError0.getText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StreamError streamError0 = new StreamError("", "=dDm{,g83vKid%|I");
      String string0 = streamError0.getText();
      assertEquals("", streamError0.getCode());
      assertEquals("=dDm{,g83vKid%|I", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StreamError streamError0 = new StreamError((String) null);
      String string0 = streamError0.getCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StreamError streamError0 = new StreamError(")\"-A", "");
      String string0 = streamError0.getCode();
      assertEquals("", streamError0.getText());
      assertEquals(")\"-A", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StreamError streamError0 = new StreamError("", "");
      String string0 = streamError0.toString();
      assertEquals("stream:error () text: ", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StreamError streamError0 = new StreamError((String) null);
      String string0 = streamError0.toString();
      assertEquals("stream:error (null)", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StreamError streamError0 = new StreamError("", "");
      String string0 = streamError0.getText();
      assertEquals("", string0);
      assertEquals("", streamError0.getCode());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StreamError streamError0 = new StreamError("", "");
      String string0 = streamError0.getCode();
      assertEquals("", streamError0.getText());
      assertEquals("", string0);
  }
}
