/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 15:43:27 GMT 2022
 */

package com.antherd.smcrypto.sm2;

import org.junit.Test;
import static org.junit.Assert.*;
import com.antherd.smcrypto.sm2.Point;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point_ESTest extends Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Point point0 = new Point(hashMap0, hashMap0);
      point0.setPublicKey("gC$");
      String string0 = point0.toString();
      assertEquals("Point{privateKey=null, publicKey=gC$, k={}, x1={}}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Point point0 = new Point("e$ybn", "Keypair{privateKey='", hashMap1, hashMap0);
      assertEquals("e$ybn", point0.getPrivateKey());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Point point0 = new Point(hashMap0, hashMap1);
      assertNull(point0.getPrivateKey());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point point0 = new Point();
      Map<String, Object> map0 = point0.getX1();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.put(".QTkq.7]\"7/9h#]m", object0);
      Point point0 = new Point("e$ybn", ".QTkq.7]\"7/9h#]m", hashMap0, hashMap0);
      Map<String, Object> map0 = point0.getX1();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Point point0 = new Point("!bt9|UJ$#_<", "IU`N", hashMap0, hashMap0);
      Map<String, Object> map0 = point0.getK();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Point point0 = new Point(hashMap0, hashMap0);
      hashMap0.put("com.antherd.smcrypto.sm2.Point", "gC$");
      Map<String, Object> map0 = point0.getK();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Point point0 = new Point("e$ybn", ".QTkq.7]\"7/9h#]m", hashMap0, hashMap0);
      Map<String, Object> map0 = point0.getX1();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Point point0 = new Point("e$ybn", ".QTkq.7]\"7/9h#]m", hashMap0, hashMap0);
      point0.setK(hashMap0);
      assertEquals(".QTkq.7]\"7/9h#]m", point0.getPublicKey());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point point0 = new Point();
      point0.setX1((Map<String, Object>) null);
      assertNull(point0.getPublicKey());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point point0 = new Point((Map<String, Object>) null, (Map<String, Object>) null);
      Map<String, Object> map0 = point0.getK();
      assertNull(map0);
  }
}
