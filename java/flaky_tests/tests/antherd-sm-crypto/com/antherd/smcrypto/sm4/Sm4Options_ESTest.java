/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 15:41:57 GMT 2022
 */

package com.antherd.smcrypto.sm4;

import org.junit.Test;
import static org.junit.Assert.*;
import com.antherd.smcrypto.sm4.Sm4Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Sm4Options_ESTest extends Sm4Options_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options("ID8,k", "r`].sbq", (String) null);
      String string0 = sm4Options0.toString();
      assertEquals("Sm4Options{padding='ID8,k', mode='r`].sbq', iv='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options("Sm4Options{padding='", "", "");
      assertEquals("", sm4Options0.getIv());
      assertEquals("", sm4Options0.getMode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options();
      sm4Options0.setPadding("e6i*($1g @~L]ij:v");
      String string0 = sm4Options0.getPadding();
      assertEquals("e6i*($1g @~L]ij:v", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options();
      String string0 = sm4Options0.getMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options();
      sm4Options0.setMode("");
      String string0 = sm4Options0.getMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options("ID8,k", "r`].sbq", (String) null);
      sm4Options0.iv = "";
      sm4Options0.getIv();
      assertEquals("r`].sbq", sm4Options0.getMode());
      assertEquals("", sm4Options0.getIv());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options("ID8,k", "r`].sbq", (String) null);
      String string0 = sm4Options0.getMode();
      assertNotNull(string0);
      assertEquals("r`].sbq", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options("ID8,k", "r`].sbq", (String) null);
      sm4Options0.setIv("r`].sbq");
      String string0 = sm4Options0.getIv();
      assertNotNull(string0);
      assertEquals("r`].sbq", sm4Options0.getMode());
      assertEquals("r`].sbq", sm4Options0.getIv());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options("ID8,k", "r`].sbq", (String) null);
      String string0 = sm4Options0.getIv();
      assertEquals("r`].sbq", sm4Options0.getMode());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options("ID8,k", "r`].sbq", (String) null);
      assertEquals("ID8,k", sm4Options0.getPadding());
      
      sm4Options0.setPadding("");
      String string0 = sm4Options0.getPadding();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sm4Options sm4Options0 = new Sm4Options();
      String string0 = sm4Options0.getPadding();
      assertNull(string0);
  }
}
