/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 15:58:41 GMT 2022
 */

package net.pwall.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import net.pwall.util.SubSequence;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubSequence_ESTest extends SubSequence_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(72);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 41, 72);
      assertEquals(31, subSequence0.length());
      
      String string0 = subSequence0.toString();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(72);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 72, 72);
      // Undeclared exception!
      try { 
        subSequence0.charAt(72);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Subsequence index incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3300);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 495, 3300);
      CharSequence charSequence0 = subSequence0.subSequence(915, 915);
      assertEquals(0, charSequence0.length());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3300);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 1, 3300);
      CharSequence charSequence0 = subSequence0.subSequence(285, 2820);
      assertEquals(2535, charSequence0.length());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 0);
      int int0 = subSequence0.length();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(72);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 72, 72);
      char char0 = subSequence0.charAt((-1));
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 1);
      assertEquals(1, subSequence0.length());
      
      char char0 = subSequence0.charAt(0);
      assertEquals('K', char0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4145);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 4145);
      charBuffer0.flip();
      // Undeclared exception!
      try { 
        subSequence0.toString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubSequence subSequence0 = new SubSequence("\u0000", 1, 1);
      // Undeclared exception!
      try { 
        subSequence0.charAt((-3359));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubSequence subSequence0 = null;
      try {
        subSequence0 = new SubSequence((CharSequence) null, (-1195), (-1195));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      SubSequence subSequence0 = null;
      try {
        subSequence0 = new SubSequence(charBuffer0, 2199, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SubSequence start incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 1);
      int int0 = subSequence0.length();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1115);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 0);
      String string0 = subSequence0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 1);
      subSequence0.toString();
      charBuffer0.append((CharSequence) subSequence0);
      assertEquals(0, charBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        subSequence0.subSequence(0, 2206);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Subsequence end index incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        subSequence0.subSequence(0, (-1908));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Subsequence end index incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1115);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 1);
      // Undeclared exception!
      try { 
        subSequence0.subSequence(7, 989);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Subsequence start index incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2450);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 1, 1888);
      // Undeclared exception!
      try { 
        subSequence0.subSequence((-754), (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Subsequence start index incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 1);
      // Undeclared exception!
      try { 
        subSequence0.charAt(1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Subsequence index incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 1);
      // Undeclared exception!
      try { 
        subSequence0.charAt((-3359));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1415);
      SubSequence subSequence0 = null;
      try {
        subSequence0 = new SubSequence(charBuffer0, 1415, 2636);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SubSequence end incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(36);
      SubSequence subSequence0 = null;
      try {
        subSequence0 = new SubSequence(charBuffer0, 36, (-800));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SubSequence end incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      SubSequence subSequence0 = new SubSequence(charBuffer0, 0, 1);
      charBuffer0.append((CharSequence) subSequence0);
      // Undeclared exception!
      try { 
        subSequence0.subSequence(1, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SubSequence start incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      SubSequence subSequence0 = null;
      try {
        subSequence0 = new SubSequence(charBuffer0, (-1), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SubSequence start incorrect
         //
         verifyException("net.pwall.util.SubSequence", e);
      }
  }
}
