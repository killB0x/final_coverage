/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 15:56:28 GMT 2022
 */

package net.pwall.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.pwall.util.CharMapper;
import net.pwall.util.CharMapperEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharMapper_ESTest extends CharMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = CharMapper.hexMapping(43, (-1), "Start index invalid: 00000000000000000000000000000000000000000000000000000000000000000000000000000000053");
      assertEquals("Start index invalid: 00000000000000000000000000000000000000000000000000000000000000000000000000000000053", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = CharMapper.hexMapping((-1132), 27, "", " and ");
      assertEquals("0000000000000000000FFFFFB94 and ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharMapper.hexMapping(1, (-1518), "Ls2i}:.#", "net.pwall.util.CharMapperEntry");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1480
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharMapperEntry[] charMapperEntryArray0 = new CharMapperEntry[8];
      CharMapperEntry charMapperEntry0 = new CharMapperEntry(59, "A\"!G%");
      charMapperEntryArray0[0] = charMapperEntry0;
      CharMapperEntry charMapperEntry1 = new CharMapperEntry(2958, "");
      charMapperEntryArray0[7] = charMapperEntry1;
      // Undeclared exception!
      try { 
        CharMapper.lookupMapping(charMapperEntryArray0, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.pwall.util.CharMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[9];
      String string0 = CharMapper.arrayMapping(stringArray0, 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = CharMapper.arrayMapping(stringArray0, 7, 6);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = CharMapper.arrayMapping(stringArray0, (-1775), (-1775));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[][] stringArray0 = new String[3][2];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Start index invalid: 00000000000000000000000000000000000000000000000000000000000000000000000000000000053";
      stringArray1[1] = "Start index invalid: 00000000000000000000000000000000000000000000000000000000000000000000000000000000053";
      stringArray0[0] = stringArray1;
      stringArray0[1] = stringArray1;
      stringArray0[2] = stringArray0[1];
      String string0 = CharMapper.lookupMapping(stringArray0, 83);
      assertEquals("Start index invalid: 00000000000000000000000000000000000000000000000000000000000000000000000000000000053", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "\"G9zZXtYm|";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = "\"G9zZXtYm|";
      stringArray2[1] = "";
      stringArray0[1] = stringArray2;
      String string0 = CharMapper.lookupMapping(stringArray0, 34);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharMapperEntry[] charMapperEntryArray0 = new CharMapperEntry[2];
      CharMapperEntry charMapperEntry0 = new CharMapperEntry((-670), "");
      charMapperEntryArray0[0] = charMapperEntry0;
      charMapperEntryArray0[1] = charMapperEntryArray0[0];
      String string0 = CharMapper.lookupMapping(charMapperEntryArray0, (-670));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = CharMapper.hexMapping(0, 0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "sixty";
      String string0 = CharMapper.arrayMapping(stringArray0, (-1132), (-1132));
      assertEquals("sixty", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      String string0 = CharMapper.arrayMapping(stringArray0, 628, 628);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[][] stringArray0 = new String[1][8];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      stringArray0[0] = stringArray1;
      // Undeclared exception!
      try { 
        CharMapper.lookupMapping(stringArray0, 1000011);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[][] stringArray0 = new String[1][0];
      // Undeclared exception!
      try { 
        CharMapper.lookupMapping(stringArray0, 23);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.pwall.util.CharMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      CharMapper.hexMapping(1000000, 1000000, ">", ">");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      CharMapper.hexMapping(2147483622, 2147483622, "", "KlAu*MAWp");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharMapper.hexMapping(1780, 1780, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.pwall.util.CharMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      CharMapper.hexMapping(1000000, 1000000, ">");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharMapper.hexMapping(999986, 999986, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.pwall.util.CharMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharMapper.hexMapping((-785), (-785), "A2:5!qC,K;I");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -773
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharMapper.decimalMapping(0, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.pwall.util.CharMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharMapper.decimalMapping((-644), "4zJR?)60OgF-@&QLTQ[", "4zJR?)60OgF-@&QLTQ[");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -644 out of bounds for length 100
         //
         verifyException("net.pwall.util.Strings", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharMapper.arrayMapping((String[]) null, 147483648, 147483648);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.pwall.util.CharMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = CharMapper.hexMapping(1181, 1181, "", (String) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = CharMapper.hexMapping(0, 0, "", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = CharMapper.decimalMapping(0, "", "");
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = CharMapper.decimalMapping(44, "W", (String) null);
      assertEquals("W44", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharMapperEntry[] charMapperEntryArray0 = new CharMapperEntry[1];
      CharMapperEntry charMapperEntry0 = new CharMapperEntry((-1), "t4Z!3Dcy|");
      charMapperEntryArray0[0] = charMapperEntry0;
      String string0 = CharMapper.lookupMapping(charMapperEntryArray0, (-1));
      assertEquals("t4Z!3Dcy|", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharMapperEntry[] charMapperEntryArray0 = new CharMapperEntry[8];
      CharMapperEntry charMapperEntry0 = new CharMapperEntry(59, "A\"!G%");
      charMapperEntryArray0[0] = charMapperEntry0;
      CharMapperEntry charMapperEntry1 = new CharMapperEntry(7, "1Cdu,Q\"HJXix");
      charMapperEntryArray0[1] = charMapperEntry1;
      charMapperEntryArray0[2] = charMapperEntry1;
      charMapperEntryArray0[3] = charMapperEntryArray0[1];
      CharMapperEntry charMapperEntry2 = new CharMapperEntry(2958, "_+gQzjMX\"Z,E");
      charMapperEntryArray0[4] = charMapperEntry2;
      charMapperEntryArray0[7] = charMapperEntry0;
      String string0 = CharMapper.lookupMapping(charMapperEntryArray0, 59);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharMapperEntry charMapperEntry0 = new CharMapperEntry(98, (String) null);
      CharMapperEntry[] charMapperEntryArray0 = new CharMapperEntry[1];
      charMapperEntryArray0[0] = charMapperEntry0;
      String string0 = CharMapper.lookupMapping(charMapperEntryArray0, 936);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharMapperEntry[] charMapperEntryArray0 = new CharMapperEntry[2];
      CharMapperEntry charMapperEntry0 = new CharMapperEntry(2047, (String) null);
      charMapperEntryArray0[0] = charMapperEntry0;
      String string0 = CharMapper.lookupMapping(charMapperEntryArray0, 44);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharMapperEntry[] charMapperEntryArray0 = new CharMapperEntry[0];
      String string0 = CharMapper.lookupMapping(charMapperEntryArray0, 9);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[][] stringArray0 = new String[5][3];
      String[] stringArray1 = new String[3];
      stringArray0[0] = stringArray1;
      stringArray1[0] = "1Cdu,Q\"HJXix";
      stringArray0[2] = stringArray1;
      String[] stringArray2 = new String[3];
      stringArray2[0] = "A\"!G%";
      stringArray0[4] = stringArray2;
      String string0 = CharMapper.lookupMapping(stringArray0, 65);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[][] stringArray0 = new String[5][3];
      String[] stringArray1 = new String[3];
      stringArray0[0] = stringArray1;
      stringArray1[0] = "1Cdu,Q\"HJXix";
      stringArray0[2] = stringArray1;
      stringArray0[3] = stringArray1;
      String[] stringArray2 = new String[3];
      stringArray2[0] = "A\"!G%";
      stringArray0[4] = stringArray2;
      String string0 = CharMapper.lookupMapping(stringArray0, 59);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[][] stringArray0 = new String[5][3];
      String[] stringArray1 = new String[3];
      stringArray0[0] = stringArray1;
      stringArray1[0] = "1Cdu,Q\"HJXix";
      String[] stringArray2 = new String[3];
      stringArray2[0] = "A\"!G%";
      stringArray0[4] = stringArray2;
      // Undeclared exception!
      try { 
        CharMapper.lookupMapping(stringArray0, 65);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.pwall.util.CharMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[][] stringArray0 = new String[1][1];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "8_W";
      stringArray0[0] = stringArray1;
      String string0 = CharMapper.lookupMapping(stringArray0, 93);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "rX/)j";
      stringArray0[0] = stringArray1;
      String string0 = CharMapper.lookupMapping(stringArray0, (-4319));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[][] stringArray0 = new String[0][5];
      String string0 = CharMapper.lookupMapping(stringArray0, 1000000);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = CharMapper.arrayMapping(stringArray0, 628, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = CharMapper.arrayMapping(stringArray0, 7, 1834);
      assertNull(string0);
  }
}
