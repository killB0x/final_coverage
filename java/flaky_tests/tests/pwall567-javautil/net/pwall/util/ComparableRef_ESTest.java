/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:06:14 GMT 2022
 */

package net.pwall.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.nio.CharBuffer;
import net.pwall.util.ComparableRef;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComparableRef_ESTest extends ComparableRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      int int0 = ComparableRef.compare(integer0, integer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-517));
      int int0 = ComparableRef.compare((Integer) null, integer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ComparableRef.compare(charBuffer0, charBuffer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparable0).compareTo(any());
      ComparableRef<Comparable<Object>> comparableRef0 = new ComparableRef<Comparable<Object>>(comparable0);
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      ComparableRef<Comparable<Object>> comparableRef1 = new ComparableRef<Comparable<Object>>(comparable1);
      int int0 = comparableRef0.compareTo(comparableRef1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-1200));
      ComparableRef<Integer> comparableRef0 = new ComparableRef<Integer>(integer0);
      ComparableRef<Integer> comparableRef1 = new ComparableRef<Integer>((Integer) null);
      int int0 = comparableRef1.compareTo(comparableRef0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer(0);
      int int0 = ComparableRef.compare(integer0, (Integer) null);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ComparableRef<CharBuffer> comparableRef0 = new ComparableRef<CharBuffer>(charBuffer0);
      int int0 = comparableRef0.compareTo((ComparableRef<CharBuffer>) null);
      assertEquals(1, int0);
  }
}
