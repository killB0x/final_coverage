/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 16:08:53 GMT 2022
 */

package net.pwall.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.nio.CharBuffer;
import net.pwall.util.ComparablePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComparablePair_ESTest extends ComparablePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ComparablePair<CharBuffer, CharBuffer> comparablePair0 = new ComparablePair<CharBuffer, CharBuffer>(charBuffer0, charBuffer0);
      ComparablePair<CharBuffer, CharBuffer> comparablePair1 = ComparablePair.create(charBuffer0, charBuffer0);
      int int0 = comparablePair0.compareTo(comparablePair1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'z';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ComparablePair<CharBuffer, CharBuffer> comparablePair0 = new ComparablePair<CharBuffer, CharBuffer>(charBuffer0, charBuffer0);
      CharBuffer charBuffer1 = CharBuffer.allocate(4775);
      ComparablePair<CharBuffer, CharBuffer> comparablePair1 = ComparablePair.create(charBuffer1, charBuffer0);
      int int0 = comparablePair1.compareTo(comparablePair0);
      assertEquals((-122), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-1575));
      ComparablePair<Integer, Integer> comparablePair0 = ComparablePair.create((Integer) null, integer0);
      ComparablePair<Integer, Integer> comparablePair1 = ComparablePair.create(integer0, (Integer) null);
      int int0 = comparablePair1.compareTo(comparablePair0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ComparablePair<Comparable<Object>, Comparable<Object>> comparablePair0 = new ComparablePair<Comparable<Object>, Comparable<Object>>((Comparable<Object>) null, (Comparable<Object>) null);
      int int0 = comparablePair0.compareTo((ComparablePair<Comparable<Object>, Comparable<Object>>) null);
      assertEquals(1, int0);
  }
}
