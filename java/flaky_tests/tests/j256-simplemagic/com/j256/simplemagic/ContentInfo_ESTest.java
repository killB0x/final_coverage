/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 11:58:28 GMT 2022
 */

package com.j256.simplemagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.ContentInfo;
import com.j256.simplemagic.ContentType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ContentInfo_ESTest extends ContentInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", "", "", true);
      boolean boolean0 = contentInfo0.isPartial();
      assertEquals("", contentInfo0.getName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo((String) null, (String) null, (String) null, false);
      String string0 = contentInfo0.getName();
      assertFalse(contentInfo0.isPartial());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContentType contentType0 = ContentType.ADOBE_FXP;
      ContentInfo contentInfo0 = new ContentInfo(contentType0);
      contentInfo0.getName();
      assertFalse(contentInfo0.isPartial());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", (String) null, "com.j256.simplemagic.ContentInfo", true);
      String string0 = contentInfo0.getMimeType();
      assertNull(string0);
      assertEquals("com.j256.simplemagic.ContentInfo", contentInfo0.getMessage());
      assertTrue(contentInfo0.isPartial());
      assertEquals("", contentInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo(".=WxVx>Jn(F$=", "Gdr6I,C*e{@T@GPej;", "6e", false);
      String string0 = contentInfo0.getMimeType();
      assertEquals(".=WxVx>Jn(F$=", contentInfo0.getName());
      assertEquals("Gdr6I,C*e{@T@GPej;", string0);
      assertFalse(contentInfo0.isPartial());
      assertEquals("6e", contentInfo0.getMessage());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("com.j256.simplemagic.ContentInfo", (String) null, (String) null, false);
      String string0 = contentInfo0.getMessage();
      assertNull(string0);
      assertEquals("com.j256.simplemagic.ContentInfo", contentInfo0.getName());
      assertFalse(contentInfo0.isPartial());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo(".=WxVx>Jn(F$=", "Gdr6I,C*e{@T@GPej;", "6e", false);
      String string0 = contentInfo0.getMessage();
      assertFalse(contentInfo0.isPartial());
      assertEquals("6e", string0);
      assertEquals("Gdr6I,C*e{@T@GPej;", contentInfo0.getMimeType());
      assertEquals(".=WxVx>Jn(F$=", contentInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContentInfo contentInfo0 = ContentInfo.EMPTY_INFO;
      String[] stringArray0 = contentInfo0.getFileExtensions();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContentInfo contentInfo0 = null;
      try {
        contentInfo0 = new ContentInfo((ContentType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.ContentInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", (String) null, "com.j256.simplemagic.ContentInfo", true);
      String string0 = contentInfo0.toString();
      assertEquals(", type OTHER, msg 'com.j256.simplemagic.ContentInfo'", string0);
      assertTrue(contentInfo0.isPartial());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", "", "", true);
      String string0 = contentInfo0.EMPTY_INFO.toString();
      assertEquals("other, type EMPTY, mime 'application/octet-stream'", string0);
      assertTrue(contentInfo0.isPartial());
      assertEquals("", contentInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", "image/vnd.adobe.photoshop", "WOFF", true);
      assertEquals("photoshop", contentInfo0.getName());
      assertTrue(contentInfo0.isPartial());
      assertEquals("image/vnd.adobe.photoshop", contentInfo0.getMimeType());
      assertEquals("WOFF", contentInfo0.getMessage());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", "", "", true);
      contentInfo0.getMimeType();
      assertTrue(contentInfo0.isPartial());
      assertEquals("", contentInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", "", "", true);
      contentInfo0.getMessage();
      assertTrue(contentInfo0.isPartial());
      assertEquals("", contentInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", (String) null, "com.j256.simplemagic.ContentInfo", true);
      String string0 = contentInfo0.getName();
      assertEquals("com.j256.simplemagic.ContentInfo", contentInfo0.getMessage());
      assertEquals("", string0);
      assertTrue(contentInfo0.isPartial());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("", (String) null, "com.j256.simplemagic.ContentInfo", true);
      contentInfo0.getFileExtensions();
      assertEquals("com.j256.simplemagic.ContentInfo", contentInfo0.getMessage());
      assertEquals("", contentInfo0.getName());
      assertTrue(contentInfo0.isPartial());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo("com.j256.simplemagic.ContentInfo", (String) null, (String) null, false);
      contentInfo0.getContentType();
      assertEquals("com.j256.simplemagic.ContentInfo", contentInfo0.getName());
      assertFalse(contentInfo0.isPartial());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContentType contentType0 = ContentType.ADOBE_FXP;
      ContentInfo contentInfo0 = new ContentInfo(contentType0);
      contentInfo0.getFileExtensions();
      assertFalse(contentInfo0.isPartial());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContentInfo contentInfo0 = ContentInfo.EMPTY_INFO;
      boolean boolean0 = contentInfo0.isPartial();
      assertFalse(boolean0);
  }
}
