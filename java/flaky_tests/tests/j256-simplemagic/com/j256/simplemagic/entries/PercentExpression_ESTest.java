/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 11:22:51 GMT 2022
 */

package com.j256.simplemagic.entries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.entries.PercentExpression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PercentExpression_ESTest extends PercentExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PercentExpression percentExpression0 = new PercentExpression("");
      String string0 = percentExpression0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PercentExpression percentExpression0 = new PercentExpression("");
      // Undeclared exception!
      try { 
        percentExpression0.append("", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.entries.PercentExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PercentExpression percentExpression0 = null;
      try {
        percentExpression0 = new PercentExpression((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PercentExpression percentExpression0 = new PercentExpression("E");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "E");
      percentExpression0.append(stringBuilder0, stringBuilder0);
      assertEquals("EE", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PercentExpression percentExpression0 = null;
      try {
        percentExpression0 = new PercentExpression("%%");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PercentExpression percentExpression0 = new PercentExpression("                                                                      ");
      String string0 = percentExpression0.toString();
      assertEquals("                                                                      ", string0);
  }
}
