/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 11:59:27 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.entries.MagicMatcher;
import com.j256.simplemagic.types.BigEndianString16Type;
import com.j256.simplemagic.types.StringOperator;
import com.j256.simplemagic.types.StringType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BigEndianString16Type_ESTest extends BigEndianString16Type_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-48);
      Object object0 = bigEndianString16Type0.extractValueFromBytes(0, byteArray0, true);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-82);
      Object object0 = bigEndianString16Type0.extractValueFromBytes(0, byteArray0, false);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      byte[] byteArray0 = new byte[3];
      Object object0 = bigEndianString16Type0.extractValueFromBytes(2, byteArray0, true);
      Object object1 = bigEndianString16Type0.convertTestString("com.j256.simplemagic.types.BigEndianString16Type", "com.j256.simplemagic.types.BigEndianString16Type");
      Long long0 = new Long(2);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(70);
      Object object2 = bigEndianString16Type0.isMatch(object1, long0, true, object0, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      char char0 = bigEndianString16Type0.bytesToChar((-1746), (-1746));
      assertEquals('\u272E', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      char char0 = bigEndianString16Type0.bytesToChar(0, 3559);
      assertEquals('\u0DE7', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      char char0 = bigEndianString16Type0.bytesToChar((byte) (-43), 0);
      assertEquals('\uD500', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      byte[] byteArray0 = new byte[1];
      Object object0 = bigEndianString16Type0.extractValueFromBytes(1, byteArray0, true);
      Long long0 = new Long(1);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1);
      // Undeclared exception!
      try { 
        bigEndianString16Type0.isMatch((Object) null, long0, true, object0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.StringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "", true, true, true, 8);
      byte[] byteArray0 = new byte[8];
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((byte)4);
      Long long0 = new Long((byte)1);
      // Undeclared exception!
      try { 
        bigEndianString16Type0.isMatch("", long0, false, stringType_TestInfo0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.j256.simplemagic.types.StringType$TestInfo cannot be cast to class [C (com.j256.simplemagic.types.StringType$TestInfo is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @20edc5aa; [C is in module java.base of loader 'bootstrap')
         //
         verifyException("com.j256.simplemagic.types.BigEndianString16Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      Object object0 = bigEndianString16Type0.extractValueFromBytes(1, byteArray0, true);
      Object object1 = bigEndianString16Type0.convertTestString("", "");
      Long long0 = new Long(1);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1);
      // Undeclared exception!
      try { 
        bigEndianString16Type0.isMatch(object1, long0, false, object0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      // Undeclared exception!
      try { 
        bigEndianString16Type0.extractValueFromBytes(2, (byte[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.BigEndianString16Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bigEndianString16Type0.extractValueFromBytes(2563, byteArray0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.j256.simplemagic.types.BigEndianString16Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)65;
      Object object0 = bigEndianString16Type0.extractValueFromBytes(0, byteArray0, true);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "", true, true, true, 8);
      byte[] byteArray0 = new byte[8];
      Object object0 = bigEndianString16Type0.extractValueFromBytes(8, byteArray0, false);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((byte)4);
      Object object1 = bigEndianString16Type0.isMatch(stringType_TestInfo0, (Long) null, false, object0, magicMatcher_MutableOffset0, byteArray0);
      assertEquals(4, magicMatcher_MutableOffset0.offset);
      assertNotNull(object1);
      assertEquals("4", magicMatcher_MutableOffset0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigEndianString16Type bigEndianString16Type0 = new BigEndianString16Type();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)65;
      Object object0 = bigEndianString16Type0.extractValueFromBytes(0, byteArray0, true);
      assertNotNull(object0);
  }
}
