/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 12:00:41 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.entries.MagicMatcher;
import com.j256.simplemagic.types.SearchType;
import com.j256.simplemagic.types.StringOperator;
import com.j256.simplemagic.types.StringType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SearchType_ESTest extends SearchType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SearchType searchType0 = new SearchType();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "E;#5BgZVAM", true, true, false, 2026);
      Long long0 = new Long(2026);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(2026);
      byte[] byteArray0 = new byte[0];
      Object object0 = searchType0.isMatch(stringType_TestInfo0, long0, true, long0, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SearchType searchType0 = new SearchType();
      StringOperator stringOperator0 = StringOperator.NOT_EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "com.j256.simplemagic.types.SearchType", true, true, true, 0);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        searchType0.isMatch((Object) null, (Long) null, true, stringType_TestInfo0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.SearchType", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SearchType searchType0 = new SearchType();
      Long long0 = new Long(9);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(9);
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        searchType0.isMatch(long0, long0, true, long0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Long cannot be cast to class com.j256.simplemagic.types.StringType$TestInfo (java.lang.Long is in module java.base of loader 'bootstrap'; com.j256.simplemagic.types.StringType$TestInfo is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @21955f12)
         //
         verifyException("com.j256.simplemagic.types.SearchType", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SearchType searchType0 = new SearchType();
      Long long0 = new Long(1717L);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((-1));
      byte[] byteArray0 = new byte[6];
      Object object0 = searchType0.convertTestString("iz", "8d*;HT4rI3");
      Object object1 = searchType0.isMatch(object0, long0, true, object0, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SearchType searchType0 = new SearchType();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "", false, true, true, 680);
      Long long0 = new Long(944L);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[8];
      Object object0 = searchType0.isMatch(stringType_TestInfo0, long0, true, long0, magicMatcher_MutableOffset0, byteArray0);
      assertEquals(0, magicMatcher_MutableOffset0.offset);
      assertNotNull(object0);
      assertEquals("0", magicMatcher_MutableOffset0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SearchType searchType0 = new SearchType();
      Object object0 = searchType0.convertTestString("", "");
      Long long0 = new Long(1717L);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((-1));
      byte[] byteArray0 = new byte[6];
      Object object1 = searchType0.isMatch(object0, long0, true, object0, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object1);
      assertEquals("-1", magicMatcher_MutableOffset0.toString());
  }
}
