/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 11:30:18 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.entries.MagicFormatter;
import com.j256.simplemagic.entries.MagicMatcher;
import com.j256.simplemagic.types.StringOperator;
import com.j256.simplemagic.types.StringType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringType_ESTest extends StringType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringOperator stringOperator0 = StringOperator.EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "1f=7", false, true, true, 0);
      byte[] byteArray0 = stringType_TestInfo0.getStartingBytes();
      assertArrayEquals(new byte[] {(byte)49, (byte)102, (byte)61, (byte)55}, byteArray0);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "84+\"ANBX6;g>Mz|y(", false, true, true, 79);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[4];
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 79, magicMatcher_MutableOffset0, byteArray0, charArray0, 1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, (String) null, false, true, false, (-161));
      String string0 = stringType_TestInfo0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringBuilder stringBuilder0 = new StringBuilder(2656);
      Object object0 = new Object();
      MagicFormatter magicFormatter0 = new MagicFormatter("com.j256.simplemagic.types.StringType");
      stringType0.renderValue(stringBuilder0, object0, magicFormatter0);
      assertEquals("com.j256.simplemagic.types.StringType", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.LESS_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "", false, false, false, (-119));
      Long long0 = new Long((-2941L));
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((-806));
      byte[] byteArray0 = new byte[2];
      Object object0 = stringType0.isMatch(stringType_TestInfo0, long0, false, "", magicMatcher_MutableOffset0, byteArray0);
      assertNull(object0);
      assertEquals("-806", magicMatcher_MutableOffset0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.NOT_EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "", true, true, true, 2);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((-4907));
      Long long0 = new Long((byte)77);
      Object object0 = new Object();
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[3];
      stringType0.findOffsetMatch(stringType_TestInfo0, (byte)32, magicMatcher_MutableOffset0, byteArray0, charArray0, 61);
      stringType0.isMatch(stringType_TestInfo0, long0, false, object0, magicMatcher_MutableOffset0, byteArray0);
      assertEquals(32, magicMatcher_MutableOffset0.offset);
      assertEquals("32", magicMatcher_MutableOffset0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringType stringType0 = new StringType();
      Object object0 = stringType0.convertTestString("q|/zt", "q|/zt");
      byte[] byteArray0 = stringType0.getStartingBytes(object0);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)113, (byte)124, (byte)47, (byte)122}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringType stringType0 = new StringType();
      Long long0 = new Long((-254L));
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(189);
      // Undeclared exception!
      try { 
        stringType0.isMatch((Object) null, long0, true, (Object) null, magicMatcher_MutableOffset0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.StringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringType stringType0 = new StringType();
      // Undeclared exception!
      try { 
        stringType0.getStartingBytes(stringType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.j256.simplemagic.types.StringType cannot be cast to class com.j256.simplemagic.types.StringType$TestInfo (com.j256.simplemagic.types.StringType and com.j256.simplemagic.types.StringType$TestInfo are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3e2032a6)
         //
         verifyException("com.j256.simplemagic.types.StringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringType stringType0 = new StringType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(62);
      // Undeclared exception!
      try { 
        stringType0.findOffsetMatch((StringType.TestInfo) null, 62, magicMatcher_MutableOffset0, (byte[]) null, (char[]) null, 62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.StringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringType stringType0 = new StringType();
      // Undeclared exception!
      try { 
        stringType0.convertTestString((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringType.TestInfo stringType_TestInfo0 = (StringType.TestInfo)stringType0.convertTestString("", ":");
      byte[] byteArray0 = stringType_TestInfo0.getStartingBytes();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringOperator stringOperator0 = StringOperator.EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, (String) null, false, false, false, 18);
      byte[] byteArray0 = stringType_TestInfo0.getStartingBytes();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringType stringType0 = new StringType();
      Object object0 = stringType0.convertTestString("", (String) null);
      byte[] byteArray0 = stringType0.getStartingBytes(object0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "\u0000", true, true, true, (byte)10);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((byte)10);
      byte[] byteArray0 = new byte[12];
      char[] charArray0 = new char[1];
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 0, magicMatcher_MutableOffset0, byteArray0, charArray0, (byte)10);
      assertEquals(1, magicMatcher_MutableOffset0.offset);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringType.TestInfo stringType_TestInfo0 = (StringType.TestInfo)stringType0.convertTestString("", "");
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1597);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        stringType0.findOffsetMatch(stringType_TestInfo0, 1597, magicMatcher_MutableOffset0, (byte[]) null, charArray0, 1597);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1048);
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "sCyM?IfqMA'LWnq", false, true, true, 103);
      char[] charArray0 = new char[4];
      charArray0[3] = 'S';
      // Undeclared exception!
      try { 
        stringType0.findOffsetMatch(stringType_TestInfo0, 3, magicMatcher_MutableOffset0, (byte[]) null, charArray0, 1317);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("com.j256.simplemagic.types.StringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1048);
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "sCyM?IfqMA'LWnq", false, true, true, 103);
      char[] charArray0 = new char[4];
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 3, magicMatcher_MutableOffset0, (byte[]) null, charArray0, 1317);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "];6pxlrUcC7|51#LG-y", false, true, false, 344);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((-2038));
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-85);
      char[] charArray0 = new char[9];
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 1, magicMatcher_MutableOffset0, byteArray0, charArray0, (byte)10);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "];6pxlrUcCTC7|1#LG-y", true, true, true, (byte)10);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((byte)10);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      char[] charArray0 = new char[3];
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 0, magicMatcher_MutableOffset0, byteArray0, charArray0, 1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "];6pxlrUcC7|51#LG-y", true, true, true, (byte)10);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)126;
      char[] charArray0 = new char[6];
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 0, magicMatcher_MutableOffset0, byteArray0, charArray0, 71);
      assertNull(string0);
      assertEquals("0", magicMatcher_MutableOffset0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringType.TestInfo stringType_TestInfo0 = (StringType.TestInfo)stringType0.convertTestString("", ":");
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1561);
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 1561, magicMatcher_MutableOffset0, (byte[]) null, (char[]) null, 1561);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringType.TestInfo stringType_TestInfo0 = (StringType.TestInfo)stringType0.convertTestString("", "j");
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1590);
      char[] charArray0 = new char[7];
      String string0 = stringType0.findOffsetMatch(stringType_TestInfo0, 3, magicMatcher_MutableOffset0, (byte[]) null, charArray0, 1590);
      assertNull(string0);
      assertEquals("1590", magicMatcher_MutableOffset0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringType stringType0 = new StringType();
      byte[] byteArray0 = stringType0.getStartingBytes((Object) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringType stringType0 = new StringType();
      // Undeclared exception!
      try { 
        stringType0.convertTestString("-Tmm@mptxQ", "[^/]+(/d+)?(/[BbcwWt]*)?");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringType stringType0 = new StringType();
      MagicFormatter magicFormatter0 = new MagicFormatter("d");
      // Undeclared exception!
      try { 
        stringType0.renderValue((StringBuilder) null, (Object) null, magicFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.entries.MagicFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringType stringType0 = new StringType();
      StringOperator stringOperator0 = StringOperator.NOT_EQUALS;
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((-4037));
      Long long0 = new Long((byte)35);
      // Undeclared exception!
      try { 
        stringType0.isMatch(stringOperator0, long0, false, stringOperator0, magicMatcher_MutableOffset0, (byte[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.j256.simplemagic.types.StringOperator$2 cannot be cast to class com.j256.simplemagic.types.StringType$TestInfo (com.j256.simplemagic.types.StringOperator$2 and com.j256.simplemagic.types.StringType$TestInfo are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3e2032a6)
         //
         verifyException("com.j256.simplemagic.types.StringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringType stringType0 = new StringType();
      byte[] byteArray0 = new byte[5];
      Object object0 = stringType0.extractValueFromBytes(48, byteArray0, true);
      assertEquals("", object0);
  }
}
