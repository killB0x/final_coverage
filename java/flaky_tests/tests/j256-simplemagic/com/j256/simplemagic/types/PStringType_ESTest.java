/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 11:56:18 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.entries.MagicMatcher;
import com.j256.simplemagic.types.PStringType;
import com.j256.simplemagic.types.StringOperator;
import com.j256.simplemagic.types.StringType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PStringType_ESTest extends PStringType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      StringOperator stringOperator0 = StringOperator.EQUALS;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "###0", false, false, false, 2631);
      Long long0 = new Long(0L);
      byte[] byteArray0 = new byte[9];
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((byte)0);
      Object object0 = pStringType0.isMatch(stringType_TestInfo0, long0, false, "", magicMatcher_MutableOffset0, byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1822);
      byte[] byteArray0 = new byte[8];
      Object object0 = pStringType0.isMatch((Object) null, (Long) null, true, (Object) null, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[1];
      Object object0 = pStringType0.extractValueFromBytes((byte)0, byteArray0, true);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[7];
      Object object0 = pStringType0.extractValueFromBytes(3, byteArray0, true);
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[7];
      Object object0 = pStringType0.extractValueFromBytes(37, byteArray0, true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      StringOperator stringOperator0 = StringOperator.LESS_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, "", true, true, false, 3582);
      Long long0 = new Long(1796L);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[7];
      pStringType0.isMatch(stringType_TestInfo0, long0, false, stringType_TestInfo0, magicMatcher_MutableOffset0, byteArray0);
      assertEquals(1, magicMatcher_MutableOffset0.offset);
      assertEquals("1", magicMatcher_MutableOffset0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      Long long0 = new Long(0);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        pStringType0.isMatch(long0, long0, false, long0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Long cannot be cast to class com.j256.simplemagic.types.StringType$TestInfo (java.lang.Long is in module java.base of loader 'bootstrap'; com.j256.simplemagic.types.StringType$TestInfo is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1c0ea7cd)
         //
         verifyException("com.j256.simplemagic.types.PStringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      // Undeclared exception!
      try { 
        pStringType0.extractValueFromBytes(0, (byte[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.PStringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        pStringType0.extractValueFromBytes((-8), byteArray0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -8 out of bounds for length 3
         //
         verifyException("com.j256.simplemagic.types.PStringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(1822);
      byte[] byteArray0 = new byte[8];
      magicMatcher_MutableOffset0.offset = 37;
      byteArray0[0] = (byte)17;
      magicMatcher_MutableOffset0.offset = (int) (byte)0;
      // Undeclared exception!
      try { 
        pStringType0.isMatch((Object) null, (Long) null, false, (Object) null, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.StringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      StringOperator stringOperator0 = StringOperator.GREATER_THAN;
      StringType.TestInfo stringType_TestInfo0 = new StringType.TestInfo(stringOperator0, ".W8nJ7r", false, true, true, 0);
      Long long0 = new Long(0);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[1];
      Object object0 = pStringType0.isMatch(stringType_TestInfo0, long0, false, stringType_TestInfo0, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[4];
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(4);
      Object object0 = pStringType0.isMatch((Object) null, (Long) null, true, (Object) null, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      Object object0 = pStringType0.convertTestString("]1a", "com.j256.simplemagic.types.PStringType");
      Long long0 = new Long(0L);
      byte[] byteArray0 = new byte[4];
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(465);
      magicMatcher_MutableOffset0.offset = (-1253);
      // Undeclared exception!
      try { 
        pStringType0.isMatch(object0, long0, true, object0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1253 out of bounds for length 4
         //
         verifyException("com.j256.simplemagic.types.PStringType", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)61;
      Object object0 = pStringType0.extractValueFromBytes(0, byteArray0, true);
      assertNotNull(object0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[4];
      Object object0 = pStringType0.extractValueFromBytes(4, byteArray0, true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PStringType pStringType0 = new PStringType();
      byte[] byteArray0 = new byte[3];
      Object object0 = pStringType0.extractValueFromBytes(5498, byteArray0, false);
      assertEquals("", object0);
  }
}
