/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 12:08:10 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.types.ByteType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteType_ESTest extends ByteType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      Long long0 = new Long(1L);
      Long long1 = new Long(1600L);
      int int0 = byteType0.compare(true, long0, long1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      long long0 = byteType0.maskValue(1L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      // Undeclared exception!
      try { 
        byteType0.compare(false, (Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.ByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      Integer integer0 = new Integer((-1875));
      int int0 = byteType0.compare(false, integer0, integer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      Integer integer0 = new Integer((-1875));
      int int0 = byteType0.compare(false, 0, integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      Long long0 = new Long((-2043L));
      int int0 = byteType0.compare(false, 1, long0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      long long0 = byteType0.maskValue(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      int int0 = byteType0.getBytesPerType();
      assertEquals(1, int0);
  }
}
