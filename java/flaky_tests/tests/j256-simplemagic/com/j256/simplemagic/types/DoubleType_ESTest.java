/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 12:07:17 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.endian.EndianType;
import com.j256.simplemagic.types.DoubleType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleType_ESTest extends DoubleType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      Long long0 = new Long((-605L));
      Double double0 = (Double)doubleType0.longToObject(long0);
      int int0 = doubleType0.compare(false, double0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EndianType endianType0 = EndianType.MIDDLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      long long0 = doubleType0.maskValue(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EndianType endianType0 = EndianType.MIDDLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      long long0 = doubleType0.maskValue((byte) (-5));
      assertEquals((-5L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      // Undeclared exception!
      try { 
        doubleType0.longToObject((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.DoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EndianType endianType0 = EndianType.MIDDLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      // Undeclared exception!
      try { 
        doubleType0.extractValueFromBytes(491, (byte[]) null, true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Middle-endian only supports 4-byte integers
         //
         verifyException("com.j256.simplemagic.endian.MiddleEndianConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EndianType endianType0 = EndianType.NATIVE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      // Undeclared exception!
      try { 
        doubleType0.extractValueFromBytes(3080, (byte[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.endian.LittleEndianConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      DoubleType doubleType0 = new DoubleType(endianType0);
      try { 
        doubleType0.decodeValueString("=:2[M0:k]e_Umh4");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      DoubleType doubleType0 = new DoubleType(endianType0);
      // Undeclared exception!
      try { 
        doubleType0.decodeValueString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      // Undeclared exception!
      try { 
        doubleType0.compare(true, (Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.DoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DoubleType doubleType0 = null;
      try {
        doubleType0 = new DoubleType((EndianType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.NumberType", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      DoubleType doubleType0 = new DoubleType(endianType0);
      int int0 = doubleType0.getBytesPerType();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      Long long0 = new Long((-2104L));
      int int0 = doubleType0.compare(true, long0, long0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      DoubleType doubleType0 = new DoubleType(endianType0);
      int int0 = doubleType0.compare(false, (byte)127, (byte)0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      DoubleType doubleType0 = new DoubleType(endianType0);
      int int0 = doubleType0.compare(false, (byte)0, (byte)127);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      DoubleType doubleType0 = new DoubleType(endianType0);
      byte[] byteArray0 = new byte[9];
      doubleType0.extractValueFromBytes(647, byteArray0, false);
      assertEquals(8, doubleType0.getBytesPerType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      Number number0 = doubleType0.decodeValueString("0E0");
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      long long0 = doubleType0.maskValue(523L);
      assertEquals(523L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      DoubleType doubleType0 = new DoubleType(endianType0);
      byte[] byteArray0 = doubleType0.getStartingBytes(endianType0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      DoubleType doubleType0 = new DoubleType(endianType0);
      byte[] byteArray0 = new byte[9];
      Object object0 = doubleType0.extractValueFromBytes(1, byteArray0, false);
      assertEquals(8, doubleType0.getBytesPerType());
      assertNotNull(object0);
  }
}
