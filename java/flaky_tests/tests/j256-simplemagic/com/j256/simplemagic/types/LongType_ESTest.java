/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 12:13:26 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.endian.EndianType;
import com.j256.simplemagic.types.LongType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LongType_ESTest extends LongType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      LongType longType0 = new LongType(endianType0);
      long long0 = longType0.maskValue(8);
      assertEquals(8L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      LongType longType0 = new LongType(endianType0);
      long long0 = longType0.maskValue((-3772L));
      assertEquals((-3772L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      LongType longType0 = new LongType(endianType0);
      int int0 = longType0.getBytesPerType();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EndianType endianType0 = EndianType.NATIVE;
      LongType longType0 = new LongType(endianType0);
      int int0 = longType0.compare(false, (byte)81, (byte)6);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      LongType longType0 = new LongType(endianType0);
      Integer integer0 = new Integer((-2145465335));
      int int0 = longType0.compare(true, integer0, (byte)102);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongType.staticCompare((Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.LongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      LongType longType0 = new LongType(endianType0);
      // Undeclared exception!
      try { 
        longType0.compare(true, (Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.LongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongType longType0 = null;
      try {
        longType0 = new LongType((EndianType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.NumberType", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1071);
      int int0 = LongType.staticCompare(integer0, integer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1071);
      int int0 = LongType.staticCompare((byte)102, integer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = LongType.staticCompare((byte)71, (byte)0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(1549);
      EndianType endianType0 = EndianType.MIDDLE;
      LongType longType0 = new LongType(endianType0);
      int int0 = longType0.compare(false, integer0, integer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EndianType endianType0 = EndianType.NATIVE;
      LongType longType0 = new LongType(endianType0);
      long long0 = longType0.maskValue(0L);
      assertEquals(0L, long0);
  }
}
