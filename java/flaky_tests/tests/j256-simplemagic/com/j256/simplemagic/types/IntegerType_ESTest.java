/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 12:05:32 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.endian.EndianType;
import com.j256.simplemagic.types.IntegerType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntegerType_ESTest extends IntegerType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EndianType endianType0 = EndianType.NATIVE;
      IntegerType integerType0 = new IntegerType(endianType0);
      Double double0 = Double.valueOf(0.0);
      int int0 = integerType0.compare(true, 4L, double0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EndianType endianType0 = EndianType.BIG;
      IntegerType integerType0 = new IntegerType(endianType0);
      long long0 = integerType0.maskValue(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntegerType integerType0 = null;
      try {
        integerType0 = new IntegerType((EndianType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.NumberType", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EndianType endianType0 = EndianType.NATIVE;
      IntegerType integerType0 = new IntegerType(endianType0);
      int int0 = integerType0.compare(false, (byte)0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EndianType endianType0 = EndianType.MIDDLE;
      IntegerType integerType0 = new IntegerType(endianType0);
      Short short0 = Short.valueOf((short) (-2463));
      int int0 = integerType0.compare(false, 4, short0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      IntegerType integerType0 = new IntegerType(endianType0);
      // Undeclared exception!
      try { 
        integerType0.compare(true, (Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.LongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      IntegerType integerType0 = new IntegerType(endianType0);
      Short short0 = Short.valueOf((short)185);
      int int0 = integerType0.compare(false, 4, short0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EndianType endianType0 = EndianType.MIDDLE;
      IntegerType integerType0 = new IntegerType(endianType0);
      long long0 = integerType0.maskValue((byte)1);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EndianType endianType0 = EndianType.LITTLE;
      IntegerType integerType0 = new IntegerType(endianType0);
      int int0 = integerType0.getBytesPerType();
      assertEquals(4, int0);
  }
}
