/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 11:50:27 GMT 2022
 */

package com.j256.simplemagic.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplemagic.entries.MagicFormatter;
import com.j256.simplemagic.entries.MagicMatcher;
import com.j256.simplemagic.types.RegexType;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RegexType_ESTest extends RegexType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(102);
      Long long0 = new Long((-2850L));
      Object object0 = new Object();
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)13;
      Object object1 = regexType0.isMatch(object0, long0, true, magicMatcher_MutableOffset0, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      // Undeclared exception!
      try { 
        regexType0.renderValue((StringBuilder) null, (Object) null, (MagicFormatter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplemagic.types.RegexType", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(99);
      Long long0 = new Long(99);
      // Undeclared exception!
      try { 
        regexType0.isMatch(magicMatcher_MutableOffset0, long0, true, long0, magicMatcher_MutableOffset0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      byte[] byteArray0 = new byte[5];
      Long long0 = new Long(0);
      // Undeclared exception!
      try { 
        regexType0.isMatch(magicMatcher_MutableOffset0, long0, false, long0, magicMatcher_MutableOffset0, byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.j256.simplemagic.entries.MagicMatcher$MutableOffset cannot be cast to class com.j256.simplemagic.types.RegexType$PatternInfo (com.j256.simplemagic.entries.MagicMatcher$MutableOffset and com.j256.simplemagic.types.RegexType$PatternInfo are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @31c5b203)
         //
         verifyException("com.j256.simplemagic.types.RegexType", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      // Undeclared exception!
      try { 
        regexType0.convertTestString("#t?x{,j/H", "#t?x{,j/H");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 6
         // .*(#t?x{,j/H).*
         //       ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      // Undeclared exception!
      try { 
        regexType0.convertTestString((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      Object object0 = regexType0.convertTestString("/", "/");
      byte[] byteArray0 = new byte[4];
      Object object1 = regexType0.isMatch(object0, (Long) null, false, (Object) null, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      byte[] byteArray0 = new byte[0];
      Long long0 = new Long(0L);
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset((-258));
      Object object0 = regexType0.isMatch("", long0, true, long0, magicMatcher_MutableOffset0, byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      MagicMatcher.MutableOffset magicMatcher_MutableOffset0 = new MagicMatcher.MutableOffset(0);
      Object object0 = regexType0.convertTestString("", "");
      byte[] byteArray0 = new byte[20];
      // Undeclared exception!
      try { 
        regexType0.isMatch(object0, (Long) null, false, (Object) null, magicMatcher_MutableOffset0, byteArray0);
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match available
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      // Undeclared exception!
      try { 
        regexType0.convertTestString("$l+.damP", "$l+.damP");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      Object object0 = regexType0.convertTestString("", "@lo");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      Object object0 = regexType0.extractValueFromBytes(2757, (byte[]) null, false);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      byte[] byteArray0 = regexType0.getStartingBytes("");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegexType regexType0 = new RegexType();
      StringBuilder stringBuilder0 = new StringBuilder();
      MagicFormatter magicFormatter0 = new MagicFormatter("@lo");
      regexType0.renderValue(stringBuilder0, (Object) null, magicFormatter0);
      assertEquals("@lo", stringBuilder0.toString());
  }
}
