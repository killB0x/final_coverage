/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:30:31 GMT 2022
 */

package org.opengis.cite.sensorml20.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.opengis.cite.sensorml20.util.DocumentTools;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DocumentTools_ESTest extends DocumentTools_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("6A");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode1.replaceChild(iIOMetadataNode0, iIOMetadataNode0);
      Node node1 = iIOMetadataNode0.appendChild(node0);
      String string0 = "";
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName(node1, string0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("sml:SimpleProcess");
      String string0 = DocumentTools.GetMasterParentNodeName(iIOMetadataNode0);
      assertEquals("sml:SimpleProcess", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("4");
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode1);
      DocumentTools.getAllNode(node0);
      DocumentTools.getAllNode(iIOMetadataNode0);
      DocumentTools.GetMasterParentNodeName(node0);
      iIOMetadataNode1.getOwnerDocument();
      URI uRI0 = MockURI.URI("");
      DocumentTools.MergeReference((Document) null, uRI0);
      // Undeclared exception!
      try { 
        DocumentTools.DocumentToString((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode1);
      DocumentTools.getAllNode(node0);
      DocumentTools.getAllNode(iIOMetadataNode0);
      DocumentTools.GetMasterParentNodeName(node0);
      iIOMetadataNode1.getOwnerDocument();
      URI uRI0 = MockURI.aFileURI;
      DocumentTools.MergeReference((Document) null, uRI0);
      // Undeclared exception!
      try { 
        DocumentTools.DocumentToString((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName(iIOMetadataNode0, "{=(1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("{=(1");
      assertTrue(boolean0);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("{=(1");
      iIOMetadataNode0.getNodeType();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("{=(1");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      IIOMetadataNode iIOMetadataNode2 = new IIOMetadataNode();
      ArrayList<Node> arrayList0 = DocumentTools.GetElementByLocalName(iIOMetadataNode0, "{=(1");
      assertEquals(2, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        DocumentTools.GetMasterParentNodeName(node0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DocumentTools.ValidateNewNameSpace("yml");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getNodeType();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("yml");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      IIOMetadataNode iIOMetadataNode2 = new IIOMetadataNode();
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName(iIOMetadataNode0, "yml");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("{=(1");
      assertTrue(boolean0);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("{=(1");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("{=(1");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      ArrayList<Node> arrayList0 = DocumentTools.GetElementByLocalName(iIOMetadataNode0, "{=(1");
      assertEquals(2, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("gml");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode1.removeChild(iIOMetadataNode0);
      Node node1 = iIOMetadataNode0.removeChild(node0);
      DocumentTools.GetElementByLocalName(iIOMetadataNode0, "sml");
      DocumentTools.GetElementByLocalName(node1, (String) null);
      iIOMetadataNode1.getOwnerDocument();
      try { 
        MockURI.URI("zbo7WSzupKF9G=K", "sml:SimpleProcess", "gml", (-2689), (String) null, (String) null, "sml");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 13: zbo7WSzupKF9G=K://sml:SimpleProcess@gml:-2689#sml
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"lm=%pMITieBd$m=3=");
      Node node0 = iIOMetadataNode0.cloneNode(false);
      iIOMetadataNode0.insertBefore(node0, node0);
      // Undeclared exception!
      try { 
        DocumentTools.getAllNode(iIOMetadataNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getOwnerDocument();
      URI uRI0 = MockURI.aFileURI;
      DocumentTools.MergeReference((Document) null, uRI0);
      Node node0 = iIOMetadataNode0.cloneNode(true);
      ArrayList<Node> arrayList0 = DocumentTools.getAllNode(node0);
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "\"lm=%pMITieBd$m=3=";
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"lm=%pMITieBd$m=3=");
      Node node0 = iIOMetadataNode0.cloneNode(true);
      iIOMetadataNode0.insertBefore(node0, node0);
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName(iIOMetadataNode0, "\"lm=%pMITieBd$m=3=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        DocumentTools.getAllNode(iIOMetadataNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("swe");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        DocumentTools.ValidateNewNameSpace((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("gml");
      Node node0 = iIOMetadataNode0.cloneNode(false);
      String string0 = DocumentTools.GetMasterParentNodeName(node0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.opengis.cite.sensorml20.util.TestSuiteLogger");
      ArrayList<Node> arrayList0 = DocumentTools.GetElementByLocalName(iIOMetadataNode0, "S");
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getOwnerDocument();
      String string0 = "][<";
      MockPrintStream mockPrintStream0 = new MockPrintStream("][<");
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "][<";
      mockPrintStream0.format("kjzs(K", objectArray0);
      DocumentTools.ElementToStream(iIOMetadataNode0, mockPrintStream0);
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName((Node) null, "SpH1T#@acM)Cp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("sml");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "sml";
      DocumentTools.ValidateNewNameSpace("sml");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.hasAttribute("sml");
      iIOMetadataNode0.getOwnerDocument();
      // Undeclared exception!
      try { 
        DocumentTools.DocumentToString((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("gml");
      assertFalse(boolean0);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getOwnerDocument();
      // Undeclared exception!
      try { 
        DocumentTools.DocumentToString((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "\"lm=%pMITieBd$m=3=";
      DocumentTools.ValidateNewNameSpace("\"lm=%pMITieBd$m=3=");
      DocumentTools documentTools0 = new DocumentTools();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      String string1 = "T}L[Jr)'\\r{hSV}[";
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("T}L[Jr)'\r{hSV}[");
      Node node0 = iIOMetadataNode1.cloneNode(true);
      iIOMetadataNode1.getAttributeNode("\"lm=%pMITieBd$m=3=");
      Node node1 = iIOMetadataNode0.appendChild(node0);
      DocumentTools.GetMasterParentNodeName(node1);
      iIOMetadataNode0.getOwnerDocument();
      // Undeclared exception!
      try { 
        DocumentTools.MergeDocument((Document) null, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DocumentTools documentTools0 = new DocumentTools();
      MockPrintStream mockPrintStream0 = new MockPrintStream("SpH1T#@acM)Cp");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) documentTools0;
      PrintStream printStream0 = mockPrintStream0.format("SpH1T#@acM)Cp", objectArray0);
      DocumentTools.ElementToStream((Element) null, printStream0);
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName((Node) null, "SpH1T#@acM)Cp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DocumentTools.ElementToStream(iIOMetadataNode0, pipedOutputStream0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        DocumentTools.getAllNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DocumentTools documentTools0 = new DocumentTools();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getOwnerDocument();
      URI uRI0 = MockURI.URI("");
      DocumentTools.MergeReference((Document) null, uRI0);
      iIOMetadataNode0.getAttributeNode("");
      // Undeclared exception!
      try { 
        iIOMetadataNode0.setAttributeNodeNS((Attr) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      DocumentTools.MergeReference((Document) null, uRI0);
      assertNull(uRI0.getRawQuery());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      String string0 = DocumentTools.GetMasterParentNodeName(iIOMetadataNode0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DocumentTools.ValidateNewNameSpace("/Q4yhim$");
      String string0 = "JUpJt@";
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("JUpJt@");
      iIOMetadataNode0.getAttributeNodeNS("/Q4yhim$", "JUpJt@");
      // Undeclared exception!
      try { 
        DocumentTools.GetMasterParentNodeName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("gml");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "SpH1T#@acM)Cp";
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) mockPrintStream0;
      mockPrintStream0.format("gml", objectArray0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("^O*");
      DocumentTools.ElementToStream(iIOMetadataNode0, mockPrintStream0);
      DocumentTools.GetElementByLocalName(iIOMetadataNode0, "sml:PhysicalComponent");
      DocumentTools.ValidateNewNameSpace("4o[1UjA\fA~1lB/Q>");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      iIOMetadataNode0.getOwnerDocument();
      URI uRI0 = MockURI.URI("SpH1T#@acM)Cp", "org.opengis.cite.sensorml20.util.DocumentTools", (String) null, "", (String) null);
      iIOMetadataNode0.getOwnerDocument();
      DocumentTools.MergeReference((Document) null, uRI0);
      // Undeclared exception!
      try { 
        DocumentTools.GetMasterParentNodeName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"lm=%pMITieBd$m=3=");
      ArrayList<Node> arrayList0 = DocumentTools.GetElementByLocalName(iIOMetadataNode0, "\"lm=%pMITieBd$m=3=");
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "";
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DocumentTools.GetElementByLocalName(iIOMetadataNode0, "");
      boolean boolean0 = true;
      String string1 = "ahre/yt$xl}KM$#:*";
      iIOMetadataNode0.getAttributeNodeNS("", "ahre/yt$xl}KM$#:*");
      // Undeclared exception!
      try { 
        iIOMetadataNode0.setAttributeNode((Attr) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        DocumentTools.GetMasterParentNodeName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DocumentTools.ValidateNewNameSpace("yml");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("sml:SimpleProcess");
      String string0 = DocumentTools.GetMasterParentNodeName(iIOMetadataNode0);
      assertEquals("sml:SimpleProcess", string0);
      
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("yml");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("swe");
      assertFalse(boolean0);
      
      Boolean boolean1 = DocumentTools.ValidateNewNameSpace("org.opengis.cite.sensorml20.util.TestSuiteLogger");
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Boolean boolean0 = DocumentTools.ValidateNewNameSpace("^O8*");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DocumentTools.ValidateNewNameSpace("");
      Node node0 = null;
      // Undeclared exception!
      try { 
        DocumentTools.GetMasterParentNodeName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName(iIOMetadataNode0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DocumentTools documentTools0 = new DocumentTools();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      iIOMetadataNode0.getFirstChild();
      // Undeclared exception!
      try { 
        DocumentTools.GetElementByLocalName((Node) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("q^c3JwrD");
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode1, iIOMetadataNode1);
      Node node1 = iIOMetadataNode0.removeChild(node0);
      ArrayList<Node> arrayList0 = DocumentTools.getAllNode(node1);
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      ArrayList<Node> arrayList0 = DocumentTools.getAllNode(iIOMetadataNode0);
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        DocumentTools.DocumentToString((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.hasAttributeNS("", "");
      iIOMetadataNode0.getOwnerDocument();
      // Undeclared exception!
      try { 
        DocumentTools.DocumentToString((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        DocumentTools.MergeDocument((Document) null, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "UeZm~";
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("UeZm~");
      Object object0 = new Object();
      iIOMetadataNode0.setUserObject(object0);
      iIOMetadataNode0.getOwnerDocument();
      // Undeclared exception!
      try { 
        DocumentTools.MergeDocument((Document) null, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.sensorml20.util.DocumentTools", e);
      }
  }
}
