/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 13:55:39 GMT 2022
 */

package com.github.t3t5u.common.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.github.t3t5u.common.http.Delegator;
import com.github.t3t5u.common.http.InputStreamConfiguration;
import com.github.t3t5u.common.http.InputStreamInvoker;
import com.github.t3t5u.common.http.Method;
import java.io.InputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InputStreamInvoker_ESTest extends InputStreamInvoker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamConfiguration inputStreamConfiguration0 = mock(InputStreamConfiguration.class, new ViolatedAssumptionAnswer());
      InputStreamConfiguration inputStreamConfiguration1 = new InputStreamConfiguration(inputStreamConfiguration0);
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "exDlR\"]NmM$UNIqM", "exDlR\"]NmM$UNIqM", (Map<String, List<String>>) null, inputStreamConfiguration1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "(7-}x&5tpE +p5A/Bc", "(7-}x&5tpE +p5A/Bc");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Method method0 = Method.PUT;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "(7-}x&5tpE +p5A/Bc", "(7-}x&5tpE +p5A/Bc", hashMap0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "", (InputStreamConfiguration) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "(7-}x&5tpE +p5A/Bc");
      Delegator<InputStream, InputStreamConfiguration> delegator0 = inputStreamInvoker0.getDelegator();
      assertNotNull(delegator0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "%6h9", "postAsInputStreamOrNull", (InputStreamConfiguration) null);
  }
}
