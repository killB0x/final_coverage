/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 13:45:30 GMT 2022
 */

package com.github.t3t5u.common.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.t3t5u.common.http.InputStreamConfiguration;
import com.github.t3t5u.common.http.InputStreamResult;
import java.io.InputStream;
import java.net.HttpURLConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InputStreamResult_ESTest extends InputStreamResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockIOException mockIOException0 = new MockIOException();
      HttpURLConnection httpURLConnection0 = mock(HttpURLConnection.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(httpURLConnection0).getErrorStream();
      InputStreamResult inputStreamResult0 = null;
      try {
        inputStreamResult0 = new InputStreamResult(httpURLConnection0, (InputStreamConfiguration) null, mockIOException0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ExtraIOUtils
         //
         verifyException("com.github.t3t5u.common.http.InputStreamResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HttpURLConnection httpURLConnection0 = mock(HttpURLConnection.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(httpURLConnection0).getInputStream();
      InputStreamResult inputStreamResult0 = null;
      try {
        inputStreamResult0 = new InputStreamResult(httpURLConnection0, (InputStreamConfiguration) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ExtraIOUtils
         //
         verifyException("com.github.t3t5u.common.http.InputStreamResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockIOException mockIOException0 = new MockIOException();
      InputStreamResult inputStreamResult0 = null;
      try {
        inputStreamResult0 = new InputStreamResult((HttpURLConnection) null, (InputStreamConfiguration) null, mockIOException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.t3t5u.common.http.InputStreamResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InputStreamResult inputStreamResult0 = null;
      try {
        inputStreamResult0 = new InputStreamResult((HttpURLConnection) null, (InputStreamConfiguration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.t3t5u.common.http.AbstractResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockIOException mockIOException0 = new MockIOException();
      InputStreamResult inputStreamResult0 = new InputStreamResult(mockIOException0);
      assertNull(inputStreamResult0.getResponseMessage());
  }
}
