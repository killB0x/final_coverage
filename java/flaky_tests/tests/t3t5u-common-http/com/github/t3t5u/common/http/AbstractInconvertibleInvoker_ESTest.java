/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 13:46:55 GMT 2022
 */

package com.github.t3t5u.common.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.t3t5u.common.http.ByteArrayInvoker;
import com.github.t3t5u.common.http.InputStreamConfiguration;
import com.github.t3t5u.common.http.InputStreamInvoker;
import com.github.t3t5u.common.http.Method;
import com.github.t3t5u.common.http.Result;
import java.util.concurrent.Executor;
import java.util.concurrent.RunnableFuture;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractInconvertibleInvoker_ESTest extends AbstractInconvertibleInvoker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Method method0 = Method.POST;
      InputStreamConfiguration inputStreamConfiguration0 = mock(InputStreamConfiguration.class, new ViolatedAssumptionAnswer());
      InputStreamConfiguration inputStreamConfiguration1 = new InputStreamConfiguration(inputStreamConfiguration0);
      inputStreamConfiguration1.setReadTimeout((-745));
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, (String) null, (String) null, inputStreamConfiguration1);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      // Undeclared exception!
      try { 
        inputStreamInvoker0.call(0, (-1542L), timeUnit0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Method method0 = Method.POST;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "{`0xxYB^_b");
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      // Undeclared exception!
      try { 
        inputStreamInvoker0.invoke((Executor) null, 0, (long) 0, timeUnit0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Method method0 = Method.PUT;
      ByteArrayInvoker byteArrayInvoker0 = new ByteArrayInvoker(method0, "^?");
      RunnableFuture<Result<byte[]>> runnableFuture0 = byteArrayInvoker0.put();
      assertNotNull(runnableFuture0);
  }
}
