/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 13:42:14 GMT 2022
 */

package com.github.t3t5u.common.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.t3t5u.common.http.AbstractInvoker;
import com.github.t3t5u.common.http.InputStreamInvoker;
import com.github.t3t5u.common.http.InputStreamResult;
import com.github.t3t5u.common.http.Method;
import com.github.t3t5u.common.http.Result;
import java.io.InputStream;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.RunnableFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractInvoker_ESTest extends AbstractInvoker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Method method0 = Method.GET;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "Z$%YFE", "Z$%YFE");
      // Undeclared exception!
      try { 
        inputStreamInvoker0.invoke(method0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Method method0 = Method.GET;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "gENgP/iHDFmM4~i5-z");
      // Undeclared exception!
      try { 
        inputStreamInvoker0.execute((Executor) null, (Callable<Result<InputStream>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.FutureTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Method method0 = Method.DELETE;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, (String) null, (String) null);
      Callable<Result<InputStream>> callable0 = (Callable<Result<InputStream>>) mock(Callable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        inputStreamInvoker0.execute((Executor) null, callable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Method method0 = Method.DELETE;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "", "");
      // Undeclared exception!
      try { 
        inputStreamInvoker0.cancel();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "xcmE");
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1);
      // Undeclared exception!
      try { 
        inputStreamInvoker0.invoke((Executor) scheduledThreadPoolExecutor0, 1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Method method0 = Method.GET;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "property: ");
      boolean boolean0 = inputStreamInvoker0.isRetry((Result<InputStream>) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Method method0 = Method.POST;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "eHO<n:w");
      MockIOException mockIOException0 = new MockIOException("com.github.t3t5u.common.http.AbstractInvoker$1");
      InputStreamResult inputStreamResult0 = new InputStreamResult(mockIOException0);
      boolean boolean0 = inputStreamInvoker0.isRetry(inputStreamResult0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Method method0 = Method.POST;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "eHO<n:w");
      // Undeclared exception!
      try { 
        inputStreamInvoker0.perform();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Method method0 = Method.GET;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "N");
      RunnableFuture<Result<InputStream>> runnableFuture0 = inputStreamInvoker0.get();
      assertNull(runnableFuture0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        AbstractInvoker.putRequestProperty(hashMap0, "X/UgL3a", linkedList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/CollectionUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "K;");
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      // Undeclared exception!
      try { 
        inputStreamInvoker0.invoke((Executor) forkJoinPool0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/ConcurrentUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "qoM`QR-cupBkal>$Q");
      RunnableFuture<Result<InputStream>> runnableFuture0 = inputStreamInvoker0.delete();
      assertNull(runnableFuture0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Method method0 = Method.PUT;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, "|2.bDJcLb78EF^Q");
      RunnableFuture<Result<InputStream>> runnableFuture0 = inputStreamInvoker0.put();
      assertNotNull(runnableFuture0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        AbstractInvoker.putParameter(hashMap0, "", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/t3t5u/common/util/CollectionUtils
         //
         verifyException("com.github.t3t5u.common.http.AbstractInvoker", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Method method0 = Method.DELETE;
      InputStreamInvoker inputStreamInvoker0 = new InputStreamInvoker(method0, (String) null);
      RunnableFuture<Result<InputStream>> runnableFuture0 = inputStreamInvoker0.post();
      assertNotNull(runnableFuture0);
  }
}
