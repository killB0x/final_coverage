/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 10:20:50 GMT 2022
 */

package com.ning.tr13.build;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ning.tr13.KeyValueReader;
import com.ning.tr13.build.KeyStringValueReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KeyStringValueReader_ESTest extends KeyStringValueReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      KeyStringValueReader keyStringValueReader0 = new KeyStringValueReader(pipedInputStream0, '!');
      String string0 = keyStringValueReader0.toValue((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (-1));
      KeyStringValueReader keyStringValueReader0 = new KeyStringValueReader(byteArrayInputStream0);
      assertEquals('|', KeyValueReader.DEFAULT_SEPARATOR_CHAR);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      KeyStringValueReader keyStringValueReader0 = new KeyStringValueReader(pipedInputStream0, '!');
      String string0 = keyStringValueReader0.toValue("h;vL~UW]F");
      assertEquals("h;vL~UW]F", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      File file0 = MockFile.createTempFile("com.ning.tr13.build.KeyStringValueReader", "com.ning.tr13.build.KeyStringValueReader");
      KeyStringValueReader keyStringValueReader0 = new KeyStringValueReader(file0);
      String string0 = keyStringValueReader0.toValue("");
      assertEquals("", string0);
  }
}
