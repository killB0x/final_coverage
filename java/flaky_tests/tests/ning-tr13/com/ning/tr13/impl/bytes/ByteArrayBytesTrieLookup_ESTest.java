/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 10:01:09 GMT 2022
 */

package com.ning.tr13.impl.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ning.tr13.impl.bytes.ByteArrayBytesTrieLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteArrayBytesTrieLookup_ESTest extends ByteArrayBytesTrieLookup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)100;
      byteArray0[5] = (byte) (-122);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-122);
      byte[] byteArray2 = byteArrayBytesTrieLookup0.findValue(byteArray1);
      assertNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)100;
      byteArray1[5] = (byte) (-93);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray1);
      byte[] byteArray2 = byteArrayBytesTrieLookup0.findValue(byteArray0);
      assertNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte) (-78);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)96;
      byte[] byteArray2 = byteArrayBytesTrieLookup0.findValue(byteArray1);
      assertNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-72);
      byteArray0[3] = (byte) (-72);
      byteArray0[4] = (byte) (-78);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-72);
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 23 out of bounds for length 9
         //
         verifyException("com.ning.tr13.impl.bytes.ByteArrayBytesTrieLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-103);
      byteArray0[4] = (byte) (-25);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[1];
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 8 out of bounds for length 8
         //
         verifyException("com.ning.tr13.util.VInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-123);
      byteArray0[2] = (byte) (-87);
      byteArray0[4] = (byte) (-23);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 14 out of bounds for length 9
         //
         verifyException("com.ning.tr13.util.VInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)32;
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[0];
      byte[] byteArray2 = byteArrayBytesTrieLookup0.findValue(byteArray1);
      assertEquals(0, byteArray2.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)8;
      byteArray0[5] = (byte) (-17);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2147483537
         //
         verifyException("com.ning.tr13.impl.bytes.ByteArrayBytesTrieLookup$Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)100;
      byteArray0[5] = (byte) (-122);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[1] = (byte)100;
      byte[] byteArray2 = byteArrayBytesTrieLookup0.findValue(byteArray1);
      assertNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-78);
      byteArray0[2] = (byte)113;
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 20 out of bounds for length 5
         //
         verifyException("com.ning.tr13.util.VInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-78);
      byteArray0[2] = (byte) (-78);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = byteArrayBytesTrieLookup0.findValue(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-116);
      byteArray0[2] = (byte) (-15);
      byteArray0[6] = (byte) (-15);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 120 out of bounds for length 7
         //
         verifyException("com.ning.tr13.impl.bytes.ByteArrayBytesTrieLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-78);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = byteArrayBytesTrieLookup0.findValue(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-9);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 24 out of bounds for length 4
         //
         verifyException("com.ning.tr13.util.VInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte) (-90);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[0];
      byte[] byteArray2 = byteArrayBytesTrieLookup0.findValue(byteArray1);
      assertNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)100;
      byteArray0[5] = (byte) (-122);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[6];
      byte[] byteArray2 = byteArrayBytesTrieLookup0.findValue(byteArray1);
      assertNotNull(byteArray2);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-22);
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup(byteArray0);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayBytesTrieLookup byteArrayBytesTrieLookup0 = new ByteArrayBytesTrieLookup((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBytesTrieLookup0.findValue((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ning.tr13.impl.bytes.ByteArrayBytesTrieLookup", e);
      }
  }
}
