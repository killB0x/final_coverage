/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 03:36:26 GMT 2022
 */

package net.dataforte.cassandra.pool;

import org.junit.Test;
import static org.junit.Assert.*;
import net.dataforte.cassandra.pool.CassandraHost;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CassandraHost_ESTest extends CassandraHost_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      assertTrue(cassandraHost0.isGood());
      
      cassandraHost0.setGood(false);
      boolean boolean0 = cassandraHost0.isGood();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost(",timestamp=");
      cassandraHost0.lastUsed = 1L;
      cassandraHost0.lastUsed = (-1L);
      long long0 = cassandraHost0.getLastUsed();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost("[null,status=true,timestamp=1392409281320]");
      String string0 = cassandraHost0.getHost();
      assertTrue(cassandraHost0.isGood());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost("");
      String string0 = cassandraHost0.getHost();
      assertNotNull(string0);
      assertTrue(cassandraHost0.isGood());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost("{dg[");
      CassandraHost cassandraHost1 = new CassandraHost("{dg[");
      boolean boolean0 = cassandraHost0.equals(cassandraHost1);
      assertTrue(boolean0);
      assertTrue(cassandraHost1.isGood());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      CassandraHost cassandraHost1 = new CassandraHost((String) null);
      boolean boolean0 = cassandraHost1.equals(cassandraHost0);
      assertTrue(boolean0);
      assertTrue(cassandraHost1.isGood());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost("");
      Object object0 = new Object();
      boolean boolean0 = cassandraHost0.equals(object0);
      assertFalse(boolean0);
      assertTrue(cassandraHost0.isGood());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost(",timestamp=");
      boolean boolean0 = cassandraHost0.equals((Object) null);
      assertTrue(cassandraHost0.isGood());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost(",sNtatus=");
      boolean boolean0 = cassandraHost0.equals(cassandraHost0);
      assertTrue(boolean0);
      assertTrue(cassandraHost0.isGood());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      CassandraHost cassandraHost1 = new CassandraHost("[null,status=true,timestamp=1392409281320]");
      boolean boolean0 = cassandraHost0.equals(cassandraHost1);
      assertTrue(cassandraHost1.isGood());
      assertFalse(cassandraHost1.equals((Object)cassandraHost0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      cassandraHost0.hashCode();
      assertTrue(cassandraHost0.isGood());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost("[null,status=true,timestamp=1392409281320]");
      cassandraHost0.hashCode();
      assertTrue(cassandraHost0.isGood());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      String string0 = cassandraHost0.toString();
      assertEquals("[null,status=true,timestamp=0]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      boolean boolean0 = cassandraHost0.isGood();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      cassandraHost0.getLastUsed();
      assertTrue(cassandraHost0.isGood());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      cassandraHost0.timestamp();
      long long0 = cassandraHost0.getLastUsed();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost((String) null);
      cassandraHost0.getHost();
      assertTrue(cassandraHost0.isGood());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CassandraHost cassandraHost0 = new CassandraHost("!JCAD[9e9Kxa#C");
      CassandraHost cassandraHost1 = new CassandraHost(")hio_?:AzzJ|JHSn");
      boolean boolean0 = cassandraHost0.equals(cassandraHost1);
      assertTrue(cassandraHost1.isGood());
      assertFalse(boolean0);
  }
}
