/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 16:32:16 GMT 2022
 */

package wetheinter.net.dev.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wetheinter.net.dev.io.ClassBuffer;
import wetheinter.net.dev.io.ImportSection;
import wetheinter.net.dev.io.PrintBuffer;
import wetheinter.net.dev.io.SourceBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SourceBuilder_ESTest extends SourceBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      StringBuilder stringBuilder0 = new StringBuilder("package ;");
      PrintBuffer printBuffer0 = new PrintBuffer(stringBuilder0);
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.addBuffer(printBuffer0);
      sourceBuilder1.setPackage("packaeinterfacL pakage {");
      String string0 = sourceBuilder1.toString();
      assertEquals("package packaeinterfacL pakage {;\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SourceBuilder<Integer> sourceBuilder0 = new SourceBuilder<Integer>("V@");
      sourceBuilder0.setPackage("CsU\"n4jq&%J+D=D<U");
      String string0 = sourceBuilder0.getRepackage();
      assertEquals("CsU\"n4jq&%J+D=D<U", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("2MH");
      Object object0 = new Object();
      sourceBuilder0.setPayload(object0);
      Object object1 = sourceBuilder0.getPayload();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("OC!:|3WTW[v:'}");
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.setLinesToSkip(1811);
      int int0 = sourceBuilder1.getLinesToSkip();
      assertEquals(1811, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.setLinesToSkip((-310));
      int int0 = sourceBuilder1.getLinesToSkip();
      assertEquals((-310), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.addBuffer((PrintBuffer) null);
      PrintBuffer printBuffer0 = sourceBuilder1.getBuffer();
      assertNull(printBuffer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      PrintBuffer printBuffer0 = sourceBuilder0.getBuffer();
      PrintBuffer printBuffer1 = new PrintBuffer(printBuffer0);
      sourceBuilder0.addBuffer(printBuffer1);
      // Undeclared exception!
      try { 
        sourceBuilder0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "packageinterface pmckage {");
      PrintBuffer printBuffer0 = new PrintBuffer(stringBuilder0);
      printBuffer0.addToBeginning(printBuffer0);
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.addBuffer(printBuffer0);
      sourceBuilder0.setPackage("packageinterface pmckage {");
      // Undeclared exception!
      try { 
        sourceBuilder1.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      // Undeclared exception!
      try { 
        sourceBuilder0.setPackage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      // Undeclared exception!
      try { 
        sourceBuilder0.setClassDefinition("U?<Iy8@0RK6", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      // Undeclared exception!
      try { 
        sourceBuilder0.setClassDefinition((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SourceBuilder<Integer> sourceBuilder0 = null;
      try {
        sourceBuilder0 = new SourceBuilder<Integer>("acka@Qe 9k1c@5Z[?x/:");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous class definition in acka@Qe 9k1c@5Z[?x/:
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = null;
      try {
        sourceBuilder0 = new SourceBuilder<Object>("<");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SourceBuilder<Integer> sourceBuilder0 = null;
      try {
        sourceBuilder0 = new SourceBuilder<Integer>((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.SourceBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      ImportSection importSection0 = sourceBuilder0.getImports();
      ImportSection importSection1 = sourceBuilder0.getImports();
      assertSame(importSection1, importSection0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      sourceBuilder0.setClassDefinition("packageinterface package {", true);
      String string0 = sourceBuilder0.toString();
      assertEquals("\n  interface packagepackage {\n", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      String string0 = sourceBuilder0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      sourceBuilder0.setPackage("package ");
      String string0 = sourceBuilder0.getRepackage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SourceBuilder<Integer> sourceBuilder0 = new SourceBuilder<Integer>();
      SourceBuilder<Integer> sourceBuilder1 = sourceBuilder0.setPackage("I-\\I:[!xQ;");
      assertEquals("I-\\I:[!xQ", sourceBuilder1.getRepackage());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      sourceBuilder0.setPackage("k!?hp/C");
      String string0 = sourceBuilder0.toString();
      assertEquals("package k!?hp/C;\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      StringBuilder stringBuilder0 = new StringBuilder("package ;");
      PrintBuffer printBuffer0 = new PrintBuffer(stringBuilder0);
      sourceBuilder0.addBuffer(printBuffer0);
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.addBuffer(printBuffer0);
      assertSame(sourceBuilder0, sourceBuilder1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SourceBuilder<Integer> sourceBuilder0 = new SourceBuilder<Integer>("V@");
      // Undeclared exception!
      try { 
        sourceBuilder0.setClassDefinition("", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      // Undeclared exception!
      try { 
        sourceBuilder0.getClassBuffer();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // setClassDefinition() has not been called yet.
         // If you are running the template generator, your template does include a //@classDefinition()// declaration,
         // or your generator is attempting to access the class definition before it is parsed.
         //
         verifyException("wetheinter.net.dev.io.SourceBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      sourceBuilder0.setClassDefinition("bw2", false);
      ClassBuffer classBuffer0 = sourceBuilder0.getClassBuffer();
      assertEquals("bw2", classBuffer0.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      String string0 = sourceBuilder0.getRepackage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      int int0 = sourceBuilder0.getLinesToSkip();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      Object object0 = sourceBuilder0.getPayload();
      assertNull(object0);
  }
}
