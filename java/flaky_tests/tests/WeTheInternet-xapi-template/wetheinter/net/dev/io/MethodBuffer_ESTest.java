/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 16:29:17 GMT 2022
 */

package wetheinter.net.dev.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wetheinter.net.dev.io.ClassBuffer;
import wetheinter.net.dev.io.MethodBuffer;
import wetheinter.net.dev.io.PrintBuffer;
import wetheinter.net.dev.io.SourceBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodBuffer_ESTest extends MethodBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append("SHv@7p0Vhm!,735U*h");
      MethodBuffer methodBuffer2 = methodBuffer1.outdent();
      MethodBuffer methodBuffer3 = methodBuffer2.append(1630L);
      methodBuffer3.append((-2168.36F));
      methodBuffer3.target = null;
      // Undeclared exception!
      try { 
        methodBuffer1.append(11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      sourceBuilder0.setClassDefinition(",+33]s", true);
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.target = null;
      String string0 = "sativ{e ";
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        methodBuffer0.append(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String string0 = methodBuffer0.toString();
      assertEquals("\n   null null () {\n\n  }\n", string0);
      
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition("./h Aoe`?");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.println();
      String string0 = PrintBuffer.INDENT;
      methodBuffer0.target = null;
      // Undeclared exception!
      try { 
        methodBuffer0.append((CharSequence) "  ", 9, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>(";\n");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      Object object0 = new Object();
      MethodBuffer methodBuffer1 = methodBuffer0.println(object0);
      char[] charArray0 = new char[6];
      charArray0[0] = '{';
      charArray0[1] = ')';
      charArray0[2] = 'N';
      charArray0[3] = 'i';
      charArray0[4] = '&';
      charArray0[5] = 'q';
      MethodBuffer methodBuffer2 = methodBuffer1.println(charArray0);
      MethodBuffer methodBuffer3 = methodBuffer2.println((CharSequence) ";\n");
      MethodBuffer methodBuffer4 = methodBuffer3.append('@');
      methodBuffer3.addToEnd(methodBuffer2);
      MethodBuffer methodBuffer5 = methodBuffer4.append(true);
      methodBuffer5.toString();
      long long0 = (-1L);
      methodBuffer3.append(long0);
      int int0 = 41;
      int int1 = 41;
      methodBuffer4.append(charArray0, int0, int1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition("hZ8. GC|m?NZE{0");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.toString();
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition("gGt.=x{LSf~ ?6");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.println();
      boolean boolean0 = false;
      MethodBuffer methodBuffer2 = methodBuffer1.append(false);
      methodBuffer2.indent();
      MethodBuffer methodBuffer3 = methodBuffer2.append((-1228.417237317));
      methodBuffer3.addToBeginning(methodBuffer0);
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'r';
      charArray0[2] = '.';
      methodBuffer1.toString();
      MethodBuffer methodBuffer4 = methodBuffer3.append(boolean0);
      String string0 = "+6-SV#7";
      methodBuffer4.setDefinition(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("> ");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = new MethodBuffer(sourceBuilder0);
      Object object0 = new Object();
      MethodBuffer methodBuffer2 = methodBuffer1.outdent();
      methodBuffer2.target = null;
      // Undeclared exception!
      try { 
        methodBuffer1.append(0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "A method cannot be both abstract and static!";
      stringArray0[1] = ">";
      stringArray0[2] = "lZLZ=ZX5/]W";
      methodBuffer0.addParameters(stringArray0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) null);
      methodBuffer1.target = null;
      // Undeclared exception!
      try { 
        methodBuffer0.println();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.println();
      // Undeclared exception!
      try { 
        methodBuffer0.println((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "A";
      stringArray0[1] = "setClassDefinition() has not been called yet.\nIf you are running the template generator, your template does include a //@classDefinition()// declaration,\nor your generator is attempting to access the class definition before it is parsed.";
      stringArray0[2] = "Az\"M>pe$#>{nG! Bx:`{{";
      stringArray0[3] = "(";
      // Undeclared exception!
      try { 
        methodBuffer0.addGenerics(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) sourceBuilder0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "{";
      stringArray0[1] = "`7tV+^!>@WJe";
      String string0 = "~| 4_.[";
      stringArray0[2] = "~| 4_.[";
      stringArray0[3] = "`3@!DtHL*{";
      stringArray0[4] = "f/K.0p8\"Y";
      stringArray0[5] = "final ";
      stringArray0[6] = "A method cannot be both abstract and static!";
      // Undeclared exception!
      try { 
        methodBuffer1.addGenerics(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pushing to the same stack twice overwrites old value.";
      methodBuffer0.addParameters(stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("L!uGgw_");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      MethodBuffer methodBuffer1 = methodBuffer0.println((CharSequence) charBuffer0);
      MethodBuffer methodBuffer2 = methodBuffer1.indentln("L!uGgw_");
      MethodBuffer methodBuffer3 = methodBuffer2.append("L!uGgw_");
      methodBuffer3.toString();
      char char0 = PrintBuffer.NEW_LINE;
      MethodBuffer methodBuffer4 = methodBuffer2.println((Object) "<");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\n   null null () {\n  [\n    L!uGgw_\nL!uGgw_\n  }\n";
      stringArray0[1] = "L!uGgw_";
      stringArray0[2] = "<";
      stringArray0[3] = "<";
      stringArray0[4] = "L!uGgw_";
      methodBuffer4.addParameters(stringArray0);
      methodBuffer2.toString();
      char char1 = PrintBuffer.NEW_LINE;
      MethodBuffer methodBuffer5 = methodBuffer1.outdent();
      MethodBuffer methodBuffer6 = methodBuffer5.append('\n');
      methodBuffer0.addParameters(stringArray0);
      Object object0 = new Object();
      methodBuffer6.println(object0);
      // Undeclared exception!
      try { 
        methodBuffer1.setDefinition("\n   null null (L!uGgw_, <, null null () {\n  [\n    L!uGgw_\nL!uGgw_\n  }) {\n  [\n    L!uGgw_\nL!uGgw_  <\n\n  }\n");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      // Undeclared exception!
      try { 
        methodBuffer0.createInnerClass(",e {=Wf2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln("`3@!DtHL*");
      MethodBuffer methodBuffer2 = methodBuffer1.append("K1K}s=");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`3@!DtHL*";
      stringArray0[1] = "`3@!DtHL*";
      sourceBuilder0.setLinesToSkip(1683);
      stringArray0[2] = "^'z;w.|vJ2BhQ)o}U";
      stringArray0[3] = "K1K}s=";
      stringArray0[4] = "K1K}s=";
      stringArray0[5] = "`3@!DtHL*";
      stringArray0[6] = "K1K}s=";
      methodBuffer1.addGenerics(stringArray0);
      MethodBuffer methodBuffer3 = methodBuffer2.println();
      methodBuffer3.indent = "K1K}s=";
      sourceBuilder0.toString();
      methodBuffer3.append((-3804.0));
      methodBuffer0.setUseJsni(false);
      MethodBuffer methodBuffer4 = methodBuffer1.println((CharSequence) "^'z;w.|vJ2BhQ)o}U");
      methodBuffer4.append(1683);
      MethodBuffer methodBuffer5 = methodBuffer1.append((CharSequence) "`3@!DtHL*");
      methodBuffer5.toString();
      methodBuffer1.onFirstAppend();
      methodBuffer5.append(0.0F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("L!uGgw_");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      char[] charArray0 = new char[1];
      MethodBuffer methodBuffer1 = methodBuffer0.println("");
      MethodBuffer methodBuffer2 = methodBuffer1.append((float) (-1301));
      MethodBuffer methodBuffer3 = methodBuffer2.indentln("r{");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "r{";
      stringArray0[1] = "r{";
      stringArray0[2] = "L!uGgw_";
      stringArray0[3] = "";
      stringArray0[4] = "` GLHaHib]?E";
      methodBuffer0.addGenerics(stringArray0);
      MethodBuffer methodBuffer4 = methodBuffer2.append((Object) sourceBuilder0);
      methodBuffer3.println();
      // Undeclared exception!
      try { 
        methodBuffer4.setDefinition("> ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indent();
      MethodBuffer methodBuffer2 = methodBuffer1.outdent();
      methodBuffer2.addToEnd(methodBuffer1);
      MethodBuffer methodBuffer3 = methodBuffer2.append((Object) methodBuffer1);
      String[] stringArray0 = new String[1];
      String string0 = "nz/h!`8&$<";
      stringArray0[0] = string0;
      methodBuffer3.addGenerics(stringArray0);
      Object object0 = new Object();
      MethodBuffer methodBuffer4 = methodBuffer2.append(object0);
      methodBuffer4.println();
      String string1 = "p8~[wn$+ox-P-yu";
      methodBuffer2.setDefinition(string1);
      int int0 = (-1099);
      methodBuffer0.append(int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("L!uGgw_");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      MethodBuffer methodBuffer1 = methodBuffer0.println((CharSequence) charBuffer0);
      MethodBuffer methodBuffer2 = methodBuffer1.indentln("L!uGgw_");
      MethodBuffer methodBuffer3 = methodBuffer2.append("L!uGgw_");
      methodBuffer3.toString();
      char char0 = PrintBuffer.NEW_LINE;
      MethodBuffer methodBuffer4 = methodBuffer3.append('[');
      String[] stringArray0 = new String[0];
      methodBuffer4.addParameters(stringArray0);
      methodBuffer4.println((Object) charBuffer0);
      // Undeclared exception!
      try { 
        methodBuffer2.setDefinition("\n   null null () {\n  [\n    L!uGgw_\nL!uGgw_\n  }\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous method definition in 
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("KdK}{\b");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) "^'z;w.|vJ2BhQq)o}U");
      MethodBuffer methodBuffer2 = methodBuffer1.append(0.0F);
      CharBuffer charBuffer0 = CharBuffer.allocate(9);
      MethodBuffer methodBuffer3 = methodBuffer2.indentln((CharSequence) charBuffer0);
      MethodBuffer methodBuffer4 = methodBuffer3.append(0L);
      MethodBuffer methodBuffer5 = methodBuffer4.append((CharSequence) "^'z;w.|vJ2BhQq)o}U", 9, 9);
      methodBuffer5.toString();
      // Undeclared exception!
      try { 
        methodBuffer4.setDefinition("\n   null null () {\n    ^'z;w.|vJ2BhQq)o}U\n0.0    \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n0\n  }\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous method definition in ) 
         //     ^'z;w.|vJ2BhQq
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.outdent();
      assertSame(methodBuffer0, methodBuffer1);
      
      MethodBuffer methodBuffer2 = methodBuffer1.append("");
      sourceBuilder0.setLinesToSkip((-936));
      MethodBuffer methodBuffer3 = methodBuffer2.append((-1892L));
      MethodBuffer methodBuffer4 = methodBuffer3.println((CharSequence) "");
      MethodBuffer methodBuffer5 = methodBuffer4.indent();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<";
      stringArray0[1] = "";
      sourceBuilder0.getLinesToSkip();
      stringArray0[2] = "";
      methodBuffer5.addParameters(stringArray0);
      MethodBuffer methodBuffer6 = methodBuffer3.append((double) (-936));
      Object object0 = new Object();
      MethodBuffer methodBuffer7 = methodBuffer6.println(object0);
      methodBuffer1.footer();
      MethodBuffer methodBuffer8 = methodBuffer0.append(0L);
      Object object1 = new Object();
      methodBuffer0.append((Object) methodBuffer7);
      methodBuffer5.append(',');
      methodBuffer8.onAppend();
      assertSame(methodBuffer8, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "TJz/!%xG;<Ox\"3FPd?j";
      methodBuffer0.addParameters(stringArray0);
      String string0 = methodBuffer0.toString();
      assertEquals("\n   null null (TJz/!%xG;<Ox\"3FPd?j) {\n\n  }\n", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) sourceBuilder0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      MethodBuffer methodBuffer2 = methodBuffer1.append((CharSequence) stringBuffer0);
      methodBuffer2.append(0);
      sourceBuilder0.setLinesToSkip(8);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "^'z;w.|vJ2BhQ)o}U";
      stringArray0[1] = "^'z;w.|vJ2BhQ)o}U";
      stringArray0[2] = "^'z;w.|vJ2BhQ)o}U";
      stringArray0[3] = "^'z;w.|vJ2BhQ)o}U";
      stringArray0[4] = "^'z;w.|vJ2BhQ)o}U";
      stringArray0[5] = ".";
      stringArray0[6] = "^'z;w.|vJ2BhQ)o}U";
      methodBuffer2.addGenerics(stringArray0);
      MethodBuffer methodBuffer3 = methodBuffer0.append((float) 0);
      methodBuffer3.println();
      sourceBuilder0.toString();
      methodBuffer2.append(0.0);
      methodBuffer1.append((double) 0);
      // Undeclared exception!
      try { 
        methodBuffer2.setDefinition("^'z;w.|vJ2BhQ)o}U");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.createInnerClass("P ^51v pr*^");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous class definition in P ^51v pr*^
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) sourceBuilder0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      MethodBuffer methodBuffer2 = methodBuffer1.append((CharSequence) stringBuffer0);
      MethodBuffer methodBuffer3 = methodBuffer2.append(0);
      char[] charArray0 = new char[8];
      methodBuffer2.outdent();
      charArray0[1] = '/';
      methodBuffer3.append((Object) methodBuffer0);
      charArray0[2] = '/';
      charArray0[3] = 'g';
      charArray0[4] = 'n';
      charArray0[5] = '@';
      charArray0[6] = 'z';
      charArray0[7] = 'O';
      MethodBuffer methodBuffer4 = methodBuffer3.indentln(charArray0);
      MethodBuffer methodBuffer5 = methodBuffer4.println("[v%(;2(F@|q,6*");
      methodBuffer5.createInnerClass("Ju");
      MethodBuffer methodBuffer6 = methodBuffer5.indentln((Object) methodBuffer3);
      StringBuilder stringBuilder0 = new StringBuilder(2151);
      stringBuilder0.insert(0, (float) 0);
      methodBuffer5.target = stringBuilder0;
      methodBuffer3.println((CharSequence) "[v%(;2(F@|q,6*");
      methodBuffer6.footer();
      methodBuffer5.indent();
      // Undeclared exception!
      try { 
        methodBuffer3.setDefinition("Trying to add an ancestor to a child");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append(992.89F);
      MethodBuffer methodBuffer2 = methodBuffer1.append("Bp");
      MethodBuffer methodBuffer3 = methodBuffer2.outdent();
      methodBuffer2.indentln("Bp");
      Object object0 = new Object();
      MethodBuffer methodBuffer4 = methodBuffer3.append(object0);
      methodBuffer4.println();
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = 'x';
      charArray0[2] = 'L';
      charArray0[3] = 'E';
      charArray0[4] = 'n';
      charArray0[5] = 'F';
      MethodBuffer methodBuffer5 = methodBuffer1.indentln(charArray0);
      MethodBuffer methodBuffer6 = methodBuffer5.append((CharSequence) "Bp", 0, 2);
      methodBuffer1.indentln(charArray0);
      methodBuffer6.onFirstAppend();
      assertSame(methodBuffer6, methodBuffer4);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append(992.89F);
      MethodBuffer methodBuffer2 = methodBuffer1.outdent();
      methodBuffer0.indentln("");
      MethodBuffer methodBuffer3 = methodBuffer2.append((Object) methodBuffer1);
      MethodBuffer methodBuffer4 = methodBuffer3.println();
      char[] charArray0 = new char[0];
      MethodBuffer methodBuffer5 = methodBuffer4.indentln(charArray0);
      methodBuffer5.indentln(charArray0);
      methodBuffer4.onFirstAppend();
      assertSame(methodBuffer4, methodBuffer2);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indent();
      MethodBuffer methodBuffer2 = methodBuffer1.outdent();
      MethodBuffer methodBuffer3 = methodBuffer2.append((Object) methodBuffer1);
      MethodBuffer methodBuffer4 = methodBuffer3.println();
      char[] charArray0 = new char[0];
      MethodBuffer methodBuffer5 = methodBuffer4.indentln(charArray0);
      MethodBuffer methodBuffer6 = methodBuffer5.indentln(charArray0);
      methodBuffer4.onFirstAppend();
      assertSame(methodBuffer4, methodBuffer6);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.addGenerics((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) sourceBuilder0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      MethodBuffer methodBuffer2 = methodBuffer1.append((CharSequence) stringBuffer0);
      MethodBuffer methodBuffer3 = methodBuffer2.append(0);
      char[] charArray0 = new char[8];
      methodBuffer2.outdent();
      charArray0[1] = '/';
      methodBuffer3.append((Object) methodBuffer0);
      charArray0[2] = 't';
      charArray0[3] = 'g';
      charArray0[4] = 'n';
      charArray0[5] = '@';
      charArray0[6] = 'z';
      charArray0[7] = 'O';
      MethodBuffer methodBuffer4 = methodBuffer3.indentln(charArray0);
      MethodBuffer methodBuffer5 = methodBuffer4.println("[v%(;2(F@|q,6*");
      methodBuffer5.createInnerClass("Ju");
      MethodBuffer methodBuffer6 = methodBuffer5.indentln((Object) methodBuffer3);
      StringBuilder stringBuilder0 = new StringBuilder(2151);
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (float) 0);
      StringBuilder stringBuilder2 = stringBuilder1.append((-1246));
      methodBuffer5.target = stringBuilder2;
      methodBuffer3.println((CharSequence) "[v%(;2(F@|q,6*");
      methodBuffer6.footer();
      methodBuffer5.indent();
      MethodBuffer methodBuffer7 = methodBuffer1.append(0);
      assertSame(methodBuffer7, methodBuffer6);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      sourceBuilder0.getLinesToSkip();
      SourceBuilder<Object> sourceBuilder1 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder1);
      MethodBuffer methodBuffer1 = methodBuffer0.indent();
      MethodBuffer methodBuffer2 = methodBuffer1.append((CharSequence) "O%O]h:H~j23r");
      MethodBuffer methodBuffer3 = methodBuffer2.append(true);
      MethodBuffer methodBuffer4 = methodBuffer3.append((float) 0);
      MethodBuffer methodBuffer5 = methodBuffer4.append((-2066L));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "O%O]h:H~j23r";
      stringArray0[1] = "<";
      stringArray0[2] = ".lZU?4,u(7.=_A.8U6";
      stringArray0[3] = "O%O]h:H~j23r";
      stringArray0[4] = "<";
      stringArray0[5] = "<";
      stringArray0[6] = "O%O]h:H~j23r";
      // Undeclared exception!
      try { 
        methodBuffer5.addParameters(stringArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      char[] charArray0 = new char[5];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = 'S';
      charArray0[4] = 'P';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      methodBuffer0.println((CharSequence) charBuffer0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln("wetheinter.net.dev.io.MethodBuffer");
      MethodBuffer methodBuffer2 = methodBuffer0.indentln("wetheinter.net.dev.io.MethodBuffer");
      MethodBuffer methodBuffer3 = methodBuffer2.append("wetheinter.net.dev.io.MethodBuffer");
      methodBuffer1.toString();
      char char0 = PrintBuffer.NEW_LINE;
      MethodBuffer methodBuffer4 = methodBuffer3.append('[');
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\n   null null () {\n  [[[SP\n    wetheinter.net.dev.io.MethodBuffer\n    wetheinter.net.dev.io.MethodBuffer\nwetheinter.net.dev.io.MethodBuffer\n  }\n";
      stringArray0[1] = "\n   null null () {\n  [[[SP\n    wetheinter.net.dev.io.MethodBuffer\n    wetheinter.net.dev.io.MethodBuffer\nwetheinter.net.dev.io.MethodBuffer\n  }\n";
      stringArray0[2] = "wetheinter.net.dev.io.MethodBuffer";
      stringArray0[3] = "wetheinter.net.dev.io.MethodBuffer";
      stringArray0[4] = "Ju{";
      stringArray0[5] = "wetheinter.net.dev.io.MethodBuffer";
      stringArray0[6] = "wetheinter.net.dev.io.MethodBuffer";
      // Undeclared exception!
      try { 
        methodBuffer4.addParameters(stringArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^'z;.|v2BhQ)o}U";
      // Undeclared exception!
      try { 
        methodBuffer0.addParameters(stringArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.addParameters((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`:/\"9U";
      methodBuffer0.addGenerics(stringArray0);
      String string0 = methodBuffer0.toString();
      assertEquals("\n   <`:/\"9U> null null () {\n\n  }\n", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      MethodBuffer methodBuffer1 = methodBuffer0.append((CharSequence) stringBuilder0);
      MethodBuffer methodBuffer2 = methodBuffer1.indentln("");
      char[] charArray0 = new char[0];
      MethodBuffer methodBuffer3 = methodBuffer2.append(charArray0, 0, 0);
      MethodBuffer methodBuffer4 = methodBuffer3.append('0');
      char[] charArray1 = new char[7];
      charArray1[0] = '0';
      charArray1[1] = '0';
      charArray1[2] = '0';
      charArray1[3] = 'N';
      charArray1[4] = '0';
      charArray1[5] = '0';
      charArray1[6] = '(';
      MethodBuffer methodBuffer5 = methodBuffer4.println(charArray1);
      MethodBuffer methodBuffer6 = methodBuffer5.append(0);
      assertSame(methodBuffer4, methodBuffer6);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition("xxd_ejY B$Jkf8<`B>");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition("O%O]h:H~j23r");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      SourceBuilder<String> sourceBuilder1 = sourceBuilder0.setClassDefinition("O%O]h:H~j23r", true);
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder1);
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition("O%O]h:H~j23r");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'g';
      charArray0[1] = ';';
      charArray0[2] = 'g';
      charArray0[3] = 'I';
      charArray0[4] = 'p';
      methodBuffer0.toString();
      methodBuffer0.append(charArray0);
      methodBuffer0.append(1432.917);
      char[] charArray1 = new char[2];
      charArray1[0] = ';';
      charArray1[1] = 'I';
      MethodBuffer methodBuffer1 = methodBuffer0.println(charArray1);
      // Undeclared exception!
      try { 
        methodBuffer1.setDefinition("\n   null null () {\n\n  }\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.println();
      String string0 = PrintBuffer.INDENT;
      MethodBuffer methodBuffer2 = methodBuffer1.indentln((CharSequence) "  ");
      assertSame(methodBuffer2, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = 'F';
      charArray0[2] = ' ';
      methodBuffer0.println((String) null);
      charArray0[3] = '\\';
      charArray0[4] = 'V';
      charArray0[5] = '$';
      MethodBuffer methodBuffer1 = methodBuffer0.println(charArray0);
      MethodBuffer methodBuffer2 = methodBuffer1.append(charArray0);
      StringBuilder stringBuilder0 = new StringBuilder("+\"u`cPknd9Ll|IxmV<");
      StringBuilder stringBuilder1 = new StringBuilder(stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append((-573.0342F));
      MethodBuffer methodBuffer3 = methodBuffer2.indentln((CharSequence) stringBuilder2);
      methodBuffer3.append((Object) "+\"u`cPknd9Ll|IxmV<");
      methodBuffer2.append((-1.0F));
      // Undeclared exception!
      try { 
        methodBuffer3.append((CharSequence) stringBuilder1, 0, 275);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 0, end 275, length 27
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("L!uGgw_");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      char[] charArray0 = new char[1];
      char char0 = '[';
      charArray0[0] = '[';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      MethodBuffer methodBuffer1 = methodBuffer0.println((CharSequence) charBuffer0);
      MethodBuffer methodBuffer2 = methodBuffer1.indentln("L!uGgw_");
      MethodBuffer methodBuffer3 = methodBuffer2.append("L!uGgw_");
      methodBuffer3.toString();
      // Undeclared exception!
      try { 
        charBuffer0.charAt(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^'z;.|v2BhQ)o}U";
      // Undeclared exception!
      try { 
        methodBuffer0.addGenerics(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "tg^\"\"CrU";
      methodBuffer0.addGenerics(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/Pk~`:x!zf@F5";
      methodBuffer0.addGenerics(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.setUseJsni(true);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln("`3@!DtHL*");
      MethodBuffer methodBuffer2 = methodBuffer1.append("K1K}s=");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`3@!DtHL*";
      stringArray0[1] = "`3@!DtHL*";
      sourceBuilder0.setLinesToSkip(1683);
      stringArray0[2] = "^'z;w.|vJ2BhQ)o}U";
      stringArray0[3] = "K1K}s=";
      stringArray0[4] = "K1K}s=";
      stringArray0[5] = "`3@!DtHL*";
      stringArray0[6] = "K1K}s=";
      methodBuffer1.addGenerics(stringArray0);
      MethodBuffer methodBuffer3 = methodBuffer2.println();
      methodBuffer3.indent = "K1K}s=";
      sourceBuilder0.toString();
      methodBuffer3.append((-3804.0));
      methodBuffer0.setUseJsni(false);
      methodBuffer1.println((CharSequence) "^'z;w.|vJ2BhQ)o}U");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "K1K}s=");
      int int0 = (-1174);
      // Undeclared exception!
      try { 
        stringBuilder0.appendCodePoint((-1174));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid Unicode code point: 0xFFFFFB6A
         //
         verifyException("java.lang.Character", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[0];
      methodBuffer0.addGenerics(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        methodBuffer0.addGenerics(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.append((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append(3688.892861);
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("BB|AN@");
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.setLinesToSkip((-1772));
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'P';
      charArray0[1] = '!';
      charArray0[2] = 'C';
      charArray0[3] = '4';
      sourceBuilder1.setPackage("X/BvZ~'8up");
      charArray0[4] = 'q';
      charArray0[5] = '\"';
      MethodBuffer methodBuffer1 = methodBuffer0.println(charArray0);
      MethodBuffer methodBuffer2 = methodBuffer0.append(0);
      methodBuffer1.append((double) (-1772));
      MethodBuffer methodBuffer3 = methodBuffer2.indent();
      MethodBuffer methodBuffer4 = methodBuffer3.println();
      PrintBuffer printBuffer0 = new PrintBuffer();
      methodBuffer4.addToEnd(printBuffer0);
      MethodBuffer methodBuffer5 = methodBuffer3.append((float) 0);
      MethodBuffer methodBuffer6 = methodBuffer5.indent();
      methodBuffer2.indent();
      methodBuffer1.println("BB|AN@");
      MethodBuffer methodBuffer7 = methodBuffer6.println((Object) methodBuffer0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "X/BvZ~'8up";
      stringArray0[1] = "BB|AN@";
      stringArray0[2] = "BB|AN@";
      stringArray0[3] = "BB|AN@";
      stringArray0[4] = "X/BvZ~'8up";
      stringArray0[5] = "BB|AN@";
      stringArray0[6] = "BB|AN@";
      stringArray0[7] = "X/BvZ~'8up";
      methodBuffer5.addParameters(stringArray0);
      MethodBuffer methodBuffer8 = methodBuffer6.append(0);
      assertSame(methodBuffer8, methodBuffer7);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append((-5424.0F));
      MethodBuffer methodBuffer2 = methodBuffer1.append("{|mrxV[kumHjIP!/z");
      char[] charArray0 = new char[6];
      charArray0[0] = 'F';
      charArray0[1] = 'D';
      charArray0[2] = ']';
      charArray0[3] = 'q';
      charArray0[4] = 'w';
      charArray0[5] = '7';
      MethodBuffer methodBuffer3 = methodBuffer2.append(charArray0);
      MethodBuffer methodBuffer4 = methodBuffer3.indent();
      MethodBuffer methodBuffer5 = methodBuffer4.append(']');
      MethodBuffer methodBuffer6 = methodBuffer5.outdent();
      assertSame(methodBuffer6, methodBuffer2);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.toString();
      char[] charArray0 = new char[0];
      MethodBuffer methodBuffer1 = methodBuffer0.append(charArray0);
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.createInnerClass("=yH)`<2=Mb6/:.m");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("> ");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "> ";
      methodBuffer0.addParameters(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[0];
      methodBuffer0.addParameters(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        methodBuffer0.addParameters(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.outdent();
      String string0 = "";
      MethodBuffer methodBuffer2 = methodBuffer1.append("");
      char[] charArray0 = new char[2];
      sourceBuilder0.setLinesToSkip((-936));
      charArray0[0] = 'b';
      charArray0[1] = '[';
      MethodBuffer methodBuffer3 = methodBuffer2.println(charArray0);
      MethodBuffer methodBuffer4 = methodBuffer2.append((-1878L));
      MethodBuffer methodBuffer5 = methodBuffer4.println((CharSequence) "");
      MethodBuffer methodBuffer6 = methodBuffer5.indent();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<";
      stringArray0[1] = "";
      sourceBuilder0.getLinesToSkip();
      stringArray0[2] = "";
      methodBuffer6.addParameters(stringArray0);
      methodBuffer6.onAppend();
      methodBuffer1.append(41);
      // Undeclared exception!
      try { 
        methodBuffer3.createInnerClass("<");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append(992.89F);
      MethodBuffer methodBuffer2 = methodBuffer1.outdent();
      methodBuffer0.indentln("");
      MethodBuffer methodBuffer3 = methodBuffer2.append((Object) methodBuffer1);
      MethodBuffer methodBuffer4 = methodBuffer3.println();
      char[] charArray0 = new char[0];
      methodBuffer4.indentln(charArray0);
      // Undeclared exception!
      try { 
        methodBuffer3.append((CharSequence) "", 485, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 485, end 0, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.println((Object) null);
      char[] charArray0 = new char[0];
      MethodBuffer methodBuffer2 = methodBuffer1.indentln(charArray0);
      StringBuilder stringBuilder0 = methodBuffer1.target;
      MethodBuffer methodBuffer3 = methodBuffer2.append((CharSequence) stringBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer3.append((CharSequence) stringBuilder0, (-979), (-979));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -979, end -979, length 24
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.println((Object) sourceBuilder0);
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.toString();
      // Undeclared exception!
      try { 
        methodBuffer0.setDefinition("\n   null null () {\n\n  }\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous method definition in 
         //
         verifyException("wetheinter.net.dev.io.MethodBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      String string0 = "Q3-qu";
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.setPackage("Q3-qu");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder1);
      MethodBuffer methodBuffer1 = methodBuffer0.append(0.0F);
      char[] charArray0 = new char[2];
      MethodBuffer methodBuffer2 = methodBuffer0.println((CharSequence) "Q3-qu");
      methodBuffer2.append(1092);
      charArray0[0] = 'e';
      charArray0[1] = 'l';
      SourceBuilder<Object> sourceBuilder2 = new SourceBuilder<Object>();
      sourceBuilder1.getImports();
      sourceBuilder2.getLinesToSkip();
      methodBuffer0.context = sourceBuilder2;
      // Undeclared exception!
      try { 
        methodBuffer1.setDefinition("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.println();
      char[] charArray0 = new char[0];
      MethodBuffer methodBuffer1 = methodBuffer0.println(charArray0);
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>(";");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      charArray0[1] = 'm';
      charArray0[2] = '+';
      MethodBuffer methodBuffer1 = methodBuffer0.println(charArray0);
      MethodBuffer methodBuffer2 = methodBuffer1.append((Object) sourceBuilder0);
      MethodBuffer methodBuffer3 = methodBuffer2.println(";");
      methodBuffer3.indentln("");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) methodBuffer3);
      StringBuilder stringBuilder2 = stringBuilder1.reverse();
      // Undeclared exception!
      try { 
        stringBuilder2.insert((-623), charArray0, (-623), 41);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        methodBuffer0.append(charArray0, (-1971), 1569);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -1971, end -402, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.append((char[]) null, 256, 256);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      char[] charArray0 = new char[4];
      charArray0[0] = 'b';
      charArray0[1] = 'm';
      charArray0[2] = 'L';
      charArray0[3] = 'w';
      // Undeclared exception!
      try { 
        methodBuffer0.append(charArray0, 67, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 67, end 67, length 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append('F');
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      MethodBuffer methodBuffer1 = methodBuffer0.append(false);
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append((-211L));
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.toString();
      // Undeclared exception!
      try { 
        methodBuffer0.append((CharSequence) "\n   null null () {\n\n  }\n", 2800, 2800);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 2800, end 2800, length 24
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      Object object0 = new Object();
      MethodBuffer methodBuffer1 = methodBuffer0.append(object0);
      MethodBuffer methodBuffer2 = methodBuffer1.append(false);
      StringBuilder stringBuilder0 = new StringBuilder();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuilder0);
      MethodBuffer methodBuffer3 = methodBuffer2.append((CharSequence) charBuffer0);
      char char0 = 'a';
      MethodBuffer methodBuffer4 = methodBuffer3.append('a');
      methodBuffer4.append(0L);
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'x';
      charArray0[2] = 'a';
      charArray0[3] = 'a';
      charArray0[4] = 'a';
      charArray0[5] = 'T';
      charArray0[6] = 'a';
      boolean boolean0 = false;
      MethodBuffer methodBuffer5 = methodBuffer0.indent();
      // Undeclared exception!
      try { 
        methodBuffer5.append((CharSequence) charBuffer0, 59, 1558);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 59, end 1558, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append(992.89F);
      MethodBuffer methodBuffer2 = methodBuffer1.outdent();
      String string0 = "";
      MethodBuffer methodBuffer3 = methodBuffer0.indentln("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      methodBuffer3.addGenerics(stringArray0);
      MethodBuffer methodBuffer4 = methodBuffer2.append((Object) methodBuffer1);
      MethodBuffer methodBuffer5 = methodBuffer4.println();
      char[] charArray0 = new char[0];
      methodBuffer5.indentln(charArray0);
      // Undeclared exception!
      try { 
        methodBuffer4.append((CharSequence) "", 485, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 485, end 0, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append(1424.8F);
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append((Object) sourceBuilder0);
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      MethodBuffer methodBuffer1 = methodBuffer0.indent();
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("^'z;.|v2BhQ)o}U");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append((CharSequence) "^'z;.|v2BhQ)o}U");
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.println("xxd_ejY B$Jkf8<`B>");
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("> ");
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      ClassBuffer classBuffer0 = methodBuffer0.createInnerClass("> ");
      assertNull(classBuffer0.getSuperClass());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.toString();
      MethodBuffer methodBuffer1 = methodBuffer0.println((CharSequence) "\n   null null () {\n\n  }\n");
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      // Undeclared exception!
      try { 
        methodBuffer0.indentln((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.toString();
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) sourceBuilder0);
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.append(3);
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      methodBuffer0.toString();
      MethodBuffer methodBuffer1 = methodBuffer0.indentln("\n   null null () {\n\n  }\n");
      assertSame(methodBuffer0, methodBuffer1);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      MethodBuffer methodBuffer0 = new MethodBuffer((SourceBuilder<?>) null);
      MethodBuffer methodBuffer1 = methodBuffer0.println();
      assertSame(methodBuffer1, methodBuffer0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      MethodBuffer methodBuffer0 = new MethodBuffer(sourceBuilder0);
      MethodBuffer methodBuffer1 = methodBuffer0.indentln((Object) sourceBuilder0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      MethodBuffer methodBuffer2 = methodBuffer1.append((CharSequence) stringBuffer0);
      MethodBuffer methodBuffer3 = methodBuffer2.append(0);
      char[] charArray0 = new char[8];
      methodBuffer1.append((float) 0);
      charArray0[0] = 'o';
      charArray0[1] = '/';
      MethodBuffer methodBuffer4 = methodBuffer3.append((Object) methodBuffer0);
      charArray0[2] = 't';
      charArray0[3] = 'g';
      charArray0[4] = 'n';
      charArray0[5] = '@';
      charArray0[6] = 'z';
      charArray0[7] = 'O';
      MethodBuffer methodBuffer5 = methodBuffer3.indentln(charArray0);
      MethodBuffer methodBuffer6 = methodBuffer5.println("[v%(;2(F@|q,6*");
      methodBuffer6.createInnerClass("Ju");
      MethodBuffer methodBuffer7 = methodBuffer6.indentln((Object) methodBuffer3);
      StringBuilder stringBuilder0 = new StringBuilder(2151);
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (float) 0);
      StringBuilder stringBuilder2 = stringBuilder1.append((-1246));
      methodBuffer6.target = stringBuilder2;
      methodBuffer3.println((CharSequence) "[v%(;2(F@|q,6*");
      methodBuffer7.footer();
      methodBuffer6.indent();
      MethodBuffer methodBuffer8 = methodBuffer1.append(0);
      assertSame(methodBuffer8, methodBuffer4);
  }
}
