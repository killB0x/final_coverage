/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 16:26:51 GMT 2022
 */

package wetheinter.net.dev.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wetheinter.net.dev.io.ClassBuffer;
import wetheinter.net.dev.io.PrintBuffer;
import wetheinter.net.dev.io.SourceBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassBuffer_ESTest extends ClassBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer((SourceBuilder<?>) null);
      Object object0 = new Object();
      ClassBuffer classBuffer1 = classBuffer0.append(object0);
      StringBuffer stringBuffer0 = new StringBuffer();
      ClassBuffer classBuffer2 = classBuffer1.println((CharSequence) stringBuffer0);
      ClassBuffer classBuffer3 = classBuffer2.println((Object) null);
      ClassBuffer classBuffer4 = classBuffer3.append("u[");
      classBuffer4.setSuperClass("package");
      classBuffer2.privacy = 4;
      classBuffer1.println((Object) stringBuffer0);
      ClassBuffer classBuffer5 = classBuffer4.append(3);
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      charArray0[1] = 'Q';
      charArray0[2] = '/';
      charArray0[3] = 'Z';
      charArray0[4] = 'B';
      charArray0[5] = '|';
      charArray0[6] = 'u';
      charArray0[7] = 'A';
      classBuffer5.println(charArray0);
      classBuffer5.indentln((Object) classBuffer1);
      classBuffer1.indentln((String) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      assertNull(classBuffer0.getSimpleName());
      
      classBuffer0.target = null;
      classBuffer0.toString();
      // Undeclared exception!
      try { 
        classBuffer0.append((CharSequence) null, 30, 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("$!\"ovTO{HD%WaCMir");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.append("static ");
      char[] charArray0 = new char[1];
      charArray0[0] = 'H';
      ClassBuffer classBuffer2 = classBuffer1.println(charArray0);
      PrintBuffer.PrintStack printBuffer_PrintStack0 = classBuffer1.head;
      PrintBuffer.PrintStack printBuffer_PrintStack1 = printBuffer_PrintStack0.push("$!\"ovTO{HD%WaCMir", classBuffer1);
      classBuffer2.append((Object) ",]Bs!I15z");
      classBuffer1.tail = printBuffer_PrintStack1;
      ClassBuffer classBuffer3 = classBuffer2.createInnerClass("$!\"ovTO{HD%WaCMir");
      classBuffer3.indentln((CharSequence) null);
      ClassBuffer classBuffer4 = classBuffer2.indentln((CharSequence) null);
      // Undeclared exception!
      try { 
        classBuffer4.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.target = null;
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("<\bG6*?d>A{");
      // Undeclared exception!
      try { 
        classBuffer0.append(')');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.target = null;
      classBuffer0.toString();
      // Undeclared exception!
      try { 
        classBuffer0.append((Object) "  interface null {\nnull\n  }\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.PrintBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.println((Object) null);
      CharBuffer charBuffer0 = CharBuffer.allocate(4701);
      ClassBuffer classBuffer2 = classBuffer1.append((CharSequence) charBuffer0, 4701, 4701);
      char[] charArray0 = new char[4];
      classBuffer0.privacy = 4701;
      charArray0[0] = 'B';
      charArray0[1] = '&';
      charArray0[2] = '~';
      charArray0[3] = ' ';
      ClassBuffer classBuffer3 = classBuffer2.append(charArray0);
      ClassBuffer classBuffer4 = classBuffer3.append((double) 4701);
      ClassBuffer classBuffer5 = classBuffer4.outdent();
      classBuffer5.toString();
      classBuffer3.append((Object) sourceBuilder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("Q{");
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.setLinesToSkip((-717));
      ClassBuffer classBuffer0 = sourceBuilder1.getClassBuffer();
      char[] charArray0 = new char[2];
      sourceBuilder1.setLinesToSkip((-717));
      charArray0[0] = 'd';
      charArray0[1] = 'T';
      classBuffer0.setSuperClass("?nLg");
      ClassBuffer classBuffer1 = classBuffer0.append(charArray0);
      classBuffer1.indentln((Object) sourceBuilder0);
      ClassBuffer classBuffer2 = classBuffer1.indentln((Object) "Q{");
      sourceBuilder0.addBuffer(classBuffer1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Q{";
      stringArray0[1] = "S($QvJ";
      stringArray0[2] = "Q{";
      stringArray0[3] = "Q{";
      ClassBuffer classBuffer3 = classBuffer2.addGenerics(stringArray0);
      classBuffer3.append(true);
      classBuffer1.indentln("Q{");
      classBuffer3.append('D');
      classBuffer0.addInterfaces(stringArray0);
      classBuffer2.append((-717));
      Object object0 = new Object();
      classBuffer3.println(object0);
      ClassBuffer classBuffer4 = classBuffer0.append((CharSequence) "S($QvJ");
      ClassBuffer classBuffer5 = classBuffer1.append('d');
      classBuffer5.getSuperClass();
      classBuffer4.addInterfaces(stringArray0);
      classBuffer0.indent();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append('2');
      ClassBuffer classBuffer2 = classBuffer1.indentln((CharSequence) null);
      ClassBuffer classBuffer3 = classBuffer2.println((Object) ".gH65%`y=}");
      ClassBuffer classBuffer4 = classBuffer3.indentln((Object) classBuffer0);
      ClassBuffer classBuffer5 = classBuffer4.println(" (");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "}-*/;{";
      stringArray0[1] = " (";
      stringArray0[2] = ".gH65%`y=}";
      stringArray0[3] = ".gH65%`y=}";
      stringArray0[4] = ".gH65%`y=}";
      stringArray0[5] = ".gH65%`y=}";
      classBuffer1.println((CharSequence) ".gH65%`y=}");
      stringArray0[6] = " (";
      classBuffer5.addInterfaces(stringArray0);
      ClassBuffer classBuffer6 = classBuffer2.append('F');
      char[] charArray0 = new char[0];
      classBuffer6.println(charArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "5hE";
      ClassBuffer classBuffer1 = classBuffer0.addGenerics(stringArray0);
      assertSame(classBuffer0, classBuffer1);
      
      char[] charArray0 = new char[7];
      classBuffer0.setSimpleName("5hE");
      charArray0[0] = 'G';
      charArray0[1] = '{';
      charArray0[2] = '1';
      charArray0[3] = 'f';
      charArray0[4] = ']';
      charArray0[5] = 'g';
      charArray0[6] = '!';
      classBuffer0.append(charArray0);
      classBuffer1.toString();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String string0 = classBuffer0.toString();
      assertEquals("  interface null {\n\n  }\n", string0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "  interface null {\n\n  }\n";
      classBuffer0.indent();
      stringArray0[1] = "  interface null {\n\n  }\n";
      classBuffer0.addInterfaces(stringArray0);
      classBuffer0.toString();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      Object object0 = new Object();
      char[] charArray0 = new char[0];
      ClassBuffer classBuffer1 = classBuffer0.println(charArray0);
      classBuffer0.append(object0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " JyLin1i,5=b1`(`8";
      ClassBuffer classBuffer2 = classBuffer0.addGenerics(stringArray0);
      classBuffer2.append((Object) classBuffer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("<\bG6*?>A{");
      classBuffer0.println((Object) sourceBuilder0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append('0');
      Object object0 = new Object();
      ClassBuffer classBuffer2 = classBuffer0.append(object0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " JyLin1i,5=b1`(`8";
      classBuffer1.addToBeginning(classBuffer0);
      ClassBuffer classBuffer3 = classBuffer2.createInnerClass(" JyLin1i,5=b1`(`8");
      classBuffer3.footer();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "ht^[&ubqd#em3";
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("ht^[&ubqd#em3");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.indentln((CharSequence) "ht^[&ubqd#em3");
      Object object0 = new Object();
      classBuffer0.println(object0);
      classBuffer1.addToEnd(classBuffer0);
      ClassBuffer classBuffer2 = classBuffer1.println("interface ");
      String string1 = "2";
      ClassBuffer classBuffer3 = classBuffer2.println((Object) "2");
      classBuffer0.setSuperClass("</6,4RJ{pJ2@/sKy66");
      // Undeclared exception!
      try { 
        classBuffer3.indentln((Object) classBuffer1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.createInnerClass("#&oV;<*IEz9{");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("$54`y}");
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.setPackage("$54`y}");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder1);
      ClassBuffer classBuffer1 = classBuffer0.append('q');
      ClassBuffer classBuffer2 = classBuffer1.outdent();
      classBuffer2.indentln("$54`y}");
      ClassBuffer classBuffer3 = classBuffer2.append((-1021.659082989));
      classBuffer3.println((Object) sourceBuilder1);
      classBuffer1.append((CharSequence) "$54`y}");
      classBuffer1.append((CharSequence) "$54`y}");
      String string0 = classBuffer1.getSimpleName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String string0 = classBuffer0.getSimpleName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>(":\"S&zW");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.setDefinition("uUj'qmu`f~s_", false);
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.addBuffer(classBuffer1);
      ClassBuffer classBuffer2 = sourceBuilder1.getClassBuffer();
      char[] charArray0 = new char[1];
      sourceBuilder0.getImports();
      classBuffer1.indentln(charArray0);
      ClassBuffer classBuffer3 = classBuffer0.indent();
      ClassBuffer classBuffer4 = classBuffer3.append(0);
      classBuffer4.println("(H1:--Ar %iYk");
      ClassBuffer classBuffer5 = classBuffer2.append((CharSequence) "uUj'qmu`f~s_");
      classBuffer5.append((CharSequence) "(H1:--Ar %iYk");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "uUj'qmu`f~s_";
      stringArray0[1] = "(H1:--Ar %iYk";
      stringArray0[2] = "uUj'qmu`f~s_";
      classBuffer4.addGenerics(stringArray0);
      ClassBuffer classBuffer6 = classBuffer4.createInnerClass("^YrVYr8U");
      assertEquals("^YrVYr8U", classBuffer6.getSimpleName());
      
      classBuffer5.getSimpleName();
      String string0 = classBuffer0.footer();
      assertEquals("\n    }\n", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("O).&Yl");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.append('\"');
      classBuffer0.footer();
      classBuffer1.addToBeginning(classBuffer0);
      classBuffer1.append(2200);
      // Undeclared exception!
      try { 
        classBuffer0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.addInterfaces((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.createInnerClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append("6 1~w8HgN`pq|Zd<Z");
      // Undeclared exception!
      try { 
        classBuffer1.setDefinition("6 1~w8HgN`pq|Zd<Z", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "5hE";
      // Undeclared exception!
      try { 
        classBuffer0.addInterfaces(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>(":\"S&zW");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.setDefinition("uUj'qmu`f~s_", false);
      classBuffer1.println();
      ClassBuffer classBuffer2 = classBuffer0.println(";");
      classBuffer2.footer();
      classBuffer1.addToBeginning(classBuffer2);
      ClassBuffer classBuffer3 = classBuffer2.append(1358);
      ClassBuffer classBuffer4 = classBuffer3.append(false);
      char[] charArray0 = new char[0];
      ClassBuffer classBuffer5 = classBuffer3.println(charArray0);
      classBuffer4.indent();
      classBuffer5.append(";");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "uUj'qmu`f~s_";
      stringArray0[1] = "uUj'qmu`f~s_";
      stringArray0[2] = "uUj'qmu`f~s_";
      stringArray0[3] = ":\"S&zW";
      stringArray0[4] = ";";
      stringArray0[5] = "\n  }\n";
      classBuffer0.addInterfaces(stringArray0);
      classBuffer4.addInterfaces(stringArray0);
      classBuffer5.addInterfaces(stringArray0);
      assertNull(classBuffer5.getSuperClass());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      Object object0 = new Object();
      ClassBuffer classBuffer1 = classBuffer0.println();
      ClassBuffer classBuffer2 = classBuffer1.append((-658.0));
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = 'g';
      boolean boolean0 = true;
      classBuffer1.println("  ");
      String string0 = "Infinite recursion!";
      // Undeclared exception!
      try { 
        classBuffer2.setDefinition("Infinite recursion!", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous class definition in Infinite recursion!
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      SourceBuilder<String> sourceBuilder0 = null;
      try {
        sourceBuilder0 = new SourceBuilder<String>("WPDqEU|.,WI: U$T51");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous class definition in WPDqEU|.,WI: U$T51
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("extends ");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.createInnerClass("extends ");
      ClassBuffer classBuffer2 = classBuffer1.println();
      ClassBuffer classBuffer3 = classBuffer2.append(true);
      ClassBuffer classBuffer4 = classBuffer3.println();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "extends ";
      ClassBuffer classBuffer5 = classBuffer2.addGenerics(stringArray0);
      ClassBuffer classBuffer6 = classBuffer5.createInnerClass("O|A>A");
      assertEquals("extends", classBuffer5.getSimpleName());
      assertNotSame(classBuffer6, classBuffer4);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      Object object0 = new Object();
      ClassBuffer classBuffer1 = classBuffer0.println(object0);
      ClassBuffer classBuffer2 = classBuffer1.append((-658.0));
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = 'g';
      charArray0[2] = '#';
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = 'g';
      classBuffer2.append(charArray0, 2, 4);
      ClassBuffer classBuffer3 = classBuffer2.append(0);
      char[] charArray1 = new char[9];
      charArray1[0] = '[';
      charArray1[1] = '#';
      charArray1[2] = 'g';
      charArray1[3] = '#';
      charArray1[4] = '#';
      charArray1[5] = '#';
      charArray1[6] = '#';
      charArray1[7] = '#';
      charArray1[8] = 'g';
      ClassBuffer classBuffer4 = classBuffer1.println(charArray1);
      assertSame(classBuffer4, classBuffer3);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.setDefinition((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        classBuffer0.addInterfaces(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("O).&Yl");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.append('\"');
      classBuffer0.footer();
      classBuffer1.addToBeginning(classBuffer0);
      ClassBuffer classBuffer2 = classBuffer1.append(2200);
      ClassBuffer classBuffer3 = classBuffer2.append(true);
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      ClassBuffer classBuffer4 = classBuffer3.println(charArray0);
      ClassBuffer classBuffer5 = classBuffer4.indent();
      String[] stringArray0 = new String[6];
      classBuffer4.append("\n  }\n");
      stringArray0[0] = "O).&Yl";
      stringArray0[1] = "O).&Yl";
      stringArray0[2] = "O).&Yl";
      stringArray0[3] = "O).&Yl";
      stringArray0[4] = "O).&Yl";
      stringArray0[5] = "O).&Yl";
      classBuffer5.addInterfaces(stringArray0);
      classBuffer5.addInterfaces(stringArray0);
      assertSame(classBuffer1, classBuffer5);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".K}O?jbi.B8rl";
      classBuffer0.append(4);
      ClassBuffer classBuffer1 = classBuffer0.addGenerics(stringArray0);
      classBuffer1.addInterfaces(stringArray0);
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>();
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = 'p';
      charArray0[3] = ' ';
      ClassBuffer classBuffer1 = classBuffer0.append(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ClassBuffer classBuffer2 = classBuffer1.append((CharSequence) charBuffer0);
      ClassBuffer classBuffer3 = classBuffer2.indentln(charArray0);
      ClassBuffer classBuffer4 = classBuffer3.indent();
      ClassBuffer classBuffer5 = classBuffer4.append((double) 0);
      classBuffer4.println();
      classBuffer2.setSuperClass("F|,0");
      ClassBuffer classBuffer6 = classBuffer5.indent();
      ClassBuffer classBuffer7 = classBuffer5.indent();
      classBuffer7.append(true);
      Object object0 = new Object();
      classBuffer0.append((-186));
      classBuffer7.indent = "F|,0";
      ClassBuffer classBuffer8 = classBuffer6.append(object0);
      classBuffer8.println((CharSequence) "F|,0");
      classBuffer7.append(charArray0);
      classBuffer6.append(0.0);
      String string0 = classBuffer5.footer();
      assertEquals("\nF|,0}\n", string0);
      assertEquals("F|,0", classBuffer5.getSuperClass());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.setSuperClass(".");
      String string0 = classBuffer0.toString();
      assertEquals("  interface null {\n\n  }\n", string0);
      assertEquals(".", classBuffer0.getSuperClass());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>(".");
      ClassBuffer classBuffer0 = sourceBuilder0.getClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.indentln("tf;~D?S7eP&");
      ClassBuffer classBuffer2 = classBuffer1.append('W');
      PrintBuffer printBuffer0 = classBuffer1.addToBeginning(classBuffer2);
      classBuffer2.indent = ".";
      classBuffer2.setSuperClass("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      charArray0[1] = 'H';
      charArray0[2] = 'W';
      Object object0 = new Object();
      ClassBuffer classBuffer3 = classBuffer1.println("");
      sourceBuilder0.setPayload(object0);
      charArray0[3] = 'W';
      charArray0[4] = 'W';
      charArray0[5] = 'W';
      ClassBuffer classBuffer4 = classBuffer1.println(charArray0);
      ClassBuffer classBuffer5 = classBuffer4.indentln("");
      classBuffer5.addToEnd(classBuffer3);
      ClassBuffer classBuffer6 = classBuffer4.indent();
      // Undeclared exception!
      try { 
        classBuffer6.indentln((Object) printBuffer0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.addToBeginning((PrintBuffer) null);
      String string0 = classBuffer0.toString();
      assertEquals("  interface null {\n\n  }\n", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.indentln((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("<\bG6m*?>t{{");
      assertNull(sourceBuilder0.getRepackage());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String string0 = classBuffer0.getSuperClass();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append(1858.0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'i';
      charArray0[1] = '|';
      charArray0[2] = '4';
      charArray0[3] = 'n';
      charArray0[4] = 'o';
      charArray0[5] = 'C';
      charArray0[6] = '+';
      charArray0[7] = 'o';
      charArray0[8] = 'U';
      ClassBuffer classBuffer2 = classBuffer1.println(charArray0);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = new StringBuilder(stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.insert(0, 0.0F);
      ClassBuffer classBuffer3 = classBuffer2.println((CharSequence) stringBuilder2);
      ClassBuffer classBuffer4 = classBuffer3.append(0L);
      String string0 = classBuffer4.getSuperClass();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer((SourceBuilder<?>) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'A';
      charArray0[1] = 'H';
      charArray0[2] = '9';
      charArray0[3] = ',';
      charArray0[4] = 'a';
      charArray0[5] = '`';
      charArray0[6] = 'a';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ClassBuffer classBuffer1 = classBuffer0.append((CharSequence) charBuffer0);
      ClassBuffer classBuffer2 = classBuffer1.println("\"x'8-@8lGp*%#\")Q");
      ClassBuffer classBuffer3 = classBuffer2.append(1.0);
      // Undeclared exception!
      try { 
        classBuffer3.append((CharSequence) "\"x'8-@8lGp*%#\")Q", 1492, (-4942));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 1492, end -4942, length 17
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.outdent();
      assertNull(classBuffer1.getSuperClass());
      
      ClassBuffer classBuffer2 = classBuffer1.println((Object) classBuffer0);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classBuffer2.append((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.createMethod("f");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("EM^y]!Dst=");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.append('(');
      ClassBuffer classBuffer2 = classBuffer1.println((CharSequence) "EM^y]!Dst=");
      ClassBuffer classBuffer3 = classBuffer2.println("EM^y]!Dst=");
      ClassBuffer classBuffer4 = classBuffer3.indentln((Object) classBuffer2);
      ClassBuffer classBuffer5 = classBuffer4.append(1);
      // Undeclared exception!
      try { 
        classBuffer5.createMethod("EM^y]!Dst=");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.println("  ");
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.createInnerClass("final ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition final 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      char[] charArray0 = new char[0];
      ClassBuffer classBuffer1 = classBuffer0.println(charArray0);
      ClassBuffer classBuffer2 = classBuffer1.append(313);
      String string0 = ";";
      ClassBuffer classBuffer3 = classBuffer2.createInnerClass(";");
      classBuffer1.toString();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";";
      classBuffer3.println((CharSequence) "  interface null {\n  \n313    interface ; {\n\n  }\n");
      stringArray0[1] = ";";
      stringArray0[2] = "";
      PrintBuffer.PrintStack printBuffer_PrintStack0 = classBuffer1.head;
      classBuffer3.tail = printBuffer_PrintStack0;
      ClassBuffer classBuffer4 = classBuffer3.addGenerics(stringArray0);
      ClassBuffer classBuffer5 = classBuffer4.outdent();
      // Undeclared exception!
      try { 
        classBuffer5.createMethod("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.addToBeginning((PrintBuffer) null);
      classBuffer0.addToBeginning(classBuffer0);
      ClassBuffer classBuffer1 = new ClassBuffer();
      assertNull(classBuffer1.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]]4>ID&,>!C>O[U.";
      ClassBuffer classBuffer1 = classBuffer0.addGenerics(stringArray0);
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[0];
      ClassBuffer classBuffer1 = classBuffer0.addGenerics(stringArray0);
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.indentln((Object) null);
      ClassBuffer classBuffer2 = classBuffer1.append((-990.17F));
      char[] charArray0 = new char[3];
      charArray0[0] = 'A';
      classBuffer2.append((-990.17F));
      charArray0[1] = '&';
      charArray0[2] = '(';
      ClassBuffer classBuffer3 = classBuffer2.append(charArray0);
      classBuffer3.indent();
      ClassBuffer classBuffer4 = classBuffer0.outdent();
      classBuffer1.addToBeginning(classBuffer4);
      classBuffer0.println();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "qGemPmq/nOm";
      stringArray0[1] = "";
      stringArray0[2] = "u,+X0z)p";
      stringArray0[3] = "implements ";
      stringArray0[4] = "Did not have a class name in class definition ";
      stringArray0[5] = "!";
      stringArray0[6] = "X}T@C0K:+u=cLhqNJ:Z";
      stringArray0[7] = "";
      stringArray0[8] = "#&";
      ClassBuffer classBuffer5 = classBuffer2.addGenerics(stringArray0);
      assertSame(classBuffer2, classBuffer5);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = (ClassBuffer)classBuffer0.addToBeginning((PrintBuffer) null);
      assertNull(classBuffer1.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.indent();
      assertSame(classBuffer0, classBuffer1);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.toString();
      char[] charArray0 = new char[0];
      ClassBuffer classBuffer1 = classBuffer0.indentln(charArray0);
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      char[] charArray0 = new char[9];
      charArray0[0] = '\\';
      charArray0[1] = 'n';
      charArray0[2] = 'm';
      charArray0[3] = 'E';
      charArray0[4] = '3';
      charArray0[5] = '!';
      charArray0[6] = '1';
      charArray0[7] = '[';
      charArray0[8] = '8';
      ClassBuffer classBuffer1 = classBuffer0.indentln(charArray0);
      ClassBuffer classBuffer2 = classBuffer1.append(charArray0);
      classBuffer2.indent();
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = new StringBuilder(stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.insert(0, true);
      // Undeclared exception!
      try { 
        stringBuilder2.insert(0, (CharSequence) stringBuilder1, (-274), (-816));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -274, end -816, length 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.toString();
      // Undeclared exception!
      try { 
        classBuffer0.append((CharSequence) "  interface null {\n\n  }\n", 1613, 1613);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 1613, end 1613, length 24
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>();
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      ClassBuffer classBuffer1 = classBuffer0.append((CharSequence) stringBuffer0);
      ClassBuffer classBuffer2 = classBuffer1.append('x');
      ClassBuffer classBuffer3 = classBuffer2.append((CharSequence) stringBuffer0, 0, 0);
      ClassBuffer classBuffer4 = classBuffer3.append("rT>H!");
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = 'V';
      ClassBuffer classBuffer5 = classBuffer4.append(charArray0);
      ClassBuffer classBuffer6 = classBuffer5.outdent();
      assertSame(classBuffer3, classBuffer6);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append(1873L);
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.outdent();
      Object object0 = new Object();
      ClassBuffer classBuffer2 = classBuffer1.println(object0);
      long long0 = (-2224L);
      classBuffer2.append((-2224L));
      int int0 = (-200);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-200));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -200
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.createMethod("class ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition class 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        classBuffer0.createMethod(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.toString();
      ClassBuffer classBuffer1 = classBuffer0.indentln((CharSequence) "  interface null {\n\n  }\n");
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append((Object) null);
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append((-168.38));
      assertSame(classBuffer0, classBuffer1);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append(false);
      assertSame(classBuffer0, classBuffer1);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("}-*/;");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.append(2020);
      ClassBuffer classBuffer2 = classBuffer1.append((Object) classBuffer0);
      ClassBuffer classBuffer3 = classBuffer2.setDefinition("T+|uFZ", false);
      ClassBuffer classBuffer4 = classBuffer3.indentln((CharSequence) "}-*/;");
      ClassBuffer classBuffer5 = classBuffer4.println((Object) "");
      ClassBuffer classBuffer6 = classBuffer5.setDefinition("}-*/;", true);
      classBuffer1.append(false);
      classBuffer6.append(426.31359);
      // Undeclared exception!
      try { 
        classBuffer3.createMethod("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.toString();
      classBuffer0.println();
      String string0 = null;
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classBuffer0.append(charArray0, (-1852), 1578);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -1852, end -274, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.append((char[]) null, (-614), (-614));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      char[] charArray0 = new char[9];
      charArray0[0] = ',';
      charArray0[1] = '3';
      charArray0[2] = '-';
      charArray0[3] = 'U';
      charArray0[4] = 'T';
      charArray0[5] = '3';
      charArray0[6] = '*';
      charArray0[7] = '/';
      charArray0[8] = 'X';
      // Undeclared exception!
      try { 
        classBuffer0.append(charArray0, (-582), 3012);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -582, end 2430, length 9
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".K}O?jbi.B8rl";
      ClassBuffer classBuffer1 = classBuffer0.addGenerics(stringArray0);
      assertNull(classBuffer1.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      // Undeclared exception!
      try { 
        classBuffer0.println((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.createInnerClass(", ");
      ClassBuffer classBuffer2 = classBuffer1.indentln((Object) classBuffer1);
      assertNotSame(classBuffer2, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.setSimpleName("i|~6.TsLAhu4/x=p");
      ClassBuffer classBuffer1 = classBuffer0.indentln((Object) classBuffer0);
      assertEquals("i|~6.TsLAhu4/x=p", classBuffer1.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append('9');
      assertNull(classBuffer1.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.println((Object) "8lBqB Tbdk[WYH");
      assertNull(classBuffer1.getSuperClass());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        classBuffer0.addGenerics(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>(":\"S&zW");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      ClassBuffer classBuffer1 = classBuffer0.setDefinition("uUj'qmu`f~s_", false);
      SourceBuilder<Object> sourceBuilder1 = sourceBuilder0.addBuffer(classBuffer1);
      ClassBuffer classBuffer2 = sourceBuilder1.getClassBuffer();
      char[] charArray0 = new char[1];
      charArray0[0] = 'D';
      sourceBuilder1.getImports();
      ClassBuffer classBuffer3 = classBuffer2.indentln(charArray0);
      ClassBuffer classBuffer4 = classBuffer3.append(0);
      classBuffer4.println(":\"S&zW");
      classBuffer0.append((CharSequence) "uUj'qmu`f~s_");
      String[] stringArray0 = new String[8];
      stringArray0[0] = ":\"S&zW";
      stringArray0[1] = ":\"S&zW";
      stringArray0[2] = "uUj'qmu`f~s_";
      stringArray0[3] = "uUj'qmu`f~s_";
      stringArray0[4] = "";
      stringArray0[5] = "uUj'qmu`f~s_";
      stringArray0[6] = ":\"S&zW";
      stringArray0[7] = ":\"S&zW";
      classBuffer3.addGenerics(stringArray0);
      ClassBuffer classBuffer5 = classBuffer0.createInnerClass("<\bG6m*?>t");
      assertEquals("uUj'qmu`f~s_", classBuffer0.getSimpleName());
      assertEquals("t", classBuffer5.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append((-1451));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "!sN&6R?W&K5_ul!Z=bZ";
      stringArray0[1] = "o; :FO#aA#S";
      stringArray0[2] = "  ";
      stringArray0[3] = "> ";
      stringArray0[4] = ",";
      stringArray0[5] = "d";
      stringArray0[6] = ",{";
      stringArray0[7] = "eOfj_DS=nnnH";
      stringArray0[8] = "r)UZd>JQcyg $4&IK6f";
      classBuffer1.addInterfaces(stringArray0);
      String[] stringArray1 = new String[3];
      classBuffer0.toString();
      // Undeclared exception!
      try { 
        classBuffer0.addInterfaces(stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      char[] charArray0 = new char[2];
      charArray0[0] = '7';
      charArray0[1] = 'Q';
      ClassBuffer classBuffer1 = classBuffer0.println(charArray0);
      ClassBuffer classBuffer2 = classBuffer0.append(charArray0);
      classBuffer2.println();
      ClassBuffer classBuffer3 = classBuffer1.setDefinition(".", true);
      ClassBuffer classBuffer4 = classBuffer3.println((Object) ".");
      ClassBuffer classBuffer5 = classBuffer4.append((CharSequence) ".");
      classBuffer3.setSimpleName((String) null);
      ClassBuffer classBuffer6 = classBuffer5.outdent();
      classBuffer6.append('s');
      classBuffer5.toString();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".";
      stringArray0[1] = "interface null {\n  7Q\n7Q\n  .\n.s";
      stringArray0[2] = null;
      stringArray0[3] = "{b";
      stringArray0[4] = "interface null {\n  7Q\n7Q\n  .\n.s";
      stringArray0[5] = "";
      stringArray0[6] = "interface null {\n  7Q\n7Q\n  .\n.s";
      stringArray0[7] = ".";
      stringArray0[8] = ".";
      // Undeclared exception!
      try { 
        classBuffer1.addGenerics(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append((CharSequence) null);
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.toString();
      // Undeclared exception!
      try { 
        classBuffer0.append((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.indentln((Object) "5hE");
      assertNull(classBuffer1.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.println((CharSequence) null);
      assertNull(classBuffer1.getSimpleName());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.toString();
      char[] charArray0 = new char[0];
      ClassBuffer classBuffer1 = classBuffer0.append(charArray0);
      assertNull(classBuffer1.getSuperClass());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.indentln("_z.");
      assertSame(classBuffer0, classBuffer1);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append("2.J_*t2]");
      assertSame(classBuffer1, classBuffer0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      String string0 = "e]P\\zX#vE|R`vjJf!";
      ClassBuffer classBuffer1 = classBuffer0.indentln((Object) "e]PzX#vE|R`vjJf!");
      ClassBuffer classBuffer2 = classBuffer1.indentln("e]PzX#vE|R`vjJf!");
      ClassBuffer classBuffer3 = classBuffer2.println((CharSequence) "e]PzX#vE|R`vjJf!");
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classBuffer3.append((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.println();
      assertSame(classBuffer0, classBuffer1);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      classBuffer0.toString();
      // Undeclared exception!
      try { 
        classBuffer0.setDefinition("  interface null {\n\n  }\n", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Found ambiguous class definition in null 
         // 
         //   }
         //
         verifyException("wetheinter.net.dev.io.ClassBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("uV}");
      assertNull(sourceBuilder0.getRepackage());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append(0);
      assertSame(classBuffer0, classBuffer1);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      String string0 = "/uw!hNWX";
      SourceBuilder<Object> sourceBuilder0 = new SourceBuilder<Object>("/uw!hNWX");
      ClassBuffer classBuffer0 = new ClassBuffer(sourceBuilder0);
      sourceBuilder0.getLinesToSkip();
      ClassBuffer classBuffer1 = classBuffer0.append(46);
      classBuffer1.append((float) 46);
      // Undeclared exception!
      try { 
        classBuffer1.setDefinition("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      ClassBuffer classBuffer1 = classBuffer0.append(2008.666F);
      assertSame(classBuffer0, classBuffer1);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ClassBuffer classBuffer0 = new ClassBuffer();
      SourceBuilder<String> sourceBuilder0 = new SourceBuilder<String>("o+)*v");
      assertNull(sourceBuilder0.getRepackage());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      String string0 = "final ";
      SourceBuilder<String> sourceBuilder0 = null;
      try {
        sourceBuilder0 = new SourceBuilder<String>("final ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Did not have a class name in class definition final 
         //
         verifyException("wetheinter.net.dev.io.JavaMetadata", e);
      }
  }
}
