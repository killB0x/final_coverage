/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:04:24 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.WarcDigest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcDigest_ESTest extends WarcDigest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WarcDigest warcDigest0 = null;
      try {
        warcDigest0 = new WarcDigest("sha", "shaaaaaaaaaaaaaaaaaaaaaa===");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Input byte array has wrong 4-byte ending unit
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WarcDigest.base32Encode("org.netpreserve.jwarc.WarcTruncationReason", "sha");
      assertEquals("org.netpreserve.jwarc.WarcTruncationReason", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)63;
      WarcDigest warcDigest0 = new WarcDigest("sha", byteArray0);
      String string0 = warcDigest0.hex();
      assertEquals("000000003f", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)117;
      WarcDigest warcDigest0 = new WarcDigest("sha8t'`", byteArray0);
      assertEquals("OUAAAAA=", warcDigest0.base32());
      assertEquals("sha8t'`", warcDigest0.algorithm());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      String string0 = WarcDigest.hexEncode(byteArray0);
      assertEquals("00000000", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = WarcDigest.hexEncode(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = WarcDigest.hexDecode(":Z\"'z\u0000");
      assertArrayEquals(new byte[] {(byte) (-17), (byte) (-17), (byte) (-17)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = WarcDigest.hexDecode("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("uv}~hqLF7", "");
      String string0 = warcDigest0.hex();
      assertEquals("", string0);
      assertEquals("uv}~hqLF7", warcDigest0.algorithm());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageDigest messageDigest0 = WarcDigest.getDigester("sha");
      assertEquals("sha Message Digest from SUN, <initialized>\n", messageDigest0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("sha", "sha");
      warcDigest0.getDigester();
      assertEquals("sha", warcDigest0.base32());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      WarcDigest warcDigest0 = new WarcDigest("", byteArray0);
      byte[] byteArray1 = warcDigest0.bytes();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(9, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("uv}~hqLF7", "");
      byte[] byteArray0 = warcDigest0.bytes();
      assertEquals(0, byteArray0.length);
      assertEquals("uv}~hqLF7", warcDigest0.algorithm());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = WarcDigest.base64Decode("");
      String string0 = WarcDigest.base64Encode(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("sba", "sba");
      String string0 = warcDigest0.base64();
      assertEquals("kEA=", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("uv}~hqLF7", "");
      String string0 = warcDigest0.base64();
      assertEquals("", string0);
      assertEquals("uv}~hqLF7", warcDigest0.algorithm());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      String string0 = WarcDigest.base32Encode(byteArray0);
      assertEquals("AAAAAAAAAAAA====", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = WarcDigest.base32Encode(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WarcDigest.base32Encode((String) null, "]");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WarcDigest.base32Encode("", "TIME");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = WarcDigest.base32Decode("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("z0", (String) null);
      String string0 = warcDigest0.base32();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("shab(hia", "shab(hia");
      String string0 = warcDigest0.base32();
      assertEquals("shab(hia", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("uv}~hqLF7", "");
      assertEquals("", warcDigest0.base32());
      
      String string0 = warcDigest0.base16();
      assertEquals("", string0);
      assertEquals("uv}~hqLF7", warcDigest0.algorithm());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      WarcDigest warcDigest0 = new WarcDigest("@!E`=hm/", byteArray0);
      String string0 = warcDigest0.algorithm();
      assertEquals("@!E`=hm/", string0);
      assertEquals("AAAAAAAAAAAA====", warcDigest0.base32());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.hexEncode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.hexDecode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("RTevuxXo", (String) null);
      // Undeclared exception!
      try { 
        warcDigest0.hex();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("sn*", "sn*");
      // Undeclared exception!
      try { 
        warcDigest0.hex();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid base32 character: 42 '*'
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.getDigester((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null algorithm name
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("/x,'B.>&", (String) null);
      // Undeclared exception!
      try { 
        warcDigest0.bytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base64Encode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Base64$Encoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base64Decode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base64Decode("N[$+b6t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal base64 character 5b
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("O1dtDrES8", (String) null);
      // Undeclared exception!
      try { 
        warcDigest0.base64();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base32Encode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base32Encode((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null algorithm name
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base32Encode("Invalid base32 character: ", "sha");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal base64 character 20
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base32Decode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.base32Decode(" plb(7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid base32 character: 32 ' '
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("NII9q(I+h=,Ox.Ak", (String) null);
      // Undeclared exception!
      try { 
        warcDigest0.base16();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("expected ", "expected ");
      // Undeclared exception!
      try { 
        warcDigest0.base16();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid base32 character: 32 ' '
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      WarcDigest warcDigest0 = null;
      try {
        warcDigest0 = new WarcDigest((MessageDigest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WarcDigest warcDigest0 = null;
      try {
        warcDigest0 = new WarcDigest((String) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null algorithm name
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      WarcDigest warcDigest0 = null;
      try {
        warcDigest0 = new WarcDigest((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null algorithm name
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      WarcDigest warcDigest0 = null;
      try {
        warcDigest0 = new WarcDigest((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      try { 
        WarcDigest.getDigester("753575a6");
        fail("Expecting exception: NoSuchAlgorithmException");
      
      } catch(NoSuchAlgorithmException e) {
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      try { 
        WarcDigest.getDigester("shaiha");
        fail("Expecting exception: NoSuchAlgorithmException");
      
      } catch(NoSuchAlgorithmException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      WarcDigest warcDigest0 = new WarcDigest("@!E`=hm/", byteArray0);
      String string0 = warcDigest0.prefixedBase32();
      assertEquals("@!E`=hm/:AAAAAAAAAAAA====", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("sba", "sba");
      WarcDigest warcDigest1 = new WarcDigest("sba", "sba");
      boolean boolean0 = warcDigest0.equals(warcDigest1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("org.netpreserve.jwarc.WarcTunctionReason", "57X7537673X57347X75PZ37457X75H7P");
      WarcDigest warcDigest1 = new WarcDigest(":");
      boolean boolean0 = warcDigest0.equals(warcDigest1);
      assertFalse(boolean0);
      assertEquals("org.netpreserve.jwarc.WarcTunctionReason", warcDigest0.algorithm());
      assertEquals("", warcDigest1.base32());
      assertEquals("57X7537673X57347X75PZ37457X75H7P", warcDigest0.base32());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      WarcDigest warcDigest0 = new WarcDigest("sha", byteArray0);
      boolean boolean0 = warcDigest0.equals("sha");
      assertEquals("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", warcDigest0.base32());
      assertFalse(boolean0);
      assertEquals("sha", warcDigest0.algorithm());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("Lzdx}b>r<kFT]", "Lzdx}b>r<kFT]");
      boolean boolean0 = warcDigest0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", "-.#");
      boolean boolean0 = warcDigest0.equals(warcDigest0);
      assertEquals("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", warcDigest0.algorithm());
      assertEquals("-.#", warcDigest0.base32());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      WarcDigest warcDigest0 = new WarcDigest("'", "'");
      WarcDigest warcDigest1 = new WarcDigest("'", byteArray0);
      boolean boolean0 = warcDigest0.equals(warcDigest1);
      assertFalse(boolean0);
      assertEquals("AAAAAAAAAAAAA===", warcDigest1.base32());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte) (-102);
      WarcDigest warcDigest0 = new WarcDigest("sha", byteArray0);
      String string0 = warcDigest0.hex();
      assertEquals("be9a000000", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("z]o(n!", "z]o(n!");
      // Undeclared exception!
      try { 
        warcDigest0.bytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid base32 character: 125 '}'
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = WarcDigest.base32Decode("iha");
      assertArrayEquals(new byte[] {(byte)65, (byte) (-64)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcDigest.hexDecode("'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length of hex-encoded string (Base16) must be a multiple of 2, but is 1
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = WarcDigest.base32Encode("org.netpreserve.jwarc.WarcTunctionReason", "sha");
      assertEquals("57X7537673X57347X75PZ37457X75H7P", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      WarcDigest warcDigest0 = null;
      try {
        warcDigest0 = new WarcDigest("Hczvsy\"'oKtA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid WARC-Digest
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("sha%>thfd^^y?)", "sha%>thfd^^y?)");
      // Undeclared exception!
      try { 
        warcDigest0.base64();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid base32 character: 37 '%'
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WarcDigest warcDigest0 = new WarcDigest("@", byteArray0);
      String string0 = warcDigest0.base32();
      assertEquals("", string0);
      assertEquals("@", warcDigest0.algorithm());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("uv}~hqLF7", "");
      try { 
        warcDigest0.getDigester();
        fail("Expecting exception: NoSuchAlgorithmException");
      
      } catch(NoSuchAlgorithmException e) {
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      WarcDigest warcDigest0 = new WarcDigest("sha", byteArray0);
      String string0 = warcDigest0.toString();
      assertEquals("sha:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      WarcDigest warcDigest0 = new WarcDigest("", byteArray0);
      warcDigest0.algorithm();
      assertEquals("AAAAA===", warcDigest0.base32());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = WarcDigest.base64Decode("sha");
      assertEquals(2, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      WarcDigest warcDigest0 = new WarcDigest("sba", "sba");
      warcDigest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      String string0 = WarcDigest.base64Encode(byteArray0);
      assertEquals("AAAAAAAA", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      WarcDigest warcDigest0 = new WarcDigest("sha", byteArray0);
      String string0 = warcDigest0.base16();
      assertEquals("sha", warcDigest0.algorithm());
      assertEquals("000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      MessageDigest messageDigest0 = MessageDigest.getInstance("sha");
      WarcDigest warcDigest0 = new WarcDigest(messageDigest0);
      assertEquals("3I42H3S6NNFQ2MSVX7XZKYAYSCX5QBYJ", warcDigest0.base32());
  }
}
