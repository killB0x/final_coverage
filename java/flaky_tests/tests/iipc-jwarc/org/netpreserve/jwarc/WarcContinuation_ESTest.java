/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:53:26 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.MessageBody;
import org.netpreserve.jwarc.MessageHeaders;
import org.netpreserve.jwarc.MessageVersion;
import org.netpreserve.jwarc.WarcContinuation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcContinuation_ESTest extends WarcContinuation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      WarcContinuation warcContinuation0 = warcContinuation_Builder0.build();
      URI uRI0 = warcContinuation0.id();
      warcContinuation_Builder0.segmentOriginId(uRI0);
      URI uRI1 = warcContinuation0.segmentOriginId();
      assertNull(uRI1.getHost());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      URI uRI0 = MockURI.aFileURI;
      warcContinuation_Builder0.segmentOriginId(uRI0);
      MessageVersion messageVersion0 = MessageVersion.ARC_1_1;
      Map<String, List<String>> map0 = warcContinuation_Builder0.headerMap;
      MessageHeaders messageHeaders0 = new MessageHeaders(map0);
      MessageBody messageBody0 = warcContinuation_Builder0.makeBody();
      WarcContinuation warcContinuation0 = new WarcContinuation(messageVersion0, messageHeaders0, messageBody0);
      URI uRI1 = warcContinuation0.segmentOriginId();
      assertNull(uRI1.getHost());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      WarcContinuation warcContinuation0 = warcContinuation_Builder0.build();
      URI uRI0 = MockURI.URI("WARC/1.0", "Y.J`{:2UcmE@!G|3}", "zut)q", (-1), "", "WARC/1.0", "WARC/1.0");
      warcContinuation_Builder0.segmentOriginId(uRI0);
      URI uRI1 = warcContinuation0.segmentOriginId();
      assertEquals("WARC/1.0", uRI1.getRawFragment());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      WarcContinuation warcContinuation0 = warcContinuation_Builder0.build();
      warcContinuation_Builder0.setHeader("WARC-Segment-Total-Length", "tk[f");
      // Undeclared exception!
      try { 
        warcContinuation0.segmentTotalLength();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"tk[f\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.HTTP_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      WarcContinuation warcContinuation0 = new WarcContinuation(messageVersion0, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcContinuation0.segmentTotalLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcContinuation", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      WarcContinuation warcContinuation0 = warcContinuation_Builder0.build();
      // Undeclared exception!
      try { 
        warcContinuation0.segmentOriginId();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No value present
         //
         verifyException("java.util.Optional", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      WarcContinuation.Builder warcContinuation_Builder1 = warcContinuation_Builder0.segmentTotalLength((-1729L));
      assertSame(warcContinuation_Builder1, warcContinuation_Builder0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      MessageHeaders messageHeaders0 = new MessageHeaders(hashMap0);
      MessageBody messageBody0 = warcContinuation_Builder0.makeBody();
      WarcContinuation warcContinuation0 = new WarcContinuation(messageVersion0, messageHeaders0, messageBody0);
      Optional<Long> optional0 = warcContinuation0.segmentTotalLength();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      WarcContinuation.Builder warcContinuation_Builder0 = new WarcContinuation.Builder();
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = warcContinuation_Builder0.makeBody();
      WarcContinuation warcContinuation0 = new WarcContinuation(messageVersion0, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcContinuation0.segmentOriginId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcContinuation", e);
      }
  }
}
