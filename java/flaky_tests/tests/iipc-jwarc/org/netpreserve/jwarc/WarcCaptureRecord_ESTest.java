/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:50:25 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.IOException;
import java.net.InetAddress;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.channels.ReadableByteChannel;
import java.util.HashMap;
import java.util.List;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.ChunkedBody;
import org.netpreserve.jwarc.MediaType;
import org.netpreserve.jwarc.MessageBody;
import org.netpreserve.jwarc.MessageHeaders;
import org.netpreserve.jwarc.MessageVersion;
import org.netpreserve.jwarc.WarcMetadata;
import org.netpreserve.jwarc.WarcRequest;
import org.netpreserve.jwarc.WarcResponse;
import org.netpreserve.jwarc.WarcRevisit;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcCaptureRecord_ESTest extends WarcCaptureRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRevisit warcRevisit0 = new WarcRevisit(messageVersion0, messageHeaders0, messageBody0);
      Optional<InetAddress> optional0 = warcRevisit0.ipAddress();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(110);
      ChunkedBody chunkedBody0 = new ChunkedBody(messageBody0, byteBuffer0);
      WarcResponse warcResponse0 = new WarcResponse(messageVersion0, messageHeaders0, chunkedBody0);
      try { 
        warcResponse0.payloadType();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // invalid HTTP message at byte position 0: <-- HERE -->\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00...
         //
         verifyException("org.netpreserve.jwarc.HttpParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WarcRevisit warcRevisit0 = new WarcRevisit((MessageVersion) null, (MessageHeaders) null, (MessageBody) null);
      // Undeclared exception!
      try { 
        warcRevisit0.payloadType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      MessageHeaders messageHeaders0 = new MessageHeaders(hashMap0);
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ChunkedBody chunkedBody0 = new ChunkedBody((ReadableByteChannel) null, byteBuffer0);
      WarcResponse warcResponse0 = new WarcResponse(messageVersion0, messageHeaders0, chunkedBody0);
      // Undeclared exception!
      try { 
        warcResponse0.payloadType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, messageHeaders0, messageBody0);
      try { 
        warcRequest0.payloadType();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.HTTP_1_0;
      WarcMetadata warcMetadata0 = new WarcMetadata(messageVersion0, (MessageHeaders) null, (MessageBody) null);
      // Undeclared exception!
      try { 
        warcMetadata0.concurrentTo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcCaptureRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRevisit warcRevisit0 = new WarcRevisit(messageVersion0, messageHeaders0, messageBody0);
      MediaType mediaType0 = warcRevisit0.payloadType();
      assertEquals("octet-stream", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      WarcRevisit warcRevisit0 = new WarcRevisit(messageVersion0, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcRevisit0.ipAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcCaptureRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, messageHeaders0, messageBody0);
      List<URI> list0 = warcRequest0.concurrentTo();
      assertEquals(0, list0.size());
  }
}
