/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:36:22 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.IOException;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.ReadableByteChannel;
import java.nio.channels.SocketChannel;
import java.security.MessageDigest;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.DigestingMessageBody;
import org.netpreserve.jwarc.HttpRequest;
import org.netpreserve.jwarc.LengthedBody;
import org.netpreserve.jwarc.MediaType;
import org.netpreserve.jwarc.MessageBody;
import org.netpreserve.jwarc.MessageHeaders;
import org.netpreserve.jwarc.MessageVersion;
import org.netpreserve.jwarc.WarcPayload;
import org.netpreserve.jwarc.WarcRequest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcRequest_ESTest extends WarcRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("([^@]*@)?(.*?)(?::([0-9]+))?");
      MediaType mediaType0 = MediaType.HTTP_REQUEST;
      byte[] byteArray0 = new byte[2];
      warcRequest_Builder0.body(mediaType0, byteArray0);
      WarcRequest warcRequest0 = warcRequest_Builder0.build();
      try { 
        warcRequest0.payloadType();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // invalid HTTP message at byte position 0: <-- HERE -->\\x00\\x00
         //
         verifyException("org.netpreserve.jwarc.HttpParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_1;
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, (MessageHeaders) null, (MessageBody) null);
      // Undeclared exception!
      try { 
        warcRequest0.payloadType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("org.nepeserve.jwarc.WarcRequet");
      MediaType mediaType0 = MediaType.HTTP_REQUEST;
      SocketChannel socketChannel0 = SocketChannel.open();
      warcRequest_Builder0.body(mediaType0, (ReadableByteChannel) socketChannel0, 2918L);
      WarcRequest warcRequest0 = warcRequest_Builder0.build();
      // Undeclared exception!
      try { 
        warcRequest0.payload();
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_1;
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, (MessageHeaders) null, (MessageBody) null);
      // Undeclared exception!
      try { 
        warcRequest0.payload();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("org.netpreserve.jwarc.MessageHeaders");
      Map<String, List<String>> map0 = warcRequest_Builder0.headerMap;
      MessageHeaders messageHeaders0 = new MessageHeaders(map0);
      MessageBody messageBody0 = MessageBody.empty();
      MessageVersion messageVersion0 = MessageVersion.ARC_1_1;
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, messageHeaders0, messageBody0);
      MediaType mediaType0 = MediaType.HTTP_RESPONSE;
      byte[] byteArray0 = new byte[5];
      warcRequest_Builder0.body(mediaType0, byteArray0);
      try { 
        warcRequest0.payload();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("");
      byte[] byteArray0 = new byte[1];
      warcRequest_Builder0.body((MediaType) null, byteArray0);
      WarcRequest warcRequest0 = warcRequest_Builder0.build();
      try { 
        warcRequest0.http();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // invalid HTTP message at byte position 0: <-- HERE -->\\x00
         //
         verifyException("org.netpreserve.jwarc.HttpParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.ARC_1_1;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      MessageHeaders messageHeaders0 = new MessageHeaders(hashMap0);
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, messageHeaders0, (MessageBody) null);
      // Undeclared exception!
      try { 
        warcRequest0.http();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("}X]1_|g");
      warcRequest_Builder0.body((MediaType) null, (ReadableByteChannel) null, 6L);
      WarcRequest warcRequest0 = warcRequest_Builder0.build();
      // Undeclared exception!
      try { 
        warcRequest0.http();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("");
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      Map<String, List<String>> map0 = warcRequest_Builder0.headerMap;
      MessageHeaders messageHeaders0 = new MessageHeaders(map0);
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, (byte) (-86));
      HttpRequest httpRequest0 = new HttpRequest((String) null, (String) null, messageVersion0, messageHeaders0, lengthedBody0);
      WarcRequest.Builder warcRequest_Builder1 = warcRequest_Builder0.body(httpRequest0);
      WarcRequest warcRequest0 = warcRequest_Builder1.build();
      try { 
        warcRequest0.payload();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // invalid HTTP message at byte position 10: null null <-- HERE -->WARC/1.0\\r\\nContent-Length: 0\\r\\nWARC-Record...
         //
         verifyException("org.netpreserve.jwarc.HttpParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageVersion messageVersion0 = new MessageVersion("c&g6", (-1), 190);
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("c&g6");
      Map<String, List<String>> map0 = warcRequest_Builder0.headerMap;
      MessageHeaders messageHeaders0 = new MessageHeaders(map0);
      MessageBody messageBody0 = MessageBody.empty();
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, messageHeaders0, messageBody0);
      Optional<WarcPayload> optional0 = warcRequest0.payload();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageVersion messageVersion0 = new MessageVersion("pPs+IT.Ijrj#(E", 1226, 0);
      MessageBody messageBody0 = MessageBody.empty();
      DigestingMessageBody digestingMessageBody0 = new DigestingMessageBody(messageBody0, (MessageDigest) null);
      WarcRequest warcRequest0 = new WarcRequest(messageVersion0, (MessageHeaders) null, digestingMessageBody0);
      try { 
        warcRequest0.http();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URI uRI0 = MockURI.create("org.netpreserve.jwarc.WarcRequest$1");
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder(uRI0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("org.netpeserve.jwarc.WarcRequest");
      MessageVersion messageVersion0 = MessageVersion.HTTP_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      HttpRequest httpRequest0 = new HttpRequest("org.netpeserve.jwarc.WarcRequest", "org.netpeserve.jwarc.WarcRequest", messageVersion0, messageHeaders0, messageBody0);
      WarcRequest.Builder warcRequest_Builder1 = warcRequest_Builder0.body(httpRequest0);
      WarcRequest warcRequest0 = warcRequest_Builder1.build();
      warcRequest0.http();
      MediaType mediaType0 = warcRequest0.payloadType();
      assertEquals("octet-stream", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WarcRequest.Builder warcRequest_Builder0 = new WarcRequest.Builder("org.netpeserve.jwarc.WarcRequest");
      WarcRequest warcRequest0 = warcRequest_Builder0.build();
      try { 
        warcRequest0.payloadType();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.HttpRequest", e);
      }
  }
}
