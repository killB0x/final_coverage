/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:48:21 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.WarcFilterException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcFilterException_ESTest extends WarcFilterException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException("2S67", 0, "]L^-<pPa|g$_=UOr");
      int int0 = warcFilterException0.position();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException("", (-2756), "");
      int int0 = warcFilterException0.position();
      assertEquals((-2756), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException("2S67", 0, "]L^-<pPa|g$_=UOr");
      String string0 = warcFilterException0.input();
      assertEquals("]L^-<pPa|g$_=UOr", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException("\"(A6$=q=D6OyaOF~Mc.", 0, "");
      String string0 = warcFilterException0.input();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException((String) null, (-2135), (String) null);
      // Undeclared exception!
      try { 
        warcFilterException0.prettyPrint();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2135
         //
         verifyException("org.netpreserve.jwarc.WarcFilterException", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException((String) null, 113, (String) null);
      String string0 = warcFilterException0.prettyPrint();
      assertEquals("null\n                                                                                                                 ^\nError: null", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException((String) null, 113, (String) null);
      String string0 = warcFilterException0.input();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WarcFilterException warcFilterException0 = new WarcFilterException((String) null, 113, (String) null);
      int int0 = warcFilterException0.position();
      assertEquals(113, int0);
  }
}
