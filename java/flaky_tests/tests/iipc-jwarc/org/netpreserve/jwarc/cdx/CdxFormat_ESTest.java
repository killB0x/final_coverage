/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:11:09 GMT 2022
 */

package org.netpreserve.jwarc.cdx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.WarcCaptureRecord;
import org.netpreserve.jwarc.cdx.CdxFormat;
import org.netpreserve.jwarc.cdx.CdxRecord;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CdxFormat_ESTest extends CdxFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX11;
      String string0 = cdxFormat0.format((WarcCaptureRecord) null, "?N}K}l^:eJYB9ISi", (-1790L), 2977L);
      assertEquals("- - - - 200 - - - 2977 -1790 ?N}K}l^:eJYB9ISi", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX10;
      // Undeclared exception!
      try { 
        cdxFormat0.indexOf(128);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 128 out of bounds for length 128
         //
         verifyException("org.netpreserve.jwarc.cdx.CdxFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CdxFormat cdxFormat0 = new CdxFormat(" ");
      String string0 = cdxFormat0.legend();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX11;
      int int0 = cdxFormat0.indexOf(78);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX11;
      int int0 = cdxFormat0.indexOf(86);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CdxFormat cdxFormat0 = new CdxFormat(" ");
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      String string0 = cdxFormat0.format(warcCaptureRecord0, " ", (-360L), 88L, " ");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CdxFormat cdxFormat0 = new CdxFormat(" ");
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      String string0 = cdxFormat0.format(warcCaptureRecord0, "", 255L, (-1329L));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX9;
      // Undeclared exception!
      try { 
        cdxFormat0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.cdx.CdxRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CdxFormat cdxFormat0 = null;
      try {
        cdxFormat0 = new CdxFormat((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.cdx.CdxFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX10;
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      doReturn((Instant) null).when(warcCaptureRecord0).date();
      doReturn((Optional) null).when(warcCaptureRecord0).payload();
      doReturn((Optional) null).when(warcCaptureRecord0).payloadDigest();
      doReturn((String) null, (String) null).when(warcCaptureRecord0).target();
      String string0 = cdxFormat0.format(warcCaptureRecord0, "org.netpreserve.jwarc.cdx.CdxFields", (-469L), (-2620L), (String) null);
      assertEquals("- - null - 200 - - - -469 org.netpreserve.jwarc.cdx.CdxFields", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CdxFormat cdxFormat0 = new CdxFormat("M");
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      doReturn((Instant) null).when(warcCaptureRecord0).date();
      doReturn((Optional) null).when(warcCaptureRecord0).payload();
      doReturn((Optional) null).when(warcCaptureRecord0).payloadDigest();
      doReturn((String) null).when(warcCaptureRecord0).target();
      String string0 = cdxFormat0.CDX11.format(warcCaptureRecord0, "M", (-360L), (-360L), "JvV");
      assertEquals("JvV - null - 200 - - - -360 -360 M", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX11;
      int int0 = cdxFormat0.indexOf(2279);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CdxFormat cdxFormat0 = null;
      try {
        cdxFormat0 = new CdxFormat("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // CDX field names must be a single ASCII character
         //
         verifyException("org.netpreserve.jwarc.cdx.CdxFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CdxFormat cdxFormat0 = new CdxFormat("M");
      String string0 = cdxFormat0.CDX11.legend();
      assertEquals("N b a m s k r M S V g", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CdxFormat cdxFormat0 = new CdxFormat(" ");
      String string0 = cdxFormat0.toString();
      assertEquals("CdxFormat(\"\")", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CdxFormat cdxFormat0 = CdxFormat.CDX11;
      CdxRecord cdxRecord0 = cdxFormat0.CDX11.parse("");
      assertNotNull(cdxRecord0);
  }
}
