/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:17:47 GMT 2022
 */

package org.netpreserve.jwarc.cdx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.WarcCaptureRecord;
import org.netpreserve.jwarc.cdx.CdxFields;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CdxFields_ESTest extends CdxFields_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(warcCaptureRecord0).payloadDigest();
      String string0 = CdxFields.format((byte)107, warcCaptureRecord0);
      assertNotNull(string0);
      assertEquals("-", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      doReturn("").when(warcCaptureRecord0).target();
      String string0 = CdxFields.format((byte)97, warcCaptureRecord0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      String string0 = CdxFields.format((byte)19, warcCaptureRecord0);
      assertEquals("-", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = CdxFields.format((byte)115, (WarcCaptureRecord) null);
      assertEquals("200", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = CdxFields.format((byte)114, (WarcCaptureRecord) null);
      assertEquals("-", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = CdxFields.format((byte)98, (WarcCaptureRecord) null);
      assertEquals("-", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = CdxFields.format((byte)78, (WarcCaptureRecord) null);
      assertEquals("-", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(warcCaptureRecord0).target();
      String string0 = CdxFields.format((byte)97, warcCaptureRecord0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      WarcCaptureRecord warcCaptureRecord0 = mock(WarcCaptureRecord.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(warcCaptureRecord0).payload();
      String string0 = CdxFields.format((byte)109, warcCaptureRecord0);
      assertNotNull(string0);
      assertEquals("-", string0);
  }
}
