/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:49:41 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.MessageBody;
import org.netpreserve.jwarc.MessageHeaders;
import org.netpreserve.jwarc.MessageVersion;
import org.netpreserve.jwarc.WarcFilter;
import org.netpreserve.jwarc.WarcRecord;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcFilter_ESTest extends WarcFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WarcFilter warcFilter0 = WarcFilter.compile("U>-9)[SCo}-B696-oJ");
      // Undeclared exception!
      try { 
        warcFilter0.test((WarcRecord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcFilterCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcFilter.compile("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unexpected end of input
         //
         verifyException("org.netpreserve.jwarc.WarcFilterLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcFilter.compile("6X96R<Q OQ#7~51L:F");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Q\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcFilter.compile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WarcFilter warcFilter0 = WarcFilter.compile("U>-9)[Co0-B696-oJ");
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, messageBody0);
      boolean boolean0 = warcFilter0.test(warcRecord0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WarcFilter warcFilter0 = WarcFilter.compile("U>-9)[Co0-B696-oJ");
      String string0 = warcFilter0.toString();
      assertEquals("U>-9)[Co0-B696-oJ", string0);
  }
}
