/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:51:07 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.URI;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.MessageBody;
import org.netpreserve.jwarc.MessageHeaders;
import org.netpreserve.jwarc.MessageVersion;
import org.netpreserve.jwarc.WarcResource;
import org.netpreserve.jwarc.WarcRevisit;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcResource_ESTest extends WarcResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MessageVersion messageVersion0 = new MessageVersion("org.netpreserve.jwarc.WarcResource", 32, 32);
      WarcResource.Builder warcResource_Builder0 = new WarcResource.Builder();
      Map<String, List<String>> map0 = warcResource_Builder0.headerMap;
      MessageHeaders messageHeaders0 = new MessageHeaders(map0);
      MessageBody messageBody0 = MessageBody.empty();
      WarcResource warcResource0 = new WarcResource(messageVersion0, messageHeaders0, messageBody0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URI uRI0 = WarcRevisit.IDENTICAL_PAYLOAD_DIGEST_1_1;
      WarcResource.Builder warcResource_Builder0 = new WarcResource.Builder(uRI0);
      WarcResource warcResource0 = warcResource_Builder0.build();
      assertNotNull(warcResource0);
  }
}
