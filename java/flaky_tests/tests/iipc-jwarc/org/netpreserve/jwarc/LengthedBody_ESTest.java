/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:09:48 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.ClosedChannelException;
import java.nio.channels.DatagramChannel;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.ReadableByteChannel;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.ChunkedBody;
import org.netpreserve.jwarc.LengthedBody;
import org.netpreserve.jwarc.MessageBody;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LengthedBody_ESTest extends LengthedBody_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 0);
      LengthedBody lengthedBody1 = LengthedBody.create(lengthedBody0, byteBuffer0, 505L);
      lengthedBody1.position = 16L;
      try { 
        lengthedBody1.read(byteBuffer0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // expected 489 more bytes in file
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      byteBuffer0.flip();
      ByteBuffer byteBuffer1 = ByteBuffer.allocate(39);
      // Undeclared exception!
      try { 
        lengthedBody0.read(byteBuffer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(208);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("mb$^dn9G$4UE+m", false);
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      LengthedBody lengthedBody0 = LengthedBody.create(fileChannel0, byteBuffer0, 208);
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer1 = ByteBuffer.wrap(byteArray0);
      lengthedBody0.read(byteBuffer1);
      lengthedBody0.read(byteBuffer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(224);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 224);
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer1 = ByteBuffer.wrap(byteArray0);
      lengthedBody0.pushback = byteBuffer1;
      lengthedBody0.read(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      byte[] byteArray0 = new byte[0];
      lengthedBody0.pushback(byteArray0);
      ByteBuffer byteBuffer1 = ByteBuffer.wrap(byteArray0);
      lengthedBody0.read(byteBuffer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(151);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 151);
      lengthedBody0.size();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(223);
      SocketChannel socketChannel0 = SocketChannel.open();
      LengthedBody lengthedBody0 = LengthedBody.create(socketChannel0, byteBuffer0, (-1632L));
      lengthedBody0.size();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(151);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 151);
      lengthedBody0.consume();
      lengthedBody0.position();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      lengthedBody0.position = (-395L);
      lengthedBody0.position();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      LengthedBody lengthedBody0 = LengthedBody.create(datagramChannel0, byteBuffer0, 3836L);
      // Undeclared exception!
      try { 
        lengthedBody0.read(byteBuffer0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, (ByteBuffer) null, 1702L);
      // Undeclared exception!
      try { 
        lengthedBody0.read((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 7L);
      // Undeclared exception!
      try { 
        lengthedBody0.read(byteBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The source buffer is this buffer
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(224);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 224);
      // Undeclared exception!
      try { 
        lengthedBody0.pushback((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(184);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 184);
      // Undeclared exception!
      try { 
        lengthedBody0.isOpen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(209);
      ChunkedBody chunkedBody0 = new ChunkedBody((ReadableByteChannel) null, byteBuffer0);
      ChunkedBody chunkedBody1 = chunkedBody0.strict();
      LengthedBody lengthedBody0 = LengthedBody.create(chunkedBody1, byteBuffer0, 255L);
      try { 
        lengthedBody0.consume();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // chunked encoding at position 0: <-- HERE -->\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00...
         //
         verifyException("org.netpreserve.jwarc.ChunkedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer1 = ByteBuffer.wrap(byteArray0);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer1, 255L);
      LengthedBody lengthedBody1 = LengthedBody.create(lengthedBody0, byteBuffer0, 255L);
      // Undeclared exception!
      lengthedBody1.consume();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, (ByteBuffer) null, 505L);
      // Undeclared exception!
      try { 
        lengthedBody0.consume();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(208);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, (-1L));
      // Undeclared exception!
      try { 
        lengthedBody0.consume();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-1 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(63);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 16L);
      LengthedBody lengthedBody1 = LengthedBody.create(lengthedBody0, byteBuffer0, 1730L);
      // Undeclared exception!
      try { 
        lengthedBody1.consume();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The source buffer is this buffer
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      byte[] byteArray0 = new byte[0];
      lengthedBody0.pushback(byteArray0);
      lengthedBody0.discardPushback();
      assertEquals(0L, lengthedBody0.position());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      // Undeclared exception!
      try { 
        lengthedBody0.read(byteBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The source buffer is this buffer
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, (ByteBuffer) null, (-595L));
      int int0 = lengthedBody0.read((ByteBuffer) null);
      assertEquals(0L, lengthedBody0.position());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      lengthedBody0.close();
      LengthedBody lengthedBody1 = LengthedBody.create(lengthedBody0, byteBuffer0, 202);
      boolean boolean0 = lengthedBody1.isOpen();
      assertFalse(boolean0);
      assertEquals(0L, lengthedBody1.position());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      byte[] byteArray0 = new byte[9];
      lengthedBody0.consume();
      lengthedBody0.pushback(byteArray0);
      lengthedBody0.discardPushback();
      assertEquals(202L, lengthedBody0.position());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(212);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 212);
      lengthedBody0.consume();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("A", true);
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      LengthedBody lengthedBody1 = LengthedBody.create(fileChannel0, byteBuffer0, 1L);
      // Undeclared exception!
      try { 
        lengthedBody1.read(byteBuffer0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(208);
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer1 = ByteBuffer.wrap(byteArray0);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer1, 1L);
      LengthedBody lengthedBody1 = LengthedBody.create(lengthedBody0, byteBuffer0, 255L);
      try { 
        lengthedBody1.consume();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(159);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 159);
      lengthedBody0.close();
      try { 
        lengthedBody0.read(byteBuffer0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      lengthedBody0.pushback = byteBuffer0;
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        lengthedBody0.pushback(byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already pushed back
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        lengthedBody0.pushback(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // pushback would result in negative position
         //
         verifyException("org.netpreserve.jwarc.LengthedBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 4805L);
      ReadableByteChannel readableByteChannel0 = lengthedBody0.discardPushbackOnRead();
      LengthedBody lengthedBody1 = LengthedBody.create(readableByteChannel0, byteBuffer0, 1822L);
      // Undeclared exception!
      try { 
        lengthedBody1.consume();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      LengthedBody lengthedBody0 = LengthedBody.create(datagramChannel0, (ByteBuffer) null, 0L);
      LengthedBody lengthedBody1 = LengthedBody.create(lengthedBody0, (ByteBuffer) null, 0L);
      datagramChannel0.getRemoteAddress();
      boolean boolean0 = lengthedBody1.isOpen();
      assertTrue(boolean0);
      
      lengthedBody0.stream();
      MessageBody.empty();
      lengthedBody0.size();
      assertEquals(0L, lengthedBody0.position());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 0);
      lengthedBody0.close();
      boolean boolean0 = lengthedBody0.isOpen();
      assertEquals(0L, lengthedBody0.position());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(202);
      LengthedBody lengthedBody0 = LengthedBody.create((ReadableByteChannel) null, byteBuffer0, 202);
      long long0 = lengthedBody0.position();
      assertEquals(0L, long0);
      assertEquals(202L, lengthedBody0.size());
  }
}
