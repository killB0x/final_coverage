/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 00:57:53 GMT 2022
 */

package org.netpreserve.jwarc.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.tools.SavebackTool;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SavebackTool_ESTest extends SavebackTool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        SavebackTool.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "--gzip";
      stringArray0[1] = "Gz";
      // Undeclared exception!
      try { 
        SavebackTool.main(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("org.netpreserve.jwarc.GzipChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SavebackTool savebackTool0 = new SavebackTool();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[9];
          stringArray0[0] = "";
          stringArray0[1] = "";
          stringArray0[2] = ".tmp";
          stringArray0[3] = ".tmp";
          stringArray0[4] = "";
          stringArray0[5] = "";
          stringArray0[6] = "";
          stringArray0[7] = ".tmp";
          stringArray0[8] = "--no-warcit-headers";
          // Undeclared exception!
          try { 
            SavebackTool.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file or directory
             //
             verifyException("java.nio.file.TempFileHelper", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "5Unm]~#";
      stringArray0[1] = "\u0003P_@c<a";
      stringArray0[2] = "--gzip";
      stringArray0[3] = "?W5wyL}?><#!";
      stringArray0[4] = "|";
      stringArray0[5] = "d";
      stringArray0[6] = "-%k@QS[IP>6+b";
      // Undeclared exception!
      try { 
        SavebackTool.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--gzip";
      // Undeclared exception!
      try { 
        SavebackTool.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[2];
          stringArray0[0] = "--warcinfo";
          stringArray0[1] = "^L'J#0ku|SQ*";
          // Undeclared exception!
          try { 
            SavebackTool.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file or directory
             //
             verifyException("java.nio.file.TempFileHelper", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
