/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:29:51 GMT 2022
 */

package org.netpreserve.jwarc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import java.security.MessageDigest;
import java.util.HashMap;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Optional;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.DigestingMessageBody;
import org.netpreserve.jwarc.MessageBody;
import org.netpreserve.jwarc.MessageHeaders;
import org.netpreserve.jwarc.MessageVersion;
import org.netpreserve.jwarc.WarcDigest;
import org.netpreserve.jwarc.WarcRecord;
import org.netpreserve.jwarc.WarcTruncationReason;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcRecord_ESTest extends WarcRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageBody messageBody0 = MessageBody.empty();
      MessageVersion messageVersion0 = MessageVersion.WARC_1_1;
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, messageBody0);
      WarcTruncationReason warcTruncationReason0 = warcRecord0.truncated();
      assertEquals(WarcTruncationReason.NOT_TRUNCATED, warcTruncationReason0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRecord warcRecord0 = new WarcRecord((MessageVersion) null, messageHeaders0, messageBody0);
      Optional<Long> optional0 = warcRecord0.segmentNumber();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URI uRI0 = WarcRecord.parseRecordID("<urn:uuid:00000000-0100-4000-8200-000003000000>");
      assertEquals((-1), uRI0.getPort());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URI uRI0 = WarcRecord.parseRecordID("<file:///tmp/foo.bar>");
      assertNull(uRI0.getRawUserInfo());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageVersion messageVersion0 = new MessageVersion("A4orEySjsBd", 1, 127);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      MessageHeaders messageHeaders0 = new MessageHeaders(hashMap0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, (MessageBody) null);
      Optional<WarcDigest> optional0 = warcRecord0.blockDigest();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.HTTP_1_1;
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, (MessageHeaders) null, (MessageBody) null);
      // Undeclared exception!
      try { 
        warcRecord0.type();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageBody messageBody0 = MessageBody.empty();
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.toString();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No value present
         //
         verifyException("java.util.Optional", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcRecord.parseRecordID((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.HTTP_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.id();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No value present
         //
         verifyException("java.util.Optional", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.date();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageBody messageBody0 = MessageBody.empty();
      WarcRecord warcRecord0 = new WarcRecord((MessageVersion) null, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.id();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_1;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      MessageHeaders messageHeaders0 = new MessageHeaders(hashMap0);
      MessageBody messageBody0 = MessageBody.empty();
      DigestingMessageBody digestingMessageBody0 = new DigestingMessageBody(messageBody0, (MessageDigest) null);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, digestingMessageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.calculatedBlockDigest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageVersion messageVersion0 = new MessageVersion("<text/html;charset=utf-8s", (-2755), (-2755));
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      MessageHeaders messageHeaders0 = new MessageHeaders(hashMap0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, (MessageBody) null);
      Optional<WarcDigest> optional0 = warcRecord0.calculatedBlockDigest();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WarcRecord.formatId((URI) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URI uRI0 = WarcRecord.parseRecordID("A");
      String string0 = WarcRecord.formatId(uRI0);
      assertEquals("<A>", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = WarcRecord.formatId((UUID) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("%U]");
      String string0 = WarcRecord.formatId(uUID0);
      assertNotNull(string0);
      assertEquals("<urn:uuid:00000000-0100-4000-8200-000003000000>", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        WarcRecord.parseRecordID("<-l");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0: <-l
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.ARC_1_1;
      MessageBody messageBody0 = MessageBody.empty();
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.date();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No value present
         //
         verifyException("java.util.Optional", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageBody messageBody0 = MessageBody.empty();
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.truncated();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.ARC_1_1;
      MessageBody messageBody0 = MessageBody.empty();
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.blockDigest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageBody messageBody0 = MessageBody.empty();
      MessageVersion messageVersion0 = MessageVersion.WARC_1_0;
      MessageHeaders messageHeaders0 = MessageHeaders.parse(messageBody0);
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, messageHeaders0, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.type();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No value present
         //
         verifyException("java.util.Optional", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.HTTP_1_1;
      MessageBody messageBody0 = MessageBody.empty();
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, (MessageHeaders) null, messageBody0);
      // Undeclared exception!
      try { 
        warcRecord0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageVersion messageVersion0 = MessageVersion.ARC_1_1;
      WarcRecord warcRecord0 = new WarcRecord(messageVersion0, (MessageHeaders) null, (MessageBody) null);
      // Undeclared exception!
      try { 
        warcRecord0.segmentNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.WarcRecord", e);
      }
  }
}
