/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:26:55 GMT 2022
 */

package org.netpreserve.jwarc.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Socket;
import java.net.SocketException;
import java.net.URISyntaxException;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockServerSocket;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.HttpRequest;
import org.netpreserve.jwarc.WarcWriter;
import org.netpreserve.jwarc.net.WarcRecorder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WarcRecorder_ESTest extends WarcRecorder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket();
      WarcRecorder warcRecorder0 = new WarcRecorder(mockServerSocket0, (WarcWriter) null);
      HttpRequest.Builder httpRequest_Builder0 = new HttpRequest.Builder("", "");
      HttpRequest httpRequest0 = httpRequest_Builder0.build();
      // Undeclared exception!
      try { 
        warcRecorder0.handle((Socket) null, "g~&F*,RpLOlG?", httpRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.WarcRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket();
      WarcRecorder warcRecorder0 = new WarcRecorder(mockServerSocket0, (WarcWriter) null);
      try { 
        warcRecorder0.handle((Socket) null, "wI6Y8e)1co3E1|", (HttpRequest) null);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 13: wI6Y8e)1co3E1|
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket();
      SocketChannel socketChannel0 = SocketChannel.open();
      WarcWriter warcWriter0 = new WarcWriter(socketChannel0);
      WarcRecorder warcRecorder0 = new WarcRecorder(mockServerSocket0, warcWriter0);
      HttpRequest.Builder httpRequest_Builder0 = new HttpRequest.Builder("w", "ZE");
      HttpRequest.Builder httpRequest_Builder1 = httpRequest_Builder0.setHeader("Connection", "Connection");
      HttpRequest httpRequest0 = httpRequest_Builder1.build();
      // Undeclared exception!
      try { 
        warcRecorder0.handle((Socket) null, "w", httpRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.WarcRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket();
      WarcRecorder warcRecorder0 = new WarcRecorder(mockServerSocket0, (WarcWriter) null);
      HttpRequest.Builder httpRequest_Builder0 = new HttpRequest.Builder("accept-encoding", "org.netpreserve.jwarc.ParsingException");
      HttpRequest.Builder httpRequest_Builder1 = httpRequest_Builder0.setHeader("accept-encoding", ".5>p}H");
      HttpRequest httpRequest0 = httpRequest_Builder1.build();
      // Undeclared exception!
      try { 
        warcRecorder0.handle((Socket) null, "accept-encoding", httpRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.WarcRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket();
      WarcRecorder warcRecorder0 = new WarcRecorder(mockServerSocket0, (WarcWriter) null);
      HttpRequest.Builder httpRequest_Builder0 = new HttpRequest.Builder("h$,hjrrnj-jl)fpku1&", "h$,hjrrnj-jl)fpku1&");
      HttpRequest.Builder httpRequest_Builder1 = httpRequest_Builder0.setHeader("TE", "[ \t]*,[ \t]*");
      HttpRequest httpRequest0 = httpRequest_Builder1.build();
      // Undeclared exception!
      try { 
        warcRecorder0.handle((Socket) null, "accept-encodg", httpRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.WarcRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket();
      SocketChannel socketChannel0 = SocketChannel.open();
      WarcWriter warcWriter0 = new WarcWriter(socketChannel0);
      WarcRecorder warcRecorder0 = new WarcRecorder(mockServerSocket0, warcWriter0);
      Socket socket0 = socketChannel0.socket();
      HttpRequest.Builder httpRequest_Builder0 = new HttpRequest.Builder("TE", "TE");
      HttpRequest.Builder httpRequest_Builder1 = httpRequest_Builder0.setHeader("0123456789abcdef", "TE");
      HttpRequest httpRequest0 = httpRequest_Builder1.build();
      try { 
        warcRecorder0.handle(socket0, "TE", httpRequest0);
        fail("Expecting exception: SocketException");
      
      } catch(SocketException e) {
      }
  }
}
