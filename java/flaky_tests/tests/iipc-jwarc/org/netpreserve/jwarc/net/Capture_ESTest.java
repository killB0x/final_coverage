/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:52:01 GMT 2022
 */

package org.netpreserve.jwarc.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import java.nio.file.Path;
import java.time.Instant;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.net.Capture;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Capture_ESTest extends Capture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URI uRI0 = MockURI.URI("");
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      Capture capture0 = new Capture(uRI0, instant0);
      String string0 = capture0.uriKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "abXK5aJ0", "3", 4, (String) null, "org.netpreserve.jwarc.net.Capture", "abXK5aJ0");
      Instant instant0 = MockInstant.ofEpochSecond((long) 4, (long) 4);
      MockFile mockFile0 = new MockFile("NOT_TRUNCATED", "<urn:uuid:");
      Path path0 = mockFile0.toPath();
      Capture capture0 = new Capture(uRI0, instant0, path0, 750L);
      URI uRI1 = capture0.uri();
      assertSame(uRI1, uRI0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      Instant instant0 = MockInstant.now();
      MockFile mockFile0 = new MockFile(">c@E|a");
      Path path0 = mockFile0.toPath();
      Capture capture0 = new Capture(uRI0, instant0, path0, 0L);
      long long0 = capture0.position();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      Instant instant0 = MockInstant.now();
      MockFile mockFile0 = new MockFile(">c@E|a");
      Path path0 = mockFile0.toPath();
      Capture capture0 = new Capture(uRI0, instant0, path0, 280L);
      long long0 = capture0.position();
      assertEquals(280L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      Instant instant0 = MockInstant.now();
      MockFile mockFile0 = new MockFile(">c@E|a");
      Path path0 = mockFile0.toPath();
      Capture capture0 = new Capture(uRI0, instant0, path0, 0L);
      Path path1 = capture0.file();
      assertSame(path0, path1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      URI uRI0 = MockURI.aFTPURI;
      Capture capture0 = new Capture(uRI0, instant0);
      Instant instant1 = capture0.date();
      assertSame(instant0, instant1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Capture capture0 = null;
      try {
        capture0 = new Capture((URI) null, (Instant) null, (Path) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Capture capture0 = null;
      try {
        capture0 = new Capture((URI) null, instant0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URI uRI0 = MockURI.URI("org.netpreserve.jwarc.MessageParser", "org.netpreserve.jwarc.MessageParser", "XU ~1");
      Capture capture0 = new Capture(uRI0, (Instant) null);
      URI uRI1 = capture0.uri();
      assertEquals("XU%20~%7F1", uRI1.getRawFragment());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      Capture capture0 = new Capture(uRI0, (Instant) null);
      Instant instant0 = capture0.date();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      Capture capture0 = new Capture(uRI0, (Instant) null);
      Path path0 = capture0.file();
      assertNull(path0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      Instant instant0 = MockInstant.ofEpochSecond(1186L, 1186L);
      Capture capture0 = new Capture(uRI0, instant0);
      long long0 = capture0.position();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URI uRI0 = MockURI.URI("org.netpreserve.jwarc.MessageParser", "org.netpreserve.jwarc.MessageParser", "XU ~1");
      Capture capture0 = new Capture(uRI0, (Instant) null);
      String string0 = capture0.uriKey();
      assertEquals("org.netpreserve.jwarc.MessageParser:org.netpreserve.jwarc.MessageParser#XU%20~%7F1", string0);
  }
}
