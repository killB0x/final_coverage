/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 01:47:38 GMT 2022
 */

package org.netpreserve.jwarc.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Socket;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;
import org.netpreserve.jwarc.HttpRequest;
import org.netpreserve.jwarc.HttpResponse;
import org.netpreserve.jwarc.MediaType;
import org.netpreserve.jwarc.net.HttpExchange;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HttpExchange_ESTest extends HttpExchange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      HttpResponse.Builder httpResponse_Builder0 = new HttpResponse.Builder(1130, "G[!D%NN[$t\"kLWj");
      HttpResponse httpResponse0 = httpResponse_Builder0.build();
      httpExchange0.send(httpResponse0);
      assertEquals("G[!D%NN[$t\"kLWj", httpResponse0.reason());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      MediaType mediaType0 = MediaType.WWW_FORM_URLENCODED;
      // Undeclared exception!
      try { 
        httpExchange0.send(1, mediaType0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.HttpExchange", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      // Undeclared exception!
      try { 
        httpExchange0.send((-2419), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.HttpExchange", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      // Undeclared exception!
      try { 
        httpExchange0.redirect((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // value
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Pattern pattern0 = Pattern.compile("org.netpreserve.jwarc.HttpResponse", 307);
      Matcher matcher0 = pattern0.matcher("QfC^1,4nlgT(W");
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, matcher0);
      // Undeclared exception!
      try { 
        httpExchange0.param(307);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HttpExchange httpExchange0 = new HttpExchange((Socket) null, (HttpRequest) null, (Matcher) null);
      HttpResponse.Builder httpResponse_Builder0 = new HttpResponse.Builder((-1), " ");
      HttpResponse httpResponse0 = httpResponse_Builder0.build();
      // Undeclared exception!
      try { 
        httpExchange0.send(httpResponse0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.HttpExchange", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      MediaType mediaType0 = MediaType.HTTP_REQUEST;
      httpExchange0.send((-1), mediaType0, "UNSPECIFIED");
      assertEquals("application", mediaType0.type());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      HttpRequest httpRequest0 = httpExchange0.request();
      assertNull(httpRequest0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      httpExchange0.redirect("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      httpExchange0.send(0, "d\"tx");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      HttpExchange httpExchange0 = new HttpExchange(mockSocket0, (HttpRequest) null, (Matcher) null);
      // Undeclared exception!
      try { 
        httpExchange0.param(307);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.netpreserve.jwarc.net.HttpExchange", e);
      }
  }
}
