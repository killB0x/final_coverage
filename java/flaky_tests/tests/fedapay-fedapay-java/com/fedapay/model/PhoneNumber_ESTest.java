/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 12:42:01 GMT 2022
 */

package com.fedapay.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fedapay.model.PhoneNumber;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PhoneNumber_ESTest extends PhoneNumber_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber();
      String string0 = phoneNumber0.getUpdatedAt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("cZI|\"RapduQ", "cZI|\"RapduQ", "cZI|\"RapduQ", "/v10.D@L4T\"h+", "3!_:7q~*SBP+jS");
      assertEquals("3!_:7q~*SBP+jS", phoneNumber0.getUpdatedAt());
      
      phoneNumber0.setUpdatedAt("");
      phoneNumber0.getUpdatedAt();
      assertEquals("cZI|\"RapduQ", phoneNumber0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber((String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = phoneNumber0.getNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("cZI|\"RapduQ", "cZI|\"RapduQ", "cZI|\"RapduQ", "/v10.D@L4T\"h+", "3!_:7q~*SBP+jS");
      String string0 = phoneNumber0.getNumber();
      assertEquals("cZI|\"RapduQ", string0);
      assertEquals("3!_:7q~*SBP+jS", phoneNumber0.getUpdatedAt());
      assertEquals("cZI|\"RapduQ", phoneNumber0.getId());
      assertEquals("/v10.D@L4T\"h+", phoneNumber0.getCreatedAt());
      assertEquals("cZI|\"RapduQ", phoneNumber0.getCountry());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("O!>jo", "O!>jo", "", "8_@v,U6`@vw*h", "O!>jo");
      String string0 = phoneNumber0.getId();
      assertEquals("", phoneNumber0.getCountry());
      assertEquals("O!>jo", phoneNumber0.getUpdatedAt());
      assertEquals("O!>jo", phoneNumber0.getNumber());
      assertEquals("O!>jo", string0);
      assertEquals("8_@v,U6`@vw*h", phoneNumber0.getCreatedAt());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("cZI|\"RapduQ", "cZI|\"RapduQ", "cZI|\"RapduQ", "/v10.D@L4T\"h+", "3!_:7q~*SBP+jS");
      assertEquals("cZI|\"RapduQ", phoneNumber0.getId());
      
      phoneNumber0.setId("");
      phoneNumber0.getId();
      assertEquals("/v10.D@L4T\"h+", phoneNumber0.getCreatedAt());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber();
      phoneNumber0.setCreatedAt("cJiC}M64");
      String string0 = phoneNumber0.getCreatedAt();
      assertEquals("cJiC}M64", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("-Ynkoq-_", "", "", "", "-Ynkoq-_");
      String string0 = phoneNumber0.getCreatedAt();
      assertEquals("", phoneNumber0.getCountry());
      assertEquals("", phoneNumber0.getNumber());
      assertEquals("-Ynkoq-_", phoneNumber0.getId());
      assertEquals("", string0);
      assertEquals("-Ynkoq-_", phoneNumber0.getUpdatedAt());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber();
      String string0 = phoneNumber0.getCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("-Ynkoq-_", "", "", "", "-Ynkoq-_");
      assertEquals("", phoneNumber0.getCountry());
      
      phoneNumber0.setCountry("s 7X'~f$p3UDtPdPa");
      phoneNumber0.getCountry();
      assertEquals("-Ynkoq-_", phoneNumber0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("-Ynkoq-_", "", "", "", "-Ynkoq-_");
      String string0 = phoneNumber0.getCountry();
      assertEquals("-Ynkoq-_", phoneNumber0.getUpdatedAt());
      assertEquals("", string0);
      assertEquals("", phoneNumber0.getNumber());
      assertEquals("", phoneNumber0.getCreatedAt());
      assertEquals("-Ynkoq-_", phoneNumber0.getId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("~qV2ixV^Y5Pf$w}S@UX", (String) null, (String) null, "~qV2ixV^Y5Pf$w}S@UX", "");
      phoneNumber0.setNumber("");
      assertEquals("~qV2ixV^Y5Pf$w}S@UX", phoneNumber0.getCreatedAt());
      assertEquals("~qV2ixV^Y5Pf$w}S@UX", phoneNumber0.getId());
      assertEquals("", phoneNumber0.getUpdatedAt());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("-Ynkoq-_", "", "", "", "-Ynkoq-_");
      String string0 = phoneNumber0.getUpdatedAt();
      assertEquals("", phoneNumber0.getCreatedAt());
      assertEquals("-Ynkoq-_", phoneNumber0.getId());
      assertEquals("-Ynkoq-_", string0);
      assertEquals("", phoneNumber0.getNumber());
      assertEquals("", phoneNumber0.getCountry());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber();
      String string0 = phoneNumber0.getCreatedAt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber("", "", (String) null, "", "com.fedapay.model.PhoneNumber");
      String string0 = phoneNumber0.getNumber();
      assertEquals("", phoneNumber0.getId());
      assertEquals("", phoneNumber0.getCreatedAt());
      assertEquals("com.fedapay.model.PhoneNumber", phoneNumber0.getUpdatedAt());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PhoneNumber phoneNumber0 = new PhoneNumber((String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = phoneNumber0.getId();
      assertNull(string0);
  }
}
