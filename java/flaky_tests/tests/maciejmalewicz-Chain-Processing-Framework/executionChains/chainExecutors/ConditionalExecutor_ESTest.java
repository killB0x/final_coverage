/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 00:06:09 GMT 2022
 */

package executionChains.chainExecutors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import executionChains.Chain;
import executionChains.ChainFunction;
import executionChains.ChainNode;
import executionChains.SimpleChainNode;
import executionChains.chainExecutors.ConditionalExecutor;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConditionalExecutor_ESTest extends ConditionalExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Chain<Integer> chain0 = (Chain<Integer>) mock(Chain.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(chain0).getNodes();
      Object object0 = new Object();
      Predicate<Integer> predicate0 = Predicate.isEqual(object0);
      Predicate<Integer> predicate1 = predicate0.negate();
      Integer integer0 = new Integer((-101));
      ConditionalExecutor<Integer> conditionalExecutor0 = null;
      try {
        conditionalExecutor0 = new ConditionalExecutor<Integer>(chain0, predicate1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("executionChains.chainExecutors.ChainExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Chain<ChainNode<Object>> chain0 = (Chain<ChainNode<Object>>) mock(Chain.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(chain0).getNodes();
      ChainFunction<Object> chainFunction0 = (ChainFunction<Object>) mock(ChainFunction.class, new ViolatedAssumptionAnswer());
      SimpleChainNode<Object> simpleChainNode0 = new SimpleChainNode<Object>(chainFunction0);
      ConditionalExecutor<ChainNode<Object>> conditionalExecutor0 = null;
      try {
        conditionalExecutor0 = new ConditionalExecutor<ChainNode<Object>>(chain0, (Predicate<ChainNode<Object>>) null, simpleChainNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("executionChains.chainExecutors.ChainExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<ChainNode<Integer>> linkedList0 = new LinkedList<ChainNode<Integer>>();
      Chain<Integer> chain0 = (Chain<Integer>) mock(Chain.class, new ViolatedAssumptionAnswer());
      Chain<ChainNode<Integer>> chain1 = (Chain<ChainNode<Integer>>) mock(Chain.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(chain1).getNodes();
      ChainFunction<Integer> chainFunction0 = (ChainFunction<Integer>) mock(ChainFunction.class, new ViolatedAssumptionAnswer());
      SimpleChainNode<Integer> simpleChainNode0 = new SimpleChainNode<Integer>(chainFunction0);
      ConditionalExecutor<ChainNode<Integer>> conditionalExecutor0 = null;
      try {
        conditionalExecutor0 = new ConditionalExecutor<ChainNode<Integer>>(chain1, (Predicate<ChainNode<Integer>>) null, simpleChainNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("executionChains.chainExecutors.ChainExecutor", e);
      }
  }
}
