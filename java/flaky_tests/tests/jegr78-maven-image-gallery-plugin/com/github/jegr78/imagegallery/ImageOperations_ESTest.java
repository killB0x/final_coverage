/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 03:03:49 GMT 2022
 */

package com.github.jegr78.imagegallery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.jegr78.imagegallery.ImageOperations;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImageOperations_ESTest extends ImageOperations_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("target");
      ImageOperations.checkCreatedDirectory(mockFile0);
      boolean boolean0 = ImageOperations.isValidDir(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ImageOperations.createTitlePath("../../");
      assertEquals(".. - ..", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = ImageOperations.createTitlePath("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.readResource((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.getThumbnailFileName((File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // original file may not be null
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("jpg");
      // Undeclared exception!
      try { 
        ImageOperations.getNormalizedFileName(mockFile0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FilenameUtils
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.createTitlePath("/");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.createTitlePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.createHomePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.copyResource("filze ", (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.checkCreatedDirectory((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("f&GNpPeZSs~kF");
      ImageOperations.ensureOriginalFile(mockFile0);
      assertFalse(mockFile0.exists());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.ensureOriginalFile((File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // original file may not be null
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = ImageOperations.getPathSplitter();
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File file0 = MockFile.createTempFile("f]zheK", "f]zheK");
      ImageOperations.checkCreatedDirectory(file0);
      assertEquals(0L, file0.length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ImageOperations.checkCreatedDirectory(mockFile0);
      assertFalse(mockFile0.isFile());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("volume/projects/jegr78-maven-image-gallery-plugin/target/classes/../../target/classes");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        ImageOperations.copyResource("", (File) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("cId$=ED=l)]iYHzrK", "y");
      ImageOperations.checkCreatedDirectory(mockFile0);
      boolean boolean0 = ImageOperations.isValidImageFile(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("cId$=ED=l)]iYHzrK", "y");
      boolean boolean0 = ImageOperations.isValidImageFile(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = ImageOperations.isValidImageFile((File) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("cId$=ED=l)]iYHzrK", "y");
      ImageOperations.checkCreatedDirectory(mockFile0);
      boolean boolean0 = ImageOperations.isValidDir(mockFile0);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("cId$=ED=l)]iYHzrK", "y");
      boolean boolean0 = ImageOperations.isValidDir(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = ImageOperations.isValidDir((File) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = ImageOperations.verifyExtension("../../");
      assertEquals("jpg", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = ImageOperations.verifyExtension("");
      assertEquals("jpg", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = ImageOperations.verifyExtension("jpg");
      assertEquals("jpg", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = ImageOperations.verifyExtension((String) null);
      assertEquals("jpg", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFile mockFile0 = new MockFile("f&GNpPeZSs~kF");
      ImageOperations.checkCreatedDirectory(mockFile0);
      // Undeclared exception!
      try { 
        ImageOperations.ensureOriginalFile(mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // original file is not a valid file: f&GNpPeZSs~kF
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = ImageOperations.createHomePath("f&GNpPeZSs~kF");
      assertEquals("../../", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockFile mockFile0 = new MockFile("cId$=ED=l)]iYHzrK", "y");
      ImageOperations.checkCreatedDirectory(mockFile0);
      ImageOperations.verifyDirectory(mockFile0);
      assertEquals(0L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.verifyDirectory((File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // dir may not be null
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFile mockFile0 = new MockFile("cId$=ED=l)]iYHzrK", "y");
      // Undeclared exception!
      try { 
        ImageOperations.verifyDirectory(mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // dir is not a valid directory: /home/user/cId$=ED=l)]iYHzrK/y
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.getNormalizedFileName((File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // original file may not be null
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.copyResource("", (File) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FileUtils
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockFile mockFile0 = new MockFile("f&GNpPeZSs~kF");
      // Undeclared exception!
      try { 
        ImageOperations.getThumbnailFileName(mockFile0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FilenameUtils
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOperations.readResource("\\");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/Charsets
         //
         verifyException("com.github.jegr78.imagegallery.ImageOperations", e);
      }
  }
}
