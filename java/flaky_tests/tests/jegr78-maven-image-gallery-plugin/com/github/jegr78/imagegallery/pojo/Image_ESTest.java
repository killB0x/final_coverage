/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 03:01:39 GMT 2022
 */

package com.github.jegr78.imagegallery.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.jegr78.imagegallery.pojo.Image;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Image_ESTest extends Image_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Image image0 = new Image("c:;b:oUHPS>,\"6G\"", "c:;b:oUHPS>,\"6G\"", ", title=", "", "");
      String string0 = image0.getTitle();
      assertEquals(", title=", image0.getThumb());
      assertEquals("c:;b:oUHPS>,\"6G\"", image0.getImage());
      assertEquals("c:;b:oUHPS>,\"6G\"", image0.getBig());
      assertEquals("", image0.getDescription());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Image image0 = new Image("", "", "", "", "");
      String string0 = image0.getThumb();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Image image0 = new Image(":s[L>n4", ":s[L>n4", ":s[L>n4", ":s[L>n4", "<]jnyE\"4IkZuOkNp");
      image0.setLink("Image [image=");
      image0.getLink();
      assertEquals("<]jnyE\"4IkZuOkNp", image0.getDescription());
      assertEquals(":s[L>n4", image0.getThumb());
      assertEquals(":s[L>n4", image0.getBig());
      assertEquals(":s[L>n4", image0.getTitle());
      assertEquals(":s[L>n4", image0.getImage());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Image image0 = new Image("c:;b:oUHPS>,\"6G\"", "c:;b:oUHPS>,\"6G\"", ", title=", "", "");
      image0.setLink("");
      image0.getLink();
      assertEquals(", title=", image0.getThumb());
      assertEquals("c:;b:oUHPS>,\"6G\"", image0.getImage());
      assertEquals("c:;b:oUHPS>,\"6G\"", image0.getBig());
      assertEquals("", image0.getDescription());
      assertEquals("", image0.getTitle());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Image image0 = new Image("Xkn[1g;", "Xkn[1g;", "Xkn[1g;", "Xkn[1g;", "Xkn[1g;");
      String string0 = image0.getImage();
      assertEquals("Xkn[1g;", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Image image0 = new Image("", "", "", "", "");
      String string0 = image0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Image image0 = new Image("", "", "=\u0002+xhG|-&TlH>", "", "=\u0002+xhG|-&TlH>");
      String string0 = image0.getBig();
      assertEquals("", string0);
      assertEquals("=\u0002+xhG|-&TlH>", image0.getThumb());
      assertEquals("", image0.getTitle());
      assertEquals("=\u0002+xhG|-&TlH>", image0.getDescription());
      assertEquals("", image0.getImage());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Image image0 = new Image("", "", "", "22W!\"/U F|r4", "");
      Image image1 = new Image("6", "", "", "\"TLHJ.Ul[h@Y", "\"TLHJ.Ul[h@Y");
      int int0 = image0.compareTo(image1);
      assertEquals("6", image1.getImage());
      assertEquals("", image1.getBig());
      assertEquals(16, int0);
      assertEquals("", image1.getThumb());
      assertEquals("", image0.getDescription());
      assertEquals("\"TLHJ.Ul[h@Y", image1.getDescription());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Image image0 = new Image("", "", "", "22W!\"/U F|r4", "");
      Image image1 = new Image("6", "", "", "\"TLHJ.Ul[h@Y", "\"TLHJ.Ul[h@Y");
      int int0 = image1.compareTo(image0);
      assertEquals("\"TLHJ.Ul[h@Y", image1.getDescription());
      assertEquals("", image0.getDescription());
      assertEquals("", image1.getThumb());
      assertEquals((-16), int0);
      assertEquals("", image1.getBig());
      assertEquals("6", image1.getImage());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Image image0 = null;
      try {
        image0 = new Image((String) null, (String) null, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // image may not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Image image0 = new Image("&c$$@;]OLF(&}5w%", "&c$$@;]OLF(&}5w%", "JQ/", "Sv\"h", "Sv\"h");
      int int0 = image0.compareTo((Image) null);
      assertEquals("Sv\"h", image0.getTitle());
      assertEquals(0, int0);
      assertEquals("JQ/", image0.getThumb());
      assertEquals("&c$$@;]OLF(&}5w%", image0.getBig());
      assertEquals("&c$$@;]OLF(&}5w%", image0.getImage());
      assertEquals("Sv\"h", image0.getDescription());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Image image0 = new Image("Xkn[1g;", "Xkn[1g;", "Xkn[1g;", "Xkn[1g;", "Xkn[1g;");
      Image image1 = new Image("Xkn[1g;", "Xkn[1g;", "Xkn[1g;", "mk~)U',", "Xkn[1g;");
      boolean boolean0 = image0.equals(image1);
      assertEquals("Xkn[1g;", image1.getBig());
      assertFalse(boolean0);
      assertEquals("Xkn[1g;", image1.getImage());
      assertEquals("Xkn[1g;", image1.getThumb());
      assertEquals("Xkn[1g;", image1.getDescription());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Image image0 = new Image("Xkn[1g;", "Xkn[1g;", "Xkn[1g;", "Xkn[1g;", "Xkn[1g;");
      Image image1 = new Image("Xkn[1g;", "Xkn[1g;", ", link=", "Xkn[1g;", "Xkn[1g;");
      boolean boolean0 = image1.equals(image0);
      assertFalse(boolean0);
      assertEquals("Xkn[1g;", image1.getBig());
      assertEquals("Xkn[1g;", image1.getTitle());
      assertEquals("Xkn[1g;", image1.getDescription());
      assertEquals("Xkn[1g;", image1.getImage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Image image0 = new Image("q", "q", "q", "q", "q");
      image0.setLink("q");
      Image image1 = new Image("q", "q", "q", "q", "q");
      assertFalse(image1.equals((Object)image0));
      
      image1.setLink("q");
      boolean boolean0 = image1.equals(image0);
      assertTrue(image1.equals((Object)image0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Image image0 = new Image("XknEg;", "XknEg;", "XknEg;", "XknEg;", "XknEg;");
      image0.setLink("XknEg;");
      Image image1 = new Image("XknEg;", "XknEg;", "XknEg;", "XknEg;", "XknEg;");
      boolean boolean0 = image1.equals(image0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Image image0 = new Image("q", "q", "q", "q", "q");
      Image image1 = new Image("q", "q", "q", "q", "q");
      assertTrue(image1.equals((Object)image0));
      
      image1.setLink("q");
      boolean boolean0 = image1.equals(image0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Image image0 = new Image("XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;");
      Image image1 = new Image("/y", "XknE1g;", "w b2k5jX7$Rfmxb", "Image [image=", "Image [image=XknE1g;, big=XknE1g;, thumb=XknE1g;, title=XknE1g;, description=XknE1g;, link=null]");
      boolean boolean0 = image0.equals(image1);
      assertEquals("w b2k5jX7$Rfmxb", image1.getThumb());
      assertEquals("XknE1g;", image1.getBig());
      assertEquals("Image [image=", image1.getTitle());
      assertEquals("/y", image1.getImage());
      assertEquals("Image [image=XknE1g;, big=XknE1g;, thumb=XknE1g;, title=XknE1g;, description=XknE1g;, link=null]", image1.getDescription());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Image image0 = new Image("", "", "", "*y) XUOWsw7}%>/JRX4", "");
      Image image1 = new Image("", "*y) XUOWsw7}%>/JRX4", ", big=", "D3dZ$-VL&r`Q8K", "");
      boolean boolean0 = image1.equals(image0);
      assertEquals("*y) XUOWsw7}%>/JRX4", image1.getBig());
      assertEquals("", image1.getDescription());
      assertFalse(boolean0);
      assertEquals("D3dZ$-VL&r`Q8K", image1.getTitle());
      assertEquals(", big=", image1.getThumb());
      assertEquals("", image1.getImage());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Image image0 = new Image("XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;");
      boolean boolean0 = image0.equals("lV;k}sBT5LG.A");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Image image0 = new Image("&c$$@;]OLF(&}5w%", "&c$$@;]OLF(&}5w%", "JQ/", "Sv\"h", "Sv\"h");
      boolean boolean0 = image0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("&c$$@;]OLF(&}5w%", image0.getImage());
      assertEquals("JQ/", image0.getThumb());
      assertEquals("Sv\"h", image0.getDescription());
      assertEquals("Sv\"h", image0.getTitle());
      assertEquals("&c$$@;]OLF(&}5w%", image0.getBig());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Image image0 = new Image("XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;");
      boolean boolean0 = image0.equals(image0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Image image0 = new Image("XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;");
      Image image1 = new Image("3!Jk3_", "XknE1g;", "XknE1g;", "", "XknE1g;");
      boolean boolean0 = image1.equals(image0);
      assertEquals("XknE1g;", image1.getDescription());
      assertEquals("XknE1g;", image1.getBig());
      assertEquals("XknE1g;", image1.getThumb());
      assertFalse(boolean0);
      assertEquals("3!Jk3_", image1.getImage());
      assertEquals("", image1.getTitle());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Image image0 = new Image("&c$$@;]OLF(&}5w%", "&c$$@;]OLF(&}5w%", "JQ/", "Sv\"h", "Sv\"h");
      image0.setLink("6^WjC/6");
      image0.hashCode();
      assertEquals("&c$$@;]OLF(&}5w%", image0.getImage());
      assertEquals("Sv\"h", image0.getTitle());
      assertEquals("JQ/", image0.getThumb());
      assertEquals("Sv\"h", image0.getDescription());
      assertEquals("&c$$@;]OLF(&}5w%", image0.getBig());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Image image0 = new Image("XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;");
      image0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Image image0 = new Image("a`V^mxhQB8$v%5b^", "a`V^mxhQB8$v%5b^", "com.github.jegr78.imagegallery.pojo.Image", "a`V^mxhQB8$v%5b^", "com.github.jegr78.imagegallery.pojo.Image");
      String string0 = image0.getThumb();
      assertEquals("com.github.jegr78.imagegallery.pojo.Image", string0);
      assertEquals("a`V^mxhQB8$v%5b^", image0.getTitle());
      assertEquals("a`V^mxhQB8$v%5b^", image0.getBig());
      assertEquals("a`V^mxhQB8$v%5b^", image0.getImage());
      assertEquals("com.github.jegr78.imagegallery.pojo.Image", image0.getDescription());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Image image0 = new Image("", "", "", "*y) XUOWsw7}%>/JRX4", "");
      String string0 = image0.getImage();
      assertEquals("*y) XUOWsw7}%>/JRX4", image0.getTitle());
      assertEquals("", image0.getBig());
      assertEquals("", image0.getThumb());
      assertEquals("", image0.getDescription());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Image image0 = new Image("", "", "", "22W!\"/U F|r4", "");
      image0.getLink();
      assertEquals("", image0.getThumb());
      assertEquals("", image0.getImage());
      assertEquals("22W!\"/U F|r4", image0.getTitle());
      assertEquals("", image0.getBig());
      assertEquals("", image0.getDescription());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Image image0 = new Image("&c$$@;]OLF(&}5w%", "&c$$@;]OLF(&}5w%", "JQ/", "Sv\"h", "Sv\"h");
      String string0 = image0.getBig();
      assertEquals("&c$$@;]OLF(&}5w%", string0);
      assertEquals("Sv\"h", image0.getTitle());
      assertEquals("JQ/", image0.getThumb());
      assertEquals("&c$$@;]OLF(&}5w%", image0.getImage());
      assertEquals("Sv\"h", image0.getDescription());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Image image0 = new Image("&c$$@;]OLF(&}5w%", "&c$$@;]OLF(&}5w%", "JQ/", "Sv\"h", "Sv\"h");
      String string0 = image0.getDescription();
      assertEquals("JQ/", image0.getThumb());
      assertEquals("&c$$@;]OLF(&}5w%", image0.getBig());
      assertEquals("Sv\"h", image0.getTitle());
      assertEquals("Sv\"h", string0);
      assertEquals("&c$$@;]OLF(&}5w%", image0.getImage());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Image image0 = new Image("XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;", "XknE1g;");
      String string0 = image0.toString();
      assertEquals("Image [image=XknE1g;, big=XknE1g;, thumb=XknE1g;, title=XknE1g;, description=XknE1g;, link=null]", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Image image0 = new Image("a`V^mxhQB8$v%5b^", "a`V^mxhQB8$v%5b^", "com.github.jegr78.imagegallery.pojo.Image", "a`V^mxhQB8$v%5b^", "com.github.jegr78.imagegallery.pojo.Image");
      String string0 = image0.getTitle();
      assertEquals("a`V^mxhQB8$v%5b^", string0);
      assertEquals("com.github.jegr78.imagegallery.pojo.Image", image0.getThumb());
      assertEquals("a`V^mxhQB8$v%5b^", image0.getBig());
      assertEquals("a`V^mxhQB8$v%5b^", image0.getImage());
      assertEquals("com.github.jegr78.imagegallery.pojo.Image", image0.getDescription());
  }
}
