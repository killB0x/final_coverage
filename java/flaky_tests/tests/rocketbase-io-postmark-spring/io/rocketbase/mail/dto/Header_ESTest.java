/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 17:38:19 GMT 2022
 */

package io.rocketbase.mail.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import io.rocketbase.mail.dto.Header;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Header_ESTest extends Header_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Header.HeaderBuilder header_HeaderBuilder0 = new Header.HeaderBuilder();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Header header0 = new Header();
      String string0 = header0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Header header0 = new Header();
      header0.setValue("");
      String string0 = header0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Header header0 = new Header("#zh({!6tf", "");
      String string0 = header0.getName();
      assertEquals("#zh({!6tf", string0);
      assertEquals("", header0.getValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Header header0 = new Header("I33w6", "7dE@WR2P(2]tx=X\"/0g");
      assertEquals("I33w6", header0.getName());
      
      header0.setName("");
      header0.getName();
      assertEquals("7dE@WR2P(2]tx=X\"/0g", header0.getValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Header header0 = new Header();
      boolean boolean0 = header0.canEqual("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Header header0 = new Header();
      String string0 = header0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Header header0 = new Header("", "");
      Header header1 = new Header("", "");
      boolean boolean0 = header0.equals(header1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Header header0 = new Header();
      Header header1 = new Header();
      assertTrue(header1.equals((Object)header0));
      
      header1.setValue("&ffY'");
      boolean boolean0 = header0.equals(header1);
      assertFalse(header1.equals((Object)header0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Header header0 = new Header("%?JqH>", "%?JqH>");
      header0.setName("");
      Header header1 = new Header("", "iIQU)lr)w[");
      boolean boolean0 = header0.equals(header1);
      assertEquals("iIQU)lr)w[", header1.getValue());
      assertFalse(boolean0);
      assertEquals("", header1.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Header header0 = new Header();
      Header header1 = new Header("", "");
      boolean boolean0 = header0.equals(header1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Header header0 = new Header();
      Header header1 = new Header();
      boolean boolean0 = header0.equals(header1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Header header0 = new Header("%?JqH>", "%?JqH>");
      boolean boolean0 = header0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Header header0 = new Header();
      boolean boolean0 = header0.equals(header0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Header header0 = new Header((String) null, "7V`7>sRPL1a`e:lvO");
      header0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Header header0 = new Header("", "");
      header0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Header.HeaderBuilder header_HeaderBuilder0 = Header.builder();
      Header.HeaderBuilder header_HeaderBuilder1 = header_HeaderBuilder0.name((String) null);
      assertSame(header_HeaderBuilder1, header_HeaderBuilder0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Header.HeaderBuilder header_HeaderBuilder0 = Header.builder();
      String string0 = header_HeaderBuilder0.toString();
      assertEquals("Header.HeaderBuilder(name=null, value=null)", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Header.HeaderBuilder header_HeaderBuilder0 = Header.builder();
      Header header0 = header_HeaderBuilder0.build();
      boolean boolean0 = header0.canEqual(header0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Header header0 = new Header("%?JqH>", "%?JqH>");
      String string0 = header0.toString();
      assertEquals("Header(name=%?JqH>, value=%?JqH>)", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Header header0 = new Header();
      header0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Header header0 = new Header("%?JqH>", "%?JqH>");
      Header header1 = new Header("", "8];X");
      boolean boolean0 = header1.equals(header0);
      assertFalse(boolean0);
      assertEquals("8];X", header1.getValue());
      assertEquals("", header1.getName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Header.HeaderBuilder header_HeaderBuilder0 = Header.builder();
      Header.HeaderBuilder header_HeaderBuilder1 = header_HeaderBuilder0.value((String) null);
      assertSame(header_HeaderBuilder1, header_HeaderBuilder0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Header header0 = new Header("%?JqH>", "%?JqH>");
      String string0 = header0.getValue();
      assertEquals("%?JqH>", string0);
  }
}
