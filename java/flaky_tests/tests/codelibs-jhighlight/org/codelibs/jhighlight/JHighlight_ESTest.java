/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 03:15:32 GMT 2022
 */

package org.codelibs.jhighlight;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.codelibs.jhighlight.JHighlight;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JHighlight_ESTest extends JHighlight_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "i5aH_Gu+>D](\"M2";
      stringArray0[1] = "The source location '";
      stringArray0[2] = "-e";
      stringArray0[3] = "l EZ?z";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(",d");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",d");
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",d";
      stringArray0[1] = "&tilde;";
      stringArray0[2] = "--verbose";
      stringArray0[3] = "-d";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.codelibs.jhighlight.renderer.XhtmlRendererFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(",d");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",d");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ",d";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.codelibs.jhighlight.renderer.XhtmlRendererFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(",d");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",d");
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",d";
      stringArray0[1] = "&tilde;";
      stringArray0[2] = "--verbose";
      stringArray0[3] = "-d";
      stringArray0[4] = ",d";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // The destination directory ',d' is not a directory.
         //
         verifyException("org.codelibs.jhighlight.JHighlight", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/user");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-d";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // The destination directory '' is not writable.
         //
         verifyException("org.codelibs.jhighlight.JHighlight", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "gQ9FvP]zLE9g";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // The destination directory '-d' doesn't exist.
         //
         verifyException("org.codelibs.jhighlight.JHighlight", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = "";
      stringArray0[2] = "";
      JHighlight.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "$CuJ\"fWm&M,uj\"YWb_";
      stringArray0[1] = "--fragment";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",d";
      stringArray0[1] = "&tilde;";
      stringArray0[2] = "--verbose";
      stringArray0[3] = "-d";
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // The source location ',d' doesn't exist.
         //
         verifyException("org.codelibs.jhighlight.JHighlight", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[0];
      try { 
        JHighlight.main(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.codelibs.jhighlight.JHighlightVersionSingleton
         //
         verifyException("org.codelibs.jhighlight.JHighlightVersion", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JHighlight jHighlight0 = new JHighlight();
  }
}
