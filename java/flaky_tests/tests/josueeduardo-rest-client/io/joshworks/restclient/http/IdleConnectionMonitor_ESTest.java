/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 03:35:16 GMT 2022
 */

package io.joshworks.restclient.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.joshworks.restclient.http.IdleConnectionMonitor;
import io.joshworks.restclient.http.RestClient;
import java.util.Collection;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IdleConnectionMonitor_ESTest extends IdleConnectionMonitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Supplier<Collection<RestClient>> supplier0 = (Supplier<Collection<RestClient>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor(supplier0);
      idleConnectionMonitor0.shutdown();
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.joshworks.restclient.http.IdleConnectionMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Supplier<Collection<RestClient>> supplier0 = (Supplier<Collection<RestClient>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor(supplier0);
      MockThread.dumpStack();
      idleConnectionMonitor0.shutdown();
      MockThread.reset();
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.start();
        fail("Expecting exception: IllegalThreadStateException");
      
      } catch(IllegalThreadStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Thread", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor((Supplier<Collection<RestClient>>) null);
      idleConnectionMonitor0.shutdown();
      MockThread.getAllStackTraces();
      idleConnectionMonitor0.shutdown();
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.start();
        fail("Expecting exception: IllegalThreadStateException");
      
      } catch(IllegalThreadStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Thread", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Supplier<Collection<RestClient>> supplier0 = (Supplier<Collection<RestClient>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor(supplier0);
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.joshworks.restclient.http.IdleConnectionMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Supplier<Collection<RestClient>> supplier0 = (Supplier<Collection<RestClient>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor(supplier0);
      MockThread.getAllStackTraces();
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.joshworks.restclient.http.IdleConnectionMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Supplier<Collection<RestClient>> supplier0 = (Supplier<Collection<RestClient>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor(supplier0);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      idleConnectionMonitor0.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.joshworks.restclient.http.IdleConnectionMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor((Supplier<Collection<RestClient>>) null);
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.start();
        fail("Expecting exception: IllegalThreadStateException");
      
      } catch(IllegalThreadStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Thread", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Supplier<Collection<RestClient>> supplier0 = (Supplier<Collection<RestClient>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      IdleConnectionMonitor idleConnectionMonitor0 = new IdleConnectionMonitor(supplier0);
      // Undeclared exception!
      try { 
        idleConnectionMonitor0.start();
        fail("Expecting exception: IllegalThreadStateException");
      
      } catch(IllegalThreadStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Thread", e);
      }
  }
}
