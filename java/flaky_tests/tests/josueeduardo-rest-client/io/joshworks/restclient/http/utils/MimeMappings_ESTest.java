/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 03:39:25 GMT 2022
 */

package io.joshworks.restclient.http.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.joshworks.restclient.http.utils.MimeMappings;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MimeMappings_ESTest extends MimeMappings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MimeMappings.Builder mimeMappings_Builder0 = MimeMappings.builder();
      MimeMappings.Builder mimeMappings_Builder1 = mimeMappings_Builder0.addMapping("G", "");
      assertSame(mimeMappings_Builder1, mimeMappings_Builder0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Map<String, String> map0 = MimeMappings.DEFAULT_MIME_MAPPINGS;
      MimeMappings mimeMappings0 = new MimeMappings(map0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MimeMappings.Builder mimeMappings_Builder0 = MimeMappings.builder();
      MimeMappings mimeMappings0 = mimeMappings_Builder0.build();
      String string0 = mimeMappings0.getMimeType("mov");
      assertEquals("video/quicktime", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MimeMappings.Builder mimeMappings_Builder0 = MimeMappings.builder(true);
      MimeMappings mimeMappings0 = mimeMappings_Builder0.build();
      // Undeclared exception!
      try { 
        mimeMappings0.getMimeType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.joshworks.restclient.http.utils.MimeMappings", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MimeMappings.Builder mimeMappings_Builder0 = MimeMappings.builder(false);
      assertNotNull(mimeMappings_Builder0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MimeMappings.Builder mimeMappings_Builder0 = MimeMappings.builder();
      MimeMappings mimeMappings0 = mimeMappings_Builder0.build();
      String string0 = mimeMappings0.getMimeType("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MimeMappings.Builder mimeMappings_Builder0 = MimeMappings.builder();
      mimeMappings_Builder0.addMapping("", "");
      MimeMappings mimeMappings0 = mimeMappings_Builder0.build();
      String string0 = mimeMappings0.getMimeType("");
      assertEquals("", string0);
  }
}
