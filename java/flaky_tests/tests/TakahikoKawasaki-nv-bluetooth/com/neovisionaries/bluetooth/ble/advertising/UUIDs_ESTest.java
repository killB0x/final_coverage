/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:47:44 GMT 2022
 */

package com.neovisionaries.bluetooth.ble.advertising;

import org.junit.Test;
import static org.junit.Assert.*;
import com.neovisionaries.bluetooth.ble.advertising.UUIDs;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UUIDs_ESTest extends UUIDs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UUIDs uUIDs0 = new UUIDs(548, 548, (byte[]) null, (UUID[]) null);
      UUID[] uUIDArray0 = uUIDs0.getUUIDs();
      assertNull(uUIDArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UUIDs uUIDs0 = new UUIDs();
      UUID[] uUIDArray0 = new UUID[3];
      uUIDs0.setUUIDs(uUIDArray0);
      UUID[] uUIDArray1 = uUIDs0.getUUIDs();
      assertSame(uUIDArray1, uUIDArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UUID[] uUIDArray0 = new UUID[8];
      UUIDs uUIDs0 = new UUIDs();
      uUIDs0.setUUIDs(uUIDArray0);
      String string0 = uUIDs0.toString();
      assertEquals("UUIDs(null,null,null,null,null,null,null,null)", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UUID[] uUIDArray0 = new UUID[0];
      UUIDs uUIDs0 = new UUIDs();
      uUIDs0.setUUIDs(uUIDArray0);
      String string0 = uUIDs0.toString();
      assertEquals("UUIDs()", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UUIDs uUIDs0 = new UUIDs();
      String string0 = uUIDs0.toString();
      assertEquals("UUIDs(null)", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      UUID[] uUIDArray0 = new UUID[0];
      UUIDs uUIDs0 = new UUIDs(1369, 0, byteArray0, uUIDArray0);
      UUID[] uUIDArray1 = uUIDs0.getUUIDs();
      assertSame(uUIDArray0, uUIDArray1);
  }
}
