/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:24:25 GMT 2022
 */

package com.neovisionaries.bluetooth.ble.advertising;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.neovisionaries.bluetooth.ble.advertising.Ucode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Ucode_ESTest extends Ucode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      assertEquals(0, ucode0.getCount());
      
      ucode0.setCount(255);
      assertEquals(255, ucode0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setCount(0);
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(3, ucode0.getVersion());
      assertEquals(0, ucode0.getCount());
      assertEquals(0, ucode0.getStatus());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setPower(127);
      assertEquals(127, ucode0.getPower());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setPower((byte) (-128));
      assertEquals((-128), ucode0.getPower());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      
      ucode0.setUcode("0000000a000000000000000000000000");
      assertEquals(3, ucode0.getVersion());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      
      ucode0.setUcode("00Fc0000000009700000e0C00b0A0000");
      assertEquals(3, ucode0.getVersion());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      assertEquals(3, ucode0.getVersion());
      
      ucode0.setVersion(255);
      assertEquals(255, ucode0.getVersion());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      assertEquals(3, ucode0.getVersion());
      
      ucode0.setVersion((byte)0);
      assertEquals(0, ucode0.getVersion());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      Ucode ucode0 = new Ucode(2, 3, byteArray0, (-1695));
      int int0 = ucode0.getVersion();
      assertEquals(0, ucode0.getStatus());
      assertEquals(0, ucode0.getCount());
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus(9);
      int int0 = ucode0.getStatus();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus((-2877));
      int int0 = ucode0.getStatus();
      assertEquals(80, ucode0.getInterval());
      assertEquals((-2877), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setPower((-26));
      int int0 = ucode0.getPower();
      assertEquals((-26), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setCount(20);
      int int0 = ucode0.getCount();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      byteArray0[2] = (byte)70;
      Ucode ucode0 = Ucode.create(5120, 5245, byteArray0, (byte)12);
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(5245, ucode0.getType());
      assertEquals(70, ucode0.getVersion());
      assertEquals(0, ucode0.getCount());
      assertEquals(0, ucode0.getStatus());
      assertEquals(5120, ucode0.getLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      Ucode ucode0 = Ucode.create((byte)118, (-1689), byteArray0, 1533);
      assertEquals(0, ucode0.getCount());
      assertEquals((-1689), ucode0.getType());
      assertEquals(1533, ucode0.getCompanyId());
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertFalse(ucode0.isBatteryLow());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      Ucode ucode0 = Ucode.create((byte)118, (byte)0, byteArray0, 2945);
      ucode0.setPower(97);
      assertEquals(97, ucode0.getPower());
      
      Ucode ucode1 = Ucode.create((byte)0, 328, byteArray0, (-1695));
      assertEquals("00000000000000000000000000000000", ucode1.getUcode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      Ucode ucode0 = Ucode.create((byte)118, (byte)0, byteArray0, 2945);
      assertNotNull(ucode0);
      
      ucode0.setCount(1);
      assertEquals(1, ucode0.getCount());
      
      Ucode ucode1 = Ucode.create((-941), (byte)118, byteArray0, (-293));
      assertEquals(10, ucode1.getInterval());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      Ucode ucode0 = Ucode.create(255, 2945, byteArray0, (byte)0);
      assertEquals(0, ucode0.getCompanyId());
      assertEquals(255, ucode0.getLength());
      assertEquals(0, ucode0.getCount());
      assertEquals(2945, ucode0.getType());
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertNotNull(ucode0);
      assertEquals(0, ucode0.getVersion());
      assertFalse(ucode0.isBatteryLow());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setData((byte[]) null);
      // Undeclared exception!
      try { 
        ucode0.setVersion(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      byte[] byteArray0 = new byte[0];
      ucode0.setData(byteArray0);
      // Undeclared exception!
      try { 
        ucode0.setVersion(102);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 0
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setData((byte[]) null);
      // Undeclared exception!
      try { 
        ucode0.setUcode("00000000000000000000000000000000");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      byte[] byteArray0 = new byte[0];
      ucode0.setData(byteArray0);
      // Undeclared exception!
      try { 
        ucode0.setUcode("00F00000000000700000e0C00b0A0000");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 18 out of bounds for length 0
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setData((byte[]) null);
      // Undeclared exception!
      try { 
        ucode0.setStatus(1066);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      byte[] byteArray0 = new byte[0];
      ucode0.setData(byteArray0);
      // Undeclared exception!
      try { 
        ucode0.setStatus((-187));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 19 out of bounds for length 0
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setData((byte[]) null);
      // Undeclared exception!
      try { 
        ucode0.setPower((-32));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      byte[] byteArray0 = new byte[0];
      ucode0.setData(byteArray0);
      // Undeclared exception!
      try { 
        ucode0.setPower(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 20 out of bounds for length 0
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setData((byte[]) null);
      // Undeclared exception!
      try { 
        ucode0.setCount(9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      byte[] byteArray0 = new byte[0];
      ucode0.setData(byteArray0);
      // Undeclared exception!
      try { 
        ucode0.setCount(98);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 21 out of bounds for length 0
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus((-2712));
      int int0 = ucode0.getInterval();
      assertEquals(2560, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      Ucode ucode0 = Ucode.create(548, 2938, byteArray0, 548);
      int int0 = ucode0.getInterval();
      assertEquals(2938, ucode0.getType());
      assertEquals(0, ucode0.getVersion());
      assertEquals(0, ucode0.getCount());
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(548, ucode0.getCompanyId());
      assertEquals(548, ucode0.getLength());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      boolean boolean0 = ucode0.isBatteryLow();
      assertFalse(boolean0);
      assertEquals(3, ucode0.getVersion());
      assertEquals(0, ucode0.getPower());
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(0, ucode0.getCount());
      assertEquals(0, ucode0.getStatus());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Ucode ucode0 = Ucode.create((-950), (-950), byteArray0, (-950));
      assertNull(ucode0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      Ucode ucode0 = Ucode.create((byte)0, (byte)0, byteArray0, 2958);
      ucode0.setStatus((-639));
      assertEquals((-639), ucode0.getStatus());
      
      Ucode ucode1 = Ucode.create((-639), 0, byteArray0, 2958);
      assertEquals("00000000000000000000000000000000", ucode1.getUcode());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Ucode ucode0 = Ucode.create(2147483645, 2147483645, (byte[]) null, 2147483645);
      assertNull(ucode0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Ucode ucode0 = null;
      try {
        ucode0 = new Ucode(18, 18, byteArray0, 18);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The byte sequence cannot be parsed as a ucode.
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Ucode ucode0 = null;
      try {
        ucode0 = new Ucode(57, 57, (byte[]) null, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The byte sequence cannot be parsed as a ucode.
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setCount(10240);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'count' is out of the valid range: 10240
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setCount((-27));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'count' is out of the valid range: -27
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setPower(974);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'power' is out of the valid range: 974
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setPower(9);
      int int0 = ucode0.getPower();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setPower((-1225));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'power' is out of the valid range: -1225
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus(57);
      int int0 = ucode0.getInterval();
      assertEquals(5120, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus((-2712));
      ucode0.toString();
      assertEquals(2560, ucode0.getInterval());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus((-249));
      int int0 = ucode0.getInterval();
      assertEquals(1280, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus((-1498));
      int int0 = ucode0.getInterval();
      assertEquals((-1498), ucode0.getStatus());
      assertEquals(640, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus((byte)85);
      int int0 = ucode0.getInterval();
      assertEquals(85, ucode0.getStatus());
      assertEquals(320, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus(20);
      int int0 = ucode0.getInterval();
      assertEquals(20, ucode0.getStatus());
      assertEquals(160, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus((-2877));
      int int0 = ucode0.getInterval();
      assertEquals((-2877), ucode0.getStatus());
      assertEquals(80, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus(2);
      int int0 = ucode0.getInterval();
      assertEquals(2, ucode0.getStatus());
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus(97);
      int int0 = ucode0.getInterval();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      ucode0.setStatus(15);
      int int0 = ucode0.getInterval();
      assertEquals(15, ucode0.getStatus());
      assertEquals(10240, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      assertEquals(0, ucode0.getStatus());
      
      ucode0.setStatus(57);
      boolean boolean0 = ucode0.isBatteryLow();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      
      ucode0.setUcode("00F00000000000700000e0Cf0b0A0000");
      assertEquals(3, ucode0.getVersion());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setUcode("*groiM7^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The format of 'ucode' is wrong: *groiM7^
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setUcode((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'ucode' is null.
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setVersion(2578);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'version' is out of the valid range: 2578
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      // Undeclared exception!
      try { 
        ucode0.setVersion((-1587));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'version' is out of the valid range: -1587
         //
         verifyException("com.neovisionaries.bluetooth.ble.advertising.Ucode", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      int int0 = ucode0.getStatus();
      assertEquals(0, int0);
      assertEquals(3, ucode0.getVersion());
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(0, ucode0.getCount());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      int int0 = ucode0.getVersion();
      assertEquals(3, int0);
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(0, ucode0.getPower());
      assertEquals(0, ucode0.getStatus());
      assertEquals(0, ucode0.getCount());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      int int0 = ucode0.getPower();
      assertEquals(0, int0);
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(0, ucode0.getStatus());
      assertEquals(3, ucode0.getVersion());
      assertEquals(0, ucode0.getCount());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      int int0 = ucode0.getCount();
      assertEquals(0, int0);
      assertEquals("00000000000000000000000000000000", ucode0.getUcode());
      assertEquals(3, ucode0.getVersion());
      assertEquals(0, ucode0.getStatus());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Ucode ucode0 = new Ucode();
      String string0 = ucode0.getUcode();
      assertEquals(3, ucode0.getVersion());
      assertEquals(0, ucode0.getCount());
      assertEquals("00000000000000000000000000000000", string0);
      assertEquals(10, ucode0.getInterval());
  }
}
