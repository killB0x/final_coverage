/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:45:46 GMT 2022
 */

package com.neovisionaries.bluetooth.ble.advertising;

import org.junit.Test;
import static org.junit.Assert.*;
import com.neovisionaries.bluetooth.ble.advertising.ServiceData;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ServiceData_ESTest extends ServiceData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Random.setNextRandom((-980));
      byte[] byteArray0 = new byte[4];
      ServiceData serviceData0 = new ServiceData(2, 32, byteArray0);
      UUID uUID0 = serviceData0.getServiceUUID();
      assertEquals("d4030000-d503-4000-9603-0000d7030000", uUID0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ServiceData serviceData0 = new ServiceData((byte)1, (-1239), byteArray0);
      assertEquals(1, serviceData0.getLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ServiceData serviceData0 = new ServiceData(618, 33, byteArray0);
      UUID uUID0 = serviceData0.getServiceUUID();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ServiceData serviceData0 = new ServiceData(2, 32, byteArray0);
      UUID uUID0 = serviceData0.getServiceUUID();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ServiceData serviceData0 = new ServiceData(2, 32, byteArray0);
      String string0 = serviceData0.toString();
      assertEquals("ServiceData(ServiceUUID=00000000-0100-4000-8200-000003000000)", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ServiceData serviceData0 = new ServiceData();
      assertEquals(1, serviceData0.getLength());
  }
}
