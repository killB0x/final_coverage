/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:14:16 GMT 2022
 */

package de.javawi.jstun.test.demo.ice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.javawi.jstun.test.demo.ice.Candidate;
import de.javawi.jstun.test.demo.ice.ICENegotiator;
import de.javawi.jstun.util.Address;
import java.util.HashSet;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ICENegotiator_ESTest extends ICENegotiator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Missing Username", 13);
      byte[] byteArray0 = new byte[9];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      String[] stringArray0 = new String[4];
      ICENegotiator.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      Address address0 = new Address(byteArray0);
      Candidate candidate0 = new Candidate(address0, (byte)89);
      ICENegotiator iCENegotiator0 = new ICENegotiator((byte)89);
      HashSet<Candidate> hashSet0 = iCENegotiator0.candidates;
      hashSet0.add(candidate0);
      List<Candidate> list0 = iCENegotiator0.getSortedCandidates();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ICENegotiator iCENegotiator0 = new ICENegotiator((short)500);
      iCENegotiator0.candidates = null;
      // Undeclared exception!
      try { 
        iCENegotiator0.prioritizeCandidates();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.javawi.jstun.test.demo.ice.ICENegotiator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3478);
      byte[] byteArray0 = new byte[1];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        ICENegotiator.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ICENegotiator iCENegotiator0 = new ICENegotiator((short) (-447));
      iCENegotiator0.candidates = null;
      // Undeclared exception!
      try { 
        iCENegotiator0.getSortedCandidates();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ICENegotiator iCENegotiator0 = new ICENegotiator("UtilityException while gathering candidate addresses.", (-537), (short)24);
      // Undeclared exception!
      try { 
        iCENegotiator0.gatherCandidateAddresses();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // connect: -537
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockDatagramSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3478);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, (byte[]) null);
      ICENegotiator iCENegotiator0 = new ICENegotiator((short)1);
      // Undeclared exception!
      try { 
        iCENegotiator0.gatherCandidateAddresses();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ICENegotiator iCENegotiator0 = new ICENegotiator("wD!T?nOhJ&%3", 0, (short)843);
      iCENegotiator0.gatherCandidateAddresses();
      iCENegotiator0.prioritizeCandidates();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ICENegotiator iCENegotiator0 = new ICENegotiator((short)1);
      List<Candidate> list0 = iCENegotiator0.getSortedCandidates();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      Address address0 = new Address(byteArray0);
      Candidate candidate0 = new Candidate(address0, (byte)89);
      Candidate candidate1 = new Candidate(address0, (Candidate.CandidateType) null, (byte)89, candidate0);
      ICENegotiator iCENegotiator0 = new ICENegotiator((byte)89);
      HashSet<Candidate> hashSet0 = iCENegotiator0.candidates;
      hashSet0.add(candidate1);
      iCENegotiator0.prioritizeCandidates();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ICENegotiator iCENegotiator0 = new ICENegotiator((short)1);
      HashSet<Candidate> hashSet0 = iCENegotiator0.candidates;
      byte[] byteArray0 = new byte[9];
      Address address0 = new Address(byteArray0);
      Candidate.CandidateType candidate_CandidateType0 = Candidate.CandidateType.PeerReflexive;
      Candidate candidate0 = new Candidate(address0, (short)0);
      Candidate candidate1 = new Candidate(address0, candidate_CandidateType0, (byte)89, candidate0);
      hashSet0.add(candidate1);
      iCENegotiator0.prioritizeCandidates();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Address address0 = new Address(byteArray0);
      Candidate candidate0 = new Candidate(address0, (byte)0);
      Candidate.CandidateType candidate_CandidateType0 = Candidate.CandidateType.ServerReflexive;
      Candidate candidate1 = new Candidate(address0, candidate_CandidateType0, (byte)89, candidate0);
      ICENegotiator iCENegotiator0 = new ICENegotiator((byte)0);
      HashSet<Candidate> hashSet0 = iCENegotiator0.candidates;
      hashSet0.add(candidate1);
      iCENegotiator0.prioritizeCandidates();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ICENegotiator iCENegotiator0 = new ICENegotiator((short)1);
      HashSet<Candidate> hashSet0 = new HashSet<Candidate>();
      iCENegotiator0.candidates = hashSet0;
      byte[] byteArray0 = new byte[9];
      Address address0 = new Address(byteArray0);
      Candidate candidate0 = new Candidate(address0, (short) (-2607));
      Candidate.CandidateType candidate_CandidateType0 = Candidate.CandidateType.Relayed;
      Candidate candidate1 = new Candidate(address0, candidate_CandidateType0, (byte)8, candidate0);
      hashSet0.add(candidate1);
      iCENegotiator0.prioritizeCandidates();
  }
}
