/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:19:06 GMT 2022
 */

package de.javawi.jstun.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.javawi.jstun.attribute.MappedAddress;
import de.javawi.jstun.test.BindingLifetimeTest;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BindingLifetimeTest_ESTest extends BindingLifetimeTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("]ZXI:bgeQ?", 5);
      bindingLifetimeTest0.lowerBinarySearchLifetime = 1532;
      bindingLifetimeTest0.setUpperBinarySearchLifetime(5);
      assertFalse(bindingLifetimeTest0.isCompleted());
      assertEquals((-1), bindingLifetimeTest0.getLifetime());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("MappedAddress", 944);
      BindingLifetimeTest.BindingLifetimeTask bindingLifetimeTest_BindingLifetimeTask0 = bindingLifetimeTest0.new BindingLifetimeTask();
      // Undeclared exception!
      try { 
        bindingLifetimeTest_BindingLifetimeTask0.lifetimeQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.javawi.jstun.test.BindingLifetimeTest$BindingLifetimeTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("UqstOjH?9Se_;~wy3O-", 2108);
      MappedAddress mappedAddress0 = new MappedAddress();
      bindingLifetimeTest0.ma = mappedAddress0;
      BindingLifetimeTest.BindingLifetimeTask bindingLifetimeTest_BindingLifetimeTask0 = bindingLifetimeTest0.new BindingLifetimeTask();
      bindingLifetimeTest_BindingLifetimeTask0.run();
      assertFalse(bindingLifetimeTest0.isCompleted());
      assertEquals((-1), bindingLifetimeTest0.getLifetime());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)2;
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("", 5);
      // Undeclared exception!
      try { 
        bindingLifetimeTest0.test();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("", (-453));
      assertFalse(bindingLifetimeTest0.isCompleted());
      
      bindingLifetimeTest0.completed = true;
      bindingLifetimeTest0.isCompleted();
      assertEquals((-1), bindingLifetimeTest0.getLifetime());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("", (-1536));
      assertEquals((-1), bindingLifetimeTest0.getLifetime());
      
      bindingLifetimeTest0.lifetime = 0;
      int int0 = bindingLifetimeTest0.getLifetime();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("zOG/w$x9", 431);
      assertEquals((-1), bindingLifetimeTest0.getLifetime());
      
      bindingLifetimeTest0.lifetime = 431;
      int int0 = bindingLifetimeTest0.getLifetime();
      assertEquals(431, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("de.javawi.jstun.test.BindingLifetimeTest", (-1));
      // Undeclared exception!
      try { 
        bindingLifetimeTest0.test();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // connect: -1
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockDatagramSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 200);
      byte[] byteArray0 = new byte[2];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("", 200);
      try { 
        bindingLifetimeTest0.test();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Message type 0is not supported
         //
         verifyException("de.javawi.jstun.header.MessageHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("zOG/w$x9", 431);
      try { 
        bindingLifetimeTest0.test();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("zOG/w$x9", 431);
      bindingLifetimeTest0.setUpperBinarySearchLifetime(1989);
      assertEquals((-1), bindingLifetimeTest0.getLifetime());
      assertFalse(bindingLifetimeTest0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest("zOG/w$x9", 431);
      int int0 = bindingLifetimeTest0.getLifetime();
      assertFalse(bindingLifetimeTest0.isCompleted());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BindingLifetimeTest bindingLifetimeTest0 = new BindingLifetimeTest((String) null, 200);
      boolean boolean0 = bindingLifetimeTest0.isCompleted();
      assertEquals((-1), bindingLifetimeTest0.getLifetime());
      assertFalse(boolean0);
  }
}
