/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:16:50 GMT 2022
 */

package de.javawi.jstun.test.demo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.javawi.jstun.test.demo.StunServer;
import java.io.IOException;
import java.net.DatagramSocket;
import java.net.DatagramSocketImplFactory;
import java.net.InetAddress;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockDatagramSocket;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StunServer_ESTest extends StunServer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "de.javawi.jstun.attribute.MappedAddress";
      stringArray0[1] = ">B9au1e^@,KD]%U";
      stringArray0[2] = "*J@Qj>wASjf`~>x/.";
      stringArray0[3] = "n#Yp0t~1]Y6";
      // Undeclared exception!
      try { 
        StunServer.main(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"de.javawi.jstun.attribute.MappedAddress\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      StunServer stunServer0 = new StunServer(200, inetAddress0, 3, inetAddress0);
      MockDatagramSocket mockDatagramSocket0 = new MockDatagramSocket(0, inetAddress0);
      StunServer.StunServerReceiverThread stunServer_StunServerReceiverThread0 = stunServer0.new StunServerReceiverThread(mockDatagramSocket0);
      stunServer_StunServerReceiverThread0.run();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "T6h^;+M%Z.@JtQwFMb";
      stringArray0[1] = "";
      stringArray0[2] = "Nothing received in Change Request attribute";
      stringArray0[3] = " datagram received from ";
      stringArray0[4] = "";
      stringArray0[5] = "de.javawi.jstun.attribute.MessageAttributeParsingException";
      stringArray0[6] = "/";
      stringArray0[7] = "";
      stringArray0[8] = "FmOb!%DnC5&'29(_";
      // Undeclared exception!
      try { 
        StunServer.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      StunServer stunServer0 = new StunServer(200, inetAddress0, 3, inetAddress0);
      MockDatagramSocket mockDatagramSocket0 = new MockDatagramSocket(0, inetAddress0);
      StunServer.StunServerReceiverThread stunServer_StunServerReceiverThread0 = stunServer0.new StunServerReceiverThread(mockDatagramSocket0);
      stunServer_StunServerReceiverThread0.run();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "T6h^;+M%Z.@JtQwFMb";
      stringArray0[1] = "";
      stunServer0.start();
      stunServer0.stop();
      stunServer_StunServerReceiverThread0.run();
      stunServer_StunServerReceiverThread0.run();
      // Undeclared exception!
      try { 
        StunServer.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        StunServer.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.javawi.jstun.test.demo.StunServer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      int int0 = 3;
      StunServer stunServer0 = new StunServer(0, inetAddress0, 3, inetAddress0);
      Vector<DatagramSocket> vector0 = stunServer0.sockets;
      stunServer0.sockets = vector0;
      MockDatagramSocket mockDatagramSocket0 = new MockDatagramSocket();
      mockDatagramSocket0.close();
      StunServer.StunServerReceiverThread stunServer_StunServerReceiverThread0 = stunServer0.new StunServerReceiverThread(mockDatagramSocket0);
      vector0.add((DatagramSocket) mockDatagramSocket0);
      Vector<DatagramSocket> vector1 = stunServer0.sockets;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stunServer0.sockets.forEach(consumer0);
      DatagramSocketImplFactory datagramSocketImplFactory0 = mock(DatagramSocketImplFactory.class, new ViolatedAssumptionAnswer());
      try { 
        MockDatagramSocket.setDatagramSocketImplFactory(datagramSocketImplFactory0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Setting of factory is not supported
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockDatagramSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      StunServer stunServer0 = new StunServer(2583, inetAddress0, 2583, inetAddress0);
      stunServer0.start();
      StunServer stunServer1 = new StunServer(1375, inetAddress0, 1375, inetAddress0);
      MockDatagramSocket mockDatagramSocket0 = new MockDatagramSocket();
      StunServer.StunServerReceiverThread stunServer_StunServerReceiverThread0 = stunServer0.new StunServerReceiverThread(mockDatagramSocket0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 2583;
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      StunServer stunServer0 = new StunServer(2583, inetAddress0, 2583, inetAddress0);
      stunServer0.start();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "X";
      stringArray0[1] = ">B9au1e^@,KD]%U";
      stringArray0[2] = "#gyfZKQ{";
      stringArray0[3] = "de.javawi.jstun.test.demo.StunServer";
      stringArray0[4] = "*J@Qj>wASjf`~>x/.";
      stringArray0[5] = "de.javawi.jstun.attribute.MappedAddress";
      stringArray0[6] = "n#Yp0t~1]Y6";
      // Undeclared exception!
      try { 
        StunServer.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      StunServer stunServer0 = new StunServer(512, inetAddress0, 1919, inetAddress0);
      StunServer.StunServerReceiverThread stunServer_StunServerReceiverThread0 = null;
      try {
        stunServer_StunServerReceiverThread0 = stunServer0.new StunServerReceiverThread((DatagramSocket) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.javawi.jstun.test.demo.StunServer$StunServerReceiverThread", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        StunServer.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "eOWh7[l:";
      // Undeclared exception!
      try { 
        StunServer.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getByName("logging_server.txt");
      StunServer stunServer0 = null;
      try {
        stunServer0 = new StunServer((-2313), inetAddress0, 4, inetAddress0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-2313
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      StunServer stunServer0 = new StunServer(0, inetAddress0, 2047, inetAddress0);
      MockDatagramSocket mockDatagramSocket0 = new MockDatagramSocket();
      StunServer.StunServerReceiverThread stunServer_StunServerReceiverThread0 = stunServer0.new StunServerReceiverThread(mockDatagramSocket0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      StunServer stunServer0 = null;
      try {
        stunServer0 = new StunServer((-454), inetAddress0, (-454), inetAddress0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-454
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StunServer stunServer0 = new StunServer(121, (InetAddress) null, 121, (InetAddress) null);
      StunServer.StunServerReceiverThread stunServer_StunServerReceiverThread0 = null;
      try {
        stunServer_StunServerReceiverThread0 = stunServer0.new StunServerReceiverThread((DatagramSocket) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.javawi.jstun.test.demo.StunServer$StunServerReceiverThread", e);
      }
  }
}
