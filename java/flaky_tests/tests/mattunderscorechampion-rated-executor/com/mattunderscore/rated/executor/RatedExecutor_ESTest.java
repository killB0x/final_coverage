/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:25:19 GMT 2022
 */

package com.mattunderscore.rated.executor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mattunderscore.executors.IRepeatingFuture;
import com.mattunderscore.executors.ITaskResultProcessor;
import com.mattunderscore.executors.ITaskWrapper;
import com.mattunderscore.executors.TaskWrapperFactory;
import com.mattunderscore.executors.UncaughtExceptionResult;
import com.mattunderscore.rated.executor.IInternalExecutor;
import com.mattunderscore.rated.executor.RatedExecutor;
import com.mattunderscore.rated.executor.RatedExecutorThreadFactory;
import com.mattunderscore.rated.executor.ScheduledInternalExecutor;
import com.mattunderscore.rated.executor.TaskQueue;
import com.mattunderscore.rated.executor.ThreadedInternalExecutor;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RatedExecutor_ESTest extends RatedExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-286L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      ratedExecutor0.execute(callable0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-2508L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      ratedExecutor0.execute((Runnable) threadedInternalExecutor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      Future<Object> future0 = ratedExecutor0.submit(callable0);
      assertNotNull(future0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 2965L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      IRepeatingFuture<?> iRepeatingFuture0 = ratedExecutor0.schedule((Runnable) threadedInternalExecutor0, 0);
      assertEquals(0, iRepeatingFuture0.getExpectedExecutions());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, (-2948L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, scheduledInternalExecutor0, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.submit((Callable<Object>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      MockThread mockThread0 = new MockThread();
      // Undeclared exception!
      try { 
        ratedExecutor0.submit((Runnable) mockThread0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, scheduledInternalExecutor0, taskWrapperFactory0);
      Thread thread0 = MockThread.currentThread();
      // Undeclared exception!
      try { 
        ratedExecutor0.submit((Runnable) thread0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      MockThread mockThread0 = new MockThread("");
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      ratedExecutor0.schedule((Callable<Integer>) null, 3630);
      ratedExecutor0.schedule((Runnable) mockThread0, 3630);
      // Undeclared exception!
      ratedExecutor0.schedule((Callable<Integer>) null, 3630);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Callable<Object>) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Callable<Object>) null, (-2468));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2468
         //
         verifyException("com.mattunderscore.executors.RepeatingFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, (-870L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, scheduledInternalExecutor0, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Callable<Object>) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      Thread thread0 = MockThread.currentThread();
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Runnable) thread0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 2965L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Runnable) threadedInternalExecutor0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("com.mattunderscore.executors.RepeatingFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, (-1L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, scheduledInternalExecutor0, taskWrapperFactory0);
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-1L), timeUnit0, ratedExecutorThreadFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Runnable) threadedInternalExecutor0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, scheduledInternalExecutor0, taskWrapperFactory0);
      Thread thread0 = MockThread.currentThread();
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Runnable) thread0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor((TaskQueue) null, scheduledInternalExecutor0, taskWrapperFactory0);
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ratedExecutor0.execute(callable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, (-1L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, scheduledInternalExecutor0, taskWrapperFactory0);
      MockThread mockThread0 = new MockThread((Runnable) null, "nD");
      // Undeclared exception!
      try { 
        ratedExecutor0.execute((Runnable) mockThread0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor((TaskQueue) null, (IInternalExecutor) null, taskWrapperFactory0);
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor((TaskQueue) null, 0L, timeUnit0, ratedExecutorThreadFactory0);
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0);
      // Undeclared exception!
      try { 
        ratedExecutor0.cancelTask(iTaskWrapper0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.cancelTask((ITaskWrapper) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.TaskQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 2965L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      ratedExecutor0.schedule((Runnable) threadedInternalExecutor0);
      ITaskWrapper iTaskWrapper0 = taskQueue0.poll();
      boolean boolean0 = ratedExecutor0.cancelTask(iTaskWrapper0, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      ratedExecutor0.schedule((Runnable) threadedInternalExecutor0);
      ITaskWrapper iTaskWrapper0 = taskQueue0.poll();
      boolean boolean0 = ratedExecutor0.cancelTask(iTaskWrapper0, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-286L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      UncaughtExceptionResult<Void> uncaughtExceptionResult0 = new UncaughtExceptionResult<Void>();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0, (ITaskResultProcessor<Void>) uncaughtExceptionResult0);
      boolean boolean0 = ratedExecutor0.cancelTask(iTaskWrapper0, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      Future<?> future0 = ratedExecutor0.submit((Runnable) threadedInternalExecutor0);
      assertNotNull(future0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      Thread thread0 = MockThread.currentThread();
      // Undeclared exception!
      try { 
        ratedExecutor0.schedule((Runnable) thread0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      Thread thread0 = MockThread.currentThread();
      // Undeclared exception!
      try { 
        ratedExecutor0.execute((Runnable) thread0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.submit((Callable<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      // Undeclared exception!
      try { 
        ratedExecutor0.execute((Callable<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutor", e);
      }
  }
}
