/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:25:40 GMT 2022
 */

package com.mattunderscore.rated.executor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mattunderscore.executors.FutureSetResult;
import com.mattunderscore.executors.ITaskCanceller;
import com.mattunderscore.executors.ITaskResultProcessor;
import com.mattunderscore.executors.ITaskWrapper;
import com.mattunderscore.executors.RepeatingFuture;
import com.mattunderscore.executors.SingleFuture;
import com.mattunderscore.executors.TaskWrapperFactory;
import com.mattunderscore.rated.executor.IInternalExecutor;
import com.mattunderscore.rated.executor.RatedExecutor;
import com.mattunderscore.rated.executor.RatedExecutorTaskResultProcessor;
import com.mattunderscore.rated.executor.RatedExecutorThreadFactory;
import com.mattunderscore.rated.executor.ScheduledInternalExecutor;
import com.mattunderscore.rated.executor.TaskQueue;
import com.mattunderscore.rated.executor.ThreadedInternalExecutor;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RatedExecutorTaskResultProcessor_ESTest extends RatedExecutorTaskResultProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      SingleFuture<Integer> singleFuture0 = new SingleFuture<Integer>(ratedExecutor0);
      RatedExecutorTaskResultProcessor<Integer> ratedExecutorTaskResultProcessor0 = new RatedExecutorTaskResultProcessor<Integer>(singleFuture0, (IInternalExecutor) null);
      SingleFuture<Object> singleFuture1 = new SingleFuture<Object>(ratedExecutor0);
      FutureSetResult<Object> futureSetResult0 = new FutureSetResult<Object>(singleFuture1);
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Callable<Object>) null, (ITaskResultProcessor<Object>) futureSetResult0);
      // Undeclared exception!
      try { 
        ratedExecutorTaskResultProcessor0.onThrowable(iTaskWrapper0, (Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutorTaskResultProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, scheduledInternalExecutor0, taskWrapperFactory0);
      RepeatingFuture<Object> repeatingFuture0 = new RepeatingFuture<Object>(ratedExecutor0, 130);
      RatedExecutorTaskResultProcessor<Object> ratedExecutorTaskResultProcessor0 = new RatedExecutorTaskResultProcessor<Object>(repeatingFuture0, scheduledInternalExecutor0);
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Callable<Object>) null, (ITaskResultProcessor<Object>) ratedExecutorTaskResultProcessor0);
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        ratedExecutorTaskResultProcessor0.onThrowable(iTaskWrapper0, mockThrowable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor((TaskQueue) null, (IInternalExecutor) null, taskWrapperFactory0);
      RepeatingFuture<Object> repeatingFuture0 = new RepeatingFuture<Object>(ratedExecutor0, 0);
      RatedExecutorTaskResultProcessor<Object> ratedExecutorTaskResultProcessor0 = new RatedExecutorTaskResultProcessor<Object>(repeatingFuture0, (IInternalExecutor) null);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor((TaskQueue) null, 4039L, timeUnit0, ratedExecutorThreadFactory0);
      RepeatingFuture<Void> repeatingFuture1 = new RepeatingFuture<Void>(ratedExecutor0, 0);
      FutureSetResult<Void> futureSetResult0 = new FutureSetResult<Void>(repeatingFuture1);
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0, (ITaskResultProcessor<Void>) futureSetResult0);
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        ratedExecutorTaskResultProcessor0.onThrowable(iTaskWrapper0, mockThrowable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.mattunderscore.executors.RepeatingFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, (IInternalExecutor) null, taskWrapperFactory0);
      SingleFuture<Object> singleFuture0 = new SingleFuture<Object>(ratedExecutor0);
      RatedExecutorTaskResultProcessor<Object> ratedExecutorTaskResultProcessor0 = new RatedExecutorTaskResultProcessor<Object>(singleFuture0, (IInternalExecutor) null);
      // Undeclared exception!
      try { 
        ratedExecutorTaskResultProcessor0.onResult((ITaskWrapper) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.RatedExecutorTaskResultProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper(callable0);
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      RepeatingFuture<Object> repeatingFuture0 = new RepeatingFuture<Object>((ITaskCanceller) null, 1627);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      ScheduledInternalExecutor scheduledInternalExecutor0 = new ScheduledInternalExecutor(taskQueue0, 1627, timeUnit0, ratedExecutorThreadFactory0);
      RatedExecutorTaskResultProcessor<Object> ratedExecutorTaskResultProcessor0 = new RatedExecutorTaskResultProcessor<Object>(repeatingFuture0, scheduledInternalExecutor0);
      Integer integer0 = new Integer(1);
      ratedExecutorTaskResultProcessor0.onResult(iTaskWrapper0, integer0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RepeatingFuture<Integer> repeatingFuture0 = new RepeatingFuture<Integer>((ITaskCanceller) null, 4359);
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 4359, timeUnit0, ratedExecutorThreadFactory0);
      RatedExecutorTaskResultProcessor<Integer> ratedExecutorTaskResultProcessor0 = new RatedExecutorTaskResultProcessor<Integer>(repeatingFuture0, threadedInternalExecutor0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0);
      MockThrowable mockThrowable0 = new MockThrowable("");
      ratedExecutorTaskResultProcessor0.onThrowable(iTaskWrapper0, mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: ", mockThrowable0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-168L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      RepeatingFuture<Object> repeatingFuture0 = new RepeatingFuture<Object>(ratedExecutor0, 0);
      RatedExecutorTaskResultProcessor<Object> ratedExecutorTaskResultProcessor0 = new RatedExecutorTaskResultProcessor<Object>(repeatingFuture0, threadedInternalExecutor0);
      // Undeclared exception!
      try { 
        ratedExecutorTaskResultProcessor0.onResult((ITaskWrapper) null, threadedInternalExecutor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.mattunderscore.executors.RepeatingFuture", e);
      }
  }
}
