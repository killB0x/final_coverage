/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:27:41 GMT 2022
 */

package com.mattunderscore.rated.executor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mattunderscore.executors.ITaskResultProcessor;
import com.mattunderscore.executors.ITaskWrapper;
import com.mattunderscore.executors.TaskWrapperFactory;
import com.mattunderscore.rated.executor.ExecutingTask;
import com.mattunderscore.rated.executor.TaskQueue;
import java.util.concurrent.Callable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExecutingTask_ESTest extends ExecutingTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      MockThread mockThread0 = new MockThread("lU^*/K]{X^");
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) mockThread0, (ITaskResultProcessor<Void>) null);
      taskQueue0.add(iTaskWrapper0);
      ExecutingTask executingTask0 = new ExecutingTask(taskQueue0);
      // Undeclared exception!
      try { 
        executingTask0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.executors.TaskWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper(callable0);
      taskQueue0.add(iTaskWrapper0);
      ExecutingTask executingTask0 = new ExecutingTask(taskQueue0);
      executingTask0.run();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      ExecutingTask executingTask0 = new ExecutingTask(taskQueue0);
      executingTask0.run();
  }
}
