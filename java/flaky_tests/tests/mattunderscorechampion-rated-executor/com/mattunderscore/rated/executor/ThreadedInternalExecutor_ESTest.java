/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:14:19 GMT 2022
 */

package com.mattunderscore.rated.executor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mattunderscore.executors.FutureSetResult;
import com.mattunderscore.executors.ISettableFuture;
import com.mattunderscore.executors.ITaskResultProcessor;
import com.mattunderscore.executors.ITaskWrapper;
import com.mattunderscore.executors.SingleFuture;
import com.mattunderscore.executors.TaskWrapper;
import com.mattunderscore.executors.TaskWrapperFactory;
import com.mattunderscore.executors.UncaughtExceptionResult;
import com.mattunderscore.rated.executor.RatedExecutor;
import com.mattunderscore.rated.executor.RatedExecutorThreadFactory;
import com.mattunderscore.rated.executor.TaskQueue;
import com.mattunderscore.rated.executor.ThreadedInternalExecutor;
import java.util.concurrent.Callable;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThreadedInternalExecutor_ESTest extends ThreadedInternalExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 1703L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      UncaughtExceptionResult<Object> uncaughtExceptionResult0 = new UncaughtExceptionResult<Object>();
      Object object0 = new Object();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(callable0).call();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper(callable0, (ITaskResultProcessor<Object>) uncaughtExceptionResult0);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      ratedExecutorThreadFactory0.newThread(threadedInternalExecutor0);
      TimeUnit timeUnit1 = TimeUnit.MINUTES;
      ThreadedInternalExecutor threadedInternalExecutor1 = new ThreadedInternalExecutor(taskQueue0, 1994L, timeUnit1, ratedExecutorThreadFactory0);
      TaskWrapper<Object> taskWrapper0 = new TaskWrapper<Object>((Callable<Object>) null, uncaughtExceptionResult0);
      threadedInternalExecutor1.submit(taskWrapper0);
      threadedInternalExecutor1.requestStop();
      threadedInternalExecutor1.requestStop();
      // Undeclared exception!
      try { 
        threadedInternalExecutor0.run();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 1703L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      UncaughtExceptionResult<Object> uncaughtExceptionResult0 = new UncaughtExceptionResult<Object>();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper(callable0, (ITaskResultProcessor<Object>) uncaughtExceptionResult0);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      ratedExecutorThreadFactory0.newThread((Runnable) null);
      TimeUnit timeUnit1 = TimeUnit.MINUTES;
      ThreadedInternalExecutor threadedInternalExecutor1 = new ThreadedInternalExecutor(taskQueue0, 1994L, timeUnit1, ratedExecutorThreadFactory0);
      threadedInternalExecutor1.requestStop();
      threadedInternalExecutor1.requestStop();
      // Undeclared exception!
      threadedInternalExecutor0.run();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 1703L, timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      UncaughtExceptionResult<Object> uncaughtExceptionResult0 = new UncaughtExceptionResult<Object>();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn(ratedExecutorThreadFactory0).when(callable0).call();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper(callable0, (ITaskResultProcessor<Object>) uncaughtExceptionResult0);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      ThreadedInternalExecutor threadedInternalExecutor1 = new ThreadedInternalExecutor(taskQueue0, (-126576000000000000L), timeUnit0, ratedExecutorThreadFactory0);
      // Undeclared exception!
      threadedInternalExecutor0.run();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-1L), timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.interrupt();
      threadedInternalExecutor0.interrupt();
      Object object0 = new Object();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      ratedExecutor0.submit((Runnable) threadedInternalExecutor0);
      Object object1 = new Object();
      Callable<Object> callable1 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      SingleFuture<Object> singleFuture0 = new SingleFuture<Object>(ratedExecutor0);
      Callable<Object> callable2 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper(callable2);
      singleFuture0.setTask(iTaskWrapper0);
      FutureSetResult<Object> futureSetResult0 = new FutureSetResult<Object>(singleFuture0);
      RatedExecutorThreadFactory ratedExecutorThreadFactory1 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor1 = new ThreadedInternalExecutor(taskQueue0, (-1L), timeUnit0, ratedExecutorThreadFactory1);
      // Undeclared exception!
      threadedInternalExecutor0.run();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.stop();
      Object object0 = new Object();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(callable0).call();
      UncaughtExceptionResult<Object> uncaughtExceptionResult0 = new UncaughtExceptionResult<Object>();
      TaskWrapper<Object> taskWrapper0 = new TaskWrapper<Object>(callable0, uncaughtExceptionResult0);
      threadedInternalExecutor0.submit(taskWrapper0);
      // Undeclared exception!
      threadedInternalExecutor0.run();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 483L, timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.interrupt();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0, (ITaskResultProcessor<Void>) null);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      ThreadedInternalExecutor threadedInternalExecutor1 = new ThreadedInternalExecutor(taskQueue0, 1450L, timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor1.run();
      threadedInternalExecutor0.interrupt();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-1L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      RatedExecutor ratedExecutor0 = new RatedExecutor(taskQueue0, threadedInternalExecutor0, taskWrapperFactory0);
      taskQueue0.clearCurrentTask();
      SingleFuture<Void> singleFuture0 = new SingleFuture<Void>(ratedExecutor0);
      FutureSetResult<Void> futureSetResult0 = new FutureSetResult<Void>(singleFuture0);
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0, (ITaskResultProcessor<Void>) futureSetResult0);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      threadedInternalExecutor0.interrupt();
      threadedInternalExecutor0.requestStop();
      threadedInternalExecutor0.requestStop();
      threadedInternalExecutor0.submit(iTaskWrapper0);
      threadedInternalExecutor0.submit(iTaskWrapper0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 0L, timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.stop();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      UncaughtExceptionResult<Object> uncaughtExceptionResult0 = new UncaughtExceptionResult<Object>();
      TaskWrapper<Object> taskWrapper0 = new TaskWrapper<Object>(callable0, uncaughtExceptionResult0);
      threadedInternalExecutor0.submit(taskWrapper0);
      // Undeclared exception!
      threadedInternalExecutor0.run();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      TaskQueue taskQueue1 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue1, (-126576000000000000L), timeUnit0, ratedExecutorThreadFactory0);
      taskQueue0.poll();
      // Undeclared exception!
      try { 
        threadedInternalExecutor0.submit((ITaskWrapper) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.LinkedBlockingQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "=$=vpOqL#^a7");
      MockThread mockThread1 = new MockThread(mockThread0);
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) mockThread1);
      taskQueue0.isCurrentTask(iTaskWrapper0);
      TaskWrapperFactory taskWrapperFactory1 = new TaskWrapperFactory();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(mockThread0);
      FutureSetResult<Void> futureSetResult0 = new FutureSetResult<Void>((ISettableFuture<Void>) null);
      taskWrapperFactory1.newWrapper((Runnable) mockThread2, (ITaskResultProcessor<Void>) futureSetResult0);
      UncaughtExceptionResult<Object> uncaughtExceptionResult0 = new UncaughtExceptionResult<Object>();
      ITaskWrapper iTaskWrapper1 = taskWrapperFactory1.newWrapper(callable0, (ITaskResultProcessor<Object>) uncaughtExceptionResult0);
      taskQueue0.isCurrentTask(iTaskWrapper1);
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-2790L), timeUnit0, (ThreadFactory) null);
      threadedInternalExecutor0.requestStop();
      threadedInternalExecutor0.requestStop();
      threadedInternalExecutor0.stop();
      threadedInternalExecutor0.stop();
      threadedInternalExecutor0.interrupt();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 1L, timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.run();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      MockThread mockThread0 = new MockThread("com.mattunderscore.rated.executor.ThreadedInternalExecutor");
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) mockThread0);
      taskQueue0.add(iTaskWrapper0);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-69L), timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.requestStop();
      threadedInternalExecutor0.run();
      threadedInternalExecutor0.requestStop();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 1940L, timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.interrupt();
      threadedInternalExecutor0.run();
      threadedInternalExecutor0.run();
      threadedInternalExecutor0.interrupt();
      threadedInternalExecutor0.interrupt();
      threadedInternalExecutor0.requestStop();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-1397L), timeUnit0, (ThreadFactory) null);
      threadedInternalExecutor0.interrupt();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, (-126576000000000000L), timeUnit0, ratedExecutorThreadFactory0);
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0, (ITaskResultProcessor<Void>) null);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      threadedInternalExecutor0.submit(iTaskWrapper0);
      // Undeclared exception!
      try { 
        threadedInternalExecutor0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.executors.TaskWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TaskQueue taskQueue0 = new TaskQueue();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor(taskQueue0, 693L, timeUnit0, ratedExecutorThreadFactory0);
      threadedInternalExecutor0.requestStop();
      TaskWrapperFactory taskWrapperFactory0 = new TaskWrapperFactory();
      ITaskWrapper iTaskWrapper0 = taskWrapperFactory0.newWrapper((Runnable) threadedInternalExecutor0);
      taskQueue0.add(iTaskWrapper0);
      threadedInternalExecutor0.run();
      threadedInternalExecutor0.requestStop();
      threadedInternalExecutor0.interrupt();
      threadedInternalExecutor0.interrupt();
      threadedInternalExecutor0.submit(iTaskWrapper0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      RatedExecutorThreadFactory ratedExecutorThreadFactory0 = new RatedExecutorThreadFactory();
      ThreadedInternalExecutor threadedInternalExecutor0 = new ThreadedInternalExecutor((TaskQueue) null, 0L, timeUnit0, ratedExecutorThreadFactory0);
      // Undeclared exception!
      try { 
        threadedInternalExecutor0.requestStop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mattunderscore.rated.executor.ThreadedInternalExecutor", e);
      }
  }
}
