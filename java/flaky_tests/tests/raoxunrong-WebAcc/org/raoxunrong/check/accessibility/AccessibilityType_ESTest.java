/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:12:30 GMT 2022
 */

package org.raoxunrong.check.accessibility;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.raoxunrong.check.accessibility.AccessibilityType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccessibilityType_ESTest extends AccessibilityType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AccessibilityType[] accessibilityTypeArray0 = AccessibilityType.values();
      assertEquals(7, accessibilityTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AccessibilityType accessibilityType0 = AccessibilityType.valueOf("LabelMissing");
      assertEquals(AccessibilityType.LabelMissing, accessibilityType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AccessibilityType accessibilityType0 = AccessibilityType.ElementDeprecated;
      String string0 = accessibilityType0.getDescription();
      assertEquals("A deprecated element is present, such as <marquee> or <blink>.", string0);
  }
}
