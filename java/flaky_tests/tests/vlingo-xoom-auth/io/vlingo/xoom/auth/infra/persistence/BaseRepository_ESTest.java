/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 22:33:16 GMT 2022
 */

package io.vlingo.xoom.auth.infra.persistence;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.auth.infra.persistence.InMemoryRoleRepository;
import io.vlingo.xoom.auth.model.TenantId;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseRepository_ESTest extends BaseRepository_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InMemoryRoleRepository inMemoryRoleRepository0 = new InMemoryRoleRepository();
      TenantId tenantId0 = TenantId.unique();
      String string0 = inMemoryRoleRepository0.keyFor(tenantId0, "00000000-0100-4000-8200-000003000000");
      assertEquals("00000000-0100-4000-8200-000003000000:00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InMemoryRoleRepository inMemoryRoleRepository0 = new InMemoryRoleRepository();
      // Undeclared exception!
      try { 
        inMemoryRoleRepository0.keyFor((TenantId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.auth.infra.persistence.BaseRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InMemoryRoleRepository inMemoryRoleRepository0 = new InMemoryRoleRepository();
      TenantId tenantId0 = TenantId.fromExisting("a^Y{N>:^8%gT92h{_&:");
      String string0 = inMemoryRoleRepository0.keyFor(tenantId0);
      assertEquals("a^Y{N>:^8%gT92h{_&::", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InMemoryRoleRepository inMemoryRoleRepository0 = new InMemoryRoleRepository();
      // Undeclared exception!
      try { 
        inMemoryRoleRepository0.keyFor((TenantId) null, "+j{aaSvz-J8OSq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.auth.infra.persistence.BaseRepository", e);
      }
  }
}
