/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 22:24:30 GMT 2022
 */

package io.vlingo.xoom.auth.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.auth.model.EmailAddress;
import io.vlingo.xoom.auth.model.PersonName;
import io.vlingo.xoom.auth.model.Phone;
import io.vlingo.xoom.auth.model.Profile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Profile_ESTest extends Profile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PersonName personName0 = PersonName.of("PersonName given required.", "OS&ciB~Dm", "OS&ciB~Dm");
      EmailAddress emailAddress0 = EmailAddress.of("OS&ciB~Dm");
      Profile profile0 = Profile.with(personName0, emailAddress0, (Phone) null);
      Phone phone0 = Phone.of("@z4LS;v)>wF99V1");
      Profile profile1 = profile0.withPhoneOf(phone0);
      assertNotSame(profile1, profile0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PersonName personName0 = PersonName.of("PqrsonNamMfamily reqke.", "PqrsonNamMfamily reqke.", "PqrsonNamMfamily reqke.");
      Phone phone0 = Phone.of("PqrsonNamMfamily reqke.");
      EmailAddress emailAddress0 = EmailAddress.of("PqrsonNamMfamily reqke.");
      Profile profile0 = Profile.with(personName0, emailAddress0, phone0);
      // Undeclared exception!
      try { 
        profile0.withNameOf((PersonName) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Profile name required.
         //
         verifyException("io.vlingo.xoom.auth.model.Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PersonName personName0 = PersonName.of("io.vlingo.xoom.auth.model.PersonName", "io.vlingo.xoom.auth.model.PersonName", "io.vlingo.xoom.auth.model.PersonName");
      Phone phone0 = new Phone("io.vlingo.xoom.auth.model.PersonName");
      EmailAddress emailAddress0 = EmailAddress.of("io.vlingo.xoom.auth.model.PersonName");
      Profile profile0 = Profile.with(personName0, emailAddress0, phone0);
      // Undeclared exception!
      try { 
        profile0.withEmailAddressOf((EmailAddress) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Profile email address required.
         //
         verifyException("io.vlingo.xoom.auth.model.Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PersonName personName0 = PersonName.of("PersonName given required.", "OS&ciB~Dm", "OS&ciB~Dm");
      EmailAddress emailAddress0 = EmailAddress.of("OS&ciB~Dm");
      Profile profile0 = Profile.with(personName0, emailAddress0, (Phone) null);
      Profile profile1 = profile0.withNameOf(personName0);
      assertNotSame(profile1, profile0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PersonName personName0 = PersonName.of("PersonName family required.", "PersonName family required.", "PersonName family required.");
      Phone phone0 = new Phone("PersonName family required.");
      EmailAddress emailAddress0 = EmailAddress.of("PersonName family required.");
      Profile profile0 = Profile.with(personName0, emailAddress0, phone0);
      Profile profile1 = profile0.withEmailAddressOf(emailAddress0);
      assertNotSame(profile0, profile1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.with((PersonName) null, (EmailAddress) null, (Phone) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Profile name required.
         //
         verifyException("io.vlingo.xoom.auth.model.Profile", e);
      }
  }
}
