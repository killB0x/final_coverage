/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 22:10:35 GMT 2022
 */

package io.vlingo.xoom.auth.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.auth.model.Constraint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Constraint_ESTest extends Constraint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.Double;
      Constraint constraint0 = Constraint.of(constraint_Type0, "yQEq?dJVT;^D,CJkqe", "yQEq?dJVT;^D,CJkqe", "N>j+6[Nr6Vy");
      constraint0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.Boolean;
      Constraint constraint0 = Constraint.of(constraint_Type0, (String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        constraint0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.auth.model.Constraint", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.Boolean;
      Constraint constraint0 = Constraint.of(constraint_Type0, "e", "e", "e");
      Constraint constraint1 = new Constraint(constraint0.type, (String) null, "e", "e");
      // Undeclared exception!
      try { 
        constraint1.equals(constraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.Double;
      Constraint constraint0 = Constraint.of(constraint_Type0, "e", "e", "e");
      Constraint constraint1 = new Constraint(constraint_Type0, "e", "e", ":kXX'm@(&$}-%5)");
      boolean boolean0 = constraint1.equals(constraint0);
      assertFalse(boolean0);
      assertFalse(constraint0.equals((Object)constraint1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.String;
      Constraint constraint0 = Constraint.of(constraint_Type0, "", "", "");
      Constraint constraint1 = Constraint.of(constraint_Type0, "", "]", "wD1fqQ=]");
      boolean boolean0 = constraint1.equals(constraint0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.String;
      Constraint constraint0 = new Constraint(constraint_Type0, "4.b", "4.b", "4.b");
      Constraint constraint1 = Constraint.of(constraint_Type0, "Constraint[type=String name=4.b value=4.b description=4.b]", "4.b", "Constraint[type=String name=4.b value=4.b description=4.b]");
      boolean boolean0 = constraint1.equals(constraint0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.Boolean;
      Constraint constraint0 = Constraint.of(constraint_Type0, "e", "e", "e");
      Constraint.Type constraint_Type1 = Constraint.Type.String;
      Constraint constraint1 = new Constraint(constraint_Type1, "e", "e", "e");
      boolean boolean0 = constraint0.equals(constraint1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.String;
      Constraint constraint0 = Constraint.of(constraint_Type0, "", "", "");
      boolean boolean0 = constraint0.equals("]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.String;
      Constraint constraint0 = Constraint.of(constraint_Type0, "", "", "");
      boolean boolean0 = constraint0.equals(constraint0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.Integer;
      Constraint constraint0 = new Constraint(constraint_Type0, (String) null, (String) null, (String) null);
      boolean boolean0 = constraint0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Constraint.Type constraint_Type0 = Constraint.Type.String;
      Constraint constraint0 = Constraint.of(constraint_Type0, "", "", "");
      String string0 = constraint0.toString();
      assertEquals("Constraint[type=String name= value= description=]", string0);
  }
}
