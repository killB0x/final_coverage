/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 17:02:34 GMT 2022
 */

package org.jgroups.protocols.kubernetes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jgroups.protocols.kubernetes.Pod;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pod_ESTest extends Pod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Pod pod0 = new Pod("7\"#'d", "7\"#'d", "7\"#'d", true);
      pod0.hashCode();
      assertTrue(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Pod pod0 = new Pod((String) null, (String) null, (String) null, true);
      boolean boolean0 = pod0.isReady();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pod pod0 = new Pod((String) null, (String) null, (String) null, true);
      pod0.getPodGroup();
      assertTrue(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pod pod0 = new Pod("Pt", "", "SSXzzc&", true);
      String string0 = pod0.getPodGroup();
      assertTrue(pod0.isReady());
      assertEquals("SSXzzc&", string0);
      assertEquals("Pt", pod0.getName());
      assertEquals("", pod0.getIp());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Pod pod0 = new Pod((String) null, "Lap", ")r ldEcP]z&e", true);
      String string0 = pod0.getName();
      assertEquals("Lap", pod0.getIp());
      assertNull(string0);
      assertTrue(pod0.isReady());
      assertEquals(")r ldEcP]z&e", pod0.getPodGroup());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Pod pod0 = new Pod("Pt", "", "SSXzzc&", true);
      String string0 = pod0.getName();
      assertTrue(pod0.isReady());
      assertEquals("", pod0.getIp());
      assertEquals("Pt", string0);
      assertEquals("SSXzzc&", pod0.getPodGroup());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pod pod0 = new Pod((String) null, (String) null, (String) null, true);
      pod0.getIp();
      assertTrue(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pod pod0 = new Pod("", "", "", false);
      pod0.getIp();
      assertFalse(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pod pod0 = new Pod((String) null, (String) null, (String) null, true);
      pod0.hashCode();
      assertTrue(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pod pod0 = new Pod("", "", "", false);
      Pod pod1 = new Pod("", "", "", false);
      boolean boolean0 = pod0.equals(pod1);
      assertTrue(boolean0);
      assertFalse(pod1.isReady());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pod pod0 = new Pod((String) null, (String) null, (String) null, true);
      Pod pod1 = new Pod("|4AG3ey{0vn*r", (String) null, "", true);
      boolean boolean0 = pod0.equals(pod1);
      assertTrue(pod1.isReady());
      assertEquals("", pod1.getPodGroup());
      assertFalse(boolean0);
      assertEquals("|4AG3ey{0vn*r", pod1.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Pod pod0 = new Pod((String) null, (String) null, (String) null, true);
      Pod pod1 = new Pod((String) null, "|4AG3ey{0vn*r", "Pod{name='null', ip='null', podGroup='null'}", false);
      boolean boolean0 = pod0.equals(pod1);
      assertFalse(boolean0);
      assertFalse(pod1.isReady());
      assertEquals("Pod{name='null', ip='null', podGroup='null'}", pod1.getPodGroup());
      assertEquals("|4AG3ey{0vn*r", pod1.getIp());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Pod pod0 = new Pod((String) null, (String) null, (String) null, true);
      boolean boolean0 = pod0.equals((Object) null);
      assertFalse(boolean0);
      assertTrue(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Pod pod0 = new Pod("DLuZ-i5=QOb{\t204yr", "DLuZ-i5=QOb{\t204yr", "DLuZ-i5=QOb{\t204yr", false);
      boolean boolean0 = pod0.equals(pod0);
      assertFalse(pod0.isReady());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Pod pod0 = new Pod("", "", "", false);
      Object object0 = new Object();
      boolean boolean0 = pod0.equals(object0);
      assertFalse(boolean0);
      assertFalse(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Pod pod0 = new Pod("", "", "", false);
      pod0.getPodGroup();
      assertFalse(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Pod pod0 = new Pod("", "", "", false);
      String string0 = pod0.toString();
      assertFalse(pod0.isReady());
      assertEquals("Pod{name='', ip='', podGroup=''}", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Pod pod0 = new Pod("DLuZ-i5=QOb{\t204yr", "DLuZ-i5=QOb{\t204yr", "DLuZ-i5=QOb{\t204yr", false);
      pod0.getIp();
      assertFalse(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Pod pod0 = new Pod("", "", "", false);
      pod0.getName();
      assertFalse(pod0.isReady());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Pod pod0 = new Pod(";5s+c>AkW?", ";5s+c>AkW?", ";5s+c>AkW?", false);
      boolean boolean0 = pod0.isReady();
      assertFalse(boolean0);
  }
}
