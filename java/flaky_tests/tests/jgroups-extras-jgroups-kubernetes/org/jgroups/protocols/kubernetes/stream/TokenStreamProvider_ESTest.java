/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 17:01:27 GMT 2022
 */

package org.jgroups.protocols.kubernetes.stream;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.MalformedURLException;
import java.util.HashMap;
import javax.net.ssl.TrustManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jgroups.protocols.kubernetes.stream.TokenStreamProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenStreamProvider_ESTest extends TokenStreamProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TokenStreamProvider tokenStreamProvider0 = new TokenStreamProvider("v3&>\")Z", "v3&>\")Z");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      try { 
        tokenStreamProvider0.openStream("fK.Z</.:rc@f<!T", hashMap0, 0, (-1347));
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: fK.Z</.:rc@f<!T
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("f");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ynfo4yEs#%~*i'L^SqK");
      // Undeclared exception!
      try { 
        TokenStreamProvider.configureCaCert("f");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("w");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      TrustManager[] trustManagerArray0 = TokenStreamProvider.configureCaCert("w");
      assertEquals(1, trustManagerArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenStreamProvider.configureCaCert("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenStreamProvider.configureCaCert("w");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenStreamProvider.configureCaCert((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TokenStreamProvider tokenStreamProvider0 = new TokenStreamProvider("Using URLConnection for url [%s].", "INSECURE_TRUST_MANAGERS");
  }
}
