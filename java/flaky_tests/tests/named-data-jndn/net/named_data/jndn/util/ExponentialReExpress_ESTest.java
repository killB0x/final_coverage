/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:25:36 GMT 2022
 */

package net.named_data.jndn.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.TimeUnit;
import net.named_data.jndn.Face;
import net.named_data.jndn.Interest;
import net.named_data.jndn.Name;
import net.named_data.jndn.OnData;
import net.named_data.jndn.OnTimeout;
import net.named_data.jndn.security.identity.MemoryIdentityStorage;
import net.named_data.jndn.transport.AsyncTcpTransport;
import net.named_data.jndn.transport.Transport;
import net.named_data.jndn.util.ExponentialReExpress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExponentialReExpress_ESTest extends ExponentialReExpress_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          Face face0 = new Face();
          ExponentialReExpress.makeOnTimeout(face0, (OnData) null, (OnTimeout) null);
          OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, (OnData) null, (OnTimeout) null, 0.0);
          Name name0 = new Name();
          MemoryIdentityStorage memoryIdentityStorage0 = new MemoryIdentityStorage();
          Name name1 = memoryIdentityStorage0.getNewKeyName(name0, false);
          Interest interest0 = new Interest(name1, 0.0);
          Interest interest1 = new Interest(interest0);
          // Undeclared exception!
          try { 
            onTimeout0.onTimeout(interest1);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:6363\" \"connect,resolve\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkConnect(SecurityManager.java:824)
             // java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:676)
             // java.base/java.nio.channels.SocketChannel.open(SocketChannel.java:194)
             // net.named_data.jndn.transport.TcpTransport.connect(TcpTransport.java:133)
             // net.named_data.jndn.Node.expressInterest(Node.java:129)
             // net.named_data.jndn.Face.expressInterest(Face.java:142)
             // net.named_data.jndn.Face.expressInterest(Face.java:221)
             // net.named_data.jndn.Face.expressInterest(Face.java:253)
             // net.named_data.jndn.util.ExponentialReExpress.onTimeout(ExponentialReExpress.java:145)
             // jdk.internal.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Face face0 = new Face("encdeEncryptedContentV2 is not implemented", 5000);
          OnData onData0 = mock(OnData.class, new ViolatedAssumptionAnswer());
          FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
          OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, onData0, (OnTimeout) null, 2765.11540261914);
          OnData onData1 = mock(OnData.class, new ViolatedAssumptionAnswer());
          OnData onData2 = mock(OnData.class, new ViolatedAssumptionAnswer());
          OnTimeout onTimeout1 = ExponentialReExpress.makeOnTimeout(face0, onData2, onTimeout0, (double) 1);
          Interest interest0 = new Interest((Name) null, 1);
          // Undeclared exception!
          try { 
            onTimeout1.onTimeout(interest0);
            fail("Expecting exception: NoClassDefFoundError");
          
          } catch(NoClassDefFoundError e) {
             //
             // Could not initialize class java.util.logging.LogRecord$CallerFinder
             //
             verifyException("java.util.logging.LogRecord", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Face face0 = new Face();
      OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, (OnData) null, (OnTimeout) null);
      // Undeclared exception!
      try { 
        onTimeout0.onTimeout((Interest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.ExponentialReExpress", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Face face0 = new Face("encdeEncryptedContentV2 is not implemented", 5000);
      OnData onData0 = mock(OnData.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, onData0, (OnTimeout) null, 2765.11540261914);
      OnData onData1 = mock(OnData.class, new ViolatedAssumptionAnswer());
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadFactory0);
      AsyncTcpTransport asyncTcpTransport0 = new AsyncTcpTransport(scheduledThreadPoolExecutor0);
      Transport.ConnectionInfo transport_ConnectionInfo0 = new Transport.ConnectionInfo();
      Face face1 = new Face(asyncTcpTransport0, transport_ConnectionInfo0);
      OnTimeout onTimeout1 = ExponentialReExpress.makeOnTimeout(face1, onData1, onTimeout0, (double) 5000);
      Interest interest0 = new Interest((Name) null, 519.1414926165);
      // Undeclared exception!
      try { 
        onTimeout1.onTimeout(interest0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder
         //
         verifyException("java.nio.channels.spi.AsynchronousChannelProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Face face0 = new Face("encdeEncryptedContentV2 is not implemented", (-253));
      OnData onData0 = mock(OnData.class, new ViolatedAssumptionAnswer());
      OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, onData0, (OnTimeout) null, 2765.11540261914);
      Interest interest0 = new Interest((Name) null, 0);
      // Undeclared exception!
      try { 
        onTimeout0.onTimeout(interest0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-253
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Face face0 = new Face("encodeEncryptedContentV2 is not implemented", 5000);
      OnData onData0 = mock(OnData.class, new ViolatedAssumptionAnswer());
      OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, onData0, (OnTimeout) null, 2765.11540261914);
      OnData onData1 = mock(OnData.class, new ViolatedAssumptionAnswer());
      OnTimeout onTimeout1 = ExponentialReExpress.makeOnTimeout(face0, onData1, onTimeout0);
      Interest interest0 = new Interest("encodeEncryptedContentV2 is not implemented");
      onTimeout1.onTimeout(interest0);
      assertEquals(0, Interest.CHILD_SELECTOR_LEFT);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Face face0 = new Face();
      OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, (OnData) null, (OnTimeout) null);
      Interest interest0 = new Interest();
      onTimeout0.onTimeout(interest0);
      assertEquals(1, Interest.CHILD_SELECTOR_RIGHT);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Face face0 = new Face("encdeEncryptedContentV2 is not implemented", 5000);
      OnData onData0 = mock(OnData.class, new ViolatedAssumptionAnswer());
      OnTimeout onTimeout0 = ExponentialReExpress.makeOnTimeout(face0, onData0, (OnTimeout) null, 2765.11540261914);
      Interest interest0 = new Interest((Name) null, 2765.11540261914);
      onTimeout0.onTimeout(interest0);
      OnData onData1 = mock(OnData.class, new ViolatedAssumptionAnswer());
      OnTimeout onTimeout1 = ExponentialReExpress.makeOnTimeout(face0, onData1, onTimeout0, (double) 5000);
      onTimeout1.onTimeout(interest0);
      Interest interest1 = new Interest((Name) null, 1);
      assertEquals((-1), interest1.getChildSelector());
  }
}
