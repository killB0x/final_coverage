/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:21:20 GMT 2022
 */

package net.named_data.jndn.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.named_data.jndn.util.DynamicByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DynamicByteBuffer_ESTest extends DynamicByteBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(89);
      ByteBuffer byteBuffer0 = dynamicByteBuffer0.buffer();
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.ensuredPut(byteBuffer0, (-3508), 261);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-3508 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(11);
      dynamicByteBuffer0.ensuredPut(byteBuffer0, (int) (byte)1, 0);
      assertEquals(11, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(2);
      dynamicByteBuffer0.position(2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(2853);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2853);
      dynamicByteBuffer0.ensuredPut(byteBuffer0, 2853, 2853);
      assertEquals(2853, byteBuffer0.remaining());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=2853 cap=2853]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(822);
      ByteBuffer byteBuffer0 = dynamicByteBuffer0.flippedBuffer();
      dynamicByteBuffer0.ensuredPut(byteBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=822]", byteBuffer0.toString());
      assertEquals(822, byteBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(1289);
      int int0 = dynamicByteBuffer0.setRemainingFromBack(0);
      assertEquals(1289, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      dynamicByteBuffer0.ensuredPut((byte)2);
      dynamicByteBuffer0.ensuredPutFromBack((byte)2);
      int int0 = dynamicByteBuffer0.remaining();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      dynamicByteBuffer0.ensuredPut((byte)2);
      int int0 = dynamicByteBuffer0.limit();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(657);
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.setRemainingFromBack((-955));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition > limit: (1612 > 657)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(1);
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.ensuredPut((ByteBuffer) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.DynamicByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(11);
      byteBuffer0.compact();
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.ensuredPut(byteBuffer0, (int) (byte)1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition > limit: (11 > 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(822);
      ByteBuffer byteBuffer0 = dynamicByteBuffer0.buffer();
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.ensuredPut(byteBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The source buffer is this buffer
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = null;
      try {
        dynamicByteBuffer0 = new DynamicByteBuffer((-4817));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-4817 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(1395);
      dynamicByteBuffer0.ensureCapacityFromBack(1500);
      int int0 = dynamicByteBuffer0.position();
      assertEquals(1395, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      dynamicByteBuffer0.ensureCapacityFromBack(1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      dynamicByteBuffer0.ensureCapacityFromBack(0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      dynamicByteBuffer0.ensuredPut((byte)2);
      dynamicByteBuffer0.ensureCapacity((byte)2);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      dynamicByteBuffer0.ensureCapacity((byte)2);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      dynamicByteBuffer0.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.ensuredPutFromBack((byte) (-10));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(2058);
      int int0 = dynamicByteBuffer0.setRemainingFromBack(2058);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(509);
      dynamicByteBuffer0.ensureRemainingCapacity(852);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(1);
      dynamicByteBuffer0.ensuredPutFromBack((byte)113);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(110);
      int int0 = dynamicByteBuffer0.position();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      int int0 = dynamicByteBuffer0.remaining();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(0);
      int int0 = dynamicByteBuffer0.limit();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(1659);
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.ensuredPut((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.DynamicByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(3111);
      ByteBuffer byteBuffer0 = dynamicByteBuffer0.buffer();
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.ensuredPut(byteBuffer0, 3111, 3111);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The source buffer is this buffer
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer(1015);
      // Undeclared exception!
      try { 
        dynamicByteBuffer0.position((-2096));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-2096 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
