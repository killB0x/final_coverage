/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:04:28 GMT 2022
 */

package net.named_data.jndn.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Blob_ESTest extends Blob_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Blob blob0 = new Blob("");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      Blob blob1 = new Blob(byteBuffer0, true);
      boolean boolean0 = blob0.equals((Object) blob1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      String string0 = Blob.toHex(byteBuffer0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Blob blob0 = new Blob(byteBuffer0, false);
      byte[] byteArray1 = blob0.getImmutableArray();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Blob blob0 = new Blob(byteBuffer0, false);
      int int0 = blob0.compareTo(blob0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)102;
      Blob blob0 = new Blob(byteArray0, false);
      int[] intArray0 = new int[7];
      Blob blob1 = new Blob(intArray0);
      int int0 = blob0.compareTo(blob1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Blob blob0 = new Blob();
      byte[] byteArray0 = new byte[6];
      Blob blob1 = new Blob(byteArray0);
      int int0 = blob0.compareTo(blob1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 1980;
      Blob blob0 = new Blob(intArray0);
      byte[] byteArray0 = new byte[7];
      Blob blob1 = new Blob(byteArray0, false);
      int int0 = blob0.CompareTo(blob1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3710);
      StringBuffer stringBuffer0 = new StringBuffer("");
      Blob.toHex(byteBuffer0, stringBuffer0);
      Blob.toHex(byteBuffer0);
      // Undeclared exception!
      Blob.toHex(byteBuffer0, stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        Blob.toHex((ByteBuffer) null, stringBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2999);
      String string0 = Blob.toHex(byteBuffer0);
      Blob blob0 = new Blob(string0);
      blob0.toHex();
      // Undeclared exception!
      Blob.toHex(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Blob.toHex((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      Blob blob0 = new Blob(byteBuffer0, false);
      // Undeclared exception!
      try { 
        blob0.getImmutableArray();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Blob blob0 = new Blob("J}t<Nzei*!:3:e");
      // Undeclared exception!
      try { 
        blob0.equals((Blob) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Blob blob0 = new Blob();
      // Undeclared exception!
      try { 
        blob0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Blob blob0 = new Blob((Blob) null);
      // Undeclared exception!
      try { 
        blob0.CompareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Blob blob0 = new Blob();
      // Undeclared exception!
      try { 
        blob0.CompareTo("#Nu&`B");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class net.named_data.jndn.util.Blob (java.lang.String is in module java.base of loader 'bootstrap'; net.named_data.jndn.util.Blob is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @2f327cc4)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Blob blob0 = null;
      try {
        blob0 = new Blob((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Blob blob0 = null;
      try {
        blob0 = new Blob((byte[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Blob blob0 = null;
      try {
        blob0 = new Blob((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Blob blob0 = null;
      try {
        blob0 = new Blob((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Blob blob0 = new Blob("");
      Blob blob1 = new Blob(",");
      int int0 = blob0.compare(blob1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Blob blob0 = new Blob();
      int int0 = blob0.compare(blob0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Blob blob0 = new Blob();
      byte[] byteArray0 = new byte[0];
      Blob blob1 = new Blob(byteArray0, true);
      boolean boolean0 = blob1.equals(blob0);
      assertFalse(boolean0);
      assertTrue(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Blob blob0 = new Blob();
      boolean boolean0 = blob0.equals(blob0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)108;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      Blob.toHex(byteBuffer0, stringBuffer0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("6c00000000", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Blob blob0 = new Blob(byteArray0, true);
      boolean boolean0 = blob0.isNull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2999);
      String string0 = Blob.toHex(byteBuffer0);
      Blob blob0 = new Blob(string0);
      blob0.toHex();
      // Undeclared exception!
      blob0.toHex();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Blob blob0 = new Blob((Blob) null);
      String string0 = blob0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Blob blob0 = new Blob(byteArray0);
      String string0 = blob0.toString();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Blob blob0 = new Blob(byteArray0);
      blob0.hashCode();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Blob blob0 = new Blob();
      blob0.hashCode();
      blob0.hashCode();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Blob blob0 = new Blob("");
      byte[] byteArray0 = new byte[4];
      Blob blob1 = new Blob(byteArray0, true);
      int int0 = blob1.compare(blob0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Blob blob0 = new Blob("");
      byte[] byteArray0 = new byte[4];
      Blob blob1 = new Blob(byteArray0, true);
      int int0 = blob0.CompareTo(blob1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Blob blob0 = new Blob("fx1PXW!/;[V6|5~F,#");
      Blob blob1 = new Blob("UTF-8 encoder not supported: ");
      int int0 = blob0.compare(blob1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Blob blob0 = new Blob(byteArray0);
      int int0 = blob0.compare(blob0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Blob blob0 = new Blob();
      Blob blob1 = new Blob("");
      int int0 = blob1.compare(blob0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Blob blob0 = new Blob();
      int int0 = blob0.CompareTo(blob0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Blob blob0 = new Blob();
      Blob blob1 = new Blob("cB-+7s2");
      int int0 = blob0.compare(blob1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Blob blob0 = new Blob();
      Blob blob1 = new Blob("J}t<Nzei*!:3:e");
      boolean boolean0 = blob1.equals((Object) blob0);
      assertFalse(boolean0);
      assertTrue(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Blob blob0 = new Blob("J}t<Nzei*!:3:e");
      Blob blob1 = new Blob();
      boolean boolean0 = blob1.equals(blob0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Blob blob0 = new Blob();
      String string0 = blob0.toHex();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Blob blob0 = new Blob();
      boolean boolean0 = blob0.isNull();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Blob blob0 = new Blob("J}t<Nzei*!:3:e");
      boolean boolean0 = blob0.equals(blob0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Blob blob0 = new Blob("cB-+7s2");
      int int0 = blob0.size();
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Blob blob0 = new Blob();
      int int0 = blob0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(6);
      byteBuffer0.getChar();
      Blob blob0 = new Blob(byteBuffer0, false);
      byte[] byteArray0 = blob0.getImmutableArray();
      assertEquals(4, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Blob blob0 = new Blob();
      byte[] byteArray0 = blob0.getImmutableArray();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Blob blob0 = new Blob("");
      ByteBuffer byteBuffer0 = blob0.buf();
      assertEquals(0, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int[] intArray0 = new int[1];
      Blob blob0 = new Blob(intArray0);
      Blob blob1 = new Blob("HQcDktq'YaJgx=/4e");
      int int0 = blob0.compare(blob1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1116);
      Blob blob0 = new Blob(byteBuffer0, false);
      // Undeclared exception!
      try { 
        blob0.toString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Blob blob0 = new Blob((ByteBuffer) null, true);
      assertTrue(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Blob blob0 = new Blob("");
      Blob blob1 = new Blob(blob0);
      assertFalse(blob1.isNull());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Blob blob0 = new Blob((Blob) null);
      // Undeclared exception!
      try { 
        blob0.compare((Blob) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Blob blob0 = new Blob();
      ByteBuffer byteBuffer0 = blob0.buf();
      assertNull(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Blob blob0 = new Blob(byteArray0);
      Object object0 = new Object();
      boolean boolean0 = blob0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Blob blob0 = new Blob("cB-+7s2");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        blob0.compareTo(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class net.named_data.jndn.util.Blob (java.lang.Object is in module java.base of loader 'bootstrap'; net.named_data.jndn.util.Blob is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @2f327cc4)
         //
         verifyException("net.named_data.jndn.util.Blob", e);
      }
  }
}
