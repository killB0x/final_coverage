/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:48:15 GMT 2022
 */

package net.named_data.jndn.util.regex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.regex.PatternSyntaxException;
import net.named_data.jndn.Name;
import net.named_data.jndn.util.regex.NdnRegexBackrefManager;
import net.named_data.jndn.util.regex.NdnRegexPatternListMatcher;
import net.named_data.jndn.util.regex.NdnRegexTopMatcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NdnRegexPatternListMatcher_ESTest extends NdnRegexPatternListMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = null;
      try {
        ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher("(o)A", ndnRegexBackrefManager0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Unexpected syntax
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexPatternListMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = null;
      try {
        ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher("&ndn.MaxSuffixComponents=", ndnRegexBackrefManager0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Unexpected syntax
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexPatternListMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher("", ndnRegexBackrefManager0);
      ndnRegexPatternListMatcher0.compile();
      assertEquals("", ndnRegexPatternListMatcher0.getExpr());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NdnRegexTopMatcher ndnRegexTopMatcher0 = new NdnRegexTopMatcher("()");
      assertEquals("()", ndnRegexTopMatcher0.getExpr());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = null;
      try {
        ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher("<tx9)>m8", ndnRegexBackrefManager0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 2
         // tx9)
         //   ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = null;
      try {
        ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher((String) null, ndnRegexBackrefManager0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexPatternListMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = null;
      try {
        ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher("(_K){)", ndnRegexBackrefManager0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Missing right brace bracket
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexPatternListMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = null;
      try {
        ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher("<dx0<$C^k", ndnRegexBackrefManager0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Parenthesis mismatch
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexPatternListMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NdnRegexPatternListMatcher ndnRegexPatternListMatcher0 = null;
      try {
        ndnRegexPatternListMatcher0 = new NdnRegexPatternListMatcher("[.G@jJl+5D]Qpb{", (NdnRegexBackrefManager) null);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Component expr error [.G@jJl+5D]
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexComponentSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NdnRegexTopMatcher ndnRegexTopMatcher0 = null;
      try {
        ndnRegexTopMatcher0 = new NdnRegexTopMatcher("(/))", "(/))");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Unexpected syntax
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexPatternListMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      name0.appendTimestamp(718L);
      NdnRegexTopMatcher ndnRegexTopMatcher0 = NdnRegexTopMatcher.fromName(name0, true);
      assertEquals("^<%FC%02%CE>$", ndnRegexTopMatcher0.getExpr());
  }
}
