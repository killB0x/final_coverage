/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:53:34 GMT 2022
 */

package net.named_data.jndn.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import net.named_data.jndn.util.BoostInfoTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BoostInfoTree_ESTest extends BoostInfoTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("O*SE60KzH");
      boostInfoTree1.addSubtree("D.yU&I=k", boostInfoTree0);
      boostInfoTree0.getFirstValue("O*SE60KzH");
      boostInfoTree0.prettyPrint();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("ng500Ip(tb@1(?");
      boostInfoTree0.createSubtree("TX*wRD(rS_EHf?U");
      ArrayList<BoostInfoTree> arrayList0 = new ArrayList<BoostInfoTree>();
      BoostInfoTree boostInfoTree1 = new BoostInfoTree("9");
      BoostInfoTree boostInfoTree2 = boostInfoTree1.createSubtree("", "ng500Ip(tb@1(?");
      BoostInfoTree boostInfoTree3 = new BoostInfoTree("");
      boostInfoTree3.addSubtree("", boostInfoTree1);
      boostInfoTree2.createSubtree("8-RLsvKWY_", "");
      BoostInfoTree boostInfoTree4 = new BoostInfoTree("9");
      boostInfoTree4.prettyPrint();
      BoostInfoTree boostInfoTree5 = new BoostInfoTree();
      BoostInfoTree boostInfoTree6 = boostInfoTree5.createSubtree("RzH%+=Y*b8@3");
      BoostInfoTree boostInfoTree7 = new BoostInfoTree((String) null, boostInfoTree6);
      boostInfoTree7.getValue();
      BoostInfoTree boostInfoTree8 = boostInfoTree3.createSubtree((String) null);
      boostInfoTree5.prettyPrint();
      BoostInfoTree boostInfoTree9 = new BoostInfoTree((String) null, boostInfoTree8);
      boostInfoTree7.getFirstValue("ng500Ip(tb@1(?");
      // Undeclared exception!
      try { 
        boostInfoTree9.prettyPrint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("z", "z");
      boostInfoTree0.addSubtree("o~V}oz!.n", boostInfoTree1);
      boostInfoTree1.get("RzH%+=Y*b8@3");
      boostInfoTree0.get("IFvxyi.V)");
      boostInfoTree0.get("z");
      BoostInfoTree boostInfoTree2 = new BoostInfoTree();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree((String) null, (String) null);
      String string0 = "'cyu83EO.M-5gBHE>y\"";
      // Undeclared exception!
      try { 
        boostInfoTree0.prettyPrint(3018);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = new BoostInfoTree((String) null, boostInfoTree0);
      // Undeclared exception!
      try { 
        boostInfoTree1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("3");
      boostInfoTree1.addSubtree("~`Fs/Lx", boostInfoTree0);
      boostInfoTree0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("z", "z");
      boostInfoTree0.addSubtree("o~V}oz!.n", boostInfoTree1);
      boostInfoTree1.createSubtree("z", "RzH%+=Y*b8@3");
      boostInfoTree1.prettyPrint();
      boostInfoTree0.getValue();
      BoostInfoTree boostInfoTree2 = boostInfoTree0.createSubtree("");
      boostInfoTree2.prettyPrint();
      BoostInfoTree boostInfoTree3 = new BoostInfoTree("RzH%+=Y*b8@3", boostInfoTree1);
      boostInfoTree0.getFirstValue("o~V}oz!.n");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree(">a,qqKy(w");
      boostInfoTree0.get(">a,qqKy(w");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      // Undeclared exception!
      try { 
        boostInfoTree0.getFirstValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.BoostInfoTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree((String) null);
      boostInfoTree0.prettyPrint(0);
      BoostInfoTree boostInfoTree1 = new BoostInfoTree((String) null, boostInfoTree0);
      BoostInfoTree boostInfoTree2 = new BoostInfoTree("", boostInfoTree1);
      boostInfoTree2.prettyPrint(1541);
      BoostInfoTree boostInfoTree3 = boostInfoTree1.createSubtree("");
      boostInfoTree3.prettyPrint();
      boostInfoTree2.toString();
      boostInfoTree2.toString();
      boostInfoTree1.addSubtree("}\n", boostInfoTree0);
      boostInfoTree2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("net.named_data.jndn.util.BoostInfoTree");
      BoostInfoTree boostInfoTree2 = new BoostInfoTree("net.named_data.jndn.util.BoostInfoTree", boostInfoTree0);
      BoostInfoTree boostInfoTree3 = boostInfoTree2.createSubtree("S#31.m{m/F=2_qy");
      boostInfoTree2.prettyPrint();
      boostInfoTree2.toString();
      boostInfoTree0.prettyPrint(3847);
      boostInfoTree0.addSubtree("\"net.named_data.jndn.util.BoostInfoTree\"\n {\n   S#31.m{m/F=2_qy \n }\n", boostInfoTree3);
      boostInfoTree0.addSubtree("SL", boostInfoTree1);
      // Undeclared exception!
      try { 
        boostInfoTree0.prettyPrint((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("net.named_data.jndn.util.BoostInfoTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("z", "z");
      boostInfoTree0.addSubtree("o~V}oz!.n", boostInfoTree1);
      boostInfoTree1.createSubtree("z", "RzH%+=Y*b8@3");
      boostInfoTree1.prettyPrint();
      boostInfoTree0.getValue();
      BoostInfoTree boostInfoTree2 = boostInfoTree0.createSubtree("");
      boostInfoTree2.prettyPrint();
      boostInfoTree2.addSubtree("f,6&g2H6&%8d>Z|[)", boostInfoTree0);
      boostInfoTree0.getFirstValue("f,6&g2H6&%8d>Z|[)");
      int int0 = 478;
      boostInfoTree0.prettyPrint(int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree((String) null, (String) null);
      // Undeclared exception!
      try { 
        boostInfoTree0.prettyPrint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("~w!C:", (BoostInfoTree) null);
      // Undeclared exception!
      try { 
        boostInfoTree0.addSubtree("~w!C:", (BoostInfoTree) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.BoostInfoTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = new BoostInfoTree("C!7fcj4w%S>", boostInfoTree0);
      boostInfoTree1.prettyPrint(0);
      BoostInfoTree boostInfoTree2 = boostInfoTree1.createSubtree("\"C!7fcj4w%S>\"\n");
      BoostInfoTree boostInfoTree3 = boostInfoTree1.createSubtree("\"C!7fcj4w%S>\"\n");
      boostInfoTree3.getFirstValue(" ");
      boostInfoTree3.getFirstValue("\"C!7fcj4w%S>\"\n");
      boostInfoTree2.get("");
      BoostInfoTree boostInfoTree4 = boostInfoTree1.createSubtree("@kjV7");
      boostInfoTree1.prettyPrint();
      boostInfoTree0.prettyPrint(890);
      boostInfoTree1.getFirstValue("^'o\"6],4B ");
      boostInfoTree1.getValue();
      BoostInfoTree boostInfoTree5 = boostInfoTree1.createSubtree("", "");
      String string0 = boostInfoTree1.prettyPrint(3191);
      boostInfoTree1.prettyPrint();
      BoostInfoTree boostInfoTree6 = boostInfoTree4.getParent();
      boostInfoTree6.getParent();
      boostInfoTree4.toString();
      boostInfoTree5.toString();
      boostInfoTree0.get("\"");
      boostInfoTree4.createSubtree(string0);
      boostInfoTree1.prettyPrint(1239);
      boostInfoTree6.createSubtree("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree((String) null);
      // Undeclared exception!
      try { 
        boostInfoTree0.createSubtree((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.toString();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("y-BW10#+3}DnlD:S9O", "y-BW10#+3}DnlD:S9O");
      BoostInfoTree boostInfoTree2 = boostInfoTree1.createSubtree("", "q',1gz");
      boostInfoTree0.toString();
      boostInfoTree2.get("}\n");
      boostInfoTree2.createSubtree("u~0uX>~W-");
      boostInfoTree2.get("");
      boostInfoTree1.getParent();
      boostInfoTree0.toString();
      boostInfoTree2.toString();
      boostInfoTree1.getValue();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      // Undeclared exception!
      try { 
        boostInfoTree0.prettyPrint((-649));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -649
         //
         verifyException("net.named_data.jndn.util.BoostInfoTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("");
      BoostInfoTree boostInfoTree1 = new BoostInfoTree("");
      boostInfoTree1.prettyPrint();
      boostInfoTree1.getFirstValue("mNp{iH5vJ:D");
      boostInfoTree0.addSubtree("mNp{iH5vJ:D", boostInfoTree1);
      BoostInfoTree boostInfoTree2 = boostInfoTree0.createSubtree("");
      String string0 = "E|g<H2p+t-g+Y'G};";
      boostInfoTree1.addSubtree("!%f#^Svl$", boostInfoTree2);
      boostInfoTree2.createSubtree("E|g<H2p+t-g+Y'G};", "Wu Ss@LzjLts&-w[");
      boostInfoTree1.addSubtree((String) null, boostInfoTree0);
      boostInfoTree2.prettyPrint();
      BoostInfoTree boostInfoTree3 = boostInfoTree2.createSubtree((String) null, (String) null);
      int int0 = 3235;
      // Undeclared exception!
      try { 
        boostInfoTree3.prettyPrint((-1059));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1059
         //
         verifyException("net.named_data.jndn.util.BoostInfoTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree((String) null, (String) null);
      boostInfoTree1.addSubtree((String) null, boostInfoTree0);
      // Undeclared exception!
      try { 
        boostInfoTree0.createSubtree("net.named_data.jndn.util.BoostInfoTree$TreeEntry", "net.named_data.jndn.util.BoostInfoTree$TreeEntry");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "h/ccsATtX";
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("h/ccsATtX");
      boostInfoTree0.createSubtree((String) null, "");
      // Undeclared exception!
      try { 
        boostInfoTree0.createSubtree("", "?61^=$Y^qEvvY2Y/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      // Undeclared exception!
      try { 
        boostInfoTree0.get((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.BoostInfoTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = new BoostInfoTree("", boostInfoTree0);
      boostInfoTree1.toString();
      boostInfoTree1.getValue();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      String string0 = boostInfoTree0.prettyPrint();
      assertEquals("", string0);
      
      boostInfoTree0.getFirstValue("");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.prettyPrint();
      boostInfoTree0.get("");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("Dfa+5.X\"K?K<*%j8}'");
      BoostInfoTree boostInfoTree1 = new BoostInfoTree((String) null, boostInfoTree0);
      BoostInfoTree boostInfoTree2 = boostInfoTree1.getParent();
      boostInfoTree2.prettyPrint();
      boostInfoTree0.getParent();
      boostInfoTree2.createSubtree("Dfa+5.X\"K?K<*%j8}'");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("\n");
      boostInfoTree0.prettyPrint(1323);
      boostInfoTree0.prettyPrint(0);
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("\n");
      boostInfoTree1.getFirstValue("");
      BoostInfoTree boostInfoTree2 = boostInfoTree0.createSubtree("\n");
      boostInfoTree0.prettyPrint();
      boostInfoTree0.toString();
      boostInfoTree2.toString();
      boostInfoTree0.toString();
      boostInfoTree0.get("   \n \n   \n \n");
      boostInfoTree0.toString();
      BoostInfoTree boostInfoTree3 = boostInfoTree0.createSubtree("rh~u", "   \n \n   \n \n");
      boostInfoTree0.toString();
      BoostInfoTree boostInfoTree4 = boostInfoTree3.getParent();
      boostInfoTree4.createSubtree("TxpiS<Z", "");
      boostInfoTree2.createSubtree((String) null, "rh~u");
      boostInfoTree3.addSubtree("VXqST", boostInfoTree4);
      boostInfoTree2.toString();
      boostInfoTree3.createSubtree("\n {\n   null \"rh~u\"\n }\n", "");
      boostInfoTree4.getParent();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("");
      boostInfoTree1.createSubtree("");
      boostInfoTree0.toString();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree("\"net.named_data.jndn.util.BoostInfoTree\"\n {\n   S#31.m{m/F=2_qy \n }\n", "\"net.named_data.jndn.util.BoostInfoTree\"\n {\n   S#31.m{m/F=2_qy \n }\n");
      boostInfoTree0.get("\"net.named_data.jndn.util.BoostInfoTree\"\n {\n   S#31.m{m/F=2_qy \n }\n");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.getFirstValue("\n");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("90s&-@IgS");
      boostInfoTree0.get("90s&-@IgS");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("Sy");
      boostInfoTree1.toString();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.getValue();
      boostInfoTree0.prettyPrint(669);
      BoostInfoTree boostInfoTree1 = new BoostInfoTree();
      BoostInfoTree boostInfoTree2 = new BoostInfoTree("");
      boostInfoTree1.getParent();
      boostInfoTree1.toString();
      boostInfoTree1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("~L^_?i09\"2ak(y9u");
      boostInfoTree0.toString();
      boostInfoTree0.getFirstValue("");
      boostInfoTree0.prettyPrint();
      BoostInfoTree boostInfoTree1 = new BoostInfoTree("~L^_?i09\"2ak(y9u", boostInfoTree0);
      boostInfoTree1.toString();
      boostInfoTree1.prettyPrint();
      boostInfoTree1.toString();
      BoostInfoTree boostInfoTree2 = boostInfoTree1.getParent();
      boostInfoTree2.getFirstValue("net.named_data.jndn.util.BoostInfoTree$TreeEntry");
      boostInfoTree2.getValue();
      BoostInfoTree boostInfoTree3 = boostInfoTree0.createSubtree("\"~L^_?i09\"2ak(y9u\"\n", "");
      boostInfoTree3.prettyPrint();
      boostInfoTree1.addSubtree("U?c)R27VdbV/", boostInfoTree0);
      // Undeclared exception!
      try { 
        boostInfoTree2.get((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.BoostInfoTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("\"");
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("\"");
      boostInfoTree1.get("\"");
      boostInfoTree1.prettyPrint(925);
      boostInfoTree0.prettyPrint();
      String string0 = boostInfoTree0.prettyPrint();
      boostInfoTree1.toString();
      String string1 = boostInfoTree1.prettyPrint(925);
      String string2 = boostInfoTree0.toString();
      boostInfoTree0.get("   \" \n");
      String string3 = boostInfoTree1.toString();
      BoostInfoTree boostInfoTree2 = boostInfoTree0.getLastChild();
      BoostInfoTree boostInfoTree3 = boostInfoTree1.createSubtree("\n", "\n");
      BoostInfoTree boostInfoTree4 = boostInfoTree1.createSubtree("   \" \n", "u@Q+[h");
      boostInfoTree3.getFirstValue("u@Q+[h");
      boostInfoTree4.prettyPrint();
      boostInfoTree1.addSubtree("\n", boostInfoTree2);
      int int0 = 0;
      boostInfoTree1.prettyPrint(int0);
      String string4 = boostInfoTree0.prettyPrint();
      boostInfoTree1.getFirstValue(string1);
      String string5 = "+4";
      BoostInfoTree boostInfoTree5 = boostInfoTree0.createSubtree(string5, string0);
      int int1 = 0;
      boostInfoTree3.prettyPrint(int1);
      boostInfoTree2.createSubtree(string4);
      String string6 = null;
      boostInfoTree5.createSubtree(string6, string2);
      String string7 = "Z29LVFawu8CGn6t";
      boostInfoTree2.createSubtree(string3, string7);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("\u0000");
      BoostInfoTree boostInfoTree2 = boostInfoTree0.createSubtree("\u0000");
      assertEquals("", boostInfoTree2.getValue());
      assertNotSame(boostInfoTree2, boostInfoTree1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      BoostInfoTree boostInfoTree1 = boostInfoTree0.createSubtree("%qi", "%qi");
      String string0 = boostInfoTree0.prettyPrint();
      assertEquals("   %qi \"%qi\"\n", string0);
      assertNotSame(boostInfoTree0, boostInfoTree1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      ArrayList<BoostInfoTree> arrayList0 = boostInfoTree0.get("c0zjA li>IQX");
      assertFalse(arrayList0.contains(boostInfoTree0));
      assertNotNull(arrayList0);
  }
}
