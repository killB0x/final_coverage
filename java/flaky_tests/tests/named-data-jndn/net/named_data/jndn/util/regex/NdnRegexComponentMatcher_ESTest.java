/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 23:37:10 GMT 2022
 */

package net.named_data.jndn.util.regex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.regex.PatternSyntaxException;
import net.named_data.jndn.Name;
import net.named_data.jndn.util.regex.NdnRegexBackrefManager;
import net.named_data.jndn.util.regex.NdnRegexComponentMatcher;
import net.named_data.jndn.util.regex.NdnRegexPseudoMatcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NdnRegexComponentMatcher_ESTest extends NdnRegexComponentMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      Name name0 = new Name("()");
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("()", ndnRegexBackrefManager0);
      boolean boolean0 = ndnRegexComponentMatcher0.match(name0, 0, 40);
      assertEquals(1, ndnRegexBackrefManager0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("", (NdnRegexBackrefManager) null, false);
      Name name0 = new Name("");
      // Undeclared exception!
      try { 
        ndnRegexComponentMatcher0.match(name0, 2632, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("", ndnRegexBackrefManager0);
      ndnRegexComponentMatcher0.compile();
      assertEquals(0, ndnRegexBackrefManager0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("#(~g)P0fDL3=,Y9n", ndnRegexBackrefManager0);
      // Undeclared exception!
      try { 
        ndnRegexComponentMatcher0.match((Name) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexComponentMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = null;
      try {
        ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("(", ndnRegexBackrefManager0, true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 1
         // (
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = null;
      try {
        ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher((String) null, ndnRegexBackrefManager0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = null;
      try {
        ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher((String) null, ndnRegexBackrefManager0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = null;
      try {
        ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("(", ndnRegexBackrefManager0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 1
         // (
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("!", ndnRegexBackrefManager0);
      Name name0 = new Name("!");
      boolean boolean0 = ndnRegexComponentMatcher0.match(name0, 0, 0);
      assertFalse(boolean0);
      assertEquals(0, ndnRegexBackrefManager0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("o3q3Z#'__5B", ndnRegexBackrefManager0, false);
      Name name0 = new Name();
      try { 
        ndnRegexComponentMatcher0.match(name0, 2372, 2372);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Non-exact component search is not supported yet
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexComponentMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("", ndnRegexBackrefManager0);
      Name name0 = new Name("(%';RZ:o");
      boolean boolean0 = ndnRegexComponentMatcher0.match(name0, 0, 0);
      assertTrue(boolean0);
      assertEquals(0, ndnRegexBackrefManager0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NdnRegexBackrefManager ndnRegexBackrefManager0 = new NdnRegexBackrefManager();
      NdnRegexComponentMatcher ndnRegexComponentMatcher0 = new NdnRegexComponentMatcher("()", ndnRegexBackrefManager0);
      ArrayList<NdnRegexPseudoMatcher> arrayList0 = new ArrayList<NdnRegexPseudoMatcher>();
      NdnRegexPseudoMatcher ndnRegexPseudoMatcher0 = new NdnRegexPseudoMatcher();
      arrayList0.add(ndnRegexPseudoMatcher0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        ndnRegexComponentMatcher0.match(name0, 0, 900);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.util.regex.NdnRegexPseudoMatcher cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.util.regex.NdnRegexPseudoMatcher and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @52a68555)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }
}
