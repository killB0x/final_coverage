/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:26:39 GMT 2022
 */

package net.named_data.jndn.util;

import org.junit.Test;
import static org.junit.Assert.*;
import net.named_data.jndn.Sha256WithRsaSignature;
import net.named_data.jndn.security.ValidityPeriod;
import net.named_data.jndn.util.ChangeCountable;
import net.named_data.jndn.util.ChangeCounter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChangeCounter_ESTest extends ChangeCounter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChangeCounter changeCounter0 = new ChangeCounter((ChangeCountable) null);
      ChangeCountable changeCountable0 = changeCounter0.get();
      assertNull(changeCountable0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      ValidityPeriod validityPeriod0 = sha256WithRsaSignature0.getValidityPeriod();
      ChangeCounter changeCounter0 = new ChangeCounter(validityPeriod0);
      ValidityPeriod validityPeriod1 = (ValidityPeriod)changeCounter0.get();
      assertEquals((-1.7976931348623157E308), validityPeriod1.getNotAfter(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      ValidityPeriod validityPeriod0 = sha256WithRsaSignature0.getValidityPeriod();
      ChangeCounter changeCounter0 = new ChangeCounter(validityPeriod0);
      boolean boolean0 = changeCounter0.checkChanged();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      ValidityPeriod validityPeriod0 = sha256WithRsaSignature0.getValidityPeriod();
      ChangeCounter changeCounter0 = new ChangeCounter(validityPeriod0);
      validityPeriod0.setPeriod(707.36330370901, (-892.1));
      boolean boolean0 = changeCounter0.checkChanged();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChangeCounter changeCounter0 = new ChangeCounter((ChangeCountable) null);
      boolean boolean0 = changeCounter0.checkChanged();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChangeCounter changeCounter0 = new ChangeCounter((ChangeCountable) null);
      changeCounter0.set((ChangeCountable) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      Object object0 = sha256WithRsaSignature0.clone();
      assertNotSame(object0, sha256WithRsaSignature0);
  }
}
