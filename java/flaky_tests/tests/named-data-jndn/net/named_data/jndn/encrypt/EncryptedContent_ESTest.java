/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:02:17 GMT 2022
 */

package net.named_data.jndn.encrypt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import net.named_data.jndn.DelegationSet;
import net.named_data.jndn.HmacWithSha256Signature;
import net.named_data.jndn.Interest;
import net.named_data.jndn.KeyLocator;
import net.named_data.jndn.KeyLocatorType;
import net.named_data.jndn.Name;
import net.named_data.jndn.Sha256WithEcdsaSignature;
import net.named_data.jndn.encoding.WireFormat;
import net.named_data.jndn.encrypt.EncryptedContent;
import net.named_data.jndn.encrypt.algo.EncryptAlgorithmType;
import net.named_data.jndn.util.Blob;
import net.named_data.jndn.util.SignedBlob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EncryptedContent_ESTest extends EncryptedContent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      Blob blob0 = wireFormat0.encodeEncryptedContentV2(encryptedContent0);
      encryptedContent0.wireDecodeV2(blob0, wireFormat0);
      assertEquals(EncryptAlgorithmType.NONE, encryptedContent0.getAlgorithmType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptedContent encryptedContent1 = new EncryptedContent(encryptedContent0);
      assertEquals(EncryptAlgorithmType.NONE, encryptedContent1.getAlgorithmType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      EncryptAlgorithmType encryptAlgorithmType0 = EncryptAlgorithmType.AesCbc;
      EncryptedContent encryptedContent1 = encryptedContent0.setAlgorithmType(encryptAlgorithmType0);
      Blob blob0 = encryptedContent1.wireEncode(wireFormat0);
      encryptedContent0.wireDecode(blob0);
      assertEquals(EncryptAlgorithmType.AesCbc, encryptedContent0.getAlgorithmType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptAlgorithmType encryptAlgorithmType0 = EncryptAlgorithmType.AesEcb;
      EncryptedContent encryptedContent1 = encryptedContent0.setAlgorithmType(encryptAlgorithmType0);
      Blob blob0 = encryptedContent1.wireEncode();
      assertFalse(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Interest interest0 = new Interest();
      SignedBlob signedBlob0 = interest0.wireEncode();
      encryptedContent0.setInitialVector(signedBlob0);
      encryptedContent0.setPayloadKey(signedBlob0);
      assertTrue(encryptedContent0.hasInitialVector());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      DelegationSet delegationSet0 = new DelegationSet();
      Blob blob0 = delegationSet0.wireEncode();
      EncryptedContent encryptedContent1 = encryptedContent0.setInitialVector(blob0);
      encryptedContent1.setPayload(blob0);
      assertTrue(encryptedContent0.hasInitialVector());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Interest interest0 = new Interest();
      SignedBlob signedBlob0 = interest0.wireEncode();
      encryptedContent0.setInitialVector(signedBlob0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      EncryptedContent encryptedContent1 = encryptedContent0.setKeyLocatorName(name0);
      assertTrue(encryptedContent1.hasInitialVector());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      HmacWithSha256Signature hmacWithSha256Signature0 = new HmacWithSha256Signature();
      KeyLocator keyLocator0 = hmacWithSha256Signature0.getKeyLocator();
      DelegationSet delegationSet0 = new DelegationSet();
      Blob blob0 = delegationSet0.wireEncode();
      encryptedContent0.setInitialVector(blob0);
      EncryptedContent encryptedContent1 = encryptedContent0.setKeyLocator(keyLocator0);
      assertTrue(encryptedContent1.hasInitialVector());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Interest interest0 = new Interest();
      SignedBlob signedBlob0 = interest0.wireEncode();
      EncryptedContent encryptedContent1 = encryptedContent0.setInitialVector(signedBlob0);
      EncryptAlgorithmType encryptAlgorithmType0 = EncryptAlgorithmType.AesCbc;
      EncryptedContent encryptedContent2 = encryptedContent1.setAlgorithmType(encryptAlgorithmType0);
      assertTrue(encryptedContent2.hasInitialVector());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Interest interest0 = new Interest();
      SignedBlob signedBlob0 = interest0.wireEncode();
      encryptedContent0.setPayloadKey(signedBlob0);
      Blob blob0 = encryptedContent0.getPayloadKey();
      assertSame(blob0, signedBlob0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = encryptedContent0.getPayload();
      assertTrue(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Name.Component[] name_ComponentArray0 = new Name.Component[6];
      Name name0 = new Name(name_ComponentArray0);
      EncryptedContent encryptedContent1 = encryptedContent0.setKeyLocatorName(name0);
      Name name1 = encryptedContent1.getKeyLocatorName();
      assertEquals(0L, name1.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      KeyLocator keyLocator0 = encryptedContent0.getKeyLocator();
      assertEquals(KeyLocatorType.NONE, keyLocator0.getType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = encryptedContent0.getInitialVector();
      assertTrue(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      byte[] byteArray0 = new byte[3];
      Blob blob0 = new Blob(byteArray0, false);
      encryptedContent0.setInitialVector(blob0);
      Blob blob1 = encryptedContent0.getInitialVector();
      assertFalse(blob1.isNull());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncodeV2(wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // encodeEncryptedContentV2 is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncodeV2((WireFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encrypt.EncryptedContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      WireFormat.setDefaultWireFormat(wireFormat0);
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncodeV2();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // encodeEncryptedContentV2 is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Name.Component[] name_ComponentArray0 = new Name.Component[6];
      Name name0 = new Name(name_ComponentArray0);
      encryptedContent0.setKeyLocatorName(name0);
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncodeV2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.Tlv0_3WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncode(wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // encodeEncryptedContent is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncode((WireFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encrypt.EncryptedContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      WireFormat.setDefaultWireFormat(wireFormat0);
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncode();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // encodeEncryptedContent is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      Interest interest0 = new Interest();
      Blob blob0 = wireFormat0.encodeInterest(interest0);
      try { 
        encryptedContent0.wireDecodeV2(blob0, wireFormat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Did not get the expected TLV type
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = new Blob();
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2(blob0, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContentV2 is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      DelegationSet delegationSet0 = new DelegationSet();
      Blob blob0 = delegationSet0.wireEncode();
      try { 
        encryptedContent0.wireDecodeV2(blob0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Read past the end of the input
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      WireFormat.setDefaultWireFormat(wireFormat0);
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      Blob blob0 = sha256WithEcdsaSignature0.getSignature();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2(blob0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContentV2 is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2183);
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      try { 
        encryptedContent0.wireDecodeV2(byteBuffer0, wireFormat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Did not get the expected TLV type
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2((ByteBuffer) null, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContentV2 is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      try { 
        encryptedContent0.wireDecodeV2(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Read past the end of the input
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      WireFormat.setDefaultWireFormat(wireFormat0);
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2((ByteBuffer) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContentV2 is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = new Blob();
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode(blob0, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContent is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode((Blob) null, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encrypt.EncryptedContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      WireFormat.setDefaultWireFormat(wireFormat0);
      Blob blob0 = new Blob();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode(blob0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContent is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      try { 
        encryptedContent0.wireDecode(byteBuffer0, wireFormat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Read past the end of the input
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode((ByteBuffer) null, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContent is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(4);
      try { 
        encryptedContent0.wireDecode(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Did not get the expected TLV type
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = new WireFormat();
      WireFormat.setDefaultWireFormat(wireFormat0);
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode((ByteBuffer) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeEncryptedContent is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = encryptedContent0.getPayloadKey();
      EncryptedContent encryptedContent1 = encryptedContent0.setPayloadKey(blob0);
      assertSame(encryptedContent0, encryptedContent1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2((ByteBuffer) null, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      Blob blob0 = wireFormat0.encodeEncryptedContentV2(encryptedContent0);
      try { 
        encryptedContent0.wireDecode(blob0, wireFormat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Did not get the expected TLV type
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2((Blob) null, (WireFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encrypt.EncryptedContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncode(wireFormat0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // TLV integer value may not be negative
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptedContent encryptedContent1 = encryptedContent0.setPayloadKey((Blob) null);
      assertSame(encryptedContent1, encryptedContent0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      Blob blob0 = encryptedContent0.wireEncodeV2(wireFormat0);
      encryptedContent0.wireDecodeV2(blob0);
      assertFalse(encryptedContent0.hasInitialVector());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptedContent encryptedContent1 = encryptedContent0.setPayload((Blob) null);
      assertSame(encryptedContent0, encryptedContent1);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      DelegationSet delegationSet0 = new DelegationSet();
      Blob blob0 = delegationSet0.wireEncode();
      EncryptedContent encryptedContent1 = encryptedContent0.setPayload(blob0);
      Blob blob1 = encryptedContent1.getPayload();
      assertFalse(blob1.isNull());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptedContent encryptedContent1 = encryptedContent0.setInitialVector((Blob) null);
      assertSame(encryptedContent0, encryptedContent1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptedContent encryptedContent1 = encryptedContent0.setKeyLocator((KeyLocator) null);
      assertSame(encryptedContent1, encryptedContent0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      int[] intArray0 = new int[6];
      Blob blob0 = new Blob(intArray0);
      encryptedContent0.setInitialVector(blob0);
      boolean boolean0 = encryptedContent0.hasInitialVector();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      boolean boolean0 = encryptedContent0.hasInitialVector();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.getKeyLocatorName();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // getKeyLocatorName: The KeyLocator type must be KEYNAME
         //
         verifyException("net.named_data.jndn.encrypt.EncryptedContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EncryptedContent encryptedContent0 = null;
      try {
        encryptedContent0 = new EncryptedContent((EncryptedContent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encrypt.EncryptedContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      encryptedContent0.clear();
      assertFalse(encryptedContent0.hasInitialVector());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = encryptedContent0.wireEncodeV2();
      try { 
        encryptedContent0.wireDecode(blob0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Did not get the expected TLV type
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode((ByteBuffer) null, (WireFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encrypt.EncryptedContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      encryptedContent0.setKeyLocatorName((Name) null);
      Name name0 = encryptedContent0.getKeyLocatorName();
      assertEquals(0L, name0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptAlgorithmType encryptAlgorithmType0 = EncryptAlgorithmType.AesCbc;
      encryptedContent0.setAlgorithmType(encryptAlgorithmType0);
      EncryptAlgorithmType encryptAlgorithmType1 = encryptedContent0.getAlgorithmType();
      assertEquals(1, encryptAlgorithmType1.getNumericType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.wireEncode();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // TLV integer value may not be negative
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = new Blob();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecode(blob0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      EncryptAlgorithmType encryptAlgorithmType0 = encryptedContent0.getAlgorithmType();
      assertEquals(EncryptAlgorithmType.NONE, encryptAlgorithmType0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      Blob blob0 = sha256WithEcdsaSignature0.getSignature();
      // Undeclared exception!
      try { 
        encryptedContent0.wireDecodeV2(blob0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }
}
