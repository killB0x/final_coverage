/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:14:56 GMT 2022
 */

package net.named_data.jndn;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.ComponentType;
import net.named_data.jndn.ContentType;
import net.named_data.jndn.MetaInfo;
import net.named_data.jndn.Name;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MetaInfo_ESTest extends MetaInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ContentType contentType0 = ContentType.KEY;
      metaInfo0.setType(contentType0);
      metaInfo0.getType();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setOtherTypeCode(1024);
      int int0 = metaInfo0.getOtherTypeCode();
      assertEquals(1L, metaInfo0.getChangeCount());
      assertEquals(1024, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setFreshnessPeriod(0.0);
      int int0 = metaInfo0.getFreshnessSeconds();
      assertEquals(1L, metaInfo0.getChangeCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setFreshnessSeconds(0);
      double double0 = metaInfo0.getFreshnessPeriod();
      assertEquals(1L, metaInfo0.getChangeCount());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setFreshnessSeconds(4512);
      double double0 = metaInfo0.getFreshnessPeriod();
      assertEquals(1L, metaInfo0.getChangeCount());
      assertEquals(4512000.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.PARAMETERS_SHA256_DIGEST;
      Name.Component name_Component0 = Name.Component.fromNumber(426L, componentType0, (-738));
      metaInfo0.setFinalBlockId(name_Component0);
      metaInfo0.getFinalBlockId();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.IMPLICIT_SHA256_DIGEST;
      byte[] byteArray0 = new byte[0];
      Name.Component name_Component0 = new Name.Component(byteArray0, componentType0);
      metaInfo0.setFinalBlockID(name_Component0);
      metaInfo0.getFinalBlockId();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.OTHER_CODE;
      Name.Component name_Component0 = Name.Component.fromNumber((-1L), componentType0, 0);
      metaInfo0.setFinalBlockId(name_Component0);
      metaInfo0.getFinalBlockId();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.OTHER_CODE;
      Name.Component name_Component0 = new Name.Component("", componentType0, 255);
      metaInfo0.setFinalBlockId(name_Component0);
      metaInfo0.getFinalBlockId();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.PARAMETERS_SHA256_DIGEST;
      byte[] byteArray0 = new byte[8];
      Blob blob0 = new Blob(byteArray0);
      Name.Component name_Component0 = new Name.Component(blob0, componentType0, 4267);
      metaInfo0.setFinalBlockID(name_Component0);
      metaInfo0.getFinalBlockID();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.OTHER_CODE;
      Name.Component name_Component0 = Name.Component.fromNumber((-1L), componentType0, 0);
      metaInfo0.setFinalBlockId(name_Component0);
      metaInfo0.getFinalBlockID();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.OTHER_CODE;
      Name.Component name_Component0 = new Name.Component("", componentType0, 255);
      metaInfo0.setFinalBlockId(name_Component0);
      metaInfo0.getFinalBlockID();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.IMPLICIT_SHA256_DIGEST;
      byte[] byteArray0 = new byte[3];
      Name.Component name_Component0 = new Name.Component(byteArray0, componentType0);
      metaInfo0.setFinalBlockId(name_Component0);
      long long0 = metaInfo0.getChangeCount();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MetaInfo metaInfo0 = null;
      try {
        metaInfo0 = new MetaInfo((MetaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.MetaInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.getFinalBlockId();
      assertEquals((-1), metaInfo0.getOtherTypeCode());
      assertEquals((-1.0), metaInfo0.getFreshnessPeriod(), 0.01);
      assertEquals(0L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setFinalBlockId((Name.Component) null);
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setFreshnessSeconds((-134));
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      // Undeclared exception!
      try { 
        metaInfo0.setOtherTypeCode((byte) (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // MetaInfo other type code must be non-negative
         //
         verifyException("net.named_data.jndn.MetaInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setOtherTypeCode(0);
      int int0 = metaInfo0.getOtherTypeCode();
      assertEquals(1L, metaInfo0.getChangeCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      int int0 = metaInfo0.getFreshnessSeconds();
      assertEquals(0L, metaInfo0.getChangeCount());
      assertEquals((-1.0), metaInfo0.getFreshnessPeriod(), 0.01);
      assertEquals((-1), metaInfo0.getOtherTypeCode());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.setFreshnessPeriod(2580.9644);
      int int0 = metaInfo0.getFreshnessSeconds();
      assertEquals(2580.9644, metaInfo0.getFreshnessPeriod(), 0.01);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      long long0 = metaInfo0.getChangeCount();
      assertEquals((-1.0), metaInfo0.getFreshnessPeriod(), 0.01);
      assertEquals((-1), metaInfo0.getOtherTypeCode());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      MetaInfo metaInfo1 = new MetaInfo(metaInfo0);
      assertEquals((-1), metaInfo1.getOtherTypeCode());
      assertEquals(0L, metaInfo0.getChangeCount());
      assertEquals((-1.0), metaInfo1.getFreshnessPeriod(), 0.01);
      assertEquals(0L, metaInfo1.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.getFinalBlockID();
      assertEquals(0L, metaInfo0.getChangeCount());
      assertEquals((-1.0), metaInfo0.getFreshnessPeriod(), 0.01);
      assertEquals((-1), metaInfo0.getOtherTypeCode());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      ComponentType componentType0 = ComponentType.IMPLICIT_SHA256_DIGEST;
      byte[] byteArray0 = new byte[3];
      Name.Component name_Component0 = new Name.Component(byteArray0, componentType0);
      metaInfo0.setFinalBlockID(name_Component0);
      metaInfo0.getFinalBlockID();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      double double0 = metaInfo0.getFreshnessPeriod();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(0L, metaInfo0.getChangeCount());
      assertEquals((-1), metaInfo0.getOtherTypeCode());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.clear();
      assertEquals(1L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      int int0 = metaInfo0.getOtherTypeCode();
      assertEquals((-1.0), metaInfo0.getFreshnessPeriod(), 0.01);
      assertEquals((-1), int0);
      assertEquals(0L, metaInfo0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MetaInfo metaInfo0 = new MetaInfo();
      metaInfo0.getType();
      assertEquals((-1), metaInfo0.getOtherTypeCode());
      assertEquals(0L, metaInfo0.getChangeCount());
      assertEquals((-1.0), metaInfo0.getFreshnessPeriod(), 0.01);
  }
}
