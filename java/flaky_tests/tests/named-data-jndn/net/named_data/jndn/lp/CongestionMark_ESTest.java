/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:45:17 GMT 2022
 */

package net.named_data.jndn.lp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.lp.CongestionMark;
import net.named_data.jndn.lp.LpPacket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CongestionMark_ESTest extends CongestionMark_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CongestionMark congestionMark0 = new CongestionMark();
      congestionMark0.setCongestionMark(1995L);
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField(congestionMark0);
      assertEquals(1995L, congestionMark0.getCongestionMark());
      
      CongestionMark congestionMark1 = CongestionMark.getFirstHeader(lpPacket0);
      assertEquals(1995L, congestionMark1.getCongestionMark());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CongestionMark congestionMark0 = new CongestionMark();
      congestionMark0.setCongestionMark((-1414L));
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField(congestionMark0);
      assertEquals((-1414L), congestionMark0.getCongestionMark());
      
      CongestionMark congestionMark1 = CongestionMark.getFirstHeader(lpPacket0);
      assertEquals((-1414L), congestionMark1.getCongestionMark());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CongestionMark congestionMark0 = new CongestionMark();
      assertEquals(0L, congestionMark0.getCongestionMark());
      
      congestionMark0.setCongestionMark(1L);
      long long0 = congestionMark0.getCongestionMark();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CongestionMark congestionMark0 = new CongestionMark();
      congestionMark0.setCongestionMark((-1414L));
      long long0 = congestionMark0.getCongestionMark();
      assertEquals((-1414L), long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        CongestionMark.getFirstHeader((LpPacket) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.lp.CongestionMark", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CongestionMark congestionMark0 = new CongestionMark();
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField(congestionMark0);
      CongestionMark congestionMark1 = CongestionMark.getFirstHeader(lpPacket0);
      assertEquals(0L, congestionMark1.getCongestionMark());
      assertNotNull(congestionMark1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField((Object) null);
      CongestionMark congestionMark0 = CongestionMark.getFirstHeader(lpPacket0);
      assertNull(congestionMark0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CongestionMark congestionMark0 = new CongestionMark();
      long long0 = congestionMark0.getCongestionMark();
      assertEquals(0L, long0);
  }
}
