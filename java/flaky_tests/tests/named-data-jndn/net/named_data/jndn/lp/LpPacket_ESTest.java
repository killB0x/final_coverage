/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:53:04 GMT 2022
 */

package net.named_data.jndn.lp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.lp.LpPacket;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LpPacket_ESTest extends LpPacket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Object object0 = new Object();
      lpPacket0.addHeaderField(object0);
      Object object1 = lpPacket0.getHeaderField(0);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Blob blob0 = new Blob("");
      lpPacket0.setFragmentWireEncoding(blob0);
      Blob blob1 = lpPacket0.getFragmentWireEncoding();
      assertFalse(blob1.isNull());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Object object0 = new Object();
      lpPacket0.addHeaderField(object0);
      int int0 = lpPacket0.countHeaderFields();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.setFragmentWireEncoding((Blob) null);
      assertEquals(0, lpPacket0.countHeaderFields());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Blob blob0 = lpPacket0.getFragmentWireEncoding();
      lpPacket0.setFragmentWireEncoding(blob0);
      assertEquals(0, lpPacket0.countHeaderFields());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      int int0 = lpPacket0.countHeaderFields();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      // Undeclared exception!
      try { 
        lpPacket0.getHeaderField(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField((Object) null);
      Object object0 = lpPacket0.getHeaderField(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.clear();
      assertEquals(0, lpPacket0.countHeaderFields());
  }
}
