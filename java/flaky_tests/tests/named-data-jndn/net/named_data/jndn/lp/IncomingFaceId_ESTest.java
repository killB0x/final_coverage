/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:43:33 GMT 2022
 */

package net.named_data.jndn.lp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.lp.IncomingFaceId;
import net.named_data.jndn.lp.LpPacket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IncomingFaceId_ESTest extends IncomingFaceId_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IncomingFaceId incomingFaceId0 = new IncomingFaceId();
      incomingFaceId0.setFaceId(0L);
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField(incomingFaceId0);
      IncomingFaceId incomingFaceId1 = IncomingFaceId.getFirstHeader(lpPacket0);
      assertEquals(0L, incomingFaceId1.getFaceId());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IncomingFaceId incomingFaceId0 = new IncomingFaceId();
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField(incomingFaceId0);
      incomingFaceId0.setFaceId(2888L);
      assertEquals(2888L, incomingFaceId0.getFaceId());
      
      IncomingFaceId incomingFaceId1 = IncomingFaceId.getFirstHeader(lpPacket0);
      assertEquals(2888L, incomingFaceId1.getFaceId());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IncomingFaceId incomingFaceId0 = new IncomingFaceId();
      incomingFaceId0.setFaceId(1084L);
      long long0 = incomingFaceId0.getFaceId();
      assertEquals(1084L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        IncomingFaceId.getFirstHeader((LpPacket) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.lp.IncomingFaceId", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Object object0 = new Object();
      lpPacket0.addHeaderField(object0);
      IncomingFaceId incomingFaceId0 = IncomingFaceId.getFirstHeader(lpPacket0);
      assertNull(incomingFaceId0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IncomingFaceId incomingFaceId0 = new IncomingFaceId();
      LpPacket lpPacket0 = new LpPacket();
      lpPacket0.addHeaderField(incomingFaceId0);
      IncomingFaceId incomingFaceId1 = IncomingFaceId.getFirstHeader(lpPacket0);
      assertEquals((-1L), incomingFaceId1.getFaceId());
      assertNotNull(incomingFaceId1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IncomingFaceId incomingFaceId0 = new IncomingFaceId();
      long long0 = incomingFaceId0.getFaceId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IncomingFaceId incomingFaceId0 = new IncomingFaceId();
      incomingFaceId0.setFaceId(0L);
      long long0 = incomingFaceId0.getFaceId();
      assertEquals(0L, long0);
  }
}
