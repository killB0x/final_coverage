/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:03:32 GMT 2022
 */

package net.named_data.jndn;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import net.named_data.jndn.ComponentType;
import net.named_data.jndn.DelegationSet;
import net.named_data.jndn.InterestFilter;
import net.named_data.jndn.KeyLocator;
import net.named_data.jndn.Name;
import net.named_data.jndn.Sha256WithEcdsaSignature;
import net.named_data.jndn.Sha256WithRsaSignature;
import net.named_data.jndn.encoding.WireFormat;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InterestFilter_ESTest extends InterestFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      KeyLocator keyLocator0 = sha256WithRsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      InterestFilter interestFilter0 = new InterestFilter(name0);
      assertFalse(interestFilter0.hasRegexFilter());
      
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      DelegationSet delegationSet0 = new DelegationSet();
      Blob blob0 = wireFormat0.encodeDelegationSet(delegationSet0);
      ComponentType componentType0 = ComponentType.PARAMETERS_SHA256_DIGEST;
      name0.append(blob0, componentType0);
      boolean boolean0 = interestFilter0.doesMatch(name0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      KeyLocator keyLocator0 = sha256WithEcdsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      InterestFilter interestFilter0 = new InterestFilter(name0, "");
      boolean boolean0 = interestFilter0.doesMatch(name0);
      assertTrue(boolean0);
      assertTrue(interestFilter0.hasRegexFilter());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      KeyLocator keyLocator0 = sha256WithRsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      InterestFilter interestFilter0 = new InterestFilter(name0);
      String string0 = interestFilter0.getRegexFilter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterestFilter interestFilter0 = new InterestFilter("D:nFA[", "p$C,xas=");
      String string0 = interestFilter0.getRegexFilter();
      assertEquals("p$C,xas=", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      KeyLocator keyLocator0 = sha256WithEcdsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      InterestFilter interestFilter0 = new InterestFilter(name0, "");
      Name name1 = interestFilter0.getPrefix();
      assertTrue(name1.equals((Object)name0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterestFilter interestFilter0 = new InterestFilter("Y@(u px\"", "Y@(u px\"");
      // Undeclared exception!
      try { 
        interestFilter0.doesMatch((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.InterestFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter((Name) null, "Can't parse decimal Name Component type: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter((InterestFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.InterestFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter("xdT8o:", "xdT8o:");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter("^&ndn.Exclude=$", "^&ndn.Exclude=$");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Can't parse decimal Name Component type: ^&ndn.Exclude in URI ^&ndn.Exclude=$
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter("Can't parse decimal Name Component type: ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InterestFilter interestFilter0 = null;
      try {
        interestFilter0 = new InterestFilter("O`o5=g");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Can't parse decimal Name Component type: O`o5 in URI O`o5=g
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      KeyLocator keyLocator0 = sha256WithRsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      InterestFilter interestFilter0 = new InterestFilter(name0);
      boolean boolean0 = interestFilter0.hasRegexFilter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      KeyLocator keyLocator0 = sha256WithEcdsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      InterestFilter interestFilter0 = new InterestFilter(name0, "");
      boolean boolean0 = interestFilter0.hasRegexFilter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InterestFilter interestFilter0 = new InterestFilter("^tgoniy>?{mp", "^tgoniy>?{mp");
      assertTrue(interestFilter0.hasRegexFilter());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InterestFilter interestFilter0 = new InterestFilter("MbzK4+Y-k&axw{9;", "MbzK4+Y-k&axw{9;");
      Name name0 = new Name("<]M\"oU Y}Mi+zds");
      boolean boolean0 = interestFilter0.doesMatch(name0);
      assertFalse(boolean0);
      assertTrue(interestFilter0.hasRegexFilter());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InterestFilter interestFilter0 = new InterestFilter("z$", "z$");
      ArrayList<InterestFilter> arrayList0 = new ArrayList<InterestFilter>();
      Name name0 = new Name(arrayList0);
      boolean boolean0 = interestFilter0.doesMatch(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      KeyLocator keyLocator0 = sha256WithEcdsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      InterestFilter interestFilter0 = new InterestFilter(name0, "");
      String string0 = interestFilter0.getRegexFilter();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InterestFilter interestFilter0 = new InterestFilter("]");
      ArrayList<InterestFilter> arrayList0 = new ArrayList<InterestFilter>();
      arrayList0.add(interestFilter0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        interestFilter0.doesMatch(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.InterestFilter cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.InterestFilter and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @98ca8b4)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InterestFilter interestFilter0 = new InterestFilter("]", "]");
      Name name0 = interestFilter0.getPrefix();
      // Undeclared exception!
      try { 
        interestFilter0.doesMatch(name0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<InterestFilter> arrayList0 = new ArrayList<InterestFilter>();
      Name name0 = new Name(arrayList0);
      InterestFilter interestFilter0 = new InterestFilter(name0, "vhk,~N^t1");
      InterestFilter interestFilter1 = new InterestFilter(interestFilter0);
      assertTrue(interestFilter1.hasRegexFilter());
  }
}
