/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:37:35 GMT 2022
 */

package net.named_data.jndn;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.named_data.jndn.GenericSignature;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericSignature_ESTest extends GenericSignature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      Blob blob0 = new Blob("");
      genericSignature0.setSignatureInfoEncoding(blob0);
      genericSignature0.getSignatureInfoEncoding();
      assertEquals(1L, genericSignature0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Blob blob0 = new Blob(byteBuffer0, true);
      genericSignature0.setSignature(blob0);
      genericSignature0.getSignature();
      assertEquals(1L, genericSignature0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GenericSignature genericSignature0 = null;
      try {
        genericSignature0 = new GenericSignature((GenericSignature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.GenericSignature", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      genericSignature0.setSignatureInfoEncoding((Blob) null, 0);
      int int0 = genericSignature0.getTypeCode();
      assertEquals(1L, genericSignature0.getChangeCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      byte[] byteArray0 = new byte[9];
      Blob blob0 = new Blob(byteArray0);
      genericSignature0.setSignatureInfoEncoding(blob0, 1);
      int int0 = genericSignature0.getTypeCode();
      assertEquals(1L, genericSignature0.getChangeCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      genericSignature0.setSignature((Blob) null);
      assertEquals(1L, genericSignature0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      genericSignature0.getSignature();
      assertEquals((-1), genericSignature0.getTypeCode());
      assertEquals(0L, genericSignature0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      genericSignature0.setSignatureInfoEncoding((Blob) null);
      long long0 = genericSignature0.getChangeCount();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      GenericSignature genericSignature1 = (GenericSignature)genericSignature0.clone();
      assertEquals(0L, genericSignature0.getChangeCount());
      assertEquals((-1), genericSignature1.getTypeCode());
      assertEquals(0L, genericSignature1.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      long long0 = genericSignature0.getChangeCount();
      assertEquals(0L, long0);
      assertEquals((-1), genericSignature0.getTypeCode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      GenericSignature genericSignature1 = new GenericSignature(genericSignature0);
      assertEquals(0L, genericSignature0.getChangeCount());
      assertEquals((-1), genericSignature1.getTypeCode());
      assertEquals(0L, genericSignature1.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      int int0 = genericSignature0.getTypeCode();
      assertEquals(0L, genericSignature0.getChangeCount());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      genericSignature0.getSignatureInfoEncoding();
      assertEquals(0L, genericSignature0.getChangeCount());
      assertEquals((-1), genericSignature0.getTypeCode());
  }
}
