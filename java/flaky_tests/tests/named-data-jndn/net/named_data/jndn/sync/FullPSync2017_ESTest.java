/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:01:08 GMT 2022
 */

package net.named_data.jndn.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.Face;
import net.named_data.jndn.Interest;
import net.named_data.jndn.Name;
import net.named_data.jndn.security.KeyChain;
import net.named_data.jndn.security.SigningInfo;
import net.named_data.jndn.security.pib.PibIdentity;
import net.named_data.jndn.security.v2.CertificateV2;
import net.named_data.jndn.security.v2.DataValidationFailureCallback;
import net.named_data.jndn.security.v2.DataValidationState;
import net.named_data.jndn.security.v2.DataValidationSuccessCallback;
import net.named_data.jndn.security.v2.ValidationPolicy;
import net.named_data.jndn.security.v2.ValidationState;
import net.named_data.jndn.sync.FullPSync2017;
import net.named_data.jndn.sync.FullPSync2017WithUsers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FullPSync2017_ESTest extends FullPSync2017_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Face face0 = new Face("(;p,G[v6_FfCpo3i", (-1938));
      Name name0 = new Name();
      FullPSync2017 fullPSync2017_0 = null;
      try {
        fullPSync2017_0 = new FullPSync2017(4, face0, name0, (FullPSync2017.OnNamesUpdate) null, (KeyChain) null, 0.0, (-698.63881036379));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // registerPrefix: The command KeyChain has not been set. You must call setCommandSigningInfo.
         //
         verifyException("net.named_data.jndn.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Face face0 = new Face("(;p,G[v6_FfCpo3i", (-1938));
      Name name0 = new Name();
      SigningInfo signingInfo0 = new SigningInfo((PibIdentity) null);
      FullPSync2017 fullPSync2017_0 = null;
      try {
        fullPSync2017_0 = new FullPSync2017(860, face0, name0, (FullPSync2017.OnNamesUpdate) null, (KeyChain) null, 0.0, (-1938), signingInfo0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // registerPrefix: The command KeyChain has not been set. You must call setCommandSigningInfo.
         //
         verifyException("net.named_data.jndn.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Face face0 = new Face("igCBF;<K&~8{W", (-1938));
      Interest interest0 = new Interest("4jXQB h3]2nmFHR");
      CertificateV2 certificateV2_0 = new CertificateV2();
      DataValidationSuccessCallback dataValidationSuccessCallback0 = mock(DataValidationSuccessCallback.class, new ViolatedAssumptionAnswer());
      DataValidationFailureCallback dataValidationFailureCallback0 = mock(DataValidationFailureCallback.class, new ViolatedAssumptionAnswer());
      DataValidationState dataValidationState0 = new DataValidationState(certificateV2_0, dataValidationSuccessCallback0, dataValidationFailureCallback0);
      Name name0 = ValidationPolicy.getKeyLocatorName(interest0, (ValidationState) dataValidationState0);
      FullPSync2017WithUsers fullPSync2017WithUsers0 = null;
      try {
        fullPSync2017WithUsers0 = new FullPSync2017WithUsers(0, face0, name0, name0, (FullPSync2017WithUsers.OnUpdate) null, (KeyChain) null, 0, 1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // registerPrefix: The command KeyChain has not been set. You must call setCommandSigningInfo.
         //
         verifyException("net.named_data.jndn.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Name name0 = new Name();
      Face face0 = new Face();
      FullPSync2017 fullPSync2017_0 = null;
      try {
        fullPSync2017_0 = new FullPSync2017(0, face0, name0, (FullPSync2017.OnNamesUpdate) null, (KeyChain) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // registerPrefix: The command KeyChain has not been set. You must call setCommandSigningInfo.
         //
         verifyException("net.named_data.jndn.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Name name0 = new Name();
      Face face0 = new Face();
      FullPSync2017 fullPSync2017_0 = null;
      try {
        fullPSync2017_0 = new FullPSync2017(1500, face0, name0, (FullPSync2017.OnNamesUpdate) null, (KeyChain) null, 1500, 1500, (SigningInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.SigningInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Name name0 = SigningInfo.getDigestSha256Identity();
      FullPSync2017 fullPSync2017_0 = null;
      try {
        fullPSync2017_0 = new FullPSync2017(5745, (Face) null, name0, (FullPSync2017.OnNamesUpdate) null, (KeyChain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.sync.FullPSync2017", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Name name0 = SigningInfo.getDigestSha256Identity();
      FullPSync2017 fullPSync2017_0 = null;
      try {
        fullPSync2017_0 = new FullPSync2017(249, (Face) null, name0, (FullPSync2017.OnNamesUpdate) null, (KeyChain) null, 249, 249);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.sync.FullPSync2017", e);
      }
  }
}
