/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:17:04 GMT 2022
 */

package net.named_data.jndn;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.RegistrationOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RegistrationOptions_ESTest extends RegistrationOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      RegistrationOptions registrationOptions1 = registrationOptions0.setChildInherit(false);
      registrationOptions1.setOrigin(2293);
      assertEquals(2293, registrationOptions1.getOrigin());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertEquals((-1), registrationOptions0.getOrigin());
      
      registrationOptions0.setOrigin(0);
      registrationOptions0.setNfdForwardingFlags((-2051));
      assertEquals(0, registrationOptions0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      registrationOptions0.setOrigin(2293);
      registrationOptions0.setNfdForwardingFlags(2543);
      assertEquals(2293, registrationOptions0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertEquals((-1), registrationOptions0.getOrigin());
      
      registrationOptions0.setOrigin(0);
      registrationOptions0.setChildInherit(true);
      assertEquals(0, registrationOptions0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      RegistrationOptions registrationOptions1 = registrationOptions0.setOrigin(2293);
      registrationOptions1.setChildInherit(true);
      assertEquals(2293, registrationOptions0.getOrigin());
      assertTrue(registrationOptions0.getChildInherit());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertFalse(registrationOptions0.getCapture());
      
      registrationOptions0.setCapture(true);
      registrationOptions0.setChildInherit(true);
      assertEquals(3, registrationOptions0.getNfdForwardingFlags());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertEquals((-1), registrationOptions0.getOrigin());
      
      registrationOptions0.setOrigin(0);
      registrationOptions0.setCapture(false);
      assertEquals(0, registrationOptions0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      registrationOptions0.setOrigin(2293);
      registrationOptions0.setCapture(false);
      assertEquals(2293, registrationOptions0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertEquals(1, registrationOptions0.getNfdForwardingFlags());
      
      registrationOptions0.setNfdForwardingFlags(0);
      registrationOptions0.setCapture(false);
      assertFalse(registrationOptions0.getChildInherit());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertEquals((-1), registrationOptions0.getOrigin());
      
      registrationOptions0.setOrigin(0);
      int int0 = registrationOptions0.getOrigin();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertEquals((-1), registrationOptions0.getOrigin());
      
      registrationOptions0.setOrigin(1);
      int int0 = registrationOptions0.getOrigin();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertFalse(registrationOptions0.getCapture());
      
      registrationOptions0.setCapture(true);
      boolean boolean0 = registrationOptions0.getCapture();
      assertEquals(3, registrationOptions0.getNfdForwardingFlags());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegistrationOptions registrationOptions0 = null;
      try {
        registrationOptions0 = new RegistrationOptions((RegistrationOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.RegistrationOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      registrationOptions0.setNfdForwardingFlags(2);
      registrationOptions0.setOrigin(0);
      assertEquals(2, registrationOptions0.getNfdForwardingFlags());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertTrue(registrationOptions0.getChildInherit());
      
      registrationOptions0.setNfdForwardingFlags(0);
      boolean boolean0 = registrationOptions0.getChildInherit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      int int0 = registrationOptions0.getNfdForwardingFlags();
      assertEquals((-1), registrationOptions0.getOrigin());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertTrue(registrationOptions0.getChildInherit());
      
      registrationOptions0.setChildInherit(false);
      int int0 = registrationOptions0.getNfdForwardingFlags();
      assertFalse(registrationOptions0.getChildInherit());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      assertEquals(1, registrationOptions0.getNfdForwardingFlags());
      
      RegistrationOptions registrationOptions1 = registrationOptions0.setCapture(true);
      int int0 = registrationOptions1.getNfdForwardingFlags();
      assertTrue(registrationOptions0.getCapture());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      boolean boolean0 = registrationOptions0.getChildInherit();
      assertEquals(1, registrationOptions0.getNfdForwardingFlags());
      assertEquals((-1), registrationOptions0.getOrigin());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      registrationOptions0.setOrigin((-2570));
      assertEquals((-2570), registrationOptions0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      boolean boolean0 = registrationOptions0.getCapture();
      assertEquals(1, registrationOptions0.getNfdForwardingFlags());
      assertEquals((-1), registrationOptions0.getOrigin());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      RegistrationOptions registrationOptions1 = new RegistrationOptions(registrationOptions0);
      assertEquals(1, registrationOptions1.getNfdForwardingFlags());
      assertEquals((-1), registrationOptions1.getOrigin());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegistrationOptions registrationOptions0 = new RegistrationOptions();
      int int0 = registrationOptions0.getOrigin();
      assertEquals(1, registrationOptions0.getNfdForwardingFlags());
      assertEquals((-1), int0);
  }
}
