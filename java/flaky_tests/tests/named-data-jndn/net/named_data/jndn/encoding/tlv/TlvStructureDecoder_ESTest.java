/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:29:54 GMT 2022
 */

package net.named_data.jndn.encoding.tlv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.named_data.jndn.encoding.tlv.TlvStructureDecoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TlvStructureDecoder_ESTest extends TlvStructureDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-2);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      boolean boolean0 = tlvStructureDecoder0.findElementEnd(byteBuffer0);
      assertEquals(5, tlvStructureDecoder0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-1);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      tlvStructureDecoder0.findElementEnd(byteBuffer0);
      byte[] byteArray1 = new byte[1];
      ByteBuffer byteBuffer1 = ByteBuffer.wrap(byteArray1);
      boolean boolean0 = tlvStructureDecoder0.findElementEnd(byteBuffer1);
      assertEquals(4, tlvStructureDecoder0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-2);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      tlvStructureDecoder0.findElementEnd(byteBuffer0);
      ByteBuffer byteBuffer1 = ByteBuffer.allocate(2424);
      tlvStructureDecoder0.findElementEnd(byteBuffer1);
      assertEquals(6, tlvStructureDecoder0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[4];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      tlvStructureDecoder0.findElementEnd(byteBuffer0);
      int int0 = tlvStructureDecoder0.getOffset();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte) (-1);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      try { 
        tlvStructureDecoder0.findElementEnd(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decoding a 64-bit VAR-NUMBER is not supported
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      // Undeclared exception!
      try { 
        tlvStructureDecoder0.findElementEnd((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.tlv.TlvDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      tlvStructureDecoder0.seek((-362));
      // Undeclared exception!
      try { 
        tlvStructureDecoder0.findElementEnd(byteBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-50);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      tlvStructureDecoder0.findElementEnd(byteBuffer0);
      int int0 = tlvStructureDecoder0.getOffset();
      assertEquals((-838860794), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-1);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      tlvStructureDecoder0.findElementEnd(byteBuffer0);
      tlvStructureDecoder0.seek((byte) (-1));
      // Undeclared exception!
      try { 
        tlvStructureDecoder0.findElementEnd(byteBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-1 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-3);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      boolean boolean0 = tlvStructureDecoder0.findElementEnd(byteBuffer0);
      assertEquals(4, tlvStructureDecoder0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-3);
      byteArray0[3] = (byte)63;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      boolean boolean0 = tlvStructureDecoder0.findElementEnd(byteBuffer0);
      assertEquals(8, tlvStructureDecoder0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-2);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      boolean boolean0 = tlvStructureDecoder0.findElementEnd(byteBuffer0);
      assertEquals(4, tlvStructureDecoder0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-1);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      boolean boolean0 = tlvStructureDecoder0.findElementEnd(byteBuffer0);
      assertEquals(10, tlvStructureDecoder0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      byte[] byteArray0 = new byte[23];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      tlvStructureDecoder0.findElementEnd(byteBuffer0);
      boolean boolean0 = tlvStructureDecoder0.findElementEnd((ByteBuffer) null);
      assertEquals(2, tlvStructureDecoder0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TlvStructureDecoder tlvStructureDecoder0 = new TlvStructureDecoder();
      int int0 = tlvStructureDecoder0.getOffset();
      assertEquals(0, int0);
  }
}
