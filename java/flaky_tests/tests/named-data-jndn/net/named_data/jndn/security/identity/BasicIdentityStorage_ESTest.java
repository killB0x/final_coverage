/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:58:06 GMT 2022
 */

package net.named_data.jndn.security.identity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import net.named_data.jndn.security.identity.BasicIdentityStorage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BasicIdentityStorage_ESTest extends BasicIdentityStorage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-public-info.db");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = BasicIdentityStorage.getDefaultDatabaseFilePath();
      assertEquals("/home/user/.ndn/ndnsec-public-info.db", file0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-public-info.db");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "'Q<uturxeSl");
      File file0 = BasicIdentityStorage.getDefaultDatabaseFilePath();
      assertEquals("/home/user/.ndn/ndnsec-public-info.db", file0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "~4x^{P<Z5+0yRD@a");
      File file0 = BasicIdentityStorage.getDefaultDatabaseDirectoryPath();
      assertTrue(file0.isFile());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = BasicIdentityStorage.getDefaultDatabaseDirectoryPath();
      assertEquals(".ndn", file0.getName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      File file0 = BasicIdentityStorage.getDefaultDatabaseDirectoryPath();
      assertTrue(file0.isFile());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BasicIdentityStorage basicIdentityStorage0 = null;
      try {
        basicIdentityStorage0 = new BasicIdentityStorage("~4x^{P<Z5+0yRD@a");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      File file0 = BasicIdentityStorage.getDefaultDatabaseFilePath();
      assertEquals("/home/user/.ndn/ndnsec-public-info.db", file0.toString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BasicIdentityStorage basicIdentityStorage0 = null;
      try {
        basicIdentityStorage0 = new BasicIdentityStorage();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }
}
