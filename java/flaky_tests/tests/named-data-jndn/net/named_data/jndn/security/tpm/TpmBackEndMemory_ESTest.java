/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:24:30 GMT 2022
 */

package net.named_data.jndn.security.tpm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import net.named_data.jndn.Name;
import net.named_data.jndn.security.KeyParams;
import net.named_data.jndn.security.KeyType;
import net.named_data.jndn.security.tpm.TpmBackEndMemory;
import net.named_data.jndn.security.tpm.TpmKeyHandle;
import net.named_data.jndn.security.tpm.TpmPrivateKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TpmBackEndMemory_ESTest extends TpmBackEndMemory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      boolean boolean0 = tpmBackEndMemory0.doHasKey(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doImportKey((Name) null, byteBuffer0, (ByteBuffer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (5 > 2)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      name0.append((Name.Component) null);
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doHasKey(name0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) tpmBackEndMemory0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doHasKey(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.tpm.TpmBackEndMemory cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.tpm.TpmBackEndMemory and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3251e93a)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name.Component[] name_ComponentArray0 = new Name.Component[1];
      Name name0 = new Name(name_ComponentArray0);
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doGetKeyHandle(name0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      ArrayList<TpmPrivateKey> arrayList0 = new ArrayList<TpmPrivateKey>();
      TpmPrivateKey tpmPrivateKey0 = new TpmPrivateKey();
      arrayList0.add(tpmPrivateKey0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doGetKeyHandle(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.tpm.TpmPrivateKey cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.tpm.TpmPrivateKey and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3251e93a)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      name0.append((Name.Component) null);
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doExportKey(name0, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) null);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doDeleteKey(name0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      KeyParams keyParams0 = mock(KeyParams.class, new ViolatedAssumptionAnswer());
      doReturn((KeyType) null, (KeyType) null, (KeyType) null).when(keyParams0).getKeyType();
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doCreateKey(name0, keyParams0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot generate a key pair of type null
         //
         verifyException("net.named_data.jndn.security.tpm.TpmPrivateKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      KeyType keyType0 = KeyType.RSA;
      KeyParams keyParams0 = mock(KeyParams.class, new ViolatedAssumptionAnswer());
      doReturn(keyType0).when(keyParams0).getKeyType();
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doCreateKey(name0, keyParams0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.KeyParams$MockitoMock$1823922533 cannot be cast to class net.named_data.jndn.security.RsaKeyParams (net.named_data.jndn.security.KeyParams$MockitoMock$1823922533 and net.named_data.jndn.security.RsaKeyParams are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3251e93a)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmPrivateKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, 0, (int) (byte)1);
      try { 
        tpmBackEndMemory0.doImportKey(name0, (ByteBuffer) null, byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot import private key: org.evosuite.runtime.mock.java.lang.MockThrowable: Cannot decode the PKCS #8 EncryptedPrivateKeyInfo: java.lang.NullPointerException
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doImportKey(name0, (ByteBuffer) null, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name("");
      TpmKeyHandle tpmKeyHandle0 = tpmBackEndMemory0.doGetKeyHandle(name0);
      assertNull(tpmKeyHandle0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      // Undeclared exception!
      try { 
        tpmBackEndMemory0.doCreateKey(name0, (KeyParams) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmPrivateKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = TpmBackEndMemory.getScheme();
      assertEquals("tpm-memory", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      tpmBackEndMemory0.doDeleteKey((Name) null);
      assertFalse(tpmBackEndMemory0.isTpmLocked());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TpmBackEndMemory tpmBackEndMemory0 = new TpmBackEndMemory();
      Name name0 = new Name();
      try { 
        tpmBackEndMemory0.doExportKey(name0, (ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // exportKey: The key does not exist
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndMemory", e);
      }
  }
}
