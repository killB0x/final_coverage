/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:05:05 GMT 2022
 */

package net.named_data.jndn.security.pib;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.HashSet;
import net.named_data.jndn.KeyLocator;
import net.named_data.jndn.Name;
import net.named_data.jndn.Sha256WithEcdsaSignature;
import net.named_data.jndn.security.pib.PibMemory;
import net.named_data.jndn.security.v2.CertificateV2;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PibImpl_ESTest extends PibImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      KeyLocator keyLocator0 = sha256WithEcdsaSignature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      boolean boolean0 = pibMemory0.hasKey(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      boolean boolean0 = pibMemory0.hasIdentity((Name) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name("Ad");
      boolean boolean0 = pibMemory0.hasCertificate(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.setTpmLocator("Mac OS X");
      String string0 = pibMemory0.getTpmLocator();
      assertEquals("Mac OS X", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      String string0 = pibMemory0.getTpmLocator();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      HashSet<Name> hashSet0 = pibMemory0.getKeysOfIdentity(name0);
      assertEquals(0, hashSet0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      HashSet<Name> hashSet0 = pibMemory0.getIdentities();
      assertTrue(hashSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Name> arrayList0 = new ArrayList<Name>();
      Name name0 = new Name(arrayList0);
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      pibMemory0.addKey(name0, name0, byteBuffer0);
      Name name1 = pibMemory0.getDefaultKeyOfIdentity(name0);
      assertEquals(0, name1.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Name> arrayList0 = new ArrayList<Name>();
      Name name0 = new Name(arrayList0);
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      pibMemory0.addKey(name0, name0, byteBuffer0);
      Name name1 = pibMemory0.getDefaultIdentity();
      assertTrue(name1.equals((Object)name0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      HashSet<Name> hashSet0 = pibMemory0.getCertificatesOfKey(name0);
      assertTrue(hashSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      try { 
        pibMemory0.setDefaultKeyOfIdentity(name0, name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Key `/` not found
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultKeyOfIdentity((Name) null, (Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultIdentity((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      try { 
        pibMemory0.setDefaultCertificateOfKey(name0, name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Certificate `/` does not exist
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultCertificateOfKey((Name) null, (Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.removeKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      // Undeclared exception!
      try { 
        pibMemory0.removeKey(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.removeCertificate((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.CertificateV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name.Component[] name_ComponentArray0 = new Name.Component[0];
      Name name0 = new Name(name_ComponentArray0);
      // Undeclared exception!
      try { 
        pibMemory0.removeCertificate(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Certificate name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.v2.CertificateV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Name> arrayList0 = new ArrayList<Name>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Name name0 = new Name(arrayList1);
      arrayList0.add(name0);
      Name name1 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.removeCertificate(name1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.Name cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.Name and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @566b1623)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      try { 
        pibMemory0.getKeyBits(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Key `/` not found
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getKeyBits((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      try { 
        pibMemory0.getDefaultKeyOfIdentity(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No default key for identity `/`
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getDefaultKeyOfIdentity((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      try { 
        pibMemory0.getDefaultIdentity();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No default identity
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      try { 
        pibMemory0.getDefaultCertificateOfKey(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No default certificate for key `/`
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getDefaultCertificateOfKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      try { 
        pibMemory0.getCertificate(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Certificate `/` does not exist
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getCertificate((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.getCertificate(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Object is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @566b1623)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        pibMemory0.addKey((Name) null, (Name) null, byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.addIdentity((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.addCertificate((CertificateV2) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      CertificateV2 certificateV2_0 = new CertificateV2();
      try { 
        pibMemory0.addCertificate(certificateV2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The Data Name does not follow the certificate naming convention
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }
}
