/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:11:13 GMT 2022
 */

package net.named_data.jndn.security.tpm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.named_data.jndn.Name;
import net.named_data.jndn.security.DigestAlgorithm;
import net.named_data.jndn.security.tpm.TpmKeyHandleMemory;
import net.named_data.jndn.security.tpm.TpmPrivateKey;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TpmKeyHandle_ESTest extends TpmKeyHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TpmPrivateKey tpmPrivateKey0 = new TpmPrivateKey();
      TpmKeyHandleMemory tpmKeyHandleMemory0 = new TpmKeyHandleMemory(tpmPrivateKey0);
      Name name0 = new Name();
      name0.appendSegment((byte)0);
      tpmKeyHandleMemory0.setKeyName(name0);
      Name name1 = tpmKeyHandleMemory0.getKeyName();
      assertNotSame(name1, name0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TpmPrivateKey tpmPrivateKey0 = new TpmPrivateKey();
      TpmKeyHandleMemory tpmKeyHandleMemory0 = new TpmKeyHandleMemory(tpmPrivateKey0);
      // Undeclared exception!
      try { 
        tpmKeyHandleMemory0.setKeyName((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TpmPrivateKey tpmPrivateKey0 = new TpmPrivateKey();
      TpmKeyHandleMemory tpmKeyHandleMemory0 = new TpmKeyHandleMemory(tpmPrivateKey0);
      Name name0 = tpmKeyHandleMemory0.getKeyName();
      assertEquals(0L, name0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TpmPrivateKey tpmPrivateKey0 = new TpmPrivateKey();
      TpmKeyHandleMemory tpmKeyHandleMemory0 = new TpmKeyHandleMemory(tpmPrivateKey0);
      try { 
        tpmKeyHandleMemory0.derivePublicKey();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error in TpmPrivateKey.derivePublicKey: org.evosuite.runtime.mock.java.lang.MockThrowable: derivePublicKey: The private key is not loaded
         //
         verifyException("net.named_data.jndn.security.tpm.TpmKeyHandleMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TpmPrivateKey tpmPrivateKey0 = new TpmPrivateKey();
      TpmKeyHandleMemory tpmKeyHandleMemory0 = new TpmKeyHandleMemory(tpmPrivateKey0);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Blob blob0 = tpmKeyHandleMemory0.sign(digestAlgorithm0, byteBuffer0);
      assertTrue(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TpmPrivateKey tpmPrivateKey0 = new TpmPrivateKey();
      TpmKeyHandleMemory tpmKeyHandleMemory0 = new TpmKeyHandleMemory(tpmPrivateKey0);
      try { 
        tpmKeyHandleMemory0.decrypt((ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error in TpmPrivateKey.decrypt: org.evosuite.runtime.mock.java.lang.MockThrowable: decrypt: The private key is not loaded
         //
         verifyException("net.named_data.jndn.security.tpm.TpmKeyHandleMemory", e);
      }
  }
}
