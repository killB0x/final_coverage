/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 23:54:50 GMT 2022
 */

package net.named_data.jndn.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import net.named_data.jndn.Data;
import net.named_data.jndn.GenericSignature;
import net.named_data.jndn.Interest;
import net.named_data.jndn.Name;
import net.named_data.jndn.Sha256WithEcdsaSignature;
import net.named_data.jndn.encoding.WireFormat;
import net.named_data.jndn.encrypt.EncryptedContent;
import net.named_data.jndn.lp.LpPacket;
import net.named_data.jndn.security.DigestAlgorithm;
import net.named_data.jndn.security.VerificationHelpers;
import net.named_data.jndn.security.certificate.PublicKey;
import net.named_data.jndn.security.v2.CertificateV2;
import net.named_data.jndn.util.Blob;
import net.named_data.jndn.util.SignedBlob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationHelpers_ESTest extends VerificationHelpers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Blob blob0 = lpPacket0.getFragmentWireEncoding();
      GenericSignature genericSignature0 = new GenericSignature();
      Blob blob1 = genericSignature0.getSignature();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDigest(blob1, blob0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Blob blob0 = lpPacket0.getFragmentWireEncoding();
      Blob blob1 = Name.fromHex("", (-2666), (-2666));
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob1, blob0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      Blob blob0 = genericSignature0.getSignatureInfoEncoding();
      Interest interest0 = new Interest("verifyDigest: Invalid digest algorithm");
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      Blob blob1 = wireFormat0.encodeInterest(interest0);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifySignature(blob0, blob0, blob1, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      Blob blob0 = genericSignature0.getSignatureInfoEncoding();
      Interest interest0 = new Interest("verifyDigest: Invalid digest algorithm");
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      Blob blob1 = wireFormat0.encodeInterest(interest0);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifySignature(blob1, blob0, blob1, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Blob blob0 = new Blob();
      Data data0 = new Data();
      SignedBlob signedBlob0 = data0.wireEncode();
      boolean boolean0 = VerificationHelpers.verifySignature((ByteBuffer) null, blob0, (Blob) signedBlob0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LpPacket lpPacket0 = new LpPacket();
      Blob blob0 = lpPacket0.getFragmentWireEncoding();
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      Blob blob1 = sha256WithEcdsaSignature0.getSignature();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, blob1, blob0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      Blob blob0 = genericSignature0.getSignatureInfoEncoding();
      PublicKey publicKey0 = new PublicKey();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, (Blob) null, publicKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Blob blob0 = new Blob();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      PublicKey publicKey0 = new PublicKey();
      Interest interest0 = new Interest((Name) null, 707.08);
      SignedBlob signedBlob0 = interest0.getDefaultWireEncoding();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, (Blob) signedBlob0, publicKey0, digestAlgorithm0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      Interest interest0 = new Interest("dnGwcZ/|#$Z P k\"");
      boolean boolean0 = VerificationHelpers.verifyInterestDigest(interest0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Blob blob0 = new Blob(byteArray0);
      boolean boolean0 = VerificationHelpers.verifySignature(blob0, blob0, blob0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      Blob blob0 = new Blob("S");
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifySignature(byteBuffer0, (byte[]) null, blob0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      Interest interest0 = new Interest(name0, 1.7976931348623157E308);
      int[] intArray0 = new int[9];
      Blob blob0 = wireFormat0.encodeInterest(interest0, intArray0, intArray0);
      boolean boolean0 = VerificationHelpers.verifySignature(byteBuffer0, byteArray0, blob0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Interest interest0 = new Interest("{cxXp:]}-7");
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      int[] intArray0 = new int[6];
      Blob blob0 = wireFormat0.encodeInterest(interest0, intArray0, intArray0);
      boolean boolean0 = VerificationHelpers.verifySignature(byteBuffer0, blob0, blob0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      byte[] byteArray0 = new byte[9];
      Interest interest0 = new Interest("");
      Blob blob0 = new Blob(byteArray0, false);
      WireFormat wireFormat0 = new WireFormat();
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, blob0, digestAlgorithm0, wireFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Name name0 = new Name();
      Interest interest0 = new Interest(name0, 462.384967);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      CertificateV2 certificateV2_0 = new CertificateV2();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      SignedBlob signedBlob0 = certificateV2_0.wireEncode(wireFormat0);
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, (Blob) signedBlob0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Interest interest0 = new Interest();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      CertificateV2 certificateV2_0 = new CertificateV2();
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, certificateV2_0, digestAlgorithm0, wireFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      Interest interest0 = new Interest((Name) null);
      CertificateV2 certificateV2_0 = new CertificateV2();
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, certificateV2_0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Interest interest0 = new Interest();
      CertificateV2 certificateV2_0 = new CertificateV2();
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, certificateV2_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PublicKey publicKey0 = new PublicKey();
      Interest interest0 = new Interest();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, publicKey0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1695);
      byte[] byteArray0 = new byte[7];
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifyDigest(byteBuffer0, byteArray0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(103);
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      Blob blob0 = sha256WithEcdsaSignature0.getSignature();
      boolean boolean0 = VerificationHelpers.verifyDigest(byteBuffer0, blob0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Interest interest0 = new Interest();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      CertificateV2 certificateV2_0 = new CertificateV2();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      Blob blob0 = wireFormat0.encodeInterest(interest0);
      boolean boolean0 = VerificationHelpers.verifyDataSignature((Data) certificateV2_0, blob0, digestAlgorithm0, wireFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      Data data0 = new Data(name0);
      EncryptedContent encryptedContent0 = new EncryptedContent();
      Blob blob0 = wireFormat0.encodeEncryptedContentV2(encryptedContent0);
      boolean boolean0 = VerificationHelpers.verifyDataSignature(data0, blob0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      CertificateV2 certificateV2_0 = new CertificateV2();
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      boolean boolean0 = VerificationHelpers.verifyDataSignature((Data) certificateV2_0, certificateV2_0, digestAlgorithm0, wireFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Name name0 = new Name();
      Data data0 = new Data(name0);
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifyDataDigest(data0, digestAlgorithm0, wireFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Blob blob0 = new Blob();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, blob0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte)31;
      Blob blob0 = new Blob(byteArray0, true);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, blob0, digestAlgorithm0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (33 > 9)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Blob blob0 = new Blob();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)6;
      Blob blob1 = new Blob(byteArray0);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, blob1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      Blob blob0 = new Blob(intArray0);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, blob0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (3 > 2)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Blob blob0 = new Blob();
      PublicKey publicKey0 = new PublicKey();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, publicKey0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)1;
      Blob blob0 = new Blob(byteArray1);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, byteArray0, blob0, digestAlgorithm0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature((ByteBuffer) null, byteArray0, (PublicKey) null, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      PublicKey publicKey0 = new PublicKey();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, byteArray0, publicKey0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      Blob blob0 = new Blob(byteBuffer0, false);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, blob0, blob0, digestAlgorithm0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      Blob blob0 = new Blob(byteBuffer0, false);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, blob0, blob0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Blob blob0 = new Blob();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature((ByteBuffer) null, blob0, blob0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(40);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      Blob blob0 = new Blob(byteArray0, false);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, blob0, blob0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte)2;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Blob blob0 = new Blob(byteArray0, true);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, blob0, blob0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (4 > 2)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(101);
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, (Blob) null, publicKey0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Blob blob0 = new Blob(byteArray0);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, blob0, (PublicKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Interest interest0 = new Interest();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)79;
      Blob blob0 = new Blob(byteArray0);
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, blob0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (83 > 9)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Interest interest0 = new Interest();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, (Blob) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.certificate.PublicKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Interest interest0 = new Interest();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      Blob blob0 = new Blob(byteArray0, true);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, blob0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Interest interest0 = new Interest();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)50;
      Blob blob0 = new Blob(byteArray0, false);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, blob0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (52 > 2)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature((Interest) null, publicKey0, digestAlgorithm0, (WireFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Interest interest0 = new Interest("6!{uR/+1fT2XeJV");
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestDigest(interest0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeSignatureInfoAndValue is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestDigest((Interest) null, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestDigest((Interest) null, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(122);
      Blob blob0 = new Blob(byteBuffer0, false);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDigest(blob0, blob0, digestAlgorithm0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Blob blob0 = new Blob();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDigest(blob0, blob0, (DigestAlgorithm) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifyDigest: Invalid digest algorithm
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      Blob blob0 = new Blob(byteBuffer0, false);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDigest(byteBuffer0, blob0, digestAlgorithm0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      Blob blob0 = new Blob(intArray0);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) certificateV2_0, blob0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Data data0 = new Data();
      int[] intArray0 = new int[4];
      intArray0[0] = 425;
      intArray0[1] = (-701);
      Blob blob0 = new Blob(intArray0);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, blob0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (69 > 4)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Blob blob0 = new Blob();
      Data data0 = new Data();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, blob0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-94);
      Blob blob0 = new Blob(byteArray0);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) certificateV2_0, blob0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Data data0 = new Data();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 6;
      Blob blob0 = new Blob(intArray0);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, blob0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (8 > 2)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Data data0 = new Data();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, (CertificateV2) null, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) null, (CertificateV2) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) certificateV2_0, publicKey0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // encodeData is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Data data0 = new Data();
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, publicKey0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) null, (PublicKey) null, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PublicKey publicKey0 = new PublicKey();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) certificateV2_0, publicKey0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Data data0 = new Data();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataDigest(data0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // encodeData is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      Name name0 = new Name(arrayList0);
      Data data0 = new Data(name0);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataDigest(data0, digestAlgorithm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Object is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @4dfb5266)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Interest interest0 = new Interest("{xXp:]}-7");
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      boolean boolean0 = VerificationHelpers.verifyInterestDigest(interest0, digestAlgorithm0, wireFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDigest((ByteBuffer) null, byteArray0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Interest interest0 = new Interest("{xXp:]}-7");
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, (PublicKey) null, digestAlgorithm0, wireFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature((ByteBuffer) null, (byte[]) null, publicKey0, digestAlgorithm0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Interest interest0 = new Interest("nej]4L");
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, (CertificateV2) null, digestAlgorithm0, (WireFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      Blob blob0 = genericSignature0.getSignatureInfoEncoding();
      byte[] byteArray0 = new byte[0];
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature((ByteBuffer) null, byteArray0, blob0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) null, publicKey0, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Blob blob0 = new Blob();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDigest((ByteBuffer) null, blob0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Interest interest0 = new Interest();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = WireFormat.getDefaultWireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, (Blob) null, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.certificate.PublicKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) certificateV2_0, (Blob) null, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.certificate.PublicKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Data data0 = new Data();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, (CertificateV2) null, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataDigest((Data) null, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Interest interest0 = new Interest("RSA/ECB/PKCS1Padding");
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, (PublicKey) null, digestAlgorithm0, wireFormat0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // decodeSignatureInfoAndValue is not implemented
         //
         verifyException("net.named_data.jndn.encoding.WireFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDigest((ByteBuffer) null, byteArray0, (DigestAlgorithm) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifyDigest: Invalid digest algorithm
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Interest interest0 = new Interest();
      PublicKey publicKey0 = new PublicKey();
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, publicKey0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Blob blob0 = new Blob();
      Interest interest0 = new Interest();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, blob0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifyDataDigest((Data) certificateV2_0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Blob blob0 = new Blob();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2041);
      PublicKey publicKey0 = new PublicKey();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, blob0, publicKey0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PublicKey publicKey0 = new PublicKey();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature((Interest) null, publicKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Data data0 = new Data();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, (PublicKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      boolean boolean0 = VerificationHelpers.verifyDataSignature((Data) certificateV2_0, certificateV2_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature((ByteBuffer) null, byteArray0, (Blob) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.certificate.PublicKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Blob blob0 = new Blob();
      Data data0 = new Data();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature(data0, blob0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      int[] intArray0 = new int[1];
      Blob blob0 = new Blob(intArray0);
      boolean boolean0 = VerificationHelpers.verifyDigest(blob0, blob0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Interest interest0 = new Interest();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, (CertificateV2) null, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataSignature((Data) certificateV2_0, publicKey0, digestAlgorithm0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Blob blob0 = new Blob();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, (PublicKey) null, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      boolean boolean0 = VerificationHelpers.verifyDataSignature((Data) certificateV2_0, certificateV2_0, digestAlgorithm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      Blob blob0 = new Blob(byteBuffer0, false);
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, blob0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      byte[] byteArray0 = new byte[1];
      Blob blob0 = new Blob(byteArray0);
      boolean boolean0 = VerificationHelpers.verifyDataSignature((Data) certificateV2_0, blob0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Interest interest0 = new Interest();
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature(interest0, (CertificateV2) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1303);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(byteBuffer0, byteArray0, (PublicKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      VerificationHelpers verificationHelpers0 = new VerificationHelpers();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Interest interest0 = new Interest();
      byte[] byteArray0 = new byte[1];
      Blob blob0 = new Blob(byteArray0, true);
      boolean boolean0 = VerificationHelpers.verifyInterestSignature(interest0, blob0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyInterestSignature((Interest) null, publicKey0, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Blob blob0 = new Blob();
      PublicKey publicKey0 = new PublicKey();
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature((ByteBuffer) null, blob0, publicKey0, digestAlgorithm0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // verifySignature: Invalid key type
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifyDataDigest((Data) null, digestAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.VerificationHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(7);
      Blob blob0 = new Blob(byteBuffer0, false);
      DigestAlgorithm digestAlgorithm0 = DigestAlgorithm.SHA256;
      // Undeclared exception!
      try { 
        VerificationHelpers.verifySignature(blob0, blob0, blob0, digestAlgorithm0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }
}
