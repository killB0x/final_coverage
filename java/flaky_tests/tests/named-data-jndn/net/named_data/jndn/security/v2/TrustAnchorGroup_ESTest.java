/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:51:25 GMT 2022
 */

package net.named_data.jndn.security.v2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.security.v2.CertificateContainerInterface;
import net.named_data.jndn.security.v2.CertificateV2;
import net.named_data.jndn.security.v2.TrustAnchorGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TrustAnchorGroup_ESTest extends TrustAnchorGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Commln.establishBase64Converter: Cannot load a Base64 converter");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.named_data.jndn.security.v2.TrustAnchorGroup");
      FileSystemHandling.shouldAllThrowIOExceptions();
      CertificateV2 certificateV2_0 = TrustAnchorGroup.readCertificate("Commln.establishBase64Converter: Cannot load a Base64 converter");
      assertNull(certificateV2_0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CertificateV2 certificateV2_0 = TrustAnchorGroup.readCertificate("+Z>%K;OGALy3$*Qr ");
      assertNull(certificateV2_0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CertificateContainerInterface certificateContainerInterface0 = mock(CertificateContainerInterface.class, new ViolatedAssumptionAnswer());
      TrustAnchorGroup trustAnchorGroup0 = new TrustAnchorGroup(certificateContainerInterface0, " ?^:");
      String string0 = trustAnchorGroup0.getId();
      assertEquals(" ?^:", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CertificateContainerInterface certificateContainerInterface0 = mock(CertificateContainerInterface.class, new ViolatedAssumptionAnswer());
      TrustAnchorGroup trustAnchorGroup0 = new TrustAnchorGroup(certificateContainerInterface0, "");
      String string0 = trustAnchorGroup0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Commln.establishBase64Converter: Cannot load a Base64 converter");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-38);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        TrustAnchorGroup.readCertificate("Commln.establishBase64Converter: Cannot load a Base64 converter");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // base64Decode: Error invoking method: java.lang.reflect.InvocationTargetException
         //
         verifyException("net.named_data.jndn.util.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        TrustAnchorGroup.readCertificate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Commln.establishBase64Converter: Cannot load a Base64 converter");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.nam^d_data.jnd+.security.v2.TrustAnchoGroup");
      CertificateV2 certificateV2_0 = TrustAnchorGroup.readCertificate("Commln.establishBase64Converter: Cannot load a Base64 converter");
      assertNull(certificateV2_0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CertificateContainerInterface certificateContainerInterface0 = mock(CertificateContainerInterface.class, new ViolatedAssumptionAnswer());
      TrustAnchorGroup trustAnchorGroup0 = new TrustAnchorGroup(certificateContainerInterface0, "wt=~{%ID1|");
      trustAnchorGroup0.refresh();
      assertEquals("wt=~{%ID1|", trustAnchorGroup0.getId());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CertificateContainerInterface certificateContainerInterface0 = mock(CertificateContainerInterface.class, new ViolatedAssumptionAnswer());
      TrustAnchorGroup trustAnchorGroup0 = new TrustAnchorGroup(certificateContainerInterface0, "");
      int int0 = trustAnchorGroup0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CertificateContainerInterface certificateContainerInterface0 = mock(CertificateContainerInterface.class, new ViolatedAssumptionAnswer());
      TrustAnchorGroup trustAnchorGroup0 = new TrustAnchorGroup(certificateContainerInterface0, (String) null);
      String string0 = trustAnchorGroup0.getId();
      assertNull(string0);
  }
}
