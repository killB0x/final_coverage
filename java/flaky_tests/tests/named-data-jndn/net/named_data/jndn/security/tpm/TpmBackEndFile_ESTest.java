/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 23:42:53 GMT 2022
 */

package net.named_data.jndn.security.tpm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import net.named_data.jndn.HmacWithSha256Signature;
import net.named_data.jndn.KeyLocator;
import net.named_data.jndn.Name;
import net.named_data.jndn.Sha256WithRsaSignature;
import net.named_data.jndn.security.KeyParams;
import net.named_data.jndn.security.KeyType;
import net.named_data.jndn.security.tpm.TpmBackEndFile;
import net.named_data.jndn.security.tpm.TpmKeyHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TpmBackEndFile_ESTest extends TpmBackEndFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile("PBKDF2WithHmacSHA1");
      Name name0 = new Name("*zx\"k$SR");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      try { 
        tpmBackEndFile0.doImportKey(name0, byteBuffer0, (ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot import private key: org.evosuite.runtime.mock.java.lang.MockThrowable: Cannot decode the PKCS #8 private key: org.evosuite.runtime.mock.java.lang.MockThrowable: DerNode.parse: The input length is too small
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      KeyLocator keyLocator0 = KeyLocator.getFromSignature(sha256WithRsaSignature0);
      Name name0 = keyLocator0.getKeyName();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBuffer byteBuffer1 = ByteBuffer.allocate(1564);
      try { 
        tpmBackEndFile0.doImportKey(name0, byteBuffer0, byteBuffer1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot import private key: org.evosuite.runtime.mock.java.lang.MockThrowable: Cannot decode the PKCS #8 EncryptedPrivateKeyInfo: org.evosuite.runtime.mock.java.lang.MockThrowable: Unimplemented DER type 0
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "]ip(leOiw");
      Name name0 = new Name();
      TpmKeyHandle tpmKeyHandle0 = tpmBackEndFile0.getKeyHandle(name0);
      assertNull(tpmKeyHandle0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "]ip(leOiw");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      TpmKeyHandle tpmKeyHandle0 = tpmBackEndFile0.getKeyHandle(name0);
      assertNull(tpmKeyHandle0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      TpmKeyHandle tpmKeyHandle0 = tpmBackEndFile0.doGetKeyHandle(name0);
      assertNull(tpmKeyHandle0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = TpmBackEndFile.getDefaultDirecoryPath("net.named_data.jndn.security.tpm.TpmBackEnd");
      assertEquals("/home/user/net.named_data.jndn.security.tpm.TpmBackEnd/.ndn/ndnsec-key-file", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      Name name0 = new Name();
      try { 
        tpmBackEndFile0.loadKey(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading private key file: java.io.FileNotFoundException
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "&ndn.ChildSelector=");
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndFile0.loadKey(name0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // base64Decode: Error invoking method: java.lang.reflect.InvocationTargetException
         //
         verifyException("net.named_data.jndn.util.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.loadKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(29);
      arrayList0.add(integer0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndFile0.loadKey(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Integer is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @24cbb343)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        TpmBackEndFile.getDefaultDirecoryPath((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doHasKey(name0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // base64Decode: Error invoking method: java.lang.reflect.InvocationTargetException
         //
         verifyException("net.named_data.jndn.util.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doHasKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "E 0Id>Z(!R");
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doHasKey(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (68 > 3)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Integer integer0 = new Integer((-1968526675));
      arrayList0.add((Object) integer0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doHasKey(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Integer is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @24cbb343)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-121);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doGetKeyHandle(name0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // base64Decode: Error invoking method: java.lang.reflect.InvocationTargetException
         //
         verifyException("net.named_data.jndn.util.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doGetKeyHandle((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-2283));
      arrayList0.add(integer0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doGetKeyHandle(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Integer is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @24cbb343)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      Name name0 = new Name();
      try { 
        tpmBackEndFile0.doExportKey(name0, (ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot export private key: org.evosuite.runtime.mock.java.lang.MockThrowable: Error reading private key file: java.io.FileNotFoundException
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doExportKey((Name) null, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "tC?9#U#iMU'T[&53W");
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1451);
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doExportKey(name0, byteBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (49 > 6)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) tpmBackEndFile0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doExportKey(name0, (ByteBuffer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.tpm.TpmBackEndFile cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.tpm.TpmBackEndFile and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @24cbb343)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doDeleteKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmBackEndFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-2283));
      arrayList0.add(integer0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doDeleteKey(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Integer is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @24cbb343)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      Name name0 = new Name();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doCreateKey(name0, (KeyParams) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmPrivateKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      Name name0 = new Name();
      KeyParams keyParams0 = mock(KeyParams.class, new ViolatedAssumptionAnswer());
      doReturn((KeyType) null, (KeyType) null, (KeyType) null).when(keyParams0).getKeyType();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doCreateKey(name0, keyParams0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot generate a key pair of type null
         //
         verifyException("net.named_data.jndn.security.tpm.TpmPrivateKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Error reading private key file: ");
      String string0 = TpmBackEndFile.getDefaultDirecoryPath((File) mockFile0);
      assertEquals("/home/user/Error reading private key file: /.ndn/ndnsec-key-file", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        TpmBackEndFile.getDefaultDirecoryPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doImportKey(name0, (ByteBuffer) null, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.encoding.der.DerNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      TpmKeyHandle tpmKeyHandle0 = tpmBackEndFile0.doGetKeyHandle(name0);
      assertNull(tpmKeyHandle0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ndn/ndnsec-key-file/0a6361b3a802f55cd5ae06101c88a1e216320fe11cc0cfe1d791eed08a1200fd.privkey");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "tC?9'#pUViMU'T[&53W");
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doGetKeyHandle(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (49 > 9)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile("");
      assertEquals("tpm-file", tpmBackEndFile0.getScheme());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile((String) null);
      assertTrue(tpmBackEndFile0.isTerminalMode());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TpmBackEndFile.Error tpmBackEndFile_Error0 = new TpmBackEndFile.Error((String) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Name name0 = new Name();
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      tpmBackEndFile0.doDeleteKey(name0);
      assertEquals("tpm-file", tpmBackEndFile0.getScheme());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = TpmBackEndFile.getScheme();
      assertEquals("tpm-file", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile("Fez!>=muFT^6RM~bz");
      HmacWithSha256Signature hmacWithSha256Signature0 = new HmacWithSha256Signature();
      KeyLocator keyLocator0 = hmacWithSha256Signature0.getKeyLocator();
      Name name0 = keyLocator0.getKeyName();
      boolean boolean0 = tpmBackEndFile0.doHasKey(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TpmBackEndFile tpmBackEndFile0 = new TpmBackEndFile();
      Name name0 = new Name();
      KeyType keyType0 = KeyType.RSA;
      KeyParams keyParams0 = mock(KeyParams.class, new ViolatedAssumptionAnswer());
      doReturn(keyType0).when(keyParams0).getKeyType();
      // Undeclared exception!
      try { 
        tpmBackEndFile0.doCreateKey(name0, keyParams0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.KeyParams$MockitoMock$130922854 cannot be cast to class net.named_data.jndn.security.RsaKeyParams (net.named_data.jndn.security.KeyParams$MockitoMock$130922854 and net.named_data.jndn.security.RsaKeyParams are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @24cbb343)
         //
         verifyException("net.named_data.jndn.security.tpm.TpmPrivateKey", e);
      }
  }
}
