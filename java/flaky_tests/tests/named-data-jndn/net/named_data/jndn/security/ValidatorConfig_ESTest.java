/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:20:44 GMT 2022
 */

package net.named_data.jndn.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import net.named_data.jndn.Face;
import net.named_data.jndn.security.ValidatorConfig;
import net.named_data.jndn.security.v2.CertificateFetcher;
import net.named_data.jndn.security.v2.CertificateFetcherOffline;
import net.named_data.jndn.util.BoostInfoTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidatorConfig_ESTest extends ValidatorConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Face face0 = new Face();
      ValidatorConfig validatorConfig0 = new ValidatorConfig(face0);
      try { 
        validatorConfig0.load("&Ht;67fb\"LF#mD", "QXhc&p5u-38A^rI");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ValidationPolicyConfig: Expected one validator section
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CertificateFetcherOffline certificateFetcherOffline0 = new CertificateFetcherOffline();
      ValidatorConfig validatorConfig0 = new ValidatorConfig(certificateFetcherOffline0);
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      try { 
        validatorConfig0.load(boostInfoTree0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ValidationPolicyConfig: Expected one validator section
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValidatorConfig validatorConfig0 = new ValidatorConfig((Face) null);
      // Undeclared exception!
      try { 
        validatorConfig0.load((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValidatorConfig validatorConfig0 = null;
      try {
        validatorConfig0 = new ValidatorConfig((CertificateFetcher) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The certificateFetcher is null
         //
         verifyException("net.named_data.jndn.security.v2.Validator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValidatorConfig validatorConfig0 = new ValidatorConfig((Face) null);
      // Undeclared exception!
      try { 
        validatorConfig0.load((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValidatorConfig validatorConfig0 = new ValidatorConfig((Face) null);
      try { 
        validatorConfig0.load("}LGZ6~RXw5}%o_T");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CertificateFetcherOffline certificateFetcherOffline0 = new CertificateFetcherOffline();
      ValidatorConfig validatorConfig0 = new ValidatorConfig(certificateFetcherOffline0);
      // Undeclared exception!
      try { 
        validatorConfig0.load((BoostInfoTree) null, "&Y1D");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }
}
