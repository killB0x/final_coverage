/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:21:27 GMT 2022
 */

package net.named_data.jndn.security.pib;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.HashSet;
import net.named_data.jndn.Data;
import net.named_data.jndn.Name;
import net.named_data.jndn.security.pib.PibMemory;
import net.named_data.jndn.security.v2.CertificateV2;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PibMemory_ESTest extends PibMemory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      try { 
        pibMemory0.setDefaultCertificateOfKey((Name) null, name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Certificate `/` does not exist
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(24);
      Name name0 = new Name();
      pibMemory0.addKey(name0, name0, byteBuffer0);
      Name name1 = new Name();
      pibMemory0.setDefaultKeyOfIdentity(name1, name0);
      assertNotSame(name1, name0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name("'-N[P0:bjDCU`@ZAMI");
      Name name1 = new Name("HUxv,osi[Y`8");
      try { 
        pibMemory0.setDefaultKeyOfIdentity(name1, name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Key `/bjDCU%60%40ZAMI` not found
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Name name0 = new Name();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addKey(name0, name0, byteBuffer0);
      boolean boolean0 = pibMemory0.hasKey(name0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.setTpmLocator("TqY~M4e ]X=C>d\"*");
      String string0 = pibMemory0.getTpmLocator();
      assertEquals("TqY~M4e ]X=C>d\"*", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      Name name0 = new Name();
      pibMemory0.addKey(name0, name0, byteBuffer0);
      Blob blob0 = pibMemory0.getKeyBits(name0);
      assertFalse(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PibMemory pibMemory0 = new PibMemory();
      Name.Component[] name_ComponentArray0 = new Name.Component[3];
      name_ComponentArray0[0] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[1] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[2] = certificateV2_0.KEY_COMPONENT;
      Name name0 = new Name(name_ComponentArray0);
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      Name name1 = pibMemory0.getDefaultKeyOfIdentity(name0);
      assertEquals(3, name1.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name("pbrinse64Binary");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(798);
      pibMemory0.addKey(name0, name0, byteBuffer0);
      Name name1 = pibMemory0.getDefaultIdentity();
      assertEquals(1, name1.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultIdentity((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) pibMemory0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultIdentity(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.pib.PibMemory cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.pib.PibMemory and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Data> arrayList0 = new ArrayList<Data>();
      CertificateV2 certificateV2_0 = new CertificateV2();
      arrayList0.add((Data) certificateV2_0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultCertificateOfKey(name0, name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.v2.CertificateV2 cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.v2.CertificateV2 and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.removeKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.removeKey(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) pibMemory0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.removeKey(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.pib.PibMemory cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.pib.PibMemory and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name.Component[] name_ComponentArray0 = new Name.Component[5];
      Name name0 = new Name(name_ComponentArray0);
      // Undeclared exception!
      try { 
        pibMemory0.removeIdentity(name0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      // Undeclared exception!
      try { 
        pibMemory0.removeIdentity(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) pibMemory0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.removeIdentity(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.pib.PibMemory cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.pib.PibMemory and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.removeCertificate((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.CertificateV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      // Undeclared exception!
      try { 
        pibMemory0.removeCertificate(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Certificate name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.v2.CertificateV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Data> arrayList0 = new ArrayList<Data>();
      CertificateV2 certificateV2_0 = new CertificateV2();
      arrayList0.add((Data) certificateV2_0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.removeCertificate(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.v2.CertificateV2 cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.v2.CertificateV2 and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Name.Component[] name_ComponentArray0 = new Name.Component[4];
      Name name0 = new Name(name_ComponentArray0);
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.hasCertificate(name0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getKeyBits((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.getKeyBits(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Object is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getDefaultKeyOfIdentity((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      try { 
        pibMemory0.getDefaultCertificateOfKey(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No default certificate for key `/`
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) pibMemory0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.getDefaultCertificateOfKey(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.pib.PibMemory cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.pib.PibMemory and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getCertificate((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) certificateV2_0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.getCertificate(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.v2.CertificateV2 cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.v2.CertificateV2 and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.addKey((Name) null, (Name) null, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Data> arrayList0 = new ArrayList<Data>();
      arrayList0.add((Data) certificateV2_0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.addKey(name0, name0, (ByteBuffer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.v2.CertificateV2 cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.v2.CertificateV2 and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.addIdentity((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) pibMemory0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.addIdentity(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.named_data.jndn.security.pib.PibMemory cannot be cast to class net.named_data.jndn.Name$Component (net.named_data.jndn.security.pib.PibMemory and net.named_data.jndn.Name$Component are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      CertificateV2 certificateV2_0 = new CertificateV2();
      try { 
        pibMemory0.addCertificate(certificateV2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The Data Name does not follow the certificate naming convention
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.addCertificate((CertificateV2) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      HashSet<Name> hashSet0 = pibMemory0.getCertificatesOfKey(name0);
      assertFalse(hashSet0.contains(name0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PibMemory pibMemory0 = new PibMemory();
      Name.Component[] name_ComponentArray0 = new Name.Component[3];
      name_ComponentArray0[0] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[1] = name_ComponentArray0[0];
      name_ComponentArray0[2] = name_ComponentArray0[1];
      Name name0 = new Name(name_ComponentArray0);
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      HashSet<Name> hashSet0 = pibMemory0.getKeysOfIdentity(name0);
      assertFalse(hashSet0.contains(name0));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      // Undeclared exception!
      try { 
        pibMemory0.getKeysOfIdentity(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      pibMemory0.addKey(name0, name0, byteBuffer0);
      pibMemory0.addIdentity(name0);
      assertEquals(0, name0.size());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      pibMemory0.addIdentity(name0);
      boolean boolean0 = pibMemory0.hasIdentity(name0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      boolean boolean0 = pibMemory0.hasCertificate(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      boolean boolean0 = pibMemory0.hasKey(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.getDefaultCertificateOfKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultCertificateOfKey((Name) null, (Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PibMemory pibMemory0 = new PibMemory();
      Name.Component[] name_ComponentArray0 = new Name.Component[7];
      name_ComponentArray0[0] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[1] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[2] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[3] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[4] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[5] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[6] = certificateV2_0.KEY_COMPONENT;
      Name name0 = new Name(name_ComponentArray0);
      pibMemory0.removeCertificate(name0);
      assertEquals(0L, name0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      try { 
        pibMemory0.getDefaultKeyOfIdentity(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No default key for identity `/`
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      Name name1 = pibMemory0.getDefaultKeyOfIdentity(name0);
      assertNotSame(name1, name0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      // Undeclared exception!
      try { 
        pibMemory0.setDefaultKeyOfIdentity((Name) null, (Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      Blob blob0 = pibMemory0.getKeyBits(name0);
      assertTrue(blob0.isNull());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CertificateV2 certificateV2_0 = new CertificateV2();
      PibMemory pibMemory0 = new PibMemory();
      Name.Component[] name_ComponentArray0 = new Name.Component[3];
      name_ComponentArray0[0] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[1] = certificateV2_0.KEY_COMPONENT;
      name_ComponentArray0[2] = name_ComponentArray0[1];
      Name name0 = new Name(name_ComponentArray0);
      pibMemory0.removeKey(name0);
      assertEquals(0L, name0.getChangeCount());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.setDefaultIdentity(name0);
      Name name1 = pibMemory0.getDefaultIdentity();
      assertNotSame(name1, name0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      try { 
        pibMemory0.getDefaultIdentity();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No default identity
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      pibMemory0.setDefaultIdentity(name0);
      HashSet<Name> hashSet0 = pibMemory0.getIdentities();
      assertTrue(hashSet0.contains(name0));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      HashSet<Name> hashSet0 = pibMemory0.getIdentities();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) hashSet0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        pibMemory0.getDefaultKeyOfIdentity(name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.HashSet cannot be cast to class net.named_data.jndn.Name$Component (java.util.HashSet is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a9c203d)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      Name name1 = new Name("eYXE\"NtvEw~");
      pibMemory0.setDefaultIdentity(name1);
      pibMemory0.removeIdentity(name0);
      assertNotSame(name0, name1);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.removeIdentity(name0);
      assertEquals("", pibMemory0.getTpmLocator());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      assertEquals(0, name0.size());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.setTpmLocator((String) null);
      String string0 = pibMemory0.getTpmLocator();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = PibMemory.getScheme();
      assertEquals("pib-memory", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.clearIdentities();
      assertEquals("pib-memory", pibMemory0.getScheme());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      try { 
        pibMemory0.getKeyBits(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Key `/` not found
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      Name name0 = new Name();
      boolean boolean0 = pibMemory0.hasIdentity(name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      try { 
        pibMemory0.getCertificate(name0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Certificate `/` does not exist
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      String string0 = pibMemory0.getTpmLocator();
      assertEquals("", string0);
  }
}
