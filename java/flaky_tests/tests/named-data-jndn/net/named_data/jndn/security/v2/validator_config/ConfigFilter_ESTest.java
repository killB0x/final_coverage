/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 23:46:42 GMT 2022
 */

package net.named_data.jndn.security.v2.validator_config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import net.named_data.jndn.ComponentType;
import net.named_data.jndn.Name;
import net.named_data.jndn.security.v2.validator_config.ConfigFilter;
import net.named_data.jndn.security.v2.validator_config.ConfigNameRelation;
import net.named_data.jndn.security.v2.validator_config.ConfigRelationNameFilter;
import net.named_data.jndn.util.BoostInfoTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigFilter_ESTest extends ConfigFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree("name", "name");
      BoostInfoTree boostInfoTree1 = new BoostInfoTree();
      boostInfoTree0.addSubtree("relation", boostInfoTree1);
      boostInfoTree0.createSubtree("type", "name");
      try { 
        ConfigFilter.create(boostInfoTree0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported relation: 
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigNameRelation", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Name name0 = new Name();
      name0.set(":7H8ny$");
      ComponentType componentType0 = ComponentType.IMPLICIT_SHA256_DIGEST;
      name0.append("yFw^o", componentType0, 1);
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.EQUAL;
      ConfigRelationNameFilter configRelationNameFilter0 = new ConfigRelationNameFilter(name0, configNameRelation_Relation0);
      Name name1 = name0.append("base64Decode: Error invoking method: ", componentType0, (-65876891));
      boolean boolean0 = configRelationNameFilter0.match(true, name1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Name name0 = new Name();
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_PREFIX_OF;
      ConfigRelationNameFilter configRelationNameFilter0 = new ConfigRelationNameFilter(name0, configNameRelation_Relation0);
      // Undeclared exception!
      try { 
        configRelationNameFilter0.match(false, (Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      Name name0 = new Name(arrayList0);
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.EQUAL;
      ConfigRelationNameFilter configRelationNameFilter0 = new ConfigRelationNameFilter(name0, configNameRelation_Relation0);
      // Undeclared exception!
      try { 
        configRelationNameFilter0.match(false, name0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Object is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3422f5c0)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConfigFilter.create((BoostInfoTree) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree("type", "name");
      try { 
        ConfigFilter.create(boostInfoTree0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Wrong filter(name) properties
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree("name");
      boostInfoTree0.createSubtree("type", "name");
      try { 
        ConfigFilter.create(boostInfoTree0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected <filter.relation>
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree("type", "Unsupported filter.type: ");
      try { 
        ConfigFilter.create(boostInfoTree0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported filter.type: Unsupported filter.type: 
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      try { 
        ConfigFilter.create(boostInfoTree0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected <filter.type>
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Name name0 = new Name();
      name0.set(":7H8ny$");
      ComponentType componentType0 = ComponentType.IMPLICIT_SHA256_DIGEST;
      Name name1 = name0.append("yFw^o", componentType0, 1);
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.EQUAL;
      ConfigRelationNameFilter configRelationNameFilter0 = new ConfigRelationNameFilter(name0, configNameRelation_Relation0);
      boolean boolean0 = configRelationNameFilter0.match(true, name1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Name name0 = new Name();
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.EQUAL;
      ConfigRelationNameFilter configRelationNameFilter0 = new ConfigRelationNameFilter(name0, configNameRelation_Relation0);
      boolean boolean0 = configRelationNameFilter0.match(true, name0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Name name0 = new Name(arrayList0);
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.EQUAL;
      ConfigRelationNameFilter configRelationNameFilter0 = new ConfigRelationNameFilter(name0, configNameRelation_Relation0);
      boolean boolean0 = configRelationNameFilter0.match(false, name0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.createSubtree("regex");
      boostInfoTree0.createSubtree("type", "name");
      try { 
        ConfigFilter.create(boostInfoTree0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Wrong filter.regex: 
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigFilter", e);
      }
  }
}
