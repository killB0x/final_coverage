/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:28:44 GMT 2022
 */

package net.named_data.jndn.security.v2.validator_config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import net.named_data.jndn.Interest;
import net.named_data.jndn.Name;
import net.named_data.jndn.security.v2.CertificateV2;
import net.named_data.jndn.security.v2.DataValidationFailureCallback;
import net.named_data.jndn.security.v2.DataValidationState;
import net.named_data.jndn.security.v2.DataValidationSuccessCallback;
import net.named_data.jndn.security.v2.InterestValidationFailureCallback;
import net.named_data.jndn.security.v2.InterestValidationState;
import net.named_data.jndn.security.v2.InterestValidationSuccessCallback;
import net.named_data.jndn.security.v2.ValidationState;
import net.named_data.jndn.security.v2.validator_config.ConfigHyperRelationChecker;
import net.named_data.jndn.security.v2.validator_config.ConfigNameRelation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigHyperRelationChecker_ESTest extends ConfigHyperRelationChecker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_PREFIX_OF;
      ConfigHyperRelationChecker configHyperRelationChecker0 = new ConfigHyperRelationChecker("^", "|7n3+ `^36H`#1jbx", "^", "", configNameRelation_Relation0);
      CertificateV2 certificateV2_0 = new CertificateV2();
      Name name0 = certificateV2_0.getKeyName();
      Interest interest0 = new Interest(name0);
      InterestValidationSuccessCallback interestValidationSuccessCallback0 = mock(InterestValidationSuccessCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationFailureCallback interestValidationFailureCallback0 = mock(InterestValidationFailureCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationState interestValidationState0 = new InterestValidationState(interest0, interestValidationSuccessCallback0, interestValidationFailureCallback0);
      Name name1 = certificateV2_0.getFullName();
      try { 
        configHyperRelationChecker0.checkNames(name1, name0, interestValidationState0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error in regex expand: org.evosuite.runtime.mock.java.lang.MockThrowable: Wrong format of expand string!
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigHyperRelationChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_STRICT_PREFIX_OF;
      ConfigHyperRelationChecker configHyperRelationChecker0 = null;
      try {
        configHyperRelationChecker0 = new ConfigHyperRelationChecker("^", "yfm6}VYU4fvF|_", "", "net.named_data.jndn.Sha256WithRsaSignature", configNameRelation_Relation0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_PREFIX_OF;
      ConfigHyperRelationChecker configHyperRelationChecker0 = new ConfigHyperRelationChecker("^", "^", "^", "^", configNameRelation_Relation0);
      Name name0 = new Name();
      try { 
        configHyperRelationChecker0.checkNames(name0, name0, (ValidationState) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error in regex expand: org.evosuite.runtime.mock.java.lang.MockThrowable: Wrong format of expand string!
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigHyperRelationChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Name name0 = new Name("^");
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_STRICT_PREFIX_OF;
      ConfigHyperRelationChecker configHyperRelationChecker0 = new ConfigHyperRelationChecker("^", "", "^", "", configNameRelation_Relation0);
      CertificateV2 certificateV2_0 = new CertificateV2();
      DataValidationSuccessCallback dataValidationSuccessCallback0 = mock(DataValidationSuccessCallback.class, new ViolatedAssumptionAnswer());
      DataValidationFailureCallback dataValidationFailureCallback0 = mock(DataValidationFailureCallback.class, new ViolatedAssumptionAnswer());
      DataValidationState dataValidationState0 = new DataValidationState(certificateV2_0, dataValidationSuccessCallback0, dataValidationFailureCallback0);
      configHyperRelationChecker0.checkNames(name0, name0, dataValidationState0);
      // Undeclared exception!
      try { 
        configHyperRelationChecker0.checkNames(name0, name0, dataValidationState0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The ValidationState already has an outcome
         //
         verifyException("net.named_data.jndn.security.v2.ValidationState", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.EQUAL;
      ConfigHyperRelationChecker configHyperRelationChecker0 = new ConfigHyperRelationChecker("^", "^", "^", "^", configNameRelation_Relation0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      Name name0 = new Name(arrayList0);
      // Undeclared exception!
      try { 
        configHyperRelationChecker0.checkNames(name0, name0, (ValidationState) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Object is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @486a79be)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_PREFIX_OF;
      ConfigHyperRelationChecker configHyperRelationChecker0 = null;
      try {
        configHyperRelationChecker0 = new ConfigHyperRelationChecker("{Qi+fE#Rj`2;^", "{Qi+fE#Rj`2;^", "{Qi+fE#Rj`2;^", "{Qi+fE#Rj`2;^", configNameRelation_Relation0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Unexpected syntax
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexPatternListMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_STRICT_PREFIX_OF;
      ConfigHyperRelationChecker configHyperRelationChecker0 = null;
      try {
        configHyperRelationChecker0 = new ConfigHyperRelationChecker((String) null, (String) null, (String) null, (String) null, configNameRelation_Relation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.util.regex.NdnRegexTopMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.IS_STRICT_PREFIX_OF;
      ConfigHyperRelationChecker configHyperRelationChecker0 = new ConfigHyperRelationChecker("^", "", "^", "", configNameRelation_Relation0);
      Name name0 = new Name();
      // Undeclared exception!
      try { 
        configHyperRelationChecker0.checkNames(name0, name0, (ValidationState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.validator_config.ConfigHyperRelationChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ConfigNameRelation.Relation configNameRelation_Relation0 = ConfigNameRelation.Relation.EQUAL;
      ConfigHyperRelationChecker configHyperRelationChecker0 = new ConfigHyperRelationChecker("^", "", "^", "", configNameRelation_Relation0);
      Name name0 = new Name();
      boolean boolean0 = configHyperRelationChecker0.checkNames(name0, name0, (ValidationState) null);
      assertTrue(boolean0);
  }
}
