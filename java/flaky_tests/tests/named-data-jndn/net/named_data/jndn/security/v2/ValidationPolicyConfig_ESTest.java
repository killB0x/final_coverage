/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 22:11:01 GMT 2022
 */

package net.named_data.jndn.security.v2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import net.named_data.jndn.Data;
import net.named_data.jndn.Interest;
import net.named_data.jndn.security.v2.CertificateV2;
import net.named_data.jndn.security.v2.DataValidationFailureCallback;
import net.named_data.jndn.security.v2.DataValidationState;
import net.named_data.jndn.security.v2.DataValidationSuccessCallback;
import net.named_data.jndn.security.v2.InterestValidationFailureCallback;
import net.named_data.jndn.security.v2.InterestValidationState;
import net.named_data.jndn.security.v2.InterestValidationSuccessCallback;
import net.named_data.jndn.security.v2.ValidationPolicy;
import net.named_data.jndn.security.v2.ValidationPolicyAcceptAll;
import net.named_data.jndn.security.v2.ValidationPolicyConfig;
import net.named_data.jndn.security.v2.ValidationPolicySimpleHierarchy;
import net.named_data.jndn.security.v2.ValidationState;
import net.named_data.jndn.security.v2.Validator;
import net.named_data.jndn.util.BoostInfoTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidationPolicyConfig_ESTest extends ValidationPolicyConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      try { 
        validationPolicyConfig0.load("Can't find IdentityCertificate file ", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ValidationPolicyConfig: Expected one validator section
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      Validator validator0 = new Validator(validationPolicyConfig0);
      validationPolicyConfig0.load("validator", "validator");
      validationPolicyConfig0.load("validator", "validator");
      assertFalse(validationPolicyConfig0.hasInnerPolicy());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("validator");
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "validator");
      validationPolicyConfig0.load("validator");
      assertFalse(validationPolicyConfig0.hasInnerPolicy());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("}tN[u@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      try { 
        validationPolicyConfig0.load("}tN[u@");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ValidationPolicyConfig: Expected one validator section
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      // Undeclared exception!
      try { 
        validationPolicyConfig0.load((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("?]<Q>uX!=Z'kZAk");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "validator");
      try { 
        validationPolicyConfig0.load("?]<Q>uX!=Z'kZAk");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      // Undeclared exception!
      try { 
        validationPolicyConfig0.checkPolicy((Interest) null, (ValidationState) null, (ValidationPolicy.ValidationContinuation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      Interest interest0 = new Interest();
      InterestValidationSuccessCallback interestValidationSuccessCallback0 = mock(InterestValidationSuccessCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationFailureCallback interestValidationFailureCallback0 = mock(InterestValidationFailureCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationState interestValidationState0 = new InterestValidationState(interest0, interestValidationSuccessCallback0, interestValidationFailureCallback0);
      validationPolicyConfig0.checkPolicy(interest0, (ValidationState) interestValidationState0, (ValidationPolicy.ValidationContinuation) null);
      // Undeclared exception!
      try { 
        validationPolicyConfig0.checkPolicy(interest0, (ValidationState) interestValidationState0, (ValidationPolicy.ValidationContinuation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The ValidationState already has an outcome
         //
         verifyException("net.named_data.jndn.security.v2.ValidationState", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      // Undeclared exception!
      try { 
        validationPolicyConfig0.checkPolicy((Data) null, (ValidationState) null, (ValidationPolicy.ValidationContinuation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      CertificateV2 certificateV2_0 = new CertificateV2();
      DataValidationSuccessCallback dataValidationSuccessCallback0 = mock(DataValidationSuccessCallback.class, new ViolatedAssumptionAnswer());
      DataValidationFailureCallback dataValidationFailureCallback0 = mock(DataValidationFailureCallback.class, new ViolatedAssumptionAnswer());
      DataValidationState dataValidationState0 = new DataValidationState(certificateV2_0, dataValidationSuccessCallback0, dataValidationFailureCallback0);
      dataValidationState0.verifyOriginalPacket_(certificateV2_0);
      // Undeclared exception!
      try { 
        validationPolicyConfig0.checkPolicy((Data) certificateV2_0, (ValidationState) dataValidationState0, (ValidationPolicy.ValidationContinuation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The ValidationState already has an outcome
         //
         verifyException("net.named_data.jndn.security.v2.ValidationState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      BoostInfoTree boostInfoTree0 = new BoostInfoTree();
      boostInfoTree0.addSubtree("validator", boostInfoTree0);
      validationPolicyConfig0.load(boostInfoTree0, "validator");
      assertFalse(validationPolicyConfig0.hasInnerPolicy());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      validationPolicyConfig0.load("validator", "validator");
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("validator");
      // Undeclared exception!
      try { 
        validationPolicyConfig0.load(boostInfoTree0, "X509EncodedKeySpec is not supported for EC: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      ValidationPolicyAcceptAll validationPolicyAcceptAll0 = new ValidationPolicyAcceptAll();
      validationPolicyConfig0.setInnerPolicy(validationPolicyAcceptAll0);
      ValidationPolicy.ValidationContinuation validationPolicy_ValidationContinuation0 = mock(ValidationPolicy.ValidationContinuation.class, new ViolatedAssumptionAnswer());
      try { 
        validationPolicyConfig0.checkPolicy((Interest) null, (ValidationState) null, validationPolicy_ValidationContinuation0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ValidationPolicyConfig must be a terminal inner policy
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      ValidationPolicySimpleHierarchy validationPolicySimpleHierarchy0 = new ValidationPolicySimpleHierarchy();
      validationPolicyConfig0.innerPolicy_ = (ValidationPolicy) validationPolicySimpleHierarchy0;
      Interest interest0 = new Interest("type");
      InterestValidationSuccessCallback interestValidationSuccessCallback0 = mock(InterestValidationSuccessCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationFailureCallback interestValidationFailureCallback0 = mock(InterestValidationFailureCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationState interestValidationState0 = new InterestValidationState(interest0, interestValidationSuccessCallback0, interestValidationFailureCallback0);
      ValidationPolicy.ValidationContinuation validationPolicy_ValidationContinuation0 = mock(ValidationPolicy.ValidationContinuation.class, new ViolatedAssumptionAnswer());
      try { 
        validationPolicyConfig0.checkPolicy((Data) null, (ValidationState) interestValidationState0, validationPolicy_ValidationContinuation0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ValidationPolicyConfig must be a terminal inner policy
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      Interest interest0 = new Interest();
      InterestValidationSuccessCallback interestValidationSuccessCallback0 = mock(InterestValidationSuccessCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationFailureCallback interestValidationFailureCallback0 = mock(InterestValidationFailureCallback.class, new ViolatedAssumptionAnswer());
      InterestValidationState interestValidationState0 = new InterestValidationState(interest0, interestValidationSuccessCallback0, interestValidationFailureCallback0);
      Data data0 = new Data();
      ValidationPolicy.ValidationContinuation validationPolicy_ValidationContinuation0 = mock(ValidationPolicy.ValidationContinuation.class, new ViolatedAssumptionAnswer());
      validationPolicyConfig0.checkPolicy(data0, (ValidationState) interestValidationState0, validationPolicy_ValidationContinuation0);
      assertTrue(interestValidationState0.isOutcomeFailed());
      assertTrue(interestValidationState0.hasOutcome());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      BoostInfoTree boostInfoTree0 = new BoostInfoTree("validator");
      try { 
        validationPolicyConfig0.load(boostInfoTree0, "X509EncodedKeySpec is not supported for EC: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ValidationPolicyConfig: Expected one validator section
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      try { 
        validationPolicyConfig0.load("validator");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidationPolicyConfig validationPolicyConfig0 = new ValidationPolicyConfig();
      validationPolicyConfig0.load("validator", "validator");
      // Undeclared exception!
      try { 
        validationPolicyConfig0.load("validator", "validator");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.v2.ValidationPolicyConfig", e);
      }
  }
}
