/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 23:58:32 GMT 2022
 */

package net.named_data.jndn.security.pib.detail;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import net.named_data.jndn.ComponentType;
import net.named_data.jndn.DigestSha256Signature;
import net.named_data.jndn.Name;
import net.named_data.jndn.security.pib.PibImpl;
import net.named_data.jndn.security.pib.PibKeyContainer;
import net.named_data.jndn.security.pib.PibMemory;
import net.named_data.jndn.security.pib.detail.PibIdentityImpl;
import net.named_data.jndn.util.Blob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PibIdentityImpl_ESTest extends PibIdentityImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      ComponentType componentType0 = ComponentType.IMPLICIT_SHA256_DIGEST;
      Name name1 = name0.append("{bd(qaUdxt-_#7", componentType0);
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      Name name2 = pibIdentityImpl0.getName();
      assertTrue(name2.equals((Object)name1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.setDefaultKey(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.setDefaultKey((ByteBuffer) null, name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.removeKey(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.getKey(name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      DigestSha256Signature digestSha256Signature0 = new DigestSha256Signature();
      Blob blob0 = digestSha256Signature0.getSignature();
      name0.append(blob0);
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.getDefaultKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      pibMemory0.addKey(name0, name0, byteBuffer0);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.getDefaultKey();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.addKey((ByteBuffer) null, name0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = null;
      try {
        pibIdentityImpl0 = new PibIdentityImpl((Name) null, pibMemory0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addKey(name0, name0, (ByteBuffer) null);
      PibIdentityImpl pibIdentityImpl0 = null;
      try {
        pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key name `/` does not follow the naming conventions
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      Name name0 = new Name(arrayList0);
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = null;
      try {
        pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class net.named_data.jndn.Name$Component (java.lang.Object is in module java.base of loader 'bootstrap'; net.named_data.jndn.Name$Component is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1e9e8480)
         //
         verifyException("net.named_data.jndn.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Name name0 = new Name();
      PibIdentityImpl pibIdentityImpl0 = null;
      try {
        pibIdentityImpl0 = new PibIdentityImpl(name0, (PibImpl) null, false);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // The pibImpl is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.addKey((ByteBuffer) null, (Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      try { 
        pibIdentityImpl0.getDefaultKey();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No default key for identity `/`
         //
         verifyException("net.named_data.jndn.security.pib.PibMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.removeKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      pibMemory0.addIdentity(name0);
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, false);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = null;
      try {
        pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, false);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Identity / does not exist
         //
         verifyException("net.named_data.jndn.security.pib.detail.PibIdentityImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      PibKeyContainer pibKeyContainer0 = pibIdentityImpl0.getKeys_();
      assertEquals(0, pibKeyContainer0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.setDefaultKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      Name name1 = pibIdentityImpl0.getName();
      assertNotSame(name1, name0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.setDefaultKey((ByteBuffer) null, (Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Name name0 = new Name();
      PibMemory pibMemory0 = new PibMemory();
      PibIdentityImpl pibIdentityImpl0 = new PibIdentityImpl(name0, pibMemory0, true);
      // Undeclared exception!
      try { 
        pibIdentityImpl0.getKey((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.pib.PibKey", e);
      }
  }
}
