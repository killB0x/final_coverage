/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 00:16:02 GMT 2022
 */

package net.named_data.jndn.security.policy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.named_data.jndn.Data;
import net.named_data.jndn.DigestSha256Signature;
import net.named_data.jndn.GenericSignature;
import net.named_data.jndn.Interest;
import net.named_data.jndn.Name;
import net.named_data.jndn.Sha256WithEcdsaSignature;
import net.named_data.jndn.Sha256WithRsaSignature;
import net.named_data.jndn.encoding.WireFormat;
import net.named_data.jndn.security.OnDataValidationFailed;
import net.named_data.jndn.security.OnInterestValidationFailed;
import net.named_data.jndn.security.OnVerified;
import net.named_data.jndn.security.OnVerifiedInterest;
import net.named_data.jndn.security.SigningInfo;
import net.named_data.jndn.security.ValidationRequest;
import net.named_data.jndn.security.certificate.Certificate;
import net.named_data.jndn.security.identity.IdentityStorage;
import net.named_data.jndn.security.pib.PibMemory;
import net.named_data.jndn.security.policy.CertificateCache;
import net.named_data.jndn.security.policy.ConfigPolicyManager;
import net.named_data.jndn.security.policy.NoVerifyPolicyManager;
import net.named_data.jndn.security.policy.PolicyManager;
import net.named_data.jndn.security.policy.SelfVerifyPolicyManager;
import net.named_data.jndn.security.v2.CertificateV2;
import net.named_data.jndn.util.Blob;
import net.named_data.jndn.util.SignedBlob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PolicyManager_ESTest extends PolicyManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoVerifyPolicyManager noVerifyPolicyManager0 = new NoVerifyPolicyManager();
      boolean boolean0 = noVerifyPolicyManager0.skipVerifyAndTrust((Interest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CertificateCache certificateCache0 = new CertificateCache();
      ConfigPolicyManager configPolicyManager0 = new ConfigPolicyManager("", certificateCache0, 0, 0.0, 0.0);
      Interest interest0 = new Interest();
      boolean boolean0 = configPolicyManager0.skipVerifyAndTrust(interest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NoVerifyPolicyManager noVerifyPolicyManager0 = new NoVerifyPolicyManager();
      boolean boolean0 = noVerifyPolicyManager0.skipVerifyAndTrust((Data) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigPolicyManager configPolicyManager0 = new ConfigPolicyManager("");
      boolean boolean0 = configPolicyManager0.skipVerifyAndTrust((Data) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfigPolicyManager configPolicyManager0 = new ConfigPolicyManager("");
      boolean boolean0 = configPolicyManager0.requireVerify((Interest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NoVerifyPolicyManager noVerifyPolicyManager0 = new NoVerifyPolicyManager();
      Name name0 = noVerifyPolicyManager0.inferSigningIdentity((Name) null);
      Interest interest0 = new Interest(name0);
      boolean boolean0 = noVerifyPolicyManager0.requireVerify(interest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfigPolicyManager configPolicyManager0 = new ConfigPolicyManager("");
      boolean boolean0 = configPolicyManager0.requireVerify((Data) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NoVerifyPolicyManager noVerifyPolicyManager0 = new NoVerifyPolicyManager();
      CertificateV2 certificateV2_0 = new CertificateV2();
      boolean boolean0 = noVerifyPolicyManager0.requireVerify((Data) certificateV2_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SelfVerifyPolicyManager selfVerifyPolicyManager0 = new SelfVerifyPolicyManager((IdentityStorage) null);
      Name name0 = SigningInfo.getDigestSha256Identity();
      Name name1 = selfVerifyPolicyManager0.inferSigningIdentity(name0);
      assertFalse(name1.equals((Object)name0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CertificateCache certificateCache0 = new CertificateCache();
      ConfigPolicyManager configPolicyManager0 = new ConfigPolicyManager("", certificateCache0, (-1707));
      Interest interest0 = new Interest((Name) null, (-1707));
      OnVerifiedInterest onVerifiedInterest0 = mock(OnVerifiedInterest.class, new ViolatedAssumptionAnswer());
      OnInterestValidationFailed onInterestValidationFailed0 = mock(OnInterestValidationFailed.class, new ViolatedAssumptionAnswer());
      WireFormat wireFormat0 = new WireFormat();
      ValidationRequest validationRequest0 = configPolicyManager0.checkVerificationPolicy(interest0, 1500, onVerifiedInterest0, onInterestValidationFailed0, wireFormat0);
      assertNull(validationRequest0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SelfVerifyPolicyManager selfVerifyPolicyManager0 = new SelfVerifyPolicyManager();
      Interest interest0 = new Interest();
      OnVerifiedInterest onVerifiedInterest0 = mock(OnVerifiedInterest.class, new ViolatedAssumptionAnswer());
      OnInterestValidationFailed onInterestValidationFailed0 = mock(OnInterestValidationFailed.class, new ViolatedAssumptionAnswer());
      ValidationRequest validationRequest0 = selfVerifyPolicyManager0.checkVerificationPolicy(interest0, 1, onVerifiedInterest0, onInterestValidationFailed0);
      assertNull(validationRequest0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoVerifyPolicyManager noVerifyPolicyManager0 = new NoVerifyPolicyManager();
      Certificate certificate0 = new Certificate();
      OnVerified onVerified0 = mock(OnVerified.class, new ViolatedAssumptionAnswer());
      OnDataValidationFailed onDataValidationFailed0 = mock(OnDataValidationFailed.class, new ViolatedAssumptionAnswer());
      ValidationRequest validationRequest0 = noVerifyPolicyManager0.checkVerificationPolicy((Data) certificate0, 832, onVerified0, onDataValidationFailed0);
      assertNull(validationRequest0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NoVerifyPolicyManager noVerifyPolicyManager0 = new NoVerifyPolicyManager();
      boolean boolean0 = noVerifyPolicyManager0.checkSigningPolicy((Name) null, (Name) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)11;
      SignedBlob signedBlob0 = new SignedBlob(byteArray0, false, (byte)0, (byte)0);
      // Undeclared exception!
      try { 
        PolicyManager.verifySignature(sha256WithEcdsaSignature0, signedBlob0, signedBlob0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newLimit > capacity: (13 > 9)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConfigPolicyManager configPolicyManager0 = new ConfigPolicyManager();
      Name name0 = new Name();
      // Undeclared exception!
      try { 
        configPolicyManager0.inferSigningIdentity(name0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ConfigPolicyManager.inferSigningIdentity is not implemented
         //
         verifyException("net.named_data.jndn.security.policy.ConfigPolicyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PibMemory pibMemory0 = new PibMemory();
      SelfVerifyPolicyManager selfVerifyPolicyManager0 = new SelfVerifyPolicyManager(pibMemory0);
      OnVerifiedInterest onVerifiedInterest0 = mock(OnVerifiedInterest.class, new ViolatedAssumptionAnswer());
      OnInterestValidationFailed onInterestValidationFailed0 = mock(OnInterestValidationFailed.class, new ViolatedAssumptionAnswer());
      WireFormat wireFormat0 = new WireFormat();
      // Undeclared exception!
      try { 
        selfVerifyPolicyManager0.checkVerificationPolicy((Interest) null, 1, onVerifiedInterest0, onInterestValidationFailed0, wireFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.policy.SelfVerifyPolicyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SelfVerifyPolicyManager selfVerifyPolicyManager0 = new SelfVerifyPolicyManager();
      Interest interest0 = new Interest();
      // Undeclared exception!
      try { 
        selfVerifyPolicyManager0.checkVerificationPolicy(interest0, 0, (OnVerifiedInterest) null, (OnInterestValidationFailed) null, (WireFormat) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SelfVerifyPolicyManager selfVerifyPolicyManager0 = new SelfVerifyPolicyManager();
      OnVerifiedInterest onVerifiedInterest0 = mock(OnVerifiedInterest.class, new ViolatedAssumptionAnswer());
      OnInterestValidationFailed onInterestValidationFailed0 = mock(OnInterestValidationFailed.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        selfVerifyPolicyManager0.checkVerificationPolicy((Interest) null, 0, onVerifiedInterest0, onInterestValidationFailed0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.policy.SelfVerifyPolicyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SelfVerifyPolicyManager selfVerifyPolicyManager0 = new SelfVerifyPolicyManager();
      OnVerified onVerified0 = mock(OnVerified.class, new ViolatedAssumptionAnswer());
      OnDataValidationFailed onDataValidationFailed0 = mock(OnDataValidationFailed.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        selfVerifyPolicyManager0.checkVerificationPolicy((Data) null, 1, onVerified0, onDataValidationFailed0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.policy.SelfVerifyPolicyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GenericSignature genericSignature0 = new GenericSignature();
      try { 
        PolicyManager.verifySignature(genericSignature0, (SignedBlob) null, (Blob) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PolicyManager.verify: Signature type is unknown
         //
         verifyException("net.named_data.jndn.security.policy.PolicyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SignedBlob signedBlob0 = new SignedBlob();
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      boolean boolean0 = PolicyManager.verifySignature(sha256WithEcdsaSignature0, signedBlob0, signedBlob0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DigestSha256Signature digestSha256Signature0 = new DigestSha256Signature();
      // Undeclared exception!
      try { 
        PolicyManager.verifySignature(digestSha256Signature0, (SignedBlob) null, (Blob) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.policy.PolicyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Sha256WithEcdsaSignature sha256WithEcdsaSignature0 = new Sha256WithEcdsaSignature();
      Interest interest0 = new Interest();
      SignedBlob signedBlob0 = interest0.wireEncode();
      try { 
        PolicyManager.verifySignature(sha256WithEcdsaSignature0, signedBlob0, signedBlob0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PublicKey: Error decoding the public key: getChildren: This DerNode is not DerSequence
         //
         verifyException("net.named_data.jndn.security.certificate.PublicKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Sha256WithRsaSignature sha256WithRsaSignature0 = new Sha256WithRsaSignature();
      // Undeclared exception!
      try { 
        PolicyManager.verifySignature(sha256WithRsaSignature0, (SignedBlob) null, (Blob) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.named_data.jndn.security.policy.PolicyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SelfVerifyPolicyManager selfVerifyPolicyManager0 = new SelfVerifyPolicyManager();
      Interest interest0 = new Interest();
      OnVerifiedInterest onVerifiedInterest0 = mock(OnVerifiedInterest.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        selfVerifyPolicyManager0.checkVerificationPolicy(interest0, 0, onVerifiedInterest0, (OnInterestValidationFailed) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NoVerifyPolicyManager noVerifyPolicyManager0 = new NoVerifyPolicyManager();
      // Undeclared exception!
      try { 
        noVerifyPolicyManager0.checkVerificationPolicy((Data) null, 1, (OnVerified) null, (OnDataValidationFailed) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }
}
