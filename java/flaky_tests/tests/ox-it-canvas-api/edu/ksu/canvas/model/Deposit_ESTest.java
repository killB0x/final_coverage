/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:55:33 GMT 2022
 */

package edu.ksu.canvas.model;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.ksu.canvas.model.Deposit;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Deposit_ESTest extends Deposit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setUploadUrl("AAv>)J)tMdP!z");
      String string0 = deposit0.getUploadUrl();
      assertEquals("AAv>)J)tMdP!z", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setUploadUrl("");
      String string0 = deposit0.getUploadUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("AAv>)J)tMdP!z", "AAv>)J)tMdP!z");
      deposit0.setUploadParams(hashMap0);
      Map<String, String> map0 = deposit0.getUploadParams();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      Map<String, String> map0 = deposit0.getUploadParams();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      deposit0.setUploadParams(hashMap0);
      Map<String, String> map0 = deposit0.getUploadParams();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      String string0 = deposit0.getUploadUrl();
      assertNull(string0);
  }
}
