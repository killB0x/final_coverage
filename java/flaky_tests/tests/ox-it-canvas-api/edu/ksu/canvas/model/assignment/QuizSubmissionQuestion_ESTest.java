/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:20:01 GMT 2022
 */

package edu.ksu.canvas.model.assignment;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.ksu.canvas.model.assignment.QuizAnswer;
import edu.ksu.canvas.model.assignment.QuizSubmissionQuestion;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuizSubmissionQuestion_ESTest extends QuizSubmissionQuestion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      Integer integer0 = new Integer(0);
      quizSubmissionQuestion0.setId(integer0);
      Integer integer1 = quizSubmissionQuestion0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      Integer integer0 = new Integer(31);
      quizSubmissionQuestion0.setId(integer0);
      Integer integer1 = quizSubmissionQuestion0.getId();
      assertEquals(31, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      Integer integer0 = new Integer((-569));
      quizSubmissionQuestion0.setId(integer0);
      Integer integer1 = quizSubmissionQuestion0.getId();
      assertEquals((-569), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      Boolean boolean0 = Boolean.FALSE;
      quizSubmissionQuestion0.setFlagged(boolean0);
      Boolean boolean1 = quizSubmissionQuestion0.getFlagged();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      QuizAnswer quizAnswer0 = new QuizAnswer();
      LinkedList<QuizAnswer> linkedList0 = new LinkedList<QuizAnswer>();
      linkedList0.add(quizAnswer0);
      quizSubmissionQuestion0.setAnswers(linkedList0);
      List<QuizAnswer> list0 = quizSubmissionQuestion0.getAnswers();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      quizSubmissionQuestion0.setAnswer(linkedList0);
      List<Integer> list0 = quizSubmissionQuestion0.getAnswer();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      LinkedList<QuizAnswer> linkedList0 = new LinkedList<QuizAnswer>();
      quizSubmissionQuestion0.setAnswers(linkedList0);
      List<QuizAnswer> list0 = quizSubmissionQuestion0.getAnswers();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      List<QuizAnswer> list0 = quizSubmissionQuestion0.getAnswers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      Integer integer0 = quizSubmissionQuestion0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      Boolean boolean0 = quizSubmissionQuestion0.getFlagged();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      List<Integer> list0 = quizSubmissionQuestion0.getAnswer();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      Boolean boolean0 = Boolean.valueOf(true);
      quizSubmissionQuestion0.setFlagged(boolean0);
      Boolean boolean1 = quizSubmissionQuestion0.getFlagged();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuizSubmissionQuestion quizSubmissionQuestion0 = new QuizSubmissionQuestion();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      quizSubmissionQuestion0.setAnswer(linkedList0);
      Integer integer0 = new Integer((-590));
      linkedList0.add(integer0);
      List<Integer> list0 = quizSubmissionQuestion0.getAnswer();
      assertTrue(list0.contains((-590)));
  }
}
