/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:21:24 GMT 2022
 */

package edu.ksu.canvas.model.report;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.ksu.canvas.model.report.AccountReport;
import edu.ksu.canvas.model.report.AccountReportAttachment;
import java.net.URI;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccountReport_ESTest extends AccountReport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      accountReport0.setStatus("iF4zZ7$iL8,OS");
      String string0 = accountReport0.getStatus();
      assertEquals("iF4zZ7$iL8,OS", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      accountReport0.setStatus("");
      String string0 = accountReport0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      MockDate mockDate0 = new MockDate(1069, 1069, 1069, 1069, 1);
      accountReport0.setStartedAt(mockDate0);
      Date date0 = accountReport0.getStartedAt();
      assertEquals("Sun Feb 17 13:01:00 GMT 3061", date0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer(0);
      accountReport0.setProgress(integer0);
      Integer integer1 = accountReport0.getProgress();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer(541);
      accountReport0.setProgress(integer0);
      Integer integer1 = accountReport0.getProgress();
      assertEquals(541, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      accountReport0.setParameters(hashMap0);
      Map<String, Object> map0 = accountReport0.getParameters();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.put("m", object0);
      accountReport0.setParameters(hashMap0);
      Map<String, Object> map0 = accountReport0.getParameters();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer(0);
      accountReport0.setId(integer0);
      Integer integer1 = accountReport0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer(3304);
      accountReport0.setId(integer0);
      Integer integer1 = accountReport0.getId();
      assertEquals(3304, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer((-467));
      accountReport0.setId(integer0);
      Integer integer1 = accountReport0.getId();
      assertEquals((-467), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      URI uRI0 = MockURI.URI((String) null, "edu.ksu.canvas.model.report.AccountReportAttachment", (String) null, "x(=Q7", "oLFltq:4|j1cBfi.A*");
      accountReport0.setFileUrl(uRI0);
      URI uRI1 = accountReport0.getFileUrl();
      assertEquals("oLFltq:4%7Cj1cBfi.A*", uRI1.getRawFragment());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      URI uRI0 = MockURI.URI("edu.ksu.canvas.model.report.AccountReport", "edu.ksu.canvas.model.report.AccountReport", (String) null);
      accountReport0.setFileUrl(uRI0);
      URI uRI1 = accountReport0.getFileUrl();
      assertNull(uRI1.getRawQuery());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      MockDate mockDate0 = new MockDate();
      accountReport0.setEndedAt(mockDate0);
      Date date0 = accountReport0.getEndedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer(0);
      accountReport0.setCurrentLine(integer0);
      Integer integer1 = accountReport0.getCurrentLine();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer(282);
      accountReport0.setCurrentLine(integer0);
      Integer integer1 = accountReport0.getCurrentLine();
      assertEquals(282, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer((-2072));
      accountReport0.setCurrentLine(integer0);
      Integer integer1 = accountReport0.getCurrentLine();
      assertEquals((-2072), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      MockDate mockDate0 = new MockDate(700L);
      accountReport0.setCreatedAt(mockDate0);
      Date date0 = accountReport0.getCreatedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Date date0 = accountReport0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Date date0 = accountReport0.getStartedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Date date0 = accountReport0.getEndedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Map<String, Object> map0 = accountReport0.getParameters();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = new Integer((-429));
      accountReport0.setProgress(integer0);
      Integer integer1 = accountReport0.getProgress();
      assertEquals((-429), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      AccountReportAttachment accountReportAttachment0 = accountReport0.getAttachment();
      assertNull(accountReportAttachment0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      String string0 = accountReport0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      AccountReportAttachment accountReportAttachment0 = new AccountReportAttachment();
      accountReport0.setAttachment(accountReportAttachment0);
      AccountReportAttachment accountReportAttachment1 = accountReport0.getAttachment();
      assertNull(accountReportAttachment1.getContentType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      URI uRI0 = accountReport0.getFileUrl();
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = accountReport0.getProgress();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = accountReport0.getCurrentLine();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AccountReport accountReport0 = new AccountReport();
      Integer integer0 = accountReport0.getId();
      assertNull(integer0);
  }
}
