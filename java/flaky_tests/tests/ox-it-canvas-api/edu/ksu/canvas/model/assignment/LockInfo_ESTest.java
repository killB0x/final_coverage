/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:17:58 GMT 2022
 */

package edu.ksu.canvas.model.assignment;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.ksu.canvas.model.assignment.LockInfo;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LockInfo_ESTest extends LockInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      MockDate mockDate0 = new MockDate(49, 49, 0, (-266), (-266));
      lockInfo0.setUnlockAt(mockDate0);
      Date date0 = lockInfo0.getUnlockAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      Boolean boolean0 = Boolean.TRUE;
      lockInfo0.setManuallyLocked(boolean0);
      Boolean boolean1 = lockInfo0.getManuallyLocked();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      lockInfo0.setLockAt(date0);
      Date date1 = lockInfo0.getLockAt();
      assertSame(date1, date0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      lockInfo0.setContextModule("|T!}_SK<f+eWh?HSY");
      Object object0 = lockInfo0.getContextModule();
      assertEquals("|T!}_SK<f+eWh?HSY", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      lockInfo0.setAssetString("S g");
      String string0 = lockInfo0.getAssetString();
      assertEquals("S g", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      lockInfo0.setAssetString("");
      String string0 = lockInfo0.getAssetString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      Date date0 = lockInfo0.getUnlockAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      Object object0 = lockInfo0.getContextModule();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      String string0 = lockInfo0.getAssetString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      Boolean boolean0 = Boolean.valueOf(false);
      lockInfo0.setManuallyLocked(boolean0);
      Boolean boolean1 = lockInfo0.getManuallyLocked();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      Date date0 = lockInfo0.getLockAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo();
      Boolean boolean0 = lockInfo0.getManuallyLocked();
      assertNull(boolean0);
  }
}
