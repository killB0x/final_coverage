/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:05:43 GMT 2022
 */

package edu.ksu.canvas.model.assignment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.model.assignment.QuizAnswer;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuizAnswer_ESTest extends QuizAnswer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer(0);
      quizAnswer0.setId(integer0);
      quizAnswer0.setAnswerMatchRight("dwv;25n=-$a");
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchLeft("E&xG](N%OcT");
      Integer integer0 = new Integer(2737);
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      quizAnswer0.setTextAfterAnswers("%APk5m\"");
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-2129));
      quizAnswer0.setId(integer0);
      quizAnswer0.setComments(">d*4^gW");
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-1129));
      quizAnswer0.setId(integer0);
      Double double0 = new Double(1373.9);
      quizAnswer0.setWeight(double0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(0);
      quizAnswer0.setWeight(double0);
      Double double1 = quizAnswer0.getWeight();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(1373.9);
      quizAnswer0.setWeight(double0);
      Double double1 = quizAnswer0.getWeight();
      assertEquals(1373.9, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = Double.valueOf((double) (-1672));
      quizAnswer0.setWeight(double0);
      Double double1 = quizAnswer0.getWeight();
      assertEquals((-1672.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setTextAfterAnswers(">d*4^gW");
      String string0 = quizAnswer0.getTextAfterAnswers();
      assertEquals(">d*4^gW", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setTextAfterAnswers("");
      String string0 = quizAnswer0.getTextAfterAnswers();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setText("94H|eV=T=TzvHN{K)j");
      String string0 = quizAnswer0.getText();
      assertEquals("94H|eV=T=TzvHN{K)j", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setStart("");
      String string0 = quizAnswer0.getStart();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setNumericalAnswerType("VD%");
      String string0 = quizAnswer0.getNumericalAnswerType();
      assertEquals("VD%", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setNumericalAnswerType("");
      String string0 = quizAnswer0.getNumericalAnswerType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      quizAnswer0.setMatchingAnswerIncorrectMatches(linkedList0);
      List<String> list0 = quizAnswer0.getMatchingAnswerIncorrectMatches();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.offerLast("");
      quizAnswer0.setMatchingAnswerIncorrectMatches(linkedList0);
      List<String> list0 = quizAnswer0.getMatchingAnswerIncorrectMatches();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(0.0);
      quizAnswer0.setMargin(double0);
      Double double1 = quizAnswer0.getMargin();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(2734.725);
      quizAnswer0.setMargin(double0);
      Double double1 = quizAnswer0.getMargin();
      assertEquals(2734.725, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double((-1.0));
      quizAnswer0.setMargin(double0);
      Double double1 = quizAnswer0.getMargin();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer(0);
      quizAnswer0.setId(integer0);
      Integer integer1 = quizAnswer0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer(2299);
      quizAnswer0.setId(integer0);
      Integer integer1 = quizAnswer0.getId();
      assertEquals(2299, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-1));
      quizAnswer0.setId(integer0);
      Integer integer1 = quizAnswer0.getId();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setHtml("");
      String string0 = quizAnswer0.getHtml();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setExact("bf,8Sz6 qm$$OhgO|T.");
      String string0 = quizAnswer0.getExact();
      assertEquals("bf,8Sz6 qm$$OhgO|T.", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setExact("");
      String string0 = quizAnswer0.getExact();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setEnd("k;:+R0$b:,:i]x~BYxZ");
      String string0 = quizAnswer0.getEnd();
      assertEquals("k;:+R0$b:,:i]x~BYxZ", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setEnd("");
      String string0 = quizAnswer0.getEnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setCommentsHtml(">d*4^gW");
      String string0 = quizAnswer0.getCommentsHtml();
      assertEquals(">d*4^gW", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setCommentsHtml("");
      String string0 = quizAnswer0.getCommentsHtml();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setComments("?n-+");
      String string0 = quizAnswer0.getComments();
      assertEquals("?n-+", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setComments("");
      String string0 = quizAnswer0.getComments();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setBlankId("x-l 6B");
      String string0 = quizAnswer0.getBlankId();
      assertEquals("x-l 6B", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setBlankId("");
      String string0 = quizAnswer0.getBlankId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchRight("\"4j,N_A9\u0001;i4<,z");
      String string0 = quizAnswer0.getAnswerMatchRight();
      assertEquals("\"4j,N_A9\u0001;i4<,z", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchRight("");
      String string0 = quizAnswer0.getAnswerMatchRight();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchLeft("zncMziG=&RiUEc:*AT");
      String string0 = quizAnswer0.getAnswerMatchLeft();
      assertEquals("zncMziG=&RiUEc:*AT", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchLeft("");
      String string0 = quizAnswer0.getAnswerMatchLeft();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      // Undeclared exception!
      try { 
        quizAnswer0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-44));
      quizAnswer0.setId(integer0);
      quizAnswer0.setBlankId("");
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setEnd("");
      Integer integer0 = new Integer((-1));
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setStart("");
      Integer integer0 = new Integer(0);
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(0.0);
      quizAnswer0.setMargin(double0);
      Integer integer0 = new Integer((-2603));
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setExact("");
      Integer integer0 = new Integer((-1));
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setText("\"{");
      Integer integer0 = new Integer((-2603));
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer0.setTextAfterAnswers("");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setTextAfterAnswers("%APk5m\"");
      quizAnswer0.setTextAfterAnswers("%APk5m\"");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setTextAfterAnswers("%APk5m\"");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer0.setStart("Fk/");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-408));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setStart("TZ1#2:c'5|");
      quizAnswer0.setStart("TZ1#2:c'5|");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-408));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setStart("TZ1#2:c'5|");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setNumericalAnswerType("Fk/");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer0.setNumericalAnswerType("");
      quizAnswer1.setNumericalAnswerType("");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer0.setNumericalAnswerType("d_Pmt&lCX5l");
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      quizAnswer0.setMatchingAnswerIncorrectMatches(linkedList0);
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      quizAnswer0.setMatchingAnswerIncorrectMatches(linkedList0);
      quizAnswer1.setMatchingAnswerIncorrectMatches(linkedList0);
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      quizAnswer0.setMatchingAnswerIncorrectMatches(linkedList0);
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-380));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      Double double0 = new Double((-380));
      quizAnswer1.setMargin(double0);
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double((-407));
      quizAnswer0.setMargin(double0);
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setMargin(double0);
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double((-407));
      quizAnswer0.setMargin(double0);
      Integer integer0 = new Integer((-407));
      quizAnswer0.setId(integer0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setId(integer0);
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = new Integer((-44));
      quizAnswer0.setId(integer0);
      quizAnswer0.setBlankId("");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setBlankId("");
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setExact("T13mxyyTt*aa");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setExact("T13mxyyTt*aa");
      // Undeclared exception!
      try { 
        quizAnswer0.equals(quizAnswer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setExact("T13mxyyTt*aa");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setEnd(",A*k,mI8,H\"");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setEnd(",A*k,mI8,H\"");
      // Undeclared exception!
      try { 
        quizAnswer0.equals(quizAnswer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setEnd(",A*k,mI8,H\"");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setBlankId("k-Qh3I@HM");
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setBlankId("dt&iiCX5l0");
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(0.0);
      quizAnswer0.setWeight(double0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(0.0);
      quizAnswer0.setWeight(double0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setWeight(double0);
      // Undeclared exception!
      try { 
        quizAnswer0.equals(quizAnswer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setText("");
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setText("LA*kk3I8HM");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setText("LA*kk3I8HM");
      // Undeclared exception!
      try { 
        quizAnswer1.equals(quizAnswer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setText("LA*kk3I8HM");
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setAnswerMatchRight(",A*k,mI8,H\"");
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchRight("%A*k,5I8,H\"");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setAnswerMatchRight("%A*k,5I8,H\"");
      // Undeclared exception!
      try { 
        quizAnswer0.equals(quizAnswer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchRight("%A*k,5I8,H\"");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer0.setAnswerMatchLeft("o\"h3;z#TTr4");
      quizAnswer1.setAnswerMatchLeft("o\"h3;z#TTr4");
      // Undeclared exception!
      try { 
        quizAnswer1.equals(quizAnswer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setAnswerMatchLeft("o\"h3;z#TTr4");
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setComments("nmpKXKbk)Uiak");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setComments("%A*k,5I8,H\"");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setComments("%A*k,5I8,H\"");
      // Undeclared exception!
      try { 
        quizAnswer1.equals(quizAnswer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.model.assignment.QuizAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      QuizAnswer quizAnswer1 = new QuizAnswer();
      quizAnswer1.setComments("%A*k,5I8,H\"");
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      boolean boolean0 = quizAnswer0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      boolean boolean0 = quizAnswer0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      boolean boolean0 = quizAnswer0.equals(quizAnswer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Integer integer0 = quizAnswer0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getTextAfterAnswers();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setStart("edu.ksu.canvas.model.assignment.QuizAnswer");
      String string0 = quizAnswer0.getStart();
      assertEquals("edu.ksu.canvas.model.assignment.QuizAnswer", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getExact();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      quizAnswer0.setMatchingAnswerIncorrectMatches(linkedList0);
      Integer integer0 = new Integer(0);
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setAnswerMatchLeft("");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setExact("");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setNumericalAnswerType("");
      Integer integer0 = new Integer((-2129));
      quizAnswer0.setId(integer0);
      quizAnswer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getStart();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getAnswerMatchLeft();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = new Double(0.0);
      quizAnswer0.setWeight(double0);
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer0.equals(quizAnswer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getEnd();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      List<String> list0 = quizAnswer0.getMatchingAnswerIncorrectMatches();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setText("");
      String string0 = quizAnswer0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getBlankId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setHtml("inmEF)B2e");
      String string0 = quizAnswer0.getHtml();
      assertEquals("inmEF)B2e", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getAnswerMatchRight();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getHtml();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getCommentsHtml();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = quizAnswer0.getMargin();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      Double double0 = quizAnswer0.getWeight();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      quizAnswer0.setEnd("");
      QuizAnswer quizAnswer1 = new QuizAnswer();
      boolean boolean0 = quizAnswer1.equals(quizAnswer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getNumericalAnswerType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      QuizAnswer quizAnswer0 = new QuizAnswer();
      String string0 = quizAnswer0.getComments();
      assertNull(string0);
  }
}
