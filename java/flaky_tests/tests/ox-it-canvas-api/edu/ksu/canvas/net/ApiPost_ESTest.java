/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:09:47 GMT 2022
 */

package edu.ksu.canvas.net;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.ksu.canvas.net.ApiPost;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApiPost_ESTest extends ApiPost_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("", "", "n| ^w", hashMap0);
      String string0 = apiPost0.getUrl();
      assertEquals("", apiPost0.getOauthToken());
      assertEquals("n| ^w", apiPost0.getMethod());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApiPost apiPost0 = new ApiPost("edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", "rOfTVL$Vy", (HashMap<String, String>) null);
      apiPost0.getPostParameters();
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
      assertEquals("rOfTVL$Vy", apiPost0.getMethod());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getOauthToken());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      hashMap0.put("W%p?4 m/", "W%p?4 m/");
      apiPost0.getPostParameters();
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getMethod());
      assertEquals("W%p?4 m/", apiPost0.getOauthToken());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("", "", "n| ^w", hashMap0);
      String string0 = apiPost0.getOauthToken();
      assertEquals("", apiPost0.getUrl());
      assertEquals("", string0);
      assertEquals("n| ^w", apiPost0.getMethod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost((String) null, "", (String) null, hashMap0);
      String string0 = apiPost0.getMethod();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getMethod());
      
      apiPost0.setMethod("");
      apiPost0.getMethod();
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
      
      apiPost0.setUrl((String) null);
      apiPost0.getUrl();
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getMethod());
      assertEquals("W%p?4 m/", apiPost0.getOauthToken());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      assertEquals("W%p?4 m/", apiPost0.getOauthToken());
      
      apiPost0.setOauthToken((String) null);
      apiPost0.getOauthToken();
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getMethod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      apiPost0.getPostParameters();
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getMethod());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
      assertEquals("W%p?4 m/", apiPost0.getOauthToken());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      String string0 = apiPost0.getOauthToken();
      assertEquals("W%p?4 m/", string0);
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getMethod());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      String string0 = apiPost0.getMethod();
      assertEquals("W%p?4 m/", apiPost0.getOauthToken());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
      assertEquals("edu.ksu.canvas.net.ApiPost", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("W%p?4 m/", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      apiPost0.setPostParameters(hashMap0);
      assertEquals("W%p?4 m/", apiPost0.getOauthToken());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getUrl());
      assertEquals("edu.ksu.canvas.net.ApiPost", apiPost0.getMethod());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ApiPost apiPost0 = new ApiPost("edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", "edu.ksu.canvas.net.ApiPost", hashMap0);
      String string0 = apiPost0.getUrl();
      assertEquals("edu.ksu.canvas.net.ApiPost", string0);
  }
}
