/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:53:46 GMT 2022
 */

package edu.ksu.canvas.net;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.ksu.canvas.net.Response;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Response_ESTest extends Response_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Response response0 = new Response();
      response0.setResponseCode(1);
      int int0 = response0.getResponseCode();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Response response0 = new Response();
      response0.setNextLink("Response{errorHappened=true, responseCode=0, nextLink='null', content=''}");
      response0.getNextLink();
      assertFalse(response0.getErrorHappened());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Response response0 = new Response();
      response0.setNextLink("");
      response0.getNextLink();
      assertFalse(response0.getErrorHappened());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Response response0 = new Response();
      assertFalse(response0.getErrorHappened());
      
      response0.setErrorHappened(true);
      boolean boolean0 = response0.getErrorHappened();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Response response0 = new Response();
      response0.setContent("}A~C>Y");
      response0.getContent();
      assertFalse(response0.getErrorHappened());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Response response0 = new Response();
      response0.setResponseCode((-336));
      int int0 = response0.getResponseCode();
      assertEquals((-336), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Response response0 = new Response();
      boolean boolean0 = response0.getErrorHappened();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Response response0 = new Response();
      response0.getNextLink();
      assertFalse(response0.getErrorHappened());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Response response0 = new Response();
      String string0 = response0.toString();
      assertEquals("Response{errorHappened=false, responseCode=0, nextLink='null', content='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Response response0 = new Response();
      response0.getContent();
      assertFalse(response0.getErrorHappened());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Response response0 = new Response();
      response0.setContent("");
      response0.getContent();
      assertFalse(response0.getErrorHappened());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Response response0 = new Response();
      int int0 = response0.getResponseCode();
      assertEquals(0, int0);
      assertFalse(response0.getErrorHappened());
  }
}
