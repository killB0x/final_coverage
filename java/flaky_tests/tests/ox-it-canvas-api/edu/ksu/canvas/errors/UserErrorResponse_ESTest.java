/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:22:45 GMT 2022
 */

package edu.ksu.canvas.errors;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.ksu.canvas.errors.ErrorDetails;
import edu.ksu.canvas.errors.UserErrorResponse;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserErrorResponse_ESTest extends UserErrorResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserErrorResponse.Errors userErrorResponse_Errors0 = new UserErrorResponse.Errors();
      UserErrorResponse userErrorResponse0 = new UserErrorResponse();
      userErrorResponse0.setErrors(userErrorResponse_Errors0);
      UserErrorResponse.Errors userErrorResponse_Errors1 = userErrorResponse0.getErrors();
      assertSame(userErrorResponse_Errors1, userErrorResponse_Errors0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserErrorResponse userErrorResponse0 = new UserErrorResponse();
      UserErrorResponse.Errors userErrorResponse_Errors0 = userErrorResponse0.getErrors();
      assertNull(userErrorResponse_Errors0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserErrorResponse.Errors userErrorResponse_Errors0 = new UserErrorResponse.Errors();
      Map<String, List<ErrorDetails>> map0 = userErrorResponse_Errors0.getPseudonym();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UserErrorResponse.Errors userErrorResponse_Errors0 = new UserErrorResponse.Errors();
      userErrorResponse_Errors0.setUser((Map<String, List<ErrorDetails>>) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UserErrorResponse.Errors userErrorResponse_Errors0 = new UserErrorResponse.Errors();
      Map<String, List<ErrorDetails>> map0 = userErrorResponse_Errors0.getUser();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UserErrorResponse.Errors userErrorResponse_Errors0 = new UserErrorResponse.Errors();
      userErrorResponse_Errors0.setPseudonym((Map<String, List<ErrorDetails>>) null);
  }
}
