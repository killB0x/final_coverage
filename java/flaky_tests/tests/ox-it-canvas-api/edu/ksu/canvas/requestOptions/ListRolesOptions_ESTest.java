/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:36:40 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.ListRolesOptions;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListRolesOptions_ESTest extends ListRolesOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListRolesOptions.State listRolesOptions_State0 = ListRolesOptions.State.ACTIVE;
      String string0 = listRolesOptions_State0.toString();
      assertEquals("active", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions((String) null);
      String string0 = listRolesOptions0.getAccountId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("Asu=&{f");
      String string0 = listRolesOptions0.getAccountId();
      assertEquals("Asu=&{f", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("DGSlc3a");
      LinkedList<ListRolesOptions.State> linkedList0 = new LinkedList<ListRolesOptions.State>();
      List<ListRolesOptions.State> list0 = linkedList0.subList(0, 0);
      ListRolesOptions.State listRolesOptions_State0 = ListRolesOptions.State.ACTIVE;
      linkedList0.add(listRolesOptions_State0);
      // Undeclared exception!
      try { 
        listRolesOptions0.state(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("t^hGo@;`1q:-");
      listRolesOptions0.optionsMap = null;
      Boolean boolean0 = Boolean.valueOf("t^hGo@;`1q:-");
      // Undeclared exception!
      try { 
        listRolesOptions0.showInherited(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("l");
      Boolean boolean0 = Boolean.FALSE;
      ListRolesOptions listRolesOptions1 = listRolesOptions0.showInherited(boolean0);
      assertSame(listRolesOptions0, listRolesOptions1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("Asu=&{f");
      ListRolesOptions listRolesOptions1 = listRolesOptions0.showInherited((Boolean) null);
      assertSame(listRolesOptions1, listRolesOptions0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("DGSlc3a");
      LinkedList<ListRolesOptions.State> linkedList0 = new LinkedList<ListRolesOptions.State>();
      ListRolesOptions.State listRolesOptions_State0 = ListRolesOptions.State.ACTIVE;
      linkedList0.add(listRolesOptions_State0);
      ListRolesOptions listRolesOptions1 = listRolesOptions0.state(linkedList0);
      assertEquals("DGSlc3a", listRolesOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("");
      String string0 = listRolesOptions0.getAccountId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ListRolesOptions listRolesOptions0 = new ListRolesOptions("b%+tERzpfzy");
      // Undeclared exception!
      try { 
        listRolesOptions0.state((List<ListRolesOptions.State>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }
}
