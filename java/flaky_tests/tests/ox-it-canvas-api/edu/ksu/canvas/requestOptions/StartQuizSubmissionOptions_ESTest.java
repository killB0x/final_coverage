/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:45:03 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.StartQuizSubmissionOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StartQuizSubmissionOptions_ESTest extends StartQuizSubmissionOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = Integer.valueOf(662);
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("", integer0);
      Integer integer1 = startQuizSubmissionOptions0.getQuizId();
      assertEquals(662, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("4RpSgA-wd_]pk~kjZZ", (Integer) null);
      Integer integer0 = startQuizSubmissionOptions0.getQuizId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-2708));
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("", integer0);
      Integer integer1 = startQuizSubmissionOptions0.getQuizId();
      assertEquals((-2708), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-99));
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("(%:", integer0);
      String string0 = startQuizSubmissionOptions0.getCourseId();
      assertEquals("(%:", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("", integer0);
      String string0 = startQuizSubmissionOptions0.getCourseId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("/H5BV%'} ", (Integer) null);
      // Undeclared exception!
      try { 
        startQuizSubmissionOptions0.preview((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.StartQuizSubmissionOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("m~9F", (Integer) null);
      startQuizSubmissionOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        startQuizSubmissionOptions0.accessCode("m~9F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("", integer0);
      StartQuizSubmissionOptions startQuizSubmissionOptions1 = startQuizSubmissionOptions0.accessCode("");
      assertSame(startQuizSubmissionOptions0, startQuizSubmissionOptions1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("", integer0);
      Integer integer1 = startQuizSubmissionOptions0.getQuizId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(0);
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions("", integer0);
      Boolean boolean0 = Boolean.valueOf(false);
      StartQuizSubmissionOptions startQuizSubmissionOptions1 = startQuizSubmissionOptions0.preview(boolean0);
      assertEquals("", startQuizSubmissionOptions1.getCourseId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-578));
      StartQuizSubmissionOptions startQuizSubmissionOptions0 = new StartQuizSubmissionOptions((String) null, integer0);
      String string0 = startQuizSubmissionOptions0.getCourseId();
      assertNull(string0);
  }
}
