/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:50:27 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.AccountReportOptions;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccountReportOptions_ESTest extends AccountReportOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("J1u4:0T", "edu.ksu.canvas.requestOptions.BaseOptions");
      String string0 = accountReportOptions0.getReportType();
      assertEquals("J1u4:0T", string0);
      assertEquals("edu.ksu.canvas.requestOptions.BaseOptions", accountReportOptions0.getAccountId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("", "edu.ksu.canvas.requestOptions.BaseOptions");
      String string0 = accountReportOptions0.getReportType();
      assertEquals("edu.ksu.canvas.requestOptions.BaseOptions", accountReportOptions0.getAccountId());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions(",$o/=fzu?9OuM/SM&%)", (String) null);
      String string0 = accountReportOptions0.getAccountId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, "");
      String string0 = accountReportOptions0.getAccountId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.xlist((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("@", "@");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.users("@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, "G");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.userObservers("G");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("*SBA8t", "*SBA8t");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.groupMembership("parameters[group_membership]");
      accountReportOptions1.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions1.terms("parameters[group_membership]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("c", "c");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.terms("c");
      accountReportOptions1.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.sections("[=|N@=6ld<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("parameters[sections]", "parameters[sections]");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.includeDeleted("w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("parameters[sections]", "parameters[sections]");
      Map<String, List<String>> map0 = accountReportOptions0.optionsMap;
      accountReportOptions0.optionsMap = map0;
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.groups("parameters[sections]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("0%UshL],b9Xd4", "0%UshL],b9Xd4");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.groupMembership("kTcw(cvG?r018pp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("CJJ", "CJJ");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.admins("");
      accountReportOptions1.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.groupCategories("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("=-r %|~", "=-r %|~");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.enrollments("=-r %|~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("*SBA8t", "*SBA8t");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.groupMembership("parameters[group_membership]");
      accountReportOptions1.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.enrollmentTermId("*SBA8t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("0%UshL],b9Xd4", "0%UshL],b9Xd4");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.createdBySis("0%UshL],b9Xd4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("", "");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.courses("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("@", "@");
      accountReportOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        accountReportOptions0.admins("NjWh'o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.accounts("");
      assertNull(accountReportOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.xlist("");
      assertSame(accountReportOptions1, accountReportOptions0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, "");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.createdBySis("");
      assertEquals("", accountReportOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("", "edu.ksu.canvas.requestOptions.BaseOptions");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.userObservers("");
      assertEquals("", accountReportOptions1.getReportType());
      assertEquals("edu.ksu.canvas.requestOptions.BaseOptions", accountReportOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.courses("");
      assertNull(accountReportOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.includeDeleted((String) null);
      assertNull(accountReportOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.groups((String) null);
      assertNull(accountReportOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.enrollmentTermId("");
      assertNull(accountReportOptions1.getReportType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.sections("parameters[enrollments]");
      assertSame(accountReportOptions1, accountReportOptions0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      String string0 = accountReportOptions0.getReportType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("CJJ", "CJJ");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.groupCategories("");
      assertSame(accountReportOptions0, accountReportOptions1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions((String) null, (String) null);
      AccountReportOptions accountReportOptions1 = accountReportOptions0.users((String) null);
      assertNull(accountReportOptions1.getReportType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("@:K=N w", "@:K=N w");
      AccountReportOptions accountReportOptions1 = accountReportOptions0.enrollments("@:K=N w");
      assertEquals("@:K=N w", accountReportOptions1.getAccountId());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AccountReportOptions accountReportOptions0 = new AccountReportOptions("@:K=N w", "@:K=N w");
      String string0 = accountReportOptions0.getAccountId();
      assertEquals("@:K=N w", string0);
  }
}
