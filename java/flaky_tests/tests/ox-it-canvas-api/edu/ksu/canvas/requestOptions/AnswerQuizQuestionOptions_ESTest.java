/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:20:41 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.AnswerQuizQuestionOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AnswerQuizQuestionOptions_ESTest extends AnswerQuizQuestionOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 0);
      AnswerQuizQuestionOptions answerQuizQuestionOptions0 = new AnswerQuizQuestionOptions(integer0, integer0, "");
      Integer integer1 = answerQuizQuestionOptions0.getQuizSubmissionid();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(2657);
      AnswerQuizQuestionOptions answerQuizQuestionOptions0 = new AnswerQuizQuestionOptions((Integer) null, integer0, "V{v;[rytw:|W");
      Integer integer1 = answerQuizQuestionOptions0.getQuizSubmissionid();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-950));
      AnswerQuizQuestionOptions answerQuizQuestionOptions0 = new AnswerQuizQuestionOptions(integer0, integer0, "xb9.7'Wwgbv");
      Integer integer1 = answerQuizQuestionOptions0.getQuizSubmissionid();
      assertEquals((-950), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(200);
      AnswerQuizQuestionOptions answerQuizQuestionOptions0 = new AnswerQuizQuestionOptions(integer0, integer0, "hD+X7<>u");
      answerQuizQuestionOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        answerQuizQuestionOptions0.accessCode("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AnswerQuizQuestionOptions answerQuizQuestionOptions0 = null;
      try {
        answerQuizQuestionOptions0 = new AnswerQuizQuestionOptions((Integer) null, (Integer) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.AnswerQuizQuestionOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer(1562);
      AnswerQuizQuestionOptions answerQuizQuestionOptions0 = new AnswerQuizQuestionOptions(integer0, integer0, "^V+-o");
      AnswerQuizQuestionOptions answerQuizQuestionOptions1 = answerQuizQuestionOptions0.accessCode("^V+-o");
      assertEquals(1562, (int)answerQuizQuestionOptions1.getQuizSubmissionid());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(200);
      AnswerQuizQuestionOptions answerQuizQuestionOptions0 = new AnswerQuizQuestionOptions(integer0, integer0, "");
      Integer integer1 = answerQuizQuestionOptions0.getQuizSubmissionid();
      assertEquals(200, (int)integer1);
  }
}
