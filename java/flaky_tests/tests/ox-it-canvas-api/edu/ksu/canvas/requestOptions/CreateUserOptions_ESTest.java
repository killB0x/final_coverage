/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:51:18 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.CreateUserOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreateUserOptions_ESTest extends CreateUserOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.termsOfUse(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.skipRegistration(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.skipConfirmation(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.sendConfirmation(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.forceValidations(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.forceSelfRegistration(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.enableSisReactivation(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.destination("edu.ksu.canvas.requestOptions.BaseOptions");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      createUserOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createUserOptions0.confirmationUrl(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.confirmationUrl(true);
      assertSame(createUserOptions0, createUserOptions1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.skipRegistration(true);
      assertSame(createUserOptions0, createUserOptions1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.termsOfUse(true);
      assertSame(createUserOptions0, createUserOptions1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.enableSisReactivation(false);
      assertSame(createUserOptions1, createUserOptions0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.sendConfirmation(false);
      assertSame(createUserOptions1, createUserOptions0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.forceValidations(false);
      assertSame(createUserOptions1, createUserOptions0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.skipConfirmation(false);
      assertSame(createUserOptions0, createUserOptions1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.destination("Fe6");
      assertSame(createUserOptions0, createUserOptions1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CreateUserOptions createUserOptions0 = new CreateUserOptions();
      CreateUserOptions createUserOptions1 = createUserOptions0.forceSelfRegistration(false);
      assertSame(createUserOptions0, createUserOptions1);
  }
}
