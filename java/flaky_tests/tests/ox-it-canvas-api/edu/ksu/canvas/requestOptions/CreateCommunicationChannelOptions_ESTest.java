/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:06:55 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.model.CommunicationChannel;
import edu.ksu.canvas.requestOptions.CreateCommunicationChannelOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreateCommunicationChannelOptions_ESTest extends CreateCommunicationChannelOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions("communication_channel[token]");
      String string0 = createCommunicationChannelOptions0.getUserId();
      assertEquals("communication_channel[token]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions("");
      String string0 = createCommunicationChannelOptions0.getUserId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions("SMS");
      createCommunicationChannelOptions0.optionsMap = null;
      CommunicationChannel.Type communicationChannel_Type0 = CommunicationChannel.Type.EMAIL;
      // Undeclared exception!
      try { 
        createCommunicationChannelOptions0.type(communicationChannel_Type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions("");
      createCommunicationChannelOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createCommunicationChannelOptions0.token("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions("T@5qi?");
      // Undeclared exception!
      try { 
        createCommunicationChannelOptions0.skipConfirmation((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.CreateCommunicationChannelOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions("`k )e]UY;bO");
      createCommunicationChannelOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createCommunicationChannelOptions0.address("`k )e]UY;bO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions((String) null);
      String string0 = createCommunicationChannelOptions0.getUserId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions((String) null);
      Boolean boolean0 = Boolean.FALSE;
      CreateCommunicationChannelOptions createCommunicationChannelOptions1 = createCommunicationChannelOptions0.skipConfirmation(boolean0);
      assertSame(createCommunicationChannelOptions1, createCommunicationChannelOptions0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions((String) null);
      CreateCommunicationChannelOptions createCommunicationChannelOptions1 = createCommunicationChannelOptions0.address((String) null);
      assertSame(createCommunicationChannelOptions0, createCommunicationChannelOptions1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions((String) null);
      CreateCommunicationChannelOptions createCommunicationChannelOptions1 = createCommunicationChannelOptions0.token((String) null);
      assertSame(createCommunicationChannelOptions0, createCommunicationChannelOptions1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateCommunicationChannelOptions createCommunicationChannelOptions0 = new CreateCommunicationChannelOptions("T@R5qi?");
      CommunicationChannel.Type communicationChannel_Type0 = CommunicationChannel.Type.PUSH;
      CreateCommunicationChannelOptions createCommunicationChannelOptions1 = createCommunicationChannelOptions0.type(communicationChannel_Type0);
      assertSame(createCommunicationChannelOptions1, createCommunicationChannelOptions0);
  }
}
