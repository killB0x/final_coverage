/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:49:46 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.CreateLoginOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreateLoginOptions_ESTest extends CreateLoginOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CreateLoginOptions createLoginOptions0 = new CreateLoginOptions();
      createLoginOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createLoginOptions0.userId("hKCZx(sVv,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CreateLoginOptions createLoginOptions0 = new CreateLoginOptions();
      createLoginOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        createLoginOptions0.password("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CreateLoginOptions createLoginOptions0 = new CreateLoginOptions();
      CreateLoginOptions createLoginOptions1 = createLoginOptions0.userId("");
      assertSame(createLoginOptions1, createLoginOptions0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CreateLoginOptions createLoginOptions0 = new CreateLoginOptions();
      CreateLoginOptions createLoginOptions1 = createLoginOptions0.password("CA!NpV+g*Z");
      assertSame(createLoginOptions1, createLoginOptions0);
  }
}
