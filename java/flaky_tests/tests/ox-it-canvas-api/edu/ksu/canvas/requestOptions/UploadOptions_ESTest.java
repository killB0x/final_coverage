/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:04:05 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.UploadOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UploadOptions_ESTest extends UploadOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("edu.ksu.canvas.requestOptions.BaseOptions");
      uploadOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        uploadOptions0.size((-2842L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("}[RaUjj/+$fb2DGtDX");
      uploadOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        uploadOptions0.parentFolderPath("}[RaUjj/+$fb2DGtDX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("");
      uploadOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        uploadOptions0.parentFolderId((-2403L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("Ji3An");
      uploadOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        uploadOptions0.onDuplicateRename();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("U");
      uploadOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        uploadOptions0.contentType("U");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("K'6OY\"s29a_{NkMcy");
      UploadOptions uploadOptions1 = uploadOptions0.size(1L);
      assertSame(uploadOptions0, uploadOptions1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("K'6OY\"s29a_{NkMcy");
      UploadOptions uploadOptions1 = uploadOptions0.contentType("1=6H',");
      assertSame(uploadOptions1, uploadOptions0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("K'6OY\"s29a_{NkMcy");
      UploadOptions uploadOptions1 = uploadOptions0.parentFolderId(1L);
      assertSame(uploadOptions0, uploadOptions1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("K'6OY\"s29a_{NkMcy");
      UploadOptions uploadOptions1 = uploadOptions0.parentFolderPath("K'6OY\"s29a_{NkMcy");
      assertSame(uploadOptions1, uploadOptions0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      UploadOptions uploadOptions0 = new UploadOptions("}f1$9EF),BeH#dJ");
      UploadOptions uploadOptions1 = uploadOptions0.onDuplicateRename();
      assertSame(uploadOptions1, uploadOptions0);
  }
}
