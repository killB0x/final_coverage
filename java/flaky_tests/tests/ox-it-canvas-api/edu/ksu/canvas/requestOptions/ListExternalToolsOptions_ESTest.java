/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:23:14 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.ListExternalToolsOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListExternalToolsOptions_ESTest extends ListExternalToolsOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("KOL");
      ListExternalToolsOptions listExternalToolsOptions1 = listExternalToolsOptions0.searchTerm("KOL");
      assertSame(listExternalToolsOptions1, listExternalToolsOptions0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("");
      Boolean boolean0 = Boolean.TRUE;
      ListExternalToolsOptions listExternalToolsOptions1 = listExternalToolsOptions0.includeParentTools(boolean0);
      assertSame(listExternalToolsOptions0, listExternalToolsOptions1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("include_parents");
      String string0 = listExternalToolsOptions0.getId();
      assertEquals("include_parents", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("");
      String string0 = listExternalToolsOptions0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("S]2|g");
      listExternalToolsOptions0.optionsMap = null;
      // Undeclared exception!
      try { 
        listExternalToolsOptions0.searchTerm("S]2|g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("");
      // Undeclared exception!
      try { 
        listExternalToolsOptions0.isSelectable((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.ListExternalToolsOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("");
      // Undeclared exception!
      try { 
        listExternalToolsOptions0.searchTerm("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Search term must be at least 3 characters
         //
         verifyException("edu.ksu.canvas.requestOptions.ListExternalToolsOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions((String) null);
      // Undeclared exception!
      try { 
        listExternalToolsOptions0.searchTerm((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Search term must be at least 3 characters
         //
         verifyException("edu.ksu.canvas.requestOptions.ListExternalToolsOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions((String) null);
      Boolean boolean0 = Boolean.TRUE;
      ListExternalToolsOptions listExternalToolsOptions1 = listExternalToolsOptions0.isSelectable(boolean0);
      assertNull(listExternalToolsOptions1.getId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions((String) null);
      String string0 = listExternalToolsOptions0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ListExternalToolsOptions listExternalToolsOptions0 = new ListExternalToolsOptions("e#J4^X.iLa64Gpj");
      // Undeclared exception!
      try { 
        listExternalToolsOptions0.includeParentTools((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.ListExternalToolsOptions", e);
      }
  }
}
