/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:01:51 GMT 2022
 */

package edu.ksu.canvas.requestOptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.ksu.canvas.requestOptions.GetSingleCourseOptions;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GetSingleCourseOptions_ESTest extends GetSingleCourseOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions("total_scores");
      String string0 = getSingleCourseOptions0.getCourseId();
      assertEquals("total_scores", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions("");
      String string0 = getSingleCourseOptions0.getCourseId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions((String) null);
      GetSingleCourseOptions getSingleCourseOptions1 = getSingleCourseOptions0.account("oZ1 Sc&WFx>sJw");
      String string0 = getSingleCourseOptions1.getAccount();
      assertEquals("oZ1 Sc&WFx>sJw", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions("");
      getSingleCourseOptions0.account("");
      String string0 = getSingleCourseOptions0.getAccount();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions("");
      String string0 = getSingleCourseOptions0.getAccount();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions((String) null);
      LinkedList<GetSingleCourseOptions.Include> linkedList0 = new LinkedList<GetSingleCourseOptions.Include>();
      GetSingleCourseOptions getSingleCourseOptions1 = getSingleCourseOptions0.includes(linkedList0);
      assertSame(getSingleCourseOptions0, getSingleCourseOptions1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions((String) null);
      String string0 = getSingleCourseOptions0.getCourseId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GetSingleCourseOptions getSingleCourseOptions0 = new GetSingleCourseOptions(": f$N5a");
      // Undeclared exception!
      try { 
        getSingleCourseOptions0.includes((List<GetSingleCourseOptions.Include>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.ksu.canvas.requestOptions.BaseOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      GetSingleCourseOptions.Include getSingleCourseOptions_Include0 = GetSingleCourseOptions.Include.NEEDS_GRADING_COUNT;
      String string0 = getSingleCourseOptions_Include0.toString();
      assertEquals("needs_grading_count", string0);
  }
}
