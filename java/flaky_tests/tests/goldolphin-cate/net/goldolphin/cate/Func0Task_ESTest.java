/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 03:55:06 GMT 2022
 */

package net.goldolphin.cate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.goldolphin.cate.Action0Task;
import net.goldolphin.cate.CollectTask;
import net.goldolphin.cate.Environment;
import net.goldolphin.cate.FlattenTask;
import net.goldolphin.cate.Func0;
import net.goldolphin.cate.Func0Task;
import net.goldolphin.cate.IContinuation;
import net.goldolphin.cate.IScheduler;
import net.goldolphin.cate.SynchronizedScheduler;
import net.goldolphin.cate.Unit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Func0Task_ESTest extends Func0Task_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Func0<Action0Task> func0_0 = (Func0<Action0Task>) mock(Func0.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(func0_0).apply();
      Func0Task<Action0Task> func0Task0 = new Func0Task<Action0Task>(func0_0);
      SynchronizedScheduler synchronizedScheduler0 = new SynchronizedScheduler();
      FlattenTask<Unit, Unit, Action0Task> flattenTask0 = new FlattenTask<Unit, Unit, Action0Task>(func0Task0);
      CollectTask.IndexContinuation collectTask_IndexContinuation0 = new CollectTask.IndexContinuation((-796), (IContinuation) null);
      IContinuation iContinuation0 = flattenTask0.buildContinuation(collectTask_IndexContinuation0);
      Object object0 = new Object();
      Environment environment0 = Environment.empty();
      // Undeclared exception!
      try { 
        synchronizedScheduler0.schedule(iContinuation0, object0, environment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.goldolphin.cate.FlattenTask$Continuation", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Func0<Action0Task> func0_0 = (Func0<Action0Task>) mock(Func0.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(func0_0).apply();
      Func0Task<Action0Task> func0Task0 = new Func0Task<Action0Task>(func0_0);
      SynchronizedScheduler synchronizedScheduler0 = new SynchronizedScheduler();
      func0Task0.execute((Object) null, (IScheduler) synchronizedScheduler0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Func0<Func0Task<Object>> func0_0 = (Func0<Func0Task<Object>>) mock(Func0.class, new ViolatedAssumptionAnswer());
      Func0Task<Func0Task<Object>> func0Task0 = new Func0Task<Func0Task<Object>>(func0_0);
      IContinuation iContinuation0 = func0Task0.buildContinuation((IContinuation) null);
      assertNotNull(iContinuation0);
  }
}
