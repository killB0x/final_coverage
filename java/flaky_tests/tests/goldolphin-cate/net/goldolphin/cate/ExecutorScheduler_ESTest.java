/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 03:54:23 GMT 2022
 */

package net.goldolphin.cate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import net.goldolphin.cate.Action0;
import net.goldolphin.cate.Action0Task;
import net.goldolphin.cate.ContextAction;
import net.goldolphin.cate.Environment;
import net.goldolphin.cate.ExecutorScheduler;
import net.goldolphin.cate.Func1;
import net.goldolphin.cate.IContinuation;
import net.goldolphin.cate.ITask;
import net.goldolphin.cate.SeqTask;
import net.goldolphin.cate.Task;
import net.goldolphin.cate.WhenAnyTask;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExecutorScheduler_ESTest extends ExecutorScheduler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      ExecutorScheduler executorScheduler0 = new ExecutorScheduler(forkJoinPool0);
      WhenAnyTask<Object> whenAnyTask0 = Task.whenAny((ITask<Object, ?>[]) null);
      Task<Object, Object> task0 = Task.create((ContextAction<Object, Object>) null);
      Func1<Object, ForkJoinTask<Integer>> func1_0 = (Func1<Object, ForkJoinTask<Integer>>) mock(Func1.class, new ViolatedAssumptionAnswer());
      Task<Object, ForkJoinTask<Integer>> task1 = Task.create(func1_0);
      SeqTask<Object, Object, ForkJoinTask<Integer>> seqTask0 = new SeqTask<Object, Object, ForkJoinTask<Integer>>(task0, task1);
      IContinuation iContinuation0 = seqTask0.buildContinuation((IContinuation) null);
      WhenAnyTask.Continuation whenAnyTask_Continuation0 = whenAnyTask0.new Continuation(iContinuation0);
      Action0 action0_0 = mock(Action0.class, new ViolatedAssumptionAnswer());
      Action0Task action0Task0 = new Action0Task(action0_0);
      Environment environment0 = Environment.empty();
      executorScheduler0.schedule(whenAnyTask_Continuation0, action0Task0, environment0);
      assertTrue(environment0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExecutorScheduler executorScheduler0 = new ExecutorScheduler((Executor) null);
      // Undeclared exception!
      try { 
        executorScheduler0.schedule((IContinuation) null, (Object) null, (Environment) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.goldolphin.cate.ExecutorScheduler", e);
      }
  }
}
