/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 03:53:42 GMT 2022
 */

package net.goldolphin.cate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.concurrent.ForkJoinPool;
import net.goldolphin.cate.CollectTask;
import net.goldolphin.cate.ContextAction;
import net.goldolphin.cate.ContextCollectTask;
import net.goldolphin.cate.ContextTask;
import net.goldolphin.cate.IContinuation;
import net.goldolphin.cate.ITask;
import net.goldolphin.cate.SeqTask;
import net.goldolphin.cate.Task;
import net.goldolphin.cate.Waiter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SeqTask_ESTest extends SeqTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContextAction<Integer, Integer> contextAction0 = (ContextAction<Integer, Integer>) mock(ContextAction.class, new ViolatedAssumptionAnswer());
      Task<Integer, Integer> task0 = Task.create(contextAction0);
      SeqTask<Integer, Integer, Integer> seqTask0 = new SeqTask<Integer, Integer, Integer>(task0, task0);
      IContinuation iContinuation0 = seqTask0.buildContinuation((IContinuation) null);
      assertNotNull(iContinuation0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ContextAction<Integer, ITask<ForkJoinPool, Integer>> contextAction0 = (ContextAction<Integer, ITask<ForkJoinPool, Integer>>) mock(ContextAction.class, new ViolatedAssumptionAnswer());
      ContextTask<Integer, ITask<ForkJoinPool, Integer>> contextTask0 = new ContextTask<Integer, ITask<ForkJoinPool, Integer>>(contextAction0);
      ContextAction<CollectTask.Result, ForkJoinPool> contextAction1 = (ContextAction<CollectTask.Result, ForkJoinPool>) mock(ContextAction.class, new ViolatedAssumptionAnswer());
      ITask<ITask<ForkJoinPool, Integer>, Integer>[] iTaskArray0 = (ITask<ITask<ForkJoinPool, Integer>, Integer>[]) Array.newInstance(ITask.class, 3);
      ContextAction<ITask<ForkJoinPool, Integer>, Integer> contextAction2 = (ContextAction<ITask<ForkJoinPool, Integer>, Integer>) mock(ContextAction.class, new ViolatedAssumptionAnswer());
      Task<ITask<ForkJoinPool, Integer>, Integer> task0 = Task.create(contextAction2);
      iTaskArray0[0] = (ITask<ITask<ForkJoinPool, Integer>, Integer>) task0;
      Waiter<ITask<ForkJoinPool, Integer>, Integer> waiter0 = new Waiter<ITask<ForkJoinPool, Integer>, Integer>(task0);
      iTaskArray0[1] = (ITask<ITask<ForkJoinPool, Integer>, Integer>) waiter0;
      ContextAction<CollectTask.Result, Integer> contextAction3 = (ContextAction<CollectTask.Result, Integer>) mock(ContextAction.class, new ViolatedAssumptionAnswer());
      ContextCollectTask<ITask<ForkJoinPool, Integer>, Integer> contextCollectTask0 = new ContextCollectTask<ITask<ForkJoinPool, Integer>, Integer>(contextAction3, iTaskArray0);
      iTaskArray0[2] = (ITask<ITask<ForkJoinPool, Integer>, Integer>) contextCollectTask0;
      CollectTask<ITask<ForkJoinPool, Integer>, ForkJoinPool> collectTask0 = Task.when((ContextAction<CollectTask.Result, ForkJoinPool>) contextAction1, (ITask<ITask<ForkJoinPool, Integer>, ?>[]) iTaskArray0);
      SeqTask<Integer, ITask<ForkJoinPool, Integer>, ForkJoinPool> seqTask0 = new SeqTask<Integer, ITask<ForkJoinPool, Integer>, ForkJoinPool>(contextTask0, collectTask0);
      // Undeclared exception!
      seqTask0.buildContinuation((IContinuation) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SeqTask<Integer, Integer, Integer> seqTask0 = new SeqTask<Integer, Integer, Integer>((ITask<Integer, Integer>) null, (ITask<Integer, Integer>) null);
      ContextCollectTask.DispatcherContinuation contextCollectTask_DispatcherContinuation0 = new ContextCollectTask.DispatcherContinuation((IContinuation[]) null);
      // Undeclared exception!
      try { 
        seqTask0.buildContinuation(contextCollectTask_DispatcherContinuation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.goldolphin.cate.SeqTask", e);
      }
  }
}
