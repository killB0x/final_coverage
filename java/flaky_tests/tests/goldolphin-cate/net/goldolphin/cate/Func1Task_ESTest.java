/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 03:50:21 GMT 2022
 */

package net.goldolphin.cate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.concurrent.Delayed;
import net.goldolphin.cate.Func1;
import net.goldolphin.cate.Func1Task;
import net.goldolphin.cate.IContinuation;
import net.goldolphin.cate.IScheduler;
import net.goldolphin.cate.SynchronizedScheduler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Func1Task_ESTest extends Func1Task_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Func1<Delayed, Integer> func1_0 = (Func1<Delayed, Integer>) mock(Func1.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(func1_0).apply(any(java.util.concurrent.Delayed.class));
      Func1Task<Delayed, Integer> func1Task0 = new Func1Task<Delayed, Integer>(func1_0);
      SynchronizedScheduler synchronizedScheduler0 = new SynchronizedScheduler();
      func1Task0.execute((Object) null, (IScheduler) synchronizedScheduler0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Func1<Delayed, Integer> func1_0 = (Func1<Delayed, Integer>) mock(Func1.class, new ViolatedAssumptionAnswer());
      Func1Task<Delayed, Integer> func1Task0 = new Func1Task<Delayed, Integer>(func1_0);
      IContinuation iContinuation0 = IContinuation.END_CONTINUATION;
      IContinuation iContinuation1 = func1Task0.buildContinuation(iContinuation0);
      assertFalse(iContinuation1.equals((Object)iContinuation0));
  }
}
