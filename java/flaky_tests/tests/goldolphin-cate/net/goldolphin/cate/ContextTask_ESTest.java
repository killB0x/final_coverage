/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 03:44:29 GMT 2022
 */

package net.goldolphin.cate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import net.goldolphin.cate.ContextAction;
import net.goldolphin.cate.ContextTask;
import net.goldolphin.cate.Environment;
import net.goldolphin.cate.IContinuation;
import net.goldolphin.cate.SynchronizedScheduler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ContextTask_ESTest extends ContextTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContextAction<Integer, Integer> contextAction0 = (ContextAction<Integer, Integer>) mock(ContextAction.class, new ViolatedAssumptionAnswer());
      ContextTask<Integer, Integer> contextTask0 = new ContextTask<Integer, Integer>(contextAction0);
      IContinuation iContinuation0 = contextTask0.buildContinuation((IContinuation) null);
      SynchronizedScheduler synchronizedScheduler0 = new SynchronizedScheduler();
      Integer integer0 = new Integer(1);
      Environment environment0 = Environment.empty();
      synchronizedScheduler0.schedule(iContinuation0, integer0, environment0);
      assertTrue(environment0.isEmpty());
  }
}
