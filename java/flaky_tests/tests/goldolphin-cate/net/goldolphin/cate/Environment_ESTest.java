/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 03:38:58 GMT 2022
 */

package net.goldolphin.cate;

import org.junit.Test;
import static org.junit.Assert.*;
import net.goldolphin.cate.Environment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Environment environment0 = Environment.empty();
      Object object0 = new Object();
      Environment environment1 = environment0.extend(object0);
      Object object1 = environment1.getValue();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Environment environment0 = Environment.empty();
      Object object0 = new Object();
      Environment environment1 = environment0.extend(object0);
      Environment environment2 = environment1.getParent();
      assertTrue(environment2.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Environment environment0 = Environment.empty();
      Object object0 = new Object();
      Environment environment1 = environment0.extend(object0);
      Environment environment2 = environment1.extend(object0);
      Environment environment3 = environment2.getParent();
      assertSame(environment3, environment1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Environment environment0 = Environment.empty();
      boolean boolean0 = environment0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Environment environment0 = Environment.empty();
      Environment environment1 = environment0.extend((Object) null);
      boolean boolean0 = environment1.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Environment environment0 = Environment.empty();
      Object object0 = environment0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Environment environment0 = Environment.empty();
      Environment environment1 = environment0.getParent();
      assertNull(environment1);
  }
}
