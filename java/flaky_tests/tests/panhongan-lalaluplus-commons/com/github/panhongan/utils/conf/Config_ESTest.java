/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 20:49:31 GMT 2022
 */

package com.github.panhongan.utils.conf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.panhongan.utils.conf.Config;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Config_ESTest extends Config_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "invalid line : {}");
      int int0 = config0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      Set<String> set0 = config0.keySet();
      assertTrue(set0.contains(""));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("uik-pvJ1ZL$#QBR(UY3", "#");
      boolean boolean0 = config0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("4y!O2^/P]_3^B`c$", "4y!O2^/P]_3^B`c$");
      assertEquals("4y!O2^/P]_3^B`c$", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("com.github.panhongan.utils.conf.Config", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "invalid line : {}");
      String string0 = config0.getString("");
      assertEquals("invalid line : {}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      String string0 = config0.getString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Config config0 = new Config();
      short short0 = config0.getShort("7M9v%08f~wTJ@B(", (short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Config config0 = new Config();
      short short0 = config0.getShort("#", (short)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("9", "9");
      short short0 = config0.getShort("9");
      assertEquals((short)9, short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Config config0 = new Config();
      long long0 = config0.getLong(";a+qz*{G", 1L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Config config0 = new Config();
      long long0 = config0.getLong("4I]d,J(zd1[Y*&li|", (-1L));
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "3");
      long long0 = config0.getLong("");
      assertEquals(3L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.getInt("a>/[cl", 1930);
      assertEquals(1930, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.getInt("#", (-3199));
      assertEquals((-3199), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("ik-pvJ1ZL$#QB}IR(U3", "0");
      int int0 = config0.getInt("ik-pvJ1ZL$#QB}IR(U3");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Config config0 = new Config();
      float float0 = config0.getFloat("", 2918.0F);
      assertEquals(2918.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Config config0 = new Config();
      float float0 = config0.getFloat(".&V~", (-897.05F));
      assertEquals((-897.05F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("ik-pvJ1ZL$#QB}IR(U3", "0");
      float float0 = config0.getFloat("ik-pvJ1ZL$#QB}IR(U3");
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Config config0 = new Config();
      double double0 = config0.getDouble("", 2080.147903370291);
      assertEquals(2080.147903370291, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Config config0 = new Config();
      double double0 = config0.getDouble("2pOa AHF@", (double) (-897.05F));
      assertEquals((-897.0499877929688), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("uik-pvJ1ZL$#QBR(UY3", "0");
      double double0 = config0.getDouble("uik-pvJ1ZL$#QBR(UY3");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("9", "9");
      double double0 = config0.getDouble("9");
      assertEquals(9.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.getBoolean("", true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.parseResourceFile("S9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException: inStream parameter is null
         //
         verifyException("com.github.panhongan.utils.conf.Config", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.parse((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable
         //
         verifyException("com.github.panhongan.utils.conf.Config", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getShort((String) null, (short)61);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getShort("[^|]$tE<N!!~");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getLong((String) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getLong((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getInt((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getInt("5a8t2I9n");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getFloat((String) null, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("i<?(", "i<?(");
      // Undeclared exception!
      try { 
        config0.getFloat("i<?(");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getDouble((String) null, (-3621.3));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      // Undeclared exception!
      try { 
        config0.getDouble("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getBoolean((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getBoolean((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("$x;?},WTM", "0~");
      boolean boolean0 = config0.isNotEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "invalid line : {}");
      boolean boolean0 = config0.getBoolean("", true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("$x;?},WTM", "0~");
      // Undeclared exception!
      try { 
        config0.getDouble("$x;?},WTM", 2080.147903370291);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Config config0 = new Config();
      double double0 = config0.getDouble("", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      // Undeclared exception!
      try { 
        config0.getFloat("", (-519.954F));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Config config0 = new Config();
      float float0 = config0.getFloat("invalid line : {}", 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "invalid line : {}");
      // Undeclared exception!
      try { 
        config0.getLong("", (long) 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"invalid line : {}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Config config0 = new Config();
      long long0 = config0.getLong("pZXHvjsZqVK]`[4lXT", 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "S\"zU|g,)");
      // Undeclared exception!
      try { 
        config0.getInt("", 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"S\"zU|g,)\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.getInt("", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "invalid line : {}");
      // Undeclared exception!
      try { 
        config0.getShort("", (short) (-1602));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"invalid line : {}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Config config0 = new Config();
      short short0 = config0.getShort("r8P9p1eB<'1C!L?.*@x", (short) (-1));
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("com.github.panhongan.utils.conf.Config", (String) null);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "3");
      int int0 = config0.getInt("");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Config config0 = new Config();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("{}");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "{}");
      // Undeclared exception!
      try { 
        config0.parse("{}");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.panhongan.utils.conf.Config", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Config config0 = new Config();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("{}");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      config0.parse("{}");
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getInt((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getShort((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Config config0 = new Config();
      config0.parseResourceFile("");
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getFloat("i<?(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.toString();
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getLong("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Config config0 = new Config();
      Set<String> set0 = config0.keySet();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isNotEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getDouble("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getString((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.getBoolean("#");
      assertFalse(boolean0);
  }
}
