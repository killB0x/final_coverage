/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 01:44:45 GMT 2022
 */

package org.leialearns.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.file.LinkOption;
import java.util.Stack;
import java.util.function.Function;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.leialearns.common.TransformingIterable;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransformingIterable_ESTest extends TransformingIterable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Iterable<Integer> iterable0 = TransformingIterable.getIterable((Iterable<?>) null, (Function<Object, Integer>) null);
      assertNotNull(iterable0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Stack<LinkOption> stack0 = new Stack<LinkOption>();
      Class<Integer> class0 = Integer.class;
      LinkOption linkOption0 = LinkOption.NOFOLLOW_LINKS;
      stack0.add(linkOption0);
      TransformingIterable<Integer> transformingIterable0 = new TransformingIterable<Integer>(stack0, class0, (Function<Object, Integer>) null);
      // Undeclared exception!
      try { 
        transformingIterable0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.leialearns.common.TransformingIterable$1", e);
      }
  }
}
