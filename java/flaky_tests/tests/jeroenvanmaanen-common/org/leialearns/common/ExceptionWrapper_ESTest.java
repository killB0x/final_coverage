/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 01:42:48 GMT 2022
 */

package org.leialearns.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.junit.runner.RunWith;
import org.leialearns.common.ExceptionWrapper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExceptionWrapper_ESTest extends ExceptionWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("");
      RuntimeException runtimeException0 = ExceptionWrapper.wrap(mockRuntimeException0);
      assertSame(runtimeException0, mockRuntimeException0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExceptionWrapper.wrap((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.leialearns.common.ExceptionWrapper", e);
      }
  }
}
