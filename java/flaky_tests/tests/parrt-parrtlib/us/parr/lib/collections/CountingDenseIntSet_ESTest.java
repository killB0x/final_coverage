/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 18:37:49 GMT 2022
 */

package us.parr.lib.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Iterator;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import us.parr.lib.collections.CountingDenseIntSet;
import us.parr.lib.collections.CountingHashSet;
import us.parr.lib.collections.CountingSet;
import us.parr.lib.collections.DenseIntSet;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CountingDenseIntSet_ESTest extends CountingDenseIntSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(4277);
      // Undeclared exception!
      try { 
        denseIntSet0.counts();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet((-1));
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer(2420);
      // Undeclared exception!
      try { 
        denseIntSet0.add(integer1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2420 out of bounds for length 0
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(2381);
      DenseIntSet denseIntSet1 = new DenseIntSet(1);
      // Undeclared exception!
      try { 
        denseIntSet1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(1783);
      Iterator<Integer> iterator0 = denseIntSet0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(4277);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>();
      countingHashSet0.minus(countingDenseIntSet0);
      // Undeclared exception!
      try { 
        countingDenseIntSet0.retainAll(countingHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1038);
      countingDenseIntSet0.keySet();
      CountingHashSet<CountingDenseIntSet> countingHashSet0 = new CountingHashSet<CountingDenseIntSet>();
      CountingHashSet<CountingDenseIntSet> countingHashSet1 = new CountingHashSet<CountingDenseIntSet>(countingHashSet0);
      countingHashSet0.add(countingDenseIntSet0);
      CountingHashSet<CountingDenseIntSet> countingHashSet2 = countingHashSet0.minus(countingHashSet1);
      countingHashSet1.stream();
      CountingHashSet<CountingDenseIntSet> countingHashSet3 = countingHashSet2.minus(countingHashSet1);
      CountingHashSet<CountingDenseIntSet> countingHashSet4 = countingHashSet1.minus(countingHashSet3);
      countingHashSet2.add(countingDenseIntSet0);
      CountingHashSet<CountingDenseIntSet> countingHashSet5 = new CountingHashSet<CountingDenseIntSet>(countingHashSet4);
      countingHashSet5.add(countingDenseIntSet0);
      // Undeclared exception!
      try { 
        countingDenseIntSet0.retainAll(countingHashSet5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(0);
      denseIntSet0.keySet();
      denseIntSet0.entropy();
      denseIntSet0.entropy();
      CountingHashSet<Integer> countingHashSet0 = null;
      try {
        countingHashSet0 = new CountingHashSet<Integer>(denseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet((-1));
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(denseIntSet0);
      // Undeclared exception!
      try { 
        denseIntSet0.minus((CountingSet<Integer>) countingHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1797);
      Integer integer0 = new Integer(1754);
      DenseIntSet denseIntSet0 = new DenseIntSet(1797);
      Integer integer1 = new Integer(1797);
      denseIntSet0.set(integer1, 1755);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet1 = new CountingHashSet<Integer>();
      CountingHashSet<Integer> countingHashSet2 = countingHashSet1.minus(countingHashSet0);
      Integer integer2 = new Integer(0);
      countingHashSet2.add(integer2);
      Integer integer3 = new Integer(0);
      countingHashSet1.add(integer0);
      Integer integer4 = new Integer(379);
      countingHashSet2.add(integer4);
      countingDenseIntSet0.minus((CountingSet<Integer>) countingHashSet0);
      // Undeclared exception!
      try { 
        denseIntSet0.addAll((Collection<? extends Integer>) countingHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(0);
      // Undeclared exception!
      try { 
        denseIntSet0.argmax();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1797);
      countingDenseIntSet0.spliterator();
      int int0 = countingDenseIntSet0.size();
      assertEquals(0, int0);
      
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(0);
      assertEquals(0, countingDenseIntSet1.size());
      
      // Undeclared exception!
      try { 
        countingDenseIntSet0.addAll((Collection<? extends Integer>) countingDenseIntSet1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      countingDenseIntSet0.counts();
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(1);
      countingDenseIntSet1.clear();
      countingDenseIntSet1.entropy();
      Integer[] integerArray0 = new Integer[0];
      // Undeclared exception!
      try { 
        countingDenseIntSet1.toArray(integerArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(4277);
      Object[] objectArray0 = new Object[4];
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      countingDenseIntSet1.counts();
      CountingDenseIntSet countingDenseIntSet2 = countingDenseIntSet0.minus(countingDenseIntSet1);
      countingDenseIntSet0.clear();
      countingDenseIntSet2.counts();
      CountingDenseIntSet countingDenseIntSet3 = countingDenseIntSet2.minus(countingDenseIntSet1);
      // Undeclared exception!
      try { 
        countingDenseIntSet3.toArray(objectArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      countingDenseIntSet0.clear();
      double double0 = countingDenseIntSet0.entropy();
      assertEquals(-0.0, double0, 0.01);
      assertEquals(0, countingDenseIntSet0.total());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet1 = countingHashSet0.minus(countingDenseIntSet0);
      countingHashSet1.minus(countingDenseIntSet0);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(4255);
      Integer integer0 = new Integer(4255);
      boolean boolean0 = countingDenseIntSet1.contains(countingHashSet1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(2381);
      boolean boolean0 = denseIntSet0.contains((Object) null);
      assertFalse(boolean0);
      
      denseIntSet0.keySet();
      String string0 = denseIntSet0.toString();
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(879);
      Object object0 = new Object();
      boolean boolean0 = denseIntSet0.contains(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      CountingSet<Integer> countingSet0 = countingDenseIntSet0.minus((CountingSet<Integer>) countingHashSet0);
      assertNotSame(countingDenseIntSet0, countingSet0);
      assertFalse(countingHashSet0.contains(1));
      
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>();
      countingDenseIntSet0.minus((CountingSet<Integer>) countingHashSet0);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      countingDenseIntSet0.minus(countingDenseIntSet1);
      countingDenseIntSet0.toDenseArray();
      // Undeclared exception!
      try { 
        countingDenseIntSet1.removeAll(countingDenseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet1 = countingHashSet0.minus(countingDenseIntSet0);
      countingHashSet1.keySet();
      countingHashSet1.minus(countingDenseIntSet0);
      countingDenseIntSet0.size();
      DenseIntSet denseIntSet0 = new DenseIntSet(1849);
      denseIntSet0.toDenseArray();
      CountingHashSet<Integer> countingHashSet2 = null;
      try {
        countingHashSet2 = new CountingHashSet<Integer>(denseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet((-1));
      CountingDenseIntSet[] countingDenseIntSetArray0 = new CountingDenseIntSet[0];
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      denseIntSet0.iterator();
      // Undeclared exception!
      try { 
        countingDenseIntSet0.addAll((Collection<? extends Integer>) denseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 0;
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet1 = countingHashSet0.minus(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet2 = countingHashSet1.minus(countingDenseIntSet0);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingHashSet2);
      countingDenseIntSet0.minus((CountingSet<Integer>) countingDenseIntSet1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        countingHashSet2.removeAll(countingDenseIntSet1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CountingHashSet.removeAll
         //
         verifyException("us.parr.lib.collections.CountingHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet((-1));
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet1);
      countingDenseIntSet0.minus((CountingSet<Integer>) countingDenseIntSet1);
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 0;
      DenseIntSet denseIntSet0 = new DenseIntSet(0);
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      countingDenseIntSet0.spliterator();
      countingDenseIntSet0.entropy();
      CountingDenseIntSet countingDenseIntSet1 = denseIntSet0.minus(countingDenseIntSet0);
      countingDenseIntSet1.isEmpty();
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        countingDenseIntSet1.count((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 0;
      DenseIntSet denseIntSet0 = new DenseIntSet(0);
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      countingDenseIntSet0.spliterator();
      countingDenseIntSet0.entropy();
      CountingDenseIntSet countingDenseIntSet1 = denseIntSet0.minus(countingDenseIntSet0);
      countingDenseIntSet1.isEmpty();
      countingDenseIntSet1.argmax();
      // Undeclared exception!
      try { 
        countingDenseIntSet1.count((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      boolean boolean0 = countingDenseIntSet0.isEmpty();
      assertFalse(boolean0);
      
      countingDenseIntSet0.spliterator();
      int int0 = countingDenseIntSet0.size();
      assertEquals(0, int0);
      
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(0);
      assertEquals(0, countingDenseIntSet1.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      countingHashSet0.minus(countingDenseIntSet0);
      countingDenseIntSet0.argmax();
      Integer integer0 = new Integer(0);
      boolean boolean0 = countingDenseIntSet0.add(integer0);
      assertEquals(1, countingDenseIntSet0.total());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      int int0 = 3272;
      countingDenseIntSet0.argmax();
      countingDenseIntSet0.stream();
      countingDenseIntSet0.spliterator();
      DenseIntSet denseIntSet0 = new DenseIntSet(3272);
      // Undeclared exception!
      try { 
        denseIntSet0.parallelStream();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 0;
      DenseIntSet denseIntSet0 = new DenseIntSet(0);
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(denseIntSet0);
      Integer integer0 = new Integer(0);
      countingDenseIntSet0.count(integer0);
      countingDenseIntSet0.counts();
      // Undeclared exception!
      try { 
        denseIntSet0.removeAll(countingDenseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(1033);
      // Undeclared exception!
      try { 
        denseIntSet0.count((Integer) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      // Undeclared exception!
      try { 
        countingDenseIntSet1.containsAll(countingDenseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(2381);
      denseIntSet0.keySet();
      DenseIntSet denseIntSet1 = new DenseIntSet(2381);
      CountingDenseIntSet countingDenseIntSet0 = denseIntSet0.minus((CountingDenseIntSet) denseIntSet1);
      assertEquals(0, countingDenseIntSet0.total());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>();
      CountingHashSet<Integer> countingHashSet1 = countingHashSet0.minus(countingDenseIntSet0);
      countingDenseIntSet0.minus((CountingSet<Integer>) countingHashSet1);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      countingDenseIntSet0.minus(countingDenseIntSet1);
      Predicate<Integer> predicate0 = Predicate.isEqual((Object) countingHashSet0);
      // Undeclared exception!
      try { 
        countingDenseIntSet1.removeIf(predicate0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1783);
      // Undeclared exception!
      try { 
        countingDenseIntSet0.iterator();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(4277);
      countingDenseIntSet0.counts();
      // Undeclared exception!
      try { 
        countingDenseIntSet0.iterator();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(4277);
      Object[] objectArray0 = new Object[4];
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      countingDenseIntSet1.counts();
      // Undeclared exception!
      try { 
        countingDenseIntSet1.iterator();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(4277);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet1 = countingHashSet0.minus(countingDenseIntSet1);
      CountingDenseIntSet countingDenseIntSet2 = new CountingDenseIntSet(countingHashSet1);
      Object object0 = new Object();
      countingDenseIntSet2.contains(object0);
      // Undeclared exception!
      try { 
        countingDenseIntSet1.removeAll(countingDenseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet1 = countingHashSet0.minus(countingDenseIntSet0);
      CountingHashSet<Integer> countingHashSet2 = countingHashSet1.minus(countingDenseIntSet0);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingHashSet2);
      // Undeclared exception!
      try { 
        countingHashSet2.removeAll(countingDenseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CountingHashSet.removeAll
         //
         verifyException("us.parr.lib.collections.CountingHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(2990);
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(denseIntSet0);
      // Undeclared exception!
      try { 
        countingDenseIntSet0.removeAll(denseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(4277);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      countingDenseIntSet1.spliterator();
      countingDenseIntSet1.size();
      countingDenseIntSet1.argmax();
      countingDenseIntSet1.clear();
      // Undeclared exception!
      try { 
        countingDenseIntSet1.removeAll(countingDenseIntSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CountingSet<Integer> countingSet0 = null;
      CountingDenseIntSet countingDenseIntSet0 = null;
      try {
        countingDenseIntSet0 = new CountingDenseIntSet((CountingSet<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = (-1339);
      CountingDenseIntSet countingDenseIntSet0 = null;
      try {
        countingDenseIntSet0 = new CountingDenseIntSet((-1339));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1338
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>();
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(countingHashSet0);
      countingDenseIntSet0.stream();
      Integer integer0 = new Integer((-1994));
      // Undeclared exception!
      try { 
        countingDenseIntSet0.count(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>();
      CountingSet<Integer> countingSet0 = new CountingHashSet<Integer>();
      Integer integer0 = new Integer(1);
      countingDenseIntSet0.add(integer0);
      double double0 = countingDenseIntSet0.entropy();
      assertEquals(1, countingDenseIntSet0.size());
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      double double0 = countingDenseIntSet0.entropy();
      assertEquals(-0.0, double0, 0.01);
      assertEquals(0, countingDenseIntSet0.total());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      DenseIntSet denseIntSet0 = new DenseIntSet(0);
      denseIntSet0.total();
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      countingDenseIntSet0.spliterator();
      countingDenseIntSet0.entropy();
      Integer integer0 = new Integer(2);
      // Undeclared exception!
      try { 
        countingDenseIntSet0.count(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(1566);
      int int0 = denseIntSet0.total();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CountingHashSet<Integer> countingHashSet0 = new CountingHashSet<Integer>();
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(countingHashSet0);
      countingDenseIntSet0.size();
      // Undeclared exception!
      try { 
        countingDenseIntSet0.remove(countingHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = 0;
      DenseIntSet denseIntSet0 = new DenseIntSet(0);
      denseIntSet0.isEmpty();
      CountingHashSet<Object> countingHashSet0 = new CountingHashSet<Object>();
      // Undeclared exception!
      try { 
        denseIntSet0.stream();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1);
      Integer integer0 = new Integer(1);
      boolean boolean0 = countingDenseIntSet0.contains(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(1566);
      String string0 = denseIntSet0.toString();
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DenseIntSet denseIntSet0 = new DenseIntSet(1046);
      CountingSet<Integer> countingSet0 = null;
      denseIntSet0.toString();
      // Undeclared exception!
      try { 
        denseIntSet0.minus((CountingSet<Integer>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.DenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(1704);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      // Undeclared exception!
      try { 
        countingDenseIntSet0.remove(countingDenseIntSet1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(0);
      CountingDenseIntSet countingDenseIntSet1 = new CountingDenseIntSet(countingDenseIntSet0);
      CountingDenseIntSet countingDenseIntSet2 = new CountingDenseIntSet(countingDenseIntSet1);
      // Undeclared exception!
      try { 
        countingDenseIntSet2.toArray();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingDenseIntSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CountingDenseIntSet countingDenseIntSet0 = new CountingDenseIntSet(2381);
      assertEquals(0, countingDenseIntSet0.total());
  }
}
