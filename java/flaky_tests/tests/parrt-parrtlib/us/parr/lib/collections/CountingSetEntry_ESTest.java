/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 18:59:08 GMT 2022
 */

package us.parr.lib.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.parr.lib.collections.CountingSetEntry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CountingSetEntry_ESTest extends CountingSetEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer((-2308));
      CountingSetEntry<Object> countingSetEntry0 = new CountingSetEntry<Object>(integer0, (-4439));
      Integer integer1 = new Integer(2532);
      countingSetEntry0.setValue(integer1);
      countingSetEntry0.setValue(integer0);
      assertEquals((-2308), (int)countingSetEntry0.getValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-2308));
      CountingSetEntry<Object> countingSetEntry0 = new CountingSetEntry<Object>(integer0, (-4439));
      Integer integer1 = countingSetEntry0.getValue();
      assertEquals((-4439), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CountingSetEntry<Integer> countingSetEntry0 = new CountingSetEntry<Integer>((Integer) null, (-1));
      // Undeclared exception!
      try { 
        countingSetEntry0.setValue((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.collections.CountingSetEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CountingSetEntry<Object> countingSetEntry0 = new CountingSetEntry<Object>((Object) null, 0);
      Integer integer0 = new Integer(276);
      countingSetEntry0.setValue(integer0);
      countingSetEntry0.getValue();
      assertEquals(276, (int)countingSetEntry0.getValue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CountingSetEntry<Object> countingSetEntry0 = new CountingSetEntry<Object>((Object) null, 0);
      Integer integer0 = countingSetEntry0.getValue();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CountingSetEntry<Object> countingSetEntry0 = new CountingSetEntry<Object>((Object) null, (-510));
      countingSetEntry0.getKey();
      assertEquals((-510), (int)countingSetEntry0.getValue());
  }
}
