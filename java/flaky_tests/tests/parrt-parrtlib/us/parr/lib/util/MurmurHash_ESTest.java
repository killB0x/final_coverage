/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 18:54:28 GMT 2022
 */

package us.parr.lib.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.parr.lib.util.MurmurHash;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MurmurHash_ESTest extends MurmurHash_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MurmurHash.hashCode(objectArray0, 92797207);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = MurmurHash.update(1003, (-245));
      assertEquals((-798602008), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = MurmurHash.initialize(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = MurmurHash.initialize(19);
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = MurmurHash.finish(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = MurmurHash.finish(2018492107, 2083);
      assertEquals(1141685171, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash.hashCode((Object[]) null, 3392);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.parr.lib.util.MurmurHash", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = MurmurHash.update((-1066100278), (Object) null);
      assertEquals((-965532758), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = MurmurHash.initialize((-1432702643));
      assertEquals((-1432702643), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = MurmurHash.update(0, 19);
      assertEquals(551616757, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = MurmurHash.finish(0, (-1432702643));
      assertEquals((-1206301358), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      int int0 = MurmurHash.update(740, object0);
      assertEquals(633898358, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = MurmurHash.initialize();
      assertEquals(0, int0);
  }
}
