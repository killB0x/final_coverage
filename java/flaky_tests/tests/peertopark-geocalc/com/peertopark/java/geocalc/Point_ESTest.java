/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 10:10:54 GMT 2022
 */

package com.peertopark.java.geocalc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.peertopark.java.geocalc.Coordinate;
import com.peertopark.java.geocalc.DegreeCoordinate;
import com.peertopark.java.geocalc.Point;
import com.peertopark.java.geocalc.RadianCoordinate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point_ESTest extends Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      Point point0 = new Point(radianCoordinate0, radianCoordinate0);
      point0.latitude = 17.3866;
      String string0 = point0.toString();
      assertEquals("Point{latitude=17.3866, longitude=0.0}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = new Double(333.359370529152);
      Point point0 = Point.build(double0, double1);
      point0.hashCode();
      assertEquals(0.0, point0.getLatitude(), 0.01);
      assertEquals(333.359370529152, point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      Point point0 = new Point(radianCoordinate0, radianCoordinate0);
      point0.latitude = 17.3866;
      Double double0 = new Double(17.3866);
      Point point1 = Point.build(double0, double0);
      boolean boolean0 = point0.equals(point1);
      assertFalse(boolean0);
      assertFalse(point1.equals((Object)point0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DegreeCoordinate degreeCoordinate0 = DegreeCoordinate.build((-3917.6));
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(1.0);
      Point point0 = Point.build((Coordinate) radianCoordinate0, (Coordinate) degreeCoordinate0);
      boolean boolean0 = point0.equals(point0);
      assertEquals(57.29577951308232, point0.getLatitude(), 0.01);
      assertEquals((-3917.6), point0.getLongitude(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      Point point0 = new Point(radianCoordinate0, radianCoordinate0);
      Double double0 = new Double((-348.3280774));
      Point point1 = Point.build(double0, double0);
      boolean boolean0 = point1.equals(point0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      DegreeCoordinate degreeCoordinate0 = radianCoordinate0.getDegreeCoordinate();
      DegreeCoordinate degreeCoordinate1 = degreeCoordinate0.getDegreeCoordinate();
      Point point0 = Point.build((Coordinate) degreeCoordinate0, (Coordinate) degreeCoordinate1);
      assertEquals(0.0, point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = new Double(3600.0);
      Point point0 = Point.build(double0, double1);
      double double2 = point0.getLongitude();
      assertEquals(0.0, point0.getLatitude(), 0.01);
      assertEquals(3600.0, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate((-1.0));
      Point point0 = new Point(radianCoordinate0, radianCoordinate0);
      double double0 = point0.getLongitude();
      assertEquals((-57.29577951308232), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(674.34928);
      DegreeCoordinate degreeCoordinate0 = radianCoordinate0.getDegreeCoordinate();
      Point point0 = Point.build((Coordinate) degreeCoordinate0, (Coordinate) degreeCoordinate0);
      point0.latitude = 0.0;
      double double0 = point0.getLatitude();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      Point point0 = new Point(radianCoordinate0, radianCoordinate0);
      point0.latitude = 17.3866;
      double double0 = point0.getLatitude();
      assertEquals(17.3866, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = new Double(333.359370529152);
      Point point0 = Point.build(double1, double0);
      assertEquals(0.0, point0.getLongitude(), 0.01);
      assertEquals(333.359370529152, point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Point.build((Coordinate) null, (Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.peertopark.java.geocalc.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point point0 = null;
      try {
        point0 = new Point((Coordinate) null, (Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.peertopark.java.geocalc.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      DegreeCoordinate degreeCoordinate0 = radianCoordinate0.getDegreeCoordinate();
      Point point0 = new Point(degreeCoordinate0, radianCoordinate0);
      Double double0 = new Double(0.0);
      Double double1 = new Double(333.359370529152);
      Point point1 = Point.build(double0, double1);
      boolean boolean0 = point1.equals(point0);
      assertFalse(point0.equals((Object)point1));
      assertEquals(0.0, point1.getLatitude(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double(0.0);
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(1.0);
      Point point0 = Point.build((Coordinate) radianCoordinate0, (Coordinate) radianCoordinate0);
      Point point1 = Point.build(double0, double0);
      boolean boolean0 = point0.equals(point1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.1221298200105474);
      Point point0 = new Point(radianCoordinate0, radianCoordinate0);
      boolean boolean0 = point0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      DegreeCoordinate degreeCoordinate0 = radianCoordinate0.getDegreeCoordinate();
      Point point0 = new Point(degreeCoordinate0, radianCoordinate0);
      Double double0 = new Double(0.0);
      boolean boolean0 = point0.equals(double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate(0.0);
      DegreeCoordinate degreeCoordinate0 = radianCoordinate0.getDegreeCoordinate();
      Point point0 = new Point(degreeCoordinate0, radianCoordinate0);
      double double0 = point0.getLongitude();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DegreeCoordinate degreeCoordinate0 = DegreeCoordinate.build((-3917.6));
      Point point0 = Point.build((Coordinate) degreeCoordinate0, (Coordinate) degreeCoordinate0);
      point0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RadianCoordinate radianCoordinate0 = new RadianCoordinate((-1.0));
      Point point0 = new Point(radianCoordinate0, radianCoordinate0);
      double double0 = point0.getLatitude();
      assertEquals((-57.29577951308232), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Point.build((Double) null, (Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.peertopark.java.geocalc.Point", e);
      }
  }
}
