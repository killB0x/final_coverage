/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 02:23:10 GMT 2022
 */

package edu.psu.cse.siis.coal.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.psu.cse.siis.coal.lang.TokenMgrError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_ESTest extends TokenMgrError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("", (-2228));
      String string0 = tokenMgrError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.lang.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalError(true, 1709, 1709, 1709, (String) null, '+');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.lang.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(false, (-1321), (-1321), (-1321), (String) null, ')', (-1321));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.lang.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, 0, 0, 0, "1C", '~');
      assertEquals("Lexical error at line 0, column 0.  Encountered: \"~\" (126), after : \"1C\"", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(true, 0, (-1), 1488, "Lexical error at line 2020, column 561.  Encountered: \"k\" (107), after : \"DO6@\\L/w5E'L.x\"", ';');
      assertEquals("Lexical error at line -1, column 1488.  Encountered: <EOF> after : \"Lexical error at line 2020, column 561.  Encountered: \\\"k\\\" (107), after : \\\"DO6@\\\\L/w5E\\'L.x\\\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("&@5$-QsDeEG1'");
      assertEquals("&@5$-QsDeEG1\\'", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("8OTpt~ux>Buw");
      assertEquals("8OTpt\\u007f~ux>Buw", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(true, 2284, 3347, 1631, "\"", '5', 3347);
      String string0 = tokenMgrError0.getMessage();
      assertEquals("Lexical error at line 3347, column 1631.  Encountered: <EOF> after : \"\\\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError();
      String string0 = tokenMgrError0.getMessage();
      assertNull(string0);
  }
}
