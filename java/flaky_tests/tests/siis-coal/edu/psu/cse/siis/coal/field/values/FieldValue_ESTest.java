/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 02:35:25 GMT 2022
 */

package edu.psu.cse.siis.coal.field.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.psu.cse.siis.coal.field.values.FieldValue;
import edu.psu.cse.siis.coal.field.values.IntermediateFieldValue;
import edu.psu.cse.siis.coal.field.values.NullFieldValue;
import edu.psu.cse.siis.coal.field.values.ScalarFieldValue;
import edu.psu.cse.siis.coal.field.values.SetFieldValue;
import java.util.HashSet;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldValue_ESTest extends FieldValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ScalarFieldValue scalarFieldValue0 = new ScalarFieldValue((Object) null);
      FieldValue fieldValue0 = scalarFieldValue0.intern();
      assertFalse(fieldValue0.hasTransformerSequence());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ScalarFieldValue scalarFieldValue0 = new ScalarFieldValue((Object) null);
      Object object0 = scalarFieldValue0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SetFieldValue setFieldValue0 = new SetFieldValue();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      setFieldValue0.addAll(linkedHashSet0);
      HashSet hashSet0 = (HashSet)setFieldValue0.getValue();
      assertEquals(0, hashSet0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IntermediateFieldValue intermediateFieldValue0 = new IntermediateFieldValue();
      // Undeclared exception!
      try { 
        intermediateFieldValue0.getValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented
         //
         verifyException("edu.psu.cse.siis.coal.field.values.IntermediateFieldValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IntermediateFieldValue intermediateFieldValue0 = new IntermediateFieldValue();
      // Undeclared exception!
      try { 
        intermediateFieldValue0.intern();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented
         //
         verifyException("edu.psu.cse.siis.coal.field.values.IntermediateFieldValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullFieldValue nullFieldValue0 = NullFieldValue.v();
      boolean boolean0 = nullFieldValue0.hasTransformerSequence();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SetFieldValue setFieldValue0 = new SetFieldValue();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      linkedHashSet0.add(setFieldValue0);
      setFieldValue0.addAll(linkedHashSet0);
      // Undeclared exception!
      try { 
        setFieldValue0.intern();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
