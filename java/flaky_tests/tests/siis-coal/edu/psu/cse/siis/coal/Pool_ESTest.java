/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 02:28:23 GMT 2022
 */

package edu.psu.cse.siis.coal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.psu.cse.siis.coal.Pool;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pool_ESTest extends Pool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Pool<Integer> pool0 = new Pool<Integer>();
      Integer integer0 = new Integer(0);
      pool0.intern(integer0);
      Integer integer1 = new Integer(0);
      Integer integer2 = pool0.intern(integer1);
      assertEquals(0, (int)integer2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Pool<Object> pool0 = new Pool<Object>();
      // Undeclared exception!
      try { 
        pool0.intern((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pool<Object> pool0 = new Pool<Object>();
      Set<Object> set0 = pool0.getValues();
      pool0.intern(set0);
      Set<Object> set1 = pool0.getValues();
      assertFalse(set1.equals((Object)set0));
  }
}
