/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:19:58 GMT 2022
 */

package dev.codesoapbox.dummy4j.definitions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.definitions.DefaultUniqueValues;
import java.util.LinkedHashSet;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultUniqueValues_ESTest extends DefaultUniqueValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultUniqueValues defaultUniqueValues0 = new DefaultUniqueValues();
      Integer integer0 = new Integer(1);
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(supplier0).get();
      defaultUniqueValues0.setMaxRetries(0);
      Integer integer1 = defaultUniqueValues0.value("", supplier0);
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultUniqueValues defaultUniqueValues0 = new DefaultUniqueValues();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Supplier<LinkedHashSet<Integer>> supplier0 = (Supplier<LinkedHashSet<Integer>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(linkedHashSet0).when(supplier0).get();
      LinkedHashSet<Integer> linkedHashSet1 = defaultUniqueValues0.value("d=wX{y2XF2]^;", supplier0);
      assertSame(linkedHashSet0, linkedHashSet1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultUniqueValues defaultUniqueValues0 = new DefaultUniqueValues();
      // Undeclared exception!
      try { 
        defaultUniqueValues0.within((Supplier<Integer>) null, (Consumer<Supplier<Integer>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.definitions.DefaultUniqueValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultUniqueValues defaultUniqueValues0 = new DefaultUniqueValues();
      defaultUniqueValues0.setMaxRetries((-1426));
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultUniqueValues0.value("' uniqueness group", supplier0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Reached the maximum limit of retries (-1426) for generating a unique value in the '' uniqueness group' uniqueness group
         //
         verifyException("dev.codesoapbox.dummy4j.definitions.DefaultUniqueValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultUniqueValues defaultUniqueValues0 = new DefaultUniqueValues();
      // Undeclared exception!
      try { 
        defaultUniqueValues0.of((Supplier<Integer>) null, (Function<Supplier<Integer>, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.definitions.DefaultUniqueValues", e);
      }
  }
}
