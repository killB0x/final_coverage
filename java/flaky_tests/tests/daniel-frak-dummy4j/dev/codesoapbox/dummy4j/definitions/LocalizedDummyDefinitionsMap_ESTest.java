/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:21:03 GMT 2022
 */

package dev.codesoapbox.dummy4j.definitions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.definitions.LocalizedDummyDefinitionsMap;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizedDummyDefinitionsMap_ESTest extends LocalizedDummyDefinitionsMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap(".", (Map<String, Object>) null);
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.toString();
      // Undeclared exception!
      try { 
        localizedDummyDefinitionsMap0.resolve(".");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("dev.codesoapbox.dummy4j.definitions.LocalizedDummyDefinitionsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("@", hashMap0);
      localizedDummyDefinitionsMap0.equals(localizedDummyDefinitionsMap0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "";
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      hashMap0.put("", localizedDummyDefinitionsMap0);
      localizedDummyDefinitionsMap0.resolve(string0);
      String string1 = "LocalizedDummyDefinitions{locale='";
      String string2 = "7cF%";
      localizedDummyDefinitionsMap0.hashCode();
      hashMap0.put(string2, string2);
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap(string1, hashMap0);
      localizedDummyDefinitionsMap0.equals(hashMap0);
      hashMap0.put(string0, localizedDummyDefinitionsMap1);
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap2 = new LocalizedDummyDefinitionsMap(string0, hashMap0);
      localizedDummyDefinitionsMap2.equals(hashMap0);
      localizedDummyDefinitionsMap2.hashCode();
      localizedDummyDefinitionsMap0.equals(localizedDummyDefinitionsMap2);
      localizedDummyDefinitionsMap2.equals(string0);
      localizedDummyDefinitionsMap1.getLocale();
      localizedDummyDefinitionsMap1.toString();
      Object object0 = new Object();
      localizedDummyDefinitionsMap1.equals(object0);
      localizedDummyDefinitionsMap0.getLocale();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      assertEquals("", localizedDummyDefinitionsMap0.getLocale());
      
      localizedDummyDefinitionsMap0.resolve("");
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap("", hashMap0);
      localizedDummyDefinitionsMap1.equals(localizedDummyDefinitionsMap0);
      hashMap0.put("", localizedDummyDefinitionsMap1);
      localizedDummyDefinitionsMap0.toString();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String string0 = "k<{?g";
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("Gx'eliJgY+<N{DzN", hashMap0);
      hashMap0.put("k<{?g", localizedDummyDefinitionsMap0);
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap("", hashMap0);
      String string1 = "kQK!zCiI;u0";
      hashMap0.replace("&q-pM", (Object) localizedDummyDefinitionsMap1, (Object) "kQK!zCiI;u0");
      hashMap0.keySet();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap2 = new LocalizedDummyDefinitionsMap("", hashMap0);
      // Undeclared exception!
      try { 
        localizedDummyDefinitionsMap2.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap((String) null, hashMap0);
      // Undeclared exception!
      try { 
        localizedDummyDefinitionsMap0.resolve((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.definitions.LocalizedDummyDefinitionsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap((String) null, (Map<String, Object>) null);
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap0.equals((Object) null);
      localizedDummyDefinitionsMap0.equals((Object) null);
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.hashCode();
      // Undeclared exception!
      try { 
        localizedDummyDefinitionsMap0.resolve((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.definitions.LocalizedDummyDefinitionsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("", "");
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      localizedDummyDefinitionsMap0.resolve("");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("[\"n", hashMap0);
      Object object0 = new Object();
      localizedDummyDefinitionsMap0.equals(object0);
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.equals(object0);
      Object object1 = new Object();
      localizedDummyDefinitionsMap0.equals(object1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("", "");
      hashMap0.put("", "");
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap0.resolve("G");
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.resolve("&!(i%[,ky");
      localizedDummyDefinitionsMap0.resolve("\"%9)_Usd6tdU6>0");
      localizedDummyDefinitionsMap0.equals("G");
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.resolve("");
      localizedDummyDefinitionsMap0.equals("");
      localizedDummyDefinitionsMap0.equals("");
      localizedDummyDefinitionsMap0.resolve("LocalizedDummyDefinitions{locale='', map={=}}");
      Object object0 = new Object();
      localizedDummyDefinitionsMap0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap(".KD]", hashMap1);
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.resolve("");
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap0.equals("LocalizedDummyDefinitions{locale='.KD]', map={}}");
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap(".KD]", hashMap0);
      localizedDummyDefinitionsMap1.toString();
      Object object0 = new Object();
      hashMap1.put("", object0);
      Object object1 = new Object();
      localizedDummyDefinitionsMap1.equals(localizedDummyDefinitionsMap0);
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap1.resolve("{\"4");
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap2 = new LocalizedDummyDefinitionsMap("I\"", hashMap0);
      localizedDummyDefinitionsMap2.resolve("$.^8\"3vcld~gCv(");
      localizedDummyDefinitionsMap2.hashCode();
      localizedDummyDefinitionsMap2.toString();
      localizedDummyDefinitionsMap1.toString();
      localizedDummyDefinitionsMap1.resolve("LocalizedDummyDefinitions{locale='.KD]', map={}}");
      localizedDummyDefinitionsMap2.toString();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("Psa%uo )+", (Map<String, Object>) null);
      localizedDummyDefinitionsMap0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap("", hashMap0);
      localizedDummyDefinitionsMap1.equals(localizedDummyDefinitionsMap0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap(":)'k I\"jUZsqq=v", hashMap0);
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap("&x-p", hashMap0);
      localizedDummyDefinitionsMap0.equals(localizedDummyDefinitionsMap1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      BiFunction<Object, Object, LocalizedDummyDefinitionsMap> biFunction0 = (BiFunction<Object, Object, LocalizedDummyDefinitionsMap>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.computeIfPresent("", biFunction0);
      hashMap0.remove((Object) "");
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap0.resolve("LocalizedDummyDefinitions{locale='', map={}}");
      localizedDummyDefinitionsMap0.hashCode();
      Object object0 = new Object();
      localizedDummyDefinitionsMap0.equals(object0);
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      hashMap1.put("r,6\"=t)l~pzP", (Object) null);
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap("r,6\"=t)l~pzP", hashMap1);
      localizedDummyDefinitionsMap1.equals((Object) null);
      localizedDummyDefinitionsMap1.resolve("");
      localizedDummyDefinitionsMap0.equals(localizedDummyDefinitionsMap1);
      localizedDummyDefinitionsMap0.resolve("");
      localizedDummyDefinitionsMap0.equals((Object) null);
      localizedDummyDefinitionsMap0.getLocale();
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      String string0 = localizedDummyDefinitionsMap0.getLocale();
      assertEquals("", string0);
      
      String string1 = localizedDummyDefinitionsMap0.toString();
      assertEquals("LocalizedDummyDefinitions{locale='', map={}}", string1);
      
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap0.hashCode();
      Object object0 = new Object();
      localizedDummyDefinitionsMap0.resolve("LocalizedDummyDefinitions{locale='', map={}}");
      localizedDummyDefinitionsMap0.toString();
      localizedDummyDefinitionsMap0.toString();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap("LocalizedDummyDefinitions{locale='', map={}}", hashMap0);
      hashMap0.put("", localizedDummyDefinitionsMap1);
      localizedDummyDefinitionsMap0.equals(object0);
      localizedDummyDefinitionsMap0.toString();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("r", hashMap0);
      localizedDummyDefinitionsMap0.equals(hashMap0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      List<String> list0 = localizedDummyDefinitionsMap0.resolve("");
      boolean boolean0 = localizedDummyDefinitionsMap0.equals(localizedDummyDefinitionsMap0);
      assertTrue(boolean0);
      
      String string0 = localizedDummyDefinitionsMap0.toString();
      assertEquals("LocalizedDummyDefinitions{locale='', map={}}", string0);
      
      localizedDummyDefinitionsMap0.hashCode();
      localizedDummyDefinitionsMap0.equals(list0);
      localizedDummyDefinitionsMap0.equals(hashMap0);
      Object object0 = new Object();
      hashMap0.put("LocalizedDummyDefinitions{locale='', map={}}", object0);
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap1 = new LocalizedDummyDefinitionsMap("", hashMap0);
      boolean boolean1 = localizedDummyDefinitionsMap0.equals("");
      assertFalse(boolean1);
      
      localizedDummyDefinitionsMap1.toString();
      List<String> list1 = localizedDummyDefinitionsMap0.resolve("LocalizedDummyDefinitions{locale='', map={LocalizedDummyDefinitions{locale='', map={}}=java.lang.Object@749b3cbc}}");
      assertEquals(0, list1.size());
      assertTrue(localizedDummyDefinitionsMap0.equals((Object)localizedDummyDefinitionsMap1));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("Zt~66", hashMap0);
      localizedDummyDefinitionsMap0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LocalizedDummyDefinitionsMap localizedDummyDefinitionsMap0 = new LocalizedDummyDefinitionsMap("", hashMap0);
      String string0 = localizedDummyDefinitionsMap0.toString();
      assertEquals("LocalizedDummyDefinitions{locale='', map={}}", string0);
  }
}
