/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:41:32 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.DefaultRandomService;
import dev.codesoapbox.dummy4j.Dummy4j;
import dev.codesoapbox.dummy4j.ExpressionResolver;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnBuilder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnValidator;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.ModTenFormula;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IsmnBuilder_ESTest extends IsmnBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      String[] stringArray0 = new String[1];
      IsmnBuilder ismnBuilder1 = ismnBuilder0.withRandomSeparator(stringArray0);
      assertSame(ismnBuilder1, ismnBuilder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      String[] stringArray0 = new String[0];
      IsmnBuilder ismnBuilder1 = ismnBuilder0.withRandomRegistrant(stringArray0);
      assertSame(ismnBuilder0, ismnBuilder1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      // Undeclared exception!
      try { 
        ismnBuilder0.withRegistrant("g&/QsuB*zxz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Registrant must be 1-7 digits long, given: g&/QsuB*zxz
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      // Undeclared exception!
      try { 
        ismnBuilder0.withRegistrant((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IsmnValidator ismnValidator0 = new IsmnValidator();
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "One";
      // Undeclared exception!
      try { 
        ismnBuilder0.withRandomRegistrant(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Only digits allowed, given: One
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IsmnValidator ismnValidator0 = new IsmnValidator();
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      IsmnBuilder ismnBuilder1 = ismnBuilder0.withSeparator("g&/QsuB*zxz");
      assertSame(ismnBuilder1, ismnBuilder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      IsmnBuilder ismnBuilder1 = ismnBuilder0.withRegistrant("9790");
      assertSame(ismnBuilder1, ismnBuilder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      IsmnBuilder ismnBuilder1 = ismnBuilder0.withRandomSeparator();
      assertSame(ismnBuilder0, ismnBuilder1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IsmnValidator ismnValidator0 = new IsmnValidator();
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      // Undeclared exception!
      try { 
        ismnBuilder0.withRandomRegistrant((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IsmnValidator ismnValidator0 = new IsmnValidator();
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      // Undeclared exception!
      try { 
        ismnBuilder0.withRandomSeparator((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      IsmnBuilder ismnBuilder0 = new IsmnBuilder((Dummy4j) null, modTenFormula0, ismnValidator0);
      IsmnBuilder ismnBuilder1 = ismnBuilder0.withRandomRegistrant();
      assertSame(ismnBuilder1, ismnBuilder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      IsmnBuilder ismnBuilder0 = new IsmnBuilder(dummy4j0, modTenFormula0, ismnValidator0);
      // Undeclared exception!
      try { 
        ismnBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ModTenFormula modTenFormula0 = new ModTenFormula();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      IsmnBuilder ismnBuilder0 = new IsmnBuilder(dummy4j0, modTenFormula0, ismnValidator0);
      ismnBuilder0.withoutSeparator();
      ismnBuilder0.build();
      assertEquals(864781251L, (long)dummy4j0.getSeed());
      assertEquals(864781251L, defaultRandomService0.getSeed());
  }
}
