/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:13:52 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.finance;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.dummies.address.Address;
import dev.codesoapbox.dummy4j.dummies.finance.CreditCard;
import dev.codesoapbox.dummy4j.dummies.finance.CreditCardProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreditCard_ESTest extends CreditCard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address("wQOa<0", "wQOa<0", "wQOa<0", "wQOa<0");
      CreditCard creditCard0 = new CreditCard("wQOa<0", creditCardProvider0, "wQOa<0", address0, "wQOa<0", "wQOa<0");
      CreditCardProvider creditCardProvider1 = CreditCardProvider.AMERICAN_EXPRESS;
      CreditCard creditCard1 = new CreditCard("wQOa<0", creditCardProvider1, "wQOa<0", address0, "wQOa<0", "wQOa<0");
      boolean boolean0 = creditCard1.equals(creditCard0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address("wNMw ", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wNMw ", creditCardProvider0, "wNMw ", address0, "W{6Eo?", "wNMw ");
      CreditCardProvider creditCardProvider1 = creditCard0.getProvider();
      CreditCard creditCard1 = new CreditCard("wNMw ", creditCardProvider1, "wNMw ", address0, "wNMw ", ",(J|!, W{6Eo? dev.codesoapbox.dummy4j.dummies.finance.IINRange, W{6Eo?");
      boolean boolean0 = creditCard1.equals(creditCard0);
      assertEquals("wNMw ", creditCard1.getNumber());
      assertEquals("wNMw ", creditCard0.getNumber());
      assertEquals("wNMw ", creditCard0.getOwnerName());
      assertEquals("wNMw ", creditCard1.getOwnerName());
      assertEquals(",(J|!, W{6Eo? dev.codesoapbox.dummy4j.dummies.finance.IINRange, W{6Eo?", creditCard1.getSecurityCode());
      assertEquals("W{6Eo?", creditCard0.getExpiryDate());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.JCB;
      Address address0 = new Address("Eumber", "Eumber", "Eumber", "Eumber");
      CreditCard creditCard0 = new CreditCard("Vzmbeg", creditCardProvider0, "Eumber", address0, "Eumber", "Eumber");
      Address address1 = new Address("Vzmbeg", " ", ", provider=", ", provider=");
      CreditCard creditCard1 = new CreditCard("Vzmbeg", creditCardProvider0, "Eumber", address1, "Eumber", ", provider=");
      boolean boolean0 = creditCard0.equals(creditCard1);
      assertFalse(boolean0);
      assertEquals("Vzmbeg", creditCard1.getNumber());
      assertEquals(", provider=", creditCard1.getSecurityCode());
      assertEquals("Eumber", creditCard1.getExpiryDate());
      assertEquals("Eumber", creditCard1.getOwnerName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.JCB;
      Address address0 = new Address("Eumber", "Eumber", "Eumber", "Eumber");
      CreditCard creditCard0 = new CreditCard("Vzmbeg", creditCardProvider0, "Vzmbeg", address0, "Eumber", "Vzmbeg");
      CreditCard creditCard1 = new CreditCard("Vzmbeg", creditCardProvider0, "Eumber", address0, "Eumber", "Eumber");
      boolean boolean0 = creditCard0.equals(creditCard1);
      assertEquals("Vzmbeg", creditCard0.getOwnerName());
      assertEquals("Vzmbeg", creditCard1.getNumber());
      assertEquals("Eumber", creditCard1.getSecurityCode());
      assertEquals("Vzmbeg", creditCard0.getSecurityCode());
      assertFalse(boolean0);
      assertEquals("Eumber", creditCard0.getExpiryDate());
      assertEquals("Eumber", creditCard1.getOwnerName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      CreditCardProvider creditCardProvider1 = CreditCardProvider.MASTER_CARD;
      CreditCard creditCard1 = new CreditCard("wN$w ", creditCardProvider1, "wN$w ", address0, "W{6Eo?", "Missing values for the following fields: ");
      boolean boolean0 = creditCard0.equals(creditCard1);
      assertEquals("Missing values for the following fields: ", creditCard1.getSecurityCode());
      assertFalse(boolean0);
      assertEquals("W{6Eo?", creditCard1.getExpiryDate());
      assertEquals("wN$w ", creditCard1.getOwnerName());
      assertEquals("wN$w ", creditCard1.getNumber());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.MAESTRO;
      Address address0 = new Address("t#I7;Z+317Y~k", "5CF!$+M", "5CF!$+M", "&IGmH;fl;");
      CreditCard creditCard0 = new CreditCard("t#I7;Z+317Y~k", creditCardProvider0, "t#I7;Z+317Y~k", address0, "d*", "&#5Ot3@6j_x)0f");
      CreditCard creditCard1 = new CreditCard("expiryDate", creditCardProvider0, "&IGmH;fl;", address0, "5CF!$+M", "A6'UVMFxiJtqrb>");
      boolean boolean0 = creditCard0.equals(creditCard1);
      assertEquals("A6'UVMFxiJtqrb>", creditCard1.getSecurityCode());
      assertEquals("expiryDate", creditCard1.getNumber());
      assertFalse(boolean0);
      assertEquals("&IGmH;fl;", creditCard1.getOwnerName());
      assertEquals("5CF!$+M", creditCard1.getExpiryDate());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.MAESTRO;
      Address address0 = new Address("t#I7;Z+317Y~k", "t#I7;Z+317Y~k", "t#I7;Z+317Y~k", "&IGmH;fl;");
      CreditCard creditCard0 = new CreditCard("rYCA C7w=hL,:#i", creditCardProvider0, "t#I7;Z+317Y~k, t#I7;Z+317Y~k t#I7;Z+317Y~k, &IGmH;fl;", address0, "&#5Ot3@6j_x)0f", "t#I7;Z+317Y~k");
      boolean boolean0 = creditCard0.equals(creditCard0);
      assertEquals("t#I7;Z+317Y~k, t#I7;Z+317Y~k t#I7;Z+317Y~k, &IGmH;fl;", creditCard0.getOwnerName());
      assertEquals("rYCA C7w=hL,:#i", creditCard0.getNumber());
      assertEquals("t#I7;Z+317Y~k", creditCard0.getSecurityCode());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      Object object0 = new Object();
      boolean boolean0 = creditCard0.equals(object0);
      assertEquals("wN$w ", creditCard0.getNumber());
      assertEquals("W{6Eo?", creditCard0.getExpiryDate());
      assertEquals("wN$w ", creditCard0.getOwnerName());
      assertFalse(boolean0);
      assertEquals("wN$w ", creditCard0.getSecurityCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Address address0 = new Address("xp7iyate", "xp7iyate", "xp7iyate", "xp7iyate");
      CreditCard creditCard0 = null;
      try {
        creditCard0 = new CreditCard("xp7iyate", (CreditCardProvider) null, "xp7iyate", address0, "xp7iyate", "xp7iyate");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Missing values for the following fields: provider
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.finance.CreditCard", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.DISCOVER;
      CreditCard creditCard0 = null;
      try {
        creditCard0 = new CreditCard("", creditCardProvider0, "", (Address) null, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Missing values for the following fields: number, ownerName, expiryDate, securityCode, owner address
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.finance.CreditCard", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      creditCard0.hashCode();
      assertEquals("wN$w ", creditCard0.getNumber());
      assertEquals("wN$w ", creditCard0.getOwnerName());
      assertEquals("W{6Eo?", creditCard0.getExpiryDate());
      assertEquals("wN$w ", creditCard0.getSecurityCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      String string0 = creditCard0.getNumber();
      assertEquals("W{6Eo?", creditCard0.getExpiryDate());
      assertEquals("wN$w ", creditCard0.getOwnerName());
      assertEquals("wN$w ", string0);
      assertEquals("wN$w ", creditCard0.getSecurityCode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      String string0 = creditCard0.getExpiryDate();
      assertEquals("wN$w ", creditCard0.getOwnerName());
      assertEquals("W{6Eo?", string0);
      assertEquals("wN$w ", creditCard0.getSecurityCode());
      assertEquals("wN$w ", creditCard0.getNumber());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      creditCard0.getOwnerAddress();
      assertEquals("wN$w ", creditCard0.getOwnerName());
      assertEquals("W{6Eo?", creditCard0.getExpiryDate());
      assertEquals("wN$w ", creditCard0.getSecurityCode());
      assertEquals("wN$w ", creditCard0.getNumber());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      String string0 = creditCard0.getOwnerName();
      assertEquals("wN$w ", creditCard0.getSecurityCode());
      assertEquals("W{6Eo?", creditCard0.getExpiryDate());
      assertEquals("wN$w ", creditCard0.getNumber());
      assertEquals("wN$w ", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address(",(J|!", "W{6Eo?", "dev.codesoapbox.dummy4j.dummies.finance.IINRange", "W{6Eo?");
      CreditCard creditCard0 = new CreditCard("wN$w ", creditCardProvider0, "wN$w ", address0, "W{6Eo?", "wN$w ");
      CreditCardProvider creditCardProvider1 = creditCard0.getProvider();
      CreditCard creditCard1 = new CreditCard("wN$w ", creditCardProvider1, "wN$w ", address0, "W{6Eo?", "Missing values for the following fields: ");
      boolean boolean0 = creditCard0.equals(creditCard1);
      assertEquals("W{6Eo?", creditCard1.getExpiryDate());
      assertEquals("wN$w ", creditCard1.getNumber());
      assertFalse(boolean0);
      assertEquals("wN$w ", creditCard1.getOwnerName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address("wQOa<0", "wQOa<0", "wQOa<0", "wQOa<0");
      CreditCard creditCard0 = new CreditCard("wQOa<0", creditCardProvider0, "wQOa<0", address0, "wQOa<0", "wQOa<0");
      String string0 = creditCard0.getSecurityCode();
      assertEquals("wQOa<0", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CreditCardProvider creditCardProvider0 = CreditCardProvider.AMERICAN_EXPRESS;
      Address address0 = new Address("wQOa<0", "wQOa<0", "wQOa<0", "wQOa<0");
      CreditCard creditCard0 = new CreditCard("wQOa<0", creditCardProvider0, "wQOa<0", address0, "wQOa<0", "wQOa<0");
      String string0 = creditCard0.toString();
      assertEquals("CreditCard{number='wQOa<0', provider=American Express, ownerName='wQOa<0', ownerAddress='wQOa<0, wQOa<0 wQOa<0, wQOa<0', expiryDate='wQOa<0', securityCode='wQOa<0'}", string0);
  }
}
