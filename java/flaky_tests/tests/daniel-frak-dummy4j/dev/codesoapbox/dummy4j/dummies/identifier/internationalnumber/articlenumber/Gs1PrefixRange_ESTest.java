/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:30:58 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.Gs1PrefixRange;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Gs1PrefixRange_ESTest extends Gs1PrefixRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Gs1PrefixRange[] gs1PrefixRangeArray0 = Gs1PrefixRange.values();
      assertEquals(50, gs1PrefixRangeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.valueOf("BULGARIA");
      assertEquals(Gs1PrefixRange.BULGARIA, gs1PrefixRange0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.valueOf("UPCA_COMPATIBLE");
      assertEquals(0, gs1PrefixRange0.getMin());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.UPCA_COMPATIBLE;
      int int0 = gs1PrefixRange0.getMin();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.ARGENTINA;
      int int0 = gs1PrefixRange0.getMax();
      assertEquals(779, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.SYRIA;
      boolean boolean0 = gs1PrefixRange0.isSingleValue();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.GERMANY;
      boolean boolean0 = gs1PrefixRange0.isSingleValue();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.GUATEMALA;
      // Undeclared exception!
      try { 
        gs1PrefixRange0.getMax();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.Gs1PrefixRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Gs1PrefixRange gs1PrefixRange0 = Gs1PrefixRange.BOSNIA_HERZEGOVINA;
      int int0 = gs1PrefixRange0.getMin();
      assertEquals(387, int0);
  }
}
