/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:58:25 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.color;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.DefaultRandomService;
import dev.codesoapbox.dummy4j.Dummy4j;
import dev.codesoapbox.dummy4j.ExpressionResolver;
import dev.codesoapbox.dummy4j.dummies.color.CMYK;
import dev.codesoapbox.dummy4j.dummies.color.ColorDummy;
import dev.codesoapbox.dummy4j.dummies.color.HSL;
import dev.codesoapbox.dummy4j.dummies.color.HSLA;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ColorDummy_ESTest extends ColorDummy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long(0L);
      DefaultRandomService defaultRandomService0 = new DefaultRandomService(long0);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      // Undeclared exception!
      try { 
        colorDummy0.basicName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long(0L);
      DefaultRandomService defaultRandomService0 = new DefaultRandomService(long0);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      defaultRandomService0.nextFloat(1589.5046F);
      ColorDummy colorDummy0 = dummy4j0.color();
      Color color0 = colorDummy0.rgba();
      assertEquals(429496729, color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long(0L);
      DefaultRandomService defaultRandomService0 = new DefaultRandomService(long0);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      defaultRandomService0.nextInt();
      ColorDummy colorDummy0 = dummy4j0.color();
      Color color0 = colorDummy0.rgb();
      assertEquals((-16777215), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Long long0 = new Long(0L);
      DefaultRandomService defaultRandomService0 = new DefaultRandomService(long0);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      defaultRandomService0.nextLong(0L);
      ColorDummy colorDummy0 = dummy4j0.color();
      HSL hSL0 = colorDummy0.hsl();
      assertEquals(36.0F, hSL0.getHue(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      colorDummy0.rgba();
      colorDummy0.hsb();
      colorDummy0.cmyk();
      colorDummy0.hsba();
      assertEquals(271743312L, (long)dummy4j0.getSeed());
      assertEquals(271743312L, defaultRandomService0.getSeed());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long(0L);
      DefaultRandomService defaultRandomService0 = new DefaultRandomService(long0);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      String string0 = colorDummy0.hexAlpha();
      assertEquals("#00000000", string0);
      
      HSLA hSLA0 = colorDummy0.hsla();
      assertEquals(36.0F, hSLA0.getHue(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.rgba();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.rgb();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.hsla();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.hsl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.hsba();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.hsb();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.hex();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.cmyk();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      colorDummy0.hsba();
      assertEquals((-117665566L), (long)dummy4j0.getSeed());
      assertEquals((-117665566L), defaultRandomService0.getSeed());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      colorDummy0.hsb();
      assertEquals((-646427499L), (long)dummy4j0.getSeed());
      assertEquals((-646427499L), defaultRandomService0.getSeed());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColorDummy colorDummy0 = new ColorDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        colorDummy0.hexAlpha();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Long long0 = new Long(0L);
      DefaultRandomService defaultRandomService0 = new DefaultRandomService(long0);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      HSL hSL0 = colorDummy0.hsl();
      assertEquals(0.1F, hSL0.getSaturation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long(0L);
      DefaultRandomService defaultRandomService0 = new DefaultRandomService(long0);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      Color color0 = colorDummy0.rgb();
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      // Undeclared exception!
      try { 
        colorDummy0.name();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = new ColorDummy(dummy4j0);
      String string0 = colorDummy0.hex();
      assertEquals((-1970779410L), (long)dummy4j0.getSeed());
      assertEquals("#000000", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      CMYK cMYK0 = colorDummy0.cmyk();
      assertEquals(0.1F, cMYK0.getMagenta(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = new ColorDummy(dummy4j0);
      // Undeclared exception!
      try { 
        colorDummy0.additionalName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = new ColorDummy(dummy4j0);
      colorDummy0.hsla();
      colorDummy0.hsba();
      colorDummy0.rgba();
      colorDummy0.cmyk();
      assertEquals(1238088822L, (long)dummy4j0.getSeed());
      assertEquals(1238088822L, defaultRandomService0.getSeed());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      ColorDummy colorDummy0 = dummy4j0.color();
      // Undeclared exception!
      try { 
        colorDummy0.primaryName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.color.ColorDummy", e);
      }
  }
}
