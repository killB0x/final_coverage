/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:04:08 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.shared.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.dummies.shared.math.NumberValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NumberValidator_ESTest extends NumberValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberValidator.inRange((-1.0F), (-1874.6758F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberValidator.inRange(5433.7666F, 0.0F, (-2000.3F));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Given range from 0.0 to -2000.3 is invalid
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.shared.math.NumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NumberValidator.betweenZeroAndOne(1.0F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberValidator.inRange(0.0F, (-1874.6758F), (-1.0F));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Given value (0.0) is out of range (-1874.6758--1.0).
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.shared.math.NumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NumberValidator.inRange(790.9692F, 790.9692F, 790.9692F);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberValidator.inRange((-3775.2805F), 1359.7833F, 1359.7833F);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Given value (-3775.2805) is out of range (1359.7833-1359.7833).
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.shared.math.NumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NumberValidator.betweenZeroAndOne(0.0F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberValidator.betweenZeroAndOne(425.754F);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Given value (425.754) is out of range (0.0-1.0).
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.shared.math.NumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberValidator.betweenZeroAndOne((-1337.3038F));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Given value (-1337.3038) is out of range (0.0-1.0).
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.shared.math.NumberValidator", e);
      }
  }
}
