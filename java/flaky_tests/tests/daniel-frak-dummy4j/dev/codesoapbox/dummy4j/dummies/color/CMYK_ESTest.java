/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:43:28 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.color;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.dummies.color.CMYK;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMYK_ESTest extends CMYK_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(0.0F, 0.0F, 0.0F, 1.0F);
      boolean boolean0 = cMYK0.equals(cMYK1);
      assertEquals(0.0F, cMYK1.getMagenta(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, cMYK1.getCyan(), 0.01F);
      assertFalse(cMYK1.equals((Object)cMYK0));
      assertEquals(0.0F, cMYK1.getYellow(), 0.01F);
      assertEquals(1.0F, cMYK1.getBlack(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(0.0F, 0.0F, 1.0F, 1.0F);
      boolean boolean0 = cMYK0.equals(cMYK1);
      assertEquals(1.0F, cMYK1.getBlack(), 0.01F);
      assertEquals(1.0F, cMYK1.getYellow(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, cMYK1.getCyan(), 0.01F);
      assertEquals(0.0F, cMYK1.getMagenta(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(0.0F, 1.0F, 0.0F, 0.0F);
      boolean boolean0 = cMYK0.equals(cMYK1);
      assertEquals(1.0F, cMYK1.getMagenta(), 0.01F);
      assertFalse(cMYK1.equals((Object)cMYK0));
      assertEquals(0.0F, cMYK1.getYellow(), 0.01F);
      assertEquals(0.0F, cMYK1.getCyan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, cMYK1.getBlack(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 1.0F, 1.0F);
      CMYK cMYK1 = new CMYK(1.0F, 0.0F, 1.0F, 0.0F);
      boolean boolean0 = cMYK0.equals(cMYK1);
      assertEquals(1.0F, cMYK1.getCyan(), 0.01F);
      assertFalse(boolean0);
      assertEquals(1.0F, cMYK0.getBlack(), 0.01F);
      assertEquals(1.0F, cMYK1.getYellow(), 0.01F);
      assertEquals(1.0F, cMYK0.getYellow(), 0.01F);
      assertEquals(0.0F, cMYK0.getMagenta(), 0.01F);
      assertEquals(0.0F, cMYK1.getMagenta(), 0.01F);
      assertEquals(0.0F, cMYK1.getBlack(), 0.01F);
      assertEquals(0.0F, cMYK0.getCyan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      float float0 = cMYK0.getYellow();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 1.0F, 0.0F);
      float float0 = cMYK0.getMagenta();
      assertEquals(0.0F, cMYK0.getBlack(), 0.01F);
      assertEquals(1.0F, cMYK0.getYellow(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, cMYK0.getCyan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.36211494F, 0.36211494F, 0.36211494F, 0.36211494F);
      float float0 = cMYK0.getCyan();
      assertEquals(0.36F, float0, 0.01F);
      assertEquals(0.36F, cMYK0.getBlack(), 0.01F);
      assertEquals(0.36F, cMYK0.getYellow(), 0.01F);
      assertEquals(0.36F, cMYK0.getMagenta(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.7815782F, 0.7815782F, 0.7815782F, 0.7815782F);
      float float0 = cMYK0.getBlack();
      assertEquals(0.78F, cMYK0.getYellow(), 0.01F);
      assertEquals(0.78F, cMYK0.getMagenta(), 0.01F);
      assertEquals(0.78F, float0, 0.01F);
      assertEquals(0.78F, cMYK0.getCyan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMYK cMYK0 = null;
      try {
        cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, (-2512.0F));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Given value (-2512.0) is out of range (0.0-1.0).
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.shared.math.NumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      boolean boolean0 = cMYK0.equals(cMYK1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(0.0F, 0.0F, 1.0F, 0.0F);
      boolean boolean0 = cMYK1.equals(cMYK0);
      assertFalse(boolean0);
      assertEquals(0.0F, cMYK1.getMagenta(), 0.01F);
      assertEquals(1.0F, cMYK1.getYellow(), 0.01F);
      assertEquals(0.0F, cMYK1.getCyan(), 0.01F);
      assertEquals(0.0F, cMYK1.getBlack(), 0.01F);
      assertFalse(cMYK0.equals((Object)cMYK1));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.41134882F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      boolean boolean0 = cMYK0.equals(cMYK1);
      assertFalse(boolean0);
      assertFalse(cMYK1.equals((Object)cMYK0));
      assertEquals(0.0F, cMYK0.getCyan(), 0.01F);
      assertEquals(0.0F, cMYK0.getYellow(), 0.01F);
      assertEquals(0.41F, cMYK0.getMagenta(), 0.01F);
      assertEquals(0.0F, cMYK0.getBlack(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(1.0F, 0.0F, 0.0F, 1.0F);
      boolean boolean0 = cMYK1.equals(cMYK0);
      assertEquals(0.0F, cMYK1.getYellow(), 0.01F);
      assertFalse(boolean0);
      assertEquals(1.0F, cMYK1.getCyan(), 0.01F);
      assertEquals(0.0F, cMYK1.getMagenta(), 0.01F);
      assertEquals(1.0F, cMYK1.getBlack(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      Object object0 = new Object();
      boolean boolean0 = cMYK0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      boolean boolean0 = cMYK0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      boolean boolean0 = cMYK0.equals(cMYK0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      CMYK cMYK1 = new CMYK(0.0F, 0.0F, 0.0F, 1.0F);
      boolean boolean0 = cMYK1.equals(cMYK0);
      assertEquals(0.0F, cMYK1.getCyan(), 0.01F);
      assertEquals(0.0F, cMYK1.getMagenta(), 0.01F);
      assertFalse(boolean0);
      assertEquals(1.0F, cMYK1.getBlack(), 0.01F);
      assertFalse(cMYK0.equals((Object)cMYK1));
      assertEquals(0.0F, cMYK1.getYellow(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      float[] floatArray0 = cMYK0.toArray();
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      float float0 = cMYK0.getCyan();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      cMYK0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 1.0F, 0.0F);
      float float0 = cMYK0.getYellow();
      assertEquals(0.0F, cMYK0.getCyan(), 0.01F);
      assertEquals(0.0F, cMYK0.getMagenta(), 0.01F);
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(0.0F, cMYK0.getBlack(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.36211494F, 0.36211494F, 0.36211494F, 0.36211494F);
      float float0 = cMYK0.getMagenta();
      assertEquals(0.36F, cMYK0.getBlack(), 0.01F);
      assertEquals(0.36F, cMYK0.getYellow(), 0.01F);
      assertEquals(0.36F, float0, 0.01F);
      assertEquals(0.36F, cMYK0.getCyan(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      float float0 = cMYK0.getBlack();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CMYK cMYK0 = new CMYK(0.0F, 0.0F, 0.0F, 0.0F);
      String string0 = cMYK0.toString();
      assertEquals("cmyk(0%, 0%, 0%, 0%)", string0);
  }
}
