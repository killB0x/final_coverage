/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:23:56 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Isbn_ESTest extends Isbn_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "", "", "");
      String string0 = isbn0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Isbn isbn0 = new Isbn((IsbnType) null, "ISBN_13", "ISBN_10", "Z&", (String) null, "ISBN_10", "ISBN_10");
      isbn0.getType();
      assertEquals("Z&", isbn0.getRegistrant());
      assertEquals("ISBN_10", isbn0.getRegistrationGroup());
      assertEquals("ISBN_13", isbn0.getPrefix());
      assertEquals("ISBN_10", isbn0.getCheckDigit());
      assertEquals("ISBN_10", isbn0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "'xIxbW%>w>", "", "x~EUd.l8j=#g");
      isbn0.getType();
      assertEquals("", isbn0.getPrefix());
      assertEquals("x~EUd.l8j=#g", isbn0.getCheckDigit());
      assertEquals("", isbn0.getSeparator());
      assertEquals("'xIxbW%>w>", isbn0.getPublication());
      assertEquals("", isbn0.getRegistrationGroup());
      assertEquals("", isbn0.getRegistrant());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", (String) null, "Kd\"ZU s^", (String) null, ">T3[IA'\"jA[nYSrC?O");
      String string0 = isbn0.getSeparator();
      assertEquals(">T3[IA'\"jA[nYSrC?O", isbn0.getCheckDigit());
      assertNull(string0);
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", isbn0.getRegistrationGroup());
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", isbn0.getPrefix());
      assertEquals("Kd\"ZU s^", isbn0.getPublication());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "", "", "bBQU``1H1dlN");
      String string0 = isbn0.getSeparator();
      assertEquals("bBQU``1H1dlN", isbn0.getCheckDigit());
      assertEquals("", isbn0.getPublication());
      assertEquals("", string0);
      assertEquals("", isbn0.getRegistrant());
      assertEquals("", isbn0.getRegistrationGroup());
      assertEquals("", isbn0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, (String) null, (String) null, "r", (String) null, "r", (String) null);
      String string0 = isbn0.getRegistrationGroup();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "'xIxbW%>w>", "", "x~EUd.l8j=#g");
      String string0 = isbn0.getRegistrationGroup();
      assertEquals("'xIxbW%>w>", isbn0.getPublication());
      assertEquals("x~EUd.l8j=#g", isbn0.getCheckDigit());
      assertEquals("", isbn0.getSeparator());
      assertEquals("", isbn0.getRegistrant());
      assertEquals("", isbn0.getPrefix());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", (String) null, "Kd\"ZU s^", (String) null, ">T3[IA'\"jA[nYSrC?O");
      String string0 = isbn0.getRegistrant();
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", isbn0.getRegistrationGroup());
      assertEquals(">T3[IA'\"jA[nYSrC?O", isbn0.getCheckDigit());
      assertNull(string0);
      assertEquals("Kd\"ZU s^", isbn0.getPublication());
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", isbn0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "", "", "bBQU``1H1dlN");
      String string0 = isbn0.getRegistrant();
      assertEquals("bBQU``1H1dlN", isbn0.getCheckDigit());
      assertEquals("", isbn0.getRegistrationGroup());
      assertEquals("", isbn0.getPublication());
      assertEquals("", string0);
      assertEquals("", isbn0.getSeparator());
      assertEquals("", isbn0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, (String) null, (String) null, "r", (String) null, "r", (String) null);
      String string0 = isbn0.getPublication();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "'xIxbW%>w>", "", "x~EUd.l8j=#g");
      String string0 = isbn0.getPublication();
      assertEquals("x~EUd.l8j=#g", isbn0.getCheckDigit());
      assertEquals("", isbn0.getSeparator());
      assertEquals("", isbn0.getPrefix());
      assertEquals("", isbn0.getRegistrant());
      assertEquals("", isbn0.getRegistrationGroup());
      assertEquals("'xIxbW%>w>", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, (String) null, "", "@nOK", "@nOK", "@nOK", "@nOK");
      String string0 = isbn0.getPrefix();
      assertNull(string0);
      assertEquals("", isbn0.getRegistrationGroup());
      assertEquals("@nOK", isbn0.getPublication());
      assertEquals("@nOK", isbn0.getRegistrant());
      assertEquals("@nOK", isbn0.getCheckDigit());
      assertEquals("@nOK", isbn0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "'xIxbW%>w>", "", "x~EUd.l8j=#g");
      String string0 = isbn0.getPrefix();
      assertEquals("", isbn0.getSeparator());
      assertEquals("", string0);
      assertEquals("'xIxbW%>w>", isbn0.getPublication());
      assertEquals("x~EUd.l8j=#g", isbn0.getCheckDigit());
      assertEquals("", isbn0.getRegistrant());
      assertEquals("", isbn0.getRegistrationGroup());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, (String) null, (String) null, "r", (String) null, "r", (String) null);
      String string0 = isbn0.getCheckDigit();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "'xIxbW%>w>", "", "x~EUd.l8j=#g");
      String string0 = isbn0.getCheckDigit();
      assertEquals("", isbn0.getPrefix());
      assertEquals("x~EUd.l8j=#g", string0);
      assertEquals("", isbn0.getSeparator());
      assertEquals("", isbn0.getRegistrationGroup());
      assertEquals("'xIxbW%>w>", isbn0.getPublication());
      assertEquals("", isbn0.getRegistrant());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, (String) null, "", "@nOK", "@nOK", "@nOK", "@nOK");
      IsbnType isbnType1 = isbn0.getType();
      Isbn isbn1 = new Isbn(isbnType1, (String) null, "", "@nOK@nOK@nOK@nOK@nOK@nOK", "@nOK", "", "@nOK");
      // Undeclared exception!
      try { 
        isbn0.equals(isbn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "", "", "'xIxbW%>w>", "", "x~EUd.l8j=#g");
      String string0 = isbn0.toString();
      assertEquals("'xIxbW%>w>x~EUd.l8j=#g", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbn", (String) null, "Kd\"ZU s^", (String) null, ">T3[IA'\"jA[nYSrC?O");
      String string0 = isbn0.toString();
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.Isbndev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnnullKd\"ZU s^>T3[IA'\"jA[nYSrC?O", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "v\"3Kwj", "v\"3Kwj", "v\"3Kwj", "v\"3Kwj", "v\"3Kwj", "v\"3Kwj");
      Isbn isbn1 = new Isbn(isbnType0, "v\"3Kwj", "v\"3Kwj", "v\"3Kwj", "v\"3Kwj", "v\"3Kwj", "v\"3Kwj");
      boolean boolean0 = isbn1.equals(isbn0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({");
      Isbn isbn1 = new Isbn(isbnType0, "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "!XxqkOHqBa/1u?=e1YE", "pIlJf9?!WM");
      boolean boolean0 = isbn0.equals(isbn1);
      assertEquals("SQ<PQ3ZrZ({", isbn1.getRegistrationGroup());
      assertEquals("pIlJf9?!WM", isbn1.getCheckDigit());
      assertFalse(boolean0);
      assertEquals("!XxqkOHqBa/1u?=e1YE", isbn1.getSeparator());
      assertEquals("SQ<PQ3ZrZ({", isbn1.getPrefix());
      assertEquals("SQ<PQ3ZrZ({", isbn1.getPublication());
      assertEquals("SQ<PQ3ZrZ({", isbn1.getRegistrant());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{");
      Isbn isbn1 = new Isbn(isbnType0, "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "ylP4[cv-D_z66u", "={QHZ~!<u3Ye;h\"]", "pIlJf9?!WM");
      boolean boolean0 = isbn0.equals(isbn1);
      assertEquals("SQ<PQ3ZrZ{", isbn1.getRegistrationGroup());
      assertEquals("ylP4[cv-D_z66u", isbn1.getPublication());
      assertEquals("SQ<PQ3ZrZ{", isbn1.getRegistrant());
      assertEquals("pIlJf9?!WM", isbn1.getCheckDigit());
      assertFalse(boolean0);
      assertEquals("SQ<PQ3ZrZ{", isbn1.getPrefix());
      assertEquals("={QHZ~!<u3Ye;h\"]", isbn1.getSeparator());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{");
      Isbn isbn1 = new Isbn(isbnType0, "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "Jik\"A{uu", "ylP4[cv-D_z66u", "={QHZ~!<u3Ye;h\"]", "pIlJf9?!WM");
      boolean boolean0 = isbn0.equals(isbn1);
      assertEquals("={QHZ~!<u3Ye;h\"]", isbn1.getSeparator());
      assertEquals("SQ<PQ3ZrZ{", isbn1.getPrefix());
      assertEquals("Jik\"A{uu", isbn1.getRegistrant());
      assertEquals("ylP4[cv-D_z66u", isbn1.getPublication());
      assertEquals("pIlJf9?!WM", isbn1.getCheckDigit());
      assertEquals("SQ<PQ3ZrZ{", isbn1.getRegistrationGroup());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "ISBN_13", "ISBN_13", "ylP4[cv-D_z66u", "", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", "");
      IsbnType isbnType1 = isbn0.getType();
      Isbn isbn1 = new Isbn(isbnType1, "ISBN_13", "", "", "ISBN_13", "iTZ:6vo<", ";R)v_kP%'!<*!%p");
      boolean boolean0 = isbn0.equals(isbn1);
      assertEquals("iTZ:6vo<", isbn1.getSeparator());
      assertEquals("ISBN_13", isbn1.getPrefix());
      assertEquals("", isbn1.getRegistrationGroup());
      assertEquals("ylP4[cv-D_z66u", isbn0.getRegistrant());
      assertEquals(";R)v_kP%'!<*!%p", isbn1.getCheckDigit());
      assertFalse(boolean0);
      assertEquals("", isbn0.getPublication());
      assertEquals("ISBN_13", isbn0.getPrefix());
      assertEquals("ISBN_13", isbn0.getRegistrationGroup());
      assertEquals("ISBN_13", isbn1.getPublication());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{", "SQ<PQ3ZrZ{");
      Isbn isbn1 = new Isbn(isbnType0, "pIlJf9?!WM", "SQ<PQ3ZrZ{", "ylP4[cv-D_z66u", "y", "SQ<PQ3ZrZ{", "pIlJf9?!WM");
      boolean boolean0 = isbn0.equals(isbn1);
      assertEquals("SQ<PQ3ZrZ{", isbn1.getSeparator());
      assertFalse(boolean0);
      assertEquals("y", isbn1.getPublication());
      assertEquals("SQ<PQ3ZrZ{", isbn1.getRegistrationGroup());
      assertEquals("pIlJf9?!WM", isbn1.getCheckDigit());
      assertEquals("ylP4[cv-D_z66u", isbn1.getRegistrant());
      assertEquals("pIlJf9?!WM", isbn1.getPrefix());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "@)iZ", "@)iZ", "Kg,", "@)iZ", "", "FF~rd9k@s?z#2ca>C4[");
      IsbnType isbnType1 = IsbnType.ISBN_13;
      Isbn isbn1 = new Isbn(isbnType1, "@)iZ", "", "$VALUES", "", "}JkFj0\"&opDTGH@m0HM", "");
      boolean boolean0 = isbn0.equals(isbn1);
      assertFalse(boolean0);
      assertEquals("", isbn1.getRegistrationGroup());
      assertEquals("", isbn1.getPublication());
      assertEquals("}JkFj0\"&opDTGH@m0HM", isbn1.getSeparator());
      assertEquals("@)iZ", isbn0.getRegistrationGroup());
      assertEquals("FF~rd9k@s?z#2ca>C4[", isbn0.getCheckDigit());
      assertEquals("@)iZ", isbn0.getPublication());
      assertEquals("$VALUES", isbn1.getRegistrant());
      assertEquals("@)iZ", isbn1.getPrefix());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "ISBN_13", "ISBN_13", "ylP4[cv-D_z66u", "", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", "");
      Object object0 = new Object();
      boolean boolean0 = isbn0.equals(object0);
      assertFalse(boolean0);
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", isbn0.getSeparator());
      assertEquals("", isbn0.getCheckDigit());
      assertEquals("ylP4[cv-D_z66u", isbn0.getRegistrant());
      assertEquals("", isbn0.getPublication());
      assertEquals("ISBN_13", isbn0.getRegistrationGroup());
      assertEquals("ISBN_13", isbn0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "", "Bb2t22E(H?SH'j@=.7", "I?rx<kS_[&Nv0y?VB", "W(ieq!qdKf&/V", "Bb2t22E(H?SH'j@=.7", "E");
      boolean boolean0 = isbn0.equals((Object) null);
      assertEquals("", isbn0.getPrefix());
      assertEquals("Bb2t22E(H?SH'j@=.7", isbn0.getSeparator());
      assertFalse(boolean0);
      assertEquals("W(ieq!qdKf&/V", isbn0.getPublication());
      assertEquals("Bb2t22E(H?SH'j@=.7", isbn0.getRegistrationGroup());
      assertEquals("E", isbn0.getCheckDigit());
      assertEquals("I?rx<kS_[&Nv0y?VB", isbn0.getRegistrant());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "Gh_pXo", "Gh_pXo", "Gh_pXo", ";0z[0SE[ U", "", "Gh_pXo");
      boolean boolean0 = isbn0.equals(isbn0);
      assertEquals("Gh_pXo", isbn0.getCheckDigit());
      assertEquals("Gh_pXo", isbn0.getRegistrationGroup());
      assertEquals("Gh_pXo", isbn0.getRegistrant());
      assertTrue(boolean0);
      assertEquals("Gh_pXo", isbn0.getPrefix());
      assertEquals("", isbn0.getSeparator());
      assertEquals(";0z[0SE[ U", isbn0.getPublication());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_13;
      Isbn isbn0 = new Isbn(isbnType0, "3IQ<PQ3rZ{", "3IQ<PQ3rZ{", "3IQ<PQ3rZ{", "3IQ<PQ3rZ{", "3IQ<PQ3rZ{", "3IQ<PQ3rZ{");
      Isbn isbn1 = new Isbn(isbnType0, "3IQ<PQ3rZ{", "3IQ<PQ3rZ{", "3IQ<PQ3rZ{", "3IQ<PQ3rZ{", "={QHZ~!<u3Ye;h\"]", "3IQ<PQ3rZ{");
      boolean boolean0 = isbn1.equals(isbn0);
      assertFalse(boolean0);
      assertEquals("3IQ<PQ3rZ{", isbn1.getRegistrant());
      assertEquals("3IQ<PQ3rZ{", isbn1.getPublication());
      assertEquals("3IQ<PQ3rZ{", isbn1.getRegistrationGroup());
      assertEquals("3IQ<PQ3rZ{", isbn1.getCheckDigit());
      assertEquals("3IQ<PQ3rZ{", isbn1.getPrefix());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "ISBN_13", "ISBN_13", "ylP4[cv-D_z66u", "", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", "");
      String string0 = isbn0.getRegistrationGroup();
      assertEquals("ylP4[cv-D_z66u", isbn0.getRegistrant());
      assertEquals("", isbn0.getCheckDigit());
      assertEquals("", isbn0.getPublication());
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", isbn0.getSeparator());
      assertEquals("ISBN_13", string0);
      assertEquals("ISBN_13", isbn0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({", "SQ<PQ3ZrZ({");
      String string0 = isbn0.getPrefix();
      assertEquals("SQ<PQ3ZrZ({", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "ISBN_13", "ISBN_13", "ylP4[cv-D_z66u", "", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", "");
      String string0 = isbn0.getSeparator();
      assertEquals("ylP4[cv-D_z66u", isbn0.getRegistrant());
      assertEquals("", isbn0.getCheckDigit());
      assertEquals("ISBN_13", isbn0.getPrefix());
      assertEquals("", isbn0.getPublication());
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", string0);
      assertEquals("ISBN_13", isbn0.getRegistrationGroup());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "ISBN_13", "ISBN_13", "ylP4[cv-D_z66u", "", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", "");
      String string0 = isbn0.getCheckDigit();
      assertEquals("ISBN_13", isbn0.getPrefix());
      assertEquals("", isbn0.getPublication());
      assertEquals("ISBN_13", isbn0.getRegistrationGroup());
      assertEquals("", string0);
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", isbn0.getSeparator());
      assertEquals("ylP4[cv-D_z66u", isbn0.getRegistrant());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "SIQ<PQ3rZ{", "SIQ<PQ3rZ{", "SIQ<PQ3rZ{", "SIQ<PQ3rZ{", "SIQ<PQ3rZ{", "SIQ<PQ3rZ{");
      isbn0.hashCode();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "ISBN_13", "ISBN_13", "ylP4[cv-D_z66u", "", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", "");
      String string0 = isbn0.getPublication();
      assertEquals("ylP4[cv-D_z66u", isbn0.getRegistrant());
      assertEquals("", isbn0.getCheckDigit());
      assertEquals("ISBN_13", isbn0.getRegistrationGroup());
      assertEquals("ISBN_13", isbn0.getPrefix());
      assertEquals("", string0);
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", isbn0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IsbnType isbnType0 = IsbnType.ISBN_10;
      Isbn isbn0 = new Isbn(isbnType0, "ISBN_13", "ISBN_13", "ylP4[cv-D_z66u", "", "dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", "");
      String string0 = isbn0.getRegistrant();
      assertEquals("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnType", isbn0.getSeparator());
      assertEquals("", isbn0.getPublication());
      assertEquals("ylP4[cv-D_z66u", string0);
      assertEquals("", isbn0.getCheckDigit());
      assertEquals("ISBN_13", isbn0.getRegistrationGroup());
      assertEquals("ISBN_13", isbn0.getPrefix());
  }
}
