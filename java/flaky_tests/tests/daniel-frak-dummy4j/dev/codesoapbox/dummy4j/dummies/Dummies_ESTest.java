/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:53:38 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies;

import org.junit.Test;
import static org.junit.Assert.*;
import dev.codesoapbox.dummy4j.Dummy4j;
import dev.codesoapbox.dummy4j.dummies.BookDummy;
import dev.codesoapbox.dummy4j.dummies.DateAndTimeDummy;
import dev.codesoapbox.dummy4j.dummies.Dummies;
import dev.codesoapbox.dummy4j.dummies.EducationDummy;
import dev.codesoapbox.dummy4j.dummies.LoremDummy;
import dev.codesoapbox.dummy4j.dummies.MedicalDummy;
import dev.codesoapbox.dummy4j.dummies.NameDummy;
import dev.codesoapbox.dummy4j.dummies.NationDummy;
import dev.codesoapbox.dummy4j.dummies.NatoPhoneticAlphabetDummy;
import dev.codesoapbox.dummy4j.dummies.NumeralsDummy;
import dev.codesoapbox.dummy4j.dummies.ResearchPaperDummy;
import dev.codesoapbox.dummy4j.dummies.ScifiDummy;
import dev.codesoapbox.dummy4j.dummies.address.AddressDummy;
import dev.codesoapbox.dummy4j.dummies.business.BusinessDummy;
import dev.codesoapbox.dummy4j.dummies.color.ColorDummy;
import dev.codesoapbox.dummy4j.dummies.finance.FinanceDummy;
import dev.codesoapbox.dummy4j.dummies.identifier.IdentifierDummy;
import dev.codesoapbox.dummy4j.dummies.internet.InternetDummy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Dummies_ESTest extends Dummies_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      FinanceDummy financeDummy0 = dummies0.finance();
      assertNotNull(financeDummy0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      ScifiDummy scifiDummy0 = dummies0.scifi();
      assertNotNull(scifiDummy0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      BusinessDummy businessDummy0 = dummies0.business();
      assertNotNull(businessDummy0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      ResearchPaperDummy researchPaperDummy0 = dummies0.researchPaper();
      assertNotNull(researchPaperDummy0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      BookDummy bookDummy0 = dummies0.book();
      assertNotNull(bookDummy0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      InternetDummy internetDummy0 = dummies0.internet();
      assertNotNull(internetDummy0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      ColorDummy colorDummy0 = dummies0.color();
      assertNotNull(colorDummy0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      MedicalDummy medicalDummy0 = dummies0.medical();
      assertNotNull(medicalDummy0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      LoremDummy loremDummy0 = dummies0.lorem();
      assertNotNull(loremDummy0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      NatoPhoneticAlphabetDummy natoPhoneticAlphabetDummy0 = dummies0.natoPhoneticAlphabet();
      assertNotNull(natoPhoneticAlphabetDummy0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      DateAndTimeDummy dateAndTimeDummy0 = dummies0.dateAndTime();
      assertNotNull(dateAndTimeDummy0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      NumeralsDummy numeralsDummy0 = dummies0.numerals();
      assertNotNull(numeralsDummy0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      NameDummy nameDummy0 = dummies0.name();
      assertNotNull(nameDummy0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      NationDummy nationDummy0 = dummies0.nation();
      assertNotNull(nationDummy0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      IdentifierDummy identifierDummy0 = dummies0.identifier();
      assertNotNull(identifierDummy0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      EducationDummy educationDummy0 = dummies0.education();
      assertNotNull(educationDummy0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Dummies dummies0 = new Dummies((Dummy4j) null);
      AddressDummy addressDummy0 = dummies0.address();
      assertNotNull(addressDummy0);
  }
}
