/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:45:01 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.DefaultRandomService;
import dev.codesoapbox.dummy4j.Dummy4j;
import dev.codesoapbox.dummy4j.ExpressionResolver;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.DeviceIdentifierFactory;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.InternationalNumberCheckDigitFormulaProvider;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.InternationalStandardNumberFactory;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.Gs1Dash128Factory;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.Gtin13Builder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.Gtin14Builder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.Gtin8Builder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.SsccFactory;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.UpcFactory;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnBuilder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnValidator;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnBuilder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.musicnumber.IsmnValidator;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.namenumber.BasicIsniProvider;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.namenumber.IsniBuilder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.namenumber.OrcidBuilder;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.serialnumber.IssnFactory;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.ModElevenDashTwoFormula;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.ModElevenFormula;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.ModTenFormula;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InternationalStandardNumberFactory_ESTest extends InternationalStandardNumberFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance(dummy4j0);
      String string0 = internationalStandardNumberFactory0.createSscc();
      assertEquals("(00)000000000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance(dummy4j0);
      String string0 = internationalStandardNumberFactory0.createIssn();
      assertEquals("0000-0000", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      Gtin8Builder gtin8Builder0 = internationalStandardNumberFactory0.createGtin8Builder();
      assertNotNull(gtin8Builder0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      Gtin14Builder gtin14Builder0 = internationalStandardNumberFactory0.createGtin14Builder();
      assertNotNull(gtin14Builder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createUpc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.UpcFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance(dummy4j0);
      // Undeclared exception!
      internationalStandardNumberFactory0.createGs1Dash128();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      OrcidBuilder orcidBuilder0 = internationalStandardNumberFactory0.createOrcidBuilder();
      assertNotNull(orcidBuilder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createGs1Dash128();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.Gs1Dash128Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService((Long) null);
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance(dummy4j0);
      String string0 = internationalStandardNumberFactory0.createUpc();
      assertEquals("000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IsmnValidator ismnValidator0 = new IsmnValidator();
      ModElevenFormula modElevenFormula0 = new ModElevenFormula();
      IssnFactory issnFactory0 = IssnFactory.newInstance((Dummy4j) null, modElevenFormula0);
      InternationalNumberCheckDigitFormulaProvider internationalNumberCheckDigitFormulaProvider0 = new InternationalNumberCheckDigitFormulaProvider();
      ModElevenDashTwoFormula modElevenDashTwoFormula0 = internationalNumberCheckDigitFormulaProvider0.getModElevenDashTwoFormula();
      BasicIsniProvider basicIsniProvider0 = new BasicIsniProvider((Dummy4j) null, modElevenDashTwoFormula0);
      UpcFactory upcFactory0 = UpcFactory.newInstance((Dummy4j) null, (ModTenFormula) null);
      Gtin14Builder gtin14Builder0 = new Gtin14Builder((Dummy4j) null, (ModTenFormula) null);
      SsccFactory ssccFactory0 = new SsccFactory((Dummy4j) null, (ModTenFormula) null);
      Gs1Dash128Factory gs1Dash128Factory0 = new Gs1Dash128Factory((Dummy4j) null, gtin14Builder0, ssccFactory0);
      DeviceIdentifierFactory deviceIdentifierFactory0 = new DeviceIdentifierFactory((Dummy4j) null);
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = new InternationalStandardNumberFactory((Dummy4j) null, (InternationalNumberCheckDigitFormulaProvider) null, (IsbnValidator) null, ismnValidator0, issnFactory0, basicIsniProvider0, upcFactory0, gs1Dash128Factory0, ssccFactory0, deviceIdentifierFactory0);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createGtin8Builder();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.InternationalStandardNumberFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createIssn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.serialnumber.IssnFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createTac();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.DeviceIdentifierFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      IsniBuilder isniBuilder0 = internationalStandardNumberFactory0.createIsniBuilder();
      assertNotNull(isniBuilder0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      IsbnBuilder isbnBuilder0 = internationalStandardNumberFactory0.createIsbnBuilder();
      assertNotNull(isbnBuilder0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      IsmnBuilder ismnBuilder0 = internationalStandardNumberFactory0.createIsmnBuilder();
      assertNotNull(ismnBuilder0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IsbnValidator isbnValidator0 = new IsbnValidator();
      IsmnValidator ismnValidator0 = new IsmnValidator();
      InternationalNumberCheckDigitFormulaProvider internationalNumberCheckDigitFormulaProvider0 = new InternationalNumberCheckDigitFormulaProvider();
      ModElevenFormula modElevenFormula0 = internationalNumberCheckDigitFormulaProvider0.getModElevenFormula();
      IssnFactory issnFactory0 = IssnFactory.newInstance((Dummy4j) null, modElevenFormula0);
      ModElevenDashTwoFormula modElevenDashTwoFormula0 = internationalNumberCheckDigitFormulaProvider0.getModElevenDashTwoFormula();
      BasicIsniProvider basicIsniProvider0 = new BasicIsniProvider((Dummy4j) null, modElevenDashTwoFormula0);
      ModTenFormula modTenFormula0 = new ModTenFormula();
      UpcFactory upcFactory0 = UpcFactory.newInstance((Dummy4j) null, modTenFormula0);
      Gtin14Builder gtin14Builder0 = new Gtin14Builder((Dummy4j) null, modTenFormula0);
      SsccFactory ssccFactory0 = new SsccFactory((Dummy4j) null, modTenFormula0);
      Gs1Dash128Factory gs1Dash128Factory0 = new Gs1Dash128Factory((Dummy4j) null, gtin14Builder0, ssccFactory0);
      DeviceIdentifierFactory deviceIdentifierFactory0 = new DeviceIdentifierFactory((Dummy4j) null);
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = new InternationalStandardNumberFactory((Dummy4j) null, (InternationalNumberCheckDigitFormulaProvider) null, isbnValidator0, ismnValidator0, issnFactory0, basicIsniProvider0, upcFactory0, gs1Dash128Factory0, ssccFactory0, deviceIdentifierFactory0);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createGtin14Builder();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.InternationalStandardNumberFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      Gtin13Builder gtin13Builder0 = internationalStandardNumberFactory0.createGtin13Builder();
      assertNotNull(gtin13Builder0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createImei();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.DeviceIdentifierFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createSscc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.articlenumber.SsccFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InternationalStandardNumberFactory internationalStandardNumberFactory0 = InternationalStandardNumberFactory.newInstance((Dummy4j) null);
      // Undeclared exception!
      try { 
        internationalStandardNumberFactory0.createImeisv();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.DeviceIdentifierFactory", e);
      }
  }
}
