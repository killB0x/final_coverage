/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:40:00 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber;

import org.junit.Test;
import static org.junit.Assert.*;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.InternationalNumberCheckDigitFormulaProvider;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.LuhnFormula;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.ModElevenDashTwoFormula;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.ModElevenFormula;
import dev.codesoapbox.dummy4j.dummies.shared.checkdigitformulas.ModTenFormula;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InternationalNumberCheckDigitFormulaProvider_ESTest extends InternationalNumberCheckDigitFormulaProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InternationalNumberCheckDigitFormulaProvider internationalNumberCheckDigitFormulaProvider0 = new InternationalNumberCheckDigitFormulaProvider();
      ModElevenDashTwoFormula modElevenDashTwoFormula0 = internationalNumberCheckDigitFormulaProvider0.getModElevenDashTwoFormula();
      assertNotNull(modElevenDashTwoFormula0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InternationalNumberCheckDigitFormulaProvider internationalNumberCheckDigitFormulaProvider0 = new InternationalNumberCheckDigitFormulaProvider();
      ModTenFormula modTenFormula0 = internationalNumberCheckDigitFormulaProvider0.getModTenFormula();
      assertNotNull(modTenFormula0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InternationalNumberCheckDigitFormulaProvider internationalNumberCheckDigitFormulaProvider0 = new InternationalNumberCheckDigitFormulaProvider();
      LuhnFormula luhnFormula0 = internationalNumberCheckDigitFormulaProvider0.getLuhnFormula();
      assertNotNull(luhnFormula0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InternationalNumberCheckDigitFormulaProvider internationalNumberCheckDigitFormulaProvider0 = new InternationalNumberCheckDigitFormulaProvider();
      ModElevenFormula modElevenFormula0 = internationalNumberCheckDigitFormulaProvider0.getModElevenFormula();
      assertNotNull(modElevenFormula0);
  }
}
