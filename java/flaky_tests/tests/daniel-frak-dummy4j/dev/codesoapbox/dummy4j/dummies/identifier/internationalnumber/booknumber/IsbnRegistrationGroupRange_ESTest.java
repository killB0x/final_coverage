/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:59:17 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnRegistrationGroupRange;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IsbnRegistrationGroupRange_ESTest extends IsbnRegistrationGroupRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      IsbnRegistrationGroupRange isbnRegistrationGroupRange1 = IsbnRegistrationGroupRange.from(0, 603);
      boolean boolean0 = isbnRegistrationGroupRange1.equals(isbnRegistrationGroupRange0);
      assertFalse(boolean0);
      assertEquals(0, isbnRegistrationGroupRange1.getMin());
      assertEquals(603, isbnRegistrationGroupRange1.getMax());
      assertFalse(isbnRegistrationGroupRange0.equals((Object)isbnRegistrationGroupRange1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      IsbnRegistrationGroupRange isbnRegistrationGroupRange1 = IsbnRegistrationGroupRange.from(603, 1477);
      boolean boolean0 = isbnRegistrationGroupRange1.equals(isbnRegistrationGroupRange0);
      assertEquals(603, isbnRegistrationGroupRange1.getMin());
      assertFalse(boolean0);
      assertEquals(1477, isbnRegistrationGroupRange1.getMax());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(603, 603);
      int int0 = isbnRegistrationGroupRange0.getMin();
      assertEquals(603, isbnRegistrationGroupRange0.getMax());
      assertEquals(603, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(603, 603);
      int int0 = isbnRegistrationGroupRange0.getMax();
      assertEquals(603, int0);
      assertEquals(603, isbnRegistrationGroupRange0.getMin());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        IsbnRegistrationGroupRange.from((-1), 2122);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid registration group range from -1 to 2122
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.identifier.internationalnumber.booknumber.IsbnRegistrationGroupRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      IsbnRegistrationGroupRange isbnRegistrationGroupRange1 = IsbnRegistrationGroupRange.from(0, 0);
      boolean boolean0 = isbnRegistrationGroupRange0.equals(isbnRegistrationGroupRange1);
      assertTrue(boolean0);
      assertEquals(0, isbnRegistrationGroupRange1.getMin());
      assertEquals(0, isbnRegistrationGroupRange1.getMax());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(906, 906);
      IsbnRegistrationGroupRange isbnRegistrationGroupRange1 = IsbnRegistrationGroupRange.from(3296, 3296);
      boolean boolean0 = isbnRegistrationGroupRange0.equals(isbnRegistrationGroupRange1);
      assertEquals(3296, isbnRegistrationGroupRange1.getMin());
      assertEquals(3296, isbnRegistrationGroupRange1.getMax());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      boolean boolean0 = isbnRegistrationGroupRange0.equals("IsbnRegistrationGroupRange{min=0, max=0}");
      assertEquals(0, isbnRegistrationGroupRange0.getMax());
      assertFalse(boolean0);
      assertEquals(0, isbnRegistrationGroupRange0.getMin());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      boolean boolean0 = isbnRegistrationGroupRange0.equals((Object) null);
      assertEquals(0, isbnRegistrationGroupRange0.getMax());
      assertFalse(boolean0);
      assertEquals(0, isbnRegistrationGroupRange0.getMin());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      boolean boolean0 = isbnRegistrationGroupRange0.equals(isbnRegistrationGroupRange0);
      assertEquals(0, isbnRegistrationGroupRange0.getMax());
      assertEquals(0, isbnRegistrationGroupRange0.getMin());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      IsbnRegistrationGroupRange isbnRegistrationGroupRange1 = IsbnRegistrationGroupRange.from(0, 603);
      boolean boolean0 = isbnRegistrationGroupRange0.equals(isbnRegistrationGroupRange1);
      assertFalse(boolean0);
      assertEquals(0, isbnRegistrationGroupRange1.getMin());
      assertEquals(603, isbnRegistrationGroupRange1.getMax());
      assertFalse(isbnRegistrationGroupRange1.equals((Object)isbnRegistrationGroupRange0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      int int0 = isbnRegistrationGroupRange0.getMin();
      assertEquals(0, isbnRegistrationGroupRange0.getMax());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      int int0 = isbnRegistrationGroupRange0.getMax();
      assertEquals(0, isbnRegistrationGroupRange0.getMin());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      isbnRegistrationGroupRange0.hashCode();
      assertEquals(0, isbnRegistrationGroupRange0.getMax());
      assertEquals(0, isbnRegistrationGroupRange0.getMin());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IsbnRegistrationGroupRange isbnRegistrationGroupRange0 = IsbnRegistrationGroupRange.from(0, 0);
      String string0 = isbnRegistrationGroupRange0.toString();
      assertEquals("IsbnRegistrationGroupRange{min=0, max=0}", string0);
  }
}
