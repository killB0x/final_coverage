/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:26:24 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.finance;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.DefaultRandomService;
import dev.codesoapbox.dummy4j.Dummy4j;
import dev.codesoapbox.dummy4j.ExpressionResolver;
import dev.codesoapbox.dummy4j.dummies.finance.BankAccountCountry;
import dev.codesoapbox.dummy4j.dummies.finance.IbanBuilder;
import dev.codesoapbox.dummy4j.dummies.finance.IbanFormula;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IbanBuilder_ESTest extends IbanBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IbanFormula ibanFormula0 = new IbanFormula();
      IbanBuilder ibanBuilder0 = new IbanBuilder((Dummy4j) null, ibanFormula0);
      // Undeclared exception!
      try { 
        ibanBuilder0.withRandomCountry((BankAccountCountry[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IbanFormula ibanFormula0 = new IbanFormula();
      IbanBuilder ibanBuilder0 = new IbanBuilder((Dummy4j) null, ibanFormula0);
      IbanBuilder ibanBuilder1 = ibanBuilder0.formatted();
      assertSame(ibanBuilder1, ibanBuilder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IbanFormula ibanFormula0 = new IbanFormula();
      IbanBuilder ibanBuilder0 = new IbanBuilder((Dummy4j) null, ibanFormula0);
      IbanBuilder ibanBuilder1 = ibanBuilder0.withRandomCountry();
      assertSame(ibanBuilder0, ibanBuilder1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IbanFormula ibanFormula0 = new IbanFormula();
      IbanBuilder ibanBuilder0 = new IbanBuilder((Dummy4j) null, ibanFormula0);
      String string0 = ibanBuilder0.toString();
      assertEquals("IbanBuilder{countries=[], formatted=false}", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IbanFormula ibanFormula0 = new IbanFormula();
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      IbanBuilder ibanBuilder0 = new IbanBuilder(dummy4j0, ibanFormula0);
      // Undeclared exception!
      try { 
        ibanBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.finance.FinanceDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IbanFormula ibanFormula0 = new IbanFormula();
      IbanBuilder ibanBuilder0 = new IbanBuilder((Dummy4j) null, ibanFormula0);
      BankAccountCountry bankAccountCountry0 = BankAccountCountry.MACEDONIA;
      IbanBuilder ibanBuilder1 = ibanBuilder0.withCountry(bankAccountCountry0);
      assertSame(ibanBuilder0, ibanBuilder1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IbanFormula ibanFormula0 = new IbanFormula();
      IbanBuilder ibanBuilder0 = new IbanBuilder((Dummy4j) null, ibanFormula0);
      BankAccountCountry[] bankAccountCountryArray0 = new BankAccountCountry[2];
      IbanBuilder ibanBuilder1 = ibanBuilder0.withRandomCountry(bankAccountCountryArray0);
      assertSame(ibanBuilder0, ibanBuilder1);
  }
}
