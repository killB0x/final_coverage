/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:33:44 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.DefaultRandomService;
import dev.codesoapbox.dummy4j.Dummy4j;
import dev.codesoapbox.dummy4j.ExpressionResolver;
import dev.codesoapbox.dummy4j.dummies.NatoPhoneticAlphabetDummy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NatoPhoneticAlphabetDummy_ESTest extends NatoPhoneticAlphabetDummy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      NatoPhoneticAlphabetDummy natoPhoneticAlphabetDummy0 = dummy4j0.natoPhoneticAlphabet();
      natoPhoneticAlphabetDummy0.word();
      assertEquals((-845736572L), (long)dummy4j0.getSeed());
      assertEquals((-845736572L), defaultRandomService0.getSeed());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      NatoPhoneticAlphabetDummy natoPhoneticAlphabetDummy0 = dummy4j0.natoPhoneticAlphabet();
      natoPhoneticAlphabetDummy0.of("");
      assertEquals(401500776L, (long)dummy4j0.getSeed());
      assertEquals(401500776L, defaultRandomService0.getSeed());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      NatoPhoneticAlphabetDummy natoPhoneticAlphabetDummy0 = dummy4j0.natoPhoneticAlphabet();
      // Undeclared exception!
      try { 
        natoPhoneticAlphabetDummy0.of((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.NatoPhoneticAlphabetDummy", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultRandomService defaultRandomService0 = new DefaultRandomService();
      Dummy4j dummy4j0 = new Dummy4j((ExpressionResolver) null, defaultRandomService0);
      NatoPhoneticAlphabetDummy natoPhoneticAlphabetDummy0 = dummy4j0.natoPhoneticAlphabet();
      String string0 = natoPhoneticAlphabetDummy0.of("No methods found containing '2h7G=l;\"yPTDst8'");
      assertEquals("November Oscar null Mike Echo Tango Hotel Oscar Delta Sierra null Foxtrot Oscar Uniform November Delta null Charlie Oscar November Tango Alpha India November India November Golf null null Two Hotel Seven Golf null Lima null null Yankee Papa Tango Delta Sierra Tango Eight null", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NatoPhoneticAlphabetDummy natoPhoneticAlphabetDummy0 = new NatoPhoneticAlphabetDummy((Dummy4j) null);
      // Undeclared exception!
      try { 
        natoPhoneticAlphabetDummy0.word();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.NatoPhoneticAlphabetDummy", e);
      }
  }
}
