/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:33:58 GMT 2022
 */

package dev.codesoapbox.dummy4j.dummies.internet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dev.codesoapbox.dummy4j.dummies.internet.UrlHost;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UrlHost_ESTest extends UrlHost_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost(".", ".", false);
      UrlHost urlHost1 = new UrlHost(".", ".", false);
      boolean boolean0 = urlHost0.equals(urlHost1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost(".", ".", false);
      UrlHost urlHost1 = new UrlHost("root domain", ".", false);
      boolean boolean0 = urlHost0.equals(urlHost1);
      assertEquals(".", urlHost1.getTopLevelDomain());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("Iew#4'q%T)-", "Iew#4'q%T)-", false);
      UrlHost urlHost1 = new UrlHost("Iew#4'q%T)-", "www.Iew#4'q%T)-.Iew#4'q%T)-", true);
      boolean boolean0 = urlHost0.equals(urlHost1);
      assertFalse(boolean0);
      assertEquals("Iew#4'q%T)-", urlHost1.getRootDomain());
      assertEquals("www.Iew#4'q%T)-.Iew#4'q%T)-", urlHost1.getTopLevelDomain());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("V@F_p_W>Xy<b(ww7zo", "V@F_p_W>Xy<b(ww7zo", false);
      UrlHost urlHost1 = new UrlHost("V@F_p_W>Xy<b(ww7zo", "1G--eD53j@_&LUnc", false);
      boolean boolean0 = urlHost0.equals(urlHost1);
      assertFalse(boolean0);
      assertEquals("V@F_p_W>Xy<b(ww7zo", urlHost1.getRootDomain());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("aU", "aU", false);
      boolean boolean0 = urlHost0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost(".", ".", false);
      boolean boolean0 = urlHost0.equals(urlHost0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("V@F_p_W>Xy<b(ww7zo", "V@F_p_W>Xy<b(ww7zo", false);
      boolean boolean0 = urlHost0.equals("V@F_p_W>Xy<b(ww7zo");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("V@F_p_W>Xy<b(ww7zo", "V@F_p_W>Xy<b(ww7zo", false);
      String string0 = urlHost0.toString();
      assertEquals("www.V@F_p_W>Xy<b(ww7zo.V@F_p_W>Xy<b(ww7zo", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UrlHost urlHost0 = null;
      try {
        urlHost0 = new UrlHost("", "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The root domain can't be null or empty
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.internet.UrlHost", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UrlHost urlHost0 = null;
      try {
        urlHost0 = new UrlHost((String) null, "6(2O!^GX/5x>", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The root domain can't be null or empty
         //
         verifyException("dev.codesoapbox.dummy4j.dummies.internet.UrlHost", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("\b t0c1xCD'L", "iJ?>(8Y", true);
      String string0 = urlHost0.toString();
      assertEquals("\b t0c1xCD'L.iJ?>(8Y", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("V@F_p_W>Xy<b(ww7zo", "V@F_p_W>Xy<b(ww7zo", false);
      urlHost0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost("V@F_p_W>Xy<b(ww7zo", "V@F_p_W>Xy<b(ww7zo", false);
      String string0 = urlHost0.getRootDomain();
      assertEquals("V@F_p_W>Xy<b(ww7zo", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UrlHost urlHost0 = new UrlHost(".", ".", false);
      String string0 = urlHost0.getTopLevelDomain();
      assertEquals(".", string0);
  }
}
