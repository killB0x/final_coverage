/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 04:41:17 GMT 2022
 */

package com.kjetland.dropwizard.activemq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.kjetland.dropwizard.activemq.ActiveMQConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ActiveMQConfig_ESTest extends ActiveMQConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ActiveMQConfig activeMQConfig0 = new ActiveMQConfig();
      activeMQConfig0.brokerUrl = "[";
      String string0 = activeMQConfig0.toString();
      assertEquals("ActiveMQConfig{brokerUrl='[', healthCheckMillisecondsToWait=2000, shutdownWaitInSeconds=20, timeToLiveInSeconds=-1, brokerUsername=null, brokerPassword=null, trustedPackages=, pool=null}", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ActiveMQConfig activeMQConfig0 = new ActiveMQConfig();
      activeMQConfig0.brokerPassword = "=6A";
      String string0 = activeMQConfig0.toString();
      assertEquals("ActiveMQConfig{brokerUrl='null', healthCheckMillisecondsToWait=2000, shutdownWaitInSeconds=20, timeToLiveInSeconds=-1, brokerUsername=null, brokerPassword==6A, trustedPackages=, pool=null}", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ActiveMQConfig activeMQConfig0 = new ActiveMQConfig();
      activeMQConfig0.trustedPackages = null;
      // Undeclared exception!
      try { 
        activeMQConfig0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.kjetland.dropwizard.activemq.ActiveMQConfig", e);
      }
  }
}
