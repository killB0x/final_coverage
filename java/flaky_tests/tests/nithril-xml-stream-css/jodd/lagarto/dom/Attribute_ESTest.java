/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:39:43 GMT 2022
 */

package jodd.lagarto.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jodd.lagarto.dom.Attribute;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute("H3f4)(B-", "H3f4)(B-", "");
      attribute0.setValue((String) null);
      String string0 = attribute0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = new Attribute(";", ";", ";");
      String string0 = attribute0.getRawName();
      assertEquals(";", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attribute attribute0 = new Attribute("", "", "");
      String string0 = attribute0.getRawName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute("", (String) null, (String) null);
      String string0 = attribute0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = new Attribute("", "", "");
      String string0 = attribute0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = new Attribute("crE-(nSLQ=l$r&hD", "crE-(nSLQ=l$r&hD", "");
      Attribute attribute1 = attribute0.clone();
      String[] stringArray0 = new String[8];
      attribute1.splits = stringArray0;
      // Undeclared exception!
      try { 
        attribute1.isContaining("6L{@yW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attribute attribute0 = new Attribute("H3f4)(B-", "H3f4)(B-", "");
      assertEquals("", attribute0.getValue());
      
      attribute0.setValue((String) null);
      boolean boolean0 = attribute0.isContaining("O`M.Z3j[Cj:oJ>");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, "GL3sP", "");
      boolean boolean0 = attribute0.isContaining("");
      assertTrue(boolean0);
      
      boolean boolean1 = attribute0.isContaining((String) null);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, "GL3sP", "");
      Attribute attribute1 = attribute0.clone();
      assertEquals("GL3sP", attribute1.getName());
      assertEquals("", attribute1.getValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, "GL3sP", "");
      String string0 = attribute0.getName();
      assertEquals("GL3sP", string0);
      assertNotNull(string0);
      assertEquals("", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, "GL3sP", "");
      String string0 = attribute0.getValue();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, "GL3sP", "");
      assertEquals("", attribute0.getValue());
      
      attribute0.setValue("GL3sP");
      String string0 = attribute0.getValue();
      assertNotNull(string0);
      assertEquals("GL3sP", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, "GL3sP", "");
      String string0 = attribute0.getRawName();
      assertNull(string0);
      assertEquals("", attribute0.getValue());
  }
}
