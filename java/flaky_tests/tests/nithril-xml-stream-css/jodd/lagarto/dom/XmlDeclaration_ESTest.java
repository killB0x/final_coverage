/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:59:25 GMT 2022
 */

package jodd.lagarto.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.List;
import jodd.lagarto.dom.Attribute;
import jodd.lagarto.dom.Document;
import jodd.lagarto.dom.Node;
import jodd.lagarto.dom.NodeVisitor;
import jodd.lagarto.dom.XmlDeclaration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.nlab.xml.stream.context.PathContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlDeclaration_ESTest extends XmlDeclaration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = new Document();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, charBuffer0, charBuffer0, charBuffer0);
      String string0 = xmlDeclaration0.getVersion();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      xmlDeclaration0.version = "";
      String string0 = xmlDeclaration0.getVersion();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = new Document();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, charBuffer0, charBuffer0, charBuffer0);
      String string0 = xmlDeclaration0.getStandalone();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      XmlDeclaration xmlDeclaration1 = xmlDeclaration0.clone();
      xmlDeclaration1.standalone = "";
      String string0 = xmlDeclaration1.getStandalone();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      String string0 = xmlDeclaration0.getEncoding();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = new Document();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, charBuffer0, charBuffer0, charBuffer0);
      xmlDeclaration0.encoding = "";
      String string0 = xmlDeclaration0.getEncoding();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      XmlDeclaration xmlDeclaration1 = xmlDeclaration0.clone();
      PathContext pathContext0 = new PathContext(document0);
      List<Node> list0 = pathContext0.findAncestors();
      xmlDeclaration1.childNodes = list0;
      XmlDeclaration xmlDeclaration2 = xmlDeclaration1.clone();
      assertTrue(xmlDeclaration2.hasChildNodes());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration((Document) null, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      xmlDeclaration0.setAttribute("jodd.lagarto.dom.XmlDeclaration", "ElementPredicate{elements=");
      XmlDeclaration xmlDeclaration1 = xmlDeclaration0.clone();
      assertNotSame(xmlDeclaration1, xmlDeclaration0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      // Undeclared exception!
      try { 
        xmlDeclaration0.visitNode((NodeVisitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jodd.lagarto.dom.XmlDeclaration", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("HDxhMI%");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration((Document) null, charBuffer0, "HDxhMI%", charBuffer0);
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      xmlDeclaration0.attributes = (List<Attribute>) linkedList0;
      linkedList0.add((Attribute) null);
      // Undeclared exception!
      try { 
        xmlDeclaration0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jodd.lagarto.dom.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      String string0 = xmlDeclaration0.getStandalone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      String string0 = xmlDeclaration0.getVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = new Document();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, (CharSequence) null, (CharSequence) null, (CharSequence) null);
      NodeVisitor nodeVisitor0 = mock(NodeVisitor.class, new ViolatedAssumptionAnswer());
      xmlDeclaration0.visitNode(nodeVisitor0);
      assertEquals(Node.NodeType.XML_DECLARATION, xmlDeclaration0.getNodeType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document document0 = new Document();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(document0, charBuffer0, charBuffer0, charBuffer0);
      String string0 = xmlDeclaration0.getEncoding();
      assertNotNull(string0);
  }
}
