/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:50:15 GMT 2022
 */

package jodd.csselly.selector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jodd.csselly.selector.PseudoFunction;
import jodd.csselly.selector.PseudoFunctionSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PseudoFunctionSelector_ESTest extends PseudoFunctionSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        PseudoFunctionSelector.registerPseudoFunction((Class<? extends PseudoFunction>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("jodd.csselly.selector.PseudoFunctionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PseudoFunctionSelector<Object> pseudoFunctionSelector0 = null;
      try {
        pseudoFunctionSelector0 = new PseudoFunctionSelector<Object>((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jodd.csselly.selector.PseudoFunctionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        PseudoFunctionSelector.lookupPseudoFunction("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported pseudo function: 
         //
         verifyException("jodd.csselly.selector.PseudoFunctionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PseudoFunctionSelector<PseudoFunction.NTH_OF_TYPE> pseudoFunctionSelector0 = null;
      try {
        pseudoFunctionSelector0 = new PseudoFunctionSelector<PseudoFunction.NTH_OF_TYPE>("", " (state: ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported pseudo function: 
         //
         verifyException("jodd.csselly.selector.PseudoFunctionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<PseudoFunction.NTH_OF_TYPE> class0 = PseudoFunction.NTH_OF_TYPE.class;
      PseudoFunctionSelector.registerPseudoFunction(class0);
  }
}
