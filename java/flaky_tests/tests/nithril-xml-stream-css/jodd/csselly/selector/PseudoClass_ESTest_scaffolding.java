/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 12 09:51:45 GMT 2022
 */

package jodd.csselly.selector;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class PseudoClass_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "jodd.csselly.selector.PseudoClass"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PseudoClass_ESTest_scaffolding.class.getClassLoader() ,
      "jodd.csselly.selector.PseudoClass",
      "jodd.csselly.selector.PseudoClass$FILE",
      "jodd.lagarto.dom.Element",
      "jodd.lagarto.dom.Text",
      "jodd.csselly.selector.PseudoClass$FIRST",
      "jodd.csselly.selector.PseudoClass$IMAGE",
      "jodd.lagarto.dom.Node$NodeType",
      "jodd.csselly.selector.PseudoClass$CHECKED",
      "org.nlab.xml.stream.context.PathContext",
      "jodd.lagarto.dom.LagartoDOMException",
      "jodd.csselly.selector.PseudoClass$SUBMIT",
      "jodd.csselly.selector.PseudoClass$TEXT",
      "jodd.csselly.selector.PseudoClass$HEADER",
      "jodd.lagarto.dom.CData",
      "jodd.csselly.selector.PseudoClass$PASSWORD",
      "jodd.csselly.selector.PseudoClass$EVEN",
      "jodd.csselly.selector.PseudoClass$SELECTED",
      "jodd.lagarto.dom.NodeVisitor",
      "jodd.csselly.selector.PseudoClass$FIRST_CHILD",
      "jodd.csselly.selector.PseudoClass$ODD",
      "jodd.csselly.selector.PseudoClass$ROOT",
      "jodd.csselly.selector.PseudoClass$RADIO",
      "jodd.csselly.selector.PseudoClass$BUTTON",
      "jodd.csselly.selector.PseudoClass$EMPTY",
      "jodd.lagarto.dom.Comment",
      "jodd.csselly.selector.PseudoClass$FIRST_OF_TYPE",
      "jodd.csselly.selector.PseudoClass$LAST_CHILD",
      "jodd.csselly.selector.PseudoClass$ONLY_OF_TYPE",
      "jodd.csselly.selector.PseudoClass$LAST_OF_TYPE",
      "jodd.lagarto.dom.Attribute",
      "jodd.lagarto.dom.Node",
      "jodd.csselly.selector.PseudoClass$RESET",
      "jodd.lagarto.dom.DocumentType",
      "jodd.csselly.selector.PseudoClass$ONLY_CHILD",
      "jodd.csselly.selector.PseudoClass$LAST",
      "jodd.csselly.selector.PseudoClass$PARENT",
      "jodd.lagarto.dom.Document",
      "jodd.csselly.selector.PseudoClass$CHECKBOX",
      "jodd.lagarto.Tag",
      "jodd.csselly.selector.PseudoClass$INPUT"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PseudoClass_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "jodd.csselly.selector.PseudoClass",
      "jodd.csselly.selector.PseudoClass$INPUT",
      "jodd.csselly.selector.PseudoClass$ONLY_OF_TYPE",
      "jodd.lagarto.dom.Node",
      "jodd.lagarto.dom.Document",
      "jodd.lagarto.dom.Node$NodeType",
      "jodd.lagarto.dom.Element",
      "jodd.csselly.selector.PseudoClass$FIRST",
      "jodd.csselly.selector.PseudoClass$PARENT",
      "jodd.csselly.selector.PseudoClass$LAST_OF_TYPE",
      "jodd.lagarto.dom.DocumentType",
      "jodd.csselly.selector.PseudoClass$EMPTY",
      "jodd.csselly.selector.PseudoClass$EVEN",
      "org.nlab.xml.stream.context.UserContext",
      "org.nlab.xml.stream.context.StreamContext",
      "jodd.csselly.selector.PseudoClass$FIRST_OF_TYPE",
      "jodd.csselly.selector.PseudoClass$HEADER",
      "jodd.csselly.selector.PseudoClass$PASSWORD",
      "jodd.csselly.selector.PseudoClass$CHECKBOX",
      "jodd.csselly.selector.PseudoClass$ONLY_CHILD",
      "jodd.csselly.selector.PseudoClass$ODD",
      "org.nlab.xml.stream.context.PathContext",
      "jodd.lagarto.dom.Text",
      "jodd.csselly.selector.PseudoClass$LAST",
      "jodd.csselly.selector.PseudoClass$RESET",
      "org.nlab.xml.stream.reader.XmlMatcherStreamReader",
      "jodd.csselly.selector.PseudoClass$BUTTON",
      "jodd.csselly.selector.PseudoClass$FILE",
      "jodd.csselly.selector.PseudoClass$TEXT",
      "jodd.lagarto.dom.CData",
      "jodd.csselly.selector.PseudoClass$SELECTED",
      "jodd.csselly.selector.PseudoClass$ROOT",
      "jodd.csselly.selector.PseudoClass$SUBMIT",
      "jodd.csselly.selector.PseudoClass$RADIO",
      "jodd.lagarto.dom.LagartoDOMException",
      "jodd.csselly.selector.PseudoClass$CHECKED",
      "jodd.lagarto.dom.Attribute",
      "jodd.csselly.selector.PseudoClass$LAST_CHILD",
      "jodd.csselly.selector.PseudoClass$FIRST_CHILD",
      "jodd.util.Util",
      "jodd.csselly.selector.PseudoClass$IMAGE",
      "jodd.lagarto.dom.XmlDeclaration",
      "jodd.util.StringUtil",
      "jodd.lagarto.dom.Comment",
      "org.nlab.xml.stream.XmlStreamSpec",
      "org.nlab.util.Tries",
      "jodd.util.CharUtil"
    );
  }
}
