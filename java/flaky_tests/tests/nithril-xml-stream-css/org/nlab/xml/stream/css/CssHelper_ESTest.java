/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:27:01 GMT 2022
 */

package org.nlab.xml.stream.css;

import org.junit.Test;
import static org.junit.Assert.*;
import jodd.csselly.Combinator;
import jodd.csselly.CssSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.nlab.xml.stream.css.CssHelper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CssHelper_ESTest extends CssHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CssSelector cssSelector0 = new CssSelector();
      Combinator combinator0 = Combinator.GENERAL_SIBLING;
      cssSelector0.setCombinator(combinator0);
      boolean boolean0 = CssHelper.containsSibblingCombinator(cssSelector0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CssSelector cssSelector0 = new CssSelector();
      Combinator combinator0 = Combinator.ADJACENT_SIBLING;
      cssSelector0.setCombinator(combinator0);
      boolean boolean0 = CssHelper.containsSibblingCombinator(cssSelector0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CssSelector cssSelector0 = new CssSelector();
      boolean boolean0 = CssHelper.containsSibblingCombinator(cssSelector0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CssSelector cssSelector0 = new CssSelector();
      cssSelector0.addClassSelector("ATTRIBUTE");
      boolean boolean0 = CssHelper.containsSibblingSelector(cssSelector0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CssSelector cssSelector0 = new CssSelector("reset");
      cssSelector0.addPseudoClassSelector("reset");
      boolean boolean0 = CssHelper.containsSibbling(cssSelector0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = CssHelper.containsSibblingSelector((CssSelector) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = CssHelper.containsSibbling((CssSelector) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CssSelector cssSelector0 = new CssSelector();
      Combinator combinator0 = Combinator.GENERAL_SIBLING;
      cssSelector0.setCombinator(combinator0);
      boolean boolean0 = CssHelper.containsSibbling(cssSelector0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      boolean boolean0 = CssHelper.containsSibblingCombinator((CssSelector) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CssHelper cssHelper0 = new CssHelper();
  }
}
