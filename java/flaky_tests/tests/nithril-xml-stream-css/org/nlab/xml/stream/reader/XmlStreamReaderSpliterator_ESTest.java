/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:44:30 GMT 2022
 */

package org.nlab.xml.stream.reader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Spliterator;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.nlab.xml.stream.context.StreamContext;
import org.nlab.xml.stream.reader.XmlMatcherStreamReader;
import org.nlab.xml.stream.reader.XmlStreamReaderSpliterator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlStreamReaderSpliterator_ESTest extends XmlStreamReaderSpliterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlStreamReaderSpliterator xmlStreamReaderSpliterator0 = new XmlStreamReaderSpliterator((XmlMatcherStreamReader) null);
      int int0 = xmlStreamReaderSpliterator0.characteristics();
      assertEquals(1281, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlStreamReaderSpliterator xmlStreamReaderSpliterator0 = new XmlStreamReaderSpliterator((XmlMatcherStreamReader) null);
      // Undeclared exception!
      try { 
        xmlStreamReaderSpliterator0.tryAdvance((Consumer<? super StreamContext>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.nlab.xml.stream.reader.XmlStreamReaderSpliterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlStreamReaderSpliterator xmlStreamReaderSpliterator0 = new XmlStreamReaderSpliterator((XmlMatcherStreamReader) null);
      Spliterator spliterator0 = xmlStreamReaderSpliterator0.trySplit();
      assertNull(spliterator0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlStreamReaderSpliterator xmlStreamReaderSpliterator0 = new XmlStreamReaderSpliterator((XmlMatcherStreamReader) null);
      long long0 = xmlStreamReaderSpliterator0.estimateSize();
      assertEquals(0L, long0);
  }
}
