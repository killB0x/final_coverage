/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:43:42 GMT 2022
 */

package org.nlab.xml.stream.reader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.util.StreamReaderDelegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.nlab.xml.stream.reader.XmlMatcherStreamReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlMatcherStreamReader_ESTest extends XmlMatcherStreamReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      streamReaderDelegate0.setParent(streamReaderDelegate0);
      XmlMatcherStreamReader xmlMatcherStreamReader0 = null;
      try {
        xmlMatcherStreamReader0 = new XmlMatcherStreamReader(streamReaderDelegate0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlMatcherStreamReader xmlMatcherStreamReader0 = null;
      try {
        xmlMatcherStreamReader0 = new XmlMatcherStreamReader((XMLStreamReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
