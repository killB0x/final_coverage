/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:57:36 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.query.copy.Copyable;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import be.shad.tsqb.values.HqlQueryValue;
import be.shad.tsqb.values.NullTypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullTypeSafeValue_ESTest extends NullTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      NullTypeSafeValue<Object> nullTypeSafeValue0 = new NullTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        nullTypeSafeValue0.copy((CopyContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      NullTypeSafeValue<Integer> nullTypeSafeValue0 = new NullTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      NullTypeSafeValue<Integer> nullTypeSafeValue1 = null;
      try {
        nullTypeSafeValue1 = new NullTypeSafeValue<Integer>((CopyContext) null, nullTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      NullTypeSafeValue<Object> nullTypeSafeValue0 = new NullTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      NullTypeSafeValue<Object> nullTypeSafeValue1 = new NullTypeSafeValue<Object>(copyContext0, nullTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      NullTypeSafeValue<Object> nullTypeSafeValue0 = new NullTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      CopyContext copyContext0 = new CopyContext();
      Copyable copyable0 = nullTypeSafeValue0.copy(copyContext0);
      assertNotNull(copyable0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      Class<Integer> class0 = Integer.class;
      NullTypeSafeValue<Integer> nullTypeSafeValue0 = new NullTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryValue hqlQueryValue0 = nullTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      assertEquals("NULLIF(1,1)", hqlQueryValue0.getHql());
  }
}
