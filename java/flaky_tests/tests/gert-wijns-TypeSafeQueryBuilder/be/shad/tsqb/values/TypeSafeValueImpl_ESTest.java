/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:51:13 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.values.CollectionTypeSafeValue;
import be.shad.tsqb.values.ConcatTypeSafeValue;
import be.shad.tsqb.values.DirectTypeSafeStringValue;
import be.shad.tsqb.values.EntityTypeSafeValue;
import be.shad.tsqb.values.ProjectionTypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeSafeValueImpl_ESTest extends TypeSafeValueImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Object>((TypeSafeQuery) null, class0, "select ");
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue1 = new ProjectionTypeSafeValue<Object>(copyContext0, projectionTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DirectTypeSafeStringValue directTypeSafeStringValue0 = new DirectTypeSafeStringValue((TypeSafeQuery) null, "");
      Class<Object> class0 = Object.class;
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, directTypeSafeStringValue0);
      Class<Object> class1 = entityTypeSafeValue0.getValueClass();
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConcatTypeSafeValue concatTypeSafeValue0 = new ConcatTypeSafeValue((TypeSafeQuery) null);
      // Undeclared exception!
      try { 
        concatTypeSafeValue0.equals((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.exceptions.EqualsNotAllowedException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DirectTypeSafeStringValue directTypeSafeStringValue0 = new DirectTypeSafeStringValue((TypeSafeQuery) null);
      // Undeclared exception!
      try { 
        directTypeSafeStringValue0.equals((Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Value is null when transforming to query
         //
         verifyException("be.shad.tsqb.values.DirectTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        collectionTypeSafeValue0.equals(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Collection is empty when transforming to query
         //
         verifyException("be.shad.tsqb.values.CollectionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConcatTypeSafeValue concatTypeSafeValue0 = new ConcatTypeSafeValue((TypeSafeQuery) null);
      concatTypeSafeValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        collectionTypeSafeValue0.select();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DirectTypeSafeStringValue directTypeSafeStringValue0 = new DirectTypeSafeStringValue((TypeSafeQuery) null, "1dg4M6");
      // Undeclared exception!
      try { 
        directTypeSafeStringValue0.equals("1dg4M6");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }
}
