/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 22:52:56 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.TypeSafeQueryScopeValidator;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.query.copy.Copyable;
import be.shad.tsqb.values.CollectionTypeSafeValue;
import be.shad.tsqb.values.CustomTypeSafeValue;
import be.shad.tsqb.values.DirectTypeSafeStringValue;
import be.shad.tsqb.values.DirectTypeSafeValue;
import be.shad.tsqb.values.FunctionTypeSafeValue;
import be.shad.tsqb.values.HqlQueryBuilderParams;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import be.shad.tsqb.values.HqlQueryValue;
import be.shad.tsqb.values.HqlQueryValueImpl;
import be.shad.tsqb.values.OperationTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import be.shad.tsqb.values.WrappedTypeSafeValue;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OperationTypeSafeValue_ESTest extends OperationTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.values();
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.values();
      CopyContext copyContext0 = new CopyContext();
      TypeSafeQuery typeSafeQuery0 = null;
      String string0 = "be.shad.tsqb.exceptions.FromAlreadyExistsException";
      Class<Object> class0 = Object.class;
      FunctionTypeSafeValue<Object> functionTypeSafeValue0 = new FunctionTypeSafeValue<Object>((TypeSafeQuery) null, "be.shad.tsqb.exceptions.FromAlreadyExistsException", class0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Never;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, functionTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      functionTypeSafeValue0.add((TypeSafeValue<Object>) operationTypeSafeValue0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = null;
      try {
        operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, object0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      directTypeSafeValue0.setValue(operationTypeSafeValue0);
      CopyContext copyContext0 = new CopyContext();
      operationTypeSafeValue0.copy(copyContext0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, object0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.copy((CopyContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, collectionTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Collection is empty when transforming to query
         //
         verifyException("be.shad.tsqb.values.CollectionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      TypeSafeQuery typeSafeQuery0 = null;
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      hqlQueryBuilderParamsImpl0.setCreatingOrderingBy(false);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      Class<DirectTypeSafeStringValue> class0 = DirectTypeSafeStringValue.class;
      CustomTypeSafeValue<DirectTypeSafeStringValue> customTypeSafeValue0 = new CustomTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0, " mX>YE:jNJ<A^(!QD");
      WrappedTypeSafeValue<DirectTypeSafeStringValue> wrappedTypeSafeValue0 = new WrappedTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, "{U[Ffc$KO=", customTypeSafeValue0);
      operationTypeSafeValue1.add("Attempting to use a subquery without projections. This is most likely a mistake. If you are using exists/not exists, then use it by calling the selectExists or selectNotExists on this subquery instead of another custom way, or select a value.", wrappedTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl1 = new HqlQueryBuilderParamsImpl(0, false, false, false, false);
      operationTypeSafeValue1.toHqlQueryValue(hqlQueryBuilderParamsImpl1);
      // Undeclared exception!
      try { 
        OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, ",1k@9?.5%zo@4+");
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      operationTypeSafeValue0.add(",1k@9?.5%zo@4+", directTypeSafeValue0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.equals(directTypeSafeValue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, ",1k@9?.5%zo@4+");
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      operationTypeSafeValue0.add(",1k@9?.5%zo@4+", directTypeSafeValue0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.equals(directTypeSafeValue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      directTypeSafeValue0.setValue((Object) null);
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Value is null when transforming to query
         //
         verifyException("be.shad.tsqb.values.DirectTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = null;
      try {
        operationTypeSafeValue1 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, (TypeSafeValue<Object>) null, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.OperationTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      operationTypeSafeValue1.validateContainedInScope(typeSafeQueryScopeValidator0);
      hqlQueryBuilderParamsImpl0.createNamedParameter();
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue1.equals(directTypeSafeValue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      operationTypeSafeValue0.validateContainedInScope(typeSafeQueryScopeValidator0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Never;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.validateContainedInScope((TypeSafeQueryScopeValidator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.OperationTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      hqlQueryBuilderParamsImpl0.setCreatingOrderingBy(false);
      HqlQueryValue hqlQueryValue0 = operationTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      assertEquals(":np1", hqlQueryValue0.getHql());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = null;
      try {
        operationTypeSafeValue1 = new OperationTypeSafeValue<Object>((CopyContext) null, operationTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Never;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.toHqlQueryValue((HqlQueryBuilderParams) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.DirectTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      HqlQueryValueImpl hqlQueryValueImpl0 = new HqlQueryValueImpl();
      Collection<Object> collection0 = hqlQueryValueImpl0.getParams();
      CustomTypeSafeValue<Object> customTypeSafeValue0 = new CustomTypeSafeValue<Object>((TypeSafeQuery) null, class0, " --- with: ", collection0);
      DirectTypeSafeStringValue directTypeSafeStringValue0 = new DirectTypeSafeStringValue((TypeSafeQuery) null);
      Object object0 = copyContext0.get((Object) directTypeSafeStringValue0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Never;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, customTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
      int int0 = 0;
      boolean boolean0 = true;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) class0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0;
      objectArray0[3] = (Object) hqlQueryValueImpl0;
      HqlQueryValueImpl.hql("", objectArray0);
      boolean boolean1 = true;
      hqlQueryValueImpl0.copy(copyContext0);
      boolean boolean2 = true;
      boolean boolean3 = false;
      Double double0 = new Double(0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.equals(double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.exceptions.EqualsNotAllowedException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Never;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.equals(directTypeSafeValue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      Copyable copyable0 = operationTypeSafeValue0.copy(copyContext0);
      assertNotNull(copyable0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      operationTypeSafeValue0.add((String) null, directTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      hqlQueryBuilderParamsImpl0.createNamedParameter();
      HqlQueryBuilderParamsImpl.builder();
      operationTypeSafeValue1.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.values();
      operationTypeSafeValue1.copy(copyContext0);
      operationTypeSafeValue0.add("", directTypeSafeValue0);
      // Undeclared exception!
      try { 
        OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.valueOf("be.shad.tsqb.values.OperationTypeSafeValue$1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant be.shad.tsqb.values.OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.be.shad.tsqb.values.OperationTypeSafeValue$1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.WhenMoreThanOne;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.equals(operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      // Undeclared exception!
      try { 
        operationTypeSafeValue0.equals(copyContext0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, copyContext0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      HqlQueryValue hqlQueryValue0 = operationTypeSafeValue1.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      assertEquals("(:np1)", hqlQueryValue0.getHql());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      HqlQueryValueImpl hqlQueryValueImpl0 = new HqlQueryValueImpl();
      Collection<Object> collection0 = hqlQueryValueImpl0.getParams();
      CustomTypeSafeValue<Object> customTypeSafeValue0 = new CustomTypeSafeValue<Object>((TypeSafeQuery) null, class0, " --- with: ", collection0);
      DirectTypeSafeStringValue directTypeSafeStringValue0 = new DirectTypeSafeStringValue((TypeSafeQuery) null);
      Object object0 = copyContext0.get((Object) directTypeSafeStringValue0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Never;
      OperationTypeSafeValue<Object> operationTypeSafeValue0 = new OperationTypeSafeValue<Object>((TypeSafeQuery) null, customTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      OperationTypeSafeValue<Object> operationTypeSafeValue1 = new OperationTypeSafeValue<Object>(copyContext0, operationTypeSafeValue0);
      int int0 = 0;
      boolean boolean0 = true;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) class0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0;
      objectArray0[3] = (Object) hqlQueryValueImpl0;
      HqlQueryValueImpl.hql("", objectArray0);
      boolean boolean1 = true;
      hqlQueryValueImpl0.copy(copyContext0);
      boolean boolean2 = true;
      boolean boolean3 = false;
      // Undeclared exception!
      try { 
        operationTypeSafeValue1.select();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }
}
