/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:43:33 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.query.copy.Copyable;
import be.shad.tsqb.values.CastTypeSafeValue;
import be.shad.tsqb.values.CoalesceTypeSafeValue;
import be.shad.tsqb.values.CollectionTypeSafeValue;
import be.shad.tsqb.values.DirectTypeSafeStringValue;
import be.shad.tsqb.values.DirectTypeSafeValue;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import be.shad.tsqb.values.NullTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CastTypeSafeValue_ESTest extends CastTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      CastTypeSafeValue<Object> castTypeSafeValue0 = new CastTypeSafeValue<Object>((TypeSafeQuery) null, class0, directTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        castTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Value is null when transforming to query
         //
         verifyException("be.shad.tsqb.values.DirectTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      CastTypeSafeValue<Object> castTypeSafeValue0 = new CastTypeSafeValue<Object>((TypeSafeQuery) null, class0, collectionTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        castTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Collection is empty when transforming to query
         //
         verifyException("be.shad.tsqb.values.CollectionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      NullTypeSafeValue<Object> nullTypeSafeValue0 = new NullTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      CastTypeSafeValue<Object> castTypeSafeValue0 = new CastTypeSafeValue<Object>((TypeSafeQuery) null, class0, nullTypeSafeValue0);
      // Undeclared exception!
      try { 
        castTypeSafeValue0.copy((CopyContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CastTypeSafeValue<Object> castTypeSafeValue0 = new CastTypeSafeValue<Object>((TypeSafeQuery) null, class0, (TypeSafeValue<?>) null);
      CastTypeSafeValue<Object> castTypeSafeValue1 = null;
      try {
        castTypeSafeValue1 = new CastTypeSafeValue<Object>((CopyContext) null, castTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      Class<DirectTypeSafeStringValue> class1 = DirectTypeSafeStringValue.class;
      NullTypeSafeValue<DirectTypeSafeStringValue> nullTypeSafeValue0 = new NullTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class1);
      CoalesceTypeSafeValue<DirectTypeSafeStringValue> coalesceTypeSafeValue0 = new CoalesceTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, nullTypeSafeValue0);
      CastTypeSafeValue<Object> castTypeSafeValue0 = new CastTypeSafeValue<Object>((TypeSafeQuery) null, class0, coalesceTypeSafeValue0);
      Class<Integer> class2 = Integer.class;
      CastTypeSafeValue<Integer> castTypeSafeValue1 = new CastTypeSafeValue<Integer>((TypeSafeQuery) null, class2, castTypeSafeValue0);
      Copyable copyable0 = castTypeSafeValue1.copy(copyContext0);
      assertNotNull(copyable0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<DirectTypeSafeStringValue> class1 = DirectTypeSafeStringValue.class;
      NullTypeSafeValue<DirectTypeSafeStringValue> nullTypeSafeValue0 = new NullTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class1);
      CoalesceTypeSafeValue<DirectTypeSafeStringValue> coalesceTypeSafeValue0 = new CoalesceTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, nullTypeSafeValue0);
      CastTypeSafeValue<Object> castTypeSafeValue0 = new CastTypeSafeValue<Object>((TypeSafeQuery) null, class0, coalesceTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, true, true, true, true);
      // Undeclared exception!
      try { 
        castTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CastTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      Class<DirectTypeSafeStringValue> class1 = DirectTypeSafeStringValue.class;
      NullTypeSafeValue<DirectTypeSafeStringValue> nullTypeSafeValue0 = new NullTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class1);
      CoalesceTypeSafeValue<DirectTypeSafeStringValue> coalesceTypeSafeValue0 = new CoalesceTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, nullTypeSafeValue0);
      CastTypeSafeValue<Object> castTypeSafeValue0 = new CastTypeSafeValue<Object>((TypeSafeQuery) null, class0, coalesceTypeSafeValue0);
      CastTypeSafeValue<Object> castTypeSafeValue1 = new CastTypeSafeValue<Object>(copyContext0, castTypeSafeValue0);
  }
}
