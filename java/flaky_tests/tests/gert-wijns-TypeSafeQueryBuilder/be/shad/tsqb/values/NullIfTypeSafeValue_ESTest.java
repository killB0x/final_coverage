/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:39:12 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.query.copy.Copyable;
import be.shad.tsqb.values.CaseTypeSafeValue;
import be.shad.tsqb.values.CoalesceTypeSafeValue;
import be.shad.tsqb.values.CustomTypeSafeValue;
import be.shad.tsqb.values.DirectTypeSafeValue;
import be.shad.tsqb.values.EntityTypeSafeValue;
import be.shad.tsqb.values.FunctionTypeSafeValue;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import be.shad.tsqb.values.HqlQueryValue;
import be.shad.tsqb.values.NullIfTypeSafeValue;
import be.shad.tsqb.values.NullTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import be.shad.tsqb.values.WrappedTypeSafeValue;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullIfTypeSafeValue_ESTest extends NullIfTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<Integer> class1 = Integer.class;
      NullTypeSafeValue<Integer> nullTypeSafeValue0 = new NullTypeSafeValue<Integer>((TypeSafeQuery) null, class1);
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, nullTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(207, false, false, false, false);
      HqlQueryValue hqlQueryValue0 = entityTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      CustomTypeSafeValue<Object> customTypeSafeValue0 = new CustomTypeSafeValue<Object>((TypeSafeQuery) null, class0, hqlQueryValue0);
      CustomTypeSafeValue<Object> customTypeSafeValue1 = new CustomTypeSafeValue<Object>((TypeSafeQuery) null, class0, hqlQueryValue0);
      NullIfTypeSafeValue<Object> nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Object>((TypeSafeQuery) null, customTypeSafeValue1, customTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-584));
      DirectTypeSafeValue<Integer> directTypeSafeValue0 = new DirectTypeSafeValue<Integer>((TypeSafeQuery) null, integer0);
      NullIfTypeSafeValue<Integer> nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Integer>((TypeSafeQuery) null, directTypeSafeValue0, directTypeSafeValue0);
      // Undeclared exception!
      try { 
        nullIfTypeSafeValue0.copy((CopyContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(2);
      CopyContext copyContext0 = new CopyContext();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, integer0);
      NullIfTypeSafeValue<Object> nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Object>((TypeSafeQuery) null, directTypeSafeValue0, directTypeSafeValue0);
      copyContext0.put((Object) directTypeSafeValue0, integer0);
      // Undeclared exception!
      try { 
        nullIfTypeSafeValue0.copy(copyContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class be.shad.tsqb.values.TypeSafeValue (java.lang.Integer is in module java.base of loader 'bootstrap'; be.shad.tsqb.values.TypeSafeValue is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @62005f46)
         //
         verifyException("be.shad.tsqb.values.FunctionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      CaseTypeSafeValue<Boolean> caseTypeSafeValue0 = new CaseTypeSafeValue<Boolean>((TypeSafeQuery) null, class0);
      FunctionTypeSafeValue<Boolean> functionTypeSafeValue0 = new FunctionTypeSafeValue<Boolean>((TypeSafeQuery) null, "", caseTypeSafeValue0);
      caseTypeSafeValue0.is((TypeSafeValue<Boolean>) functionTypeSafeValue0);
      NullIfTypeSafeValue<Boolean> nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Boolean>((TypeSafeQuery) null, caseTypeSafeValue0, caseTypeSafeValue0);
      CopyContext copyContext0 = new CopyContext();
      Class<Integer> class1 = Integer.class;
      WrappedTypeSafeValue<Integer> wrappedTypeSafeValue0 = new WrappedTypeSafeValue<Integer>((TypeSafeQuery) null, "t)bm`", class1, nullIfTypeSafeValue0);
      NullIfTypeSafeValue<Integer> nullIfTypeSafeValue1 = new NullIfTypeSafeValue<Integer>((TypeSafeQuery) null, wrappedTypeSafeValue0, wrappedTypeSafeValue0);
      NullIfTypeSafeValue<Integer> nullIfTypeSafeValue2 = null;
      try {
        nullIfTypeSafeValue2 = new NullIfTypeSafeValue<Integer>(copyContext0, nullIfTypeSafeValue1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      NullIfTypeSafeValue<Locale.Category> nullIfTypeSafeValue0 = null;
      try {
        nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Locale.Category>(copyContext0, (FunctionTypeSafeValue<Locale.Category>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullIfTypeSafeValue<Integer> nullIfTypeSafeValue0 = null;
      try {
        nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Integer>((TypeSafeQuery) null, (TypeSafeValue<Integer>) null, (TypeSafeValue<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.FunctionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      Class<Integer> class1 = Integer.class;
      NullTypeSafeValue<Integer> nullTypeSafeValue0 = new NullTypeSafeValue<Integer>((TypeSafeQuery) null, class1);
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, nullTypeSafeValue0);
      CoalesceTypeSafeValue<Object> coalesceTypeSafeValue0 = new CoalesceTypeSafeValue<Object>((TypeSafeQuery) null, entityTypeSafeValue0);
      NullIfTypeSafeValue<Object> nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Object>(copyContext0, coalesceTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      CaseTypeSafeValue<Boolean> caseTypeSafeValue0 = new CaseTypeSafeValue<Boolean>((TypeSafeQuery) null, class0);
      NullIfTypeSafeValue<Boolean> nullIfTypeSafeValue0 = new NullIfTypeSafeValue<Boolean>((TypeSafeQuery) null, caseTypeSafeValue0, caseTypeSafeValue0);
      CopyContext copyContext0 = new CopyContext();
      Copyable copyable0 = nullIfTypeSafeValue0.copy(copyContext0);
      assertNotNull(copyable0);
  }
}
