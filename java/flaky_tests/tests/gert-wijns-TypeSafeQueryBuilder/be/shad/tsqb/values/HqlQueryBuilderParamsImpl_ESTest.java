/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:52:37 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HqlQueryBuilderParamsImpl_ESTest extends HqlQueryBuilderParamsImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0 = HqlQueryBuilderParamsImpl.builder();
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1 = hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0.buildingForDisplay(true);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1.build();
      assertFalse(hqlQueryBuilderParamsImpl0.isCreatingOrderingBy());
      assertTrue(hqlQueryBuilderParamsImpl0.isBuildingForDisplay());
      assertFalse(hqlQueryBuilderParamsImpl0.isSelectingCount());
      assertFalse(hqlQueryBuilderParamsImpl0.isRequiresLiterals());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, true, true, true, true);
      boolean boolean0 = hqlQueryBuilderParamsImpl0.setRequiresLiterals(false);
      assertTrue(boolean0);
      assertFalse(hqlQueryBuilderParamsImpl0.isRequiresLiterals());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isSelectingCount();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl((-577), false, false, false, false);
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isRequiresLiterals();
      assertFalse(boolean0);
      assertFalse(hqlQueryBuilderParamsImpl0.isBuildingForDisplay());
      assertFalse(hqlQueryBuilderParamsImpl0.isSelectingCount());
      assertFalse(hqlQueryBuilderParamsImpl0.isCreatingOrderingBy());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, false, true, false, false);
      assertFalse(hqlQueryBuilderParamsImpl0.isBuildingForDisplay());
      
      hqlQueryBuilderParamsImpl0.setBuildingForDisplay(true);
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isBuildingForDisplay();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0 = HqlQueryBuilderParamsImpl.builder();
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1 = hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0.namedParamCount(0);
      assertSame(hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1, hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0 = HqlQueryBuilderParamsImpl.builder();
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1 = hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0.creatingOrderingBy(false);
      assertSame(hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1, hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0 = HqlQueryBuilderParamsImpl.builder();
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1 = hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0.requiresLiterals(false);
      assertSame(hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1, hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0 = new HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder();
      String string0 = hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0.toString();
      assertEquals("HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder(namedParamCount=0, requiresLiterals=false, creatingOrderingBy=false, buildingForDisplay=false, selectingCount=false)", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0 = new HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder();
      HqlQueryBuilderParamsImpl.HqlQueryBuilderParamsImplBuilder hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1 = hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0.selectingCount(true);
      assertSame(hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder0, hqlQueryBuilderParamsImpl_HqlQueryBuilderParamsImplBuilder1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, true, true, true, false);
      assertTrue(hqlQueryBuilderParamsImpl0.isCreatingOrderingBy());
      
      hqlQueryBuilderParamsImpl0.setCreatingOrderingBy(false);
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isCreatingOrderingBy();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      String string0 = hqlQueryBuilderParamsImpl0.createNamedParameter();
      assertEquals("np1", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, true, true, true, false);
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isCreatingOrderingBy();
      assertTrue(hqlQueryBuilderParamsImpl0.isRequiresLiterals());
      assertFalse(hqlQueryBuilderParamsImpl0.isSelectingCount());
      assertTrue(hqlQueryBuilderParamsImpl0.isBuildingForDisplay());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isBuildingForDisplay();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, false, false, false, true);
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isSelectingCount();
      assertFalse(hqlQueryBuilderParamsImpl0.isCreatingOrderingBy());
      assertTrue(boolean0);
      assertFalse(hqlQueryBuilderParamsImpl0.isRequiresLiterals());
      assertFalse(hqlQueryBuilderParamsImpl0.isBuildingForDisplay());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      boolean boolean0 = hqlQueryBuilderParamsImpl0.setRequiresLiterals(true);
      assertTrue(hqlQueryBuilderParamsImpl0.isRequiresLiterals());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      hqlQueryBuilderParamsImpl0.setSelectingCount(false);
      assertFalse(hqlQueryBuilderParamsImpl0.isSelectingCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, true, true, true, false);
      boolean boolean0 = hqlQueryBuilderParamsImpl0.isRequiresLiterals();
      assertTrue(hqlQueryBuilderParamsImpl0.isCreatingOrderingBy());
      assertTrue(hqlQueryBuilderParamsImpl0.isBuildingForDisplay());
      assertFalse(hqlQueryBuilderParamsImpl0.isSelectingCount());
      assertTrue(boolean0);
  }
}
