/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:41:19 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.TypeSafeQueryInternal;
import be.shad.tsqb.values.CaseTypeSafeValue;
import be.shad.tsqb.values.CoalesceTypeSafeValue;
import be.shad.tsqb.values.CollectionTypeSafeValue;
import be.shad.tsqb.values.ConcatTypeSafeValue;
import be.shad.tsqb.values.CustomTypeSafeValue;
import be.shad.tsqb.values.DirectTypeSafeStringValue;
import be.shad.tsqb.values.DirectTypeSafeValue;
import be.shad.tsqb.values.EntityTypeSafeValue;
import be.shad.tsqb.values.FunctionTypeSafeValue;
import be.shad.tsqb.values.ProjectionTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import be.shad.tsqb.values.TypeSafeValueFunctions;
import be.shad.tsqb.values.partial.PartialNullIf;
import java.time.Month;
import java.time.chrono.MinguoEra;
import java.util.Collection;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeSafeValueFunctions_ESTest extends TypeSafeValueFunctions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Date> class0 = Date.class;
      CustomTypeSafeValue<Date> customTypeSafeValue0 = new CustomTypeSafeValue<Date>((TypeSafeQuery) null, class0, ";G8pUhgRAC:[{|JJ");
      TypeSafeValue<Date> typeSafeValue0 = typeSafeValueFunctions0.wrap((TypeSafeValue<Date>) customTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      DirectTypeSafeStringValue directTypeSafeStringValue0 = new DirectTypeSafeStringValue((TypeSafeQuery) null);
      TypeSafeValue<String> typeSafeValue0 = typeSafeValueFunctions0.upper((TypeSafeValue<String>) directTypeSafeStringValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Long> class0 = Long.class;
      CustomTypeSafeValue<Long> customTypeSafeValue0 = new CustomTypeSafeValue<Long>((TypeSafeQuery) null, class0, "@O");
      CoalesceTypeSafeValue<Long> coalesceTypeSafeValue0 = typeSafeValueFunctions0.coalesce((TypeSafeValue<Long>) customTypeSafeValue0);
      TypeSafeValue<Long> typeSafeValue0 = typeSafeValueFunctions0.sum((TypeSafeValue<Long>) coalesceTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<String> class0 = String.class;
      Class<Date> class1 = Date.class;
      FunctionTypeSafeValue<Date> functionTypeSafeValue0 = new FunctionTypeSafeValue<Date>((TypeSafeQuery) null, "45lraYuVSzk+tk]", class1);
      EntityTypeSafeValue<String> entityTypeSafeValue0 = new EntityTypeSafeValue<String>((TypeSafeQuery) null, class0, functionTypeSafeValue0);
      TypeSafeValue<String> typeSafeValue0 = typeSafeValueFunctions0.mins(entityTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Long> class0 = Long.class;
      DirectTypeSafeValue<Long> directTypeSafeValue0 = new DirectTypeSafeValue<Long>((TypeSafeQuery) null, class0);
      TypeSafeValue<Long> typeSafeValue0 = typeSafeValueFunctions0.minn((TypeSafeValue<Long>) directTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Date> class0 = Date.class;
      CaseTypeSafeValue<Date> caseTypeSafeValue0 = new CaseTypeSafeValue<Date>((TypeSafeQuery) null, class0);
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      TypeSafeValue<Date> typeSafeValue0 = typeSafeValueFunctions0.mind(caseTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<String> class0 = String.class;
      CollectionTypeSafeValue<String> collectionTypeSafeValue0 = new CollectionTypeSafeValue<String>((TypeSafeQuery) null, class0);
      TypeSafeValue<String> typeSafeValue0 = typeSafeValueFunctions0.maxs(collectionTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Long> class0 = Long.class;
      ProjectionTypeSafeValue<Long> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Long>((TypeSafeQuery) null, class0, "avg");
      TypeSafeValue<Long> typeSafeValue0 = typeSafeValueFunctions0.maxn((TypeSafeValue<Long>) projectionTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Date> class0 = Date.class;
      CustomTypeSafeValue<Date> customTypeSafeValue0 = new CustomTypeSafeValue<Date>((TypeSafeQuery) null, class0, "Zdzdm1q");
      TypeSafeValue<Date> typeSafeValue0 = typeSafeValueFunctions0.maxd(customTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      DirectTypeSafeStringValue directTypeSafeStringValue0 = new DirectTypeSafeStringValue((TypeSafeQuery) null);
      TypeSafeValue<String> typeSafeValue0 = typeSafeValueFunctions0.lower((TypeSafeValue<String>) directTypeSafeStringValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Integer integer0 = new Integer(0);
      Class<Date> class0 = Date.class;
      CollectionTypeSafeValue<Date> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Date>((TypeSafeQuery) null, class0, (Collection<Date>) null, integer0);
      TypeSafeValue<Date> typeSafeValue0 = typeSafeValueFunctions0.distinct((TypeSafeValue<Date>) collectionTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Month month0 = Month.SEPTEMBER;
      DirectTypeSafeValue<Month> directTypeSafeValue0 = new DirectTypeSafeValue<Month>((TypeSafeQuery) null, month0);
      TypeSafeValue<Long> typeSafeValue0 = typeSafeValueFunctions0.countDistinct((TypeSafeValue<Month>) directTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Float> class0 = Float.class;
      CaseTypeSafeValue<Float> caseTypeSafeValue0 = new CaseTypeSafeValue<Float>((TypeSafeQuery) null, class0);
      TypeSafeValue<Float> typeSafeValue0 = typeSafeValueFunctions0.avg((TypeSafeValue<Float>) caseTypeSafeValue0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.distinct((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.DistinctTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.maxd((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.max((Date) mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 1937);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.coalesce((Date) mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      MinguoEra minguoEra0 = MinguoEra.BEFORE_ROC;
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.concat((Enum<?>) minguoEra0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.max((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Long> class0 = Long.class;
      CaseTypeSafeValue<Long> caseTypeSafeValue0 = typeSafeValueFunctions0.caseWhen(class0);
      assertNotNull(caseTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.maxs((TypeSafeValue<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.nullIf((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.maxn((TypeSafeValue<Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.avg((TypeSafeValue<Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.max((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.avg((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.countDistinct((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.DistinctTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.wrap((TypeSafeValue<Byte>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.concat((Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      ConcatTypeSafeValue concatTypeSafeValue0 = typeSafeValueFunctions0.concat((TypeSafeValue<?>) null);
      assertNotNull(concatTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Date> class0 = Date.class;
      TypeSafeValue<Date> typeSafeValue0 = typeSafeValueFunctions0.cast((TypeSafeValue<Date>) null, class0);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.min((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.lower("be.shad.tsqb.restrictions.RestrictionsGroupImpl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      PartialNullIf<Double> partialNullIf0 = typeSafeValueFunctions0.nullIf((TypeSafeValue<Double>) null);
      assertNotNull(partialNullIf0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      TypeSafeValue<Long> typeSafeValue0 = typeSafeValueFunctions0.length((TypeSafeValue<String>) null);
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.mins((TypeSafeValue<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.min("u*RM_|rp]r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.upper((TypeSafeValue<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.mind((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.minn((TypeSafeValue<Byte>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Class<Date> class0 = Date.class;
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.cast((Date) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      TypeSafeValue<Long> typeSafeValue0 = typeSafeValueFunctions0.count();
      assertNotNull(typeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.coalesce((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.FunctionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.min((Date) mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.sum((TypeSafeValue<Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.countDistinct((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.lower((TypeSafeValue<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.WrappedTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.concat("_+rVp#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.sum((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.length("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      Month month0 = Month.FEBRUARY;
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.distinct(month0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TypeSafeValueFunctions typeSafeValueFunctions0 = new TypeSafeValueFunctions((TypeSafeQueryInternal) null);
      // Undeclared exception!
      try { 
        typeSafeValueFunctions0.upper("be.shad.tsqb.joins.JoinParamsImpl$JoinParamsImplBuilder");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueFunctions", e);
      }
  }
}
