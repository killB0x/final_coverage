/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:30:46 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.restrictions.Restriction;
import be.shad.tsqb.values.RestrictionTypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RestrictionTypeSafeValue_ESTest extends RestrictionTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RestrictionTypeSafeValue restrictionTypeSafeValue0 = null;
      try {
        restrictionTypeSafeValue0 = new RestrictionTypeSafeValue((TypeSafeQuery) null, (Restriction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.RestrictionTypeSafeValue", e);
      }
  }
}
