/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:38:29 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.query.copy.Copyable;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import be.shad.tsqb.values.ProjectionTypeSafeValue;
import java.time.format.TextStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProjectionTypeSafeValue_ESTest extends ProjectionTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Object>((TypeSafeQuery) null, class0, "B>t");
      Copyable copyable0 = projectionTypeSafeValue0.copy(copyContext0);
      assertNotNull(copyable0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<TextStyle> class0 = TextStyle.class;
      ProjectionTypeSafeValue<TextStyle> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<TextStyle>((TypeSafeQuery) null, class0, "");
      ProjectionTypeSafeValue<TextStyle> projectionTypeSafeValue1 = null;
      try {
        projectionTypeSafeValue1 = new ProjectionTypeSafeValue<TextStyle>((CopyContext) null, projectionTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Object>((TypeSafeQuery) null, class0, "be.shad.tsqb.values.ProjectionTypeSafeValue");
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        projectionTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.ProjectionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Object>((TypeSafeQuery) null, class0, "B>t");
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue1 = new ProjectionTypeSafeValue<Object>(copyContext0, projectionTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<TextStyle> class0 = TextStyle.class;
      ProjectionTypeSafeValue<TextStyle> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<TextStyle>((TypeSafeQuery) null, class0, "");
      // Undeclared exception!
      try { 
        projectionTypeSafeValue0.copy((CopyContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }
}
