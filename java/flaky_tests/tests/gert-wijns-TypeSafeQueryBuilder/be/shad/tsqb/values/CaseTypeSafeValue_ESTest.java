/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 22:55:25 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.TypeSafeQueryScopeValidator;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.query.copy.Copyable;
import be.shad.tsqb.restrictions.RestrictionsGroupInternal;
import be.shad.tsqb.values.CaseTypeSafeValue;
import be.shad.tsqb.values.CastTypeSafeValue;
import be.shad.tsqb.values.CollectionTypeSafeValue;
import be.shad.tsqb.values.CustomTypeSafeValue;
import be.shad.tsqb.values.HqlQueryBuilderParams;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import be.shad.tsqb.values.HqlQueryValue;
import be.shad.tsqb.values.HqlQueryValueImpl;
import be.shad.tsqb.values.NullTypeSafeValue;
import be.shad.tsqb.values.OnGoingCase;
import be.shad.tsqb.values.OnGoingCaseImpl;
import be.shad.tsqb.values.ProjectionTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import java.time.chrono.MinguoEra;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CaseTypeSafeValue_ESTest extends CaseTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TypeSafeQuery typeSafeQuery0 = null;
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      CopyContext copyContext0 = new CopyContext();
      Class<Integer> class1 = Integer.class;
      CollectionTypeSafeValue<Integer> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Integer>((TypeSafeQuery) null, class1);
      CollectionTypeSafeValue<Integer> collectionTypeSafeValue1 = new CollectionTypeSafeValue<Integer>(copyContext0, collectionTypeSafeValue0);
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) collectionTypeSafeValue1);
      boolean boolean0 = true;
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(0, false, true, true, true);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Collection is empty when transforming to query
         //
         verifyException("be.shad.tsqb.values.CollectionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      CastTypeSafeValue<Integer> castTypeSafeValue0 = new CastTypeSafeValue<Integer>((TypeSafeQuery) null, class0, caseTypeSafeValue0);
      CopyContext copyContext0 = new CopyContext();
      OnGoingCaseImpl<Object> onGoingCaseImpl0 = (OnGoingCaseImpl<Object>) mock(OnGoingCaseImpl.class, new ViolatedAssumptionAnswer());
      OnGoingCaseImpl<Object> onGoingCaseImpl1 = new OnGoingCaseImpl<Object>(copyContext0, onGoingCaseImpl0);
      onGoingCaseImpl1.getGroup();
      Class<Object> class1 = Object.class;
      NullTypeSafeValue<Object> nullTypeSafeValue0 = new NullTypeSafeValue<Object>((TypeSafeQuery) null, class1);
      OnGoingCaseImpl<Object> onGoingCaseImpl2 = new OnGoingCaseImpl<Object>((RestrictionsGroupInternal) null, nullTypeSafeValue0);
      copyContext0.get(onGoingCaseImpl2);
      castTypeSafeValue0.copy(copyContext0);
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) castTypeSafeValue0);
      int int0 = (-1415);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl((-1415), false, false, false, false);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.validateContainedInScope((TypeSafeQueryScopeValidator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      Class<Integer> class1 = Integer.class;
      CustomTypeSafeValue<Integer> customTypeSafeValue0 = new CustomTypeSafeValue<Integer>((TypeSafeQuery) null, class1, (HqlQueryValue) null);
      CopyContext copyContext0 = new CopyContext();
      CaseTypeSafeValue<Integer> caseTypeSafeValue1 = new CaseTypeSafeValue<Integer>(copyContext0, caseTypeSafeValue0);
      caseTypeSafeValue1.is((TypeSafeValue<Integer>) caseTypeSafeValue0);
      caseTypeSafeValue1.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      HqlQueryBuilderParamsImpl.builder();
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl1 = new HqlQueryBuilderParamsImpl((-551), true, true, true, true);
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      caseTypeSafeValue0.validateContainedInScope(typeSafeQueryScopeValidator0);
      assertNotSame(caseTypeSafeValue0, caseTypeSafeValue1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CaseTypeSafeValue<Object> caseTypeSafeValue0 = new CaseTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.copy((CopyContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) caseTypeSafeValue0);
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) caseTypeSafeValue0);
      HqlQueryValueImpl hqlQueryValueImpl0 = new HqlQueryValueImpl();
      CopyContext copyContext0 = new CopyContext();
      CaseTypeSafeValue<Integer> caseTypeSafeValue1 = null;
      try {
        caseTypeSafeValue1 = new CaseTypeSafeValue<Integer>(copyContext0, caseTypeSafeValue0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      CaseTypeSafeValue<Integer> caseTypeSafeValue1 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) caseTypeSafeValue1);
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      caseTypeSafeValue0.validateContainedInScope(typeSafeQueryScopeValidator0);
      assertNotSame(caseTypeSafeValue0, caseTypeSafeValue1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) caseTypeSafeValue0);
      HqlQueryValueImpl hqlQueryValueImpl0 = new HqlQueryValueImpl();
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CaseTypeSafeValue<Object> caseTypeSafeValue0 = new CaseTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.is((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TypeSafeQuery typeSafeQuery0 = null;
      Class<Object> class0 = Object.class;
      CaseTypeSafeValue<Object> caseTypeSafeValue0 = new CaseTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      caseTypeSafeValue0.validateContainedInScope(typeSafeQueryScopeValidator0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      caseTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      CopyContext copyContext0 = new CopyContext();
      copyContext0.get((OnGoingCaseImpl<Object>) null);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.is((Object) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      Class<Integer> class1 = Integer.TYPE;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class1);
      CopyContext copyContext0 = new CopyContext();
      caseTypeSafeValue0.copy(copyContext0);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.toHqlQueryValue((HqlQueryBuilderParams) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      OnGoingCase<Integer> onGoingCase0 = caseTypeSafeValue0.is((TypeSafeValue<Integer>) caseTypeSafeValue0);
      assertNotNull(onGoingCase0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      CaseTypeSafeValue<Integer> caseTypeSafeValue1 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      caseTypeSafeValue1.is((TypeSafeValue<Integer>) caseTypeSafeValue0);
      HqlQueryValue hqlQueryValue0 = caseTypeSafeValue1.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      assertEquals("( else  end)", hqlQueryValue0.getHql());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TypeSafeQuery typeSafeQuery0 = null;
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl(1910, true, true, true, true);
      Class<Integer> class1 = Integer.class;
      CustomTypeSafeValue<Integer> customTypeSafeValue0 = new CustomTypeSafeValue<Integer>((TypeSafeQuery) null, class1, (HqlQueryValue) null);
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) customTypeSafeValue0);
      hqlQueryBuilderParamsImpl0.setCreatingOrderingBy(true);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) caseTypeSafeValue0);
      caseTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CaseTypeSafeValue<Object> caseTypeSafeValue0 = new CaseTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      CopyContext copyContext0 = new CopyContext();
      Copyable copyable0 = caseTypeSafeValue0.copy(copyContext0);
      assertNotNull(copyable0);
      
      CopyContext copyContext1 = new CopyContext();
      caseTypeSafeValue0.copy(copyContext1);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      caseTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      CaseTypeSafeValue<Object> caseTypeSafeValue1 = new CaseTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        caseTypeSafeValue1.select();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      HqlQueryValue hqlQueryValue0 = caseTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      assertEquals("", hqlQueryValue0.getHql());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TypeSafeQuery typeSafeQuery0 = null;
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      CopyContext copyContext0 = new CopyContext();
      caseTypeSafeValue0.copy(copyContext0);
      CopyContext copyContext1 = new CopyContext();
      RestrictionsGroupInternal restrictionsGroupInternal0 = null;
      Class<Object> class1 = Object.class;
      String string0 = "%&zI7c(-";
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Object>((TypeSafeQuery) null, class1, "%&zI7c(-");
      ProjectionTypeSafeValue<Object> projectionTypeSafeValue1 = new ProjectionTypeSafeValue<Object>(copyContext0, projectionTypeSafeValue0);
      // Undeclared exception!
      try { 
        projectionTypeSafeValue1.select();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      Class<Integer> class1 = Integer.class;
      CustomTypeSafeValue<Integer> customTypeSafeValue0 = new CustomTypeSafeValue<Integer>((TypeSafeQuery) null, class1, (HqlQueryValue) null);
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) customTypeSafeValue0);
      CopyContext copyContext0 = new CopyContext();
      CaseTypeSafeValue<Integer> caseTypeSafeValue1 = new CaseTypeSafeValue<Integer>(copyContext0, caseTypeSafeValue0);
      CaseTypeSafeValue<Integer> caseTypeSafeValue2 = new CaseTypeSafeValue<Integer>(copyContext0, caseTypeSafeValue0);
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      caseTypeSafeValue2.validateContainedInScope(typeSafeQueryScopeValidator0);
      assertNotSame(caseTypeSafeValue2, caseTypeSafeValue1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      Class<Integer> class1 = Integer.class;
      CustomTypeSafeValue<Integer> customTypeSafeValue0 = new CustomTypeSafeValue<Integer>((TypeSafeQuery) null, class1, (HqlQueryValue) null);
      caseTypeSafeValue0.is((TypeSafeValue<Integer>) customTypeSafeValue0);
      HqlQueryBuilderParamsImpl.builder();
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      caseTypeSafeValue0.validateContainedInScope(typeSafeQueryScopeValidator0);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.isNull();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<Object> class0 = Object.class;
      CaseTypeSafeValue<Object> caseTypeSafeValue0 = new CaseTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      CaseTypeSafeValue<Object> caseTypeSafeValue1 = new CaseTypeSafeValue<Object>(copyContext0, caseTypeSafeValue0);
      caseTypeSafeValue0.validateContainedInScope((TypeSafeQueryScopeValidator) null);
      assertNotSame(caseTypeSafeValue0, caseTypeSafeValue1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CaseTypeSafeValue<Object> caseTypeSafeValue0 = new CaseTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        caseTypeSafeValue0.isNull();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      TypeSafeQuery typeSafeQuery0 = null;
      Class<MinguoEra> class0 = MinguoEra.class;
      CaseTypeSafeValue<MinguoEra> caseTypeSafeValue0 = new CaseTypeSafeValue<MinguoEra>((TypeSafeQuery) null, class0);
      CaseTypeSafeValue<MinguoEra> caseTypeSafeValue1 = new CaseTypeSafeValue<MinguoEra>(copyContext0, caseTypeSafeValue0);
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      caseTypeSafeValue1.validateContainedInScope(typeSafeQueryScopeValidator0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        caseTypeSafeValue1.isNull();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.CaseTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      CaseTypeSafeValue<Integer> caseTypeSafeValue0 = new CaseTypeSafeValue<Integer>((TypeSafeQuery) null, class0);
      CopyContext copyContext0 = new CopyContext();
      CaseTypeSafeValue<OnGoingCaseImpl<Integer>> caseTypeSafeValue1 = null;
      try {
        caseTypeSafeValue1 = new CaseTypeSafeValue<OnGoingCaseImpl<Integer>>(copyContext0, (CaseTypeSafeValue<OnGoingCaseImpl<Integer>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<MinguoEra> class0 = MinguoEra.class;
      CaseTypeSafeValue<MinguoEra> caseTypeSafeValue0 = new CaseTypeSafeValue<MinguoEra>((TypeSafeQuery) null, class0);
      CaseTypeSafeValue<MinguoEra> caseTypeSafeValue1 = null;
      try {
        caseTypeSafeValue1 = new CaseTypeSafeValue<MinguoEra>((CopyContext) null, caseTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }
}
