/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:44:32 GMT 2022
 */

package be.shad.tsqb.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.TypeSafeQueryScopeValidator;
import be.shad.tsqb.query.copy.CopyContext;
import be.shad.tsqb.query.copy.Copyable;
import be.shad.tsqb.values.CaseTypeSafeValue;
import be.shad.tsqb.values.CollectionTypeSafeValue;
import be.shad.tsqb.values.DirectTypeSafeStringValue;
import be.shad.tsqb.values.DirectTypeSafeValue;
import be.shad.tsqb.values.EntityTypeSafeValue;
import be.shad.tsqb.values.HqlQueryBuilderParamsImpl;
import be.shad.tsqb.values.HqlQueryValue;
import be.shad.tsqb.values.OperationTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EntityTypeSafeValue_ESTest extends EntityTypeSafeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, collectionTypeSafeValue0);
      // Undeclared exception!
      try { 
        entityTypeSafeValue0.validateContainedInScope((TypeSafeQueryScopeValidator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.EntityTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<DirectTypeSafeStringValue> class0 = DirectTypeSafeStringValue.class;
      EntityTypeSafeValue<DirectTypeSafeStringValue> entityTypeSafeValue0 = new EntityTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0, (TypeSafeValue<?>) null);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        entityTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.EntityTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<DirectTypeSafeStringValue> class0 = DirectTypeSafeStringValue.class;
      Class<Double> class1 = Double.class;
      DirectTypeSafeValue<Double> directTypeSafeValue0 = new DirectTypeSafeValue<Double>((TypeSafeQuery) null, class1);
      EntityTypeSafeValue<DirectTypeSafeStringValue> entityTypeSafeValue0 = new EntityTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0, directTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      // Undeclared exception!
      try { 
        entityTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Value is null when transforming to query
         //
         verifyException("be.shad.tsqb.values.DirectTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl();
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, collectionTypeSafeValue0);
      // Undeclared exception!
      try { 
        entityTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Collection is empty when transforming to query
         //
         verifyException("be.shad.tsqb.values.CollectionTypeSafeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, collectionTypeSafeValue0);
      collectionTypeSafeValue0.setNamedValue(entityTypeSafeValue0);
      Class<DirectTypeSafeStringValue> class1 = DirectTypeSafeStringValue.class;
      EntityTypeSafeValue<DirectTypeSafeStringValue> entityTypeSafeValue1 = new EntityTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class1, collectionTypeSafeValue0);
      CopyContext copyContext0 = new CopyContext();
      // Undeclared exception!
      try { 
        entityTypeSafeValue1.copy(copyContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      EntityTypeSafeValue<OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy> entityTypeSafeValue0 = null;
      try {
        entityTypeSafeValue0 = new EntityTypeSafeValue<OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy>(copyContext0, (EntityTypeSafeValue<OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CopyContext copyContext0 = new CopyContext();
      Class<DirectTypeSafeStringValue> class0 = DirectTypeSafeStringValue.class;
      CaseTypeSafeValue<DirectTypeSafeStringValue> caseTypeSafeValue0 = new CaseTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<DirectTypeSafeStringValue> operationTypeSafeValue0 = new OperationTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, caseTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      EntityTypeSafeValue<DirectTypeSafeStringValue> entityTypeSafeValue0 = new EntityTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0, operationTypeSafeValue0);
      EntityTypeSafeValue<DirectTypeSafeStringValue> entityTypeSafeValue1 = new EntityTypeSafeValue<DirectTypeSafeStringValue>(copyContext0, entityTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<DirectTypeSafeStringValue> class0 = DirectTypeSafeStringValue.class;
      CaseTypeSafeValue<DirectTypeSafeStringValue> caseTypeSafeValue0 = new CaseTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0);
      OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0 = OperationTypeSafeValue.OperationTypeSafeValueBracketsPolicy.Always;
      OperationTypeSafeValue<DirectTypeSafeStringValue> operationTypeSafeValue0 = new OperationTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, caseTypeSafeValue0, operationTypeSafeValue_OperationTypeSafeValueBracketsPolicy0);
      EntityTypeSafeValue<DirectTypeSafeStringValue> entityTypeSafeValue0 = new EntityTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0, operationTypeSafeValue0);
      TypeSafeQueryScopeValidator typeSafeQueryScopeValidator0 = mock(TypeSafeQueryScopeValidator.class, new ViolatedAssumptionAnswer());
      entityTypeSafeValue0.validateContainedInScope(typeSafeQueryScopeValidator0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<DirectTypeSafeStringValue> class0 = DirectTypeSafeStringValue.class;
      CaseTypeSafeValue<DirectTypeSafeStringValue> caseTypeSafeValue0 = new CaseTypeSafeValue<DirectTypeSafeStringValue>((TypeSafeQuery) null, class0);
      Class<Object> class1 = Object.class;
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class1, caseTypeSafeValue0);
      HqlQueryBuilderParamsImpl hqlQueryBuilderParamsImpl0 = new HqlQueryBuilderParamsImpl((-2987), true, true, false, false);
      HqlQueryValue hqlQueryValue0 = entityTypeSafeValue0.toHqlQueryValue(hqlQueryBuilderParamsImpl0);
      assertEquals("", hqlQueryValue0.getHql());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, collectionTypeSafeValue0);
      CopyContext copyContext0 = new CopyContext();
      Copyable copyable0 = entityTypeSafeValue0.copy(copyContext0);
      assertNotNull(copyable0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Object> class0 = Object.class;
      CollectionTypeSafeValue<Object> collectionTypeSafeValue0 = new CollectionTypeSafeValue<Object>((TypeSafeQuery) null, class0);
      EntityTypeSafeValue<Object> entityTypeSafeValue0 = new EntityTypeSafeValue<Object>((TypeSafeQuery) null, class0, collectionTypeSafeValue0);
      // Undeclared exception!
      try { 
        entityTypeSafeValue0.copy((CopyContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.values.TypeSafeValueImpl", e);
      }
  }
}
