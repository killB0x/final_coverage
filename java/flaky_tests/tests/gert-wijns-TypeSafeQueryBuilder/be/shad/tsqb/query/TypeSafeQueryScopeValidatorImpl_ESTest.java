/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:15:51 GMT 2022
 */

package be.shad.tsqb.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.data.TypeSafeQueryProxyData;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.TypeSafeQueryInternal;
import be.shad.tsqb.query.TypeSafeQueryScopeValidatorImpl;
import be.shad.tsqb.query.TypeSafeRootQueryInternal;
import be.shad.tsqb.query.TypeSafeSubQueryImpl;
import be.shad.tsqb.values.CaseTypeSafeValue;
import be.shad.tsqb.values.CountTypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeSafeQueryScopeValidatorImpl_ESTest extends TypeSafeQueryScopeValidatorImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeSafeQueryScopeValidatorImpl typeSafeQueryScopeValidatorImpl0 = new TypeSafeQueryScopeValidatorImpl((TypeSafeQueryInternal) null, (TypeSafeQueryProxyData) null);
      Class<CountTypeSafeValue> class0 = CountTypeSafeValue.class;
      CaseTypeSafeValue<CountTypeSafeValue> caseTypeSafeValue0 = new CaseTypeSafeValue<CountTypeSafeValue>((TypeSafeQuery) null, class0);
      typeSafeQueryScopeValidatorImpl0.validateInScope(caseTypeSafeValue0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeSafeSubQueryImpl<CountTypeSafeValue> typeSafeSubQueryImpl0 = (TypeSafeSubQueryImpl<CountTypeSafeValue>) mock(TypeSafeSubQueryImpl.class, new ViolatedAssumptionAnswer());
      doReturn((TypeSafeRootQueryInternal) null).when(typeSafeSubQueryImpl0).getRootQuery();
      doReturn((TypeSafeQueryInternal) null).when(typeSafeSubQueryImpl0).getParentQuery();
      TypeSafeQueryScopeValidatorImpl typeSafeQueryScopeValidatorImpl0 = new TypeSafeQueryScopeValidatorImpl(typeSafeSubQueryImpl0, (TypeSafeQueryProxyData) null);
      // Undeclared exception!
      try { 
        typeSafeQueryScopeValidatorImpl0.validateInScope(typeSafeSubQueryImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeSafeSubQueryImpl<CountTypeSafeValue> typeSafeSubQueryImpl0 = (TypeSafeSubQueryImpl<CountTypeSafeValue>) mock(TypeSafeSubQueryImpl.class, new ViolatedAssumptionAnswer());
      doReturn((TypeSafeQueryInternal) null).when(typeSafeSubQueryImpl0).getParentQuery();
      TypeSafeQueryScopeValidatorImpl typeSafeQueryScopeValidatorImpl0 = new TypeSafeQueryScopeValidatorImpl((TypeSafeQueryInternal) null, (TypeSafeQueryProxyData) null);
      typeSafeQueryScopeValidatorImpl0.validateInScope(typeSafeSubQueryImpl0);
  }
}
