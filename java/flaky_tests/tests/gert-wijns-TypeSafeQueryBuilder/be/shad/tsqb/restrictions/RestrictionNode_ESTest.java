/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:49:32 GMT 2022
 */

package be.shad.tsqb.restrictions;

import org.junit.Test;
import static org.junit.Assert.*;
import be.shad.tsqb.data.TypeSafeQueryProxyData;
import be.shad.tsqb.query.TypeSafeQueryInternal;
import be.shad.tsqb.restrictions.Restriction;
import be.shad.tsqb.restrictions.RestrictionNode;
import be.shad.tsqb.restrictions.RestrictionNodeType;
import be.shad.tsqb.restrictions.RestrictionsGroupImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RestrictionNode_ESTest extends RestrictionNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RestrictionsGroupImpl restrictionsGroupImpl0 = new RestrictionsGroupImpl((TypeSafeQueryInternal) null, (TypeSafeQueryProxyData) null);
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      RestrictionNode restrictionNode0 = new RestrictionNode(restrictionsGroupImpl0, restrictionNodeType0);
      RestrictionNodeType restrictionNodeType1 = restrictionNode0.getType();
      assertSame(restrictionNodeType0, restrictionNodeType1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      RestrictionNode restrictionNode0 = new RestrictionNode((Restriction) null, restrictionNodeType0);
      Restriction restriction0 = restrictionNode0.getRestriction();
      assertNull(restriction0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RestrictionNode restrictionNode0 = new RestrictionNode((Restriction) null, (RestrictionNodeType) null);
      restrictionNode0.getType();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RestrictionsGroupImpl restrictionsGroupImpl0 = new RestrictionsGroupImpl((TypeSafeQueryInternal) null, (TypeSafeQueryProxyData) null);
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      RestrictionNode restrictionNode0 = new RestrictionNode(restrictionsGroupImpl0, restrictionNodeType0);
      RestrictionsGroupImpl restrictionsGroupImpl1 = (RestrictionsGroupImpl)restrictionNode0.getRestriction();
      assertTrue(restrictionsGroupImpl1.isEmpty());
  }
}
