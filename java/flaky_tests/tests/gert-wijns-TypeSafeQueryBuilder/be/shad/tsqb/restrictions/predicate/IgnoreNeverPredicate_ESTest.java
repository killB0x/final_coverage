/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:35:04 GMT 2022
 */

package be.shad.tsqb.restrictions.predicate;

import org.junit.Test;
import static org.junit.Assert.*;
import be.shad.tsqb.restrictions.predicate.IgnoreNeverPredicate;
import be.shad.tsqb.restrictions.predicate.RestrictionPredicate;
import be.shad.tsqb.values.TypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IgnoreNeverPredicate_ESTest extends IgnoreNeverPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IgnoreNeverPredicate ignoreNeverPredicate0 = new IgnoreNeverPredicate();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IgnoreNeverPredicate ignoreNeverPredicate0 = (IgnoreNeverPredicate)RestrictionPredicate.IGNORE_NEVER;
      boolean boolean0 = ignoreNeverPredicate0.isValueApplicable((TypeSafeValue) null);
      assertTrue(boolean0);
  }
}
