/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:20:51 GMT 2022
 */

package be.shad.tsqb.restrictions.predicate;

import org.junit.Test;
import static org.junit.Assert.*;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.restrictions.predicate.IgnoreDirectNullPredicate;
import be.shad.tsqb.values.DirectTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IgnoreDirectNullPredicate_ESTest extends IgnoreDirectNullPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IgnoreDirectNullPredicate ignoreDirectNullPredicate0 = new IgnoreDirectNullPredicate();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, ignoreDirectNullPredicate0);
      directTypeSafeValue0.setNamedValue((Object) null);
      boolean boolean0 = ignoreDirectNullPredicate0.isValueApplicable(directTypeSafeValue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IgnoreDirectNullPredicate ignoreDirectNullPredicate0 = new IgnoreDirectNullPredicate();
      DirectTypeSafeValue<Object> directTypeSafeValue0 = new DirectTypeSafeValue<Object>((TypeSafeQuery) null, ignoreDirectNullPredicate0);
      boolean boolean0 = ignoreDirectNullPredicate0.isValueApplicable(directTypeSafeValue0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IgnoreDirectNullPredicate ignoreDirectNullPredicate0 = new IgnoreDirectNullPredicate();
      boolean boolean0 = ignoreDirectNullPredicate0.isValueApplicable((TypeSafeValue<?>) null);
      assertTrue(boolean0);
  }
}
