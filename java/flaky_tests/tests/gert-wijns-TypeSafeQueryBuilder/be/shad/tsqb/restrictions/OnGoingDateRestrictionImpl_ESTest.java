/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:36:27 GMT 2022
 */

package be.shad.tsqb.restrictions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.data.TypeSafeQueryProxyData;
import be.shad.tsqb.query.TypeSafeQuery;
import be.shad.tsqb.query.TypeSafeQueryInternal;
import be.shad.tsqb.restrictions.OnGoingDateRestriction;
import be.shad.tsqb.restrictions.OnGoingDateRestrictionImpl;
import be.shad.tsqb.restrictions.RestrictionNodeType;
import be.shad.tsqb.restrictions.RestrictionsGroupImpl;
import be.shad.tsqb.restrictions.RestrictionsGroupInternal;
import be.shad.tsqb.restrictions.predicate.IgnoreDirectEmptyStringPredicate;
import be.shad.tsqb.restrictions.predicate.IgnoreDirectNullPredicate;
import be.shad.tsqb.restrictions.predicate.IgnoreEmptyCollectionPredicate;
import be.shad.tsqb.restrictions.predicate.RestrictionPredicate;
import be.shad.tsqb.values.NullTypeSafeValue;
import be.shad.tsqb.values.ProjectionTypeSafeValue;
import be.shad.tsqb.values.TypeSafeValue;
import be.shad.tsqb.values.WrappedTypeSafeValue;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OnGoingDateRestrictionImpl_ESTest extends OnGoingDateRestrictionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      Class<Date> class0 = Date.class;
      ProjectionTypeSafeValue<Date> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Date>((TypeSafeQuery) null, class0, " ");
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.beforeOrEq((TypeSafeValue<Date>) projectionTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.RestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      RestrictionsGroupImpl restrictionsGroupImpl0 = new RestrictionsGroupImpl((TypeSafeQueryInternal) null, (TypeSafeQueryProxyData) null);
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl(restrictionsGroupImpl0, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notAfter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.RestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl1 = onGoingDateRestrictionImpl0.createContinuedOnGoingRestriction(restrictionNodeType0, (TypeSafeValue<Date>) null);
      assertNotSame(onGoingDateRestrictionImpl1, onGoingDateRestrictionImpl0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      MockDate mockDate0 = new MockDate();
      IgnoreDirectNullPredicate ignoreDirectNullPredicate0 = (IgnoreDirectNullPredicate)RestrictionPredicate.IGNORE_NULL;
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.after((Date) mockDate0, (RestrictionPredicate) ignoreDirectNullPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notBefore((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.RestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notBefore();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      MockDate mockDate0 = new MockDate();
      IgnoreEmptyCollectionPredicate ignoreEmptyCollectionPredicate0 = new IgnoreEmptyCollectionPredicate();
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notBefore((Date) mockDate0, (RestrictionPredicate) ignoreEmptyCollectionPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notAfter((Date) null, (RestrictionPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notAfter((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.RestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      MockDate mockDate0 = new MockDate(1, 0, 0, 0, 1);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.before((Date) mockDate0, (RestrictionPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notAfter((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.afterOrEq();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      Class<Date> class0 = onGoingDateRestrictionImpl0.getSupportedValueClass();
      assertEquals("class java.util.Date", class0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.after((TypeSafeValue<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.RestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.after();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.afterOrEq((Date) mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.beforeOrEq();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      MockDate mockDate0 = new MockDate();
      IgnoreDirectEmptyStringPredicate ignoreDirectEmptyStringPredicate0 = new IgnoreDirectEmptyStringPredicate();
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.beforeOrEq((Date) mockDate0, (RestrictionPredicate) ignoreDirectEmptyStringPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.before();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      Class<Date> class0 = Date.class;
      WrappedTypeSafeValue<Date> wrappedTypeSafeValue0 = new WrappedTypeSafeValue<Date>((TypeSafeQuery) null, "t<-LBJ[27|I", class0, (TypeSafeValue<?>) null);
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, wrappedTypeSafeValue0);
      OnGoingDateRestriction onGoingDateRestriction0 = onGoingDateRestrictionImpl0.createOriginalOnGoingRestriction(restrictionNodeType0, (TypeSafeValue<Date>) null);
      assertNotSame(onGoingDateRestriction0, onGoingDateRestrictionImpl0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      Class<Date> class0 = Date.class;
      ProjectionTypeSafeValue<Date> projectionTypeSafeValue0 = new ProjectionTypeSafeValue<Date>((TypeSafeQuery) null, class0, "");
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.before((TypeSafeValue<Date>) projectionTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.RestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      Class<Date> class0 = Date.class;
      NullTypeSafeValue<Date> nullTypeSafeValue0 = new NullTypeSafeValue<Date>((TypeSafeQuery) null, class0);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.afterOrEq((TypeSafeValue<Date>) nullTypeSafeValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.RestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.beforeOrEq((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.Or;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      MockDate mockDate0 = new MockDate();
      IgnoreDirectNullPredicate ignoreDirectNullPredicate0 = (IgnoreDirectNullPredicate)RestrictionPredicate.IGNORE_NULL;
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.afterOrEq((Date) mockDate0, (RestrictionPredicate) ignoreDirectNullPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      MockDate mockDate0 = new MockDate();
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = null;
      try {
        onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.notBefore((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.after((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RestrictionNodeType restrictionNodeType0 = RestrictionNodeType.And;
      OnGoingDateRestrictionImpl onGoingDateRestrictionImpl0 = new OnGoingDateRestrictionImpl((RestrictionsGroupInternal) null, restrictionNodeType0, (TypeSafeValue<Date>) null);
      // Undeclared exception!
      try { 
        onGoingDateRestrictionImpl0.before((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.restrictions.OnGoingRestrictionImpl", e);
      }
  }
}
