/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 22:13:41 GMT 2022
 */

package be.shad.tsqb.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.data.TypeSafeQueryProxyData;
import be.shad.tsqb.proxy.TypeSafeQueryProxy;
import be.shad.tsqb.proxy.TypeSafeQueryProxyType;
import be.shad.tsqb.query.JoinType;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeSafeQueryProxyData_ESTest extends TypeSafeQueryProxyData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "}d{`-H", class0);
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "}d{`-H", class0);
      typeSafeQueryProxyData0.putChild(typeSafeQueryProxyData1);
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData1.setJoinType(joinType0);
      assertEquals(TypeSafeQueryProxyType.EntityPropertyType, typeSafeQueryProxyData1.getProxyType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "kJHMm+", class0);
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.ComponentType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "9T", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, ".", "s##6c%+AR%s}F");
      typeSafeQueryProxyData1.getProxyType();
      assertEquals("9T", typeSafeQueryProxyData1.getCompositePropertyPath());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityCollectionType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "3Olp`Y8Ui3kI]c", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "NQp!fXYR6I-(H[^", "W4|\"BLtsz{^4W%)sV)\"r");
      TypeSafeQueryProxyType typeSafeQueryProxyType1 = typeSafeQueryProxyData0.getProxyType();
      assertEquals(TypeSafeQueryProxyType.EntityCollectionType, typeSafeQueryProxyType1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "mGoc\"o,JX8-CLh", class0);
      Class<TypeSafeQueryProxyData> class1 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.CompositeType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(typeSafeQueryProxy0).toString();
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "5hSP", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, (String) null, (String) null);
      typeSafeQueryProxyData1.getProxyAs();
      assertEquals("5hSP", typeSafeQueryProxyData1.getCompositePropertyPath());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "mGoc\"o,JX8-CLh", class0);
      Class<TypeSafeQueryProxyData> class1 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.CompositeType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      doReturn("5hSP").when(typeSafeQueryProxy0).toString();
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "5hSP", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, (String) null, (String) null);
      typeSafeQueryProxyData1.getProxy();
      assertEquals("5hSP", typeSafeQueryProxyData1.getCompositePropertyPath());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "$V;fUE", (Class<?>) null);
      Class<?> class1 = typeSafeQueryProxyData1.getPropertyType();
      assertNull(class1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityCollectionType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, " f>1bBRJ<w", (String) null);
      String string0 = typeSafeQueryProxyData0.getPropertyPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "s##6c%+AR%s}F", class0);
      String string0 = typeSafeQueryProxyData0.getPropertyPath();
      assertEquals("s##6c%+AR%s}F", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "7p-4k=ioMPgrC9", class0);
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityMapType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "7p-4k=ioMPgrC9", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "", "");
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = typeSafeQueryProxyData1.getParent();
      assertSame(typeSafeQueryProxyData0, typeSafeQueryProxyData2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "kJHMm+", class0);
      JoinType joinType0 = JoinType.None;
      typeSafeQueryProxyData0.setJoinType(joinType0);
      JoinType joinType1 = typeSafeQueryProxyData0.getJoinType();
      assertFalse(joinType1.isCreateAdditionalJoin());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "", class0);
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityPropertyType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "@=d^$yD|AxJ>9", "@=d^$yD|AxJ>9");
      String string0 = typeSafeQueryProxyData1.getIdentifierPath();
      assertEquals("@=d^$yD|AxJ>9", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "d", class0);
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityCollectionType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "d", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "", "");
      String string0 = typeSafeQueryProxyData1.getIdentifierPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityPropertyType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "ComponentType", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "ComponentType", "ComponentType");
      typeSafeQueryProxyData0.setCustomAlias("IZ%T");
      String string0 = typeSafeQueryProxyData0.getCustomAlias();
      assertEquals("IZ%T", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0);
      typeSafeQueryProxyData0.setCustomAlias("");
      String string0 = typeSafeQueryProxyData0.getCustomAlias();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "mGoc\"o,JX8-CLh", class0);
      Class<TypeSafeQueryProxyData> class1 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.CompositeType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "5hSP", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, (String) null, (String) null);
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = typeSafeQueryProxyData1.getCompositeTypeEntityParent();
      assertNotNull(typeSafeQueryProxyData2);
      assertEquals(TypeSafeQueryProxyType.EntityPropertyType, typeSafeQueryProxyData2.getProxyType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "kJHMm+", class0);
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.CompositeType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "9T", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, ".", "ComponentType");
      String string0 = typeSafeQueryProxyData1.getCompositePropertyPath();
      assertEquals("9T", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "kJHMm+", class0);
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.CompositeType;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "kJHMm+", "^#[_F*#(1AM#pOI;[}X");
      String string0 = typeSafeQueryProxyData1.getCompositePropertyPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "kJHMm+", class0);
      typeSafeQueryProxyData0.putChild(typeSafeQueryProxyData0);
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = typeSafeQueryProxyData0.getChild("kJHMm+");
      assertSame(typeSafeQueryProxyData1, typeSafeQueryProxyData0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "be.shad.tsqb.joins.JoinParamsImpl", (Class<?>) null);
      // Undeclared exception!
      try { 
        typeSafeQueryProxyData0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "tz}A!$`jx%Wo", class0);
      // Undeclared exception!
      try { 
        typeSafeQueryProxyData0.putChild((TypeSafeQueryProxyData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.CompositeType;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = null;
      try {
        typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "@?z_|W;eh0yeM", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "@?z_|W;eh0yeM", "@?z_|W;eh0yeM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityMapType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "u~|yj0K", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|$\u0003(", "|6cu '{,h|$\u0003(");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "|6cu '{,h|$\u0003(", class0);
      JoinType joinType0 = JoinType.Default;
      JoinType joinType1 = JoinType.LeftFetch;
      typeSafeQueryProxyData1.setJoinType(joinType1);
      typeSafeQueryProxyData0.setJoinType(joinType0);
      JoinType joinType2 = typeSafeQueryProxyData0.getEffectiveJoinType();
      assertEquals(JoinType.Fetch, joinType2);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityMapType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "u~|yj0K", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|$\u0003(", "|6cu '{,h|$\u0003(");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "|6cu '{,h|$\u0003(", class1);
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "u~|yj0K", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "|6cu '{,h|$\u0003(", "|6cu '{,h|$\u0003(");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData2.setJoinType(joinType0);
      JoinType joinType1 = JoinType.LeftFetch;
      typeSafeQueryProxyData1.setJoinType(joinType1);
      JoinType joinType2 = typeSafeQueryProxyData2.getEffectiveJoinType();
      assertEquals(JoinType.Left, joinType2);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityMapType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "u~|yj0K", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|$\u0003(", "|6cu '{,h|$\u0003(");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "|6cu '{,h|$\u0003(", class1);
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "u~|yj0K", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "|6cu '{,h|$\u0003(", "|6cu '{,h|$\u0003(");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData2.setJoinType(joinType0);
      typeSafeQueryProxyData1.setJoinType(joinType0);
      JoinType joinType1 = typeSafeQueryProxyData2.getEffectiveJoinType();
      assertEquals(JoinType.Inner, joinType1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityPropertyType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "u|yj0K", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "u|yj0K", "u|yj0K");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "u|yj0K", class1);
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "u|yj0K", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "u|yj0K", "u|yj0K");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData2.setJoinType(joinType0);
      JoinType joinType1 = JoinType.Left;
      typeSafeQueryProxyData1.setJoinType(joinType1);
      JoinType joinType2 = typeSafeQueryProxyData2.getEffectiveJoinType();
      assertEquals(JoinType.Left, joinType2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityPropertyType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "u|yj0K", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "u|yj0K", "u|yj0K");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "u|yj0K", class1);
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "u|yj0K", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "u|yj0K", "u|yj0K");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData2.setJoinType(joinType0);
      // Undeclared exception!
      try { 
        typeSafeQueryProxyData2.getEffectiveJoinType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|\u0003(", "|6cu '{,h|\u0003(");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "|6cu '{,h|\u0003(", class0);
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData1.setJoinType(joinType0);
      JoinType joinType1 = typeSafeQueryProxyData1.getEffectiveJoinType();
      assertEquals(JoinType.Inner, joinType1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.SelectionDtoType;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "fWmzs|j[~;>T+J?T)#!", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "fWmzs|j[~;>T+J?T)#!", "fWmzs|j[~;>T+J?T)#!");
      Class<TypeSafeQueryProxyData> class1 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "A custom alias was already set. [%s, %s]", class1);
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "fWmzs|j[~;>T+J?T)#!", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "A custom alias was already set. [%s, %s]", "|v$Z_5j+(");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData2.setJoinType(joinType0);
      typeSafeQueryProxyData2.putChild(typeSafeQueryProxyData1);
      JoinType joinType1 = typeSafeQueryProxyData2.getEffectiveJoinType();
      assertEquals(JoinType.None, joinType1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|\u0003(", "|6cu '{,h|\u0003(");
      TypeSafeQueryProxyType typeSafeQueryProxyType1 = TypeSafeQueryProxyType.CompositeType;
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "D($Y|J<-S", class0, typeSafeQueryProxyType1, typeSafeQueryProxy1, "[V5=4=*.u1", "5Tow!::CX~!}z{RIm6");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData1.setJoinType(joinType0);
      JoinType joinType1 = typeSafeQueryProxyData1.getEffectiveJoinType();
      assertEquals(JoinType.None, joinType1);
      assertEquals("D($Y|J<-S", typeSafeQueryProxyData1.getCompositePropertyPath());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$VALUES", class0);
      typeSafeQueryProxyData0.setCustomAlias("$VALUES");
      String string0 = typeSafeQueryProxyData0.getAlias();
      assertEquals("$VALUES", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityCollectionType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "f-}U8c#1", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "EntityPropertyType", "f-}U8c#1");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = typeSafeQueryProxyData0.getParent();
      assertNull(typeSafeQueryProxyData1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "", class0);
      String string0 = typeSafeQueryProxyData0.getPropertyPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "\"m_Z:aQV9cMw", class0);
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, (String) null, class0);
      String string0 = typeSafeQueryProxyData1.toString();
      assertEquals("Object:Object.Object:Object", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "c'9+WJLxvh4:$,Z>.3i", class0);
      String string0 = typeSafeQueryProxyData1.toString();
      assertEquals("Object.c'9+WJLxvh4:$,Z>.3i:Object", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      String string0 = typeSafeQueryProxyData0.toString();
      assertEquals("Object", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|\u0003(", "|6cu '{,h|\u0003(");
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      typeSafeQueryProxyData0.putChild(typeSafeQueryProxyData0);
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "D($Y|J<-S", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "|6cu '{,h|\u0003(", "|6cu '{,h|\u0003(");
      JoinType joinType0 = JoinType.LeftFetch;
      typeSafeQueryProxyData0.setJoinType(joinType0);
      JoinType joinType1 = JoinType.Right;
      typeSafeQueryProxyData1.setJoinType(joinType1);
      assertNotSame(typeSafeQueryProxyData1, typeSafeQueryProxyData0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityPropertyType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "9h_=$-U>J?L", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "9h_=$-U>J?L", "9h_=$-U>J?L");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "9h_=$-U>J?L", class1);
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "9h_=$-U>J?L", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "9h_=$-U>J?L", "9h_=$-U>J?L");
      JoinType joinType0 = JoinType.Default;
      JoinType joinType1 = JoinType.LeftFetch;
      typeSafeQueryProxyData1.setJoinType(joinType1);
      typeSafeQueryProxyData1.putChild(typeSafeQueryProxyData0);
      typeSafeQueryProxyData2.setJoinType(joinType0);
      assertEquals(TypeSafeQueryProxyType.EntityPropertyType, typeSafeQueryProxyData2.getProxyType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "D6'& 8Y>", class0);
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "D6'& 8Y>", class0);
      JoinType joinType0 = JoinType.Fetch;
      typeSafeQueryProxyData1.setJoinType(joinType0);
      assertNull(typeSafeQueryProxyData1.getCompositePropertyPath());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0);
      JoinType joinType0 = JoinType.Fetch;
      // Undeclared exception!
      try { 
        typeSafeQueryProxyData0.setJoinType(joinType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // JoinType can only be Inner/Left/Right for class joins. Attempting to set JoinType to [Fetch] for join on class [class java.lang.Object]
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0);
      JoinType joinType0 = JoinType.Right;
      typeSafeQueryProxyData0.setJoinType(joinType0);
      assertEquals(TypeSafeQueryProxyType.EntityPropertyType, typeSafeQueryProxyData0.getProxyType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0);
      JoinType joinType0 = JoinType.Inner;
      typeSafeQueryProxyData0.setJoinType(joinType0);
      assertNull(typeSafeQueryProxyData0.getPropertyPath());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0);
      JoinType joinType0 = JoinType.Left;
      typeSafeQueryProxyData0.setJoinType(joinType0);
      assertNull(typeSafeQueryProxyData0.getCompositePropertyPath());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0);
      // Undeclared exception!
      try { 
        typeSafeQueryProxyData0.setJoinType((JoinType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "}", class0);
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityCollectionType;
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "}", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "}", "|");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData1.setJoinType(joinType0);
      String string0 = typeSafeQueryProxyData1.getAlias();
      assertEquals("|", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "c'9+WJLxvh4:$,Z>.3i", class1);
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "c'9+WJLxvh4:$,Z>.3i", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "$V;fUE", "$V;fUE");
      typeSafeQueryProxyData1.setCustomAlias("7");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData1.setJoinType(joinType0);
      String string0 = typeSafeQueryProxyData2.getAlias();
      assertEquals("7.c'9+WJLxvh4:$,Z>.3i", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityMapType;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "}#g,PBo`eMsS6a5Bcm", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "A custom alias was already set. [%s, %s]", "");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "}#g,PBo`eMsS6a5Bcm", class0);
      JoinType joinType0 = JoinType.Default;
      Class<TypeSafeQueryProxyData> class1 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "MT0* e|#b o2mD", class1, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "f]AnX,WB7Au{:", "");
      JoinType joinType1 = JoinType.LeftFetch;
      typeSafeQueryProxyData2.setJoinType(joinType1);
      typeSafeQueryProxyData1.setJoinType(joinType0);
      String string0 = typeSafeQueryProxyData1.getAlias();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      Class<Object> class1 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class1, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "c'9+WJLxvh4:$,Z>.3i", class1);
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "c'9+WJLxvh4:$,Z>.3i", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "$V;fUE", "$V;fUE");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData2.setJoinType(joinType0);
      // Undeclared exception!
      try { 
        typeSafeQueryProxyData2.getAlias();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|\u0003(", "|6cu '{,h|\u0003(");
      JoinType joinType0 = typeSafeQueryProxyData0.getEffectiveJoinType();
      TypeSafeQueryProxy typeSafeQueryProxy1 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      typeSafeQueryProxyData0.putChild(typeSafeQueryProxyData0);
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "D($Y|J<-S", class0, typeSafeQueryProxyType0, typeSafeQueryProxy1, "|6cu '{,h|\u0003(", "|6cu '{,h|\u0003(");
      JoinType joinType1 = JoinType.Fetch;
      typeSafeQueryProxyData0.setJoinType(joinType1);
      typeSafeQueryProxyData1.setJoinType(joinType0);
      assertEquals("|6cu '{,h|\u0003(", typeSafeQueryProxyData1.getIdentifierPath());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "/gK$JT>OJ6o:", class0);
      typeSafeQueryProxyData0.setCustomAlias("/gK$JT>OJ6o:");
      typeSafeQueryProxyData0.setCustomAlias("/gK$JT>OJ6o:");
      assertEquals(TypeSafeQueryProxyType.EntityPropertyType, typeSafeQueryProxyData0.getProxyType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      typeSafeQueryProxyData0.setCustomAlias("7");
      // Undeclared exception!
      try { 
        typeSafeQueryProxyData0.setCustomAlias(".");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A custom alias was already set. [7, .]
         //
         verifyException("be.shad.tsqb.data.TypeSafeQueryProxyData", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "", class0);
      typeSafeQueryProxyData0.setCustomAlias("");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "", class0);
      String string0 = typeSafeQueryProxyData1.getAlias();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.SelectionDtoType;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "fWmzs|j[~;>T+J?T)#!", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "fWmzs|j[~;>T+J?T)#!", "fWmzs|j[~;>T+J?T)#!");
      Class<TypeSafeQueryProxyData> class1 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "A custom alias was already set. [%s, %s]", class1);
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "fWmzs|j[~;>T+J?T)#!", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "A custom alias was already set. [%s, %s]", "|v$Z_5j+(");
      JoinType joinType0 = JoinType.Default;
      typeSafeQueryProxyData2.setJoinType(joinType0);
      typeSafeQueryProxyData2.putChild(typeSafeQueryProxyData1);
      assertEquals("A custom alias was already set. [%s, %s]", typeSafeQueryProxyData2.getIdentifierPath());
      assertEquals("fWmzs|j[~;>T+J?T)#!", typeSafeQueryProxyData2.getPropertyPath());
      
      String string0 = typeSafeQueryProxyData2.getAlias();
      assertEquals("fWmzs|j[~;>T+J?T)#!.A custom alias was already set. [%s, %s].fWmzs|j[~;>T+J?T)#!", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0);
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.ComponentType;
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = new TypeSafeQueryProxyData(typeSafeQueryProxyData0, "$V;fUE", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "$V;fUE", ", name=");
      TypeSafeQueryProxyData typeSafeQueryProxyData2 = new TypeSafeQueryProxyData(typeSafeQueryProxyData1, "FI\"'A17Q-", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "$V;fUE", "$V;fUE");
      assertEquals("$V;fUE", typeSafeQueryProxyData2.getIdentifierPath());
      assertEquals("FI\"'A17Q-", typeSafeQueryProxyData2.getPropertyPath());
      assertEquals("$V;fUE", typeSafeQueryProxyData1.getIdentifierPath());
      assertEquals("$V;fUE.FI\"'A17Q-", typeSafeQueryProxyData2.getCompositePropertyPath());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "|6cu '{,h|\u0003(", "|6cu '{,h|\u0003(");
      typeSafeQueryProxyData0.getCompositePropertyPath();
      assertEquals("$V;fUE", typeSafeQueryProxyData0.getPropertyPath());
      assertEquals("|6cu '{,h|\u0003(", typeSafeQueryProxyData0.getIdentifierPath());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      Class<?> class1 = typeSafeQueryProxyData0.getPropertyType();
      assertFalse(class1.isInterface());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0);
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = typeSafeQueryProxyData0.getCompositeTypeEntityParent();
      assertNull(typeSafeQueryProxyData1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityMapType;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "> ;@&bZ8rBZ", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "> ;@&bZ8rBZ", "> ;@&bZ8rBZ");
      Collection<TypeSafeQueryProxyData> collection0 = typeSafeQueryProxyData0.getChildren();
      assertFalse(collection0.contains(typeSafeQueryProxyData0));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityType;
      TypeSafeQueryProxy typeSafeQueryProxy0 = mock(TypeSafeQueryProxy.class, new ViolatedAssumptionAnswer());
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "$V;fUE", class0, typeSafeQueryProxyType0, typeSafeQueryProxy0, "$V;fUE", "$V;fUE");
      TypeSafeQueryProxyData typeSafeQueryProxyData1 = typeSafeQueryProxyData0.getChild("#E");
      assertNull(typeSafeQueryProxyData1);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "kJHMm+", class0);
      typeSafeQueryProxyData0.getJoinType();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyType typeSafeQueryProxyType0 = TypeSafeQueryProxyType.EntityMapType;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "> ;@&bZ8rBZ", class0, typeSafeQueryProxyType0, (TypeSafeQueryProxy) null, "> ;@&bZ8rBZ", "> ;@&bZ8rBZ");
      String string0 = typeSafeQueryProxyData0.getCustomAlias();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "d", class0);
      String string0 = typeSafeQueryProxyData0.getIdentifierPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, (String) null, class0);
      TypeSafeQueryProxy typeSafeQueryProxy0 = typeSafeQueryProxyData0.getProxy();
      assertNull(typeSafeQueryProxy0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Class<TypeSafeQueryProxyData> class0 = TypeSafeQueryProxyData.class;
      TypeSafeQueryProxyData typeSafeQueryProxyData0 = new TypeSafeQueryProxyData((TypeSafeQueryProxyData) null, "", class0);
      Object object0 = typeSafeQueryProxyData0.getProxyAs();
      assertNull(object0);
  }
}
