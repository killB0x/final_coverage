/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:22:42 GMT 2022
 */

package be.shad.tsqb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.NamedParameter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NamedParameter_ESTest extends NamedParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NamedParameter namedParameter0 = new NamedParameter("", "");
      Object object0 = namedParameter0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NamedParameter namedParameter0 = new NamedParameter((String) null, (Object) null);
      String string0 = namedParameter0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NamedParameter namedParameter0 = new NamedParameter("Lat *?xTyK)!jw", "Lat *?xTyK)!jw");
      String string0 = namedParameter0.getName();
      assertEquals("Lat *?xTyK)!jw", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NamedParameter namedParameter0 = new NamedParameter("", "");
      // Undeclared exception!
      try { 
        namedParameter0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hibernate/proxy/HibernateProxy
         //
         verifyException("be.shad.tsqb.NamedParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NamedParameter namedParameter0 = new NamedParameter("", (Object) null);
      String string0 = namedParameter0.toString();
      assertEquals("[:, null]", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NamedParameter namedParameter0 = new NamedParameter("", (Object) null);
      String string0 = namedParameter0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NamedParameter namedParameter0 = new NamedParameter("", (Object) null);
      Object object0 = namedParameter0.getValue();
      assertNull(object0);
  }
}
