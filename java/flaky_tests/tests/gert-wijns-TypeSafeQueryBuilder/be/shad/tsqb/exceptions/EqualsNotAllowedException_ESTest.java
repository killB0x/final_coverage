/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:33:31 GMT 2022
 */

package be.shad.tsqb.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import be.shad.tsqb.exceptions.EqualsNotAllowedException;
import be.shad.tsqb.query.TypeSafeQueryInternal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EqualsNotAllowedException_ESTest extends EqualsNotAllowedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        EqualsNotAllowedException.create((TypeSafeQueryInternal) null, (Object) null, "be.shad.tsqb.exceptions.Selectxception");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("be.shad.tsqb.exceptions.EqualsNotAllowedException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EqualsNotAllowedException equalsNotAllowedException0 = new EqualsNotAllowedException("");
  }
}
