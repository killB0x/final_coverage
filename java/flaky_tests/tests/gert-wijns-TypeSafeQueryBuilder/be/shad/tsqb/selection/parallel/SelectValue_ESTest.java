/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:16:09 GMT 2022
 */

package be.shad.tsqb.selection.parallel;

import org.junit.Test;
import static org.junit.Assert.*;
import be.shad.tsqb.selection.parallel.SelectValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SelectValue_ESTest extends SelectValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SelectValue<Integer> selectValue0 = new SelectValue<Integer>();
      selectValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SelectValue<Integer> selectValue0 = new SelectValue<Integer>();
      Integer integer0 = new Integer(1152);
      selectValue0.setValue(integer0);
      selectValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SelectValue<Integer> selectValue0 = new SelectValue<Integer>();
      Object object0 = new Object();
      boolean boolean0 = selectValue0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SelectValue<Object> selectValue0 = new SelectValue<Object>();
      boolean boolean0 = selectValue0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SelectValue<Integer> selectValue0 = new SelectValue<Integer>();
      SelectValue<Object> selectValue1 = new SelectValue<Object>();
      boolean boolean0 = selectValue0.equals(selectValue1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SelectValue<Object> selectValue0 = new SelectValue<Object>();
      Object object0 = selectValue0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SelectValue<Integer> selectValue0 = new SelectValue<Integer>();
      SelectValue<Object> selectValue1 = new SelectValue<Object>();
      selectValue1.setValue(selectValue0);
      Object object0 = selectValue1.getValue();
      boolean boolean0 = selectValue0.equals(object0);
      assertTrue(boolean0);
  }
}
