/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 22:46:34 GMT 2022
 */

package be.shad.tsqb.selection;

import org.junit.Test;
import static org.junit.Assert.*;
import be.shad.tsqb.selection.SelectionTreeResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SelectionTreeResult_ESTest extends SelectionTreeResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      Object object1 = new Object();
      selectionTreeResult0.setBuiltValue(object1);
      SelectionTreeResult selectionTreeResult1 = new SelectionTreeResult(object0);
      boolean boolean0 = selectionTreeResult0.equals(selectionTreeResult1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult((Object) null);
      Object object0 = selectionTreeResult0.getCurrentValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      selectionTreeResult0.setBuiltValue(object0);
      Object object1 = selectionTreeResult0.getBuiltValue();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      boolean boolean0 = selectionTreeResult0.canEqual(selectionTreeResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      boolean boolean0 = selectionTreeResult0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult((Object) null);
      boolean boolean0 = selectionTreeResult0.equals(selectionTreeResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      Object object1 = selectionTreeResult0.getCurrentValue();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      Object object1 = selectionTreeResult0.getBuiltValue();
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      selectionTreeResult0.setBuiltValue(object0);
      SelectionTreeResult selectionTreeResult1 = new SelectionTreeResult(object0);
      assertFalse(selectionTreeResult1.equals((Object)selectionTreeResult0));
      
      selectionTreeResult1.setBuiltValue(object0);
      boolean boolean0 = selectionTreeResult0.equals(selectionTreeResult1);
      assertTrue(selectionTreeResult1.equals((Object)selectionTreeResult0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult((Object) null);
      SelectionTreeResult selectionTreeResult1 = new SelectionTreeResult((Object) null);
      assertTrue(selectionTreeResult1.equals((Object)selectionTreeResult0));
      
      Object object0 = new Object();
      selectionTreeResult1.setBuiltValue(object0);
      boolean boolean0 = selectionTreeResult0.equals(selectionTreeResult1);
      assertFalse(selectionTreeResult1.equals((Object)selectionTreeResult0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      Object object1 = new Object();
      SelectionTreeResult selectionTreeResult1 = new SelectionTreeResult(object1);
      boolean boolean0 = selectionTreeResult0.equals(selectionTreeResult1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult((Object) null);
      SelectionTreeResult selectionTreeResult1 = new SelectionTreeResult(selectionTreeResult0);
      boolean boolean0 = selectionTreeResult0.equals(selectionTreeResult1);
      assertFalse(boolean0);
      assertFalse(selectionTreeResult1.equals((Object)selectionTreeResult0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      boolean boolean0 = selectionTreeResult0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult((Object) null);
      SelectionTreeResult selectionTreeResult1 = new SelectionTreeResult(selectionTreeResult0);
      SelectionTreeResult selectionTreeResult2 = new SelectionTreeResult(selectionTreeResult0);
      boolean boolean0 = selectionTreeResult1.equals(selectionTreeResult2);
      assertTrue(boolean0);
      assertFalse(selectionTreeResult2.equals((Object)selectionTreeResult0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult((Object) null);
      Object object0 = new Object();
      selectionTreeResult0.setBuiltValue(object0);
      selectionTreeResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult((Object) null);
      selectionTreeResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      selectionTreeResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      SelectionTreeResult selectionTreeResult0 = new SelectionTreeResult(object0);
      String string0 = selectionTreeResult0.toString();
      assertNotNull(string0);
  }
}
