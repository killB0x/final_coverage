/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 23:23:37 GMT 2022
 */

package be.shad.tsqb.selection.group;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import be.shad.tsqb.selection.group.SelectionTreeFieldSetter;
import be.shad.tsqb.selection.group.SubSelectionTreeField;
import java.lang.reflect.Field;
import java.util.Collection;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SelectionTreeFieldSetter_ESTest extends SelectionTreeFieldSetter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Supplier<Collection<Object>> supplier0 = (Supplier<Collection<Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      SubSelectionTreeField<Object> subSelectionTreeField0 = new SubSelectionTreeField<Object>(59, supplier0, (Field) null, false);
      SelectionTreeFieldSetter.SelectionTreeFieldSetterType selectionTreeFieldSetter_SelectionTreeFieldSetterType0 = subSelectionTreeField0.getType();
      assertEquals(SelectionTreeFieldSetter.SelectionTreeFieldSetterType.COLLECTION, selectionTreeFieldSetter_SelectionTreeFieldSetterType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SubSelectionTreeField<Object> subSelectionTreeField0 = new SubSelectionTreeField<Object>(944, (Supplier<Collection<Object>>) null, (Field) null, true);
      SelectionTreeFieldSetter.SelectionTreeFieldSetterType selectionTreeFieldSetter_SelectionTreeFieldSetterType0 = subSelectionTreeField0.getType();
      assertEquals(SelectionTreeFieldSetter.SelectionTreeFieldSetterType.IDENTITY, selectionTreeFieldSetter_SelectionTreeFieldSetterType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SubSelectionTreeField<Object> subSelectionTreeField0 = new SubSelectionTreeField<Object>(2044, (Supplier<Collection<Object>>) null, (Field) null, false);
      SelectionTreeFieldSetter.SelectionTreeFieldSetterType selectionTreeFieldSetter_SelectionTreeFieldSetterType0 = subSelectionTreeField0.getType();
      assertEquals(SelectionTreeFieldSetter.SelectionTreeFieldSetterType.SINGLE, selectionTreeFieldSetter_SelectionTreeFieldSetterType0);
  }
}
