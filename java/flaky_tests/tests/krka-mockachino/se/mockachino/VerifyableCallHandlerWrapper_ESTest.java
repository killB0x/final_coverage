/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 09:05:11 GMT 2022
 */

package se.mockachino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import se.mockachino.CallHandler;
import se.mockachino.MethodCall;
import se.mockachino.VerifyableCallHandlerWrapper;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerifyableCallHandlerWrapper_ESTest extends VerifyableCallHandlerWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callHandler0).invoke(any() , any(se.mockachino.MethodCall.class));
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      Object object0 = new Object();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[7];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      Object object1 = verifyableCallHandlerWrapper0.invoke(object0, methodCall0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      Object object0 = new Object();
      try { 
        verifyableCallHandlerWrapper0.invoke(object0, (MethodCall) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.VerifyableCallHandlerWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      verifyableCallHandlerWrapper0.verify(mockachinoMethod0);
      assertFalse(mockachinoMethod0.isToStringCall());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(callHandler0).invoke(any() , any(se.mockachino.MethodCall.class));
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      Object object1 = verifyableCallHandlerWrapper0.invoke(object0, methodCall0);
      assertSame(object0, object1);
  }
}
