/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 09:07:22 GMT 2022
 */

package se.mockachino.order;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.Invocation;
import se.mockachino.MethodCall;
import se.mockachino.order.InOrderVerify;
import se.mockachino.order.MockPoint;
import se.mockachino.order.OrderingContext;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderingContext_ESTest extends OrderingContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(0);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      MockPoint mockPoint1 = orderingContext0.afterLastCall();
      OrderingContext orderingContext1 = new OrderingContext(mockPoint1, mockPoint0);
      assertEquals(0, mockPoint1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      orderingContext0.setCurrent((Invocation) null);
      Invocation invocation0 = orderingContext0.getCurrentInvocation();
      assertNull(invocation0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(0);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      Object object0 = new Object();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[1];
      Invocation invocation0 = new Invocation(object0, methodCall0, 0, stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      Invocation invocation1 = orderingContext0.getCurrentInvocation();
      assertEquals(0, invocation1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1143);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      Object object0 = new Object();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[4];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      Invocation invocation0 = new Invocation(object0, methodCall0, 1143, stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      Invocation invocation1 = orderingContext0.getCurrentInvocation();
      assertEquals(1143, invocation1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1143);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      Object object0 = new Object();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[4];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      Invocation invocation0 = new Invocation(object0, methodCall0, 1143, stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      MockPoint mockPoint1 = orderingContext0.beforeLastCall();
      assertEquals(1142, mockPoint1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1242);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      Object object0 = new Object();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.NULL;
      Object[] objectArray0 = new Object[8];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[2];
      Invocation invocation0 = new Invocation(object0, methodCall0, 0, stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      MockPoint mockPoint1 = orderingContext0.atLastCall();
      assertEquals(0, mockPoint1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1143);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      Object object0 = new Object();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[4];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      Invocation invocation0 = new Invocation(object0, methodCall0, 1143, stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      MockPoint mockPoint1 = orderingContext0.atLastCall();
      assertEquals(1143, mockPoint1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(0);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      Object object0 = new Object();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[1];
      Invocation invocation0 = new Invocation(object0, methodCall0, 0, stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      MockPoint mockPoint1 = orderingContext0.afterLastCall();
      assertEquals(1, mockPoint1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1242);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.NULL;
      Object[] objectArray0 = new Object[8];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[2];
      Invocation invocation0 = new Invocation("MockPoint[1242]", methodCall0, (-256), stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      MockPoint mockPoint1 = orderingContext0.afterLastCall();
      assertEquals((-255), mockPoint1.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OrderingContext orderingContext0 = new OrderingContext((MockPoint) null, (MockPoint) null);
      orderingContext0.setCurrent((Invocation) null);
      // Undeclared exception!
      try { 
        orderingContext0.beforeLastCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.order.OrderingContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OrderingContext orderingContext0 = new OrderingContext((MockPoint) null, (MockPoint) null);
      orderingContext0.setCurrent((Invocation) null);
      // Undeclared exception!
      try { 
        orderingContext0.atLastCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.order.OrderingContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OrderingContext orderingContext0 = new OrderingContext((MockPoint) null, (MockPoint) null);
      orderingContext0.setCurrent((Invocation) null);
      // Undeclared exception!
      try { 
        orderingContext0.afterLastCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.order.OrderingContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      InOrderVerify inOrderVerify0 = orderingContext0.verifyAtLeast(1);
      assertNotNull(inOrderVerify0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OrderingContext orderingContext0 = new OrderingContext((MockPoint) null, (MockPoint) null);
      MockPoint mockPoint0 = orderingContext0.atLastCall();
      assertEquals((-1), mockPoint0.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OrderingContext orderingContext0 = new OrderingContext((MockPoint) null, (MockPoint) null);
      Object object0 = new Object();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      Invocation invocation0 = new Invocation(object0, (MethodCall) null, 1, stackTraceElementArray0);
      orderingContext0.setCurrent(invocation0);
      MockPoint mockPoint0 = orderingContext0.beforeLastCall();
      assertEquals(0, mockPoint0.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockPoint mockPoint0 = new MockPoint(1);
      OrderingContext orderingContext0 = new OrderingContext(mockPoint0, mockPoint0);
      Invocation invocation0 = orderingContext0.getCurrentInvocation();
      assertEquals((-1), invocation0.getCallNumber());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OrderingContext orderingContext0 = new OrderingContext((MockPoint) null, (MockPoint) null);
      InOrderVerify inOrderVerify0 = orderingContext0.verify();
      assertNotNull(inOrderVerify0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OrderingContext orderingContext0 = new OrderingContext((MockPoint) null, (MockPoint) null);
      MockPoint mockPoint0 = orderingContext0.beforeLastCall();
      assertEquals((-2), mockPoint0.getCallNumber());
  }
}
