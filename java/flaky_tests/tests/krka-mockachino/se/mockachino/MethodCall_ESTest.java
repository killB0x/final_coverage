/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:33:17 GMT 2022
 */

package se.mockachino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.MethodCall;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodCall_ESTest extends MethodCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MethodCall methodCall0 = new MethodCall((MockachinoMethod) null, (Object[]) null);
      MockachinoMethod mockachinoMethod0 = methodCall0.getMethod();
      assertNull(mockachinoMethod0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[1];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      MockachinoMethod mockachinoMethod1 = methodCall0.getMethod();
      assertEquals("equals", mockachinoMethod1.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      Object[] objectArray0 = new Object[1];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      Object[] objectArray1 = methodCall0.getArguments();
      assertEquals(1, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MethodCall methodCall0 = new MethodCall((MockachinoMethod) null, (Object[]) null);
      // Undeclared exception!
      try { 
        methodCall0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.MethodCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MethodCall methodCall0 = new MethodCall((MockachinoMethod) null, objectArray0);
      // Undeclared exception!
      try { 
        methodCall0.equals(methodCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.MethodCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      Object[] objectArray0 = new Object[1];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      Object[] objectArray1 = new Object[0];
      MethodCall methodCall1 = new MethodCall(mockachinoMethod0, objectArray1);
      boolean boolean0 = methodCall0.equals(methodCall1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      MockachinoMethod mockachinoMethod1 = MockachinoMethod.NULL;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod1, (Object[]) null);
      MethodCall methodCall1 = new MethodCall(mockachinoMethod0, (Object[]) null);
      boolean boolean0 = methodCall0.equals(methodCall1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      boolean boolean0 = methodCall0.equals((MethodCall) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      boolean boolean0 = methodCall0.equals(methodCall0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.find(class0, "toString");
      Object[] objectArray0 = new Object[4];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      MockachinoMethod mockachinoMethod1 = methodCall0.getMethod();
      assertEquals("toString", mockachinoMethod1.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      Object[] objectArray0 = methodCall0.getArguments();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.find(class0, "toString");
      Object[] objectArray0 = new Object[4];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      String string0 = methodCall0.toString();
      assertEquals("toString(null, null, null, null)", string0);
  }
}
