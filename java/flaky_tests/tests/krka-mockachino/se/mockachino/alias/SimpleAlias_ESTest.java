/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:28:21 GMT 2022
 */

package se.mockachino.alias;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.Invocation;
import se.mockachino.MethodCall;
import se.mockachino.alias.SimpleAlias;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleAlias_ESTest extends SimpleAlias_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) objectArray0;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      SimpleAlias simpleAlias0 = new SimpleAlias();
      // Undeclared exception!
      try { 
        simpleAlias0.bind((Object) methodCall0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleAlias simpleAlias0 = new SimpleAlias();
      Invocation invocation0 = new Invocation(simpleAlias0, (MethodCall) null, 3575, (StackTraceElement[]) null);
      // Undeclared exception!
      try { 
        simpleAlias0.bind((Object) invocation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.Invocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleAlias simpleAlias0 = new SimpleAlias();
      // Undeclared exception!
      try { 
        simpleAlias0.getMatches();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Alias must be bound to a mock method
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleAlias simpleAlias0 = new SimpleAlias();
      // Undeclared exception!
      try { 
        simpleAlias0.bind((Object) simpleAlias0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // argument se.mockachino.alias.SimpleAlias@1 is not a mock object
         //
      }
  }
}
