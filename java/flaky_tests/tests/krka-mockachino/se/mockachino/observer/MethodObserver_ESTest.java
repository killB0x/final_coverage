/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:52:41 GMT 2022
 */

package se.mockachino.observer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import se.mockachino.CallHandler;
import se.mockachino.MethodCall;
import se.mockachino.VerifyableCallHandlerWrapper;
import se.mockachino.matchers.MethodMatcher;
import se.mockachino.matchers.MethodMatcherImpl;
import se.mockachino.observer.MethodObserver;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodObserver_ESTest extends MethodObserver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callHandler0).invoke(any() , any(se.mockachino.MethodCall.class));
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[1];
      MethodMatcherImpl methodMatcherImpl0 = new MethodMatcherImpl(mockachinoMethod0, objectArray0);
      MethodObserver methodObserver0 = new MethodObserver(object0, verifyableCallHandlerWrapper0, methodMatcherImpl0);
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      methodObserver0.invoke(methodCall0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      MethodObserver methodObserver0 = new MethodObserver(object0, (CallHandler) null, (MethodMatcher) null);
      Object[] objectArray0 = new Object[2];
      MethodCall methodCall0 = new MethodCall((MockachinoMethod) null, objectArray0);
      // Undeclared exception!
      try { 
        methodObserver0.invoke(methodCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.observer.MethodObserver", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 8);
      Class<Object> class0 = Object.class;
      MockachinoMethod mockachinoMethod0 = new MockachinoMethod("wP$[Il,", classArray0, class0);
      MethodMatcherImpl methodMatcherImpl0 = MethodMatcherImpl.matchAll(mockachinoMethod0);
      MethodObserver methodObserver0 = new MethodObserver(object0, verifyableCallHandlerWrapper0, methodMatcherImpl0);
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, classArray0);
      methodObserver0.invoke(methodCall0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      MethodMatcherImpl methodMatcherImpl0 = MethodMatcherImpl.matchAll(mockachinoMethod0);
      MethodObserver methodObserver0 = new MethodObserver(object0, verifyableCallHandlerWrapper0, methodMatcherImpl0);
      Object[] objectArray0 = new Object[3];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      methodObserver0.invoke(methodCall0);
  }
}
