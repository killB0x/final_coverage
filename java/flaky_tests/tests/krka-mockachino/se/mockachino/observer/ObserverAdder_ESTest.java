/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:59:19 GMT 2022
 */

package se.mockachino.observer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import se.mockachino.CallHandler;
import se.mockachino.VerifyableCallHandlerWrapper;
import se.mockachino.observer.ObserverAdder;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObserverAdder_ESTest extends ObserverAdder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 2);
      Class<Object> class0 = Object.class;
      MockachinoMethod mockachinoMethod0 = new MockachinoMethod("(4EqoJ6D=e!:i", classArray0, class0);
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      ObserverAdder observerAdder0 = new ObserverAdder(verifyableCallHandlerWrapper0);
      // Undeclared exception!
      try { 
        observerAdder0.on((Object) mockachinoMethod0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.util.MockachinoMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ObserverAdder observerAdder0 = new ObserverAdder((CallHandler) null);
      // Undeclared exception!
      try { 
        observerAdder0.on((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mock can not be null
         //
      }
  }
}
