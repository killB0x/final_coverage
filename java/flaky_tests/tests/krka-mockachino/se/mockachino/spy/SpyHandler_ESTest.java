/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:56:31 GMT 2022
 */

package se.mockachino.spy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.MethodCall;
import se.mockachino.spy.SpyHandler;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpyHandler_ESTest extends SpyHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      SpyHandler spyHandler0 = new SpyHandler(object0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[1];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      Object object1 = spyHandler0.invoke(object0, methodCall0);
      assertEquals(false, object1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      SpyHandler spyHandler0 = new SpyHandler(mockachinoMethod0);
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      try { 
        spyHandler0.invoke(mockachinoMethod0, methodCall0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SpyHandler spyHandler0 = new SpyHandler((Object) null);
      try { 
        spyHandler0.invoke((Object) null, (MethodCall) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.spy.SpyHandler", e);
      }
  }
}
