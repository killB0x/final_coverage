/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:47:16 GMT 2022
 */

package se.mockachino.stub;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import se.mockachino.CallHandler;
import se.mockachino.MethodCall;
import se.mockachino.VerifyableCallHandlerWrapper;
import se.mockachino.matchers.MethodMatcherImpl;
import se.mockachino.stub.MethodStub;
import se.mockachino.stub.MethodStubs;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodStubs_ESTest extends MethodStubs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MethodStubs methodStubs0 = new MethodStubs();
      MethodStub methodStub0 = methodStubs0.findMatch((MethodCall) null);
      methodStubs0.add((MethodStub) null);
      methodStubs0.add(methodStub0);
      // Undeclared exception!
      try { 
        methodStubs0.findMatch((MethodCall) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.MethodStubs", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MethodStubs methodStubs0 = new MethodStubs();
      methodStubs0.add((MethodStub) null);
      // Undeclared exception!
      try { 
        methodStubs0.findMatch((MethodCall) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.MethodStubs", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MethodStubs methodStubs0 = new MethodStubs();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      MethodMatcherImpl methodMatcherImpl0 = MethodMatcherImpl.matchAll(mockachinoMethod0);
      MethodStub methodStub0 = new MethodStub(verifyableCallHandlerWrapper0, methodMatcherImpl0);
      methodStubs0.add(methodStub0);
      Object[] objectArray0 = new Object[1];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      MethodStub methodStub1 = methodStubs0.findMatch(methodCall0);
      assertSame(methodStub1, methodStub0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MethodStubs methodStubs0 = new MethodStubs();
      methodStubs0.clear();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MethodStubs methodStubs0 = new MethodStubs();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodMatcherImpl methodMatcherImpl0 = MethodMatcherImpl.matchAll(mockachinoMethod0);
      MethodStub methodStub0 = new MethodStub((CallHandler) null, methodMatcherImpl0);
      methodStubs0.add(methodStub0);
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      MethodStub methodStub1 = methodStubs0.findMatch(methodCall0);
      assertNull(methodStub1);
  }
}
