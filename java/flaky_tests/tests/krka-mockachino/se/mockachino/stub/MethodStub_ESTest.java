/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 09:04:59 GMT 2022
 */

package se.mockachino.stub;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import se.mockachino.CallHandler;
import se.mockachino.VerifyableCallHandlerWrapper;
import se.mockachino.matchers.MethodMatcher;
import se.mockachino.matchers.MethodMatcherImpl;
import se.mockachino.stub.MethodStub;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodStub_ESTest extends MethodStub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      MethodStub methodStub0 = new MethodStub(verifyableCallHandlerWrapper0, (MethodMatcher) null);
      MethodMatcher methodMatcher0 = methodStub0.getMatcher();
      assertNull(methodMatcher0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[2];
      MethodMatcherImpl methodMatcherImpl0 = new MethodMatcherImpl(mockachinoMethod0, objectArray0);
      MethodStub methodStub0 = new MethodStub((CallHandler) null, methodMatcherImpl0);
      CallHandler callHandler0 = methodStub0.getAnswer();
      assertNull(callHandler0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(callHandler0).toString();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[2];
      MethodMatcherImpl methodMatcherImpl0 = new MethodMatcherImpl(mockachinoMethod0, objectArray0);
      MethodStub methodStub0 = new MethodStub(callHandler0, methodMatcherImpl0);
      CallHandler callHandler1 = methodStub0.getAnswer();
      assertSame(callHandler1, callHandler0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[2];
      MethodMatcherImpl methodMatcherImpl0 = new MethodMatcherImpl(mockachinoMethod0, objectArray0);
      MethodStub methodStub0 = new MethodStub(callHandler0, methodMatcherImpl0);
      MethodMatcher methodMatcher0 = methodStub0.getMatcher();
      assertSame(methodMatcherImpl0, methodMatcher0);
  }
}
