/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 07:48:07 GMT 2022
 */

package se.mockachino.stub.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import se.mockachino.MethodCall;
import se.mockachino.stub.exception.ThrowAnswer;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThrowAnswer_ESTest extends ThrowAnswer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ThrowAnswer throwAnswer0 = new ThrowAnswer(mockThrowable0);
      // Undeclared exception!
      try { 
        throwAnswer0.verify((MockachinoMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.exception.ThrowAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ThrowAnswer throwAnswer0 = new ThrowAnswer(mockThrowable0);
      try { 
        throwAnswer0.invoke(mockThrowable0, (MethodCall) null);
        fail("Expecting exception: Throwable");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockError mockError0 = new MockError();
      ThrowAnswer throwAnswer0 = new ThrowAnswer(mockError0);
      try { 
        throwAnswer0.invoke((Object) null, (MethodCall) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ThrowAnswer throwAnswer0 = null;
      try {
        throwAnswer0 = new ThrowAnswer((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.exception.ThrowAnswer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockError mockError0 = new MockError();
      ThrowAnswer throwAnswer0 = new ThrowAnswer(mockError0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      throwAnswer0.verify(mockachinoMethod0);
      assertEquals("equals", mockachinoMethod0.getName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      ThrowAnswer throwAnswer0 = new ThrowAnswer(mockThrowable0);
      // Undeclared exception!
      try { 
        throwAnswer0.verify(mockachinoMethod0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // boolean equals(Object) may not throw class org.evosuite.runtime.mock.java.lang.MockThrowable
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockError mockError0 = new MockError("}<HXdx8&P/)x>=", mockThrowable0);
      StackTraceElement[] stackTraceElementArray0 = mockError0.getStackTrace();
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("j#$7OV L9#n5[+\"[}V", mockError0);
      ThrowAnswer throwAnswer0 = new ThrowAnswer(mockRuntimeException0);
      Class<Object> class0 = Object.class;
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.find(class0, "se.mockachino.util.MockachinoMethod");
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, stackTraceElementArray0);
      try { 
        throwAnswer0.invoke((Object) null, methodCall0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockError mockError0 = new MockError("}<HXdx8&P/)x>=", mockThrowable0);
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("j#$7OV L9#n5[+\"[}V", mockError0);
      ThrowAnswer throwAnswer0 = new ThrowAnswer(mockRuntimeException0);
      throwAnswer0.verify((MockachinoMethod) null);
  }
}
