/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:34:33 GMT 2022
 */

package se.mockachino.stub;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import se.mockachino.CallHandler;
import se.mockachino.VerifyableCallHandler;
import se.mockachino.VerifyableCallHandlerWrapper;
import se.mockachino.matchers.MethodMatcherImpl;
import se.mockachino.stub.Stubber;
import se.mockachino.stub.returnvalue.SequentialAnswers;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Stubber_ESTest extends Stubber_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[8];
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      Object object0 = new Object();
      Stubber stubber1 = stubber0.thenReturn(object0, (Object[]) verifyableCallHandlerArray0);
      assertSame(stubber1, stubber0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[0];
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      Stubber stubber1 = stubber0.thenAnswer(sequentialAnswers0);
      assertSame(stubber0, stubber1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        stubber0.thenThrow(mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.Stubber", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      // Undeclared exception!
      try { 
        stubber0.thenReturn((Object) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.Stubber", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      // Undeclared exception!
      try { 
        stubber0.thenReturn((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.Stubber", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[1];
      verifyableCallHandlerArray0[0] = (VerifyableCallHandler) verifyableCallHandlerWrapper0;
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      // Undeclared exception!
      try { 
        stubber0.onMethodWithAnyArgument(verifyableCallHandlerWrapper0, mockachinoMethod0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // argument se.mockachino.VerifyableCallHandlerWrapper@1 is not a mock object
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[1];
      verifyableCallHandlerArray0[0] = (VerifyableCallHandler) verifyableCallHandlerWrapper0;
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      stubber0.extend(sequentialAnswers0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      // Undeclared exception!
      stubber0.onMethodWithAnyArgument(verifyableCallHandlerWrapper0, mockachinoMethod0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[0];
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      MethodMatcherImpl methodMatcherImpl0 = new MethodMatcherImpl(mockachinoMethod0, verifyableCallHandlerArray0);
      // Undeclared exception!
      try { 
        stubber0.onMethod(mockachinoMethod0, mockachinoMethod0, methodMatcherImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // argument int hashCode() is not a mock object
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[1];
      verifyableCallHandlerArray0[0] = (VerifyableCallHandler) verifyableCallHandlerWrapper0;
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      stubber0.extend(sequentialAnswers0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodMatcherImpl methodMatcherImpl0 = MethodMatcherImpl.matchAll(mockachinoMethod0);
      // Undeclared exception!
      stubber0.onMethod(sequentialAnswers0, mockachinoMethod0, methodMatcherImpl0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      // Undeclared exception!
      try { 
        stubber0.onAnyMethod((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mock can not be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      Class<Object> class0 = Object.class;
      MockachinoMethod mockachinoMethod0 = new MockachinoMethod("", (Class<Object>[]) null, class0);
      // Undeclared exception!
      try { 
        stubber0.onAnyMethod(mockachinoMethod0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.util.MockachinoMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      Class<MockachinoMethod> class0 = MockachinoMethod.class;
      MockachinoMethod mockachinoMethod0 = new MockachinoMethod("", (Class<Object>[]) null, class0);
      // Undeclared exception!
      try { 
        stubber0.on((Object) mockachinoMethod0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.util.MockachinoMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      // Undeclared exception!
      try { 
        stubber0.extend((VerifyableCallHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.Stubber", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[1];
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodMatcherImpl methodMatcherImpl0 = MethodMatcherImpl.matchAll(mockachinoMethod0);
      // Undeclared exception!
      try { 
        stubber0.onMethod(sequentialAnswers0, mockachinoMethod0, methodMatcherImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers((VerifyableCallHandler) null, (VerifyableCallHandler[]) null);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      Stubber stubber1 = stubber0.thenReturn((Object) null, (Object[]) null);
      assertSame(stubber1, stubber0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper((CallHandler) null);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[1];
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      // Undeclared exception!
      try { 
        stubber0.onMethodWithAnyArgument(verifyableCallHandlerWrapper0, mockachinoMethod0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      // Undeclared exception!
      try { 
        stubber0.thenAnswer((CallHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.stub.Stubber", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[7];
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      Stubber stubber1 = stubber0.thenThrow(mockThrowable0);
      assertSame(stubber1, stubber0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CallHandler callHandler0 = mock(CallHandler.class, new ViolatedAssumptionAnswer());
      VerifyableCallHandlerWrapper verifyableCallHandlerWrapper0 = new VerifyableCallHandlerWrapper(callHandler0);
      VerifyableCallHandler[] verifyableCallHandlerArray0 = new VerifyableCallHandler[7];
      SequentialAnswers sequentialAnswers0 = new SequentialAnswers(verifyableCallHandlerWrapper0, verifyableCallHandlerArray0);
      Stubber stubber0 = new Stubber(sequentialAnswers0);
      Stubber stubber1 = stubber0.thenReturn((Object) verifyableCallHandlerArray0[1]);
      assertSame(stubber1, stubber0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Stubber stubber0 = new Stubber((SequentialAnswers) null);
      // Undeclared exception!
      try { 
        stubber0.on((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mock can not be null
         //
      }
  }
}
