/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 09:02:46 GMT 2022
 */

package se.mockachino.matchers.matcher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.matchers.matcher.AndMatcher;
import se.mockachino.matchers.matcher.AnyMatcher;
import se.mockachino.matchers.matcher.Matcher;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BasicMatcher_ESTest extends BasicMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      AnyMatcher<Integer> anyMatcher0 = new AnyMatcher<Integer>(class0);
      String string0 = anyMatcher0.toString();
      assertEquals("<Any>", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AndMatcher<Integer> andMatcher0 = new AndMatcher<Integer>((Matcher<Integer>[]) null);
      // Undeclared exception!
      try { 
        andMatcher0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.matchers.matcher.AndMatcher", e);
      }
  }
}
