/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:35:50 GMT 2022
 */

package se.mockachino.matchers.matcher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.matchers.matcher.AndMatcher;
import se.mockachino.matchers.matcher.AnyMatcher;
import se.mockachino.matchers.matcher.ClassMatcher;
import se.mockachino.matchers.matcher.Matcher;
import se.mockachino.matchers.matcher.NotMatcher;
import se.mockachino.matchers.matcher.OrMatcher;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrMatcher_ESTest extends OrMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 4);
      AnyMatcher<Integer> anyMatcher0 = new AnyMatcher<Integer>((Class<Integer>) null);
      matcherArray0[0] = (Matcher<Integer>) anyMatcher0;
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      Class<Integer> class0 = orMatcher0.getType();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 1);
      AndMatcher<Integer> andMatcher0 = new AndMatcher<Integer>(matcherArray0);
      matcherArray0[0] = (Matcher<Integer>) andMatcher0;
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      orMatcher0.matches(integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>((Matcher<Integer>[]) null);
      // Undeclared exception!
      try { 
        orMatcher0.asString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.matchers.matcher.OrMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 0);
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      String string0 = orMatcher0.toString();
      assertEquals("false", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 3);
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      String string0 = orMatcher0.asString();
      assertEquals("(null | null | null)", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 0);
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      Class<Integer> class0 = orMatcher0.getType();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 3);
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      // Undeclared exception!
      try { 
        orMatcher0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.matchers.matcher.OrMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 3);
      ClassMatcher<Integer> classMatcher0 = ClassMatcher.anyInt();
      NotMatcher<Integer> notMatcher0 = new NotMatcher<Integer>(classMatcher0);
      matcherArray0[0] = (Matcher<Integer>) notMatcher0;
      matcherArray0[1] = (Matcher<Integer>) classMatcher0;
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      Integer integer0 = new Integer(1);
      boolean boolean0 = orMatcher0.matches(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 3);
      ClassMatcher<Integer> classMatcher0 = ClassMatcher.anyInt();
      NotMatcher<Integer> notMatcher0 = new NotMatcher<Integer>(classMatcher0);
      matcherArray0[0] = (Matcher<Integer>) notMatcher0;
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        orMatcher0.matches(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.matchers.matcher.OrMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Matcher<Integer>[] matcherArray0 = (Matcher<Integer>[]) Array.newInstance(Matcher.class, 0);
      OrMatcher<Integer> orMatcher0 = new OrMatcher<Integer>(matcherArray0);
      Integer integer0 = new Integer((-1));
      boolean boolean0 = orMatcher0.matches(integer0);
      assertFalse(boolean0);
  }
}
