/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 07:44:16 GMT 2022
 */

package se.mockachino.verifier;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.Invocation;
import se.mockachino.MethodCall;
import se.mockachino.matchers.matcher.Matcher;
import se.mockachino.util.MockachinoMethod;
import se.mockachino.verifier.InvocationComparator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvocationComparator_ESTest extends InvocationComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.HASHCODE;
      InvocationComparator invocationComparator0 = new InvocationComparator(mockachinoMethod0, (List<Matcher>) null);
      Object[] objectArray0 = new Object[2];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[2];
      MethodCall methodCall1 = new MethodCall(mockachinoMethod0, objectArray0);
      Invocation invocation0 = new Invocation(objectArray0[0], methodCall0, 5443, stackTraceElementArray0);
      Invocation invocation1 = new Invocation(objectArray0[1], methodCall1, 1, stackTraceElementArray0);
      // Undeclared exception!
      try { 
        invocationComparator0.compare(invocation1, invocation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.verifier.InvocationComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.NULL;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      Invocation invocation0 = new Invocation((Object) null, methodCall0, 0, (StackTraceElement[]) null);
      MockachinoMethod mockachinoMethod1 = MockachinoMethod.HASHCODE;
      InvocationComparator invocationComparator0 = new InvocationComparator(mockachinoMethod1, (List<Matcher>) null);
      // Undeclared exception!
      try { 
        invocationComparator0.compare(invocation0, invocation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.verifier.InvocationComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      Invocation invocation0 = new Invocation(mockachinoMethod0, methodCall0, (-2615), (StackTraceElement[]) null);
      MockachinoMethod mockachinoMethod1 = MockachinoMethod.HASHCODE;
      MethodCall methodCall1 = new MethodCall(mockachinoMethod1, (Object[]) null);
      Invocation invocation1 = new Invocation(mockachinoMethod0, methodCall1, (-2615), (StackTraceElement[]) null);
      InvocationComparator invocationComparator0 = new InvocationComparator(mockachinoMethod0, (List<Matcher>) null);
      int int0 = invocationComparator0.compare(invocation0, invocation1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, (Object[]) null);
      Invocation invocation0 = new Invocation(mockachinoMethod0, methodCall0, (-2615), (StackTraceElement[]) null);
      MockachinoMethod mockachinoMethod1 = MockachinoMethod.HASHCODE;
      InvocationComparator invocationComparator0 = new InvocationComparator(mockachinoMethod1, (List<Matcher>) null);
      MethodCall methodCall1 = new MethodCall(mockachinoMethod1, (Object[]) null);
      Invocation invocation1 = new Invocation(mockachinoMethod0, methodCall1, (-2615), (StackTraceElement[]) null);
      int int0 = invocationComparator0.compare(invocation0, invocation1);
      assertEquals(1, int0);
  }
}
