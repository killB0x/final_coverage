/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:58:30 GMT 2022
 */

package se.mockachino.verifier;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.MethodCall;
import se.mockachino.util.MockachinoMethod;
import se.mockachino.verifier.BadUsageBuilder;
import se.mockachino.verifier.BadUsageHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BadUsageHandler_ESTest extends BadUsageHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BadUsageBuilder badUsageBuilder0 = new BadUsageBuilder("");
      BadUsageHandler badUsageHandler0 = new BadUsageHandler(badUsageBuilder0);
      MockachinoMethod mockachinoMethod0 = MockachinoMethod.EQUALS;
      Object[] objectArray0 = new Object[3];
      MethodCall methodCall0 = new MethodCall(mockachinoMethod0, objectArray0);
      Object object0 = badUsageHandler0.invoke(badUsageBuilder0, methodCall0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BadUsageHandler badUsageHandler0 = new BadUsageHandler((BadUsageBuilder) null);
      try { 
        badUsageHandler0.invoke((Object) null, (MethodCall) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.verifier.BadUsageHandler", e);
      }
  }
}
