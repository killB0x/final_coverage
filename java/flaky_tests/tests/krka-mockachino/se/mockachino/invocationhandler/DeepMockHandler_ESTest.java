/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 08:45:59 GMT 2022
 */

package se.mockachino.invocationhandler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.mockachino.CallHandler;
import se.mockachino.MethodCall;
import se.mockachino.invocationhandler.DeepMockHandler;
import se.mockachino.util.MockachinoMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeepMockHandler_ESTest extends DeepMockHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MethodCall methodCall0 = new MethodCall((MockachinoMethod) null, (Object[]) null);
      DeepMockHandler deepMockHandler0 = new DeepMockHandler((CallHandler) null);
      try { 
        deepMockHandler0.invoke(methodCall0, methodCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.mockachino.MethodCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeepMockHandler deepMockHandler0 = new DeepMockHandler((CallHandler) null);
      try { 
        deepMockHandler0.invoke((Object) null, (MethodCall) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mock can not be null
         //
      }
  }
}
