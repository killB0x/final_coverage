/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 15:43:46 GMT 2022
 */

package com.thdjson.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thdjson.entity.JSONArray;
import com.thdjson.entity.JSONObject;
import com.thdjson.entity.JSONValue;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JSONFormat_ESTest extends JSONFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.withSpace(95);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject();
      jSONArray0.add((JSONValue) jSONObject0);
      JSONObject jSONObject1 = jSONObject0.fluentPut("", jSONArray0);
      // Undeclared exception!
      jSONArray0.matchFormat(jSONObject1, 84);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.matchFormat("RBRACKET", 46);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayList<JSONValue> arrayList0 = new ArrayList<JSONValue>();
      JSONArray jSONArray0 = new JSONArray(arrayList0);
      jSONArray0.add((JSONValue) jSONArray0);
      // Undeclared exception!
      jSONArray0.format((-39));
  }
}
