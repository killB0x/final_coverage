/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 15:44:58 GMT 2022
 */

package com.thdjson;

import org.junit.Test;
import static org.junit.Assert.*;
import com.thdjson.JSONToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JSONToken_ESTest extends JSONToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSONToken[] jSONTokenArray0 = JSONToken.values();
      assertEquals(12, jSONTokenArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.valueOf("COLON");
      assertEquals(":", jSONToken0.getName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.LBRACE;
      String string0 = jSONToken0.toString();
      assertEquals("PKKXQy(=3-h]6:n>yx", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.NULL;
      JSONToken jSONToken1 = jSONToken0.addData("38P\":11vl($KxW6~");
      jSONToken1.addData("");
      String string0 = jSONToken1.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.LBRACE;
      JSONToken jSONToken1 = jSONToken0.addData("PKKXQy(=3-h]6:n>yx");
      String string0 = jSONToken1.getData();
      assertEquals("PKKXQy(=3-h]6:n>yx", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.RBRACE;
      JSONToken jSONToken1 = jSONToken0.addData((String) null);
      jSONToken1.addData("");
      String string0 = jSONToken1.getData();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.STRING;
      String string0 = jSONToken0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.RBRACE;
      JSONToken jSONToken1 = jSONToken0.addData((String) null);
      String string0 = jSONToken1.getData();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JSONToken jSONToken0 = JSONToken.FLOAT;
      String string0 = jSONToken0.getName();
      assertEquals("float", string0);
  }
}
