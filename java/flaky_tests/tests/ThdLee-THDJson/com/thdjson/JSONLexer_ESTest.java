/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 15:34:35 GMT 2022
 */

package com.thdjson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thdjson.JSONLexer;
import com.thdjson.JSONToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JSONLexer_ESTest extends JSONLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("8.0f21k1TG%PE<W");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.FLOAT, jSONToken0);
      assertEquals("8.0", jSONToken0.getData());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("91");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals("91", jSONToken0.getData());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("89PEi,S@#Mdj;");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.INT, jSONToken0);
      assertEquals("89", jSONToken0.getData());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("02/N$t");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals("02", jSONToken0.getData());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("nul");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: \u0000
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("nu.ll");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: .
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("nXofay U.y]");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: X
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("fals");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: \u0000
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("falfe");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: f
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("fagse");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: g
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("fsg(g:/)FWJ9!U!");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: s
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("truK");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: K
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("tre");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: e
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("tw\";zaSn");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: w
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("~rf");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: ~
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("\"3/r_@ZQPcMP=u");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : 3/r_@ZQPcMP=u
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONLexer jSONLexer0 = null;
      try {
        jSONLexer0 = new JSONLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("2E3a");
      jSONLexer0.nextToken();
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: a
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("6E-|mD&");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.FLOAT, jSONToken0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("1E+KE=>~T5hl");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals("1E+", jSONToken0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("2eni2QELu#C-6j4");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.FLOAT, jSONToken0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("8.)f31k1UG%PE<W");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals("8.", jSONToken0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("-m~roQ6R<266Bte:-");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.INT, jSONToken0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("+.96E0#chmJ5\",:D0");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals("+.96E0", jSONToken0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("null");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: \u0000
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("nus");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: s
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("n{<>OP&{S+");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: {
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("false");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: \u0000
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("falsse");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: s
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("fase");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: s
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("f<ZTj");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: <
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("true");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: \u0000
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("tryee");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: y
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("tR-5cyh73tl");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: R
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("\"/L_l#]M\"");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals("/L_l#]M", jSONToken0.toString());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("truy");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: y
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("falvse");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: v
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("nul|l");
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: |
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer(":za]9R*PY/Jj#89':");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.COLON, jSONToken0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("]{nknQ*");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.RBRACKET, jSONToken0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("[");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals(JSONToken.LBRACKET, jSONToken0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("{.#,XX,Un5");
      JSONToken jSONToken0 = jSONLexer0.nextToken();
      assertEquals("{", jSONToken0.getData());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer("8}");
      jSONLexer0.nextToken();
      jSONLexer0.nextToken();
      jSONLexer0.nextToken();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JSONLexer jSONLexer0 = new JSONLexer(", /r");
      jSONLexer0.nextToken();
      try { 
        jSONLexer0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unable to recognize: /
         //
         verifyException("com.thdjson.JSONLexer", e);
      }
  }
}
