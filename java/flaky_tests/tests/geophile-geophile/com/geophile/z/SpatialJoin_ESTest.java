/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 07:37:59 GMT 2022
 */

package com.geophile.z;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.geophile.z.Cursor;
import com.geophile.z.Pair;
import com.geophile.z.SpatialIndex;
import com.geophile.z.SpatialJoin;
import com.geophile.z.SpatialObject;
import com.geophile.z.index.RecordWithSpatialObject;
import com.geophile.z.index.sortedarray.SortedArray;
import com.geophile.z.index.sortedarray.SortedArrayCursor;
import com.geophile.z.spatialjoin.SpatialJoinImpl;
import com.geophile.z.spatialobject.d2.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpatialJoin_ESTest extends SpatialJoin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SpatialJoin.InputObserver spatialJoin_InputObserver0 = new SpatialJoin.InputObserver();
      SpatialJoin.InputObserver spatialJoin_InputObserver1 = new SpatialJoin.InputObserver();
      SpatialJoin.Duplicates spatialJoin_Duplicates0 = SpatialJoin.Duplicates.INCLUDE;
      SpatialJoin.Filter<Pair<RecordWithSpatialObject, RecordWithSpatialObject>, RecordWithSpatialObject> spatialJoin_Filter0 = (SpatialJoin.Filter<Pair<RecordWithSpatialObject, RecordWithSpatialObject>, RecordWithSpatialObject>) mock(SpatialJoin.Filter.class, new ViolatedAssumptionAnswer());
      SpatialJoinImpl spatialJoinImpl0 = (SpatialJoinImpl)SpatialJoin.newSpatialJoin(spatialJoin_Duplicates0, spatialJoin_Filter0, spatialJoin_InputObserver1, spatialJoin_InputObserver0);
      assertTrue(spatialJoinImpl0.singleCellOptimization());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SpatialJoin.Duplicates spatialJoin_Duplicates0 = SpatialJoin.Duplicates.EXCLUDE;
      SpatialJoin spatialJoin0 = SpatialJoin.newSpatialJoin(spatialJoin_Duplicates0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialJoin0.iterator((SpatialObject) point0, (SpatialIndex<RecordWithSpatialObject>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.spatialjoin.SpatialJoinImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SpatialJoin.Duplicates spatialJoin_Duplicates0 = SpatialJoin.Duplicates.INCLUDE;
      SpatialJoin spatialJoin0 = SpatialJoin.newSpatialJoin(spatialJoin_Duplicates0);
      // Undeclared exception!
      try { 
        spatialJoin0.iterator((SpatialIndex<RecordWithSpatialObject>) null, (SpatialIndex<RecordWithSpatialObject>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.spatialjoin.SpatialJoinImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SpatialJoin.Duplicates spatialJoin_Duplicates0 = SpatialJoin.Duplicates.EXCLUDE;
      SpatialJoinImpl spatialJoinImpl0 = (SpatialJoinImpl)SpatialJoin.newSpatialJoin(spatialJoin_Duplicates0, (SpatialJoin.Filter<RecordWithSpatialObject, RecordWithSpatialObject>) null);
      assertTrue(spatialJoinImpl0.singleCellOptimization());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        SpatialJoin.newSpatialJoin((SpatialJoin.Duplicates) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.spatialjoin.SpatialJoinImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SpatialJoin.InputObserver spatialJoin_InputObserver0 = new SpatialJoin.InputObserver();
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      spatialJoin_InputObserver0.randomAccess(sortedArrayCursor0, (-1231L));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SpatialJoin.InputObserver spatialJoin_InputObserver0 = new SpatialJoin.InputObserver();
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      RecordWithSpatialObject.Factory recordWithSpatialObject_Factory0 = new RecordWithSpatialObject.Factory();
      RecordWithSpatialObject recordWithSpatialObject0 = recordWithSpatialObject_Factory0.newRecord();
      spatialJoin_InputObserver0.sequentialAccess(cursor0, 0L, recordWithSpatialObject0);
      assertEquals(0L, recordWithSpatialObject0.z());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SpatialJoin.InputObserver spatialJoin_InputObserver0 = new SpatialJoin.InputObserver();
      spatialJoin_InputObserver0.enter(1000000093L);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SpatialJoin.InputObserver spatialJoin_InputObserver0 = new SpatialJoin.InputObserver();
      spatialJoin_InputObserver0.exit(63L);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SpatialJoin.InputObserver spatialJoin_InputObserver0 = new SpatialJoin.InputObserver();
      spatialJoin_InputObserver0.ancestorSearch((Cursor) null, 1178L, 1178L);
  }
}
