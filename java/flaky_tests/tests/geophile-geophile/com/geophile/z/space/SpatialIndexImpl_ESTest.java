/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 07:26:02 GMT 2022
 */

package com.geophile.z.space;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.geophile.z.Index;
import com.geophile.z.Record;
import com.geophile.z.SpatialIndex;
import com.geophile.z.SpatialObject;
import com.geophile.z.index.RecordWithSpatialObject;
import com.geophile.z.index.sortedarray.SortedArray;
import com.geophile.z.space.SpaceImpl;
import com.geophile.z.space.SpatialIndexImpl;
import com.geophile.z.spatialobject.d2.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpatialIndexImpl_ESTest extends SpatialIndexImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      boolean boolean0 = spatialIndexImpl0.singleCell();
      //  // Unstable assertion: assertEquals("SortedArray(155)", sortedArray_OfBaseRecord0.toString());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      spatialIndexImpl0.index();
      assertTrue(spatialIndexImpl0.singleCell());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, (Index<RecordWithSpatialObject>) null, spatialIndex_Options0);
      // Undeclared exception!
      try { 
        spatialIndexImpl0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialIndexImpl0.remove((SpatialObject) point0, (Record.Filter<RecordWithSpatialObject>) null, 800);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialIndexImpl0.remove((SpatialObject) point0, (Record.Filter<RecordWithSpatialObject>) null, (-1308));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1308
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point point0 = new Point();
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      RecordWithSpatialObject.Factory recordWithSpatialObject_Factory0 = new RecordWithSpatialObject.Factory();
      // Undeclared exception!
      try { 
        spatialIndexImpl0.add((SpatialObject) point0, (Record.Factory<RecordWithSpatialObject>) recordWithSpatialObject_Factory0, 1258);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.geophile.z.spatialobject.d2.Point@0000000001
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      Point point0 = new Point();
      RecordWithSpatialObject.Factory recordWithSpatialObject_Factory0 = new RecordWithSpatialObject.Factory();
      // Undeclared exception!
      try { 
        spatialIndexImpl0.add((SpatialObject) point0, (Record.Factory<RecordWithSpatialObject>) recordWithSpatialObject_Factory0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point point0 = new Point();
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      RecordWithSpatialObject.Factory recordWithSpatialObject_Factory0 = new RecordWithSpatialObject.Factory();
      // Undeclared exception!
      try { 
        spatialIndexImpl0.add((SpatialObject) point0, (Record.Factory<RecordWithSpatialObject>) recordWithSpatialObject_Factory0, (-1244));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1244
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialIndexImpl0.remove((SpatialObject) point0, (Record.Filter<RecordWithSpatialObject>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialIndexImpl0.remove((SpatialObject) point0, (Record.Filter<RecordWithSpatialObject>) null, 507);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.geophile.z.spatialobject.d2.Point@0000000003
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, sortedArray_OfBaseRecord0, spatialIndex_Options0);
      spatialIndexImpl0.toString();
      assertFalse(spatialIndexImpl0.singleCell());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, (Index<RecordWithSpatialObject>) null, spatialIndex_Options0);
      boolean boolean0 = spatialIndexImpl0.singleCell();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndexImpl<RecordWithSpatialObject> spatialIndexImpl0 = new SpatialIndexImpl<RecordWithSpatialObject>((SpaceImpl) null, (Index<RecordWithSpatialObject>) null, spatialIndex_Options0);
      spatialIndexImpl0.index();
      assertFalse(spatialIndexImpl0.singleCell());
  }
}
