/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 07:35:17 GMT 2022
 */

package com.geophile.z.space;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.geophile.z.space.ApplicationSpace;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApplicationSpace_ESTest extends ApplicationSpace_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-417.909583608);
      ApplicationSpace applicationSpace0 = null;
      try {
        applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lo[0] = 0.0, hi[0] = -417.909583608
         //
         verifyException("com.geophile.z.space.ApplicationSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = new double[4];
      ApplicationSpace applicationSpace0 = null;
      try {
        applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lo.length = 3, hi.length = 4
         //
         verifyException("com.geophile.z.space.ApplicationSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1372.5777812847423);
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray1, doubleArray0);
      double double0 = applicationSpace0.lo(0);
      assertEquals((-1372.5777812847423), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1372.5777812847423);
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray1, doubleArray0);
      double double0 = applicationSpace0.hi(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray0);
      int int0 = applicationSpace0.dimensions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1365.55903842382);
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray1, doubleArray0);
      // Undeclared exception!
      try { 
        applicationSpace0.lo(11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 11 out of bounds for length 1
         //
         verifyException("com.geophile.z.space.ApplicationSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        applicationSpace0.hi(2957);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2957 out of bounds for length 0
         //
         verifyException("com.geophile.z.space.ApplicationSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ApplicationSpace applicationSpace0 = null;
      try {
        applicationSpace0 = new ApplicationSpace((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.ApplicationSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      ApplicationSpace applicationSpace0 = null;
      try {
        applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lo[0] = 0.0, hi[0] = 0.0
         //
         verifyException("com.geophile.z.space.ApplicationSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = new double[0];
      ApplicationSpace applicationSpace0 = null;
      try {
        applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lo.length = 5, hi.length = 0
         //
         verifyException("com.geophile.z.space.ApplicationSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 2385.098;
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray1);
      double double0 = applicationSpace0.hi(0);
      assertEquals(2385.098, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 2385.098;
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray1);
      double double0 = applicationSpace0.lo(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 1.0;
      ApplicationSpace applicationSpace0 = new ApplicationSpace(doubleArray0, doubleArray1);
      int int0 = applicationSpace0.dimensions();
      assertEquals(1, int0);
  }
}
