/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 07:33:30 GMT 2022
 */

package com.geophile.z;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.geophile.z.Cursor;
import com.geophile.z.index.RecordWithSpatialObject;
import com.geophile.z.index.sortedarray.SortedArray;
import com.geophile.z.index.sortedarray.SortedArrayCursor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cursor_ESTest extends Cursor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      cursor0.state();
      assertEquals("SortedArray(90)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newRecord();
      recordWithSpatialObject0.z(4493L);
      sortedArrayCursor0.goTo(recordWithSpatialObject0);
      sortedArray_OfBaseRecord0.add(recordWithSpatialObject0);
      sortedArrayCursor0.next();
      assertEquals("SortedArray(82)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newRecord();
      recordWithSpatialObject0.z((-913L));
      sortedArrayCursor0.goTo(recordWithSpatialObject0);
      sortedArray_OfBaseRecord0.add(recordWithSpatialObject0);
      sortedArrayCursor0.next();
      assertEquals("SortedArray(74)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newKeyRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      Cursor.State cursor_State0 = Cursor.State.IN_USE;
      ((Cursor)sortedArrayCursor0).state(cursor_State0);
      sortedArray_OfBaseRecord0.add(recordWithSpatialObject0);
      sortedArrayCursor0.next();
      sortedArrayCursor0.deleteCurrent();
      assertEquals("SortedArray(66)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      cursor0.deleteCurrent();
      assertEquals("SortedArray(63)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      cursor0.current();
      assertEquals("SortedArray(60)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newKeyRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      cursor0.current(recordWithSpatialObject0);
      cursor0.current();
      assertEquals("SortedArray(54)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      recordWithSpatialObject0.z(762L);
      cursor0.current(recordWithSpatialObject0);
      cursor0.current();
      assertEquals("SortedArray(48)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newRecord();
      recordWithSpatialObject0.z((-2367L));
      cursor0.current(recordWithSpatialObject0);
      cursor0.current();
      assertEquals("SortedArray(42)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      // Undeclared exception!
      try { 
        sortedArrayCursor0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      Cursor.State cursor_State0 = Cursor.State.IN_USE;
      cursor0.state(cursor_State0);
      // Undeclared exception!
      try { 
        cursor0.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.geophile.z.index.sortedarray.SortedArrayCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      Cursor.State cursor_State0 = Cursor.State.IN_USE;
      ((Cursor)sortedArrayCursor0).state(cursor_State0);
      // Undeclared exception!
      try { 
        sortedArrayCursor0.deleteCurrent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      sortedArray_OfBaseRecord0.cursor();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      Cursor.State cursor_State0 = Cursor.State.IN_USE;
      ((Cursor)sortedArrayCursor0).state(cursor_State0);
      // Undeclared exception!
      try { 
        sortedArrayCursor0.deleteCurrent();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      Cursor.State cursor_State0 = Cursor.State.DONE;
      // Undeclared exception!
      try { 
        cursor0.state(cursor_State0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Cursor<RecordWithSpatialObject> cursor0 = sortedArray_OfBaseRecord0.cursor();
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newRecord();
      cursor0.close();
      // Undeclared exception!
      try { 
        cursor0.current(recordWithSpatialObject0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      RecordWithSpatialObject recordWithSpatialObject0 = sortedArray_OfBaseRecord0.newRecord();
      sortedArrayCursor0.goTo(recordWithSpatialObject0);
      sortedArray_OfBaseRecord0.add(recordWithSpatialObject0);
      sortedArrayCursor0.next();
      assertEquals("SortedArray(3)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SortedArrayCursor<RecordWithSpatialObject> sortedArrayCursor0 = new SortedArrayCursor<RecordWithSpatialObject>(sortedArray_OfBaseRecord0);
      sortedArray_OfBaseRecord0.cursor();
      sortedArrayCursor0.next();
      assertEquals("SortedArray(0)", sortedArray_OfBaseRecord0.toString());
  }
}
