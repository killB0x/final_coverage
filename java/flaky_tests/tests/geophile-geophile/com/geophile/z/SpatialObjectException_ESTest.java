/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 07:38:39 GMT 2022
 */

package com.geophile.z;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.geophile.z.Space;
import com.geophile.z.SpatialObjectException;
import com.geophile.z.spatialobject.d2.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpatialObjectException_ESTest extends SpatialObjectException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SpatialObjectException spatialObjectException0 = new SpatialObjectException(";}Ce.i_eQ\"c-");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        SpatialObjectException.notContainedBySpace(point0, (Space) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // (0.0, 0.0) not contained by null
         //
         verifyException("com.geophile.z.SpatialObjectException", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      SpatialObjectException spatialObjectException0 = new SpatialObjectException(mockThrowable0);
  }
}
