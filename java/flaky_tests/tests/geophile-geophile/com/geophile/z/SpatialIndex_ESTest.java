/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 07:37:10 GMT 2022
 */

package com.geophile.z;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.geophile.z.Index;
import com.geophile.z.Record;
import com.geophile.z.Space;
import com.geophile.z.SpatialIndex;
import com.geophile.z.SpatialObject;
import com.geophile.z.index.RecordWithSpatialObject;
import com.geophile.z.index.sortedarray.SortedArray;
import com.geophile.z.spatialobject.d2.Box;
import com.geophile.z.spatialobject.d2.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpatialIndex_ESTest extends SpatialIndex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) null, (SpatialIndex.Options) spatialIndex_Options0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialIndex0.remove((SpatialObject) point0, (Record.Filter<RecordWithSpatialObject>) null, 1764);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.geophile.z.spatialobject.d2.Point@0000000002
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialIndex0.remove((SpatialObject) point0, (Record.Filter<RecordWithSpatialObject>) null, 747);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.DEFAULT;
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0, (SpatialIndex.Options) spatialIndex_Options0);
      Box box0 = new Box();
      Record.Filter<RecordWithSpatialObject> record_Filter0 = (Record.Filter<RecordWithSpatialObject>) mock(Record.Filter.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        spatialIndex0.remove((SpatialObject) box0, record_Filter0, (-1377));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1377
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Box box0 = new Box();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) null, (SpatialIndex.Options) spatialIndex_Options0);
      Record.Filter<RecordWithSpatialObject> record_Filter0 = (Record.Filter<RecordWithSpatialObject>) mock(Record.Filter.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        spatialIndex0.remove((SpatialObject) box0, record_Filter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.geophile.z.spatialobject.d2.Box@0000000001
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecordWithSpatialObject.Factory recordWithSpatialObject_Factory0 = new RecordWithSpatialObject.Factory();
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Point point0 = new Point();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0, (SpatialIndex.Options) spatialIndex_Options0);
      // Undeclared exception!
      try { 
        spatialIndex0.add((SpatialObject) point0, (Record.Factory<RecordWithSpatialObject>) recordWithSpatialObject_Factory0, 56);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.geophile.z.spatialobject.d2.Point@0000000003
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        spatialIndex0.add((SpatialObject) point0, (Record.Factory<RecordWithSpatialObject>) null, 184);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0);
      // Undeclared exception!
      try { 
        spatialIndex0.add((SpatialObject) null, (Record.Factory<RecordWithSpatialObject>) null, (-1678));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1678
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      Box box0 = new Box();
      RecordWithSpatialObject.Factory recordWithSpatialObject_Factory0 = new RecordWithSpatialObject.Factory();
      SpatialIndex.Options spatialIndex_Options0 = SpatialIndex.Options.SINGLE_CELL;
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0, (SpatialIndex.Options) spatialIndex_Options0);
      // Undeclared exception!
      try { 
        spatialIndex0.add((SpatialObject) box0, (Record.Factory<RecordWithSpatialObject>) recordWithSpatialObject_Factory0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.geophile.z.spatialobject.d2.Box@0000000002
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SpatialIndex.Exception spatialIndex_Exception0 = new SpatialIndex.Exception("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Box box0 = new Box();
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0);
      // Undeclared exception!
      try { 
        spatialIndex0.remove((SpatialObject) box0, (Record.Filter<RecordWithSpatialObject>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0);
      spatialIndex0.space();
      assertEquals("SortedArray(7)", sortedArray_OfBaseRecord0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Box box0 = new Box();
      RecordWithSpatialObject.Factory recordWithSpatialObject_Factory0 = new RecordWithSpatialObject.Factory();
      SortedArray.OfBaseRecord sortedArray_OfBaseRecord0 = new SortedArray.OfBaseRecord();
      SpatialIndex<RecordWithSpatialObject> spatialIndex0 = SpatialIndex.newSpatialIndex((Space) null, (Index<RecordWithSpatialObject>) sortedArray_OfBaseRecord0);
      // Undeclared exception!
      try { 
        spatialIndex0.add((SpatialObject) box0, (Record.Factory<RecordWithSpatialObject>) recordWithSpatialObject_Factory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.geophile.z.space.SpatialIndexImpl", e);
      }
  }
}
