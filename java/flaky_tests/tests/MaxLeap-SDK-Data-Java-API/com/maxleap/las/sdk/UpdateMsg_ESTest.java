/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 21:26:04 GMT 2022
 */

package com.maxleap.las.sdk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.maxleap.las.sdk.UpdateMsg;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UpdateMsg_ESTest extends UpdateMsg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg((-3762), (-3762), (Map) null);
      assertEquals((-3762), updateMsg0.number());
      assertEquals((-3762L), updateMsg0.updatedAt());
      
      updateMsg0.result();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg((-1010), (-1010), (Map) null);
      // Undeclared exception!
      try { 
        updateMsg0.set("RDRK_d6E", "RDRK_d6E");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>(3933, 3933);
      UpdateMsg updateMsg0 = new UpdateMsg((-680), (-680), hashMap0);
      updateMsg0.number();
      updateMsg0.number();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      UpdateMsg updateMsg0 = new UpdateMsg(1, 1, hashMap0);
      updateMsg0.updatedAtString();
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      updateMsg0.toString();
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      updateMsg0.updatedAt();
      updateMsg0.setUpdatedAt("1970-01-01T00:00:00.001Z");
      updateMsg0.toString();
      Integer integer0 = new Integer(2535);
      Object object0 = new Object();
      Object object1 = new Object();
      BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.merge(object0, object1, biFunction0);
      updateMsg0.set("GMT", hashMap0);
      updateMsg0.number();
      updateMsg0.toString();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      UpdateMsg updateMsg0 = new UpdateMsg(166, 1193L, hashMap0);
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      hashMap0.put(updateMsg0, "1970-01-01T00:00:01.193Z");
      updateMsg0.result();
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      updateMsg0.result();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      hashMap0.put((Integer) null, (Object) null);
      UpdateMsg updateMsg0 = new UpdateMsg(0, (-1L), hashMap0);
      updateMsg0.updatedAt();
      updateMsg0.updatedAtString();
      updateMsg0.updatedAt();
      updateMsg0.updatedAt();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-1316));
      hashMap0.put(integer0, integer1);
      updateMsg0.updatedAt();
      updateMsg0.result();
      updateMsg0.toString();
      hashMap0.keySet();
      String string0 = "QUmG\\cco~?^.@/fs?R]";
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("QUmGcco~?^.@/fs?R]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      assertEquals(0L, updateMsg0.updatedAt());
      
      String string0 = updateMsg0.updatedAtString();
      assertEquals("1970-01-01T00:00:00.000Z", string0);
      
      updateMsg0.toString();
      updateMsg0.result();
      updateMsg0.toString();
      updateMsg0.number();
      updateMsg0.toString();
      updateMsg0.updatedAtString();
      updateMsg0.updatedAtString();
      updateMsg0.set("", "");
      updateMsg0.updatedAtString();
      updateMsg0.updatedAtString();
      updateMsg0.number();
      updateMsg0.updatedAtString();
      updateMsg0.setUpdatedAt("1970-01-01T00:00:00.000Z");
      String string1 = updateMsg0.toString();
      assertEquals("UpdateMsg{number=0, updatedAt=0, result={=}}", string1);
      
      updateMsg0.set("UpdateMsg{number=0, updatedAt=0, result={=}}", "UpdateMsg{number=0, updatedAt=0, result={=}}");
      Object object0 = new Object();
      updateMsg0.set("UpdateMsg{number=0, updatedAt=0, result={=}}", object0);
      Integer integer0 = new Integer((-554));
      updateMsg0.set("1970-01-01T00:00:00.000Z", integer0);
      updateMsg0.result();
      updateMsg0.toString();
      updateMsg0.result();
      int int0 = updateMsg0.number();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.number();
      int int0 = updateMsg0.number();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.updatedAtString();
      updateMsg0.toString();
      updateMsg0.updatedAt();
      updateMsg0.number();
      updateMsg0.set("UpdateMsg{number=", "UpdateMsg{number=");
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("UpdateMsg{number=0, updatedAt=0, result={}}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Integer integer0 = new Integer(3096);
      Integer integer1 = new Integer((-309));
      Integer integer2 = new Integer((-1));
      hashMap0.put(integer1, integer2);
      hashMap0.put(integer0, integer1);
      hashMap0.put(integer0, integer0);
      UpdateMsg updateMsg0 = new UpdateMsg(2536, 2536, hashMap0);
      updateMsg0.toString();
      updateMsg0.updatedAt();
      updateMsg0.set("UpdateMsg{number=2536, updatedAt=2536, result={-309=-1, 3096=3096}}", integer1);
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("UpdateMsg{number=2536, updatedAt=2536, result={-309=-1, 3096=3096}}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      long long0 = updateMsg0.updatedAt();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.setUpdatedAt((String) null);
      String string0 = updateMsg0.toString();
      assertEquals("UpdateMsg{number=0, updatedAt=0, result={}}", string0);
      
      Integer integer0 = new Integer(0);
      updateMsg0.set("=%#", integer0);
      updateMsg0.set("=%#", integer0);
      updateMsg0.toString();
      updateMsg0.result();
      updateMsg0.toString();
      updateMsg0.result();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("UpdateMsg{number=0, updatedAt=0, result={}}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.set((String) null, (Object) null);
      assertEquals(0, updateMsg0.number());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      String string0 = updateMsg0.toString();
      assertEquals("UpdateMsg{number=0, updatedAt=0, result={}}", string0);
      
      Integer integer0 = new Integer(1);
      updateMsg0.set("", integer0);
      updateMsg0.result();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      Map map0 = updateMsg0.result();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("1K=$9r#wxy\"ivU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("_h1- w>>yEGd\"_H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UpdateMsg updateMsg0 = new UpdateMsg();
      updateMsg0.updatedAtString();
      updateMsg0.setUpdatedAt("1970-01-01T00:00:00.000Z");
      assertEquals(0, updateMsg0.number());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      int int0 = (-1);
      Integer integer0 = new Integer(0);
      hashMap0.remove((Object) integer0);
      Integer integer1 = new Integer((-1));
      Integer integer2 = new Integer((-1));
      hashMap0.put(integer1, integer2);
      Integer integer3 = new Integer(2877);
      hashMap0.put(integer3, integer2);
      UpdateMsg updateMsg0 = new UpdateMsg(2877, (-1L), hashMap0);
      String string0 = "wJd";
      // Undeclared exception!
      try { 
        updateMsg0.setUpdatedAt("wJd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.UpdateMsg", e);
      }
  }
}
