/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 21:23:57 GMT 2022
 */

package com.maxleap.las.sdk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.maxleap.las.sdk.ObjectId;
import com.maxleap.las.sdk.SaveMsg;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SaveMsg_ESTest extends SaveMsg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectId objectId0 = new ObjectId();
      SaveMsg saveMsg0 = new SaveMsg(473L, objectId0);
      saveMsg0.setObjectId("52fe7ac1a05452cb00000a26");
      assertEquals(473L, saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectId objectId0 = new ObjectId();
      SaveMsg saveMsg0 = new SaveMsg(473L, objectId0);
      saveMsg0.set("SaveMsg{objectId=52fe7ac1a05452cb00000a26, createdAt=473, result={}}", "52fe7ac1a05452cb00000a26");
      saveMsg0.result();
      assertEquals(473L, saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      ObjectId objectId0 = saveMsg0.objectId();
      assertNull(objectId0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      Instant instant0 = MockInstant.ofEpochSecond(0L, 0L);
      Date date0 = Date.from(instant0);
      ObjectId objectId0 = new ObjectId(date0, 0, 4324);
      saveMsg0.setObjectId(objectId0);
      ObjectId objectId1 = saveMsg0.objectId();
      assertEquals(0, objectId1.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectId objectId0 = new ObjectId();
      SaveMsg saveMsg0 = new SaveMsg(473L, objectId0);
      ObjectId objectId1 = saveMsg0.objectId();
      assertEquals(6, objectId1.getCurrentInc());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      long long0 = saveMsg0.createdAt();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg((-1), (ObjectId) null);
      long long0 = saveMsg0.createdAt();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      // Undeclared exception!
      try { 
        saveMsg0.setCreatedAt("2M;wZX;k(,x1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.maxleap.las.sdk.SaveMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      String string0 = saveMsg0.objectIdString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectId objectId0 = ObjectId.createFromLegacyFormat((-1745), 2412, 0);
      SaveMsg saveMsg0 = new SaveMsg((-2147483648L), objectId0);
      String string0 = saveMsg0.objectIdString();
      assertEquals((-2147483648L), saveMsg0.createdAt());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectId objectId0 = ObjectId.createFromLegacyFormat((-1745), 2412, 0);
      SaveMsg saveMsg0 = new SaveMsg((-2147483648L), objectId0);
      saveMsg0.setCreatedAt("1969-12-07T03:28:36.352Z");
      assertEquals(2147483648L, saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      saveMsg0.setCreatedAt((String) null);
      assertEquals(0L, saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectId objectId0 = new ObjectId();
      SaveMsg saveMsg0 = new SaveMsg(473L, objectId0);
      saveMsg0.result();
      assertEquals(473L, saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectId objectId0 = ObjectId.createFromLegacyFormat((-1745), 2412, 0);
      SaveMsg saveMsg0 = new SaveMsg((-2147483648L), objectId0);
      saveMsg0.objectId();
      assertEquals((-2147483648L), saveMsg0.createdAt());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectId objectId0 = new ObjectId();
      SaveMsg saveMsg0 = new SaveMsg(473L, objectId0);
      long long0 = saveMsg0.createdAt();
      assertEquals(473L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SaveMsg saveMsg0 = new SaveMsg();
      // Undeclared exception!
      try { 
        saveMsg0.setObjectId("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid ObjectId []
         //
         verifyException("com.maxleap.las.sdk.ObjectId", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectId objectId0 = ObjectId.createFromLegacyFormat((-1745), 2412, 0);
      SaveMsg saveMsg0 = new SaveMsg((-2147483648L), objectId0);
      String string0 = saveMsg0.createdAtString();
      assertEquals("1969-12-07T03:28:36.352Z", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectId objectId0 = ObjectId.createFromLegacyFormat((-1745), 2412, 0);
      SaveMsg saveMsg0 = new SaveMsg((-2147483648L), objectId0);
      String string0 = saveMsg0.toString();
      assertEquals("SaveMsg{objectId=fffff92f0000096c00000000, createdAt=-2147483648, result={}}", string0);
  }
}
