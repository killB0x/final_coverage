/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 21:26:45 GMT 2022
 */

package com.maxleap.las.sdk.types;

import org.junit.Test;
import static org.junit.Assert.*;
import com.maxleap.las.sdk.types.MLFile;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MLFile_ESTest extends MLFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MLFile mLFile0 = new MLFile();
      mLFile0.set__type((String) null);
      String string0 = mLFile0.get__type();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MLFile mLFile0 = new MLFile();
      mLFile0.set__type("");
      String string0 = mLFile0.get__type();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MLFile mLFile0 = new MLFile();
      String string0 = mLFile0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MLFile mLFile0 = new MLFile();
      mLFile0.setUrl("name");
      String string0 = mLFile0.getUrl();
      assertEquals("name", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MLFile mLFile0 = new MLFile();
      String string0 = mLFile0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MLFile mLFile0 = new MLFile("", "JYN7X4|~h(f+3-0YR");
      assertEquals("JYN7X4|~h(f+3-0YR", mLFile0.getName());
      
      mLFile0.setName("");
      mLFile0.getName();
      assertEquals("", mLFile0.getUrl());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MLFile mLFile0 = new MLFile("", "JYN7X4|~h(f+3-0YR");
      String string0 = mLFile0.getName();
      assertEquals("", mLFile0.getUrl());
      assertEquals("JYN7X4|~h(f+3-0YR", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MLFile mLFile0 = new MLFile("", "JYN7X4|~h(f+3-0YR");
      String string0 = mLFile0.getUrl();
      assertEquals("", string0);
      assertEquals("JYN7X4|~h(f+3-0YR", mLFile0.getName());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MLFile mLFile0 = new MLFile("", "JYN7X4|~h(f+3-0YR");
      mLFile0.get__type();
      assertEquals("JYN7X4|~h(f+3-0YR", mLFile0.getName());
      assertEquals("", mLFile0.getUrl());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MLFile mLFile0 = new MLFile();
      Map map0 = mLFile0.toMap();
      assertEquals(3, map0.size());
  }
}
