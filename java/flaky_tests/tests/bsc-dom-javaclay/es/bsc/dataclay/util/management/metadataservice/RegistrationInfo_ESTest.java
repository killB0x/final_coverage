/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:14:35 GMT 2022
 */

package es.bsc.dataclay.util.management.metadataservice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.ids.DataSetID;
import es.bsc.dataclay.util.ids.MetaClassID;
import es.bsc.dataclay.util.ids.ObjectID;
import es.bsc.dataclay.util.ids.SessionID;
import es.bsc.dataclay.util.management.metadataservice.RegistrationInfo;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RegistrationInfo_ESTest extends RegistrationInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      MetaClassID metaClassID0 = new MetaClassID(uUID0);
      SessionID sessionID0 = new SessionID("");
      DataSetID dataSetID0 = new DataSetID(uUID0);
      RegistrationInfo registrationInfo0 = new RegistrationInfo((ObjectID) null, metaClassID0, sessionID0, dataSetID0, "");
      SessionID sessionID1 = registrationInfo0.getStoreSessionID();
      assertSame(sessionID1, sessionID0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectID objectID0 = new ObjectID("0z3^");
      MetaClassID metaClassID0 = new MetaClassID("i*Aa7W'<jOTqb,");
      SessionID sessionID0 = new SessionID("]6");
      DataSetID dataSetID0 = new DataSetID("]6");
      RegistrationInfo registrationInfo0 = new RegistrationInfo(objectID0, metaClassID0, sessionID0, dataSetID0, "}");
      ObjectID objectID1 = registrationInfo0.getObjectID();
      assertSame(objectID1, objectID0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      MetaClassID metaClassID0 = new MetaClassID(uUID0);
      SessionID sessionID0 = new SessionID("");
      DataSetID dataSetID0 = new DataSetID(uUID0);
      RegistrationInfo registrationInfo0 = new RegistrationInfo((ObjectID) null, metaClassID0, sessionID0, dataSetID0, "");
      DataSetID dataSetID1 = registrationInfo0.getDataSetID();
      assertSame(dataSetID1, dataSetID0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      ObjectID objectID0 = new ObjectID(uUID0);
      MetaClassID metaClassID0 = new MetaClassID(objectID0.id);
      SessionID sessionID0 = new SessionID("");
      DataSetID dataSetID0 = new DataSetID("DestStorageLocationID");
      RegistrationInfo registrationInfo0 = new RegistrationInfo(objectID0, metaClassID0, sessionID0, dataSetID0, "DestStorageLocationID");
      String string0 = registrationInfo0.getAlias();
      assertEquals("DestStorageLocationID", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      SessionID sessionID0 = new SessionID(uUID0);
      DataSetID dataSetID0 = new DataSetID("UI6V'-e>0lCCGp6U");
      RegistrationInfo registrationInfo0 = new RegistrationInfo((ObjectID) null, (MetaClassID) null, sessionID0, dataSetID0, "");
      String string0 = registrationInfo0.getAlias();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectID objectID0 = new ObjectID("0z3^");
      objectID0.setId((UUID) null);
      MetaClassID metaClassID0 = new MetaClassID("i*Aa7W'<jOTqb,");
      SessionID sessionID0 = new SessionID("]6");
      DataSetID dataSetID0 = new DataSetID("]6");
      RegistrationInfo registrationInfo0 = new RegistrationInfo(objectID0, metaClassID0, sessionID0, dataSetID0, "}");
      // Undeclared exception!
      try { 
        registrationInfo0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.ids.ID", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegistrationInfo registrationInfo0 = new RegistrationInfo();
      String string0 = registrationInfo0.toString();
      assertEquals("{oid = null, classID = null, storeSessionID = null, dataSetId = null, alias = null}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegistrationInfo registrationInfo0 = new RegistrationInfo();
      String string0 = registrationInfo0.getAlias();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      MetaClassID metaClassID0 = new MetaClassID(uUID0);
      SessionID sessionID0 = new SessionID("");
      DataSetID dataSetID0 = new DataSetID(uUID0);
      RegistrationInfo registrationInfo0 = new RegistrationInfo((ObjectID) null, metaClassID0, sessionID0, dataSetID0, "");
      MetaClassID metaClassID1 = registrationInfo0.getClassID();
      assertEquals("00000000-0100-4000-8200-000003000000", metaClassID1.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegistrationInfo registrationInfo0 = new RegistrationInfo();
      SessionID sessionID0 = registrationInfo0.getStoreSessionID();
      assertNull(sessionID0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegistrationInfo registrationInfo0 = new RegistrationInfo();
      ObjectID objectID0 = registrationInfo0.getObjectID();
      assertNull(objectID0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegistrationInfo registrationInfo0 = new RegistrationInfo();
      MetaClassID metaClassID0 = registrationInfo0.getClassID();
      assertNull(metaClassID0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegistrationInfo registrationInfo0 = new RegistrationInfo();
      DataSetID dataSetID0 = registrationInfo0.getDataSetID();
      assertNull(dataSetID0);
  }
}
