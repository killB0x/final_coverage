/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 12:35:44 GMT 2022
 */

package es.bsc.dataclay.util.management.stubs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.stubs.StubClassLoader;
import es.bsc.dataclay.util.management.stubs.StubInfo;
import java.io.File;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StubClassLoader_ESTest extends StubClassLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Map<String, StubInfo> map0 = StubClassLoader.getStubInfosFromClassPath("|0:x]M8Z~?G7dnD");
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MockFile.createTempFile("O~t0", "", (File) mockFile0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      StubClassLoader.getClasses("Q.;o{}p5@Y ti4", mockFile0, linkedHashSet0, "", linkedHashSet1);
      assertEquals(1, linkedHashSet0.size());
      assertFalse(linkedHashSet0.contains(""));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Uu*@G:79'04,).sD", "Uu*@G:79'04,).sD");
      MockFile.createTempFile("/home/user/Uu*@G:79'04,).sD/Uu*@G:79'04,).sD", "/home/user/Uu*@G:79'04,).sD/Uu*@G:79'04,).sD", (File) mockFile0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      StubClassLoader.getClasses(".class", mockFile0, linkedHashSet0, "/home/user/Uu*@G:79'04,).sD/Uu*@G:79'04,).sD", linkedHashSet1);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.equals((Object)linkedHashSet1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        StubClassLoader.getStubInfosFromClassPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.management.stubs.StubClassLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Uu*@G:79'04,).sD", "Uu*@G:79'04,).sD");
      File file0 = MockFile.createTempFile("/home/user/Uu*@G:79'04,).sD/Uu*@G:79'04,).sD", "/home/user/Uu*@G:79'04,).sD/Uu*@G:79'04,).sD", (File) mockFile0);
      file0.mkdir();
      file0.createNewFile();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      StubClassLoader.getClasses(".class", mockFile0, linkedHashSet0, "/home/user/Uu*@G:79'04,).sD/Uu*@G:79'04,).sD", linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MockFile.createTempFile("O~t0", "O~t0", (File) mockFile0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      StubClassLoader.getClasses("", mockFile0, linkedHashSet0, "t|>inaj$3kmETSgn", linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile(" for ", "");
      mockFile0.mkdirs();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      StubClassLoader.getClasses("/home/user/ for /Y!:rhw[X^a!inC", mockFile0, linkedHashSet0, "", linkedHashSet0);
      assertEquals(1392409281320L, mockFile0.lastModified());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("O~t0", "O~t0", (File) mockFile0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      StubClassLoader.getClasses("O~t0", file0, linkedHashSet0, "O~t0", linkedHashSet0);
      assertTrue(file0.canExecute());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".class");
      MockFile.createTempFile(".class", ".class", (File) mockFile0);
      // Undeclared exception!
      try { 
        StubClassLoader.getStubInfosFromClassPath(".class");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/representer/Representer
         //
         verifyException("es.bsc.dataclay.util.management.stubs.StubClassLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MockFile.createTempFile("O~t0", "O~t0", (File) mockFile0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("O~t0");
      StubClassLoader.getClasses("", mockFile0, linkedHashSet0, "O~t0", linkedHashSet0);
      assertEquals(2, linkedHashSet0.size());
      assertFalse(linkedHashSet0.contains(""));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MockFile.createTempFile("O~t0", "O~t0", (File) mockFile0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("O~t0");
      StubClassLoader.getClasses("Yaml.yaml", mockFile0, linkedHashSet0, "", linkedHashSet0);
      assertEquals(1, linkedHashSet0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".class", ".class");
      MockFile.createTempFile(".class", ".class", (File) mockFile0);
      // Undeclared exception!
      try { 
        StubClassLoader.getClasses("/", mockFile0, (Set<String>) null, ".class", (Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
