/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:22:35 GMT 2022
 */

package es.bsc.dataclay.util.management.classmgr.features;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.classmgr.features.ArchitectureFeature;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArchitectureFeature_ESTest extends ArchitectureFeature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(237);
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature();
      UUID uUID0 = MockUUID.randomUUID();
      architectureFeature0.setId(uUID0);
      UUID uUID1 = architectureFeature0.getId();
      assertEquals((-1369094282727636992L), uUID1.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature("N");
      UUID uUID0 = MockUUID.fromString("N");
      architectureFeature0.setId(uUID0);
      UUID uUID1 = architectureFeature0.getId();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature();
      String string0 = architectureFeature0.getArchitectureName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature();
      architectureFeature0.setArchitectureName("");
      String string0 = architectureFeature0.getArchitectureName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature();
      // Undeclared exception!
      try { 
        architectureFeature0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.ArchitectureFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature("N");
      String string0 = architectureFeature0.getArchitectureName();
      assertEquals("N", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature("kY]o>n+y)od&ehRpWe");
      Object object0 = new Object();
      boolean boolean0 = architectureFeature0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = null;
      try {
        architectureFeature0 = new ArchitectureFeature("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Architecture specified is null or empty
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.ArchitectureFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = null;
      try {
        architectureFeature0 = new ArchitectureFeature((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Architecture specified is null or empty
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.ArchitectureFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature("N");
      architectureFeature0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature("kY]o>n+y)od&ehRpWe");
      // Undeclared exception!
      try { 
        architectureFeature0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/representer/Representer
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.ArchitectureFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature();
      // Undeclared exception!
      try { 
        architectureFeature0.equals(architectureFeature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature("kY]o>n+y)od&ehRpWe");
      UUID uUID0 = architectureFeature0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArchitectureFeature architectureFeature0 = new ArchitectureFeature("kY]o>n+y)od&ehRpWe");
      boolean boolean0 = architectureFeature0.equals(architectureFeature0);
      assertTrue(boolean0);
  }
}
