/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:27:09 GMT 2022
 */

package es.bsc.dataclay.util.management.accountmgr;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.accountmgr.Account;
import es.bsc.dataclay.util.management.accountmgr.AccountRole;
import es.bsc.dataclay.util.management.accountmgr.PasswordCredential;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Account_ESTest extends Account_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      PasswordCredential passwordCredential0 = new PasswordCredential();
      Account account0 = new Account("", accountRole0, passwordCredential0);
      String string0 = account0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Account account0 = new Account();
      AccountRole accountRole0 = AccountRole.ADMIN_ROLE;
      account0.setRole(accountRole0);
      AccountRole accountRole1 = account0.getRole();
      assertEquals(AccountRole.ADMIN_ROLE, accountRole1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      PasswordCredential passwordCredential0 = new PasswordCredential();
      Account account0 = new Account("pmE6r=vO V3&", accountRole0, passwordCredential0);
      PasswordCredential passwordCredential1 = account0.getCredential();
      assertNull(passwordCredential1.getPassword());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PasswordCredential passwordCredential0 = new PasswordCredential();
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      Account account0 = new Account(":null", accountRole0, passwordCredential0);
      Account account1 = new Account();
      // Undeclared exception!
      try { 
        account1.equals(account0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Account account0 = new Account();
      account0.setUsername(",)Lv!uX+)=5");
      String string0 = account0.getUsername();
      assertEquals(",)Lv!uX+)=5", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Account account0 = new Account();
      account0.getRole();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PasswordCredential passwordCredential0 = new PasswordCredential();
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      Account account0 = new Account("null:null", accountRole0, passwordCredential0);
      account0.setCredential(passwordCredential0);
      assertNull(passwordCredential0.getPassword());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PasswordCredential passwordCredential0 = new PasswordCredential();
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      Account account0 = new Account("", accountRole0, passwordCredential0);
      AccountRole accountRole1 = AccountRole.ADMIN_ROLE;
      Account account1 = new Account("", accountRole1, passwordCredential0);
      boolean boolean0 = account1.equals(account0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PasswordCredential passwordCredential0 = new PasswordCredential();
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      Account account0 = new Account("null:null", accountRole0, passwordCredential0);
      Account account1 = new Account("", accountRole0, passwordCredential0);
      boolean boolean0 = account1.equals(account0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PasswordCredential passwordCredential0 = new PasswordCredential();
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      Account account0 = new Account("null:null", accountRole0, passwordCredential0);
      boolean boolean0 = account0.equals(passwordCredential0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PasswordCredential passwordCredential0 = new PasswordCredential();
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      Account account0 = new Account("null:null", accountRole0, passwordCredential0);
      account0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Account account0 = new Account();
      PasswordCredential passwordCredential0 = account0.getCredential();
      assertNull(passwordCredential0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccountRole accountRole0 = AccountRole.NORMAL_ROLE;
      PasswordCredential passwordCredential0 = new PasswordCredential();
      Account account0 = new Account("7", accountRole0, passwordCredential0);
      boolean boolean0 = account0.equals(account0);
      assertTrue(boolean0);
  }
}
