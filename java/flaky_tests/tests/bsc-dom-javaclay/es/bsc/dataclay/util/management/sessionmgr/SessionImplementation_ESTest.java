/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:21:35 GMT 2022
 */

package es.bsc.dataclay.util.management.sessionmgr;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.ids.AccountID;
import es.bsc.dataclay.util.ids.ImplementationID;
import es.bsc.dataclay.util.ids.NamespaceID;
import es.bsc.dataclay.util.management.sessionmgr.SessionImplementation;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SessionImplementation_ESTest extends SessionImplementation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      AccountID accountID0 = sessionImplementation0.getRespAccountID();
      assertNull(accountID0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      ImplementationID implementationID0 = new ImplementationID("h/pF^y{MEDdYs5\r[av");
      sessionImplementation0.setImplementationID(implementationID0);
      ImplementationID implementationID1 = sessionImplementation0.getImplementationID();
      assertSame(implementationID1, implementationID0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Random.setNextRandom((-3967));
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      ImplementationID implementationID0 = new ImplementationID();
      UUID uUID0 = MockUUID.fromString((String) null);
      sessionImplementation0.setId(uUID0);
      UUID uUID1 = sessionImplementation0.getId();
      assertEquals("830f0000-840f-4000-850f-0000860f0000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      NamespaceID namespaceID0 = new NamespaceID("fpVz[%7QA9q_o9 ");
      sessionImplementation0.setId(namespaceID0.id);
      UUID uUID0 = sessionImplementation0.getId();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      // Undeclared exception!
      try { 
        sessionImplementation0.equals(sessionImplementation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.management.sessionmgr.SessionImplementation", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      ImplementationID implementationID0 = new ImplementationID("h/pF^y{MEDdYs5\r[av");
      AccountID accountID0 = new AccountID(implementationID0.id);
      sessionImplementation0.setRespAccountID(accountID0);
      assertEquals("00000000-0100-4000-8200-000003000000", accountID0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      NamespaceID namespaceID0 = new NamespaceID();
      sessionImplementation0.setNamespaceID(namespaceID0);
      NamespaceID namespaceID1 = sessionImplementation0.getNamespaceID();
      assertEquals("00000000-0100-4000-8200-000003000000", namespaceID1.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      ImplementationID implementationID0 = sessionImplementation0.getImplementationID();
      assertNull(implementationID0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      NamespaceID namespaceID0 = sessionImplementation0.getNamespaceID();
      assertNull(namespaceID0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      ImplementationID implementationID0 = new ImplementationID("");
      NamespaceID namespaceID0 = new NamespaceID();
      sessionImplementation0.setImplementationID(implementationID0);
      AccountID accountID0 = new AccountID(implementationID0.id);
      SessionImplementation sessionImplementation1 = new SessionImplementation(implementationID0, namespaceID0, accountID0);
      boolean boolean0 = sessionImplementation0.equals(sessionImplementation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      ImplementationID implementationID0 = new ImplementationID();
      NamespaceID namespaceID0 = new NamespaceID();
      AccountID accountID0 = new AccountID();
      SessionImplementation sessionImplementation1 = new SessionImplementation(implementationID0, namespaceID0, accountID0);
      boolean boolean0 = sessionImplementation0.equals(sessionImplementation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      Object object0 = new Object();
      boolean boolean0 = sessionImplementation0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      sessionImplementation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImplementationID implementationID0 = new ImplementationID("");
      NamespaceID namespaceID0 = new NamespaceID("");
      AccountID accountID0 = new AccountID(namespaceID0.id);
      SessionImplementation sessionImplementation0 = new SessionImplementation(implementationID0, namespaceID0, accountID0);
      boolean boolean0 = sessionImplementation0.equals(sessionImplementation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SessionImplementation sessionImplementation0 = new SessionImplementation();
      UUID uUID0 = sessionImplementation0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccountID accountID0 = new AccountID("rT]eY");
      ImplementationID implementationID0 = new ImplementationID(accountID0.id);
      NamespaceID namespaceID0 = new NamespaceID("rT]eY");
      SessionImplementation sessionImplementation0 = new SessionImplementation(implementationID0, namespaceID0, accountID0);
      AccountID accountID1 = sessionImplementation0.getRespAccountID();
      assertSame(accountID0, accountID1);
  }
}
