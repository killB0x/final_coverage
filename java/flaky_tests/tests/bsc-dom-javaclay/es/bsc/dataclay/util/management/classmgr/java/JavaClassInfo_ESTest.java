/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 12:44:20 GMT 2022
 */

package es.bsc.dataclay.util.management.classmgr.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.classmgr.Type;
import es.bsc.dataclay.util.management.classmgr.java.JavaClassInfo;
import java.util.LinkedList;
import java.util.List;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaClassInfo_ESTest extends JavaClassInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      javaClassInfo0.setSignature("Found federation reference to {}");
      String string0 = javaClassInfo0.getSignature();
      assertEquals("Found federation reference to {}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      javaClassInfo0.setSignature("");
      String string0 = javaClassInfo0.getSignature();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      javaClassInfo0.setModifier(2);
      int int0 = javaClassInfo0.getModifier();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      JavaClassInfo javaClassInfo0 = new JavaClassInfo("atDa[@T56y)cUhSigh#", byteArray0);
      javaClassInfo0.setModifier((byte) (-128));
      int int0 = javaClassInfo0.getModifier();
      assertEquals((-128), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      String[] stringArray0 = new String[9];
      javaClassInfo0.setJavaParentInterfaces(stringArray0);
      String[] stringArray1 = javaClassInfo0.getJavaParentInterfaces();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo("es.bsc.dataclay.util.management.classmgr.java.JavaClassInfo", (byte[]) null);
      String[] stringArray0 = javaClassInfo0.getJavaParentInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      LinkedList<Type> linkedList0 = new LinkedList<Type>();
      linkedList0.add((Type) null);
      javaClassInfo0.setIncludes(linkedList0);
      List<Type> list0 = javaClassInfo0.getIncludes();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      JavaClassInfo javaClassInfo0 = new JavaClassInfo("Y/>?)o8F", byteArray0);
      List<Type> list0 = javaClassInfo0.getIncludes();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Random.setNextRandom((-1479155945));
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      UUID uUID0 = MockUUID.randomUUID();
      javaClassInfo0.setId(uUID0);
      UUID uUID1 = javaClassInfo0.getId();
      assertEquals((-1648270902244128168L), uUID1.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      UUID uUID0 = MockUUID.fromString("Q@H).1");
      javaClassInfo0.setId(uUID0);
      UUID uUID1 = javaClassInfo0.getId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      JavaClassInfo javaClassInfo0 = new JavaClassInfo("Y/>?)o8F", byteArray0);
      byte[] byteArray1 = javaClassInfo0.getClassByteCode();
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      String[] stringArray0 = javaClassInfo0.getJavaParentInterfaces();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      byte[] byteArray0 = new byte[1];
      javaClassInfo0.setClassByteCode(byteArray0);
      byte[] byteArray1 = javaClassInfo0.getClassByteCode();
      assertEquals(1, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      String string0 = javaClassInfo0.getSignature();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      byte[] byteArray0 = new byte[5];
      JavaClassInfo javaClassInfo1 = new JavaClassInfo("m.,Z}i$YZ3,2[4U7", byteArray0);
      javaClassInfo0.setSignature("m.,Z}i$YZ3,2[4U7");
      boolean boolean0 = javaClassInfo0.equals(javaClassInfo1);
      assertFalse(boolean0);
      assertFalse(javaClassInfo1.equals((Object)javaClassInfo0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      byte[] byteArray0 = new byte[4];
      JavaClassInfo javaClassInfo1 = new JavaClassInfo("m.,Z}i$YZ,2[4U7", byteArray0);
      String[] stringArray0 = new String[1];
      javaClassInfo0.setJavaParentInterfaces(stringArray0);
      javaClassInfo0.setSignature("m.,Z}i$YZ,2[4U7");
      boolean boolean0 = javaClassInfo1.equals(javaClassInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      String[] stringArray0 = new String[1];
      javaClassInfo0.setJavaParentInterfaces(stringArray0);
      boolean boolean0 = javaClassInfo0.equals(javaClassInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      byte[] byteArray0 = new byte[4];
      JavaClassInfo javaClassInfo1 = new JavaClassInfo("m. Z}i$YZ,2[4U7", byteArray0);
      javaClassInfo0.setSignature("m. Z}i$YZ,2[4U7");
      boolean boolean0 = javaClassInfo1.equals(javaClassInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      JavaClassInfo javaClassInfo1 = new JavaClassInfo();
      javaClassInfo0.setSignature("m. Z}i$YZ,2[4U7");
      assertFalse(javaClassInfo0.equals((Object)javaClassInfo1));
      
      boolean boolean0 = javaClassInfo1.equals(javaClassInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      javaClassInfo0.setSignature("m. Z}i$YZ,2[4U7");
      boolean boolean0 = javaClassInfo0.equals(javaClassInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      byte[] byteArray0 = new byte[4];
      JavaClassInfo javaClassInfo1 = new JavaClassInfo("m.,Z}i$YZ,2[4U7", byteArray0);
      boolean boolean0 = javaClassInfo1.equals(javaClassInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      Object object0 = new Object();
      boolean boolean0 = javaClassInfo0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      int int0 = javaClassInfo0.getModifier();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      javaClassInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      UUID uUID0 = javaClassInfo0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      byte[] byteArray0 = javaClassInfo0.getClassByteCode();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      List<Type> list0 = javaClassInfo0.getIncludes();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaClassInfo javaClassInfo0 = new JavaClassInfo();
      // Undeclared exception!
      try { 
        javaClassInfo0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/representer/Representer
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.java.JavaClassInfo", e);
      }
  }
}
