/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 12:16:47 GMT 2022
 */

package es.bsc.dataclay.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.ObjectGraph;
import es.bsc.dataclay.util.ids.ObjectID;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectGraph_ESTest extends ObjectGraph_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObjectID objectID0 = new ObjectID("");
      // Undeclared exception!
      try { 
        ObjectGraph.depthFirstMerge((ObjectGraph) null, (ObjectGraph) null, objectID0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.ObjectGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ObjectID objectID0 = new ObjectID();
      // Undeclared exception!
      try { 
        ObjectGraph.depthFirstTraversal((ObjectGraph) null, objectID0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.ObjectGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      ObjectID objectID0 = new ObjectID(uUID0);
      ObjectGraph.Vertex objectGraph_Vertex0 = new ObjectGraph.Vertex(objectID0);
      boolean boolean0 = objectGraph_Vertex0.equals(objectGraph_Vertex0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("ERROR");
      ObjectID objectID0 = new ObjectID(uUID0);
      ObjectGraph.Vertex objectGraph_Vertex0 = new ObjectGraph.Vertex(objectID0);
      String string0 = objectGraph_Vertex0.toString();
      assertEquals("00000", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObjectID objectID0 = new ObjectID("aTcdG4*?n$_&GhJ5");
      ObjectGraph.Vertex objectGraph_Vertex0 = new ObjectGraph.Vertex(objectID0);
      boolean boolean0 = objectGraph_Vertex0.equals(objectID0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ObjectGraph objectGraph0 = null;
      try {
        objectGraph0 = new ObjectGraph();
        fail("Expecting exception: NoSuchMethodError");
      
      } catch(NoSuchMethodError e) {
         //
         // 'java.util.UUID org.evosuite.runtime.mock.java.util.MockUUID.UUID(long, long)'
         //
         verifyException("es.bsc.dataclay.util.ObjectGraph", e);
      }
  }
}
