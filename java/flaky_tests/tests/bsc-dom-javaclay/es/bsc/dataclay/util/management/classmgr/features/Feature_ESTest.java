/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:00:35 GMT 2022
 */

package es.bsc.dataclay.util.management.classmgr.features;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.classmgr.features.Feature;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Feature_ESTest extends Feature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Feature.FeatureType feature_FeatureType0 = Feature.FeatureType.CPU;
      assertEquals(Feature.FeatureType.LANGUAGE, feature_FeatureType0.getParent());
      
      Feature.FeatureType feature_FeatureType1 = Feature.FeatureType.ARCHITECTURE;
      feature_FeatureType0.setParent(feature_FeatureType1);
      assertEquals(Feature.FeatureType.ARCHITECTURE, feature_FeatureType0.getParent());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Feature.FeatureType feature_FeatureType0 = Feature.FeatureType.QUALITATIVE;
      feature_FeatureType0.getParent();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Feature feature0 = new Feature();
      feature0.getType();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Feature.FeatureType feature_FeatureType0 = Feature.FeatureType.CPU;
      Feature feature0 = new Feature(feature_FeatureType0);
      feature0.setType(feature_FeatureType0);
      assertEquals(Feature.FeatureType.CPU, feature0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Feature feature0 = null;
      try {
        feature0 = new Feature((Feature.FeatureType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Feature type cannot be null
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.Feature", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Feature.FeatureType feature_FeatureType0 = Feature.FeatureType.LANGUAGE;
      // Undeclared exception!
      try { 
        feature_FeatureType0.setParent((Feature.FeatureType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // If a parent is set it cannot be null
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.Feature$FeatureType", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Feature.FeatureType feature_FeatureType0 = Feature.FeatureType.CPU;
      assertEquals(Feature.FeatureType.QUANTITATIVE, feature_FeatureType0.getParent());
      
      feature_FeatureType0.setParent(feature_FeatureType0);
      assertEquals(Feature.FeatureType.CPU, feature_FeatureType0.getParent());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Feature.FeatureType feature_FeatureType0 = Feature.FeatureType.CPU;
      Feature.FeatureType feature_FeatureType1 = feature_FeatureType0.getParent();
      assertEquals(Feature.FeatureType.QUANTITATIVE, feature_FeatureType1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Feature feature0 = new Feature();
      // Undeclared exception!
      try { 
        feature0.setType((Feature.FeatureType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Feature type cannot be null
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.Feature", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Feature.FeatureType feature_FeatureType0 = Feature.FeatureType.LANGUAGE;
      Feature feature0 = new Feature(feature_FeatureType0);
      Feature.FeatureType feature_FeatureType1 = feature0.getType();
      assertSame(feature_FeatureType1, feature_FeatureType0);
  }
}
