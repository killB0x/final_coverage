/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 12:52:28 GMT 2022
 */

package es.bsc.dataclay.util.management.classmgr.features;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.classmgr.features.LanguageFeature;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LanguageFeature_ESTest extends LanguageFeature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      languageFeature0.setLanguageName("Fm");
      languageFeature0.setVersion("k+");
      languageFeature0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      languageFeature0.setVersion("k+");
      String string0 = languageFeature0.getVersion();
      assertEquals("k+", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      languageFeature0.setVersion("");
      String string0 = languageFeature0.getVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      String string0 = languageFeature0.getLanguageName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature("Language name is null or empty", "o#W~");
      assertEquals("Language name is null or empty", languageFeature0.getLanguageName());
      
      languageFeature0.setLanguageName("");
      languageFeature0.getLanguageName();
      assertEquals("o#W~", languageFeature0.getVersion());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Random.setNextRandom(134);
      LanguageFeature languageFeature0 = new LanguageFeature();
      UUID uUID0 = MockUUID.randomUUID();
      languageFeature0.setId(uUID0);
      UUID uUID1 = languageFeature0.getId();
      assertEquals("86000000-8700-4000-8800-000089000000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      // Undeclared exception!
      try { 
        languageFeature0.equals(languageFeature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      String string0 = languageFeature0.getVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature("Language name is null or empty", "o#W~");
      String string0 = languageFeature0.getLanguageName();
      assertEquals("Language name is null or empty", string0);
      assertEquals("o#W~", languageFeature0.getVersion());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature("6", "6");
      LanguageFeature languageFeature1 = new LanguageFeature("6", "<");
      boolean boolean0 = languageFeature0.equals(languageFeature1);
      assertFalse(boolean0);
      assertEquals("6", languageFeature1.getLanguageName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature("E", "E");
      LanguageFeature languageFeature1 = new LanguageFeature();
      boolean boolean0 = languageFeature0.equals(languageFeature1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature("es.bsc.dataclay.util.management.classmgr.features.Feature", "es.bsc.dataclay.util.management.classmgr.features.Feature");
      boolean boolean0 = languageFeature0.equals("es.bsc.dataclay.util.management.classmgr.features.Feature");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LanguageFeature languageFeature0 = null;
      try {
        languageFeature0 = new LanguageFeature("(#bcG9$8g4k)", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Language version is null or empty
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.LanguageFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LanguageFeature languageFeature0 = null;
      try {
        languageFeature0 = new LanguageFeature("VJ^s8(?CXm=", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Language version is null or empty
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.LanguageFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LanguageFeature languageFeature0 = null;
      try {
        languageFeature0 = new LanguageFeature("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Language name is null or empty
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.LanguageFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LanguageFeature languageFeature0 = null;
      try {
        languageFeature0 = new LanguageFeature((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Language name is null or empty
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.LanguageFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      UUID uUID0 = MockUUID.randomUUID();
      languageFeature0.setId(uUID0);
      UUID uUID1 = languageFeature0.getId();
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      // Undeclared exception!
      try { 
        languageFeature0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/representer/Representer
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.LanguageFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      UUID uUID0 = languageFeature0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature("6", "6");
      boolean boolean0 = languageFeature0.equals(languageFeature0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LanguageFeature languageFeature0 = new LanguageFeature();
      // Undeclared exception!
      try { 
        languageFeature0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.features.LanguageFeature", e);
      }
  }
}
