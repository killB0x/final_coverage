/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:18:05 GMT 2022
 */

package es.bsc.dataclay.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.StreamGobbler;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StreamGobbler_ESTest extends StreamGobbler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StreamGobbler streamGobbler0 = new StreamGobbler(sequenceInputStream0, "", false, stringBuilder0);
      streamGobbler0.run();
      assertTrue(streamGobbler0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("Ro~y7>l");
      StreamGobbler streamGobbler0 = new StreamGobbler((InputStream) null, "Ro~y7>l", false, stringBuilder0);
      // Undeclared exception!
      try { 
        streamGobbler0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte)126);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      StreamGobbler streamGobbler0 = new StreamGobbler(pushbackInputStream0, "m4rr|c*m:9)+$YRk&g0", false, (StringBuilder) null);
      // Undeclared exception!
      try { 
        streamGobbler0.run();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("j|6oVRatU#Vn5eCJA+", "j|6oVRatU#Vn5eCJA+");
      File file0 = MockFile.createTempFile("INFO", "INFO", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      StringBuilder stringBuilder0 = new StringBuilder(127);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 127);
      StreamGobbler streamGobbler0 = new StreamGobbler(bufferedInputStream0, "INFO", true, stringBuilder0);
      streamGobbler0.run();
      assertTrue(streamGobbler0.isDaemon());
  }
}
