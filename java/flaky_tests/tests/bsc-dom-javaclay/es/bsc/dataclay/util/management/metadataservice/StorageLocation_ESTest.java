/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:06:01 GMT 2022
 */

package es.bsc.dataclay.util.management.metadataservice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.metadataservice.StorageLocation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StorageLocation_ESTest extends StorageLocation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("util.Configuration", "util.Configuration", 0);
      StorageLocation storageLocation1 = new StorageLocation("util.Configuration", "util.Configuration", 0);
      storageLocation1.setStorageTCPPort(288);
      boolean boolean0 = storageLocation1.equals(storageLocation0);
      assertEquals(288, storageLocation1.getStorageTCPPort());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("", "", 0);
      int int0 = storageLocation0.getStorageTCPPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("", "[Deserialization] --> Master location most bytes deserialized: data=", 4);
      storageLocation0.setStorageTCPPort((-1));
      int int0 = storageLocation0.getStorageTCPPort();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation();
      String string0 = storageLocation0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("", "[Deserialization] --> Master location most bytes deserialized: data=", 4);
      assertEquals("[Deserialization] --> Master location most bytes deserialized: data=", storageLocation0.getName());
      
      storageLocation0.setName("");
      storageLocation0.getName();
      assertEquals("", storageLocation0.getHostname());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("", "[Deserialization] --> Master location most bytes deserialized: data=", 4);
      assertEquals("", storageLocation0.getHostname());
      
      storageLocation0.setHostname("es.bsc.dataclay.util.management.metadataservice.StorageLocation");
      storageLocation0.getHostname();
      assertEquals(4, storageLocation0.getStorageTCPPort());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("", "", 0);
      storageLocation0.getHostname();
      assertEquals(0, storageLocation0.getStorageTCPPort());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation();
      // Undeclared exception!
      try { 
        storageLocation0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.management.metadataservice.StorageLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation();
      // Undeclared exception!
      try { 
        storageLocation0.equals(storageLocation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("", "[Deserialization] --> Master location most bytes deserialized: data=", 4);
      int int0 = storageLocation0.getStorageTCPPort();
      assertEquals("", storageLocation0.getHostname());
      assertEquals(4, int0);
      assertEquals("[Deserialization] --> Master location most bytes deserialized: data=", storageLocation0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("", "[Deserialization] --> Master location most bytes deserialized: data=", 4);
      String string0 = storageLocation0.getName();
      assertEquals("", storageLocation0.getHostname());
      assertEquals("[Deserialization] --> Master location most bytes deserialized: data=", string0);
      assertEquals(4, storageLocation0.getStorageTCPPort());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("m$", "m$", 127);
      StorageLocation storageLocation1 = new StorageLocation("m$", "m$", (-2092519307));
      boolean boolean0 = storageLocation1.equals(storageLocation0);
      assertEquals((-2092519307), storageLocation1.getStorageTCPPort());
      assertFalse(storageLocation0.equals((Object)storageLocation1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("m$", "m$", (-1118643747));
      StorageLocation storageLocation1 = new StorageLocation("m$", "m$", (-1118643747));
      assertTrue(storageLocation1.equals((Object)storageLocation0));
      
      storageLocation0.setName("mV$");
      boolean boolean0 = storageLocation0.equals(storageLocation1);
      assertFalse(storageLocation1.equals((Object)storageLocation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("g6V", "g6V", (-1035));
      StorageLocation storageLocation1 = new StorageLocation();
      boolean boolean0 = storageLocation1.equals(storageLocation0);
      assertEquals((-1035), storageLocation0.getStorageTCPPort());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("util.Configuration", "util.Configuration", 0);
      boolean boolean0 = storageLocation0.equals("");
      assertEquals(0, storageLocation0.getStorageTCPPort());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("util.Configuration", "util.Configuration", 0);
      String string0 = storageLocation0.toString();
      assertEquals("[SL/util.Configuration/util.Configuration:0]", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation();
      String string0 = storageLocation0.getHostname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("=:pXY]Gvj)}O^bUO", "=:pXY]Gvj)}O^bUO", 2915);
      storageLocation0.hashCode();
      assertEquals(2915, storageLocation0.getStorageTCPPort());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StorageLocation storageLocation0 = new StorageLocation("m$", "m$", (-1118643747));
      boolean boolean0 = storageLocation0.equals(storageLocation0);
      assertEquals((-1118643747), storageLocation0.getStorageTCPPort());
      assertTrue(boolean0);
  }
}
