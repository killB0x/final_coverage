/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:08:12 GMT 2022
 */

package es.bsc.dataclay.util.configs;

import org.junit.Test;
import static org.junit.Assert.*;
import es.bsc.dataclay.dbhandler.DBHandlerConf;
import es.bsc.dataclay.dbhandler.sql.sqlite.SQLiteHandlerConfig;
import es.bsc.dataclay.util.configs.CfgDataService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CfgDataService_ESTest extends CfgDataService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("Ui[#X", "", true);
      CfgDataService cfgDataService0 = new CfgDataService("", "", 0, sQLiteHandlerConfig0);
      int int0 = cfgDataService0.getTcpPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CfgDataService cfgDataService0 = new CfgDataService("Ikh g2qrIqf!8DM", "", 2096, (DBHandlerConf) null);
      int int0 = cfgDataService0.getTcpPort();
      assertEquals(2096, int0);
      assertEquals("", cfgDataService0.getHostname());
      assertEquals("Ikh g2qrIqf!8DM", cfgDataService0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CfgDataService cfgDataService0 = new CfgDataService("Ikh g2qrIqf!8DM", "", 2096, (DBHandlerConf) null);
      String string0 = cfgDataService0.getName();
      assertEquals(2096, cfgDataService0.getTcpPort());
      assertEquals("Ikh g2qrIqf!8DM", string0);
      assertEquals("", cfgDataService0.getHostname());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig();
      CfgDataService cfgDataService0 = new CfgDataService("", sQLiteHandlerConfig0);
      cfgDataService0.getName();
      assertEquals((-1), cfgDataService0.getTcpPort());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("SQLiteHandlerConfig [dbPath = ", "SQLiteHandlerConfig [dbPath = ", false);
      CfgDataService cfgDataService0 = new CfgDataService("SQLiteHandlerConfig [dbPath = ", "SQLiteHandlerConfig [dbPath = ", 1198, sQLiteHandlerConfig0);
      cfgDataService0.getHostname();
      assertEquals(1198, cfgDataService0.getTcpPort());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CfgDataService cfgDataService0 = new CfgDataService("Ikh g2qrIqf!8DM", "", 2096, (DBHandlerConf) null);
      String string0 = cfgDataService0.getHostname();
      assertEquals(2096, cfgDataService0.getTcpPort());
      assertEquals("Ikh g2qrIqf!8DM", cfgDataService0.getName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CfgDataService cfgDataService0 = new CfgDataService("Ikh g2qrIqf!8DM", "", 2096, (DBHandlerConf) null);
      cfgDataService0.getDbHandlerConf();
      assertEquals("", cfgDataService0.getHostname());
      assertEquals(2096, cfgDataService0.getTcpPort());
      assertEquals("Ikh g2qrIqf!8DM", cfgDataService0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("SQLiteHandlerConfig [dbPath = ", (String) null, true);
      CfgDataService cfgDataService0 = new CfgDataService((String) null, (String) null, (-383), sQLiteHandlerConfig0);
      cfgDataService0.getDbHandlerConf();
      assertEquals((-383), cfgDataService0.getTcpPort());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("SQLiteHandlerConfig [dbPath = ", (String) null, true);
      CfgDataService cfgDataService0 = new CfgDataService((String) null, (String) null, (-383), sQLiteHandlerConfig0);
      int int0 = cfgDataService0.getTcpPort();
      assertEquals((-383), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("SQLiteHandlerConfig [dbPath = ", (String) null, true);
      CfgDataService cfgDataService0 = new CfgDataService((String) null, (String) null, (-383), sQLiteHandlerConfig0);
      cfgDataService0.getHostname();
      assertEquals((-383), cfgDataService0.getTcpPort());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("SQLiteHandlerConfig [dbPath = ", (String) null, true);
      CfgDataService cfgDataService0 = new CfgDataService((String) null, (String) null, (-383), sQLiteHandlerConfig0);
      cfgDataService0.getName();
      assertEquals((-383), cfgDataService0.getTcpPort());
  }
}
