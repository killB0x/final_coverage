/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:17:50 GMT 2022
 */

package es.bsc.dataclay.util.management.datasetmgr;

import org.junit.Test;
import static org.junit.Assert.*;
import es.bsc.dataclay.util.ids.AccountID;
import es.bsc.dataclay.util.management.datasetmgr.DataSet;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataSet_ESTest extends DataSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataSet dataSet0 = new DataSet("rmii-zLc0yK~wec?RE", "es.bsc.dataclay.util.ids.EventMessageID", false);
      String string0 = dataSet0.getName();
      assertEquals("rmii-zLc0yK~wec?RE", string0);
      assertFalse(dataSet0.getIsPublic());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      AccountID accountID0 = new AccountID(uUID0);
      DataSet dataSet0 = new DataSet("es.bsc.dataclay.util.management.datasetmgr.DataSet", accountID0, true);
      boolean boolean0 = dataSet0.getIsPublic();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataSet dataSet0 = new DataSet("", "", false);
      UUID uUID0 = MockUUID.randomUUID();
      AccountID accountID0 = new AccountID(uUID0);
      dataSet0.setProviderAccountID(accountID0);
      dataSet0.getProviderAccountID();
      assertFalse(dataSet0.getIsPublic());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataSet dataSet0 = new DataSet("", "", false);
      dataSet0.setName("");
      assertFalse(dataSet0.getIsPublic());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DataSet dataSet0 = new DataSet("", "", false);
      dataSet0.setIsPublic(false);
      assertFalse(dataSet0.getIsPublic());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DataSet dataSet0 = new DataSet("", "", false);
      dataSet0.getName();
      assertFalse(dataSet0.getIsPublic());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DataSet dataSet0 = new DataSet();
      String string0 = dataSet0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DataSet dataSet0 = new DataSet("", "", false);
      boolean boolean0 = dataSet0.getIsPublic();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DataSet dataSet0 = new DataSet("", "", false);
      dataSet0.getProviderAccountID();
      assertFalse(dataSet0.getIsPublic());
  }
}
