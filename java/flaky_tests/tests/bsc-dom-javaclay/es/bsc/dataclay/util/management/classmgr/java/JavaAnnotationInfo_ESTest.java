/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:29:16 GMT 2022
 */

package es.bsc.dataclay.util.management.classmgr.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.management.classmgr.java.JavaAnnotationInfo;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaAnnotationInfo_ESTest extends JavaAnnotationInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo();
      boolean boolean0 = javaAnnotationInfo0.getVisible();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Random.setNextRandom(1163);
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(true);
      UUID uUID0 = MockUUID.fromString("es.bsc.dataclay.util.yaml.CommonYAML");
      javaAnnotationInfo0.setId(uUID0);
      javaAnnotationInfo0.getId();
      assertTrue(javaAnnotationInfo0.getVisible());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(true);
      UUID uUID0 = MockUUID.fromString("?OV*BX<zK3x");
      javaAnnotationInfo0.setId(uUID0);
      javaAnnotationInfo0.getId();
      assertTrue(javaAnnotationInfo0.getVisible());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(true);
      boolean boolean0 = javaAnnotationInfo0.getVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(true);
      javaAnnotationInfo0.setVisible(true);
      assertTrue(javaAnnotationInfo0.getVisible());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(false);
      boolean boolean0 = javaAnnotationInfo0.equals((Object) null);
      assertFalse(javaAnnotationInfo0.getVisible());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(true);
      javaAnnotationInfo0.hashCode();
      assertTrue(javaAnnotationInfo0.getVisible());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(false);
      javaAnnotationInfo0.hashCode();
      assertFalse(javaAnnotationInfo0.getVisible());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo();
      JavaAnnotationInfo javaAnnotationInfo1 = new JavaAnnotationInfo(true);
      boolean boolean0 = javaAnnotationInfo1.equals(javaAnnotationInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(true);
      javaAnnotationInfo0.getId();
      assertTrue(javaAnnotationInfo0.getVisible());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(true);
      // Undeclared exception!
      try { 
        javaAnnotationInfo0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/representer/Representer
         //
         verifyException("es.bsc.dataclay.util.management.classmgr.java.JavaAnnotationInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaAnnotationInfo javaAnnotationInfo0 = new JavaAnnotationInfo(false);
      boolean boolean0 = javaAnnotationInfo0.equals(javaAnnotationInfo0);
      assertTrue(boolean0);
      assertFalse(javaAnnotationInfo0.getVisible());
  }
}
