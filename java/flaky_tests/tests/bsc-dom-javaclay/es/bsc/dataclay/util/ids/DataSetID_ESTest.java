/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:50:22 GMT 2022
 */

package es.bsc.dataclay.util.ids;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.DataClayObject;
import es.bsc.dataclay.serialization.buffer.DataClayByteBuffer;
import es.bsc.dataclay.serialization.buffer.JavaByteBuffer;
import es.bsc.dataclay.util.DataClayObjectMetaData;
import es.bsc.dataclay.util.ReferenceCounting;
import es.bsc.dataclay.util.ids.DataSetID;
import es.bsc.dataclay.util.ids.MetaClassID;
import java.nio.BufferUnderflowException;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.ListIterator;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataSetID_ESTest extends DataSetID_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("B]`yi7<y91-M)*!v9");
      DataSetID dataSetID0 = new DataSetID(uUID0);
      assertEquals("00000000-0100-4000-8200-000003000000", dataSetID0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataSetID dataSetID0 = new DataSetID();
      HashMap<MetaClassID, byte[]> hashMap0 = new HashMap<MetaClassID, byte[]>();
      IdentityHashMap<Object, Integer> identityHashMap0 = new IdentityHashMap<Object, Integer>();
      ReferenceCounting referenceCounting0 = new ReferenceCounting();
      // Undeclared exception!
      try { 
        dataSetID0.serialize((DataClayByteBuffer) null, true, hashMap0, identityHashMap0, (ListIterator<DataClayObject>) null, referenceCounting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.ids.ID", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataSetID dataSetID0 = new DataSetID();
      byte[] byteArray0 = new byte[0];
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer(byteArray0);
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      IdentityHashMap<Integer, Object> identityHashMap1 = new IdentityHashMap<Integer, Object>();
      // Undeclared exception!
      try { 
        dataSetID0.deserialize(javaByteBuffer0, identityHashMap0, (DataClayObjectMetaData) null, identityHashMap1);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataSetID dataSetID0 = new DataSetID((String) null);
      assertEquals("00000000-0100-4000-8200-000003000000", dataSetID0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DataSetID dataSetID0 = new DataSetID("");
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>(128);
      // Undeclared exception!
      try { 
        dataSetID0.deserialize(javaByteBuffer0, identityHashMap0, (DataClayObjectMetaData) null, hashMap0);
        fail("Expecting exception: NoSuchMethodError");
      
      } catch(NoSuchMethodError e) {
         //
         // 'java.util.UUID org.evosuite.runtime.mock.java.util.MockUUID.UUID(long, long)'
         //
         verifyException("es.bsc.dataclay.util.ids.ID", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DataSetID dataSetID0 = new DataSetID();
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer();
      HashMap<MetaClassID, byte[]> hashMap0 = new HashMap<MetaClassID, byte[]>();
      ReferenceCounting referenceCounting0 = new ReferenceCounting();
      IdentityHashMap<Object, Integer> identityHashMap0 = new IdentityHashMap<Object, Integer>();
      dataSetID0.serialize(javaByteBuffer0, true, hashMap0, identityHashMap0, (ListIterator<DataClayObject>) null, referenceCounting0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DataSetID dataSetID0 = new DataSetID();
      HashMap<MetaClassID, byte[]> hashMap0 = new HashMap<MetaClassID, byte[]>();
      IdentityHashMap<Integer, Object> identityHashMap0 = new IdentityHashMap<Integer, Object>();
      // Undeclared exception!
      try { 
        dataSetID0.deserialize((DataClayByteBuffer) null, hashMap0, (DataClayObjectMetaData) null, identityHashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.ids.ID", e);
      }
  }
}
