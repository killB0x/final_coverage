/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:25:06 GMT 2022
 */

package es.bsc.dataclay.util.structs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.structs.Tuple;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tuple_ESTest extends Tuple_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>();
      Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>> tuple1 = new Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>>();
      tuple1.setSecond(tuple0);
      tuple1.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>();
      Tuple<Tuple<Integer, Integer>, Integer> tuple1 = new Tuple<Tuple<Integer, Integer>, Integer>(tuple0, (Integer) null);
      Tuple<Integer, Integer> tuple2 = tuple1.getFirst();
      assertSame(tuple0, tuple2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>> tuple0 = new Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>>();
      // Undeclared exception!
      try { 
        tuple0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>();
      // Undeclared exception!
      try { 
        tuple0.equals(tuple0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.util.structs.Tuple", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>> tuple0 = new Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>>();
      Tuple<Integer, Integer> tuple1 = tuple0.getSecond();
      assertNull(tuple1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>();
      Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>> tuple1 = new Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>>();
      tuple1.setSecond(tuple0);
      Tuple<Integer, Integer> tuple2 = tuple1.getSecond();
      assertSame(tuple2, tuple0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tuple<Integer, Tuple<Integer, Integer>> tuple0 = new Tuple<Integer, Tuple<Integer, Integer>>();
      Integer integer0 = tuple0.getFirst();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(219);
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>(integer0, integer0);
      Integer integer1 = new Integer(3614);
      tuple0.setFirst(integer1);
      Tuple<Integer, Integer> tuple1 = new Tuple<Integer, Integer>(integer1, integer1);
      boolean boolean0 = tuple1.equals(tuple0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>();
      Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>> tuple1 = new Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>>(tuple0, tuple0);
      Integer integer0 = new Integer(1);
      tuple1.first.first = integer0;
      boolean boolean0 = tuple1.equals(tuple0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>();
      boolean boolean0 = tuple0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>();
      Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>> tuple1 = new Tuple<Tuple<Integer, Integer>, Tuple<Integer, Integer>>(tuple0, tuple0);
      String string0 = tuple1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(219);
      Tuple<Integer, Integer> tuple0 = new Tuple<Integer, Integer>(integer0, integer0);
      boolean boolean0 = tuple0.equals(tuple0);
      assertTrue(boolean0);
  }
}
