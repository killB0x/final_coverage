/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:25:35 GMT 2022
 */

package es.bsc.dataclay.util.info;

import org.junit.Test;
import static org.junit.Assert.*;
import es.bsc.dataclay.util.ids.ImplementationID;
import es.bsc.dataclay.util.ids.OperationID;
import es.bsc.dataclay.util.ids.PropertyID;
import es.bsc.dataclay.util.info.EnrichmentInfo;
import es.bsc.dataclay.util.management.classmgr.Operation;
import es.bsc.dataclay.util.management.classmgr.Property;
import es.bsc.dataclay.util.management.classmgr.Type;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EnrichmentInfo_ESTest extends EnrichmentInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      Map<PropertyID, String> map0 = enrichmentInfo0.getPropertiesByID();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, Operation> hashMap0 = new HashMap<String, Operation>();
      IdentityHashMap<PropertyID, String> identityHashMap0 = new IdentityHashMap<PropertyID, String>();
      HashMap<OperationID, String> hashMap1 = new HashMap<OperationID, String>();
      IdentityHashMap<OperationID, Set<ImplementationID>> identityHashMap1 = new IdentityHashMap<OperationID, Set<ImplementationID>>();
      PropertyID propertyID0 = new PropertyID("@HW|[");
      identityHashMap0.put(propertyID0, "");
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo((Map<String, Property>) null, hashMap0, identityHashMap0, hashMap1, identityHashMap1);
      Map<PropertyID, String> map0 = enrichmentInfo0.getPropertiesByID();
      assertNotNull(map0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      HashMap<String, Property> hashMap0 = new HashMap<String, Property>();
      enrichmentInfo0.setProperties(hashMap0);
      Map<String, Property> map0 = enrichmentInfo0.getProperties();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      HashMap<String, Property> hashMap0 = new HashMap<String, Property>();
      Type type0 = new Type(",6b6kN!W2C4hxH,IY", "DPGF|jEuD", "eqaa");
      Property property0 = new Property(0, (String) null, type0, "es.bsc.dataclay.util.info.EnrichmentInfo", "");
      hashMap0.put("DPGF|jEuD", property0);
      enrichmentInfo0.setProperties(hashMap0);
      Map<String, Property> map0 = enrichmentInfo0.getProperties();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Operation> hashMap0 = new HashMap<String, Operation>();
      IdentityHashMap<PropertyID, String> identityHashMap0 = new IdentityHashMap<PropertyID, String>();
      HashMap<OperationID, String> hashMap1 = new HashMap<OperationID, String>();
      IdentityHashMap<OperationID, Set<ImplementationID>> identityHashMap1 = new IdentityHashMap<OperationID, Set<ImplementationID>>();
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo((Map<String, Property>) null, hashMap0, identityHashMap0, hashMap1, identityHashMap1);
      Map<OperationID, String> map0 = enrichmentInfo0.getOperationsByID();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      OperationID operationID0 = new OperationID();
      IdentityHashMap<OperationID, String> identityHashMap0 = new IdentityHashMap<OperationID, String>();
      identityHashMap0.put(operationID0, "");
      enrichmentInfo0.setOperationsByID(identityHashMap0);
      Map<OperationID, String> map0 = enrichmentInfo0.getOperationsByID();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, Operation> hashMap0 = new HashMap<String, Operation>();
      IdentityHashMap<PropertyID, String> identityHashMap0 = new IdentityHashMap<PropertyID, String>();
      HashMap<OperationID, String> hashMap1 = new HashMap<OperationID, String>();
      IdentityHashMap<OperationID, Set<ImplementationID>> identityHashMap1 = new IdentityHashMap<OperationID, Set<ImplementationID>>();
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo((Map<String, Property>) null, hashMap0, identityHashMap0, hashMap1, identityHashMap1);
      Map<String, Operation> map0 = enrichmentInfo0.getOperations();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      IdentityHashMap<String, Operation> identityHashMap0 = new IdentityHashMap<String, Operation>();
      identityHashMap0.put("", (Operation) null);
      enrichmentInfo0.setOperations(identityHashMap0);
      Map<String, Operation> map0 = enrichmentInfo0.getOperations();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, Operation> hashMap0 = new HashMap<String, Operation>();
      IdentityHashMap<PropertyID, String> identityHashMap0 = new IdentityHashMap<PropertyID, String>();
      HashMap<OperationID, String> hashMap1 = new HashMap<OperationID, String>();
      IdentityHashMap<OperationID, Set<ImplementationID>> identityHashMap1 = new IdentityHashMap<OperationID, Set<ImplementationID>>();
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo((Map<String, Property>) null, hashMap0, identityHashMap0, hashMap1, identityHashMap1);
      Map<OperationID, Set<ImplementationID>> map0 = enrichmentInfo0.getEnrichmentsOfExistentOperations();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      IdentityHashMap<OperationID, Set<ImplementationID>> identityHashMap0 = new IdentityHashMap<OperationID, Set<ImplementationID>>();
      LinkedHashSet<ImplementationID> linkedHashSet0 = new LinkedHashSet<ImplementationID>();
      identityHashMap0.put((OperationID) null, linkedHashSet0);
      enrichmentInfo0.setEnrichmentsOfExistentOperations(identityHashMap0);
      Map<OperationID, Set<ImplementationID>> map0 = enrichmentInfo0.getEnrichmentsOfExistentOperations();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<PropertyID, String> hashMap0 = new HashMap<PropertyID, String>();
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      enrichmentInfo0.setPropertiesByID(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, Operation> hashMap0 = new HashMap<String, Operation>();
      IdentityHashMap<PropertyID, String> identityHashMap0 = new IdentityHashMap<PropertyID, String>();
      HashMap<OperationID, String> hashMap1 = new HashMap<OperationID, String>();
      IdentityHashMap<OperationID, Set<ImplementationID>> identityHashMap1 = new IdentityHashMap<OperationID, Set<ImplementationID>>();
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo((Map<String, Property>) null, hashMap0, identityHashMap0, hashMap1, identityHashMap1);
      Map<PropertyID, String> map0 = enrichmentInfo0.getPropertiesByID();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      Map<String, Property> map0 = enrichmentInfo0.getProperties();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      Map<OperationID, String> map0 = enrichmentInfo0.getOperationsByID();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      Map<String, Operation> map0 = enrichmentInfo0.getOperations();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EnrichmentInfo enrichmentInfo0 = new EnrichmentInfo();
      Map<OperationID, Set<ImplementationID>> map0 = enrichmentInfo0.getEnrichmentsOfExistentOperations();
      assertNull(map0);
  }
}
