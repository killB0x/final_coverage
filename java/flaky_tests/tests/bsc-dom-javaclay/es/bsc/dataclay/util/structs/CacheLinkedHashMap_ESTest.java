/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:41:03 GMT 2022
 */

package es.bsc.dataclay.util.structs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.util.structs.CacheLinkedHashMap;
import java.util.AbstractMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CacheLinkedHashMap_ESTest extends CacheLinkedHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheLinkedHashMap<Integer, Integer> cacheLinkedHashMap0 = new CacheLinkedHashMap<Integer, Integer>(0, 1.0F, true);
      Integer integer0 = new Integer(0);
      AbstractMap.SimpleEntry<Integer, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Integer>(integer0, integer0);
      boolean boolean0 = cacheLinkedHashMap0.removeEldestEntry(abstractMap_SimpleEntry0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CacheLinkedHashMap<Integer, Integer> cacheLinkedHashMap0 = null;
      try {
        cacheLinkedHashMap0 = new CacheLinkedHashMap<Integer, Integer>(1, 0.0F, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: 0.0
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CacheLinkedHashMap<Integer, Integer> cacheLinkedHashMap0 = new CacheLinkedHashMap<Integer, Integer>(0, 1.0F, true);
      Integer integer0 = new Integer(0);
      cacheLinkedHashMap0.putIfAbsent(integer0, integer0);
      assertTrue(cacheLinkedHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CacheLinkedHashMap<Integer, Integer> cacheLinkedHashMap0 = new CacheLinkedHashMap<Integer, Integer>(232, 232, true);
      boolean boolean0 = cacheLinkedHashMap0.removeEldestEntry((Map.Entry<Integer, Integer>) null);
      assertFalse(boolean0);
  }
}
