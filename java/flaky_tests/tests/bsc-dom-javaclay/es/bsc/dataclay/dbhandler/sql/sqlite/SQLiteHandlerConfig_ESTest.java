/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:11:51 GMT 2022
 */

package es.bsc.dataclay.dbhandler.sql.sqlite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.dbhandler.sql.sqlite.SQLiteHandlerConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLiteHandlerConfig_ESTest extends SQLiteHandlerConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("es.bsc.dataclay.util.ids.ID", "v", false);
      assertFalse(sQLiteHandlerConfig0.isInMemory());
      assertEquals("es.bsc.dataclay.util.ids.ID", sQLiteHandlerConfig0.getFolder());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("uM{+v", "uM{+v", true);
      boolean boolean0 = sQLiteHandlerConfig0.isInMemory();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig();
      sQLiteHandlerConfig0.getFolder();
      assertFalse(sQLiteHandlerConfig0.isInMemory());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("", "", false);
      sQLiteHandlerConfig0.getFolder();
      assertFalse(sQLiteHandlerConfig0.isInMemory());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig();
      // Undeclared exception!
      try { 
        sQLiteHandlerConfig0.getDBHandler();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("|'`;RUl.G3j}eV", "|'`;RUl.G3j}eV", true);
      sQLiteHandlerConfig0.getFolder();
      assertTrue(sQLiteHandlerConfig0.isInMemory());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("uM{+v", "uM{+v", true);
      String string0 = sQLiteHandlerConfig0.getDbPath();
      assertTrue(sQLiteHandlerConfig0.isInMemory());
      assertEquals("uM{+v/uM{+v", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("", "", false);
      boolean boolean0 = sQLiteHandlerConfig0.isInMemory();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig("", "", false);
      String string0 = sQLiteHandlerConfig0.toString();
      assertEquals("SQLiteHandlerConfig [dbPath = /]", string0);
      assertFalse(sQLiteHandlerConfig0.isInMemory());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig();
      sQLiteHandlerConfig0.setDbname("es.bsc.dataclay.dbhandler.sql.sqlite.SQLiteHandlerConfig");
      assertFalse(sQLiteHandlerConfig0.isInMemory());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLiteHandlerConfig sQLiteHandlerConfig0 = new SQLiteHandlerConfig(")Ai#1DO9+!q?>Q5>", ")Ai#1DO9+!q?>Q5>", false);
      // Undeclared exception!
      try { 
        sQLiteHandlerConfig0.getDBHandler();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class es.bsc.dataclay.dbhandler.sql.sqlite.SQLiteHandler
         //
         verifyException("es.bsc.dataclay.dbhandler.sql.sqlite.SQLiteHandlerConfig", e);
      }
  }
}
