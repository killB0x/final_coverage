/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:11:40 GMT 2022
 */

package es.bsc.dataclay.serialization.java.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.DataClayObject;
import es.bsc.dataclay.serialization.buffer.DataClayByteBuffer;
import es.bsc.dataclay.serialization.buffer.GrpcByteBuffer;
import es.bsc.dataclay.serialization.buffer.JavaByteBuffer;
import es.bsc.dataclay.serialization.java.lang.DoubleWrapper;
import es.bsc.dataclay.util.DataClayObjectMetaData;
import es.bsc.dataclay.util.ReferenceCounting;
import es.bsc.dataclay.util.ids.MetaClassID;
import java.nio.BufferUnderflowException;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.ListIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleWrapper_ESTest extends DoubleWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(0.0);
      DoubleWrapper doubleWrapper0 = new DoubleWrapper(double0);
      DoubleWrapper doubleWrapper1 = new DoubleWrapper(double0);
      boolean boolean0 = doubleWrapper0.equals(doubleWrapper1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      Double double0 = new Double(4414.49144757);
      doubleWrapper0.setDouble(double0);
      doubleWrapper0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      IdentityHashMap<Object, Integer> identityHashMap1 = new IdentityHashMap<Object, Integer>();
      ReferenceCounting referenceCounting0 = new ReferenceCounting();
      // Undeclared exception!
      try { 
        doubleWrapper0.serialize(javaByteBuffer0, false, identityHashMap0, identityHashMap1, (ListIterator<DataClayObject>) null, referenceCounting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.DoubleWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      // Undeclared exception!
      try { 
        doubleWrapper0.equals(doubleWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.DoubleWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IdentityHashMap<Integer, Object> identityHashMap0 = new IdentityHashMap<Integer, Object>();
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      byte[] byteArray0 = new byte[0];
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer(byteArray0);
      IdentityHashMap<MetaClassID, byte[]> identityHashMap1 = new IdentityHashMap<MetaClassID, byte[]>();
      // Undeclared exception!
      try { 
        doubleWrapper0.deserialize(javaByteBuffer0, identityHashMap1, (DataClayObjectMetaData) null, identityHashMap0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      // Undeclared exception!
      try { 
        doubleWrapper0.deserialize((DataClayByteBuffer) null, identityHashMap0, (DataClayObjectMetaData) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.DoubleWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      // Undeclared exception!
      try { 
        doubleWrapper0.deserialize(javaByteBuffer0, identityHashMap0, (DataClayObjectMetaData) null, hashMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/protobuf/InvalidProtocolBufferException
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.DoubleWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      boolean boolean0 = doubleWrapper0.isNull();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double(581.9991636217002);
      DoubleWrapper doubleWrapper0 = new DoubleWrapper(double0);
      boolean boolean0 = doubleWrapper0.isNull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      IdentityHashMap<Object, Integer> identityHashMap0 = new IdentityHashMap<Object, Integer>();
      boolean boolean0 = doubleWrapper0.equals(identityHashMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(1366.467215);
      DoubleWrapper doubleWrapper0 = new DoubleWrapper(double0);
      GrpcByteBuffer grpcByteBuffer0 = new GrpcByteBuffer();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      IdentityHashMap<Object, Integer> identityHashMap1 = new IdentityHashMap<Object, Integer>();
      ReferenceCounting referenceCounting0 = new ReferenceCounting();
      // Undeclared exception!
      try { 
        doubleWrapper0.serialize(grpcByteBuffer0, true, identityHashMap0, identityHashMap1, (ListIterator<DataClayObject>) null, referenceCounting0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class es.bsc.dataclay.serialization.lib.DataClaySerializationLib
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.DoubleWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      Object object0 = doubleWrapper0.getJavaObject();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      boolean boolean0 = doubleWrapper0.isImmutable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      // Undeclared exception!
      try { 
        doubleWrapper0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.DoubleWrapper", e);
      }
  }
}
