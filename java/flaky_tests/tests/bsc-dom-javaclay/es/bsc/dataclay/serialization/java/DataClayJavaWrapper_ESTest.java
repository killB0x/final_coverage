/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:10:22 GMT 2022
 */

package es.bsc.dataclay.serialization.java;

import org.junit.Test;
import static org.junit.Assert.*;
import es.bsc.dataclay.serialization.java.lang.BooleanWrapper;
import es.bsc.dataclay.serialization.java.lang.DoubleWrapper;
import es.bsc.dataclay.serialization.java.lang.IntegerWrapper;
import es.bsc.dataclay.serialization.java.util.MapWrapper;
import java.util.IdentityHashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataClayJavaWrapper_ESTest extends DataClayJavaWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      boolean boolean0 = doubleWrapper0.isNull();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(0);
      IntegerWrapper integerWrapper0 = new IntegerWrapper(integer0);
      boolean boolean0 = integerWrapper0.isNull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DoubleWrapper doubleWrapper0 = new DoubleWrapper();
      boolean boolean0 = doubleWrapper0.isImmutable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MapWrapper mapWrapper0 = new MapWrapper((Map) null);
      boolean boolean0 = mapWrapper0.isImmutable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BooleanWrapper booleanWrapper0 = new BooleanWrapper();
      Object object0 = booleanWrapper0.getJavaObject();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IdentityHashMap<Object, Integer> identityHashMap0 = new IdentityHashMap<Object, Integer>();
      MapWrapper mapWrapper0 = new MapWrapper(identityHashMap0);
      IdentityHashMap identityHashMap1 = (IdentityHashMap)mapWrapper0.getJavaObject();
      assertEquals(0, identityHashMap1.size());
  }
}
