/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:09:16 GMT 2022
 */

package es.bsc.dataclay.serialization.java.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.DataClayObject;
import es.bsc.dataclay.serialization.buffer.DataClayByteBuffer;
import es.bsc.dataclay.serialization.buffer.JavaByteBuffer;
import es.bsc.dataclay.serialization.java.lang.FloatWrapper;
import es.bsc.dataclay.util.DataClayObjectMetaData;
import es.bsc.dataclay.util.ReferenceCounting;
import es.bsc.dataclay.util.ids.MetaClassID;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.ListIterator;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatWrapper_ESTest extends FloatWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      FloatWrapper floatWrapper1 = new FloatWrapper();
      // Undeclared exception!
      try { 
        floatWrapper1.equals(floatWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.FloatWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Float float0 = new Float(1171.34F);
      FloatWrapper floatWrapper0 = new FloatWrapper(float0);
      floatWrapper0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      IdentityHashMap<Object, Integer> identityHashMap1 = new IdentityHashMap<Object, Integer>();
      ReferenceCounting referenceCounting0 = new ReferenceCounting();
      // Undeclared exception!
      try { 
        floatWrapper0.serialize(javaByteBuffer0, false, identityHashMap0, identityHashMap1, (ListIterator<DataClayObject>) null, referenceCounting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.FloatWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      ReferenceCounting referenceCounting0 = new ReferenceCounting();
      IdentityHashMap<Object, Integer> identityHashMap1 = new IdentityHashMap<Object, Integer>();
      Float float0 = new Float(710.79112);
      FloatWrapper floatWrapper0 = new FloatWrapper(float0);
      // Undeclared exception!
      try { 
        floatWrapper0.serialize(javaByteBuffer0, true, identityHashMap0, identityHashMap1, (ListIterator<DataClayObject>) null, referenceCounting0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class es.bsc.dataclay.serialization.lib.DataClaySerializationLib
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.FloatWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer(byteBuffer0);
      HashMap<MetaClassID, byte[]> hashMap0 = new HashMap<MetaClassID, byte[]>();
      IdentityHashMap<Integer, Object> identityHashMap0 = new IdentityHashMap<Integer, Object>();
      FloatWrapper floatWrapper0 = new FloatWrapper();
      // Undeclared exception!
      try { 
        floatWrapper0.deserialize(javaByteBuffer0, hashMap0, (DataClayObjectMetaData) null, identityHashMap0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      // Undeclared exception!
      try { 
        floatWrapper0.deserialize((DataClayByteBuffer) null, identityHashMap0, (DataClayObjectMetaData) null, (Map<Integer, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.FloatWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      JavaByteBuffer javaByteBuffer0 = new JavaByteBuffer();
      IdentityHashMap<MetaClassID, byte[]> identityHashMap0 = new IdentityHashMap<MetaClassID, byte[]>();
      IdentityHashMap<Integer, Object> identityHashMap1 = new IdentityHashMap<Integer, Object>();
      // Undeclared exception!
      try { 
        floatWrapper0.deserialize(javaByteBuffer0, identityHashMap0, (DataClayObjectMetaData) null, identityHashMap1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/protobuf/InvalidProtocolBufferException
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.FloatWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper((Float) null);
      Float float0 = new Float(1180.686539078199);
      floatWrapper0.setFloat(float0);
      assertFalse(floatWrapper0.isNull());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      boolean boolean0 = floatWrapper0.isNull();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Float float0 = new Float(725.2);
      FloatWrapper floatWrapper0 = new FloatWrapper(float0);
      boolean boolean0 = floatWrapper0.isNull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      boolean boolean0 = floatWrapper0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      // Undeclared exception!
      try { 
        floatWrapper0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.serialization.java.lang.FloatWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      boolean boolean0 = floatWrapper0.isImmutable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FloatWrapper floatWrapper0 = new FloatWrapper();
      Object object0 = floatWrapper0.getJavaObject();
      assertNull(object0);
  }
}
