/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 12:55:33 GMT 2022
 */

package es.bsc.dataclay.commonruntime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import es.bsc.dataclay.DataClayObject;
import es.bsc.dataclay.commonruntime.RuntimeUtils;
import es.bsc.dataclay.dataservice.api.DataServiceAPI;
import es.bsc.dataclay.logic.api.LogicModuleAPI;
import es.bsc.dataclay.util.ids.SessionID;
import java.lang.ref.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RuntimeUtils_ESTest extends RuntimeUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SessionID sessionID0 = new SessionID();
      // Undeclared exception!
      try { 
        RuntimeUtils.checkSession(sessionID0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class es.bsc.dataclay.util.Configuration$Flags
         //
         verifyException("es.bsc.dataclay.commonruntime.RuntimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        RuntimeUtils.checkNullParams((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("es.bsc.dataclay.commonruntime.RuntimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        RuntimeUtils.checkNullParams(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("es.bsc.dataclay.commonruntime.RuntimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        RuntimeUtils.checkConnection((DataServiceAPI) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Client is not able to connect to DataClay DataService
         //
         verifyException("es.bsc.dataclay.commonruntime.RuntimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DataServiceAPI dataServiceAPI0 = mock(DataServiceAPI.class, new ViolatedAssumptionAnswer());
      RuntimeUtils.checkConnection(dataServiceAPI0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        RuntimeUtils.checkConnection((LogicModuleAPI) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Client is not able to connect to DataClay LogicModule
         //
         verifyException("es.bsc.dataclay.commonruntime.RuntimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        RuntimeUtils.checkNullParams(stringArray0, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is null
         //
         verifyException("es.bsc.dataclay.commonruntime.RuntimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "xr";
      RuntimeUtils.checkNullParams(stringArray0, stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Reference<DataClayObject> reference0 = RuntimeUtils.newReference((DataClayObject) null);
      assertFalse(reference0.isEnqueued());
  }
}
