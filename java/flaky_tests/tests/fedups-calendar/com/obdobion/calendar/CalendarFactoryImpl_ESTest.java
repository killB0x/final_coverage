/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 02:59:09 GMT 2022
 */

package com.obdobion.calendar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.calendar.CalendarFactoryImpl;
import java.text.ParseException;
import java.time.LocalDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CalendarFactoryImpl_ESTest extends CalendarFactoryImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "=2014year =2month =14day =0hour =0minute =0second =0nanosecond";
      stringArray0[1] = "";
      LocalDateTime localDateTime0 = calendarFactoryImpl0.nowImpl(stringArray0);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      LocalDateTime localDateTime0 = calendarFactoryImpl0.overrideIfNecessary((LocalDateTime) null);
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      LocalDateTime localDateTime1 = calendarFactoryImpl0.overrideIfNecessary(localDateTime0);
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      LocalDateTime localDateTime0 = calendarFactoryImpl0.modifyImpl((LocalDateTime) null, stringArray0);
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      LocalDateTime localDateTime1 = calendarFactoryImpl0.modifyImpl(localDateTime0, (String[]) null);
      assertSame(localDateTime0, localDateTime1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[0];
      LocalDateTime localDateTime0 = calendarFactoryImpl0.applyAdjustments((LocalDateTime) null, stringArray0);
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      LocalDateTime localDateTime1 = calendarFactoryImpl0.applyAdjustments(localDateTime0, (String[]) null);
      assertSame(localDateTime0, localDateTime1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PREV";
      try { 
        calendarFactoryImpl0.todayImpl(stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: PREV
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        calendarFactoryImpl0.todayImpl(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "dytKjJV(";
      try { 
        calendarFactoryImpl0.nowImpl(stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: dytKjJV(
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      // Undeclared exception!
      try { 
        calendarFactoryImpl0.noTimeImpl((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?rj60";
      try { 
        calendarFactoryImpl0.modifyImpl((LocalDateTime) null, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: ?rj60
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      // Undeclared exception!
      try { 
        calendarFactoryImpl0.asFormula((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "+^Taw}8d2V|<1)IuE";
      try { 
        calendarFactoryImpl0.applyAdjustments((LocalDateTime) null, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // missing qty in +^Taw}8d2V|<1)IuE
         //
         verifyException("com.obdobion.calendar.DateAdjustment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[7];
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      // Undeclared exception!
      try { 
        calendarFactoryImpl0.applyAdjustments(localDateTime0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      LocalDateTime localDateTime0 = calendarFactoryImpl0.todayImpl(stringArray0);
      LocalDateTime localDateTime1 = calendarFactoryImpl0.noTimeImpl(localDateTime0);
      assertTrue(localDateTime1.equals((Object)localDateTime0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      LocalDateTime localDateTime0 = calendarFactoryImpl0.todayImpl(stringArray0);
      calendarFactoryImpl0.setOverrideForSystemTime(localDateTime0);
      LocalDateTime localDateTime1 = calendarFactoryImpl0.todayImpl(stringArray0);
      assertTrue(localDateTime1.equals((Object)localDateTime0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        calendarFactoryImpl0.nowImpl(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        calendarFactoryImpl0.modifyImpl((LocalDateTime) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      LocalDateTime localDateTime0 = calendarFactoryImpl0.todayImpl(stringArray0);
      assertNotNull(localDateTime0);
      
      String string0 = calendarFactoryImpl0.asFormula(localDateTime0);
      assertEquals("=2014year =2month =14day =0hour =0minute =0second =0nanosecond", string0);
  }
}
