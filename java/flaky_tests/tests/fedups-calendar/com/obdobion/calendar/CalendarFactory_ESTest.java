/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 03:00:09 GMT 2022
 */

package com.obdobion.calendar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.obdobion.calendar.CalendarFactory;
import com.obdobion.calendar.CalendarFactoryImpl;
import com.obdobion.calendar.ICalendarFactory;
import java.text.ParseException;
import java.time.Clock;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CalendarFactory_ESTest extends CalendarFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CalendarFactory.setInDebug(true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[C$/3Jr@L.Fk31MY}*";
      LocalDateTime localDateTime0 = CalendarFactory.today(stringArray0);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CalendarFactoryImpl calendarFactoryImpl0 = new CalendarFactoryImpl();
      ICalendarFactory iCalendarFactory0 = CalendarFactory.reset(calendarFactoryImpl0);
      assertNull(iCalendarFactory0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      LocalDateTime localDateTime1 = CalendarFactory.noTime(localDateTime0);
      assertFalse(localDateTime1.equals((Object)localDateTime0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      TimeZone timeZone0 = TimeZone.getDefault();
      Calendar calendar0 = MockCalendar.getInstance(timeZone0);
      LocalDateTime localDateTime0 = CalendarFactory.modify(calendar0, stringArray0);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3355, 3355, 3355, 0, 0, 0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      LocalDateTime localDateTime0 = CalendarFactory.modify((Date) mockDate0, stringArray0);
      LocalDateTime localDateTime1 = CalendarFactory.modify(localDateTime0, stringArray0);
      assertSame(localDateTime0, localDateTime1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      LocalDateTime localDateTime0 = CalendarFactory.modify(localDate0, stringArray0);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.US;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      LocalDateTime localDateTime0 = CalendarFactory.convert((Calendar) mockGregorianCalendar0);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      LocalDateTime localDateTime0 = CalendarFactory.convert(localDate0);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LocalDateTime localDateTime0 = CalendarFactory.now(stringArray0);
      String string0 = CalendarFactory.asJSON(localDateTime0);
      assertEquals("2014-02-14T20:21:21.320Z", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      String string0 = CalendarFactory.asFormula((Calendar) mockGregorianCalendar0);
      assertEquals("=2014year =2month =14day =20hour =21minute =21second =320000000nanosecond", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate(4, 4, (-404), 226, (-1612), 1805);
      LocalDateTime localDateTime0 = CalendarFactory.convert((Date) mockDate0);
      String string0 = CalendarFactory.asFormula(localDateTime0);
      assertEquals("=1903year =3month =31day =7hour =38minute =5second =0nanosecond", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      LocalDateTime localDateTime0 = CalendarFactory.modify(0L, stringArray0);
      long long0 = CalendarFactory.asDateLong(localDateTime0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      LocalDateTime localDateTime0 = CalendarFactory.noTime((Calendar) mockGregorianCalendar0);
      long long0 = CalendarFactory.asDateLong(localDateTime0);
      assertEquals(1392336000000L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDateTime localDateTime0 = CalendarFactory.convert((-736L));
      long long0 = CalendarFactory.asDateLong(localDateTime0);
      assertEquals((-736000L), long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocalTime localTime0 = MockLocalTime.of(0, 0);
      LocalDateTime localDateTime0 = CalendarFactory.convert(localTime0);
      Date date0 = CalendarFactory.asDate(localDateTime0);
      assertEquals("Sun Jul 05 04:51:43 GMT 169108099", date0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalTime localTime0 = MockLocalTime.of(0, 0);
      LocalDateTime localDateTime0 = CalendarFactory.convert(localTime0);
      Calendar calendar0 = CalendarFactory.asCalendar(localDateTime0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=5336474011822303232,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=169108099,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=186,DAY_OF_WEEK=1,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=4,HOUR_OF_DAY=4,MINUTE=51,SECOND=43,MILLISECOND=232,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        CalendarFactory.today(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "KqGE#<-l`\"V[7Ai@";
      try { 
        CalendarFactory.now(stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: KqGE#<-l`\"V[7Ai@
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.noTime((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".";
      try { 
        CalendarFactory.modify((Date) mockDate0, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: .
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "M";
      try { 
        CalendarFactory.modify((Calendar) mockGregorianCalendar0, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: M
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalTime localTime0 = MockLocalTime.now();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "J.9bh6Y4^mc'$3n2[";
      try { 
        CalendarFactory.modify(localTime0, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: J.9bh6Y4^mc'$3n2[
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.modify((LocalTime) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // time
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[7];
      LocalDateTime localDateTime0 = CalendarFactory.convert(0L);
      // Undeclared exception!
      try { 
        CalendarFactory.modify(localDateTime0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "scD<mxvpuH";
      try { 
        CalendarFactory.modify(localDate0, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: scD<mxvpuH
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[0];
      try { 
        CalendarFactory.modify("", stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // not in a predefined date / time format ()
         //
         verifyException("com.obdobion.calendar.helper.TemporalHelperAbstractImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.modify((String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "++Jwg\"";
      try { 
        CalendarFactory.modify(1321L, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // missing qty in ++Jwg\"
         //
         verifyException("com.obdobion.calendar.DateAdjustment", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        CalendarFactory.modify(2208L, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asJSON((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.convert((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asJSON((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asFormula((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asDateLong((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.convert((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2721, 5, 2721, 2721, (-1741));
      LocalDateTime localDateTime0 = CalendarFactory.noTime((Date) mockDate0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "`FnJ}4T.t%+^a42Z";
      try { 
        CalendarFactory.modify(localDateTime0, stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // invalid direction: `FnJ}4T.t%+^a42Z
         //
         verifyException("com.obdobion.calendar.AdjustmentDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asDate((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocalTime localTime0 = MockLocalTime.now();
      LocalDateTime localDateTime0 = CalendarFactory.modify(localTime0, (String[]) null);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        CalendarFactory.modify(localDate0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ICalendarFactory iCalendarFactory0 = CalendarFactory.getInstance();
      ICalendarFactory iCalendarFactory1 = CalendarFactory.reset(iCalendarFactory0);
      assertSame(iCalendarFactory1, iCalendarFactory0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LocalDateTime localDateTime0 = CalendarFactory.modify("1970-01-01T00:00:00.000Z", stringArray0);
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.noTime((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LocalDateTime localDateTime0 = CalendarFactory.at((-40L));
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asFormula((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = CalendarFactory.isInDebug();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.modify((Date) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-1441), (-1441), (-992), 2926);
      String string0 = CalendarFactory.asJSON((Calendar) mockGregorianCalendar0);
      assertEquals("1970-01-01T00:00:00.000Z", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        CalendarFactory.modify((Calendar) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.convert((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // date
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        CalendarFactory.now(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      Instant instant0 = MockInstant.now(clock0);
      Date date0 = Date.from(instant0);
      CalendarFactory.asFormula(date0);
      ICalendarFactory iCalendarFactory0 = CalendarFactory.getInstance();
      assertNotNull(iCalendarFactory0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.convert((LocalTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // time
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LocalDateTime localDateTime0 = CalendarFactory.modify((LocalDateTime) null, stringArray0);
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asCalendar((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.noTime((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalendarFactory.asFormula((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.obdobion.calendar.CalendarFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LocalDateTime localDateTime0 = CalendarFactory.convert(2415L);
      CalendarFactory.setBusinessDate(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CalendarFactory calendarFactory0 = new CalendarFactory();
      assertFalse(calendarFactory0.isInDebug());
  }
}
