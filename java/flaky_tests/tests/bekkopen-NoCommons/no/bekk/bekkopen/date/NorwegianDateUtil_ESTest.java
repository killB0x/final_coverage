/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 20:31:45 GMT 2022
 */

package no.bekk.bekkopen.date;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import no.bekk.bekkopen.date.NorwegianDateUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NorwegianDateUtil_ESTest extends NorwegianDateUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate(25, 666, 275, 25, 25, 25);
      NorwegianDateUtil.addWorkingDaysToDate(mockDate0, 1088);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      NorwegianDateUtil.isWorkingDay(mockDate0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3183, 3183, 300);
      NorwegianDateUtil.isHoliday(mockDate0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        NorwegianDateUtil.isWorkingDay((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        NorwegianDateUtil.isHoliday((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        NorwegianDateUtil.addWorkingDaysToDate((Date) null, 1873);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2558, 2558, 2558);
      // Undeclared exception!
      NorwegianDateUtil.addWorkingDaysToDate(mockDate0, 2558);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Date date0 = NorwegianDateUtil.addWorkingDaysToDate(mockDate0, (-2175));
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date[] dateArray0 = NorwegianDateUtil.getHolidays((-3089));
      assertEquals(8, dateArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      boolean boolean0 = NorwegianDateUtil.isHoliday(mockDate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NorwegianDateUtil norwegianDateUtil0 = new NorwegianDateUtil();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      boolean boolean0 = NorwegianDateUtil.isWorkingDay(mockDate0);
      assertFalse(boolean0);
  }
}
