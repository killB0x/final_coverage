/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 20:50:53 GMT 2022
 */

package no.bekk.bekkopen.person;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import no.bekk.bekkopen.person.KJONN;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KJONN_ESTest extends KJONN_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KJONN[] kJONNArray0 = KJONN.values();
      assertEquals(3, kJONNArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KJONN kJONN0 = KJONN.KVINNE;
      boolean boolean0 = KJONN.erKvinne(kJONN0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KJONN kJONN0 = KJONN.valueOf("BEGGE");
      boolean boolean0 = KJONN.erBegge(kJONN0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KJONN kJONN0 = KJONN.MANN;
      boolean boolean0 = KJONN.erBegge(kJONN0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        KJONN.erKvinne((KJONN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.KJONN", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        KJONN.byttKjonn((KJONN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.KJONN", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KJONN kJONN0 = KJONN.KVINNE;
      KJONN kJONN1 = KJONN.byttKjonn(kJONN0);
      assertEquals(KJONN.MANN, kJONN1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      KJONN kJONN0 = KJONN.valueOf("BEGGE");
      KJONN kJONN1 = KJONN.byttKjonn(kJONN0);
      assertEquals(KJONN.KVINNE, kJONN1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      KJONN kJONN0 = KJONN.MANN;
      boolean boolean0 = KJONN.erKvinne(kJONN0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        KJONN.erBegge((KJONN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.KJONN", e);
      }
  }
}
