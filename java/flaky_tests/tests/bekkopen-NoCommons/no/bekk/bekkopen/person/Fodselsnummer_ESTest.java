/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 20:27:19 GMT 2022
 */

package no.bekk.bekkopen.person;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import no.bekk.bekkopen.person.Fodselsnummer;
import no.bekk.bekkopen.person.KJONN;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Fodselsnummer_ESTest extends Fodselsnummer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = Fodselsnummer.parseDNumber("9IRxc4q8IjnrT");
      assertEquals("9IRxc4q8IjnrT", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer(")E{515500j},>4bl0Q");
      String string0 = fodselsnummer0.getCentury();
      assertNotNull(string0);
      assertEquals("500", fodselsnummer0.getIndividnummer());
      assertEquals("20", string0);
      assertEquals("15", fodselsnummer0.get2DigitBirthYear());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("5E{515500jh~,46bl0N");
      String string0 = fodselsnummer0.getCentury();
      assertNotNull(string0);
      assertEquals("15", fodselsnummer0.get2DigitBirthYear());
      assertEquals("18", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("AAeb_YU%o_:Lb' ");
      String string0 = fodselsnummer0.toString();
      assertEquals("AAeb_YU%o_:Lb' ", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      String string0 = fodselsnummer0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = Fodselsnummer.parseSynthenticNumber("$VALUES");
      assertEquals("$VALUES", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = Fodselsnummer.isSynthetic("UV8{||r$%emI");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Fodselsnummer.isSynthetic("aEeGE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = Fodselsnummer.isDNumber("6=");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("}r!N1?l56R%,+Aq");
      String string0 = fodselsnummer0.getPersonnummer();
      assertEquals("l56R%,+Aq", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("G!7kW");
      String string0 = fodselsnummer0.getPersonnummer();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("no.bekk.bekkopen.person.KJONN");
      String string0 = fodselsnummer0.getIndividnummer();
      assertEquals("k.b", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("vF7X({-00");
      int int0 = fodselsnummer0.getGenderDigit();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("2@]~X8[_UF:.4B");
      int int0 = fodselsnummer0.getGenderDigit();
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("%3Kx\"v-1&[R");
      int int0 = fodselsnummer0.getGenderDigit();
      assertEquals((-10), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("jb`?*zF%g$0Q");
      int int0 = fodselsnummer0.getChecksumDigit2();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("5E{515500jh~,46bl0N");
      int int0 = fodselsnummer0.getChecksumDigit2();
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("q9SNjWn,u0L/");
      int int0 = fodselsnummer0.getChecksumDigit1();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("924mg{<E/C");
      int int0 = fodselsnummer0.getChecksumDigit1();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.parseSynthenticNumber("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.parseSynthenticNumber((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.parseDNumber("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.parseDNumber((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.isSynthetic("\n");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.isSynthetic((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.isMale();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.isMale();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.common.StringNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("aak1L7");
      // Undeclared exception!
      try { 
        fodselsnummer0.isFemale();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.isFemale();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.common.StringNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.isDNumber("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        Fodselsnummer.isDNumber((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getPersonnummer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("V");
      // Undeclared exception!
      try { 
        fodselsnummer0.getMonth();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getMonth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.getKjonn();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getKjonn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.common.StringNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getIndividnummer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("&*i");
      // Undeclared exception!
      try { 
        fodselsnummer0.getGenderDigit();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("19");
      // Undeclared exception!
      try { 
        fodselsnummer0.getDayInMonth();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getDayInMonth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("4");
      // Undeclared exception!
      try { 
        fodselsnummer0.getDateOfBirth();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getDateOfBirth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.getDateAndMonth();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getDateAndMonth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.getChecksumDigit2();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getChecksumDigit2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.common.StringNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("Z?U");
      // Undeclared exception!
      try { 
        fodselsnummer0.getChecksumDigit1();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getChecksumDigit1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.common.StringNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.getCentury();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("U##=B{2Wv42`.M9\"A");
      // Undeclared exception!
      try { 
        fodselsnummer0.getCentury();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"2Wv\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getCentury();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.getBirthYear();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer(")M>ig2-ubk<{n{dH");
      // Undeclared exception!
      try { 
        fodselsnummer0.getBirthYear();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"2-u\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getBirthYear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.get2DigitBirthYear();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.get2DigitBirthYear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.person.Fodselsnummer", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("-)6=oH5}<c8yP5lq");
      boolean boolean0 = fodselsnummer0.isFemale();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("ezBhn'(.?+}kzsRS");
      boolean boolean0 = fodselsnummer0.isFemale();
      assertEquals(15, fodselsnummer0.getGenderDigit());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("D/9jXML9#{&");
      boolean boolean0 = fodselsnummer0.isMale();
      assertTrue(boolean0);
      assertEquals((-13), fodselsnummer0.getGenderDigit());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("18");
      // Undeclared exception!
      try { 
        fodselsnummer0.getIndividnummer();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("-)6=oH5}c8yP5lq");
      String string0 = fodselsnummer0.get2DigitBirthYear();
      assertEquals("oH", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("5xt237716mTX=BbR='g");
      String string0 = fodselsnummer0.getDateOfBirth();
      assertEquals("1xt23", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = Fodselsnummer.parseDNumber("8!@");
      assertEquals("8!@", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      boolean boolean0 = Fodselsnummer.isDNumber("3X");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("vF7X({-00");
      String string0 = fodselsnummer0.getMonth();
      assertEquals("7X", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("d(#71d.2$=L=.|Tn`");
      KJONN kJONN0 = fodselsnummer0.getKjonn();
      assertEquals(KJONN.KVINNE, kJONN0);
      assertEquals((-12), fodselsnummer0.getGenderDigit());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("+=nCr7]Zy2H.");
      KJONN kJONN0 = fodselsnummer0.getKjonn();
      assertEquals(KJONN.MANN, kJONN0);
      assertEquals(73, fodselsnummer0.getGenderDigit());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer(")E{515500j},>4bl0Q");
      boolean boolean0 = fodselsnummer0.isMale();
      assertEquals(0, fodselsnummer0.getGenderDigit());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("_Mt/57516XsBbz.g");
      String string0 = fodselsnummer0.getBirthYear();
      assertEquals("1857", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("_Mt/552716XsBxn@#Xpg");
      String string0 = fodselsnummer0.getCentury();
      assertEquals("55", fodselsnummer0.get2DigitBirthYear());
      assertEquals("271", fodselsnummer0.getIndividnummer());
      assertNotNull(string0);
      assertEquals("19", string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("5E{515080jh~46bl0N");
      String string0 = fodselsnummer0.getCentury();
      assertEquals("15", fodselsnummer0.get2DigitBirthYear());
      assertEquals("080", fodselsnummer0.getIndividnummer());
      assertEquals("19", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("5?{535570f46sb07");
      String string0 = fodselsnummer0.getCentury();
      assertEquals("35", fodselsnummer0.get2DigitBirthYear());
      assertNotNull(string0);
      assertEquals("18", string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("5E{155080j},6bl0N");
      String string0 = fodselsnummer0.getBirthYear();
      assertEquals("080", fodselsnummer0.getIndividnummer());
      assertEquals("1955", string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("5xt237716mTX=BbR='g");
      String string0 = fodselsnummer0.getCentury();
      assertNotNull(string0);
      assertEquals("23", fodselsnummer0.get2DigitBirthYear());
      assertEquals("20", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("_Mt/527516XsBzsg");
      String string0 = fodselsnummer0.getDayInMonth();
      assertEquals("_M", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("eb8dG");
      String string0 = fodselsnummer0.getDateAndMonth();
      assertEquals("eb0d", string0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("-)6=oH5}c8yP5lq");
      int int0 = fodselsnummer0.getChecksumDigit1();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      // Undeclared exception!
      try { 
        fodselsnummer0.getGenderDigit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.common.StringNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("D/9e-UeL9#{&O");
      String string0 = fodselsnummer0.getMonth();
      assertEquals("1e", string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("D/9jqXUML9#{&O");
      int int0 = fodselsnummer0.getChecksumDigit2();
      assertEquals((-13), int0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("");
      // Undeclared exception!
      try { 
        fodselsnummer0.getPersonnummer();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("_MtB52710XsBxn@#uXg");
      String string0 = fodselsnummer0.getBirthYear();
      assertEquals("710", fodselsnummer0.getIndividnummer());
      assertEquals("null52", string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer((String) null);
      String string0 = fodselsnummer0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Fodselsnummer fodselsnummer0 = new Fodselsnummer("_Mt/527516XsBzsg");
      String string0 = fodselsnummer0.getCentury();
      assertEquals("751", fodselsnummer0.getIndividnummer());
      assertNull(string0);
      assertEquals("52", fodselsnummer0.get2DigitBirthYear());
  }
}
