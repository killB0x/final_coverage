/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 20:37:29 GMT 2022
 */

package no.bekk.bekkopen.mail.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import no.bekk.bekkopen.mail.model.Poststed;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Poststed_ESTest extends Poststed_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Poststed poststed0 = new Poststed("a1H");
      poststed0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Poststed poststed0 = new Poststed("4CFLYe5&}p^G");
      String string0 = poststed0.toString();
      assertEquals("4CFLYE5&}P^G", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Poststed poststed0 = new Poststed("Cu6y^R4a{");
      String string0 = poststed0.getValue();
      assertEquals("CU6Y^R4A{", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Poststed poststed0 = new Poststed("");
      Poststed poststed1 = new Poststed("'Nl");
      boolean boolean0 = poststed0.equals(poststed1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Poststed poststed0 = new Poststed("");
      Poststed poststed1 = new Poststed("");
      boolean boolean0 = poststed0.equals(poststed1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Poststed poststed0 = new Poststed("");
      boolean boolean0 = poststed0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Poststed poststed0 = new Poststed("");
      boolean boolean0 = poststed0.equals(poststed0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Poststed poststed0 = new Poststed("");
      boolean boolean0 = poststed0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Poststed poststed0 = null;
      try {
        poststed0 = new Poststed((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.bekk.bekkopen.mail.model.Poststed", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Poststed poststed0 = new Poststed("");
      String string0 = poststed0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Poststed poststed0 = new Poststed("");
      String string0 = poststed0.getValue();
      assertEquals("", string0);
  }
}
