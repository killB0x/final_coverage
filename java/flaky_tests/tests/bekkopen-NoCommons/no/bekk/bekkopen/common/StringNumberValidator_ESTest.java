/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 20:41:48 GMT 2022
 */

package no.bekk.bekkopen.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import no.bekk.bekkopen.common.StringNumberValidator;
import no.bekk.bekkopen.mail.MailValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringNumberValidator_ESTest extends StringNumberValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean boolean0 = MailValidator.isValidKommunenummer("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringNumberValidator.validateAllDigits("5");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        MailValidator.getPostInfoForPostnummer("bE. ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only digits are allowed : bE. 
         //
         verifyException("no.bekk.bekkopen.common.StringNumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringNumberValidator.validateLengthAndAllDigits("", 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only digits are allowed : 
         //
         verifyException("no.bekk.bekkopen.common.StringNumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringNumberValidator.validateAllDigits((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only digits are allowed : null
         //
         verifyException("no.bekk.bekkopen.common.StringNumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringNumberValidator.validateLengthAndAllDigits("9", (-2610));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only digits are allowed : 9
         //
         verifyException("no.bekk.bekkopen.common.StringNumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringNumberValidator.validateLengthAndAllDigits("9", 1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        MailValidator.getPostInfoForPostnummer((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only digits are allowed : null
         //
         verifyException("no.bekk.bekkopen.common.StringNumberValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MailValidator mailValidator0 = new MailValidator();
      assertEquals(0, mailValidator0.getAntallPostnummer());
  }
}
