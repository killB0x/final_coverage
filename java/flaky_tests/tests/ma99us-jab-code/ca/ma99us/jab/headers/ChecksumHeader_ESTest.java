/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 17:15:32 GMT 2022
 */

package ca.ma99us.jab.headers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ca.ma99us.jab.headers.ChecksumHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChecksumHeader_ESTest extends ChecksumHeader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChecksumHeader<ChecksumHeader<Integer>> checksumHeader0 = new ChecksumHeader<ChecksumHeader<Integer>>();
      Long long0 = new Long(0L);
      checksumHeader0.setChecksum(long0);
      Long long1 = checksumHeader0.getChecksum();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      Long long0 = new Long(1693L);
      checksumHeader0.setChecksum(long0);
      Long long1 = checksumHeader0.getChecksum();
      assertEquals(1693L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long((-1072L));
      ChecksumHeader<Integer> checksumHeader0 = new ChecksumHeader<Integer>();
      checksumHeader0.setChecksum(long0);
      Long long1 = checksumHeader0.getChecksum();
      assertEquals((-1072L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      boolean boolean0 = checksumHeader0.canEqual(checksumHeader0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      Object object0 = new Object();
      boolean boolean0 = checksumHeader0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      // Undeclared exception!
      try { 
        checksumHeader0.validate(checksumHeader0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/databind/ObjectMapper
         //
         verifyException("ca.ma99us.jab.JabParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChecksumHeader<ChecksumHeader<Integer>> checksumHeader0 = new ChecksumHeader<ChecksumHeader<Integer>>();
      Long long0 = checksumHeader0.getChecksum();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      Long long0 = new Long((-1725L));
      checksumHeader0.setChecksum(long0);
      ChecksumHeader<Integer> checksumHeader1 = new ChecksumHeader<Integer>();
      checksumHeader1.setChecksum(long0);
      boolean boolean0 = checksumHeader0.equals(checksumHeader1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      ChecksumHeader<Object> checksumHeader1 = new ChecksumHeader<Object>();
      assertTrue(checksumHeader1.equals((Object)checksumHeader0));
      
      Long long0 = new Long(0L);
      checksumHeader1.setChecksum(long0);
      boolean boolean0 = checksumHeader0.equals(checksumHeader1);
      assertFalse(checksumHeader1.equals((Object)checksumHeader0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      boolean boolean0 = checksumHeader0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      boolean boolean0 = checksumHeader0.equals(checksumHeader0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChecksumHeader<ChecksumHeader<Object>> checksumHeader0 = new ChecksumHeader<ChecksumHeader<Object>>();
      checksumHeader0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChecksumHeader<ChecksumHeader<Object>> checksumHeader0 = new ChecksumHeader<ChecksumHeader<Object>>();
      Long long0 = new Long((-1072L));
      checksumHeader0.setChecksum(long0);
      checksumHeader0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      Long long0 = new Long((-1725L));
      // Undeclared exception!
      try { 
        checksumHeader0.populate(long0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/databind/ObjectMapper
         //
         verifyException("ca.ma99us.jab.JabParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      Long long0 = new Long((-1725L));
      checksumHeader0.setChecksum(long0);
      ChecksumHeader<Integer> checksumHeader1 = new ChecksumHeader<Integer>();
      boolean boolean0 = checksumHeader0.equals(checksumHeader1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      String string0 = checksumHeader0.toString();
      assertEquals("ChecksumHeader(checksum=null)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ChecksumHeader<Object> checksumHeader0 = new ChecksumHeader<Object>();
      ChecksumHeader<Integer> checksumHeader1 = new ChecksumHeader<Integer>();
      boolean boolean0 = checksumHeader0.equals(checksumHeader1);
      assertTrue(boolean0);
  }
}
