/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 17:28:10 GMT 2022
 */

package ca.ma99us.jab;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ca.ma99us.jab.JabToString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JabToString_ESTest extends JabToString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JabToString jabToString0 = JabToString.getGlobalToString();
      byte[] byteArray0 = jabToString0.stringToBytes("I38AAAAAAAAA");
      assertArrayEquals(new byte[] {(byte)35, (byte)127, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JabToString.setGlobalToString((JabToString) null);
      JabToString jabToString0 = JabToString.getGlobalToString();
      assertNull(jabToString0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JabToString jabToString0 = JabToString.getGlobalToString();
      byte[] byteArray0 = new byte[9];
      String string0 = jabToString0.bytesToString(byteArray0);
      assertEquals("AAAAAAAAAAAA", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JabToString jabToString0 = JabToString.getGlobalToString();
      byte[] byteArray0 = new byte[0];
      String string0 = jabToString0.bytesToString(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JabToString jabToString0 = new JabToString();
      // Undeclared exception!
      try { 
        jabToString0.stringToBytes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JabToString jabToString0 = new JabToString();
      // Undeclared exception!
      try { 
        jabToString0.stringToBytes("E>`'qswW2{UDdUw L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal base64 character 3e
         //
         verifyException("java.util.Base64$Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JabToString jabToString0 = JabToString.getGlobalToString();
      byte[] byteArray0 = jabToString0.stringToBytes("");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JabToString jabToString0 = JabToString.getGlobalToString();
      // Undeclared exception!
      try { 
        jabToString0.bytesToString((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Base64$Encoder", e);
      }
  }
}
