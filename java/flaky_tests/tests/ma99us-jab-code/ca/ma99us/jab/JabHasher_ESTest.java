/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 17:23:03 GMT 2022
 */

package ca.ma99us.jab;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ca.ma99us.jab.JabHasher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JabHasher_ESTest extends JabHasher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JabHasher.setGlobalHasher((JabHasher) null);
      JabHasher jabHasher0 = JabHasher.getGlobalHasher();
      assertNull(jabHasher0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JabHasher jabHasher0 = JabHasher.getGlobalHasher();
      // Undeclared exception!
      try { 
        jabHasher0.wrapBytes((byte[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ca.ma99us.jab.JabHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JabHasher jabHasher0 = new JabHasher();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        jabHasher0.wrapBytes(byteArray0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("ca.ma99us.jab.JabHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JabHasher jabHasher0 = JabHasher.getGlobalHasher();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        jabHasher0.wrapBytes(byteArray0, 1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("ca.ma99us.jab.JabHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JabHasher jabHasher0 = JabHasher.getGlobalHasher();
      // Undeclared exception!
      try { 
        jabHasher0.hash((byte[][]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Hash Error
         //
         verifyException("ca.ma99us.jab.JabHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JabHasher jabHasher0 = new JabHasher();
      // Undeclared exception!
      try { 
        jabHasher0.hash((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Hash Error
         //
         verifyException("ca.ma99us.jab.JabHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JabHasher jabHasher0 = new JabHasher();
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = jabHasher0.wrapBytes(byteArray0, (byte)71);
      assertEquals(71, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JabHasher jabHasher0 = new JabHasher();
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = jabHasher0.wrapBytes(byteArray0, (byte)0);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JabHasher jabHasher0 = new JabHasher();
      byte[] byteArray0 = new byte[2];
      long long0 = jabHasher0.hash(byteArray0);
      assertEquals(2348756608171316L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JabHasher jabHasher0 = new JabHasher();
      long long0 = jabHasher0.hash("");
      assertEquals(4248009926078979L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JabHasher jabHasher0 = new JabHasher();
      byte[][] byteArray0 = new byte[1][3];
      long long0 = jabHasher0.hash(byteArray0);
      assertEquals(3374014821600618L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JabHasher jabHasher0 = JabHasher.getGlobalHasher();
      // Undeclared exception!
      try { 
        jabHasher0.hash((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Hash Error; data can not be null
         //
         verifyException("ca.ma99us.jab.JabHasher", e);
      }
  }
}
