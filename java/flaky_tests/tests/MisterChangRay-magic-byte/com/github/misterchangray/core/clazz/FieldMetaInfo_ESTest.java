/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:39:22 GMT 2022
 */

package com.github.misterchangray.core.clazz;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.misterchangray.core.annotation.MagicField;
import com.github.misterchangray.core.clazz.ClassMetaInfo;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.enums.TypeEnum;
import com.github.misterchangray.core.intf.MReader;
import com.github.misterchangray.core.intf.MWriter;
import com.github.misterchangray.core.intf.impl.LongWriter;
import com.github.misterchangray.core.intf.impl.ObjectReader;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldMetaInfo_ESTest extends FieldMetaInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      FieldMetaInfo fieldMetaInfo1 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamicRef(fieldMetaInfo1);
      assertEquals(0, fieldMetaInfo1.getSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      FieldMetaInfo fieldMetaInfo1 = new FieldMetaInfo();
      fieldMetaInfo0.setGenericsField(fieldMetaInfo1);
      assertEquals(0, fieldMetaInfo0.getSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamicSizeOf((-1432));
      boolean boolean0 = fieldMetaInfo0.isDynamicSizeOf();
      assertEquals((-1432), fieldMetaInfo0.getDynamicSizeOf());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setCalcCheckCode(true);
      boolean boolean0 = fieldMetaInfo0.isCalcCheckCode();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      TypeEnum typeEnum0 = TypeEnum.DOUBLE;
      fieldMetaInfo0.setType(typeEnum0);
      TypeEnum typeEnum1 = fieldMetaInfo0.getType();
      assertEquals(8, typeEnum1.getBytes());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setSuffixBytes(1934);
      int int0 = fieldMetaInfo0.getSuffixBytes();
      assertEquals(1934, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setSuffixBytes((-902));
      int int0 = fieldMetaInfo0.getSuffixBytes();
      assertEquals((-902), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setSize(1012);
      int int0 = fieldMetaInfo0.getSize();
      assertEquals(1012, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setSize((-1384));
      int int0 = fieldMetaInfo0.getSize();
      assertEquals((-1384), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      ObjectReader objectReader0 = new ObjectReader(fieldMetaInfo0);
      fieldMetaInfo0.setReader(objectReader0);
      MReader mReader0 = fieldMetaInfo0.getReader();
      assertSame(mReader0, objectReader0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      ClassMetaInfo classMetaInfo1 = fieldMetaInfo0.getOwnerClazz();
      assertFalse(classMetaInfo1.isStrict());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Integer> class0 = Integer.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes(173);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      ClassMetaInfo classMetaInfo1 = fieldMetaInfo0.getOwnerClazz();
      assertFalse(classMetaInfo1.isDynamic());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Integer> class0 = Integer.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes((-785));
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      ClassMetaInfo classMetaInfo1 = fieldMetaInfo0.getOwnerClazz();
      assertNull(classMetaInfo1.getFullName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setOrderId(1536);
      int int0 = fieldMetaInfo0.getOrderId();
      assertEquals(1536, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setOrderId((-325));
      int int0 = fieldMetaInfo0.getOrderId();
      assertEquals((-325), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setGenericsField(fieldMetaInfo0);
      fieldMetaInfo0.setSuffixBytes((-3070));
      fieldMetaInfo0.getGenericsField();
      assertEquals((-3070), fieldMetaInfo0.getSuffixBytes());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setGenericsField(fieldMetaInfo0);
      fieldMetaInfo0.setDynamicSizeOf((-749));
      fieldMetaInfo0.getGenericsField();
      assertFalse(fieldMetaInfo0.isDynamicSizeOf());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setFullName(":");
      String string0 = fieldMetaInfo0.getFullName();
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setElementBytes(6);
      int int0 = fieldMetaInfo0.getElementBytes();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setElementBytes((-347));
      int int0 = fieldMetaInfo0.getElementBytes();
      assertEquals((-347), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamicSizeOf(1);
      int int0 = fieldMetaInfo0.getDynamicSizeOf();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamicSizeOf((-1));
      int int0 = fieldMetaInfo0.getDynamicSizeOf();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamicSizeOf((-1432));
      fieldMetaInfo0.setDynamicRef(fieldMetaInfo0);
      fieldMetaInfo0.getDynamicRef();
      assertEquals((-1432), fieldMetaInfo0.getDynamicSizeOf());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDefaultVal(4648);
      int int0 = fieldMetaInfo0.getDefaultVal();
      assertEquals(4648, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDefaultVal((-1432));
      int int0 = fieldMetaInfo0.getDefaultVal();
      assertEquals((-1432), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<FieldMetaInfo> class0 = FieldMetaInfo.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setClazzMetaInfo(classMetaInfo0);
      ClassMetaInfo classMetaInfo1 = fieldMetaInfo0.getClazzMetaInfo();
      assertEquals(0, classMetaInfo1.getElementBytes());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Integer> class0 = Integer.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes(156);
      fieldMetaInfo0.setClazzMetaInfo(classMetaInfo0);
      ClassMetaInfo classMetaInfo1 = fieldMetaInfo0.getClazzMetaInfo();
      assertEquals(156, classMetaInfo1.getElementBytes());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      fieldMetaInfo0.setClazz(class0);
      Class<?> class1 = fieldMetaInfo0.getClazz();
      assertEquals("class java.lang.Object", class1.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Annotation> class0 = Annotation.class;
      fieldMetaInfo0.setClazz(class0);
      Class<?> class1 = fieldMetaInfo0.getClazz();
      assertTrue(class1.isInterface());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setCharset("9Xry<#p~f");
      String string0 = fieldMetaInfo0.getCharset();
      assertEquals("9Xry<#p~f", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      boolean boolean0 = fieldMetaInfo0.isDynamicSizeOf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamicSizeOf((-1));
      boolean boolean0 = fieldMetaInfo0.isDynamicSizeOf();
      assertEquals((-1), fieldMetaInfo0.getDynamicSizeOf());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      MReader mReader0 = fieldMetaInfo0.getReader();
      assertNull(mReader0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      String string0 = fieldMetaInfo0.getFullName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Field field0 = fieldMetaInfo0.getField();
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamic(true);
      boolean boolean0 = fieldMetaInfo0.isDynamic();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      boolean boolean0 = fieldMetaInfo0.isDynamicSize();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      FieldMetaInfo fieldMetaInfo1 = fieldMetaInfo0.getDynamicRef();
      assertNull(fieldMetaInfo1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setCharset("");
      String string0 = fieldMetaInfo0.getCharset();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      int int0 = fieldMetaInfo0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      FieldMetaInfo fieldMetaInfo1 = fieldMetaInfo0.getGenericsField();
      assertNull(fieldMetaInfo1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      TypeEnum typeEnum0 = TypeEnum.LIST;
      fieldMetaInfo0.setType(typeEnum0);
      TypeEnum typeEnum1 = fieldMetaInfo0.getType();
      assertEquals((-1), typeEnum1.getBytes());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setCalcLength(true);
      boolean boolean0 = fieldMetaInfo0.isCalcLength();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamicSize(true);
      boolean boolean0 = fieldMetaInfo0.isDynamicSize();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<?> class0 = fieldMetaInfo0.getClazz();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setFullName("");
      String string0 = fieldMetaInfo0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      ClassMetaInfo classMetaInfo0 = fieldMetaInfo0.getClazzMetaInfo();
      assertNull(classMetaInfo0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setMagicField((MagicField) null);
      assertNull(fieldMetaInfo0.getFullName());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      int int0 = fieldMetaInfo0.getElementBytes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      int int0 = fieldMetaInfo0.getOrderId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      boolean boolean0 = fieldMetaInfo0.isDynamic();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setField((Field) null);
      assertFalse(fieldMetaInfo0.isDynamic());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      MWriter mWriter0 = fieldMetaInfo0.getWriter();
      assertNull(mWriter0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setSize((-1));
      fieldMetaInfo0.setDynamicRef(fieldMetaInfo0);
      fieldMetaInfo0.getDynamicRef();
      assertEquals((-1), fieldMetaInfo0.getSize());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      boolean boolean0 = fieldMetaInfo0.isCalcCheckCode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.getType();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      boolean boolean0 = fieldMetaInfo0.isCalcLength();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      ClassMetaInfo classMetaInfo0 = fieldMetaInfo0.getOwnerClazz();
      assertNull(classMetaInfo0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      LongWriter longWriter0 = new LongWriter(fieldMetaInfo0);
      fieldMetaInfo0.setWriter(longWriter0);
      MWriter mWriter0 = fieldMetaInfo0.getWriter();
      assertSame(mWriter0, longWriter0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      String string0 = fieldMetaInfo0.getCharset();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      int int0 = fieldMetaInfo0.getDefaultVal();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      int int0 = fieldMetaInfo0.getDynamicSizeOf();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      int int0 = fieldMetaInfo0.getSuffixBytes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      MagicField magicField0 = fieldMetaInfo0.getMagicField();
      assertNull(magicField0);
  }
}
