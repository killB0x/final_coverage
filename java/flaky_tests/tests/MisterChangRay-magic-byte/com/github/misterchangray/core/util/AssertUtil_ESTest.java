/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:35:01 GMT 2022
 */

package com.github.misterchangray.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.ClassMetaInfo;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.util.AssertUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AssertUtil_ESTest extends AssertUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtil.throwIFOOM(1481L, "com.github.misterchangray.core.exception.MagicByteException");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // detected OutOfMemory, no have enough free space allocate! at: com.github.misterchangray.core.exception.MagicByteException
         //
         verifyException("com.github.misterchangray.core.util.AssertUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<FieldMetaInfo> class0 = FieldMetaInfo.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      // Undeclared exception!
      try { 
        AssertUtil.throwIllegalAccessException(classMetaInfo0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // class must be declared public; inner class is not supported; at: null
         //
         verifyException("com.github.misterchangray.core.util.AssertUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AssertUtil.throwIFOOM(697L, "P9Jns:rm+<");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtil.throwIFOOM(1024L, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // detected OutOfMemory, no have enough free space allocate! at: null
         //
         verifyException("com.github.misterchangray.core.util.AssertUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        AssertUtil.throwIllegalAccessException((ClassMetaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.util.AssertUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AssertUtil assertUtil0 = new AssertUtil();
  }
}
