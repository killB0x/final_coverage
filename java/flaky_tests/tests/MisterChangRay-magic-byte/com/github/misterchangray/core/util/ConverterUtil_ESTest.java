/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:17:20 GMT 2022
 */

package com.github.misterchangray.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.enums.TypeEnum;
import com.github.misterchangray.core.util.ConverterUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConverterUtil_ESTest extends ConverterUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ConverterUtil.intToHexString(0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = ConverterUtil.hexStringToByte("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = ConverterUtil.byteToUnsigned((byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = ConverterUtil.byteToHexString(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConverterUtil.toTargetObject((TypeEnum) null, 792L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.util.ConverterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.BOOLEAN;
      // Undeclared exception!
      try { 
        ConverterUtil.toNumber((TypeEnum) null, (Object) typeEnum0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.util.ConverterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConverterUtil.toNumber((TypeEnum) null, 6663L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.util.ConverterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.DOUBLE;
      Object object0 = ConverterUtil.toTargetObject(typeEnum0, 1424L);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.LONG;
      Object object0 = ConverterUtil.toTargetObject(typeEnum0, 3);
      assertEquals(3L, object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.BYTE;
      Object object0 = ConverterUtil.toTargetObject(typeEnum0, 0L);
      assertEquals((byte)0, object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.LONG;
      long long0 = ConverterUtil.toNumber(typeEnum0, 634L);
      assertEquals(634L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.INT;
      long long0 = ConverterUtil.toNumber(typeEnum0, (-161L));
      assertEquals((-161L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.SHORT;
      long long0 = ConverterUtil.toNumber(typeEnum0, (-1L));
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.BYTE;
      long long0 = ConverterUtil.toNumber(typeEnum0, 2050L);
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.CHAR;
      long long0 = ConverterUtil.toNumber(typeEnum0, (long) 186);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.CHAR;
      long long0 = ConverterUtil.toNumber(typeEnum0, (Object) "");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.LONG;
      // Undeclared exception!
      try { 
        ConverterUtil.toNumber(typeEnum0, (Object) typeEnum0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.github.misterchangray.core.enums.TypeEnum cannot be cast to class java.lang.Long (com.github.misterchangray.core.enums.TypeEnum is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @446e2aa6; java.lang.Long is in module java.base of loader 'bootstrap')
         //
         verifyException("com.github.misterchangray.core.util.ConverterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.INT;
      Object object0 = ConverterUtil.toTargetObject(typeEnum0, (byte)3);
      long long0 = ConverterUtil.toNumber(typeEnum0, object0);
      assertEquals(3L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.BYTE;
      // Undeclared exception!
      try { 
        ConverterUtil.toNumber(typeEnum0, (Object) "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.lang.Byte (java.lang.String and java.lang.Byte are in module java.base of loader 'bootstrap')
         //
         verifyException("com.github.misterchangray.core.util.ConverterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.LIST;
      long long0 = ConverterUtil.toNumber(typeEnum0, (Object) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.SHORT;
      Object object0 = ConverterUtil.toTargetObject(typeEnum0, (-1897L));
      assertEquals((short) (-1897), object0);
      
      long long0 = ConverterUtil.toNumber(typeEnum0, object0);
      assertEquals((-1897L), long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = ConverterUtil.byteToHexString((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = ConverterUtil.hexStringToByte("TY|k");
      assertArrayEquals(new byte[] {(byte) (-17), (byte) (-17)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = ConverterUtil.hexStringToByte((String) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = ConverterUtil.hexStringToByte("dkoUcT`4.P+.NSnJr");
      String string0 = ConverterUtil.byteToHexString(byteArray0);
      assertNotNull(string0);
      assertEquals("0DEFFCEF3FEFEFEFEF", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConverterUtil.intToHexString((byte) (-49));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert negative
         //
         verifyException("com.github.misterchangray.core.util.ConverterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = ConverterUtil.intToHexString(16);
      assertEquals("10", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConverterUtil converterUtil0 = new ConverterUtil();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = ConverterUtil.byteToUnsigned((byte) (-27));
      assertEquals(229, int0);
  }
}
