/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:51:47 GMT 2022
 */

package com.github.misterchangray.core.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.misterchangray.core.enums.TypeEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeEnum_ESTest extends TypeEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeEnum[] typeEnumArray0 = TypeEnum.values();
      assertEquals(12, typeEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.valueOf("CHAR");
      assertEquals(TypeEnum.CHAR, typeEnum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.OBJECT;
      Class<?> class0 = typeEnum0.getType();
      assertEquals(1, class0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.INT;
      Class<?> class0 = typeEnum0.getRawType();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.valueOf("LIST");
      int int0 = typeEnum0.getBytes();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.STRING;
      int int0 = typeEnum0.getBytes();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.STRING;
      Class<?> class0 = typeEnum0.getRawType();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TypeEnum typeEnum0 = TypeEnum.valueOf("LIST");
      Class<?> class0 = typeEnum0.getType();
      assertEquals("interface java.util.List", class0.toString());
  }
}
