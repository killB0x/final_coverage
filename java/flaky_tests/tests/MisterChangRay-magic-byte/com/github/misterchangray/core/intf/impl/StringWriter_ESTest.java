/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:32:36 GMT 2022
 */

package com.github.misterchangray.core.intf.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.intf.impl.StringWriter;
import com.github.misterchangray.core.util.DynamicByteBuffer;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringWriter_ESTest extends StringWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamic(true);
      fieldMetaInfo0.setDynamicRef(fieldMetaInfo0);
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        stringWriter0.writeToBuffer((DynamicByteBuffer) null, (Object) fieldMetaInfo0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        stringWriter0.writeToObject(object0, object1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      fieldMetaInfo0.setCharset("6Ee");
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        stringWriter0.writeToBuffer(dynamicByteBuffer0, (Object) fieldMetaInfo0, (Object) dynamicByteBuffer0);
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // 6Ee
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      fieldMetaInfo0.setCharset("6$e");
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        stringWriter0.writeToBuffer(dynamicByteBuffer0, (Object) fieldMetaInfo0, (Object) dynamicByteBuffer0);
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 6$e
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      fieldMetaInfo0.setSize((-1));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        stringWriter0.writeToBuffer((DynamicByteBuffer) null, object0, (Object) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("com.github.misterchangray.core.intf.impl.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        stringWriter0.writeToBuffer(dynamicByteBuffer0, object0, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null charset name
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        stringWriter0.writeToBuffer(dynamicByteBuffer0, (Object) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null charset name
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }
}
