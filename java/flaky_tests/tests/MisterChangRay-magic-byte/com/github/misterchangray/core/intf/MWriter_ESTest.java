/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:46:04 GMT 2022
 */

package com.github.misterchangray.core.intf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.intf.impl.CharWriter;
import com.github.misterchangray.core.intf.impl.CollectionWriter;
import com.github.misterchangray.core.intf.impl.ObjectWriter;
import com.github.misterchangray.core.intf.impl.ShortWriter;
import com.github.misterchangray.core.intf.impl.StringWriter;
import com.github.misterchangray.core.util.DynamicByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MWriter_ESTest extends MWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      CollectionWriter collectionWriter0 = new CollectionWriter(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        collectionWriter0.writeToObject(fieldMetaInfo0, fieldMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.CollectionWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Object object0 = new Object();
      ShortWriter shortWriter0 = new ShortWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        shortWriter0.writeToBuffer(dynamicByteBuffer0, object0, object0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Short (java.lang.Object and java.lang.Short are in module java.base of loader 'bootstrap')
         //
         verifyException("com.github.misterchangray.core.intf.impl.ShortWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      ObjectWriter objectWriter0 = new ObjectWriter(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        objectWriter0.writeToBuffer((DynamicByteBuffer) null, (Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.ObjectWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      StringWriter stringWriter0 = new StringWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        stringWriter0.writeToBuffer(dynamicByteBuffer0, (Object) fieldMetaInfo0, (Object) dynamicByteBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null charset name
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      CharWriter charWriter0 = new CharWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        charWriter0.writeToBuffer(dynamicByteBuffer0, (Object) dynamicByteBuffer0, (Object) fieldMetaInfo0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.github.misterchangray.core.util.DynamicByteBuffer cannot be cast to class java.lang.Character (com.github.misterchangray.core.util.DynamicByteBuffer is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @682baea8; java.lang.Character is in module java.base of loader 'bootstrap')
         //
         verifyException("com.github.misterchangray.core.intf.impl.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      CollectionWriter collectionWriter0 = new CollectionWriter(fieldMetaInfo0);
      collectionWriter0.writeToBuffer((DynamicByteBuffer) null, (Object) fieldMetaInfo0, (Object) fieldMetaInfo0, 0);
      assertEquals(0, fieldMetaInfo0.getOrderId());
  }
}
