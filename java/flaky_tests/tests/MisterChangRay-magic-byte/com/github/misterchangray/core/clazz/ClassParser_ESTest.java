/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:20:09 GMT 2022
 */

package com.github.misterchangray.core.clazz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.ClassMetaInfo;
import com.github.misterchangray.core.clazz.ClassParser;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassParser_ESTest extends ClassParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassParser classParser0 = ClassParser.getInstance();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setStrict(true);
      ClassMetaInfo classMetaInfo1 = classParser0.parse(classMetaInfo0);
      assertEquals(0, classMetaInfo1.getElementBytes());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassParser classParser0 = ClassParser.getInstance();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setDynamic(true);
      ClassMetaInfo classMetaInfo1 = classParser0.parse(classMetaInfo0);
      assertEquals(0, classMetaInfo1.getElementBytes());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassParser classParser0 = ClassParser.getInstance();
      Class<FieldMetaInfo> class0 = FieldMetaInfo.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes(719);
      classParser0.parse(classMetaInfo0);
      assertEquals(719, classMetaInfo0.getElementBytes());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<FieldMetaInfo> class0 = FieldMetaInfo.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes((-790));
      ClassParser classParser0 = ClassParser.getInstance();
      classParser0.parse(classMetaInfo0);
      assertEquals((-790), classMetaInfo0.getElementBytes());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassParser classParser0 = ClassParser.getInstance();
      // Undeclared exception!
      try { 
        classParser0.parse((ClassMetaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.clazz.ClassParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassParser classParser0 = new ClassParser();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassParser classParser0 = ClassParser.getInstance();
      ClassParser classParser1 = ClassParser.getInstance();
      assertSame(classParser1, classParser0);
  }
}
