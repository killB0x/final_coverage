/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:54:45 GMT 2022
 */

package com.github.misterchangray.core.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.misterchangray.core.enums.ByteOrder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteOrder_ESTest extends ByteOrder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteOrder[] byteOrderArray0 = ByteOrder.values();
      assertEquals(2, byteOrderArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.valueOf("BIG_ENDIAN");
      assertEquals(ByteOrder.BIG_ENDIAN, byteOrder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      java.nio.ByteOrder byteOrder1 = byteOrder0.getBytes();
      java.nio.ByteOrder.nativeOrder();
      byteOrder0.setBytes(byteOrder1);
      byteOrder0.setBytes(byteOrder1);
      java.nio.ByteOrder byteOrder2 = java.nio.ByteOrder.nativeOrder();
      java.nio.ByteOrder byteOrder3 = java.nio.ByteOrder.nativeOrder();
      byteOrder0.setBytes(byteOrder2);
      assertSame(byteOrder2, byteOrder3);
  }
}
