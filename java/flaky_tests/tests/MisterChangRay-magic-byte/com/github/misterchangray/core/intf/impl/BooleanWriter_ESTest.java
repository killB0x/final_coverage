/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:33:59 GMT 2022
 */

package com.github.misterchangray.core.intf.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.ClassMetaInfo;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.intf.impl.BooleanWriter;
import com.github.misterchangray.core.util.DynamicByteBuffer;
import java.nio.BufferOverflowException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BooleanWriter_ESTest extends BooleanWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDefaultVal((-2665));
      BooleanWriter booleanWriter0 = new BooleanWriter(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        booleanWriter0.writeToBuffer((DynamicByteBuffer) null, (Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.BooleanWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      BooleanWriter booleanWriter0 = new BooleanWriter(fieldMetaInfo0);
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        booleanWriter0.writeToObject(object1, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.BooleanWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      BooleanWriter booleanWriter0 = new BooleanWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        booleanWriter0.writeToBuffer(dynamicByteBuffer0, (Object) null, (Object) fieldMetaInfo0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      BooleanWriter booleanWriter0 = new BooleanWriter(fieldMetaInfo0);
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      fieldMetaInfo0.setDefaultVal(415);
      booleanWriter0.writeToBuffer(dynamicByteBuffer0, (Object) null, (Object) classMetaInfo0);
      assertFalse(classMetaInfo0.isStrict());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      BooleanWriter booleanWriter0 = new BooleanWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        booleanWriter0.writeToBuffer(dynamicByteBuffer0, (Object) fieldMetaInfo0, (Object) fieldMetaInfo0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.github.misterchangray.core.clazz.FieldMetaInfo cannot be cast to class java.lang.Boolean (com.github.misterchangray.core.clazz.FieldMetaInfo is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5a3968b9; java.lang.Boolean is in module java.base of loader 'bootstrap')
         //
         verifyException("com.github.misterchangray.core.intf.impl.BooleanWriter", e);
      }
  }
}
