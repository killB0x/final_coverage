/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:30:04 GMT 2022
 */

package com.github.misterchangray.core.intf.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.ClassMetaInfo;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.intf.impl.StringReader;
import com.github.misterchangray.core.util.DynamicByteBuffer;
import java.io.UnsupportedEncodingException;
import java.lang.annotation.Annotation;
import java.nio.BufferUnderflowException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringReader_ESTest extends StringReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setSize(312);
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      dynamicByteBuffer0.fill((byte) (-25));
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, fieldMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Annotation> class0 = Annotation.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes(6398);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setSize(6398);
      fieldMetaInfo0.setDynamicSize(true);
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, fieldMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setDynamicSize(true);
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate(0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      fieldMetaInfo0.setSize(8);
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      dynamicByteBuffer0.buffer();
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, fieldMetaInfo0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      fieldMetaInfo0.setSize((-1788));
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer();
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, classMetaInfo0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1788
         //
         verifyException("com.github.misterchangray.core.intf.impl.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setCharset("@9m:_4K: 1");
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, fieldMetaInfo0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setSize(1000);
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate(304);
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Missing data
         //
         verifyException("com.github.misterchangray.core.util.DynamicByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setSize(325);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      dynamicByteBuffer0.fill((byte)59);
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, dynamicByteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes(1387);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setSize(363);
      fieldMetaInfo0.setDynamicSize(true);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, classMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Integer> class0 = Integer.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      classMetaInfo0.setElementBytes(6400);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setDynamicSize(true);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, fieldMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      ClassMetaInfo classMetaInfo0 = new ClassMetaInfo(class0);
      fieldMetaInfo0.setOwnerClazz(classMetaInfo0);
      fieldMetaInfo0.setDynamicSize(true);
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, fieldMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      fieldMetaInfo0.setDynamic(true);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      StringReader stringReader0 = new StringReader(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        stringReader0.readFormBuffer(dynamicByteBuffer0, fieldMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader((FieldMetaInfo) null);
      // Undeclared exception!
      try { 
        stringReader0.readFormObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.StringReader", e);
      }
  }
}
