/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:53:26 GMT 2022
 */

package com.github.misterchangray.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.annotation.MagicClass;
import com.github.misterchangray.core.util.AnnotationUtil;
import java.lang.reflect.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AnnotationUtil_ESTest extends AnnotationUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      MagicClass magicClass0 = AnnotationUtil.getMagicClassAnnotation(class0);
      assertNull(magicClass0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationUtil.getMagicFieldAnnotation((Field) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.util.AnnotationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AnnotationUtil annotationUtil0 = new AnnotationUtil();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationUtil.getMagicClassAnnotation((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.util.AnnotationUtil", e);
      }
  }
}
