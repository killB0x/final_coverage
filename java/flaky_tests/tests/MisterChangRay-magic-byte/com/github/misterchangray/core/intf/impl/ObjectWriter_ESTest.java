/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:36:44 GMT 2022
 */

package com.github.misterchangray.core.intf.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.intf.impl.ObjectWriter;
import com.github.misterchangray.core.util.DynamicByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectWriter_ESTest extends ObjectWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      ObjectWriter objectWriter0 = new ObjectWriter(fieldMetaInfo0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        objectWriter0.writeToObject(object0, fieldMetaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.ObjectWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      ObjectWriter objectWriter0 = new ObjectWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      objectWriter0.writeToBuffer(dynamicByteBuffer0, (Object) dynamicByteBuffer0, (Object) fieldMetaInfo0);
      assertEquals(0, fieldMetaInfo0.getDynamicSizeOf());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      ObjectWriter objectWriter0 = new ObjectWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      objectWriter0.writeToBuffer(dynamicByteBuffer0, (Object) null, (Object) objectWriter0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ObjectWriter objectWriter0 = new ObjectWriter((FieldMetaInfo) null);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        objectWriter0.writeToBuffer(dynamicByteBuffer0, (Object) dynamicByteBuffer0, (Object) dynamicByteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.ObjectWriter", e);
      }
  }
}
