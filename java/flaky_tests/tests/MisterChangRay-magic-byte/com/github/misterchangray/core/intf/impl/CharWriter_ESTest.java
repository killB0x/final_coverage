/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:41:05 GMT 2022
 */

package com.github.misterchangray.core.intf.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.misterchangray.core.clazz.FieldMetaInfo;
import com.github.misterchangray.core.intf.impl.CharWriter;
import com.github.misterchangray.core.util.DynamicByteBuffer;
import java.nio.BufferOverflowException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharWriter_ESTest extends CharWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      Class<Object> class0 = Object.class;
      CharWriter charWriter0 = new CharWriter(fieldMetaInfo0);
      // Undeclared exception!
      try { 
        charWriter0.writeToObject(class0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter((FieldMetaInfo) null);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      Character character0 = Character.valueOf('O');
      Object object0 = new Object();
      charWriter0.writeToBuffer(dynamicByteBuffer0, (Object) character0, object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      CharWriter charWriter0 = new CharWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate(1);
      Character character0 = Character.valueOf('p');
      // Undeclared exception!
      try { 
        charWriter0.writeToBuffer(dynamicByteBuffer0, (Object) character0, (Object) fieldMetaInfo0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter((FieldMetaInfo) null);
      DynamicByteBuffer dynamicByteBuffer0 = DynamicByteBuffer.allocate();
      // Undeclared exception!
      try { 
        charWriter0.writeToBuffer(dynamicByteBuffer0, (Object) null, (Object) dynamicByteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.misterchangray.core.intf.impl.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldMetaInfo fieldMetaInfo0 = new FieldMetaInfo();
      CharWriter charWriter0 = new CharWriter(fieldMetaInfo0);
      DynamicByteBuffer dynamicByteBuffer0 = new DynamicByteBuffer();
      // Undeclared exception!
      try { 
        charWriter0.writeToBuffer(dynamicByteBuffer0, (Object) fieldMetaInfo0, (Object) dynamicByteBuffer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.github.misterchangray.core.clazz.FieldMetaInfo cannot be cast to class java.lang.Character (com.github.misterchangray.core.clazz.FieldMetaInfo is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @69e8e0a5; java.lang.Character is in module java.base of loader 'bootstrap')
         //
         verifyException("com.github.misterchangray.core.intf.impl.CharWriter", e);
      }
  }
}
