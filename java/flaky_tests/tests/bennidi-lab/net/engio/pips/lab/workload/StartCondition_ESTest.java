/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:23:50 GMT 2022
 */

package net.engio.pips.lab.workload;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.TimeUnit;
import net.engio.pips.lab.workload.StartCondition;
import net.engio.pips.lab.workload.Workload;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StartCondition_ESTest extends StartCondition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StartCondition startCondition0 = new StartCondition();
      boolean boolean0 = startCondition0.isImmediately();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      StartCondition startCondition0 = new StartCondition(0, timeUnit0);
      startCondition0.inMillisecs();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      StartCondition startCondition0 = new StartCondition(1, timeUnit0);
      long long0 = startCondition0.inMillisecs();
      assertEquals(1L, long0);
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      StartCondition startCondition0 = new StartCondition((-1), timeUnit0);
      long long0 = startCondition0.inMillisecs();
      assertFalse(startCondition0.isImmediately());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      StartCondition startCondition0 = new StartCondition(0, timeUnit0);
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Workload workload0 = new Workload("net.engio.pips.lab.ExecutionContext");
      workload0.finished();
      StartCondition startCondition0 = new StartCondition(workload0);
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-618L));
      Workload workload0 = new Workload("");
      StartCondition startCondition0 = new StartCondition(workload0);
      workload0.started();
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Workload workload0 = new Workload("M@/Zi");
      workload0.setParallelTasks(0);
      StartCondition startCondition0 = new StartCondition(workload0);
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Workload workload0 = new Workload((String) null);
      workload0.setParallelTasks((-1491));
      StartCondition startCondition0 = new StartCondition(workload0);
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Workload workload0 = new Workload("j/?j Ki6q\"V-:sv.");
      workload0.started();
      StartCondition startCondition0 = new StartCondition(workload0);
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Workload workload0 = new Workload("StBATM?\"9@5?/r7X3zU");
      Workload workload1 = workload0.setDelay(0L);
      StartCondition startCondition0 = new StartCondition(workload1);
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Workload workload0 = new Workload((String) null);
      Workload workload1 = workload0.setDelay(2140L);
      StartCondition startCondition0 = new StartCondition(workload1);
      startCondition0.getPreceedingWorkload();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      StartCondition startCondition0 = new StartCondition(0, timeUnit0);
      startCondition0.isDependent();
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Workload workload0 = new Workload("&N");
      StartCondition startCondition0 = new StartCondition(workload0);
      boolean boolean0 = startCondition0.isDependent();
      assertFalse(startCondition0.isImmediately());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Workload workload0 = new Workload("&N");
      StartCondition startCondition0 = new StartCondition(workload0);
      boolean boolean0 = startCondition0.isTimebased();
      assertFalse(startCondition0.isImmediately());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      StartCondition startCondition0 = new StartCondition(0, timeUnit0);
      boolean boolean0 = startCondition0.isTimebased();
      assertFalse(startCondition0.isImmediately());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Workload workload0 = new Workload("&N");
      StartCondition startCondition0 = new StartCondition(workload0);
      boolean boolean0 = startCondition0.isImmediately();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Workload workload0 = new Workload("net.engio.pips.lab.ExecutionContext");
      StartCondition startCondition0 = new StartCondition(workload0);
      String string0 = startCondition0.toString();
      assertFalse(startCondition0.isImmediately());
      assertEquals("start after workload net.engio.pips.lab.ExecutionContext", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StartCondition startCondition0 = new StartCondition((Workload) null);
      String string0 = startCondition0.toString();
      assertEquals("Unknown startcondition", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      StartCondition startCondition0 = new StartCondition(0, timeUnit0);
      String string0 = startCondition0.toString();
      assertEquals("start after 0HOURS", string0);
      assertFalse(startCondition0.isImmediately());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Workload workload0 = new Workload("net.engio.pips.lab.ExecutionContext");
      StartCondition startCondition0 = new StartCondition(workload0);
      // Undeclared exception!
      try { 
        startCondition0.inMillisecs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.engio.pips.lab.workload.StartCondition", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StartCondition startCondition0 = new StartCondition();
      assertFalse(startCondition0.isDependent());
      
      String string0 = startCondition0.toString();
      assertEquals("start immediately", string0);
  }
}
