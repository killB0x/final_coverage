/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 09:41:24 GMT 2022
 */

package com.jpaquery.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jpaquery.example.Example;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Example_ESTest extends Example_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Example example0 = new Example();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " group by ";
      stringArray0[1] = ",R";
      Example example1 = example0.excludes(stringArray0);
      assertSame(example0, example1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Example example0 = new Example();
      // Undeclared exception!
      try { 
        example0.excludes((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The names argument should not be null
         //
         verifyException("com.jpaquery.example.Example", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Example example0 = new Example();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        example0.excludes(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The names argument should not contain null
         //
         verifyException("com.jpaquery.example.Example", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Example example0 = new Example();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\"n";
      stringArray0[1] = "1WuUfSP[k!EV.%M";
      Example example1 = example0.includes(stringArray0);
      assertSame(example1, example0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Example example0 = new Example();
      // Undeclared exception!
      try { 
        example0.includes((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The names argument should not be null
         //
         verifyException("com.jpaquery.example.Example", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Example example0 = new Example();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        example0.includes(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The names argument should not contain null
         //
         verifyException("com.jpaquery.example.Example", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.includeEmpty();
      assertSame(example0, example1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.includePrimitiveFalse();
      assertSame(example0, example1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.includePrimitiveZero();
      assertSame(example0, example1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.excludeEmpty();
      assertSame(example1, example0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.excludePrimitiveZero();
      assertSame(example1, example0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.excludeNull();
      assertSame(example0, example1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.includeNull();
      assertSame(example0, example1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Example example0 = new Example();
      Example example1 = example0.excludePrimitiveFalse();
      assertSame(example1, example0);
  }
}
