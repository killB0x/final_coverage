/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 09:47:53 GMT 2022
 */

package com.jpaquery.core.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jpaquery.core.facade.QueryAppender;
import com.jpaquery.core.impl.JpaQueryImpl;
import com.jpaquery.core.impl.QueryAppenderImpl;
import com.jpaquery.core.vo.QueryContent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QueryAppenderImpl_ESTest extends QueryAppenderImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "DN", (Object[]) null);
      Integer integer0 = new Integer((-2236));
      QueryAppender queryAppender0 = queryAppenderImpl0.arg(integer0, (Object) "DN");
      assertSame(queryAppenderImpl0, queryAppender0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, ",&CV>Pt*WOvc AbDh6P:", (Object[]) null);
      // Undeclared exception!
      try { 
        queryAppenderImpl0.arg(",&CV>Pt*WOvc AbDh6P:", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "l]:tk|*rooaR", (Object[]) null);
      // Undeclared exception!
      try { 
        queryAppenderImpl0.toQueryContent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The arg which mapped :tk is not exists
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "/;{ge}HLjdb-*U}:", (Object[]) null);
      // Undeclared exception!
      try { 
        queryAppenderImpl0.toQueryContent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The alias which mapped {ge} is not exists
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "", (Object[]) null);
      QueryContent queryContent0 = queryAppenderImpl0.toQueryContent();
      assertEquals("", queryContent0.getQueryString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      QueryAppenderImpl queryAppenderImpl0 = null;
      try {
        queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, " where ", objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The append query string and argument's count is not equal,query string contains 0 and argument's count is 7
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      QueryAppenderImpl queryAppenderImpl0 = null;
      try {
        queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "?d+", objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The append query string and argument's count is not equal,query string contains 1 and argument's count is 0
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "?09d+", (Object[]) null);
      // Undeclared exception!
      try { 
        queryAppenderImpl0.toQueryContent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = null;
      try {
        queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "B x'R]`I37M2q6M?", (Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The append query string should not contains \"'\"
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = null;
      try {
        queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, (String) null, (Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The append query string should not be null
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "?d+", objectArray0);
      // Undeclared exception!
      try { 
        queryAppenderImpl0.toQueryContent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "", (Object[]) null);
      QueryAppender queryAppender0 = queryAppenderImpl0.arg("", (Object) "");
      assertSame(queryAppenderImpl0, queryAppender0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "", (Object[]) null);
      // Undeclared exception!
      try { 
        queryAppenderImpl0.alias("RQF7^s", "RQF7^s");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QueryAppenderImpl queryAppenderImpl0 = new QueryAppenderImpl((JpaQueryImpl) null, "i^f3m< `rit5", (Object[]) null);
      // Undeclared exception!
      try { 
        queryAppenderImpl0.arg((Integer) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }
}
