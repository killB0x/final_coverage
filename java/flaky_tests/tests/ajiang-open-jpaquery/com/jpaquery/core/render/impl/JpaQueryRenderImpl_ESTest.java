/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 09:39:19 GMT 2022
 */

package com.jpaquery.core.render.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jpaquery.core.facade.JpaQuery;
import com.jpaquery.core.facade.WhereHandler;
import com.jpaquery.core.impl.GroupImpl;
import com.jpaquery.core.impl.HavingImpl;
import com.jpaquery.core.impl.JoinImpl;
import com.jpaquery.core.impl.JoinPathImpl;
import com.jpaquery.core.impl.JpaQueryHandler;
import com.jpaquery.core.impl.JpaQueryImpl;
import com.jpaquery.core.impl.OrderImpl;
import com.jpaquery.core.impl.SelectImpl;
import com.jpaquery.core.impl.SelectPathImpl;
import com.jpaquery.core.impl.WhereImpl;
import com.jpaquery.core.render.impl.JpaQueryRenderImpl;
import com.jpaquery.core.vo.EntityInfo;
import com.jpaquery.core.vo.PathInfo;
import com.jpaquery.core.vo.QueryContent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JpaQueryRenderImpl_ESTest extends JpaQueryRenderImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      JoinImpl joinImpl0 = new JoinImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      JoinPathImpl<SelectPathImpl<JpaQueryImpl>> joinPathImpl0 = new JoinPathImpl<SelectPathImpl<JpaQueryImpl>>(jpaQueryHandler0, (JpaQueryImpl) null, joinImpl0, (EntityInfo<SelectPathImpl<JpaQueryImpl>>) null, (PathInfo) null);
      WhereImpl whereImpl0 = joinPathImpl0.getWhereImpl();
      Object[] objectArray0 = new Object[0];
      whereImpl0.append("=p<sY:q^", objectArray0);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toWhere((JpaQueryImpl) null, whereImpl0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The arg which mapped :q is not exists
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toSelectCount((JpaQueryImpl) null, (SelectImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toSelect((JpaQueryImpl) null, (SelectImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      OrderImpl orderImpl0 = new OrderImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      orderImpl0.append("Tw+:quo3p!", (Object[]) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toOrder((JpaQueryImpl) null, orderImpl0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The arg which mapped :quo3p is not exists
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      HavingImpl havingImpl0 = new HavingImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      havingImpl0.append("yyyy-MM-dd HH:mm:ss", (Object[]) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toHaving((JpaQueryImpl) null, havingImpl0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The arg which mapped :mm is not exists
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      GroupImpl groupImpl0 = new GroupImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      groupImpl0.append("/Z2T T8n#:le9", (Object[]) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toGroup((JpaQueryImpl) null, groupImpl0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The arg which mapped :le9 is not exists
         //
         verifyException("com.jpaquery.core.impl.QueryAppenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toFrom((JpaQueryImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      Long long0 = new Long(3L);
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      HavingImpl havingImpl0 = new HavingImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      havingImpl0.get(long0);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toHaving((JpaQueryImpl) null, havingImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      HavingImpl havingImpl0 = new HavingImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      Object[] objectArray0 = new Object[0];
      havingImpl0.append("The arg which mapped %s is not exists", objectArray0);
      havingImpl0.append("The arg which mapped %s is not exists", objectArray0);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toHaving((JpaQueryImpl) null, havingImpl0);
      assertEquals("The arg which mapped %s is not exists and The arg which mapped %s is not exists", queryContent0.getQueryString());
      assertNotNull(queryContent0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      HavingImpl havingImpl0 = new HavingImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      havingImpl0.get((JpaQueryImpl) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toHaving((JpaQueryImpl) null, havingImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      HavingImpl havingImpl0 = new HavingImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toHaving((JpaQueryImpl) null, havingImpl0);
      assertNull(queryContent0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      GroupImpl groupImpl0 = new GroupImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      Object[] objectArray0 = new Object[0];
      groupImpl0.append("ZoO", objectArray0);
      groupImpl0.append("ZoO", objectArray0);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toGroup((JpaQueryImpl) null, groupImpl0);
      assertEquals("ZoO,ZoO", queryContent0.getQueryString());
      assertNotNull(queryContent0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      GroupImpl groupImpl0 = new GroupImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toGroup((JpaQueryImpl) null, groupImpl0);
      assertNull(queryContent0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      OrderImpl orderImpl0 = new OrderImpl((JpaQueryHandler) null, (JpaQueryImpl) null);
      orderImpl0.append("", (Object[]) null);
      orderImpl0.append("", (Object[]) null);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toOrder((JpaQueryImpl) null, orderImpl0);
      assertNotNull(queryContent0);
      assertEquals(",", queryContent0.getQueryString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      OrderImpl orderImpl0 = new OrderImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toOrder((JpaQueryImpl) null, orderImpl0);
      assertNull(queryContent0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JoinImpl joinImpl0 = new JoinImpl((JpaQueryHandler) null, (JpaQueryImpl) null);
      JoinPathImpl<SelectPathImpl<JpaQueryImpl>> joinPathImpl0 = new JoinPathImpl<SelectPathImpl<JpaQueryImpl>>((JpaQueryHandler) null, (JpaQueryImpl) null, joinImpl0, (EntityInfo<SelectPathImpl<JpaQueryImpl>>) null, (PathInfo) null);
      WhereImpl whereImpl0 = joinPathImpl0.getWhereImpl();
      Object[] objectArray0 = new Object[0];
      whereImpl0.append("", objectArray0);
      whereImpl0.append("", objectArray0);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toWhere((JpaQueryImpl) null, whereImpl0);
      assertEquals(" and ", queryContent0.getQueryString());
      assertNotNull(queryContent0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      JoinImpl joinImpl0 = new JoinImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      JoinPathImpl<SelectPathImpl<JpaQueryImpl>> joinPathImpl0 = new JoinPathImpl<SelectPathImpl<JpaQueryImpl>>(jpaQueryHandler0, (JpaQueryImpl) null, joinImpl0, (EntityInfo<SelectPathImpl<JpaQueryImpl>>) null, (PathInfo) null);
      WhereImpl whereImpl0 = joinPathImpl0.getWhereImpl();
      WhereHandler whereHandler0 = mock(WhereHandler.class, new ViolatedAssumptionAnswer());
      whereImpl0.and(whereHandler0);
      QueryContent queryContent0 = jpaQueryRenderImpl0.toWhere((JpaQueryImpl) null, whereImpl0);
      assertNull(queryContent0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      JoinImpl joinImpl0 = new JoinImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      JoinPathImpl<SelectPathImpl<JpaQueryImpl>> joinPathImpl0 = new JoinPathImpl<SelectPathImpl<JpaQueryImpl>>(jpaQueryHandler0, (JpaQueryImpl) null, joinImpl0, (EntityInfo<SelectPathImpl<JpaQueryImpl>>) null, (PathInfo) null);
      WhereImpl whereImpl0 = joinPathImpl0.getWhereImpl();
      WhereImpl whereImpl1 = (WhereImpl)whereImpl0.notExists((JpaQuery) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toWhere((JpaQueryImpl) null, whereImpl1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      JoinImpl joinImpl0 = new JoinImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      JoinPathImpl<SelectPathImpl<JpaQueryImpl>> joinPathImpl0 = new JoinPathImpl<SelectPathImpl<JpaQueryImpl>>(jpaQueryHandler0, (JpaQueryImpl) null, joinImpl0, (EntityInfo<SelectPathImpl<JpaQueryImpl>>) null, (PathInfo) null);
      WhereImpl whereImpl0 = joinPathImpl0.getWhereImpl();
      whereImpl0.get((JpaQueryImpl) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toWhere((JpaQueryImpl) null, whereImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      OrderImpl orderImpl0 = new OrderImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      orderImpl0.get((Object) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toOrder((JpaQueryImpl) null, orderImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JpaQueryRenderImpl jpaQueryRenderImpl0 = new JpaQueryRenderImpl();
      JpaQueryHandler jpaQueryHandler0 = new JpaQueryHandler();
      GroupImpl groupImpl0 = new GroupImpl(jpaQueryHandler0, (JpaQueryImpl) null);
      groupImpl0.get((Object) null);
      // Undeclared exception!
      try { 
        jpaQueryRenderImpl0.toGroup((JpaQueryImpl) null, groupImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.core.render.impl.JpaQueryRenderImpl", e);
      }
  }
}
