/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 09:43:13 GMT 2022
 */

package com.jpaquery.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jpaquery.util._Helper;
import java.lang.reflect.Method;
import java.time.chrono.ChronoLocalDate;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class _Helper_ESTest extends _Helper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        _Helper.isNumber((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        _Helper.isBaseType((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.util._Helper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        _Helper.getGenricReturnType((Method) null, 288);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jpaquery.util._Helper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        _Helper.findCaller((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = _Helper.findCaller("qbo@Wgc[iyBZJCqpD");
      assertEquals("com.jpaquery.util._Helper.findCaller:173", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = _Helper.findCaller("");
      assertEquals("<UnkownCaller>", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      boolean boolean0 = _Helper.isNumber(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Long> class0 = Long.class;
      boolean boolean0 = _Helper.isNumber(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Date> class0 = Date.class;
      boolean boolean0 = _Helper.isNumber(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Object> class0 = Object.class;
      boolean boolean0 = _Helper.isBaseType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      boolean boolean0 = _Helper.isBaseType(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Long> class0 = Long.class;
      boolean boolean0 = _Helper.isBaseType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      boolean boolean0 = _Helper.isBaseType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Date> class0 = Date.class;
      boolean boolean0 = _Helper.isBaseType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = _Helper.isEmpty("<evosuite>.<evosuite>:-1");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = _Helper.isEmpty((Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Date> class0 = Date.class;
      boolean boolean0 = _Helper.isEmpty(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      _Helper _Helper0 = new _Helper();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      long long0 = _Helper.identityHashCode((Object) null);
      assertEquals(2147483647L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = _Helper.findCaller();
      assertEquals("<evosuite>.<evosuite>:-1", string0);
  }
}
