/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 19:21:46 GMT 2022
 */

package org.yamcs.jsle.udpslebridge;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.yamcs.jsle.Constants;
import org.yamcs.jsle.provider.ServiceInitializer;
import org.yamcs.jsle.udpslebridge.BridgeServiceInitializer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BridgeServiceInitializer_ESTest extends BridgeServiceInitializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Properties properties0 = new Properties();
      BridgeServiceInitializer bridgeServiceInitializer0 = new BridgeServiceInitializer(properties0);
      Constants.ApplicationIdentifier constants_ApplicationIdentifier0 = Constants.ApplicationIdentifier.fwdInsert;
      // Undeclared exception!
      try { 
        bridgeServiceInitializer0.getServiceInstance("Nf%fv!", ".fsource", constants_ApplicationIdentifier0, "uGh7vcd");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Constants.ApplicationIdentifier constants_ApplicationIdentifier0 = Constants.ApplicationIdentifier.rtnChOcf;
      BridgeServiceInitializer bridgeServiceInitializer0 = new BridgeServiceInitializer((Properties) null);
      // Undeclared exception!
      try { 
        bridgeServiceInitializer0.getServiceInstance("JT%jU}IY~\"|>`@", "JT%jU}IY~\"|>`@", constants_ApplicationIdentifier0, "JT%jU}IY~\"|>`@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.yamcs.jsle.udpslebridge.BridgeServiceInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      BridgeServiceInitializer bridgeServiceInitializer0 = new BridgeServiceInitializer(properties0);
      properties0.put(bridgeServiceInitializer0, "");
      Constants.ApplicationIdentifier constants_ApplicationIdentifier0 = Constants.ApplicationIdentifier.fwdProtoVcdu;
      // Undeclared exception!
      try { 
        bridgeServiceInitializer0.getServiceInstance("", "", constants_ApplicationIdentifier0, "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.yamcs.jsle.udpslebridge.BridgeServiceInitializer cannot be cast to class java.lang.String (org.yamcs.jsle.udpslebridge.BridgeServiceInitializer is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @2669aad9; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("org.yamcs.jsle.udpslebridge.BridgeServiceInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      BridgeServiceInitializer bridgeServiceInitializer0 = new BridgeServiceInitializer(properties0);
      properties0.put("7", "7");
      Constants.ApplicationIdentifier constants_ApplicationIdentifier0 = Constants.ApplicationIdentifier.fwdProtoVcdu;
      // Undeclared exception!
      try { 
        bridgeServiceInitializer0.getServiceInstance("7", "7", constants_ApplicationIdentifier0, "7");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      BridgeServiceInitializer bridgeServiceInitializer0 = new BridgeServiceInitializer(properties0);
      properties0.put("service.", "service.");
      Constants.ApplicationIdentifier constants_ApplicationIdentifier0 = Constants.ApplicationIdentifier.fwdInsert;
      // Undeclared exception!
      try { 
        bridgeServiceInitializer0.getServiceInstance("service.", "service.", constants_ApplicationIdentifier0, "service.");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Properties properties0 = new Properties();
      BridgeServiceInitializer bridgeServiceInitializer0 = new BridgeServiceInitializer(properties0);
      properties0.put("", bridgeServiceInitializer0);
      Constants.ApplicationIdentifier constants_ApplicationIdentifier0 = Constants.ApplicationIdentifier.rtnChOcf;
      // Undeclared exception!
      try { 
        bridgeServiceInitializer0.getServiceInstance("", "", constants_ApplicationIdentifier0, "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Properties properties0 = new Properties();
      BridgeServiceInitializer bridgeServiceInitializer0 = new BridgeServiceInitializer(properties0);
      ServiceInitializer.ServiceInitResult serviceInitializer_ServiceInitResult0 = bridgeServiceInitializer0.negativeResponse(2398);
      assertFalse(serviceInitializer_ServiceInitResult0.success);
      assertEquals(2398, serviceInitializer_ServiceInitResult0.diagnostic);
  }
}
