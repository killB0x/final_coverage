/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 19:30:06 GMT 2022
 */

package org.yamcs.jsle.udpslebridge;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.yamcs.jsle.udpslebridge.Util;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Util_ESTest extends Util_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Properties properties0 = new Properties();
      Object object0 = new Object();
      properties0.put("Cannot find property '", object0);
      String string0 = Util.getProperty(properties0, "Cannot find property '");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put("", "");
      String string0 = Util.getProperty(properties0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Util.getProperty((Properties) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.yamcs.jsle.udpslebridge.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        Util.getProperty(properties0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot find property ''
         //
         verifyException("org.yamcs.jsle.udpslebridge.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put("xh'YPrp1L4", "xh'YPrp1L4");
      String string0 = Util.getProperty(properties0, "xh'YPrp1L4");
      assertEquals("xh'YPrp1L4", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Util util0 = new Util();
  }
}
