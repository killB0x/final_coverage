/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:36:31 GMT 2022
 */

package net.openhft.chronicle.jlbh;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Optional;
import net.openhft.chronicle.jlbh.ImmutableJLBHResult;
import net.openhft.chronicle.jlbh.ImmutableProbeResult;
import net.openhft.chronicle.jlbh.JLBHResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImmutableJLBHResult_ESTest extends ImmutableJLBHResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      ImmutableProbeResult immutableProbeResult0 = new ImmutableProbeResult(linkedList0);
      HashMap<String, ImmutableProbeResult> hashMap0 = new HashMap<String, ImmutableProbeResult>();
      ImmutableJLBHResult immutableJLBHResult0 = new ImmutableJLBHResult(immutableProbeResult0, hashMap0);
      JLBHResult.ProbeResult jLBHResult_ProbeResult0 = immutableJLBHResult0.endToEnd();
      assertSame(jLBHResult_ProbeResult0, immutableProbeResult0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImmutableJLBHResult immutableJLBHResult0 = null;
      try {
        immutableJLBHResult0 = new ImmutableJLBHResult((JLBHResult.ProbeResult) null, (Map<String, ? extends JLBHResult.ProbeResult>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, JLBHResult.ProbeResult> hashMap0 = new HashMap<String, JLBHResult.ProbeResult>();
      ImmutableJLBHResult immutableJLBHResult0 = new ImmutableJLBHResult((JLBHResult.ProbeResult) null, hashMap0);
      Optional<JLBHResult.ProbeResult> optional0 = immutableJLBHResult0.probe("Svy");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, JLBHResult.ProbeResult> hashMap0 = new HashMap<String, JLBHResult.ProbeResult>();
      ImmutableJLBHResult immutableJLBHResult0 = new ImmutableJLBHResult((JLBHResult.ProbeResult) null, hashMap0);
      JLBHResult.ProbeResult jLBHResult_ProbeResult0 = immutableJLBHResult0.endToEnd();
      assertNull(jLBHResult_ProbeResult0);
  }
}
