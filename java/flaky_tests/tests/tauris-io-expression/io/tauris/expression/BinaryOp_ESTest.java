/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:38:23 GMT 2022
 */

package io.tauris.expression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.tauris.expression.BinaryOp;
import io.tauris.expression.MapContext;
import io.tauris.expression.TExpression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BinaryOp_ESTest extends BinaryOp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MapContext mapContext0 = new MapContext();
      BinaryOp binaryOp0 = BinaryOp.build("&&");
      // Undeclared exception!
      try { 
        binaryOp0.eval(mapContext0, (TExpression) null, (TExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tauris.expression.BinaryOp$And", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MapContext mapContext0 = new MapContext();
      BinaryOp binaryOp0 = BinaryOp.build("or");
      // Undeclared exception!
      try { 
        binaryOp0.eval(mapContext0, (TExpression) null, (TExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tauris.expression.BinaryOp$Or", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryOp.build((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        BinaryOp.build("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal binary op :
         //
         verifyException("io.tauris.expression.BinaryOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BinaryOp binaryOp0 = BinaryOp.build("||");
      assertNotNull(binaryOp0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BinaryOp binaryOp0 = BinaryOp.build("and");
      assertNotNull(binaryOp0);
  }
}
