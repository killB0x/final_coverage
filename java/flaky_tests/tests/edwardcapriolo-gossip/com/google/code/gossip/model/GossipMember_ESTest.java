/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 06:38:23 GMT 2022
 */

package com.google.code.gossip.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.code.gossip.model.GossipMember;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GossipMember_ESTest extends GossipMember_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Integer integer0 = new Integer(0);
      gossipMember0.setPort(integer0);
      Integer integer1 = gossipMember0.getPort();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(2090);
      Long long0 = new Long(2090);
      GossipMember gossipMember0 = new GossipMember("4(mMX-mMp_c]", "2h}", integer0, "4(mMX-mMp_c]", long0);
      gossipMember0.getPort();
      assertEquals("2h}", gossipMember0.getHost());
      assertEquals("4(mMX-mMp_c]", gossipMember0.getCluster());
      assertEquals("4(mMX-mMp_c]", gossipMember0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Integer integer0 = new Integer((-627));
      gossipMember0.setPort(integer0);
      Integer integer1 = gossipMember0.getPort();
      assertEquals((-627), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-1370));
      Long long0 = new Long((-1370));
      GossipMember gossipMember0 = new GossipMember("com.google.code.gossip.model.GossipMember", "hbB8", integer0, "qvA@KE#{;U", long0);
      String string0 = gossipMember0.getId();
      assertEquals("hbB8", gossipMember0.getHost());
      assertEquals("com.google.code.gossip.model.GossipMember", gossipMember0.getCluster());
      assertEquals("qvA@KE#{;U", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long(1L);
      GossipMember gossipMember0 = new GossipMember("com.google.code.gossip.model.GossipMember", "com.google.code.gossip.model.GossipMember", (Integer) null, "com.google.code.gossip.model.GossipMember", long0);
      String string0 = gossipMember0.getHost();
      assertEquals("com.google.code.gossip.model.GossipMember", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-1370));
      Long long0 = new Long((-1370));
      GossipMember gossipMember0 = new GossipMember("com.google.code.gossip.model.GossipMember", "hbB8", integer0, "qvA@KE#{;U", long0);
      assertEquals("hbB8", gossipMember0.getHost());
      
      gossipMember0.setHost("");
      gossipMember0.getHost();
      assertEquals("qvA@KE#{;U", gossipMember0.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Long long0 = new Long(0);
      gossipMember0.setHeartbeat(long0);
      Long long1 = gossipMember0.getHeartbeat();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Long long0 = new Long(93L);
      gossipMember0.setHeartbeat(long0);
      Long long1 = gossipMember0.getHeartbeat();
      assertEquals(93L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Long long0 = new Long(1L);
      GossipMember gossipMember0 = new GossipMember("", (String) null, integer0, "", long0);
      gossipMember0.setCluster("5uW(pqb");
      String string0 = gossipMember0.getCluster();
      assertEquals("5uW(pqb", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      String string0 = gossipMember0.getCluster();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Long long0 = gossipMember0.getHeartbeat();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      String string0 = gossipMember0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Long long0 = new Long((-1514L));
      gossipMember0.setHeartbeat(long0);
      Long long1 = gossipMember0.getHeartbeat();
      assertEquals((-1514L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      String string0 = gossipMember0.getHost();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      gossipMember0.setCluster("");
      String string0 = gossipMember0.getCluster();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Integer integer0 = gossipMember0.getPort();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      gossipMember0.setId("");
      String string0 = gossipMember0.getId();
      assertEquals("", string0);
  }
}
