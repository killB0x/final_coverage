/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:01:53 GMT 2022
 */

package ognl.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import ognl.internal.HashMapCache;
import ognl.internal.entry.CacheEntryFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HashMapCache_ESTest extends HashMapCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      CacheEntryFactory<Integer, Integer> cacheEntryFactory1 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = hashMapCache0.shouldCreate(cacheEntryFactory1, (Integer) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(cacheEntryFactory0).create(anyInt());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      Integer integer0 = new Integer(2886);
      hashMapCache0.get(integer0);
      int int0 = hashMapCache0.getSize();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      Integer integer0 = new Integer(2886);
      Integer integer1 = hashMapCache0.put((Integer) null, integer0);
      assertNotNull(integer1);
      
      boolean boolean0 = hashMapCache0.contains((Integer) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      boolean boolean0 = hashMapCache0.contains((Integer) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      Integer integer0 = new Integer(2886);
      boolean boolean0 = hashMapCache0.shouldCreate((CacheEntryFactory<Integer, Integer>) null, integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(cacheEntryFactory0).create(anyInt());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      Integer integer0 = hashMapCache0.put((Integer) null, (Integer) null);
      Integer integer1 = hashMapCache0.get(integer0);
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      Integer integer0 = new Integer(2886);
      hashMapCache0.put((Integer) null, integer0);
      hashMapCache0.get((Integer) null);
      assertEquals(1, hashMapCache0.getSize());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      int int0 = hashMapCache0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CacheEntryFactory<Integer, Integer> cacheEntryFactory0 = (CacheEntryFactory<Integer, Integer>) mock(CacheEntryFactory.class, new ViolatedAssumptionAnswer());
      HashMapCache<Integer, Integer> hashMapCache0 = new HashMapCache<Integer, Integer>(cacheEntryFactory0);
      hashMapCache0.clear();
      assertEquals(0, hashMapCache0.getSize());
  }
}
