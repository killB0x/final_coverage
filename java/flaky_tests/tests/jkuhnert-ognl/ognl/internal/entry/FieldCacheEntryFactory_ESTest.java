/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:14:28 GMT 2022
 */

package ognl.internal.entry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import java.util.Map;
import ognl.internal.entry.FieldCacheEntryFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldCacheEntryFactory_ESTest extends FieldCacheEntryFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldCacheEntryFactory fieldCacheEntryFactory0 = new FieldCacheEntryFactory();
      Class<Object> class0 = Object.class;
      Map<String, Field> map0 = fieldCacheEntryFactory0.create(class0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldCacheEntryFactory fieldCacheEntryFactory0 = new FieldCacheEntryFactory();
      // Undeclared exception!
      try { 
        fieldCacheEntryFactory0.create((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldCacheEntryFactory fieldCacheEntryFactory0 = new FieldCacheEntryFactory();
      Class<Field> class0 = Field.class;
      Map<String, Field> map0 = fieldCacheEntryFactory0.create(class0);
      assertEquals(12, map0.size());
  }
}
