/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:31:32 GMT 2022
 */

package ognl.internal.entry;

import org.junit.Test;
import static org.junit.Assert.*;
import ognl.internal.entry.MethodAccessEntryValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodAccessEntryValue_ESTest extends MethodAccessEntryValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MethodAccessEntryValue methodAccessEntryValue0 = new MethodAccessEntryValue(true, false);
      boolean boolean0 = methodAccessEntryValue0.isNotPublic();
      assertFalse(boolean0);
      assertTrue(methodAccessEntryValue0.isAccessible());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MethodAccessEntryValue methodAccessEntryValue0 = new MethodAccessEntryValue(false, true);
      boolean boolean0 = methodAccessEntryValue0.isAccessible();
      assertFalse(boolean0);
      assertTrue(methodAccessEntryValue0.isNotPublic());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MethodAccessEntryValue methodAccessEntryValue0 = new MethodAccessEntryValue(true);
      assertTrue(methodAccessEntryValue0.isAccessible());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MethodAccessEntryValue methodAccessEntryValue0 = new MethodAccessEntryValue(true, true);
      boolean boolean0 = methodAccessEntryValue0.isAccessible();
      assertTrue(boolean0);
      assertTrue(methodAccessEntryValue0.isNotPublic());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MethodAccessEntryValue methodAccessEntryValue0 = new MethodAccessEntryValue(true, true);
      boolean boolean0 = methodAccessEntryValue0.isNotPublic();
      assertTrue(boolean0);
      assertTrue(methodAccessEntryValue0.isAccessible());
  }
}
