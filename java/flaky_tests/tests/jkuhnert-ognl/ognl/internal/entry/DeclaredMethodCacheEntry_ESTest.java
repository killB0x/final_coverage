/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:02:04 GMT 2022
 */

package ognl.internal.entry;

import org.junit.Test;
import static org.junit.Assert.*;
import ognl.internal.entry.DeclaredMethodCacheEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeclaredMethodCacheEntry_ESTest extends DeclaredMethodCacheEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<DeclaredMethodCacheEntry> class0 = DeclaredMethodCacheEntry.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      DeclaredMethodCacheEntry.MethodType declaredMethodCacheEntry_MethodType0 = DeclaredMethodCacheEntry.MethodType.NON_STATIC;
      declaredMethodCacheEntry0.type = declaredMethodCacheEntry_MethodType0;
      declaredMethodCacheEntry0.hashCode();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<DeclaredMethodCacheEntry> class0 = DeclaredMethodCacheEntry.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      declaredMethodCacheEntry0.hashCode();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      DeclaredMethodCacheEntry declaredMethodCacheEntry1 = new DeclaredMethodCacheEntry(declaredMethodCacheEntry0.targetClass);
      assertTrue(declaredMethodCacheEntry1.equals((Object)declaredMethodCacheEntry0));
      
      DeclaredMethodCacheEntry.MethodType declaredMethodCacheEntry_MethodType0 = DeclaredMethodCacheEntry.MethodType.NON_STATIC;
      declaredMethodCacheEntry1.type = declaredMethodCacheEntry_MethodType0;
      boolean boolean0 = declaredMethodCacheEntry0.equals(declaredMethodCacheEntry1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      DeclaredMethodCacheEntry declaredMethodCacheEntry1 = new DeclaredMethodCacheEntry(class0);
      boolean boolean0 = declaredMethodCacheEntry1.equals(declaredMethodCacheEntry0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      boolean boolean0 = declaredMethodCacheEntry0.equals(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      boolean boolean0 = declaredMethodCacheEntry0.equals(declaredMethodCacheEntry0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      Class<DeclaredMethodCacheEntry> class1 = DeclaredMethodCacheEntry.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry1 = new DeclaredMethodCacheEntry(class1);
      boolean boolean0 = declaredMethodCacheEntry0.equals(declaredMethodCacheEntry1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<DeclaredMethodCacheEntry> class0 = DeclaredMethodCacheEntry.class;
      DeclaredMethodCacheEntry.MethodType declaredMethodCacheEntry_MethodType0 = DeclaredMethodCacheEntry.MethodType.STATIC;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0, declaredMethodCacheEntry_MethodType0);
  }
}
