/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:03:58 GMT 2022
 */

package ognl.internal.entry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ognl.internal.entry.DeclaredMethodCacheEntry;
import ognl.internal.entry.DeclaredMethodCacheEntryFactory;
import ognl.internal.entry.MethodCacheEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodCacheEntryFactory_ESTest extends MethodCacheEntryFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeclaredMethodCacheEntryFactory declaredMethodCacheEntryFactory0 = new DeclaredMethodCacheEntryFactory();
      // Undeclared exception!
      try { 
        declaredMethodCacheEntryFactory0.create((DeclaredMethodCacheEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.entry.MethodCacheEntryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeclaredMethodCacheEntryFactory declaredMethodCacheEntryFactory0 = new DeclaredMethodCacheEntryFactory();
      Class<MethodCacheEntry> class0 = MethodCacheEntry.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      // Undeclared exception!
      try { 
        declaredMethodCacheEntryFactory0.create(declaredMethodCacheEntry0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.internal.entry.MethodCacheEntryFactory", e);
      }
  }
}
