/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:20:45 GMT 2022
 */

package ognl.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import ognl.internal.Cache;
import ognl.internal.ClassCache;
import ognl.internal.HashMapCacheFactory;
import ognl.internal.entry.CacheEntryFactory;
import ognl.internal.entry.ClassCacheEntryFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HashMapCacheFactory_ESTest extends HashMapCacheFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMapCacheFactory hashMapCacheFactory0 = new HashMapCacheFactory();
      ClassCacheEntryFactory<Integer> classCacheEntryFactory0 = (ClassCacheEntryFactory<Integer>) mock(ClassCacheEntryFactory.class, new ViolatedAssumptionAnswer());
      ClassCache<Integer> classCache0 = hashMapCacheFactory0.createClassCache(classCacheEntryFactory0);
      assertEquals(0, classCache0.getSize());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMapCacheFactory hashMapCacheFactory0 = new HashMapCacheFactory();
      ClassCache<Integer> classCache0 = hashMapCacheFactory0.createClassCache();
      assertEquals(0, classCache0.getSize());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMapCacheFactory hashMapCacheFactory0 = new HashMapCacheFactory();
      Cache<Integer, Integer> cache0 = hashMapCacheFactory0.createCache((CacheEntryFactory<Integer, Integer>) null);
      assertEquals(0, cache0.getSize());
  }
}
