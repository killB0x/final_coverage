/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 13:43:23 GMT 2022
 */

package ognl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ognl.ClassResolver;
import ognl.DefaultClassResolver;
import ognl.DefaultTypeConverter;
import ognl.ListPropertyAccessor;
import ognl.MemberAccess;
import ognl.OgnlContext;
import ognl.TypeConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListPropertyAccessor_ESTest extends ListPropertyAccessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getPropertyClass((OgnlContext) null, "source is null for getProperty(null, \"", "source is null for getProperty(null, \"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.OgnlOps", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      OgnlContext ognlContext0 = new OgnlContext((ClassResolver) null, defaultTypeConverter0, memberAccess0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.setProperty(ognlContext0, (Object) null, object0, (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Integer integer0 = new Integer(738);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.setProperty((OgnlContext) null, (Object) null, integer0, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.setProperty((OgnlContext) null, (Object) null, "o", "o");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, (TypeConverter) null, memberAccess0);
      ognlContext0.setCurrentObject(defaultClassResolver0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceSetter(ognlContext0, (Object) null, ognlContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      ognlContext0.setCurrentObject(defaultTypeConverter0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceAccessor(ognlContext0, defaultClassResolver0, ognlContext0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.OgnlOps", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Integer integer0 = new Integer(2138);
      ognlContext0.put(ognlContext0, integer0);
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getProperty(ognlContext0, (Object) null, ognlContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getProperty((OgnlContext) null, listPropertyAccessor0, listPropertyAccessor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class ognl.ListPropertyAccessor cannot be cast to class java.util.List (ognl.ListPropertyAccessor is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5dbea696; java.util.List is in module java.base of loader 'bootstrap')
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Object> class0 = Object.class;
      Integer integer0 = new Integer(115);
      ognlContext0.setRoot(integer0);
      ognlContext0.setCurrentType(class0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      String string0 = listPropertyAccessor0.getSourceSetter(ognlContext0, defaultClassResolver0, class0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Object> class0 = Object.class;
      Integer integer0 = new Integer(1054720);
      ognlContext0.setRoot(integer0);
      ognlContext0.setCurrentType(class0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Object object0 = new Object();
      String string0 = listPropertyAccessor0.getSourceSetter(ognlContext0, object0, "ognl.AccessibleObjectHandlerJDK9Plus");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Class<Object> class0 = Object.class;
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      ognlContext0.setCurrentType(class0);
      String string0 = listPropertyAccessor0.getSourceSetter(ognlContext0, ognlContext0, ognlContext0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Integer> class0 = Integer.TYPE;
      ognlContext0.setCurrentType(class0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Object object0 = new Object();
      String string0 = listPropertyAccessor0.getSourceSetter(ognlContext0, defaultTypeConverter0, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Integer integer0 = new Integer(1054720);
      ognlContext0.setRoot(integer0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceSetter(ognlContext0, object0, "ognl.AccessibleObjectHandlerJDK9Plus");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(738);
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      ognlContext0.setCurrentObject(defaultTypeConverter0);
      Object object0 = new Object();
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceSetter(ognlContext0, object0, integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.OgnlOps", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceSetter(ognlContext0, ognlContext0, ognlContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Object> class0 = Object.class;
      Integer integer0 = new Integer(115);
      ognlContext0.setRoot(integer0);
      ognlContext0.setCurrentType(class0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      String string0 = listPropertyAccessor0.getSourceAccessor(ognlContext0, integer0, defaultTypeConverter0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Object> class0 = Object.class;
      Integer integer0 = new Integer((-1624254236));
      ognlContext0.setRoot(integer0);
      ognlContext0.setCurrentType(class0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      String string0 = listPropertyAccessor0.getSourceAccessor(ognlContext0, memberAccess0, "J.aE4Jo7H!3NIBPY");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Object> class0 = Object.class;
      ognlContext0.setCurrentType(class0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      String string0 = listPropertyAccessor0.getSourceAccessor(ognlContext0, memberAccess0, "J.aE4Jo7H!3NIBPY");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Integer> class0 = Integer.TYPE;
      ognlContext0.setCurrentType(class0);
      String string0 = listPropertyAccessor0.getSourceAccessor(ognlContext0, defaultTypeConverter0, class0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext((ClassResolver) null, defaultTypeConverter0, memberAccess0);
      ognlContext0.setCurrentObject(defaultTypeConverter0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceAccessor(ognlContext0, (Object) null, defaultTypeConverter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Integer integer0 = new Integer((-1624254236));
      ognlContext0.setRoot(integer0);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceAccessor(ognlContext0, memberAccess0, "J.aE4Jo7H!3NIBPY");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Integer integer0 = new Integer(115);
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getSourceAccessor(ognlContext0, integer0, defaultTypeConverter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Integer integer0 = new Integer((-1429));
      Class<?> class0 = listPropertyAccessor0.getPropertyClass(ognlContext0, integer0, defaultTypeConverter0);
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Class<?> class0 = listPropertyAccessor0.getPropertyClass((OgnlContext) null, "empty", "empty");
      assertEquals("boolean", class0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Class<?> class0 = listPropertyAccessor0.getPropertyClass((OgnlContext) null, (Object) null, "isEmpty");
      assertNotNull(class0);
      assertEquals("boolean", class0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Class<?> class0 = listPropertyAccessor0.getPropertyClass((OgnlContext) null, "iterator", "iterator");
      assertEquals("interface java.util.Iterator", class0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Class<?> class0 = listPropertyAccessor0.getPropertyClass((OgnlContext) null, (Object) null, "size");
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getPropertyClass((OgnlContext) null, (Object) null, "\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext((ClassResolver) null, (TypeConverter) null, memberAccess0);
      Integer integer0 = new Integer(97);
      Class<?> class0 = listPropertyAccessor0.getPropertyClass(ognlContext0, ognlContext0, integer0);
      assertFalse(class0.isArray());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Integer integer0 = new Integer(738);
      // Undeclared exception!
      try { 
        listPropertyAccessor0.setProperty((OgnlContext) null, integer0, "$", integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Integer cannot be cast to class java.util.List (java.lang.Integer and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      Integer integer0 = new Integer(738);
      // Undeclared exception!
      try { 
        listPropertyAccessor0.setProperty((OgnlContext) null, integer0, "=Y>GabaI1#/3-Fo6as7", integer0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getProperty(ognlContext0, (Object) null, ognlContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, "9lza");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, "size");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, "iterator");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ListPropertyAccessor listPropertyAccessor0 = new ListPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Integer integer0 = new Integer((-1429));
      // Undeclared exception!
      try { 
        listPropertyAccessor0.getProperty(ognlContext0, (Object) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ListPropertyAccessor", e);
      }
  }
}
