/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:25:51 GMT 2022
 */

package ognl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ognl.OgnlInvokePermission;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OgnlInvokePermission_ESTest extends OgnlInvokePermission_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OgnlInvokePermission ognlInvokePermission0 = null;
      try {
        ognlInvokePermission0 = new OgnlInvokePermission((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.security.BasicPermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OgnlInvokePermission ognlInvokePermission0 = null;
      try {
        ognlInvokePermission0 = new OgnlInvokePermission("", ";of4jt]0_?YcSD*VZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name can't be empty
         //
         verifyException("java.security.BasicPermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OgnlInvokePermission ognlInvokePermission0 = null;
      try {
        ognlInvokePermission0 = new OgnlInvokePermission((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.security.BasicPermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OgnlInvokePermission ognlInvokePermission0 = null;
      try {
        ognlInvokePermission0 = new OgnlInvokePermission("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name can't be empty
         //
         verifyException("java.security.BasicPermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OgnlInvokePermission ognlInvokePermission0 = new OgnlInvokePermission("ognl.OgnlInvokePermission");
      assertEquals("", ognlInvokePermission0.getActions());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OgnlInvokePermission ognlInvokePermission0 = new OgnlInvokePermission("Dr^.}AWh", "Dr^.}AWh");
      assertEquals("(\"ognl.OgnlInvokePermission\" \"Dr^.}AWh\")", ognlInvokePermission0.toString());
  }
}
