/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:33:33 GMT 2022
 */

package ognl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.beans.IntrospectionException;
import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import ognl.ObjectIndexedPropertyDescriptor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectIndexedPropertyDescriptor_ESTest extends ObjectIndexedPropertyDescriptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      ObjectIndexedPropertyDescriptor objectIndexedPropertyDescriptor0 = new ObjectIndexedPropertyDescriptor("L!}", class0, (Method) null, (Method) null);
      Class<?> class1 = objectIndexedPropertyDescriptor0.getPropertyType();
      assertEquals(1537, class1.getModifiers());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectIndexedPropertyDescriptor objectIndexedPropertyDescriptor0 = new ObjectIndexedPropertyDescriptor("L!}", class0, (Method) null, (Method) null);
      Class<?> class1 = objectIndexedPropertyDescriptor0.getPropertyType();
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectIndexedPropertyDescriptor objectIndexedPropertyDescriptor0 = null;
      try {
        objectIndexedPropertyDescriptor0 = new ObjectIndexedPropertyDescriptor("", class0, (Method) null, (Method) null);
        fail("Expecting exception: IntrospectionException");
      
      } catch(Throwable e) {
         //
         // bad property name
         //
         verifyException("java.beans.PropertyDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectIndexedPropertyDescriptor objectIndexedPropertyDescriptor0 = new ObjectIndexedPropertyDescriptor("L!}", class0, (Method) null, (Method) null);
      Method method0 = objectIndexedPropertyDescriptor0.getIndexedWriteMethod();
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectIndexedPropertyDescriptor objectIndexedPropertyDescriptor0 = new ObjectIndexedPropertyDescriptor("L!}", class0, (Method) null, (Method) null);
      Method method0 = objectIndexedPropertyDescriptor0.getIndexedReadMethod();
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ObjectIndexedPropertyDescriptor objectIndexedPropertyDescriptor0 = new ObjectIndexedPropertyDescriptor("ognl.ObjectInexedPropertyDescriptr", (Class<?>) null, (Method) null, (Method) null);
      Class<?> class0 = objectIndexedPropertyDescriptor0.getPropertyType();
      assertNull(class0);
  }
}
