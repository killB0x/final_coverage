/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:06:28 GMT 2022
 */

package ognl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.List;
import java.util.Map;
import ognl.ClassCacheInspector;
import ognl.ElementsAccessor;
import ognl.IteratorElementsAccessor;
import ognl.IteratorPropertyAccessor;
import ognl.MethodAccessor;
import ognl.NullHandler;
import ognl.OgnlCache;
import ognl.PropertyAccessor;
import ognl.SetPropertyAccessor;
import ognl.internal.entry.DeclaredMethodCacheEntry;
import ognl.internal.entry.GenericMethodParameterTypeCacheEntry;
import ognl.internal.entry.PermissionCacheEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OgnlCache_ESTest extends OgnlCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      Map<String, Field> map0 = ognlCache0.getField(class0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      DeclaredMethodCacheEntry declaredMethodCacheEntry0 = new DeclaredMethodCacheEntry(class0);
      // Undeclared exception!
      try { 
        ognlCache0.getMethod(declaredMethodCacheEntry0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.internal.entry.MethodCacheEntryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      GenericMethodParameterTypeCacheEntry genericMethodParameterTypeCacheEntry0 = new GenericMethodParameterTypeCacheEntry((Method) null, class0);
      // Undeclared exception!
      try { 
        ognlCache0.getGenericMethodParameterTypes(genericMethodParameterTypeCacheEntry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.entry.GenericMethodParameterTypeCacheEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      IteratorElementsAccessor iteratorElementsAccessor0 = new IteratorElementsAccessor();
      ognlCache0.setElementsAccessor(class0, iteratorElementsAccessor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<Annotation> class0 = Annotation.class;
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      ognlCache0.setPropertyAccessor(class0, iteratorPropertyAccessor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      NullHandler nullHandler0 = ognlCache0.getNullHandler(class0);
      ognlCache0.setNullHandler(class0, nullHandler0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<Annotation> class0 = Annotation.class;
      // Undeclared exception!
      try { 
        ognlCache0.getNullHandler(class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      ElementsAccessor elementsAccessor0 = ognlCache0.getElementsAccessor(class0);
      assertNotNull(elementsAccessor0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<Annotation> class0 = Annotation.class;
      // Undeclared exception!
      try { 
        ognlCache0.getElementsAccessor(class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      PropertyAccessor propertyAccessor0 = ognlCache0.getPropertyAccessor(class0);
      assertNotNull(propertyAccessor0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<Annotation> class0 = Annotation.class;
      // Undeclared exception!
      try { 
        ognlCache0.getPropertyAccessor(class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      MethodAccessor methodAccessor0 = ognlCache0.getMethodAccessor(class0);
      ognlCache0.setMethodAccessor(class0, methodAccessor0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<Annotation> class0 = Annotation.class;
      // Undeclared exception!
      try { 
        ognlCache0.getMethodAccessor(class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      // Undeclared exception!
      try { 
        ognlCache0.getMethodPerm((Method) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.internal.entry.MethodPermCacheEntryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      // Undeclared exception!
      try { 
        ognlCache0.getMethodParameterTypes((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.HashMapCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      // Undeclared exception!
      try { 
        ognlCache0.getGenericMethodParameterTypes((GenericMethodParameterTypeCacheEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.entry.GenericMethodParameterTypeFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      List<Constructor<?>> list0 = ognlCache0.getConstructor(class0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      // Undeclared exception!
      try { 
        ognlCache0.getMethod((DeclaredMethodCacheEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.entry.MethodCacheEntryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      ognlCache0.clear();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<Annotation> class0 = Annotation.class;
      Map<String, Field> map0 = ognlCache0.getField(class0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      ognlCache0.setClassCacheInspector((ClassCacheInspector) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      // Undeclared exception!
      try { 
        ognlCache0.getInvokePermission((PermissionCacheEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.entry.PermissionCacheEntryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      ognlCache0.setSecurityManager((SecurityManager) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      // Undeclared exception!
      try { 
        ognlCache0.getMethodAccess((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.entry.MethodAccessCacheEntryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      // Undeclared exception!
      try { 
        ognlCache0.getParameterTypes((Constructor<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.internal.HashMapCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OgnlCache ognlCache0 = new OgnlCache();
      Class<SetPropertyAccessor> class0 = SetPropertyAccessor.class;
      // Undeclared exception!
      try { 
        ognlCache0.getPropertyDescriptor(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.internal.entry.PropertyDescriptorCacheEntryFactory", e);
      }
  }
}
