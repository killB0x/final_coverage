/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:15:13 GMT 2022
 */

package ognl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ognl.ASTEval;
import ognl.Evaluation;
import ognl.OgnlException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OgnlException_ESTest extends OgnlException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      OgnlException ognlException0 = new OgnlException("_e%Y}&", mockThrowable0, true, true);
      Throwable throwable0 = ognlException0.getReason();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable", throwable0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTEval aSTEval0 = new ASTEval(113);
      Evaluation evaluation0 = new Evaluation(aSTEval0, "!ognl.OgnlOps.less");
      OgnlException ognlException0 = new OgnlException("!ognl.OgnlOps.less", (Throwable) null, true, true);
      ognlException0.setEvaluation(evaluation0);
      Evaluation evaluation1 = ognlException0.getEvaluation();
      assertFalse(evaluation1.isSetOperation());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OgnlException ognlException0 = null;
      try {
        ognlException0 = new OgnlException("", (Throwable) null, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OgnlException ognlException0 = new OgnlException("", (Throwable) null, true, true);
      String string0 = ognlException0.toString();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: ", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      OgnlException ognlException0 = new OgnlException((String) null, mockThrowable0, true, true);
      String string0 = ognlException0.toString();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable [org.evosuite.runtime.mock.java.lang.MockThrowable]", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OgnlException ognlException0 = null;
      try {
        ognlException0 = new OgnlException("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OgnlException ognlException0 = null;
      try {
        ognlException0 = new OgnlException("", (Throwable) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OgnlException ognlException0 = null;
      try {
        ognlException0 = new OgnlException();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OgnlException ognlException0 = new OgnlException("", (Throwable) null, true, true);
      Throwable throwable0 = ognlException0.getReason();
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      OgnlException ognlException0 = new OgnlException("]", (Throwable) null, true, true);
      Evaluation evaluation0 = ognlException0.getEvaluation();
      assertNull(evaluation0);
  }
}
