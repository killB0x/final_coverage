/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Oct 24 14:32:14 GMT 2022
 */

package ognl;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class EvaluationPool_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "ognl.EvaluationPool"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EvaluationPool_ESTest_scaffolding.class.getClassLoader() ,
      "ognl.ExpressionNode",
      "ognl.InappropriateExpressionException",
      "ognl.ComparisonExpression",
      "ognl.EvaluationPool",
      "ognl.enhance.ExpressionAccessor",
      "ognl.ASTBitNegate",
      "ognl.OgnlParserTreeConstants",
      "ognl.Evaluation",
      "ognl.JavaSource",
      "ognl.Node",
      "ognl.BooleanExpression",
      "ognl.enhance.UnsupportedCompilationException",
      "ognl.NodeType",
      "ognl.OgnlParserConstants",
      "ognl.OgnlParser",
      "ognl.NumericExpression",
      "ognl.SimpleNode",
      "ognl.OgnlException",
      "ognl.OgnlContext",
      "ognl.ASTGreater"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EvaluationPool_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "ognl.EvaluationPool",
      "ognl.Evaluation",
      "ognl.OgnlParserTokenManager",
      "ognl.OgnlParser$LookaheadSuccess",
      "ognl.OgnlParser",
      "ognl.SimpleNode",
      "ognl.ASTSelect",
      "ognl.DefaultClassResolver",
      "ognl.DefaultTypeConverter",
      "ognl.OgnlContext",
      "ognl.ASTProperty",
      "ognl.ASTVarRef",
      "ognl.ASTThisVarRef",
      "ognl.ASTNotIn",
      "ognl.ExpressionNode",
      "ognl.BooleanExpression",
      "ognl.ComparisonExpression",
      "ognl.ASTNotEq",
      "ognl.ASTRootVarRef",
      "ognl.NumericExpression",
      "ognl.ASTRemainder",
      "ognl.ASTMap",
      "ognl.JavaCharStream",
      "ognl.ASTSequence",
      "ognl.ASTConst",
      "ognl.ASTList",
      "ognl.ASTTest",
      "ognl.ASTChain",
      "ognl.ASTStaticField",
      "ognl.ASTEval",
      "ognl.OgnlException",
      "ognl.InappropriateExpressionException",
      "ognl.ASTNegate",
      "ognl.ASTLess",
      "ognl.OgnlOps",
      "ognl.ASTBitNegate",
      "ognl.ASTGreater",
      "ognl.ASTLessEq",
      "ognl.ASTEq",
      "ognl.ASTNot",
      "ognl.ASTShiftLeft",
      "ognl.ASTAdd",
      "ognl.ASTUnsignedShiftRight",
      "ognl.OgnlParserTreeConstants",
      "ognl.ASTCtor",
      "ognl.ASTGreaterEq",
      "ognl.ASTXor",
      "ognl.ASTBitAnd",
      "ognl.ASTBitOr",
      "ognl.ASTShiftRight",
      "ognl.ASTDivide",
      "ognl.ASTInstanceof",
      "ognl.ASTMultiply",
      "ognl.ASTSubtract",
      "ognl.ASTIn",
      "ognl.TokenMgrError",
      "ognl.ASTAnd",
      "ognl.ASTProject",
      "ognl.ASTStaticMethod",
      "ognl.ASTAssign",
      "ognl.ASTKeyValue",
      "ognl.ASTSelectFirst",
      "ognl.ASTMethod",
      "ognl.ASTSelectLast",
      "ognl.ASTOr",
      "ognl.AccessibleObjectHandlerPreJDK9",
      "ognl.OgnlCache",
      "ognl.internal.HashMapCacheFactory",
      "ognl.internal.HashMapCache",
      "ognl.internal.HashMapClassCache",
      "ognl.ObjectMethodAccessor",
      "ognl.ObjectPropertyAccessor",
      "ognl.ArrayPropertyAccessor",
      "ognl.ListPropertyAccessor",
      "ognl.MapPropertyAccessor",
      "ognl.SetPropertyAccessor",
      "ognl.IteratorPropertyAccessor",
      "ognl.EnumerationPropertyAccessor",
      "ognl.ArrayElementsAccessor",
      "ognl.ObjectElementsAccessor",
      "ognl.CollectionElementsAccessor",
      "ognl.MapElementsAccessor",
      "ognl.IteratorElementsAccessor",
      "ognl.EnumerationElementsAccessor",
      "ognl.NumberElementsAccessor",
      "ognl.ObjectNullHandler",
      "ognl.internal.entry.PropertyDescriptorCacheEntryFactory",
      "ognl.internal.entry.MethodCacheEntryFactory",
      "ognl.internal.entry.DeclaredMethodCacheEntryFactory",
      "ognl.internal.entry.PermissionCacheEntryFactory",
      "ognl.internal.entry.FieldCacheEntryFactory",
      "ognl.internal.entry.GenericMethodParameterTypeFactory",
      "ognl.internal.entry.MethodAccessEntryValue",
      "ognl.internal.entry.MethodAccessCacheEntryFactory",
      "ognl.internal.entry.MethodPermCacheEntryFactory",
      "ognl.PrimitiveTypes",
      "ognl.PrimitiveDefaults",
      "ognl.OgnlRuntime$ClassPropertyMethodCache",
      "ognl.PrimitiveWrapperClasses",
      "ognl.NumericCasts",
      "ognl.NumericValues",
      "ognl.NumericLiterals",
      "ognl.NumericDefaults",
      "ognl.OgnlRuntime",
      "ognl.enhance.UnsupportedCompilationException"
    );
  }
}
