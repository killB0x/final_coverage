/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 13:48:01 GMT 2022
 */

package ognl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import ognl.ArrayPropertyAccessor;
import ognl.DefaultClassResolver;
import ognl.DefaultTypeConverter;
import ognl.MemberAccess;
import ognl.OgnlContext;
import ognl.TypeConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayPropertyAccessor_ESTest extends ArrayPropertyAccessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(memberAccess0, defaultClassResolver0, (TypeConverter) null, hashMap0);
      Integer integer0 = new Integer((-124));
      Integer integer1 = new Integer((-124));
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.setProperty(ognlContext0, ognlContext0, integer0, integer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.OgnlOps", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getProperty((OgnlContext) null, object0, object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, "length");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      OgnlContext ognlContext0 = new OgnlContext(memberAccess0, defaultClassResolver0, defaultTypeConverter0, hashMap0);
      Integer integer0 = new Integer(5718);
      hashMap0.put(integer0, ognlContext0);
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.setProperty(ognlContext0, hashMap0, ognlContext0, integer0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getSourceSetter((OgnlContext) null, arrayPropertyAccessor0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getSourceAccessor((OgnlContext) null, (Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      OgnlContext ognlContext0 = new OgnlContext(memberAccess0, defaultClassResolver0, (TypeConverter) null, hashMap0);
      ognlContext0.put((Object) null, ognlContext0);
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getProperty(ognlContext0, (Object) null, ognlContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Integer> class0 = Integer.class;
      ognlContext0.setCurrentType(class0);
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getSourceSetter(ognlContext0, defaultClassResolver0, ognlContext0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ArrayPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Integer> class0 = Integer.TYPE;
      ognlContext0.setCurrentType(class0);
      String string0 = arrayPropertyAccessor0.getSourceSetter(ognlContext0, defaultTypeConverter0, memberAccess0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Object object0 = new Object();
      ognlContext0.setRoot(defaultClassResolver0);
      Integer integer0 = new Integer((-298));
      String string0 = arrayPropertyAccessor0.getSourceSetter(ognlContext0, object0, integer0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      String string0 = arrayPropertyAccessor0.getSourceSetter(ognlContext0, defaultTypeConverter0, ognlContext0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Integer> class0 = Integer.class;
      ognlContext0.setCurrentType(class0);
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getSourceAccessor(ognlContext0, ognlContext0, ognlContext0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ArrayPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Class<Integer> class0 = Integer.TYPE;
      ognlContext0.setCurrentType(class0);
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      String string0 = arrayPropertyAccessor0.getSourceAccessor(ognlContext0, defaultClassResolver0, class0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Object object0 = new Object();
      ognlContext0.setRoot(defaultClassResolver0);
      String string0 = arrayPropertyAccessor0.getSourceAccessor(ognlContext0, object0, defaultClassResolver0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      String string0 = arrayPropertyAccessor0.getSourceAccessor(ognlContext0, defaultClassResolver0, defaultTypeConverter0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      OgnlContext ognlContext0 = new OgnlContext(memberAccess0, defaultClassResolver0, defaultTypeConverter0, hashMap0);
      Integer integer0 = new Integer(5718);
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.setProperty(ognlContext0, hashMap0, ognlContext0, integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Integer integer0 = new Integer((-53));
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.setProperty(ognlContext0, integer0, "[ognl.OgnlContext@0000000007]=ognl.OgnlOps.convertValue($3,ognl.DefaultTypeConverter.class)", defaultTypeConverter0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      Integer integer0 = new Integer(9);
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      Integer integer0 = new Integer((-1312));
      Object object0 = arrayPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getProperty((OgnlContext) null, "length", "length");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayPropertyAccessor arrayPropertyAccessor0 = new ArrayPropertyAccessor();
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        arrayPropertyAccessor0.getProperty(ognlContext0, object0, "[java.lang.Integer@0000000005]=ognl.OgnlOps.convertValue($3,java.lang.Object.class)");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }
}
