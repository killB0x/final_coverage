/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 14:04:50 GMT 2022
 */

package ognl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ognl.ASTProperty;
import ognl.DefaultClassResolver;
import ognl.DefaultTypeConverter;
import ognl.IteratorPropertyAccessor;
import ognl.MemberAccess;
import ognl.OgnlContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IteratorPropertyAccessor_ESTest extends IteratorPropertyAccessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, iteratorPropertyAccessor0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      ognlContext0.put(ognlContext0, (Object) null);
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.setProperty(ognlContext0, (Object) null, ognlContext0, defaultTypeConverter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      ASTProperty aSTProperty0 = new ASTProperty(116);
      DefaultClassResolver defaultClassResolver0 = new DefaultClassResolver();
      DefaultTypeConverter defaultTypeConverter0 = new DefaultTypeConverter();
      MemberAccess memberAccess0 = mock(MemberAccess.class, new ViolatedAssumptionAnswer());
      OgnlContext ognlContext0 = new OgnlContext(defaultClassResolver0, defaultTypeConverter0, memberAccess0);
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.setProperty(ognlContext0, (Object) null, aSTProperty0, "_keepLastEvaluation");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.ASTProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.getProperty((OgnlContext) null, iteratorPropertyAccessor0, iteratorPropertyAccessor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class ognl.IteratorPropertyAccessor cannot be cast to class java.util.Iterator (ognl.IteratorPropertyAccessor is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @79d431aa; java.util.Iterator is in module java.base of loader 'bootstrap')
         //
         verifyException("ognl.IteratorPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, "SL\"dp@Fk");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class ognl.OgnlRuntime
         //
         verifyException("ognl.ObjectPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, "hasNext");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.IteratorPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.getProperty((OgnlContext) null, (Object) null, "next");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ognl.IteratorPropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IteratorPropertyAccessor iteratorPropertyAccessor0 = new IteratorPropertyAccessor();
      // Undeclared exception!
      try { 
        iteratorPropertyAccessor0.setProperty((OgnlContext) null, (Object) null, (Object) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can't set property null on Iterator
         //
         verifyException("ognl.IteratorPropertyAccessor", e);
      }
  }
}
