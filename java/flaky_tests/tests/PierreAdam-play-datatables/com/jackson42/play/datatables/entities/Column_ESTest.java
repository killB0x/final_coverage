/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:56:34 GMT 2022
 */

package com.jackson42.play.datatables.entities;

import org.junit.Test;
import static org.junit.Assert.*;
import com.jackson42.play.datatables.entities.Column;
import com.jackson42.play.datatables.entities.Search;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Column_ESTest extends Column_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Column column0 = new Column();
      column0.setOrderable(true);
      boolean boolean0 = column0.isOrderable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Column column0 = new Column();
      Search search0 = new Search();
      search0.setRegex(true);
      column0.setSearch(search0);
      Search search1 = column0.getSearch();
      assertTrue(search1.isRegex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Column column0 = new Column();
      Search search0 = new Search();
      column0.setSearch(search0);
      Search search1 = column0.getSearch();
      assertFalse(search1.isRegex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Column column0 = new Column();
      column0.setName("");
      String string0 = column0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Column column0 = new Column();
      column0.setData(1941);
      int int0 = column0.getData();
      assertEquals(1941, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Column column0 = new Column();
      column0.setData((-1314));
      int int0 = column0.getData();
      assertEquals((-1314), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Column column0 = new Column();
      Search search0 = column0.getSearch();
      assertNull(search0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Search search0 = new Search();
      search0.setValue("");
      Column column0 = new Column();
      column0.setSearch(search0);
      boolean boolean0 = column0.hasSearch();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Column column0 = new Column();
      Search search0 = new Search();
      search0.setValue("com.jackson42.play.datatables.entities.Search");
      column0.setSearch(search0);
      boolean boolean0 = column0.hasSearch();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Column column0 = new Column();
      column0.setName("xi*L:NGPax%/'o*YY");
      String string0 = column0.getName();
      assertEquals("xi*L:NGPax%/'o*YY", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Column column0 = new Column();
      int int0 = column0.getData();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Column column0 = new Column();
      column0.setSearcheable(true);
      boolean boolean0 = column0.isSearcheable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Column column0 = new Column();
      boolean boolean0 = column0.isSearcheable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Column column0 = new Column();
      Search search0 = new Search();
      column0.setSearch(search0);
      boolean boolean0 = column0.hasSearch();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Column column0 = new Column();
      boolean boolean0 = column0.hasSearch();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Column column0 = new Column();
      String string0 = column0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Column column0 = new Column();
      boolean boolean0 = column0.isOrderable();
      assertFalse(boolean0);
  }
}
