/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:59:38 GMT 2022
 */

package com.jackson42.play.datatables.entities.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import com.jackson42.play.datatables.entities.internal.DataSource;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataSource_ESTest extends DataSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataSource<Object> dataSource0 = new DataSource<Object>(3095L, 885L, (List<Object>) null);
      assertEquals(3095L, dataSource0.getRecordsTotal());
      assertEquals(885L, dataSource0.getRecordsFiltered());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataSource<Integer> dataSource0 = new DataSource<Integer>();
      dataSource0.setRecordsTotal(885L);
      long long0 = dataSource0.getRecordsTotal();
      assertEquals(885L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      DataSource<Object> dataSource0 = new DataSource<Object>(0L, 0L, linkedList0);
      dataSource0.setRecordsTotal((-1L));
      long long0 = dataSource0.getRecordsTotal();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataSource<Integer> dataSource0 = new DataSource<Integer>();
      long long0 = dataSource0.getRecordsFiltered();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataSource<Object> dataSource0 = new DataSource<Object>();
      dataSource0.setRecordsFiltered((-1853L));
      long long0 = dataSource0.getRecordsFiltered();
      assertEquals((-1853L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataSource<Integer> dataSource0 = new DataSource<Integer>();
      List<Integer> list0 = dataSource0.getEntities();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = new Object();
      linkedList0.add(object0);
      DataSource<Object> dataSource0 = new DataSource<Object>(1L, 1L, linkedList0);
      dataSource0.getEntities();
      assertEquals(1L, dataSource0.getRecordsFiltered());
      assertEquals(1L, dataSource0.getRecordsTotal());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      DataSource<Object> dataSource0 = new DataSource<Object>(0L, 0L, linkedList0);
      long long0 = dataSource0.getRecordsTotal();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      DataSource<Object> dataSource0 = new DataSource<Object>(0L, 0L, linkedList0);
      dataSource0.setEntities(linkedList0);
      assertEquals(0L, dataSource0.getRecordsTotal());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      DataSource<Object> dataSource0 = new DataSource<Object>(0L, 0L, linkedList0);
      List<Object> list0 = dataSource0.getEntities();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      DataSource<Object> dataSource0 = new DataSource<Object>(1L, 1L, linkedList0);
      long long0 = dataSource0.getRecordsFiltered();
      assertEquals(1L, long0);
      assertEquals(1L, dataSource0.getRecordsTotal());
  }
}
