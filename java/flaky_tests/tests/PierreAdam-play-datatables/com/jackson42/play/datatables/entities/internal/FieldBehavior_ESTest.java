/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:58:14 GMT 2022
 */

package com.jackson42.play.datatables.entities.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.jackson42.play.datatables.entities.internal.FieldBehavior;
import com.jackson42.play.datatables.enumerations.OrderEnum;
import com.jackson42.play.datatables.implementations.BasicContext;
import com.jackson42.play.datatables.implementations.BasicPayload;
import com.jackson42.play.datatables.interfaces.Context;
import java.util.Optional;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldBehavior_ESTest extends FieldBehavior_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload> fieldBehavior0 = new FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload>();
      Optional<BiFunction<BasicContext<BasicPayload>, Context<BasicPayload>, String>> optional0 = fieldBehavior0.getDisplaySupplier();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldBehavior<BasicContext<BasicPayload>, BasicPayload, BasicPayload> fieldBehavior0 = new FieldBehavior<BasicContext<BasicPayload>, BasicPayload, BasicPayload>();
      Optional<BiConsumer<BasicPayload, OrderEnum>> optional0 = fieldBehavior0.getOrderHandler();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload> fieldBehavior0 = new FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload>();
      Optional<BiConsumer<BasicContext<BasicPayload>, String>> optional0 = fieldBehavior0.getSearchHandler();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload> fieldBehavior0 = new FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload>();
      BiConsumer<BasicContext<BasicPayload>, OrderEnum> biConsumer0 = (BiConsumer<BasicContext<BasicPayload>, OrderEnum>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload> fieldBehavior1 = fieldBehavior0.setOrderHandler(biConsumer0);
      assertSame(fieldBehavior1, fieldBehavior0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload> fieldBehavior0 = new FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload>();
      FieldBehavior<BasicContext<BasicPayload>, BasicContext<BasicPayload>, BasicPayload> fieldBehavior1 = fieldBehavior0.setSearchHandler((BiConsumer<BasicContext<BasicPayload>, String>) null);
      assertSame(fieldBehavior0, fieldBehavior1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FieldBehavior<BasicPayload, OrderEnum, BasicPayload> fieldBehavior0 = new FieldBehavior<BasicPayload, OrderEnum, BasicPayload>();
      FieldBehavior<BasicPayload, OrderEnum, BasicPayload> fieldBehavior1 = fieldBehavior0.setDisplaySupplier((BiFunction<BasicPayload, Context<BasicPayload>, String>) null);
      assertSame(fieldBehavior0, fieldBehavior1);
  }
}
