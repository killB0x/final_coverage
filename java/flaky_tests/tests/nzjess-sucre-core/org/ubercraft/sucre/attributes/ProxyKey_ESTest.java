/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 14:23:32 GMT 2022
 */

package org.ubercraft.sucre.attributes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.ThaiBuddhistDate;
import java.util.SimpleTimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import org.ubercraft.sucre.attributes.ProxyKey;
import org.ubercraft.sucre.coercer.Coercer;
import org.ubercraft.sucre.coercer.DateCoercer;
import org.ubercraft.sucre.reflect.Accessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProxyKey_ESTest extends ProxyKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey((Accessor) null, object0, false);
      boolean boolean0 = proxyKey0.isStrictCoerce();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey(accessor0, object0, object0, true);
      proxyKey0.getDefault();
      assertTrue(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(accessor0).toString();
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey(accessor0, object0, object0, true);
      proxyKey0.getAccessor();
      assertTrue(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey(accessor0, object0, object0, true);
      // Undeclared exception!
      try { 
        proxyKey0.getKey(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ubercraft.sucre.attributes.ProxyKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2084), "", (-2084), 0, (-2084), (-2084), (-2084), 0, 2171, 1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      DateCoercer dateCoercer0 = new DateCoercer(simpleTimeZone0, stringArray0);
      ProxyKey proxyKey0 = new ProxyKey(accessor0, object0, object0, dateCoercer0, true);
      assertTrue(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      ProxyKey proxyKey0 = new ProxyKey(accessor0, thaiBuddhistDate0, (Object) null, true);
      boolean boolean0 = proxyKey0.isStrictCoerce();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      ProxyKey proxyKey0 = new ProxyKey(accessor0, thaiBuddhistDate0, (Object) null, true);
      Object object0 = proxyKey0.getDefault();
      assertNull(object0);
      assertTrue(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey((Accessor) null, object0, false);
      proxyKey0.getNumKeys();
      assertFalse(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey((Accessor) null, object0, false);
      Coercer coercer0 = proxyKey0.getCoercer();
      assertFalse(proxyKey0.isStrictCoerce());
      assertNotNull(coercer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey((Accessor) null, object0, true);
      proxyKey0.getAccessor();
      assertTrue(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      ProxyKey proxyKey0 = new ProxyKey((Accessor) null, object0, (Coercer) null, false);
      assertFalse(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProxyKey proxyKey0 = new ProxyKey((Accessor) null, (Object) null);
      proxyKey0.getAttributeKeys();
      assertFalse(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      ProxyKey proxyKey0 = new ProxyKey(accessor0, thaiBuddhistDate0, (Object) null, true);
      Object object0 = proxyKey0.getKey(0);
      assertNotNull(object0);
      assertTrue(proxyKey0.isStrictCoerce());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Accessor accessor0 = mock(Accessor.class, new ViolatedAssumptionAnswer());
      ProxyKey proxyKey0 = new ProxyKey(accessor0, (Object) null, (Object) null);
      proxyKey0.getKey(0);
      assertFalse(proxyKey0.isStrictCoerce());
  }
}
