/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 14:18:19 GMT 2022
 */

package org.ubercraft.sucre.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.ubercraft.sucre.common.ReflectionUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReflectionUtil_ESTest extends ReflectionUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionUtil.newInstanceUnchecked((Class<? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ubercraft.sucre.common.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionUtil.isToStringMethod((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ubercraft.sucre.common.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionUtil.isHashCodeMethod((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ubercraft.sucre.common.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionUtil.isEqualsMethod((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ubercraft.sucre.common.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReflectionUtil reflectionUtil0 = new ReflectionUtil();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<String> class0 = String.class;
      String string0 = ReflectionUtil.newInstanceUnchecked((Class<? extends String>) class0);
      assertEquals("", string0);
  }
}
