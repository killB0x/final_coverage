/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 14:19:32 GMT 2022
 */

package org.ubercraft.sucre.coercer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.junit.runner.RunWith;
import org.ubercraft.sucre.coercer.DateCoercer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateCoercer_ESTest extends DateCoercer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DateCoercer dateCoercer0 = new DateCoercer(timeZone0, stringArray0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        dateCoercer0.coerce("", class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // could not parse as date: java.lang.String@0000000002
         //
         verifyException("org.ubercraft.sucre.coercer.DateCoercer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "M?";
      DateCoercer dateCoercer0 = new DateCoercer(timeZone0, stringArray0);
      Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
      Class<Object> class0 = Object.class;
      Date date1 = dateCoercer0.coerce(date0, class0, true);
      assertSame(date0, date1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DateCoercer dateCoercer0 = new DateCoercer((TimeZone) null, stringArray0);
      Class<Object> class0 = Object.class;
      Date date0 = dateCoercer0.coerce((Object) null, class0, true);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DateCoercer dateCoercer0 = new DateCoercer(timeZone0, stringArray0);
      Class<Object> class0 = Object.class;
      Date date0 = dateCoercer0.coerce("", class0, false);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "sLQ)Y[fT?kwCm!}sb";
      DateCoercer dateCoercer0 = null;
      try {
        dateCoercer0 = new DateCoercer((TimeZone) null, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'Q'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      String[] stringArray0 = new String[0];
      DateCoercer dateCoercer0 = null;
      try {
        dateCoercer0 = new DateCoercer(timeZone0, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must specify at least one date format
         //
         verifyException("org.ubercraft.sucre.coercer.DateCoercer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DateCoercer dateCoercer0 = null;
      try {
        dateCoercer0 = new DateCoercer((TimeZone) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // date format must not be null
         //
         verifyException("org.ubercraft.sucre.common.AssertUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DateCoercer dateCoercer0 = null;
      try {
        dateCoercer0 = new DateCoercer((TimeZone) null, (String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must specify at least one date format
         //
         verifyException("org.ubercraft.sucre.coercer.DateCoercer", e);
      }
  }
}
