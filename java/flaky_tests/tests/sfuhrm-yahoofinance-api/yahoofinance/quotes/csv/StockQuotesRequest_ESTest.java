/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 17:34:43 GMT 2022
 */

package yahoofinance.quotes.csv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import yahoofinance.quotes.csv.StockQuotesData;
import yahoofinance.quotes.csv.StockQuotesRequest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StockQuotesRequest_ESTest extends StockQuotesRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest("\"\"[!\"9&2");
      // Undeclared exception!
      try { 
        stockQuotesRequest0.parseCSVLine("\"\"\"\"\"[!$\"9&2");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest((String) null);
      // Undeclared exception!
      try { 
        stockQuotesRequest0.parseCSVLine((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest("\"\"\"\"\"\"\"\"\"\"\"\"-GX\"9,2");
      StockQuotesData stockQuotesData0 = stockQuotesRequest0.parseCSVLine("\"\"\"\"\"\"\"\"\"\"\"\"-GX\"9,2");
      assertNotNull(stockQuotesData0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest("\"\"\"\"\"\"\"\"\"\"\"\"-[SX\"9&2");
      StockQuotesData stockQuotesData0 = stockQuotesRequest0.parseCSVLine("\"\"\"\"\"\"\"\"\"\"\"\"\"-GX\"9,2");
      assertNotNull(stockQuotesData0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest("\"\"\"\"\"\"\"\"l\"\"\"\"[SX\"9&2");
      StockQuotesData stockQuotesData0 = stockQuotesRequest0.parseCSVLine("\"\"\"\"\"\"\"\"\"\"\"\"\"\"l}\"\"\"[SX~9&2");
      assertNotNull(stockQuotesData0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest("\"\"\"\"\"\"\"[!$\"9&2");
      // Undeclared exception!
      try { 
        stockQuotesRequest0.parseCSVLine("\"\"\"\"\"\"\"[!$\"9&2");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest(" ,\"");
      // Undeclared exception!
      try { 
        stockQuotesRequest0.parseCSVLine("\"N*0\">l&\"<.p*)c|");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StockQuotesRequest stockQuotesRequest0 = new StockQuotesRequest("$:HN=a3 ");
      // Undeclared exception!
      try { 
        stockQuotesRequest0.parseCSVLine("Uf");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
