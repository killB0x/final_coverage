/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 17:44:56 GMT 2022
 */

package yahoofinance.histquotes2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import yahoofinance.histquotes2.HistDividendsRequest;
import yahoofinance.histquotes2.HistoricalDividend;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HistDividendsRequest_ESTest extends HistDividendsRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(476, 476, 1);
      HistDividendsRequest histDividendsRequest0 = new HistDividendsRequest("0g", mockGregorianCalendar0, mockGregorianCalendar1);
      histDividendsRequest0.getResult();
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=2,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=0,HOUR_OF_DAY=20,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=476,MONTH=476,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=1,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=?,DST_OFFSET=?]", mockGregorianCalendar1.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      HistDividendsRequest histDividendsRequest0 = new HistDividendsRequest((String) null, mockGregorianCalendar0, mockGregorianCalendar0);
      try { 
        histDividendsRequest0.getResult();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HistDividendsRequest histDividendsRequest0 = new HistDividendsRequest("na!?Hl");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://query1.finance.yahoo.com/v1/test/getcrumb");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "`#?zh@7(*hi");
      MockDate mockDate0 = new MockDate();
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("https://finance.yahoo.com/quote/%5EGSPC/options");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "u*s6af=a$w}");
      HistDividendsRequest histDividendsRequest0 = new HistDividendsRequest("yahoofinance.histquotes2.HistDividendsRequest", mockDate0, mockDate0);
      try { 
        histDividendsRequest0.getResult();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: query1.finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HistDividendsRequest histDividendsRequest0 = null;
      try {
        histDividendsRequest0 = new HistDividendsRequest("na!?Hl", (Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HistDividendsRequest histDividendsRequest0 = null;
      try {
        histDividendsRequest0 = new HistDividendsRequest("P", (Calendar) null, (Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("yahoofinance.histquotes2.HistDividendsRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate(0, 0, 0, (-2037), (-2037));
      HistDividendsRequest histDividendsRequest0 = new HistDividendsRequest("Z=;'_1pMRWXIy", mockDate0, mockDate1);
      List<HistoricalDividend> list0 = histDividendsRequest0.getResult();
      assertTrue(list0.isEmpty());
  }
}
