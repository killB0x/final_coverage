/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 17:40:43 GMT 2022
 */

package yahoofinance.histquotes2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import yahoofinance.histquotes2.HistSplitsRequest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HistSplitsRequest_ESTest extends HistSplitsRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HistSplitsRequest histSplitsRequest0 = new HistSplitsRequest("3Qpbd");
      try { 
        histSplitsRequest0.getResult();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
      MockGregorianCalendar mockGregorianCalendar1 = (MockGregorianCalendar)HistSplitsRequest.DEFAULT_FROM;
      HistSplitsRequest histSplitsRequest0 = new HistSplitsRequest("M%][3@L", mockGregorianCalendar0, mockGregorianCalendar1);
      histSplitsRequest0.getResult();
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=0,HOUR_OF_DAY=20,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1899,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=6,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=1,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar1.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-7L));
      MockDate mockDate1 = new MockDate(0, 0, 0);
      HistSplitsRequest histSplitsRequest0 = new HistSplitsRequest("3Qpbd", mockDate1, mockDate0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://query1.finance.yahoo.com/v1/test/getcrumb");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("https://finance.yahoo.com/quote/%5EGSPC/options");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      HistSplitsRequest histSplitsRequest0 = new HistSplitsRequest("", mockDate0, mockDate0);
      try { 
        histSplitsRequest0.getResult();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: query1.finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HistSplitsRequest histSplitsRequest0 = null;
      try {
        histSplitsRequest0 = new HistSplitsRequest("yahoofinance.histquotes2.HistSplitsRequest", (Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HistSplitsRequest histSplitsRequest0 = null;
      try {
        histSplitsRequest0 = new HistSplitsRequest("aR4-CA8Yw#hN:{", (Calendar) null, (Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("yahoofinance.histquotes2.HistSplitsRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
      HistSplitsRequest histSplitsRequest0 = new HistSplitsRequest("M%][3@L", mockGregorianCalendar0, mockGregorianCalendar0);
      try { 
        histSplitsRequest0.getResult();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: finance.yahoo.com
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }
}
