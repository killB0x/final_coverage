/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 14:48:02 GMT 2022
 */

package com.github.dataprocessor.threadpool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.dataprocessor.threadpool.BlockRejectedExecutionHandler;
import com.github.dataprocessor.threadpool.NamedTaskThreadFactory;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BlockRejectedExecutionHandler_ESTest extends BlockRejectedExecutionHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlockRejectedExecutionHandler blockRejectedExecutionHandler0 = new BlockRejectedExecutionHandler();
      MockThread mockThread0 = new MockThread("pQU?");
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      LinkedBlockingQueue<Runnable> linkedBlockingQueue0 = new LinkedBlockingQueue<Runnable>();
      NamedTaskThreadFactory namedTaskThreadFactory0 = new NamedTaskThreadFactory("pQU?");
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(2100, 2100, 2100, timeUnit0, linkedBlockingQueue0, namedTaskThreadFactory0, blockRejectedExecutionHandler0);
      blockRejectedExecutionHandler0.rejectedExecution(mockThread0, threadPoolExecutor0);
      assertFalse(mockThread0.isInterrupted());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BlockRejectedExecutionHandler blockRejectedExecutionHandler0 = new BlockRejectedExecutionHandler();
      Thread thread0 = MockThread.currentThread();
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(649, 649, 441L, timeUnit0, priorityBlockingQueue0, blockRejectedExecutionHandler0);
      // Undeclared exception!
      try { 
        blockRejectedExecutionHandler0.rejectedExecution(thread0, threadPoolExecutor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Thread cannot be cast to class java.lang.Comparable (java.lang.Thread and java.lang.Comparable are in module java.base of loader 'bootstrap')
         //
         verifyException("java.util.concurrent.PriorityBlockingQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BlockRejectedExecutionHandler blockRejectedExecutionHandler0 = new BlockRejectedExecutionHandler();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(282, 282, 0L, timeUnit0, priorityBlockingQueue0);
      // Undeclared exception!
      try { 
        blockRejectedExecutionHandler0.rejectedExecution((Runnable) null, threadPoolExecutor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.PriorityBlockingQueue", e);
      }
  }
}
