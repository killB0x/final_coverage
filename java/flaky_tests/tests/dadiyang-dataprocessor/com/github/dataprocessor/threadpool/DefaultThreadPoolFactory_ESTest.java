/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 14:50:46 GMT 2022
 */

package com.github.dataprocessor.threadpool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.dataprocessor.threadpool.DefaultThreadPoolFactory;
import java.util.concurrent.ExecutorService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultThreadPoolFactory_ESTest extends DefaultThreadPoolFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultThreadPoolFactory defaultThreadPoolFactory0 = new DefaultThreadPoolFactory();
      // Undeclared exception!
      try { 
        defaultThreadPoolFactory0.createThreadPool(0, "com.github.dataprocessor.threadpool.DefaultThreadPoolFactory");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultThreadPoolFactory defaultThreadPoolFactory0 = new DefaultThreadPoolFactory();
      ExecutorService executorService0 = defaultThreadPoolFactory0.createThreadPool(204, "");
      assertNotNull(executorService0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultThreadPoolFactory defaultThreadPoolFactory0 = new DefaultThreadPoolFactory(0);
  }
}
