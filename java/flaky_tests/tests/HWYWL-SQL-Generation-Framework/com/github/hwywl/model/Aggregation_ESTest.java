/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 03:41:09 GMT 2022
 */

package com.github.hwywl.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.hwywl.model.Aggregation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Aggregation_ESTest extends Aggregation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = Aggregation.builder();
      Aggregation aggregation0 = aggregation_AggregationBuilder0.build();
      aggregation0.field = "Aggregation(field=null, aggregationMode=null, alias=null)";
      String string0 = aggregation0.getField();
      assertEquals("Aggregation(field=null, aggregationMode=null, alias=null)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation("", "", "");
      String string0 = aggregation0.getField();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      aggregation0.alias = "*R}xZ";
      String string0 = aggregation0.getAlias();
      assertEquals("*R}xZ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation("", "", "");
      String string0 = aggregation0.getAlias();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation("-1%D3M>b:?y(uelbo\"", "-1%D3M>b:?y(uelbo\"", "com.github.hwywl.model.Aggregation");
      assertEquals("-1%D3M>b:?y(uelbo\"", aggregation0.getAggregationMode());
      
      aggregation0.setAggregationMode("");
      aggregation0.getAggregationMode();
      assertEquals("", aggregation0.getAggregationMode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      boolean boolean0 = aggregation0.canEqual(aggregation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = Aggregation.builder();
      Aggregation aggregation0 = aggregation_AggregationBuilder0.build();
      boolean boolean0 = aggregation0.canEqual("Aggregation.AggregationBuilder(field=null, aggregationMode=, alias=od>X)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation("-1%D3M>b:?y(uelbo\"", "-1%D3M>b:?y(uelbo\"", "com.github.hwywl.model.Aggregation");
      String string0 = aggregation0.getAggregationMode();
      assertEquals("-1%D3M>b:?y(uelbo\"", string0);
      assertEquals("com.github.hwywl.model.Aggregation", aggregation0.getAlias());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = Aggregation.builder();
      Aggregation aggregation0 = aggregation_AggregationBuilder0.build();
      String string0 = aggregation0.getAlias();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      String string0 = aggregation0.getField();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      aggregation0.alias = "#MO5u;)GTq:<";
      Aggregation aggregation1 = new Aggregation();
      boolean boolean0 = aggregation0.equals(aggregation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      Aggregation aggregation1 = new Aggregation();
      assertTrue(aggregation1.equals((Object)aggregation0));
      
      aggregation1.setAlias("`\"qCAo\b.jbp:es");
      boolean boolean0 = aggregation0.equals(aggregation1);
      assertFalse(aggregation1.equals((Object)aggregation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      aggregation0.setAggregationMode("PD");
      Aggregation aggregation1 = new Aggregation();
      boolean boolean0 = aggregation0.equals(aggregation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      Aggregation aggregation1 = new Aggregation();
      assertTrue(aggregation1.equals((Object)aggregation0));
      
      aggregation1.setAggregationMode("4=ezxqa8T[e&/wWA<w}");
      boolean boolean0 = aggregation0.equals(aggregation1);
      assertFalse(aggregation1.equals((Object)aggregation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      Aggregation aggregation1 = new Aggregation("]v2D`|7^vW&D", "]v2D`|7^vW&D", "]v2D`|7^vW&D");
      boolean boolean0 = aggregation1.equals(aggregation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation("gkPhOADK", "gkPhOADK", "gkPhOADK");
      Aggregation aggregation1 = new Aggregation("gkPhOADK", "gkPhOADK", "gkPhOADK");
      boolean boolean0 = aggregation0.equals(aggregation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      boolean boolean0 = aggregation0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      boolean boolean0 = aggregation0.equals(aggregation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      aggregation0.setAlias("");
      aggregation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      aggregation0.aggregationMode = "3*Me$";
      aggregation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = Aggregation.builder();
      Aggregation aggregation0 = aggregation_AggregationBuilder0.build();
      aggregation0.field = "Aggregation(field=null, aggregationMode=null, alias=null)";
      aggregation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = new Aggregation.AggregationBuilder();
      Aggregation aggregation0 = aggregation_AggregationBuilder0.build();
      String string0 = aggregation0.getAggregationMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = new Aggregation.AggregationBuilder();
      aggregation_AggregationBuilder0.alias("");
      Aggregation aggregation0 = aggregation_AggregationBuilder0.build();
      Aggregation aggregation1 = aggregation_AggregationBuilder0.build();
      boolean boolean0 = aggregation1.equals(aggregation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = new Aggregation.AggregationBuilder();
      Aggregation.AggregationBuilder aggregation_AggregationBuilder1 = aggregation_AggregationBuilder0.field("");
      assertSame(aggregation_AggregationBuilder1, aggregation_AggregationBuilder0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = new Aggregation.AggregationBuilder();
      Aggregation.AggregationBuilder aggregation_AggregationBuilder1 = aggregation_AggregationBuilder0.aggregationMode("");
      Aggregation aggregation0 = aggregation_AggregationBuilder1.build();
      Aggregation aggregation1 = aggregation_AggregationBuilder1.build();
      boolean boolean0 = aggregation1.equals(aggregation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      String string0 = aggregation0.toString();
      assertEquals("Aggregation(field=null, aggregationMode=null, alias=null)", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      aggregation0.setField("0$gEe.s+-B$");
      assertEquals("0$gEe.s+-B$", aggregation0.getField());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Aggregation.AggregationBuilder aggregation_AggregationBuilder0 = Aggregation.builder();
      String string0 = aggregation_AggregationBuilder0.toString();
      assertEquals("Aggregation.AggregationBuilder(field=null, aggregationMode=null, alias=null)", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Aggregation aggregation0 = new Aggregation();
      Aggregation aggregation1 = new Aggregation("I2<@nL{", "I2<@nL{", "I2<@nL{");
      boolean boolean0 = aggregation0.equals(aggregation1);
      assertFalse(boolean0);
  }
}
