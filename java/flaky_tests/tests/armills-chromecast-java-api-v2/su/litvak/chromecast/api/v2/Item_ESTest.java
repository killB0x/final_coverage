/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 27 19:23:51 GMT 2022
 */

package su.litvak.chromecast.api.v2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import su.litvak.chromecast.api.v2.Item;
import su.litvak.chromecast.api.v2.Media;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Item_ESTest extends Item_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(false, hashMap0, 0L, (Media) null);
      Item item1 = new Item(false, hashMap0, (-436L), (Media) null);
      // Undeclared exception!
      try { 
        item0.equals(item1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("su.litvak.chromecast.api.v2.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(true, hashMap0, 1712L, (Media) null);
      Item item1 = new Item(true, item0.customData, (-2246L), (Media) null);
      // Undeclared exception!
      try { 
        item1.equals(item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("su.litvak.chromecast.api.v2.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(false, hashMap0, 0L, (Media) null);
      Media media0 = new Media("", "");
      Item item1 = new Item(false, item0.customData, 0L, media0);
      boolean boolean0 = item0.equals(item1);
      assertFalse(boolean0);
      assertFalse(item1.autoplay);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Media media0 = new Media("", "");
      Item item0 = new Item(false, hashMap0, 4155L, media0);
      Item item1 = new Item(false, hashMap0, 4155L, media0);
      boolean boolean0 = item0.equals(item1);
      assertFalse(item1.autoplay);
      assertEquals(4155L, item1.id);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Media media0 = new Media("Item{id: %s, media: %s}", "Item{id: %s, media: %s}");
      Item item0 = new Item(true, hashMap0, (-1167L), media0);
      Item item1 = new Item(true, (Map<String, Object>) null, 4155L, media0);
      boolean boolean0 = item0.equals(item1);
      assertEquals(4155L, item1.id);
      assertFalse(item1.equals((Object)item0));
      assertTrue(item1.autoplay);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Media media0 = new Media("Item{id: %s, media: %s}", "Item{id: %s, media: %s}");
      Item item0 = new Item(true, hashMap0, (-1167L), media0);
      Item item1 = new Item(true, (Map<String, Object>) null, 4155L, media0);
      boolean boolean0 = item1.equals(item0);
      assertTrue(item1.autoplay);
      assertFalse(boolean0);
      assertEquals(4155L, item1.id);
      assertTrue(item0.equals((Object)item1));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Item item0 = new Item(true, (Map<String, Object>) null, 590L, (Media) null);
      Item item1 = new Item(true, (Map<String, Object>) null, 3128L, (Media) null);
      boolean boolean0 = item0.equals(item1);
      assertTrue(boolean0);
      assertTrue(item1.autoplay);
      assertEquals(3128L, item1.id);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Media media0 = new Media("Item{id: %s, media: %s}", "Item{id: %s, media: %s}");
      Item item0 = new Item(true, hashMap0, (-1167L), media0);
      Item item1 = new Item(false, hashMap0, 4155L, item0.media);
      boolean boolean0 = item0.equals(item1);
      assertTrue(item0.autoplay);
      assertTrue(boolean0);
      assertEquals(4155L, item1.id);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(false, hashMap0, 0L, (Media) null);
      Item item1 = new Item(false, item0.customData, 0L, item0.media);
      boolean boolean0 = item0.equals(item1);
      assertFalse(item1.autoplay);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(true, hashMap0, 1712L, (Media) null);
      Object object0 = new Object();
      boolean boolean0 = item0.equals(object0);
      assertTrue(item0.autoplay);
      assertFalse(boolean0);
      assertEquals(1712L, item0.id);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(false, hashMap0, (-939L), (Media) null);
      boolean boolean0 = item0.equals((Object) null);
      assertFalse(boolean0);
      assertFalse(item0.autoplay);
      assertEquals((-939L), item0.id);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(true, hashMap0, 1712L, (Media) null);
      boolean boolean0 = item0.equals(item0);
      assertTrue(item0.autoplay);
      assertEquals(1712L, item0.id);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(false, hashMap0, 0L, (Media) null);
      String string0 = item0.toString();
      assertFalse(item0.autoplay);
      assertEquals("Item{id: 0, media: null}", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Item item0 = new Item(false, hashMap0, 0L, (Media) null);
      item0.hashCode();
      assertFalse(item0.autoplay);
  }
}
