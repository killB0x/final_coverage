/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 27 19:29:27 GMT 2022
 */

package su.litvak.chromecast.api.v2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import su.litvak.chromecast.api.v2.Util;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Util_ESTest extends Util_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = Util.toArray(0);
      int int0 = Util.fromArray(byteArray0);
      assertEquals(0, int0);
      assertEquals(4, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = Util.toArray(2529);
      int int0 = Util.fromArray(byteArray0);
      assertEquals(4, byteArray0.length);
      assertEquals(2529, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Util.fromArray((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("su.litvak.chromecast.api.v2.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Util.fromArray(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("su.litvak.chromecast.api.v2.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = Util.toArray((-125));
      int int0 = Util.fromArray(byteArray0);
      assertEquals((-125), int0);
      assertEquals(4, byteArray0.length);
  }
}
