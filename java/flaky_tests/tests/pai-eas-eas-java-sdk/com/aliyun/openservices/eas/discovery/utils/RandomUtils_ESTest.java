/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:27:16 GMT 2022
 */

package com.aliyun.openservices.eas.discovery.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aliyun.openservices.eas.discovery.utils.JVMRandom;
import com.aliyun.openservices.eas.discovery.utils.RandomUtils;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomUtils_ESTest extends RandomUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      RandomUtils.nextFloat((Random) jVMRandom0);
      long long0 = RandomUtils.nextLong((Random) jVMRandom0);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomUtils.nextDouble();
      MockRandom mockRandom0 = new MockRandom(63);
      long long0 = RandomUtils.nextLong((Random) mockRandom0);
      assertEquals((-2147483648L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      RandomUtils.nextFloat((Random) jVMRandom0);
      int int0 = RandomUtils.nextInt((Random) jVMRandom0, 488);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomUtils.nextDouble();
      int int0 = RandomUtils.nextInt((Random) jVMRandom0, 2807);
      assertEquals((-2333), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      RandomUtils.nextFloat((Random) jVMRandom0);
      int int0 = RandomUtils.nextInt((Random) jVMRandom0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomUtils.nextDouble();
      int int0 = RandomUtils.nextInt((Random) jVMRandom0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      RandomUtils.nextFloat((Random) jVMRandom0);
      int int0 = RandomUtils.nextInt(488);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomUtils.nextDouble();
      int int0 = RandomUtils.nextInt(903);
      assertEquals((-653), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      RandomUtils.nextFloat((Random) jVMRandom0);
      int int0 = RandomUtils.nextInt();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomUtils.nextDouble();
      RandomUtils.nextLong();
      RandomUtils.nextFloat((Random) jVMRandom0);
      int int0 = RandomUtils.nextInt();
      assertEquals((-2147483646), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      float float0 = RandomUtils.nextFloat((Random) jVMRandom0);
      float float1 = RandomUtils.nextFloat((Random) jVMRandom0);
      assertNotEquals(float1, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      float float0 = RandomUtils.nextFloat((Random) jVMRandom0);
      float float1 = RandomUtils.nextFloat();
      assertNotEquals(float1, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomUtils.nextDouble();
      float float0 = RandomUtils.nextFloat();
      assertEquals((-0.8F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      double double0 = RandomUtils.nextDouble();
      double double1 = RandomUtils.nextDouble((Random) jVMRandom0);
      assertNotEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomUtils.nextDouble();
      double double0 = RandomUtils.nextDouble();
      assertEquals((-0.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtils.nextLong((Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.eas.discovery.utils.RandomUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtils.nextInt((Random) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.eas.discovery.utils.RandomUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtils.nextInt((Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.eas.discovery.utils.RandomUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtils.nextInt(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtils.nextFloat((Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.eas.discovery.utils.RandomUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtils.nextDouble((Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.eas.discovery.utils.RandomUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtils.nextBoolean((Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aliyun.openservices.eas.discovery.utils.RandomUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      int int0 = RandomUtils.nextInt((Random) jVMRandom0, 1873);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      int int0 = RandomUtils.nextInt((Random) jVMRandom0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      double double0 = RandomUtils.nextDouble((Random) jVMRandom0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      long long0 = RandomUtils.nextLong((Random) jVMRandom0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RandomUtils randomUtils0 = new RandomUtils();
      // Undeclared exception!
      try { 
        RandomUtils.nextInt(randomUtils0.JVM_RANDOM, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = RandomUtils.nextBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = RandomUtils.nextInt(1873);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      float float0 = RandomUtils.nextFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = RandomUtils.nextDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = RandomUtils.nextInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      boolean boolean0 = RandomUtils.nextBoolean((Random) jVMRandom0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      long long0 = RandomUtils.nextLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JVMRandom jVMRandom0 = (JVMRandom)RandomUtils.JVM_RANDOM;
      RandomUtils.nextFloat((Random) jVMRandom0);
      double double0 = RandomUtils.nextDouble((Random) jVMRandom0);
      assertEquals(0.1, double0, 0.01);
  }
}
