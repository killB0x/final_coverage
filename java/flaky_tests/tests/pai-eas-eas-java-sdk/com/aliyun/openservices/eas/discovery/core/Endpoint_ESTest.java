/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:26:35 GMT 2022
 */

package com.aliyun.openservices.eas.discovery.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.aliyun.openservices.eas.discovery.core.Endpoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Endpoint_ESTest extends Endpoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setWeight(1286);
      int int0 = endpoint0.getWeight();
      assertEquals(1286, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setWeight((-718));
      int int0 = endpoint0.getWeight();
      assertEquals((-718), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setPort(260);
      int int0 = endpoint0.getPort();
      assertEquals(260, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setPort((-718));
      int int0 = endpoint0.getPort();
      assertEquals((-718), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setIp("null:0");
      endpoint0.getIp();
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setIp("");
      endpoint0.getIp();
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setApp("null:0");
      endpoint0.getApp();
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.setApp("");
      endpoint0.getApp();
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      int int0 = endpoint0.getPort();
      assertEquals(0, int0);
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.getIp();
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      String string0 = endpoint0.toInetAddr();
      assertEquals("null:0", string0);
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      endpoint0.getApp();
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      assertTrue(endpoint0.isValid());
      
      endpoint0.setValid(false);
      boolean boolean0 = endpoint0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      String string0 = endpoint0.toString();
      assertEquals("null:0", string0);
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      int int0 = endpoint0.getWeight();
      assertEquals(0, int0);
      assertTrue(endpoint0.isValid());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Endpoint endpoint0 = new Endpoint();
      boolean boolean0 = endpoint0.isValid();
      assertTrue(boolean0);
  }
}
