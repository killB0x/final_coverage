/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:24:18 GMT 2022
 */

package com.aliyun.openservices.eas.discovery.backups;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aliyun.openservices.eas.discovery.backups.FailoverReactor;
import com.aliyun.openservices.eas.discovery.core.Service;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FailoverReactor_ESTest extends FailoverReactor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/admin/discovery-failover/DISCOVERY_FAILOVER_SWITCH");
      byte[] byteArray0 = new byte[5];
      System.setCurrentTimeMillis((-3347L));
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FailoverReactor.SwitchRefresher failoverReactor_SwitchRefresher0 = failoverReactor0.new SwitchRefresher();
      failoverReactor_SwitchRefresher0.run();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      FailoverReactor.DiskFileWriter failoverReactor_DiskFileWriter0 = failoverReactor0.new DiskFileWriter();
      // Undeclared exception!
      try { 
        failoverReactor_DiskFileWriter0.run();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.aliyun.openservices.eas.discovery.core.HostReactor
         //
         verifyException("com.aliyun.openservices.eas.discovery.backups.FailoverReactor$DiskFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      System.setCurrentTimeMillis(0L);
      Service service0 = failoverReactor0.getDom("com.aliyun.eas.log.filename");
      assertEquals("", service0.getJsonFromServer());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      System.setCurrentTimeMillis((-1L));
      Service service0 = failoverReactor0.getDom("");
      assertEquals("", service0.getJsonFromServer());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      // Undeclared exception!
      try { 
        failoverReactor0.init();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer already cancelled.
         //
         verifyException("java.util.Timer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      System.setCurrentTimeMillis((-1126L));
      // Undeclared exception!
      try { 
        failoverReactor0.init();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal execution time.
         //
         verifyException("java.util.Timer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      // Undeclared exception!
      try { 
        failoverReactor0.getDom((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      // Undeclared exception!
      try { 
        failoverReactor0.addDay((Date) null, (-1596));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-826L));
      FailoverReactor failoverReactor0 = null;
      try {
        failoverReactor0 = new FailoverReactor();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal execution time.
         //
         verifyException("java.util.Timer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/admin/discovery-failover/DISCOVERY_FAILOVER_SWITCH");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FailoverReactor failoverReactor0 = new FailoverReactor();
      FailoverReactor.FailoverFileReader failoverReactor_FailoverFileReader0 = failoverReactor0.new FailoverFileReader();
      failoverReactor_FailoverFileReader0.run();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/admin/discovery-failover/DISCOVERY_FAILOVER_SWITCH");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      FailoverReactor failoverReactor0 = new FailoverReactor();
      FailoverReactor.FailoverFileReader failoverReactor_FailoverFileReader0 = failoverReactor0.new FailoverFileReader();
      failoverReactor_FailoverFileReader0.run();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/admin/discovery-failover");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "%xM<TZ51l.C]QA9wMu");
      FailoverReactor failoverReactor0 = new FailoverReactor();
      FailoverReactor.FailoverFileReader failoverReactor_FailoverFileReader0 = failoverReactor0.new FailoverFileReader();
      // Undeclared exception!
      try { 
        failoverReactor_FailoverFileReader0.run();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.aliyun.openservices.eas.discovery.core.DiscoveryClient
         //
         verifyException("com.aliyun.openservices.eas.discovery.backups.FailoverReactor$FailoverFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/admin/discovery-failover/DISCOVERY_FAILOVER_SWITCH");
      byte[] byteArray0 = new byte[4];
      System.setCurrentTimeMillis(0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FailoverReactor.SwitchRefresher failoverReactor_SwitchRefresher0 = failoverReactor0.new SwitchRefresher();
      failoverReactor_SwitchRefresher0.run();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      failoverReactor0.getDom("S{*d{R2");
      MockDate mockDate0 = new MockDate(1, 1, 2, 2, 2766);
      failoverReactor0.addDay(mockDate0, 2766);
      // Undeclared exception!
      try { 
        failoverReactor0.init();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer already cancelled.
         //
         verifyException("java.util.Timer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FailoverReactor failoverReactor0 = new FailoverReactor();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/admin/discovery-failover/DISCOVERY_FAILOVER_SWITCH");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FailoverReactor.SwitchRefresher failoverReactor_SwitchRefresher0 = failoverReactor0.new SwitchRefresher();
      // Undeclared exception!
      try { 
        failoverReactor_SwitchRefresher0.run();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.aliyun.openservices.eas.discovery.core.DiscoveryClient
         //
         verifyException("com.aliyun.openservices.eas.discovery.backups.FailoverReactor$SwitchRefresher", e);
      }
  }
}
