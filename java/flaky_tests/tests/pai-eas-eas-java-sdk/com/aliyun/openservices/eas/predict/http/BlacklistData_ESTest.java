/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:27:27 GMT 2022
 */

package com.aliyun.openservices.eas.predict.http;

import org.junit.Test;
import static org.junit.Assert.*;
import com.aliyun.openservices.eas.predict.http.BlacklistData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BlacklistData_ESTest extends BlacklistData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlacklistData blacklistData0 = new BlacklistData(2635L, 1);
      assertEquals(2635L, blacklistData0.getTimestamp());
      
      blacklistData0.setTimestamp(0L);
      blacklistData0.getTimestamp();
      assertEquals(1, blacklistData0.getCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BlacklistData blacklistData0 = new BlacklistData((-555L), 141);
      long long0 = blacklistData0.getTimestamp();
      assertEquals((-555L), long0);
      assertEquals(141, blacklistData0.getCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BlacklistData blacklistData0 = new BlacklistData(0L, 0);
      int int0 = blacklistData0.getCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BlacklistData blacklistData0 = new BlacklistData((-555L), 141);
      blacklistData0.setCount((-1));
      int int0 = blacklistData0.getCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BlacklistData blacklistData0 = new BlacklistData(2635L, 1);
      long long0 = blacklistData0.getTimestamp();
      assertEquals(1, blacklistData0.getCount());
      assertEquals(2635L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BlacklistData blacklistData0 = new BlacklistData(2635L, 1);
      int int0 = blacklistData0.getCount();
      assertEquals(2635L, blacklistData0.getTimestamp());
      assertEquals(1, int0);
  }
}
