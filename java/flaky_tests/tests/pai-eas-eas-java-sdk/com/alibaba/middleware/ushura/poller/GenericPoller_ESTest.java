/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:29:55 GMT 2022
 */

package com.alibaba.middleware.ushura.poller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.middleware.ushura.poller.GenericPoller;
import com.alibaba.middleware.ushura.poller.Poller;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericPoller_ESTest extends GenericPoller_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Integer integer0 = new Integer(2159);
      linkedList0.add((Object) integer0);
      GenericPoller<Object> genericPoller0 = new GenericPoller<Object>(linkedList0);
      genericPoller0.next();
      Object object0 = genericPoller0.next();
      assertEquals(2159, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) null);
      GenericPoller<Object> genericPoller0 = new GenericPoller<Object>(linkedList0);
      Object object0 = genericPoller0.next();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      GenericPoller<Object> genericPoller0 = new GenericPoller<Object>(linkedList0);
      Object object0 = new Object();
      linkedList0.addLast(object0);
      Object object1 = genericPoller0.next();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(781);
      linkedList0.add(integer0);
      List<Integer> list0 = linkedList0.subList(1, 1);
      linkedList0.add(integer0);
      GenericPoller<Integer> genericPoller0 = new GenericPoller<Integer>(list0);
      // Undeclared exception!
      try { 
        genericPoller0.next();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GenericPoller<Object> genericPoller0 = new GenericPoller<Object>((List<Object>) null);
      // Undeclared exception!
      try { 
        genericPoller0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.poller.GenericPoller", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      GenericPoller<Object> genericPoller0 = new GenericPoller<Object>(linkedList0);
      Poller<Object> poller0 = genericPoller0.refresh(linkedList0);
      assertNotNull(poller0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      GenericPoller<Object> genericPoller0 = new GenericPoller<Object>(linkedList0);
      // Undeclared exception!
      try { 
        genericPoller0.next();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.alibaba.middleware.ushura.poller.GenericPoller", e);
      }
  }
}
