/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 08:15:45 GMT 2022
 */

package com.alibaba.middleware.ushura.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.middleware.ushura.util.ThreadLocalRandom;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThreadLocalRandom_ESTest extends ThreadLocalRandom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextDouble((double) (-2146665869), (double) (-2146665869));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextDouble(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // n must be positive
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextLong(3494782238245372185L, 2147483647L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      long long0 = threadLocalRandom0.nextLong(2147483647L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextLong(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // n must be positive
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextInt(0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      long long0 = ThreadLocalRandom.getInitialSeedUniquifier();
      assertEquals(3627065505421648153L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      threadLocalRandom0.initialized = false;
      threadLocalRandom0.setSeed(1L);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      long long0 = threadLocalRandom0.nextLong((-1L), 124L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      long long0 = threadLocalRandom0.nextLong((-355L), 0L);
      assertEquals((-354L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      long long0 = threadLocalRandom0.nextLong(1L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      int int0 = threadLocalRandom0.nextInt(0, 2045);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      int int0 = threadLocalRandom0.nextInt((-1), 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      Random.setNextRandom(0);
      double double0 = threadLocalRandom0.nextDouble((double) 0, (double) 52076313421L);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      double double0 = threadLocalRandom0.nextDouble((-384.7833378527), 1866.4848);
      assertEquals((-159.65652406743), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Random.setNextRandom(49);
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      double double0 = threadLocalRandom0.nextDouble((double) 49);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      int int0 = threadLocalRandom0.next(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      int int0 = threadLocalRandom0.next((-918));
      assertEquals(629327406, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      int int0 = threadLocalRandom0.next((-2910));
      assertEquals((-786070842), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      long long0 = threadLocalRandom0.nextLong(52076313454L);
      assertEquals(8136923979L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      ThreadLocalRandom threadLocalRandom1 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom1);
      assertFalse(threadLocalRandom1.equals((Object)threadLocalRandom0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      long long0 = ThreadLocalRandom.getInitialSeedUniquifier();
      assertEquals(3494782238245372185L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextDouble(0.0, (-3418.063126601));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      double double0 = threadLocalRandom0.nextDouble(0.0, 1.0);
      assertEquals(0.1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextDouble((-5257.16166752));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // n must be positive
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      assertNotNull(threadLocalRandom0);
      
      double double0 = threadLocalRandom0.nextDouble((double) 49);
      assertEquals(4.9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      assertNotNull(threadLocalRandom0);
      
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextLong(2024L, 2024L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextLong((-1099L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // n must be positive
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      // Undeclared exception!
      try { 
        threadLocalRandom0.nextInt(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = new ThreadLocalRandom();
      int int0 = threadLocalRandom0.nextInt(0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      // Undeclared exception!
      try { 
        threadLocalRandom0.setSeed(498L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.middleware.ushura.util.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ThreadLocalRandom.setInitialSeedUniquifier((-1266L));
      long long0 = ThreadLocalRandom.getInitialSeedUniquifier();
      assertEquals((-1266L), long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ThreadLocalRandom threadLocalRandom0 = ThreadLocalRandom.current();
      long long0 = threadLocalRandom0.nextLong((long) 49, 181783497276652981L);
      assertEquals(31884838300973308L, long0);
  }
}
