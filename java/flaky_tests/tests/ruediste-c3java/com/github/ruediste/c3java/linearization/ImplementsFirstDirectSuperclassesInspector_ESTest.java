/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 03:42:39 GMT 2022
 */

package com.github.ruediste.c3java.linearization;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.ruediste.c3java.linearization.ImplementsFirstDirectSuperclassesInspector;
import com.github.ruediste.c3java.linearization.ImplementsOnlyDirectSuperclassesInspector;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImplementsFirstDirectSuperclassesInspector_ESTest extends ImplementsFirstDirectSuperclassesInspector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImplementsFirstDirectSuperclassesInspector implementsFirstDirectSuperclassesInspector0 = (ImplementsFirstDirectSuperclassesInspector)ImplementsFirstDirectSuperclassesInspector.INSTANCE;
      // Undeclared exception!
      try { 
        implementsFirstDirectSuperclassesInspector0.directParentClasses((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.ruediste.c3java.linearization.ImplementsFirstDirectSuperclassesInspector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImplementsOnlyDirectSuperclassesInspector implementsOnlyDirectSuperclassesInspector0 = (ImplementsOnlyDirectSuperclassesInspector)ImplementsOnlyDirectSuperclassesInspector.INSTANCE;
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        implementsOnlyDirectSuperclassesInspector0.directParentClasses(class0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImplementsFirstDirectSuperclassesInspector implementsFirstDirectSuperclassesInspector0 = new ImplementsFirstDirectSuperclassesInspector();
      Class<Integer> class0 = Integer.class;
      List<Class<?>> list0 = implementsFirstDirectSuperclassesInspector0.directParentClasses(class0);
      assertEquals(2, list0.size());
      assertNotNull(list0);
  }
}
