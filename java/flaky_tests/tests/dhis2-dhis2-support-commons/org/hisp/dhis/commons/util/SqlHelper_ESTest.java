/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 06:04:41 GMT 2022
 */

package org.hisp.dhis.commons.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hisp.dhis.commons.util.SqlHelper;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SqlHelper_ESTest extends SqlHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper();
      String string0 = sqlHelper0.or();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper();
      String string0 = sqlHelper0.whereOr();
      assertEquals("where", string0);
      
      String string1 = sqlHelper0.or();
      assertEquals("or", string1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper(true);
      String string0 = sqlHelper0.or();
      assertEquals("  ", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper(true);
      String string0 = sqlHelper0.and();
      assertEquals("  ", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper(true);
      String string0 = sqlHelper0.whereOr();
      assertEquals(" where ", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper();
      String string0 = sqlHelper0.and();
      assertEquals("", string0);
      
      String string1 = sqlHelper0.whereOr();
      assertEquals("or", string1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper();
      String string0 = sqlHelper0.whereOr();
      assertEquals("where", string0);
      
      String string1 = sqlHelper0.and();
      assertEquals("and", string1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper(true);
      String string0 = sqlHelper0.whereAnd();
      assertEquals(" where ", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SqlHelper sqlHelper0 = new SqlHelper();
      String string0 = sqlHelper0.whereAnd();
      assertEquals("where", string0);
      
      String string1 = sqlHelper0.whereAnd();
      assertEquals("and", string1);
  }
}
