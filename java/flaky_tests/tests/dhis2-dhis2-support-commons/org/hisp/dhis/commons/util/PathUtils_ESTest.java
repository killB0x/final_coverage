/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 06:11:02 GMT 2022
 */

package org.hisp.dhis.commons.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hisp.dhis.commons.util.PathUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathUtils_ESTest extends PathUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = PathUtils.getParent("/null");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = PathUtils.getClassPath("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathUtils.getParent((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hisp.dhis.commons.util.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathUtils.getClassPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hisp.dhis.commons.util.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathUtils.getClassPath((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hisp.dhis.commons.util.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathUtils.addChild((String) null, "#RQ-N(TwQ(A#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = PathUtils.addChild("Pi]K+$kZhh>9r.=hUE/", "K~q;h-f.k");
      assertEquals("Pi]K+$kZhh>9r.=hUE/K~q;h-f.k", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = PathUtils.addChild("", (String) null);
      assertEquals("/null", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = PathUtils.getParent("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = PathUtils.getParent("Pi]K+$kZhh>9r.=hUE/");
      assertNotNull(string0);
      assertEquals("Pi]K+$kZhh>9r.=hUE", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = PathUtils.getClassPath("DQ4");
      assertEquals("DQ4", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Object> class0 = Object.class;
      String string0 = PathUtils.getClassPath(class0);
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PathUtils pathUtils0 = new PathUtils();
  }
}
