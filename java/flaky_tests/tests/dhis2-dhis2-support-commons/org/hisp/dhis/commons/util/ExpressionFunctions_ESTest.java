/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 06:03:20 GMT 2022
 */

package org.hisp.dhis.commons.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParseException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hisp.dhis.commons.util.ExpressionFunctions;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExpressionFunctions_ESTest extends ExpressionFunctions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Number[] numberArray0 = new Number[12];
      Short short0 = Short.valueOf((short)33);
      numberArray0[1] = (Number) short0;
      Integer integer0 = ExpressionFunctions.zpvc(numberArray0);
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = Integer.getInteger("org.hisp.dhis.commons.util.ExpressionFunctions", 1239);
      Double double0 = ExpressionFunctions.oizp(integer0);
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Short short0 = Short.valueOf((short)97);
      Double double0 = ExpressionFunctions.zing(short0);
      assertEquals(97.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExpressionFunctions.daysBetween((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExpressionFunctions.condition("", "", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/jexl2/JexlContext
         //
         verifyException("org.hisp.dhis.commons.util.ExpressionFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Number[] numberArray0 = new Number[12];
      Long long0 = Long.getLong("[.hV2S", (-1L));
      numberArray0[0] = (Number) long0;
      Integer integer0 = ExpressionFunctions.zpvc(numberArray0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Double double0 = ExpressionFunctions.zing(integer0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Number[] numberArray0 = new Number[4];
      numberArray0[0] = (Number) double0;
      Integer integer1 = ExpressionFunctions.zpvc(numberArray0);
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Number[] numberArray0 = new Number[0];
      // Undeclared exception!
      try { 
        ExpressionFunctions.zpvc(numberArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is null or empty: [Ljava.lang.Number;@4d67819e
         //
         verifyException("org.hisp.dhis.commons.util.ExpressionFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExpressionFunctions.zpvc((Number[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is null or empty: null
         //
         verifyException("org.hisp.dhis.commons.util.ExpressionFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = Long.getLong("[.hV2S", (-1L));
      Double double0 = ExpressionFunctions.oizp(long0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = ExpressionFunctions.oizp((Number) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = ExpressionFunctions.zing((Number) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Double double0 = ExpressionFunctions.zing(integer0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Double double1 = ExpressionFunctions.oizp(double0);
      assertNotNull(double1);
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExpressionFunctions expressionFunctions0 = new ExpressionFunctions();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        ExpressionFunctions.daysBetween("t", (String) null);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable date: \"t\"
         //
         verifyException("java.text.DateFormat", e);
      }
  }
}
