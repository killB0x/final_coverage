/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 06:16:03 GMT 2022
 */

package org.hisp.dhis.commons.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.Callable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hisp.dhis.commons.collection.CachingMap;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CachingMap_ESTest extends CachingMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CachingMap<Integer, Integer> cachingMap0 = new CachingMap<Integer, Integer>();
      Integer integer0 = new Integer(1);
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      cachingMap0.get(integer0, callable0);
      assertFalse(cachingMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CachingMap<Integer, Integer> cachingMap0 = new CachingMap<Integer, Integer>();
      Integer integer0 = new Integer(3790);
      // Undeclared exception!
      try { 
        cachingMap0.get(integer0, (Callable<Integer>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.hisp.dhis.commons.collection.CachingMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CachingMap<Integer, Integer> cachingMap0 = new CachingMap<Integer, Integer>();
      Integer integer0 = new Integer(907);
      cachingMap0.put(integer0, integer0);
      Integer integer1 = cachingMap0.get(integer0, (Callable<Integer>) null);
      assertEquals(907, (int)integer1);
  }
}
