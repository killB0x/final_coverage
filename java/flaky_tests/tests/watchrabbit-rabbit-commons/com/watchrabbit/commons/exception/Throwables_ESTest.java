/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 03:57:34 GMT 2022
 */

package com.watchrabbit.commons.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.watchrabbit.commons.callback.CheckedConsumer;
import com.watchrabbit.commons.callback.CheckedPredicate;
import com.watchrabbit.commons.exception.Throwables;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Throwables_ESTest extends Throwables_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CheckedConsumer<MockRuntimeException> checkedConsumer0 = (CheckedConsumer<MockRuntimeException>) mock(CheckedConsumer.class, new ViolatedAssumptionAnswer());
      Consumer<MockRuntimeException> consumer0 = Throwables.propagateFromConsumer(checkedConsumer0);
      assertNotNull(consumer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CheckedConsumer<Object> checkedConsumer0 = (CheckedConsumer<Object>) mock(CheckedConsumer.class, new ViolatedAssumptionAnswer());
      Throwables.ExceptionWrapper<MockRuntimeException> throwables_ExceptionWrapper0 = (Throwables.ExceptionWrapper<MockRuntimeException>) mock(Throwables.ExceptionWrapper.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer0 = Throwables.propagate(checkedConsumer0, throwables_ExceptionWrapper0);
      assertNotNull(consumer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CheckedPredicate<Object> checkedPredicate0 = (CheckedPredicate<Object>) mock(CheckedPredicate.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate0 = Throwables.suppress(false, checkedPredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckedPredicate<Object> checkedPredicate0 = (CheckedPredicate<Object>) mock(CheckedPredicate.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate0 = Throwables.propagateFromPredicate(checkedPredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CheckedPredicate<Throwables> checkedPredicate0 = (CheckedPredicate<Throwables>) mock(CheckedPredicate.class, new ViolatedAssumptionAnswer());
      Throwables.ExceptionWrapper<MockRuntimeException> throwables_ExceptionWrapper0 = (Throwables.ExceptionWrapper<MockRuntimeException>) mock(Throwables.ExceptionWrapper.class, new ViolatedAssumptionAnswer());
      Predicate<Throwables> predicate0 = Throwables.propagate(checkedPredicate0, throwables_ExceptionWrapper0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Throwables throwables0 = new Throwables();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Consumer<Throwables> consumer0 = Throwables.suppress((CheckedConsumer<Throwables>) null);
      assertNotNull(consumer0);
  }
}
