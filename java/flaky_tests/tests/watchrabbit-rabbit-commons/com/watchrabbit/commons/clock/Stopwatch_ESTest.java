/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 03:55:58 GMT 2022
 */

package com.watchrabbit.commons.clock;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.watchrabbit.commons.callback.VoidCallable;
import com.watchrabbit.commons.clock.Stopwatch;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Stopwatch_ESTest extends Stopwatch_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VoidCallable voidCallable0 = mock(VoidCallable.class, new ViolatedAssumptionAnswer());
      Stopwatch stopwatch0 = Stopwatch.create(voidCallable0);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      System.setCurrentTimeMillis(0L);
      Stopwatch stopwatch1 = stopwatch0.start();
      long long0 = stopwatch1.getExecutionTime(timeUnit0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Stopwatch stopwatch0 = new Stopwatch();
      // Undeclared exception!
      try { 
        stopwatch0.start();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.watchrabbit.commons.clock.Stopwatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VoidCallable voidCallable0 = mock(VoidCallable.class, new ViolatedAssumptionAnswer());
      Stopwatch stopwatch0 = Stopwatch.createStarted(voidCallable0);
      // Undeclared exception!
      try { 
        stopwatch0.getExecutionTime((TimeUnit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.watchrabbit.commons.clock.Stopwatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Stopwatch stopwatch0 = new Stopwatch();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      // Undeclared exception!
      try { 
        stopwatch0.getExecutionTime(timeUnit0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't return execution time if Stopwatch wasn't started
         //
         verifyException("com.watchrabbit.commons.clock.Stopwatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        Stopwatch.createStarted((VoidCallable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.watchrabbit.commons.clock.Stopwatch", e);
      }
  }
}
