/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 21:56:59 GMT 2022
 */

package org.openhim.mediator.engine.messages;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.openhim.mediator.engine.messages.SendHeartbeatToCore;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SendHeartbeatToCore_ESTest extends SendHeartbeatToCore_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SendHeartbeatToCore sendHeartbeatToCore0 = new SendHeartbeatToCore(2407L, false);
      long long0 = sendHeartbeatToCore0.getUptimeSeconds();
      assertEquals(2407L, long0);
      assertFalse(sendHeartbeatToCore0.getForceConfig());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SendHeartbeatToCore sendHeartbeatToCore0 = new SendHeartbeatToCore(0L);
      boolean boolean0 = sendHeartbeatToCore0.getForceConfig();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SendHeartbeatToCore sendHeartbeatToCore0 = new SendHeartbeatToCore((-1L));
      long long0 = sendHeartbeatToCore0.getUptimeSeconds();
      assertFalse(sendHeartbeatToCore0.getForceConfig());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SendHeartbeatToCore sendHeartbeatToCore0 = new SendHeartbeatToCore(0L, true);
      sendHeartbeatToCore0.getUptimeSeconds();
      assertTrue(sendHeartbeatToCore0.getForceConfig());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SendHeartbeatToCore sendHeartbeatToCore0 = new SendHeartbeatToCore(0L, true);
      boolean boolean0 = sendHeartbeatToCore0.getForceConfig();
      assertTrue(boolean0);
  }
}
