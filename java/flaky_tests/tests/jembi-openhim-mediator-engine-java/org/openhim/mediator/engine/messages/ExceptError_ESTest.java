/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 21:55:32 GMT 2022
 */

package org.openhim.mediator.engine.messages;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.openhim.mediator.engine.messages.ExceptError;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExceptError_ESTest extends ExceptError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ExceptError exceptError0 = new ExceptError(mockThrowable0);
      Object object0 = exceptError0.getOriginalRequest();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      ExceptError exceptError0 = new ExceptError(object0, (Throwable) null);
      Throwable throwable0 = exceptError0.getError();
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ExceptError exceptError0 = new ExceptError(mockThrowable0);
      Throwable throwable0 = exceptError0.getError();
      assertSame(mockThrowable0, throwable0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      ExceptError exceptError0 = new ExceptError(object0, (Throwable) null);
      Object object1 = exceptError0.getOriginalRequest();
      assertSame(object0, object1);
  }
}
