/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 12:40:10 GMT 2022
 */

package com.kvn.poi.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.kvn.poi.exception.PoiElErrorCode;
import com.kvn.poi.exception.PoiElException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PoiElErrorCode_ESTest extends PoiElErrorCode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.valueOf("ILLEGAL_PARAM");
      assertEquals(1999, poiElErrorCode0.getCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.valueOf("TEMPLATE_FILE_NOT_FOUND");
      assertEquals(PoiElErrorCode.TEMPLATE_FILE_NOT_FOUND, poiElErrorCode0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.EXCEL_FILE_NOT_FOUND;
      int int0 = poiElErrorCode0.getCode();
      assertEquals(1003, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.EXCEL_FILE_NOT_FOUND;
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        poiElErrorCode0.expMsg("AcX^%{5zg", objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unmatched braces in the pattern.
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PoiElErrorCode[] poiElErrorCodeArray0 = PoiElErrorCode.values();
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.ILLEGAL_PARAM;
      // Undeclared exception!
      try { 
        poiElErrorCode0.expMsg((String) null, (Throwable) null, (Object[]) poiElErrorCodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.TAG_NOT_FOUND;
      PoiElException poiElException0 = poiElErrorCode0.exp();
      // Undeclared exception!
      try { 
        poiElErrorCode0.expMsg("FR{Y&zSOWl}G>@c", (Throwable) poiElException0, (Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can't parse argument number: Y&zSOWl
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.NOT_FOUND_IN_ROOTOBJECT;
      Object[] objectArray0 = new Object[0];
      PoiElException poiElException0 = poiElErrorCode0.expMsg("", objectArray0);
      Object[] objectArray1 = new Object[1];
      PoiElException poiElException1 = poiElErrorCode0.expMsg("", (Throwable) poiElException0, objectArray1);
      assertNotSame(poiElException0, poiElException1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.NOT_FOUND_IN_ROOTOBJECT;
      Object[] objectArray0 = new Object[4];
      PoiElException poiElException0 = poiElErrorCode0.exp(objectArray0);
      assertNotNull(poiElException0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.NOT_FOUND_IN_ROOTOBJECT;
      poiElErrorCode0.setMsg("com.kvn.poi.exception.PoiElException");
      assertEquals(41, poiElErrorCode0.getCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.NOT_FOUND_IN_ROOTOBJECT;
      poiElErrorCode0.setCode(40);
      assertEquals(40, poiElErrorCode0.getCode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.TAG_NOT_FOUND;
      PoiElException poiElException0 = poiElErrorCode0.exp();
      Object[] objectArray0 = new Object[0];
      PoiElException poiElException1 = poiElErrorCode0.exp((Throwable) poiElException0, objectArray0);
      assertNotSame(poiElException1, poiElException0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.NOT_FOUND_IN_ROOTOBJECT;
      String string0 = poiElErrorCode0.getMsg();
      assertEquals("\u6CA1\u6709\u5728RootObject\u4E2D\u627E\u5230{0}\u5BF9\u5E94\u7684\u503C", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PoiElErrorCode poiElErrorCode0 = PoiElErrorCode.NOT_FOUND_IN_ROOTOBJECT;
      int int0 = poiElErrorCode0.getCode();
      assertEquals(1004, int0);
  }
}
