/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 01:11:47 GMT 2022
 */

package com.google.common.plus;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.plus.Maths;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Maths_ESTest extends Maths_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Set<Integer> set0 = hashMap0.keySet();
      Integer integer0 = new Integer((-1610));
      hashMap0.put(integer0, integer0);
      Long long0 = Maths.sum(set0);
      assertEquals((-1610L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Set<Integer> set0 = hashMap0.keySet();
      Integer integer0 = new Integer((-1610));
      hashMap0.put(integer0, integer0);
      Double double0 = Maths.average(set0);
      assertEquals((-1610.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Maths.sum((Iterable<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.plus.Maths", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PriorityQueue<Integer> priorityQueue0 = new PriorityQueue<Integer>(1);
      Integer integer0 = new Integer(1);
      priorityQueue0.add(integer0);
      Long long0 = Maths.sum(priorityQueue0);
      assertEquals(1L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PriorityQueue<Integer> priorityQueue0 = new PriorityQueue<Integer>(1);
      Long long0 = Maths.sum(priorityQueue0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      Integer integer0 = new Integer(0);
      hashSet0.add(integer0);
      Double double0 = Maths.average(hashSet0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      Double double0 = Maths.average(hashSet0);
      assertEquals(Double.NaN, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        Maths.average((Collection<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.plus.Maths", e);
      }
  }
}
