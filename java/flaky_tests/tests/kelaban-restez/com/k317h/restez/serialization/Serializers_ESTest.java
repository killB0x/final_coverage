/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 01:47:56 GMT 2022
 */

package com.k317h.restez.serialization;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.k317h.restez.serialization.Serializers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Serializers_ESTest extends Serializers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Serializers serializers0 = new Serializers(false);
      byte[] byteArray0 = new byte[0];
      Serializers.Serializer serializers_Serializer0 = mock(Serializers.Serializer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) byteArray0, (Object) byteArray0, (Object) null).when(serializers_Serializer0).serialize(any());
      Serializers serializers1 = serializers0.registerDefaultSerializer(serializers_Serializer0);
      Object object0 = new Object();
      serializers0.serialize(object0, "cZ'rW&MrZpkAV");
      serializers1.serialize(object0, "^$#n^e");
      byte[] byteArray1 = serializers1.serializeDefault((Object) null);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Serializers serializers0 = new Serializers();
      byte[] byteArray0 = new byte[0];
      Serializers.Serializer serializers_Serializer0 = mock(Serializers.Serializer.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(serializers_Serializer0).serialize(any());
      Serializers serializers1 = serializers0.registerDefaultSerializer(serializers_Serializer0);
      byte[] byteArray1 = serializers0.serializeDefault(serializers1);
      assertSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Serializers serializers0 = new Serializers(false);
      byte[] byteArray0 = serializers0.serialize(serializers0, "com.k317h.restez.errors.RestezApiException");
      assertEquals(53, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Serializers serializers0 = new Serializers();
      // Undeclared exception!
      try { 
        serializers0.serializeDefault((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Serializers serializers0 = new Serializers();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        serializers0.serialize(object0, "V.U2~*qgfXxi");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Serializer for 'V.U2~*qgfXxi' does not exist
         //
         verifyException("com.k317h.restez.serialization.Serializers", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Serializers serializers0 = new Serializers(false);
      // Undeclared exception!
      try { 
        serializers0.serialize((Object) null, "com.k317h.restez.errors.RestezApiException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Serializers serializers0 = new Serializers();
      Serializers.Serializer serializers_Serializer0 = mock(Serializers.Serializer.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(serializers_Serializer0).serialize(any());
      Serializers serializers1 = serializers0.registerSerializer("1Qm", serializers_Serializer0);
      byte[] byteArray0 = serializers0.serialize(serializers1, "1Qm");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Serializers serializers0 = new Serializers();
      byte[] byteArray0 = serializers0.serializeDefault(serializers0);
      assertEquals(53, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Serializers serializers0 = new Serializers();
      Serializers serializers1 = serializers0.registerJsonSerializer((Serializers.Serializer) null);
      assertSame(serializers0, serializers1);
  }
}
