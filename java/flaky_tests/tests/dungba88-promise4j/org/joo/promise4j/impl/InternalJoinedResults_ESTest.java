/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 15:47:09 GMT 2022
 */

package org.joo.promise4j.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joo.promise4j.impl.InternalJoinedResults;
import org.joo.promise4j.impl.JoinedResults;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InternalJoinedResults_ESTest extends InternalJoinedResults_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InternalJoinedResults<Object> internalJoinedResults0 = new InternalJoinedResults<Object>(0);
      JoinedResults<Object> joinedResults0 = internalJoinedResults0.toJoinedResults();
      assertEquals(0, joinedResults0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InternalJoinedResults<Object> internalJoinedResults0 = new InternalJoinedResults<Object>(434);
      // Undeclared exception!
      try { 
        internalJoinedResults0.set((-1549), (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1549 out of bounds for length 434
         //
         verifyException("java.util.concurrent.CopyOnWriteArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InternalJoinedResults<Integer> internalJoinedResults0 = null;
      try {
        internalJoinedResults0 = new InternalJoinedResults<Integer>((-1681));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // List length = -1681
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InternalJoinedResults<Object> internalJoinedResults0 = new InternalJoinedResults<Object>(434);
      Integer integer0 = new Integer((-1549));
      internalJoinedResults0.set(0, integer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InternalJoinedResults<Object> internalJoinedResults0 = new InternalJoinedResults<Object>(2668);
      JoinedResults<Object> joinedResults0 = internalJoinedResults0.toJoinedResults();
      assertEquals(2668, joinedResults0.size());
  }
}
