/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 07:28:53 GMT 2022
 */

package org.jdbcdslog;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.DriverPropertyInfo;
import java.sql.SQLException;
import java.sql.SQLFeatureNotSupportedException;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdbcdslog.DriverLoggingProxy;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DriverLoggingProxy_ESTest extends DriverLoggingProxy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      // Undeclared exception!
      try { 
        driverLoggingProxy0.getPropertyInfo("W(JU$=Ru%`8FS", (Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.DriverLoggingProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      DriverLoggingProxy.logger = null;
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        driverLoggingProxy0.connect("jdbc:jdbcdslog:ering driver", properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.DriverLoggingProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      boolean boolean0 = driverLoggingProxy0.acceptsURL("jdbc:jdbcdslog:*4q");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      Properties properties0 = new Properties();
      try { 
        driverLoggingProxy0.connect(" hOf$Ipm", properties0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Invalid URL hOf$Ipm
         //
         verifyException("org.jdbcdslog.DriverLoggingProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      boolean boolean0 = driverLoggingProxy0.acceptsURL("a?iK>?m}uazwW\"su");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      Properties properties0 = new Properties();
      try { 
        driverLoggingProxy0.connect("jdbc:jdbcdslog:ering driver", properties0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Can't find targetDriver parameter in URL: jdbc:ering driver
         //
         verifyException("org.jdbcdslog.DriverLoggingProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      boolean boolean0 = driverLoggingProxy0.acceptsURL((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      try { 
        driverLoggingProxy0.getParentLogger();
        fail("Expecting exception: SQLFeatureNotSupportedException");
      
      } catch(SQLFeatureNotSupportedException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.DriverLoggingProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      int int0 = driverLoggingProxy0.getMinorVersion();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      Properties properties0 = new Properties();
      DriverPropertyInfo[] driverPropertyInfoArray0 = driverLoggingProxy0.getPropertyInfo((String) null, properties0);
      assertEquals(6, driverPropertyInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      int int0 = driverLoggingProxy0.getMajorVersion();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DriverLoggingProxy driverLoggingProxy0 = new DriverLoggingProxy();
      boolean boolean0 = driverLoggingProxy0.jdbcCompliant();
      assertFalse(boolean0);
  }
}
