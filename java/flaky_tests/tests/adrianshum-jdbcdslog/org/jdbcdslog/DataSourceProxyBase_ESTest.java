/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 07:17:45 GMT 2022
 */

package org.jdbcdslog;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.sql.SQLFeatureNotSupportedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdbcdslog.ConnectionPoolDataSourceProxy;
import org.jdbcdslog.ConnectionPoolXADataSourceProxy;
import org.jdbcdslog.DataSourceProxy;
import org.jdbcdslog.DataSourceProxyBase;
import org.jdbcdslog.XADataSourceProxy;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataSourceProxyBase_ESTest extends DataSourceProxyBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      connectionPoolDataSourceProxy0.setDatabase("=6URI@G");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      xADataSourceProxy0.targetDs = (Object) "org.jdbcdslog.SlowQueryLogger";
      xADataSourceProxy0.setServerName("6URI@G");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      Object object0 = new Object();
      Class<Object> class0 = Object.class;
      connectionPoolDataSourceProxy0.invokeTargetSetMethod("", object0, class0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionPoolXADataSourceProxy connectionPoolXADataSourceProxy0 = new ConnectionPoolXADataSourceProxy();
      connectionPoolXADataSourceProxy0.setURL(" Qgem");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataSourceProxyBase dataSourceProxyBase0 = new DataSourceProxyBase();
      dataSourceProxyBase0.setTargetDSDirect((Object) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "";
      dataSourceProxy0.setServiceName("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "targetDS";
      dataSourceProxy0.setUser("O");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "setServerName";
      dataSourceProxy0.setTNSEntryName("setServerName");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      connectionPoolDataSourceProxy0.targetDs = (Object) dataSourceProxy0;
      connectionPoolDataSourceProxy0.setPortNumber(231);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      connectionPoolDataSourceProxy0.propClasses = null;
      // Undeclared exception!
      try { 
        connectionPoolDataSourceProxy0.setPassword((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      xADataSourceProxy0.targetDs = (Object) "setTargetDS(): targetDS initialized.";
      xADataSourceProxy0.setNetworkProtocol("setTargetDS(): targetDS initialized.");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "Can't load class of targetDS.";
      dataSourceProxy0.setDriverType("/;X:h#?ckLXjDeAdzD@");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConnectionPoolXADataSourceProxy connectionPoolXADataSourceProxy0 = new ConnectionPoolXADataSourceProxy();
      connectionPoolXADataSourceProxy0.props = null;
      // Undeclared exception!
      try { 
        connectionPoolXADataSourceProxy0.setDatabaseName("q,ifv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataSourceProxyBase dataSourceProxyBase0 = new DataSourceProxyBase();
      dataSourceProxyBase0.props = null;
      // Undeclared exception!
      try { 
        dataSourceProxyBase0.setDataSourceName("[,l$GOjd(KF[lm>XZn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "Ouji";
      Class<Object> class0 = Object.class;
      dataSourceProxy0.invokeTargetSetMethod("HUHi-<J+Ux.#", "HUHi-<J+Ux.#", class0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      connectionPoolDataSourceProxy0.setTargetDS("org.jdbcdslog.DataSourceProxy");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      connectionPoolDataSourceProxy0.targetDs = (Object) "org.jdbcdslog.ConnectionPoolXADataSourceProxy";
      connectionPoolDataSourceProxy0.setDescription("org.jdbcdslog.ConnectionPoolXADataSourceProxy");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      try { 
        xADataSourceProxy0.getPooledConnection("seTargetS(): targetDS iiialized.", "seTargetS(): targetDS iiialized.");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS parameter has not been passed to Database or URL property.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      try { 
        connectionPoolDataSourceProxy0.getPooledConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS parameter has not been passed to Database or URL property.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "-";
      try { 
        dataSourceProxy0.getXAConnection("-", "-");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't implement XADataSource interface.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      try { 
        xADataSourceProxy0.getXAConnection("x,Ohh|NpbYusw8~5-uH", "x,Ohh|NpbYusw8~5-uH");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS parameter has not been passed to Database or URL property.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      try { 
        connectionPoolDataSourceProxy0.getXAConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS parameter has not been passed to Database or URL property.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      xADataSourceProxy0.targetDs = (Object) "org.jdbcdslog.SlowQueryLogger";
      try { 
        xADataSourceProxy0.getXAConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't implement XADataSource interface.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      try { 
        xADataSourceProxy0.setLoginTimeout((-1843165864));
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't have setLogWriter() method
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      try { 
        connectionPoolDataSourceProxy0.setLogWriter((PrintWriter) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't have setLogWriter() method
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      try { 
        connectionPoolDataSourceProxy0.getLoginTimeout();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't have getLogTimeout() method
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConnectionPoolXADataSourceProxy connectionPoolXADataSourceProxy0 = new ConnectionPoolXADataSourceProxy();
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      connectionPoolXADataSourceProxy0.targetDs = (Object) xADataSourceProxy0;
      try { 
        connectionPoolXADataSourceProxy0.getConnection("23u", "23u");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS parameter has not been passed to Database or URL property.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "";
      try { 
        dataSourceProxy0.getConnection("", "ErSdLhai0vp_@EdN1 w");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't implement DataSource interface.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      try { 
        xADataSourceProxy0.getConnection("org.jdbcdslog.ConnectionPoolDataSourceProxy", "org.jdbcdslog.ConnectionPoolDataSourceProxy");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS parameter has not been passed to Database or URL property.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      try { 
        connectionPoolDataSourceProxy0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS parameter has not been passed to Database or URL property.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "x.u^2a+STE";
      try { 
        dataSourceProxy0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't implement DataSource interface.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      xADataSourceProxy0.targetDs = (Object) "org.jdbcdslog.LogMetaData";
      try { 
        xADataSourceProxy0.getPooledConnection("org.jdbcdslog.LogMetaData", "org.jdbcdslog.LogMetaData");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't implement ConnectionPoolDataSource interface.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.targetDs = (Object) "";
      try { 
        dataSourceProxy0.getPooledConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't implement ConnectionPoolDataSource interface.
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      try { 
        connectionPoolDataSourceProxy0.getLogWriter();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // targetDS doesn't have getLogWriter() method
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      Class<XADataSourceProxy> class0 = XADataSourceProxy.class;
      boolean boolean0 = xADataSourceProxy0.isWrapperFor(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DataSourceProxyBase dataSourceProxyBase0 = new DataSourceProxyBase();
      dataSourceProxyBase0.setPassword("org.jdbcdslog.DataSourceProxy");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.setTargetDSDirect(xADataSourceProxy0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DataSourceProxyBase dataSourceProxyBase0 = new DataSourceProxyBase();
      dataSourceProxyBase0.setServerName((String) null);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      xADataSourceProxy0.setNetworkProtocol("");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      try { 
        connectionPoolDataSourceProxy0.getParentLogger();
        fail("Expecting exception: SQLFeatureNotSupportedException");
      
      } catch(SQLFeatureNotSupportedException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.DataSourceProxyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConnectionPoolXADataSourceProxy connectionPoolXADataSourceProxy0 = new ConnectionPoolXADataSourceProxy();
      Class<Object> class0 = Object.class;
      Object object0 = connectionPoolXADataSourceProxy0.unwrap(class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.setTNSEntryName("setServerName");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DataSourceProxyBase dataSourceProxyBase0 = new DataSourceProxyBase();
      dataSourceProxyBase0.setUser("org.jdbcdslog.DataSourceProxy");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XADataSourceProxy xADataSourceProxy0 = new XADataSourceProxy();
      xADataSourceProxy0.setServiceName("org.jdbcdslog.SlowQueryLogger");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DataSourceProxyBase dataSourceProxyBase0 = new DataSourceProxyBase();
      dataSourceProxyBase0.setDriverType("[,l$GOjd(KF[lm>XZn");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DataSourceProxyBase dataSourceProxyBase0 = new DataSourceProxyBase();
      dataSourceProxyBase0.setDataSourceName((String) null);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.setDatabaseName("targetDS");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DataSourceProxy dataSourceProxy0 = new DataSourceProxy();
      dataSourceProxy0.setDescription((String) null);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ConnectionPoolDataSourceProxy connectionPoolDataSourceProxy0 = new ConnectionPoolDataSourceProxy();
      connectionPoolDataSourceProxy0.setPortNumber(231);
  }
}
