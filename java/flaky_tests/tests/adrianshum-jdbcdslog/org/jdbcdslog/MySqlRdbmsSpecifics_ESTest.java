/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 07:31:08 GMT 2022
 */

package org.jdbcdslog;

import org.junit.Test;
import static org.junit.Assert.*;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.Instant;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jdbcdslog.MySqlRdbmsSpecifics;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MySqlRdbmsSpecifics_ESTest extends MySqlRdbmsSpecifics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MySqlRdbmsSpecifics mySqlRdbmsSpecifics0 = new MySqlRdbmsSpecifics();
      MockDate mockDate0 = new MockDate(0, 0, 1233, 1233, (-1892), 0);
      String string0 = mySqlRdbmsSpecifics0.formatParameter(mockDate0);
      assertEquals("'1903-07-07'", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MySqlRdbmsSpecifics mySqlRdbmsSpecifics0 = new MySqlRdbmsSpecifics();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalTime localTime0 = MockLocalTime.now((ZoneId) zoneOffset0);
      Time time0 = Time.valueOf(localTime0);
      String string0 = mySqlRdbmsSpecifics0.formatParameter(time0);
      assertEquals("'14:21:21'", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MySqlRdbmsSpecifics mySqlRdbmsSpecifics0 = new MySqlRdbmsSpecifics();
      Instant instant0 = MockInstant.ofEpochSecond((-1L), (-1L));
      Timestamp timestamp0 = Timestamp.from(instant0);
      String string0 = mySqlRdbmsSpecifics0.formatParameter(timestamp0);
      assertEquals("'1969-12-31 23:59:58'", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MySqlRdbmsSpecifics mySqlRdbmsSpecifics0 = new MySqlRdbmsSpecifics();
      String string0 = mySqlRdbmsSpecifics0.formatParameter("null");
      assertEquals("'null'", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MySqlRdbmsSpecifics mySqlRdbmsSpecifics0 = new MySqlRdbmsSpecifics();
      String string0 = mySqlRdbmsSpecifics0.formatParameter((Object) null);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MySqlRdbmsSpecifics mySqlRdbmsSpecifics0 = new MySqlRdbmsSpecifics();
      String string0 = mySqlRdbmsSpecifics0.formatParameter(mySqlRdbmsSpecifics0);
      assertNotNull(string0);
  }
}
