/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 07:22:37 GMT 2022
 */

package org.jdbcdslog;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.sql.Statement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.jdbcdslog.LogMetaData;
import org.jdbcdslog.StatementLoggingHandler;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StatementLoggingHandler_ESTest extends StatementLoggingHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      LogMetaData logMetaData1 = LogMetaData.create();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, statement0);
      // Undeclared exception!
      try { 
        statementLoggingHandler0.doAfterInvoke(logMetaData1, (Method) null, (Object[]) null, logMetaData0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.StatementLoggingHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, statement0);
      StringBuilder stringBuilder0 = new StringBuilder(1);
      Object object0 = new Object();
      statementLoggingHandler0.appendStatement(stringBuilder0, object0, (Method) null, (Object[]) null);
      //  // Unstable assertion: assertEquals("76", logMetaData0.getConnectionId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, statement0);
      StringBuilder stringBuilder0 = new StringBuilder(1);
      statementLoggingHandler0.doAddBatch((Object) null, (Method) null, (Object[]) null);
      statementLoggingHandler0.appendBatchStatements(stringBuilder0);
      //  // Unstable assertion: assertEquals(";", stringBuilder0.toString());
      //  // Unstable assertion: assertEquals("66", logMetaData0.getConnectionId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      LogMetaData logMetaData0 = LogMetaData.create();
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, (Statement) null);
      MockThrowable mockThrowable0 = new MockThrowable();
      try { 
        statementLoggingHandler0.handleException(mockThrowable0, mockThrowable0, (Method) null, objectArray0);
        fail("Expecting exception: Throwable");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Object[] objectArray0 = new Object[0];
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, (Statement) null);
      try { 
        statementLoggingHandler0.handleException((Throwable) null, logMetaData0, (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.LogUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      LogMetaData logMetaData0 = LogMetaData.create();
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, (Statement) null);
      // Undeclared exception!
      try { 
        statementLoggingHandler0.appendStatement((StringBuilder) null, logMetaData0, (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Object[] objectArray0 = new Object[1];
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, (Statement) null);
      try { 
        statementLoggingHandler0.invoke((Object) null, (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, (Statement) null);
      Object object0 = new Object();
      try { 
        statementLoggingHandler0.invoke(object0, (Method) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.StatementLoggingHandlerTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, statement0);
      Object[] objectArray0 = new Object[0];
      statementLoggingHandler0.doAddBatch(logMetaData0, (Method) null, objectArray0);
      // Undeclared exception!
      try { 
        statementLoggingHandler0.appendBatchStatements((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdbcdslog.StatementLoggingHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, statement0);
      statementLoggingHandler0.appendBatchStatements((StringBuilder) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Object[] objectArray0 = new Object[1];
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, (Statement) null);
      // Undeclared exception!
      try { 
        statementLoggingHandler0.doAddBatch((Object) null, (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, statement0);
      Object[] objectArray0 = new Object[0];
      statementLoggingHandler0.doAddBatch(logMetaData0, (Method) null, objectArray0);
      Statement statement1 = statementLoggingHandler0.target;
      statementLoggingHandler0.doAddBatch(statement1, (Method) null, objectArray0);
      //  // Unstable assertion: assertEquals("5", logMetaData0.getConnectionId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LogMetaData logMetaData0 = LogMetaData.create();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatementLoggingHandler statementLoggingHandler0 = new StatementLoggingHandler(logMetaData0, statement0);
      Object[] objectArray0 = new Object[0];
      boolean boolean0 = statementLoggingHandler0.needsLogging(logMetaData0, (Method) null, objectArray0);
      assertEquals("1", logMetaData0.getConnectionId());
      assertFalse(boolean0);
  }
}
