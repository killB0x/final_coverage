/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 22:25:32 GMT 2022
 */

package uk.ziglio.construct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ziglio.construct.Adapters;
import uk.ziglio.construct.Macros;
import uk.ziglio.construct.core.Construct;
import uk.ziglio.construct.core.PassClass;
import uk.ziglio.construct.core.Reconfig;
import uk.ziglio.construct.core.Sequence;
import uk.ziglio.construct.core.Value;
import uk.ziglio.construct.interfaces.Validator;
import uk.ziglio.construct.lib.BitStream;
import uk.ziglio.construct.lib.ByteBufferWrapper;
import uk.ziglio.construct.lib.Containers;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Adapter_ESTest extends Adapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PassClass passClass0 = PassClass.getInstance();
      Adapters.PaddingAdapter adapters_PaddingAdapter0 = new Adapters.PaddingAdapter(passClass0, (byte)0, true);
      Validator validator0 = mock(Validator.class, new ViolatedAssumptionAnswer());
      Adapters.ValidatorAdapter adapters_ValidatorAdapter0 = new Adapters.ValidatorAdapter(passClass0, validator0);
      Construct[] constructArray0 = new Construct[7];
      constructArray0[0] = (Construct) passClass0;
      constructArray0[1] = (Construct) adapters_ValidatorAdapter0;
      constructArray0[2] = (Construct) adapters_ValidatorAdapter0;
      constructArray0[3] = (Construct) adapters_PaddingAdapter0;
      constructArray0[4] = (Construct) adapters_ValidatorAdapter0;
      constructArray0[5] = (Construct) adapters_ValidatorAdapter0;
      constructArray0[6] = (Construct) passClass0;
      Sequence sequence0 = new Sequence("", constructArray0);
      Integer[] integerArray0 = new Integer[8];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(8);
      adapters_PaddingAdapter0._build(sequence0, byteArrayOutputStream0, containers_Container0);
      assertEquals(8, Construct.FLAG_NESTING);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Value<Integer> value0 = new Value<Integer>();
      Macros.Padding macros_Padding0 = new Macros.Padding((String) null, 2);
      Construct[] constructArray0 = new Construct[3];
      constructArray0[0] = (Construct) value0;
      constructArray0[1] = (Construct) value0;
      constructArray0[2] = (Construct) value0;
      Sequence sequence0 = new Sequence("JNJP*.D7A?6Ar", constructArray0);
      macros_Padding0.set(sequence0);
      Sequence sequence1 = (Sequence)macros_Padding0.get();
      assertEquals(2, sequence1.conflags);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Macros.Padding macros_Padding0 = new Macros.Padding(0, (byte)0, false);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      ByteBufferWrapper byteBufferWrapper0 = bitStream_BitStreamReader0.init(bitStream_BitStreamReader0);
      Integer[] integerArray0 = new Integer[0];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      // Undeclared exception!
      try { 
        macros_Padding0._parse(byteBufferWrapper0, containers_Container0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Value<Integer> value0 = new Value<Integer>();
      Class<Integer> class0 = Integer.class;
      Adapters.BeanAdapter<Integer> adapters_BeanAdapter0 = new Adapters.BeanAdapter<Integer>(class0, value0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      Integer[] integerArray0 = new Integer[0];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      // Undeclared exception!
      try { 
        adapters_BeanAdapter0._parse(bitStream_BitStreamReader0, containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unimplemented
         //
         verifyException("uk.ziglio.construct.core.Value", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Macros.Padding macros_Padding0 = new Macros.Padding("", 1603);
      Integer[] integerArray0 = new Integer[8];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      // Undeclared exception!
      try { 
        macros_Padding0._parse(bitStream_BitStreamReader0, containers_Container0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.lib.BitStream$BitStreamReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Construct[] constructArray0 = new Construct[0];
      Sequence sequence0 = new Sequence("", constructArray0);
      Reconfig<Sequence> reconfig0 = new Reconfig<Sequence>("", sequence0);
      Adapters.PaddingAdapter adapters_PaddingAdapter0 = new Adapters.PaddingAdapter(reconfig0);
      Adapters.BitIntegerAdapter adapters_BitIntegerAdapter0 = new Adapters.BitIntegerAdapter(adapters_PaddingAdapter0, 2, false, true, 719);
      ByteBufferWrapper byteBufferWrapper0 = new ByteBufferWrapper();
      Class<Integer> class0 = Integer.class;
      Adapters.BeanAdapter<Integer> adapters_BeanAdapter0 = new Adapters.BeanAdapter<Integer>(class0, sequence0);
      Containers.Container containers_Container0 = adapters_BeanAdapter0.encode((Integer) 8, (Containers.Container) null);
      // Undeclared exception!
      try { 
        adapters_BitIntegerAdapter0._parse(byteBufferWrapper0, containers_Container0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.ArrayList cannot be cast to class [B (java.util.ArrayList and [B are in module java.base of loader 'bootstrap')
         //
         verifyException("uk.ziglio.construct.Adapters$BitIntegerAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Macros.Bit macros_Bit0 = new Macros.Bit("B\"h_w=X");
      Integer integer0 = new Integer((-389));
      Integer[] integerArray0 = new Integer[6];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      // Undeclared exception!
      try { 
        macros_Bit0._build(integer0, (ByteArrayOutputStream) null, containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // object is negative, but field is not signed -389
         //
         verifyException("uk.ziglio.construct.Adapters$BitIntegerAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Macros.Padding macros_Padding0 = new Macros.Padding((String) null, 8);
      // Undeclared exception!
      try { 
        macros_Padding0._build((Object) null, (ByteArrayOutputStream) null, (Containers.Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Macros.Padding macros_Padding0 = new Macros.Padding(" must be public", (-187));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        macros_Padding0._build((Object) null, byteArrayOutputStream0, (Containers.Container) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -187
         //
         verifyException("uk.ziglio.construct.Adapters$PaddingAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Macros.Bits macros_Bits0 = new Macros.Bits("n_#?3M", 8192);
      Adapters.ExprAdapter<Sequence, Sequence> adapters_ExprAdapter0 = new Adapters.ExprAdapter<Sequence, Sequence>(macros_Bits0, macros_Bits0, macros_Bits0);
      Class<Integer> class0 = Integer.class;
      Adapters.BeanAdapter<Integer> adapters_BeanAdapter0 = new Adapters.BeanAdapter<Integer>(class0, adapters_ExprAdapter0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
      // Undeclared exception!
      try { 
        adapters_BeanAdapter0._build(1, byteArrayOutputStream0, (Containers.Container) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class uk.ziglio.construct.lib.Containers$Container cannot be cast to class java.lang.Integer (uk.ziglio.construct.lib.Containers$Container is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @d7719f3; java.lang.Integer is in module java.base of loader 'bootstrap')
         //
         verifyException("uk.ziglio.construct.Adapters$BitIntegerAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Macros.Padding macros_Padding0 = new Macros.Padding((String) null, 1);
      Object object0 = macros_Padding0.get();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Macros.Padding macros_Padding0 = new Macros.Padding(",f", (-1));
      ByteBufferWrapper byteBufferWrapper0 = new ByteBufferWrapper();
      // Undeclared exception!
      try { 
        macros_Padding0._parse(byteBufferWrapper0, (Containers.Container) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // length must be >= 0 -1
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }
}
