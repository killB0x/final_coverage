/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 22:20:44 GMT 2022
 */

package uk.ziglio.construct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ziglio.construct.Core;
import uk.ziglio.construct.core.Construct;
import uk.ziglio.construct.core.KeyFunc;
import uk.ziglio.construct.core.MetaArray;
import uk.ziglio.construct.core.Range;
import uk.ziglio.construct.core.Reconfig;
import uk.ziglio.construct.core.Restream;
import uk.ziglio.construct.core.Sequence;
import uk.ziglio.construct.core.Struct;
import uk.ziglio.construct.core.Switch;
import uk.ziglio.construct.core.Value;
import uk.ziglio.construct.interfaces.CountFunc;
import uk.ziglio.construct.interfaces.ValueFunc;
import uk.ziglio.construct.lib.BitStream;
import uk.ziglio.construct.lib.ByteBufferWrapper;
import uk.ziglio.construct.lib.Containers;
import uk.ziglio.construct.lib.Decoder;
import uk.ziglio.construct.lib.Encoder;
import uk.ziglio.construct.lib.Resizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Core_ESTest extends Core_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Struct struct0 = new Struct();
      byte[] byteArray0 = new byte[10];
      Encoder encoder0 = mock(Encoder.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(encoder0).encode(anyString());
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resizer0).resize(anyInt());
      Core.Buffered core_Buffered0 = new Core.Buffered(struct0, encoder0, decoder0, resizer0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      Containers.Container containers_Container0 = Core.Container((Object[]) struct0.subcons);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        core_Buffered0._build(object0, byteArrayOutputStream0, containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrong data length: 10
         //
         verifyException("uk.ziglio.construct.Core$Buffered", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Construct construct0 = Core.NoDefault;
      Encoder encoder0 = mock(Encoder.class, new ViolatedAssumptionAnswer());
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Core.Buffered core_Buffered0 = new Core.Buffered(construct0, encoder0, decoder0, resizer0);
      // Undeclared exception!
      try { 
        core_Buffered0._sizeof((Containers.Container) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no default case defined
         //
         verifyException("uk.ziglio.construct.Core$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Struct struct0 = new Struct();
      Struct struct1 = Core.Struct(struct0.subcons);
      assertEquals(4, Construct.FLAG_EMBED);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Construct[] constructArray0 = new Construct[0];
      Sequence sequence0 = Core.Sequence(": ", constructArray0);
      assertEquals(4, Construct.FLAG_EMBED);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Construct construct0 = Core.NoDefault;
      Reconfig<Construct> reconfig0 = Core.Reconfig("mVmp<S0)R$.?$<9&", construct0);
      assertEquals(2, Construct.FLAG_DYNAMIC);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Struct struct0 = new Struct();
      Range<Struct> range0 = Core.Range(0, 1, struct0);
      assertEquals(2, Construct.FLAG_DYNAMIC);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][6];
      byte[] byteArray1 = Core.ByteArray(byteArray0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[0];
      byte[] byteArray0 = Core.ByteArray(intArray0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Value<Struct> value0 = new Value<Struct>();
      // Undeclared exception!
      try { 
        Core.Value("<unnested>", (ValueFunc<Struct>) value0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // reserved name <unnested>
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KeyFunc keyFunc0 = Core.KeyVal("Wrong data length: ");
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        Core.Switch("<;iApM\"", keyFunc0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // reserved name <;iApM\"
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][8];
      KeyFunc keyFunc0 = Core.KeyVal("");
      // Undeclared exception!
      try { 
        Core.Switch("", keyFunc0, (Object[]) byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // length of parameters is not an even number: 7
         //
         verifyException("uk.ziglio.construct.lib.Containers$Container", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KeyFunc keyFunc0 = Core.KeyVal("<\"fiSa");
      // Undeclared exception!
      try { 
        Core.Switch("", keyFunc0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.lib.Containers$Container", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[][] byteArray0 = new byte[4][8];
      // Undeclared exception!
      try { 
        Core.Switch("*ZhExS#V", (KeyFunc) null, (Object[]) byteArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // [B
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KeyFunc keyFunc0 = Core.KeyVal("l2|pYCa\"!&eia)q");
      // Undeclared exception!
      try { 
        Core.Switch("l2|pYCa\"!&eia)q", keyFunc0, (Containers.Container) null, (Construct) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Switch", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Construct[] constructArray0 = new Construct[1];
      // Undeclared exception!
      try { 
        Core.Struct("<unnested>", constructArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // reserved name <unnested>
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.Struct("U", (Construct[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.Sequence("uk.ziglio.construct.Core$1", (Construct[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.Reconfig("W/9ebXiAG_lUK1DPI", (Construct) null, 1006, 1006);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Subconstruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.Reconfig((String) null, (Construct) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Subconstruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[][] byteArray0 = new byte[3][8];
      // Undeclared exception!
      try { 
        Core.Container((Object[]) byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // length of parameters is not an even number: 3
         //
         verifyException("uk.ziglio.construct.lib.Containers$Container", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.Container((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.lib.Containers$Container", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.ByteArray((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.ByteArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(decoder0).decode(any(byte[].class));
      Construct[] constructArray0 = new Construct[0];
      Struct struct0 = Core.Struct("x(yxCS/n/KTj", constructArray0);
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(resizer0).resize(anyInt());
      Core.Buffered core_Buffered0 = new Core.Buffered(struct0, (Encoder) null, decoder0, resizer0);
      Containers.Container containers_Container0 = new Containers.Container((Object[]) struct0.subcons);
      Object object0 = core_Buffered0.parse("x(yxCS/n/KTj", containers_Container0);
      assertNotSame(containers_Container0, object0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[][] byteArray0 = new byte[8][8];
      byte[] byteArray1 = Core.ByteArray(byteArray0);
      assertEquals(64, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Struct struct0 = new Struct("");
      Reconfig<Construct> reconfig0 = Core.Reconfig("", (Construct) struct0, 2877, 2);
      assertEquals(2877, reconfig0.conflags);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Struct struct0 = new Struct();
      byte[] byteArray0 = new byte[3];
      Encoder encoder0 = mock(Encoder.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(encoder0).encode(anyString());
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(3491).when(resizer0).resize(anyInt());
      Core.Buffered core_Buffered0 = new Core.Buffered(struct0, encoder0, decoder0, resizer0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      Containers.Container containers_Container0 = Core.Container((Object[]) struct0.subcons);
      // Undeclared exception!
      try { 
        core_Buffered0._build(byteArrayOutputStream0, byteArrayOutputStream0, containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrong data length: 3
         //
         verifyException("uk.ziglio.construct.Core$Buffered", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Struct struct0 = new Struct();
      byte[] byteArray0 = new byte[18];
      Encoder encoder0 = mock(Encoder.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(encoder0).encode(anyString());
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(18).when(resizer0).resize(anyInt());
      Core.Buffered core_Buffered0 = new Core.Buffered(struct0, encoder0, decoder0, resizer0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      Containers.Container containers_Container0 = Core.Container((Object[]) struct0.subcons);
      core_Buffered0._build(byteArrayOutputStream0, byteArrayOutputStream0, containers_Container0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals(18, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(decoder0).decode(any(byte[].class));
      Construct[] constructArray0 = new Construct[0];
      Struct struct0 = Core.Struct("&R", constructArray0);
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resizer0).resize(anyInt());
      Core.Buffered core_Buffered0 = new Core.Buffered(struct0, (Encoder) null, decoder0, resizer0);
      Object object0 = core_Buffered0.parse("&R", false);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Struct struct0 = new Struct();
      KeyFunc keyFunc0 = Core.KeyVal("&R");
      Containers.Container containers_Container0 = Core.Container((Object[]) struct0.subcons);
      Switch switch0 = Core.Switch("zG{L8O", keyFunc0, containers_Container0, (Construct) struct0, true);
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(decoder0).decode(any(byte[].class));
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resizer0).resize(anyInt());
      Core.Buffered core_Buffered0 = new Core.Buffered(switch0, (Encoder) null, decoder0, resizer0);
      // Undeclared exception!
      try { 
        core_Buffered0.parse("&R", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.lib.ByteBufferWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[13];
      byte[] byteArray0 = Core.ByteArray(intArray0);
      assertEquals(13, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CountFunc countFunc0 = mock(CountFunc.class, new ViolatedAssumptionAnswer());
      Construct construct0 = Core.NoDefault;
      Encoder encoder0 = mock(Encoder.class, new ViolatedAssumptionAnswer());
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      Core.Buffered core_Buffered0 = new Core.Buffered(construct0, encoder0, decoder0, (Resizer) null);
      MetaArray<Construct> metaArray0 = Core.MetaArray(countFunc0, core_Buffered0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Restream restream0 = new Restream(metaArray0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, (Resizer) null);
      // Undeclared exception!
      try { 
        Core.Reconfig("<5_o>1Hn", (Construct) restream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // reserved name <5_o>1Hn
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[][] byteArray0 = new byte[8][3];
      KeyFunc keyFunc0 = Core.KeyVal("");
      Containers.Container containers_Container0 = Core.Container((Object[]) byteArray0);
      Struct struct0 = new Struct("");
      // Undeclared exception!
      try { 
        Core.Switch("i,uRF`R_", keyFunc0, containers_Container0, (Construct) struct0, true);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // [B
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.Struct((Construct[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Core core0 = new Core();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.Range(1, 1462, (Struct) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Subconstruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Value<Object> value0 = new Value<Object>();
      Value<Object> value1 = Core.Value((String) null, (ValueFunc<Object>) value0);
      assertEquals(1, Construct.FLAG_COPY_CONTEXT);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        Core.MetaArray((CountFunc) null, (Construct) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Subconstruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Construct[] constructArray0 = new Construct[0];
      // Undeclared exception!
      try { 
        Core.Sequence("<qSdI\"j}4vf'xb", constructArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // reserved name <qSdI\"j}4vf'xb
         //
         verifyException("uk.ziglio.construct.core.Construct", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][6];
      KeyFunc keyFunc0 = Core.KeyVal(" paramters");
      Switch switch0 = Core.Switch(" paramters", keyFunc0, (Object[]) byteArray0);
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Core.Buffered core_Buffered0 = new Core.Buffered(switch0, (Encoder) null, decoder0, resizer0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      // Undeclared exception!
      try { 
        core_Buffered0._parse(bitStream_BitStreamReader0, switch0.cases);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no default case defined
         //
         verifyException("uk.ziglio.construct.Core$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      KeyFunc keyFunc0 = Core.Equals("", "");
      Object[] objectArray0 = new Object[0];
      Switch switch0 = Core.Switch("", keyFunc0, objectArray0);
      ByteBufferWrapper byteBufferWrapper0 = new ByteBufferWrapper();
      // Undeclared exception!
      try { 
        switch0.parse_stream(byteBufferWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.Core$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Decoder decoder0 = mock(Decoder.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(decoder0).decode(any(byte[].class));
      Struct struct0 = new Struct("&R");
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(resizer0).resize(anyInt());
      Core.Buffered core_Buffered0 = new Core.Buffered(struct0, (Encoder) null, decoder0, resizer0);
      Object object0 = core_Buffered0.parse("&R", true);
      assertNotNull(object0);
  }
}
