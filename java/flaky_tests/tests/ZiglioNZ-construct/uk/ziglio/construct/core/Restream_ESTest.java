/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 22:32:53 GMT 2022
 */

package uk.ziglio.construct.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ziglio.construct.core.Construct;
import uk.ziglio.construct.core.KeyFunc;
import uk.ziglio.construct.core.PassClass;
import uk.ziglio.construct.core.Restream;
import uk.ziglio.construct.core.Sequence;
import uk.ziglio.construct.core.Struct;
import uk.ziglio.construct.core.Switch;
import uk.ziglio.construct.core.Value;
import uk.ziglio.construct.lib.BitStream;
import uk.ziglio.construct.lib.ByteBufferWrapper;
import uk.ziglio.construct.lib.Containers;
import uk.ziglio.construct.lib.Resizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Restream_ESTest extends Restream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Construct[] constructArray0 = new Construct[0];
      Struct struct0 = new Struct("y0{]dQogY", constructArray0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resizer0).resize(anyInt());
      Restream restream0 = new Restream(struct0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      Containers.Container containers_Container0 = (Containers.Container)restream0.parse_stream((ByteBufferWrapper) bitStream_BitStreamReader0, false);
      int int0 = restream0._sizeof(containers_Container0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Struct struct0 = new Struct();
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(1735).when(resizer0).resize(anyInt());
      Restream restream0 = new Restream(struct0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      int int0 = restream0._sizeof((Containers.Container) null);
      assertEquals(1735, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Construct[] constructArray0 = new Construct[0];
      Sequence sequence0 = new Sequence("g#@%sx)G_;3dUw^", constructArray0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resizer0).resize(anyInt());
      Restream restream0 = new Restream(sequence0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      int int0 = restream0._sizeof((Containers.Container) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Construct[] constructArray0 = new Construct[0];
      Sequence sequence0 = new Sequence("g#@%sx)G_;3dUw^", constructArray0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Restream restream0 = new Restream(sequence0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      Containers.Container containers_Container0 = new Containers.Container((Object[]) sequence0.subcons);
      ArrayList arrayList0 = (ArrayList)restream0._parse(bitStream_BitStreamReader0, containers_Container0);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KeyFunc keyFunc0 = mock(KeyFunc.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(keyFunc0).get(any(uk.ziglio.construct.lib.Containers.Container.class));
      Integer[] integerArray0 = new Integer[0];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      Switch switch0 = new Switch((String) null, keyFunc0, containers_Container0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Restream restream0 = new Restream(switch0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      // Undeclared exception!
      try { 
        restream0._parse(bitStream_BitStreamReader0, containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no default case defined
         //
         verifyException("uk.ziglio.construct.Core$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Value<Integer> value0 = new Value<Integer>();
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Restream restream0 = new Restream(value0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, (Resizer) null);
      Object[] objectArray0 = new Object[0];
      Containers.Container containers_Container0 = new Containers.Container(objectArray0);
      // Undeclared exception!
      try { 
        restream0._parse(bitStream_BitStreamReader0, containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unimplemented
         //
         verifyException("uk.ziglio.construct.core.Value", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Construct[] constructArray0 = new Construct[0];
      Struct struct0 = new Struct("y0{]dQogY", constructArray0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Restream restream0 = new Restream(struct0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      // Undeclared exception!
      try { 
        restream0._parse((ByteBufferWrapper) null, (Containers.Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Struct", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Value<Integer> value0 = new Value<Integer>();
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Restream restream0 = new Restream(value0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, (Resizer) null);
      Integer[] integerArray0 = new Integer[4];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      // Undeclared exception!
      try { 
        restream0._build(integerArray0[0], (ByteArrayOutputStream) null, containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unimplemented
         //
         verifyException("uk.ziglio.construct.core.Value", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Struct struct0 = new Struct();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Restream restream0 = new Restream(struct0, (BitStream.BitStreamReader) null, bitStream_BitStreamWriter0, resizer0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        restream0._build(struct0, byteArrayOutputStream0, (Containers.Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ziglio.construct.core.Struct", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PassClass passClass0 = PassClass.getInstance();
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Restream restream0 = new Restream(passClass0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      Object object0 = restream0._parse(bitStream_BitStreamReader0, (Containers.Container) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KeyFunc keyFunc0 = mock(KeyFunc.class, new ViolatedAssumptionAnswer());
      doReturn("A'e*ay&E4m").when(keyFunc0).get(any(uk.ziglio.construct.lib.Containers.Container.class));
      Integer[] integerArray0 = new Integer[0];
      Containers.Container containers_Container0 = new Containers.Container(integerArray0);
      Switch switch0 = new Switch("A'e*ay&E4m", keyFunc0, containers_Container0);
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Restream restream0 = new Restream(switch0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      // Undeclared exception!
      try { 
        restream0._sizeof(containers_Container0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no default case defined
         //
         verifyException("uk.ziglio.construct.Core$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PassClass passClass0 = PassClass.getInstance();
      BitStream.BitStreamReader bitStream_BitStreamReader0 = new BitStream.BitStreamReader();
      BitStream.BitStreamWriter bitStream_BitStreamWriter0 = new BitStream.BitStreamWriter();
      Resizer resizer0 = mock(Resizer.class, new ViolatedAssumptionAnswer());
      Restream restream0 = new Restream(passClass0, bitStream_BitStreamReader0, bitStream_BitStreamWriter0, resizer0);
      restream0._build(bitStream_BitStreamReader0, (ByteArrayOutputStream) null, (Containers.Container) null);
      assertEquals(1, Construct.FLAG_COPY_CONTEXT);
  }
}
