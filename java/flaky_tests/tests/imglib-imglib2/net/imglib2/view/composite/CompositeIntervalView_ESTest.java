/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:02:20 GMT 2022
 */

package net.imglib2.view.composite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import net.imglib2.RandomAccessibleInterval;
import net.imglib2.converter.read.BiConvertedRealRandomAccessibleRealInterval;
import net.imglib2.img.list.ListImg;
import net.imglib2.view.composite.CompositeIntervalView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeIntervalView_ESTest extends CompositeIntervalView_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      long[] longArray0 = new long[8];
      ListImg<Object> listImg0 = new ListImg<Object>(arrayDeque0, longArray0);
      RandomAccessibleInterval<Object> randomAccessibleInterval0 = CompositeIntervalView.zeroMinN((RandomAccessibleInterval<Object>) listImg0);
      assertNotNull(randomAccessibleInterval0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeIntervalView.zeroMinN((RandomAccessibleInterval<BiConvertedRealRandomAccessibleRealInterval<Integer, Object, Integer>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.CompositeIntervalView", e);
      }
  }
}
