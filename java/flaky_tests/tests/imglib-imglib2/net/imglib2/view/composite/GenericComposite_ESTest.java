/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:54:32 GMT 2022
 */

package net.imglib2.view.composite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.Point;
import net.imglib2.PointSample;
import net.imglib2.RandomAccess;
import net.imglib2.view.composite.GenericComposite;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericComposite_ESTest extends GenericComposite_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GenericComposite.Factory<Object> genericComposite_Factory0 = new GenericComposite.Factory<Object>();
      int[] intArray0 = new int[3];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, intArray0);
      GenericComposite<Object> genericComposite0 = genericComposite_Factory0.create(pointSample0);
      assertNotNull(genericComposite0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenericComposite<Object> genericComposite0 = null;
      try {
        genericComposite0 = new GenericComposite<Object>((RandomAccess<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      Point point0 = new Point(0);
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, point0);
      GenericComposite<Integer> genericComposite0 = new GenericComposite<Integer>(pointSample0);
  }
}
