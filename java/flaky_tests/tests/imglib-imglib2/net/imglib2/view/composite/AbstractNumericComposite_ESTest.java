/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:47:44 GMT 2022
 */

package net.imglib2.view.composite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.PointSample;
import net.imglib2.img.NativeImg;
import net.imglib2.img.basictypeaccess.volatiles.VolatileDoubleAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileDoubleArray;
import net.imglib2.img.sparse.Ntree;
import net.imglib2.img.sparse.ShortNtree;
import net.imglib2.type.logic.NativeBoolType;
import net.imglib2.type.numeric.integer.ShortType;
import net.imglib2.type.numeric.integer.Unsigned128BitType;
import net.imglib2.type.numeric.real.FloatType;
import net.imglib2.type.volatiles.VolatileByteType;
import net.imglib2.type.volatiles.VolatileDoubleType;
import net.imglib2.view.composite.NumericComposite;
import net.imglib2.view.composite.RealComposite;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractNumericComposite_ESTest extends AbstractNumericComposite_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, 1);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, 1);
      NumericComposite<NativeBoolType> numericComposite1 = new NumericComposite<NativeBoolType>(pointSample0, (-1754));
      boolean boolean0 = numericComposite1.valueEquals(numericComposite0);
      assertEquals((-1754), numericComposite1.getLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[8];
      Supplier<ShortType> supplier0 = (Supplier<ShortType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<ShortType> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      RealComposite<ShortType> realComposite0 = new RealComposite<ShortType>(pointSample0, (-146));
      realComposite0.mul(5578.135);
      assertEquals((-146), realComposite0.getLength());
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[9];
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, intArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, (-3228));
      numericComposite0.mul((float) 1);
      assertEquals((-3228), numericComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Supplier<VolatileByteType> supplier0 = (Supplier<VolatileByteType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[1];
      PointSample<VolatileByteType> pointSample0 = new PointSample<VolatileByteType>(supplier0, longArray0);
      Supplier<FloatType> supplier1 = (Supplier<FloatType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<FloatType> pointSample1 = new PointSample<FloatType>(supplier1, pointSample0);
      RealComposite<FloatType> realComposite0 = new RealComposite<FloatType>(pointSample1, (-1997));
      realComposite0.setOne();
      assertEquals((-1997), realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[7];
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, intArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, (-558));
      numericComposite0.setZero();
      assertEquals((-558), numericComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VolatileDoubleType volatileDoubleType0 = new VolatileDoubleType((NativeImg<?, ? extends VolatileDoubleAccess>) null);
      long[] longArray0 = new long[1];
      PointSample<VolatileDoubleType> pointSample0 = PointSample.wrap(volatileDoubleType0, longArray0);
      RealComposite<VolatileDoubleType> realComposite0 = new RealComposite<VolatileDoubleType>(pointSample0, (-2446));
      realComposite0.pow(1.0);
      assertEquals((-2446), realComposite0.numDimensions());
      assertArrayEquals(new long[] {0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1515);
      RealComposite<FloatType> realComposite1 = realComposite0.copy();
      realComposite0.pow(realComposite1);
      assertEquals(1515, realComposite1.getLength());
      assertEquals(1515, realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2566);
      RealComposite<FloatType> realComposite1 = realComposite0.copy();
      realComposite0.div(realComposite1);
      assertEquals(2566, realComposite1.getLength());
      assertEquals(2566, realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[7];
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, intArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, (-1));
      numericComposite0.div(numericComposite0);
      assertEquals((-1), numericComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Supplier<VolatileByteType> supplier0 = (Supplier<VolatileByteType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[1];
      PointSample<VolatileByteType> pointSample0 = new PointSample<VolatileByteType>(supplier0, longArray0);
      RealComposite<VolatileByteType> realComposite0 = new RealComposite<VolatileByteType>(pointSample0, (-2098677200));
      realComposite0.mul(realComposite0);
      assertEquals((-2098677200), realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1515);
      RealComposite<FloatType> realComposite1 = realComposite0.copy();
      realComposite0.sub(realComposite1);
      assertEquals(1515, realComposite1.getLength());
      assertEquals(1515, realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      long[] longArray0 = new long[7];
      PointSample<ShortType> pointSample0 = PointSample.wrap(shortType0, longArray0);
      RealComposite<ShortType> realComposite0 = new RealComposite<ShortType>(pointSample0, (-4243));
      realComposite0.add(realComposite0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      assertEquals((-4243), realComposite0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[7];
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, intArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, (-558));
      numericComposite0.set(numericComposite0);
      assertEquals((-558), numericComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[1];
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<NativeBoolType> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, (-2446));
      boolean boolean0 = numericComposite0.valueEquals(numericComposite0);
      assertArrayEquals(new long[] {(-1L)}, longArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(3364);
      RealComposite<FloatType> realComposite1 = realComposite0.copy();
      realComposite0.valueEquals(realComposite1);
      // Undeclared exception!
      realComposite0.valueEquals(realComposite0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1541);
      // Undeclared exception!
      try { 
        realComposite0.valueEquals((RealComposite<FloatType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2553);
      // Undeclared exception!
      try { 
        realComposite0.valueEquals(realComposite0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1541);
      // Undeclared exception!
      try { 
        realComposite0.sub((RealComposite<FloatType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2552);
      float[] floatArray0 = new float[0];
      RealComposite<FloatType> realComposite1 = FloatType.wrapVector(floatArray0);
      // Undeclared exception!
      try { 
        realComposite0.sub(realComposite1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, 1533);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, 1533);
      // Undeclared exception!
      try { 
        numericComposite0.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      long[] longArray0 = new long[2];
      PointSample<FloatType> pointSample0 = PointSample.wrapSupplier((Supplier<FloatType>) null, longArray0);
      RealComposite<FloatType> realComposite0 = new RealComposite<FloatType>(pointSample0, 885);
      // Undeclared exception!
      try { 
        realComposite0.setOne();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Supplier<FloatType> supplier0 = (Supplier<FloatType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[0];
      PointSample<FloatType> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      RealComposite<FloatType> realComposite0 = new RealComposite<FloatType>(pointSample0, 1823);
      // Undeclared exception!
      try { 
        realComposite0.setOne();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long[] longArray0 = new long[1];
      PointSample<NativeBoolType> pointSample0 = PointSample.wrap((NativeBoolType) null, longArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, 2726);
      // Undeclared exception!
      try { 
        numericComposite0.set((NumericComposite<NativeBoolType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1541);
      float[] floatArray0 = new float[3];
      RealComposite<FloatType> realComposite1 = FloatType.wrapVector(floatArray0);
      // Undeclared exception!
      try { 
        realComposite0.set(realComposite1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1525);
      // Undeclared exception!
      try { 
        realComposite0.pow((RealComposite<FloatType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1515);
      float[] floatArray0 = new float[7];
      RealComposite<FloatType> realComposite1 = FloatType.wrapVector(floatArray0);
      // Undeclared exception!
      try { 
        realComposite0.pow(realComposite1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, 1515);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, 1515);
      // Undeclared exception!
      try { 
        numericComposite0.pow(309.565721454195);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      VolatileDoubleArray volatileDoubleArray0 = new VolatileDoubleArray(doubleArray0, true);
      VolatileDoubleArray volatileDoubleArray1 = volatileDoubleArray0.createArray(0, true);
      VolatileDoubleType volatileDoubleType0 = new VolatileDoubleType(volatileDoubleArray1);
      long[] longArray0 = new long[2];
      PointSample<VolatileDoubleType> pointSample0 = PointSample.wrap(volatileDoubleType0, longArray0);
      RealComposite<VolatileDoubleType> realComposite0 = new RealComposite<VolatileDoubleType>(pointSample0, 6210);
      // Undeclared exception!
      try { 
        realComposite0.pow((double) 0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2552);
      // Undeclared exception!
      try { 
        realComposite0.mul((RealComposite<FloatType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2552);
      float[] floatArray0 = new float[1];
      RealComposite<FloatType> realComposite1 = FloatType.wrapVector(floatArray0);
      // Undeclared exception!
      try { 
        realComposite0.mul(realComposite1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[2];
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>((Supplier<NativeBoolType>) null, intArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, 1823);
      // Undeclared exception!
      try { 
        numericComposite0.mul((float) 1823);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[0];
      PointSample<NativeBoolType> pointSample0 = new PointSample<NativeBoolType>(supplier0, intArray0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample0, (-2506));
      // Undeclared exception!
      try { 
        numericComposite0.mul((-2079.9097F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = 0L;
      longArray0[1] = 984L;
      longArray0[2] = 1842L;
      Short short0 = new Short((short)1);
      Ntree<Short> ntree0 = new Ntree<Short>(longArray0, short0);
      ShortNtree shortNtree0 = new ShortNtree(ntree0, longArray0);
      ShortType shortType0 = new ShortType(shortNtree0);
      Supplier<ShortType> supplier0 = (Supplier<ShortType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      PointSample<ShortType> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      RealComposite<ShortType> realComposite0 = new RealComposite<ShortType>(pointSample0, 1264);
      // Undeclared exception!
      try { 
        realComposite0.mul(787.3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<ShortType> pointSample0 = PointSample.wrapSupplier((Supplier<ShortType>) null, longArray0);
      RealComposite<ShortType> realComposite0 = new RealComposite<ShortType>(pointSample0, 2075);
      // Undeclared exception!
      try { 
        realComposite0.mul((double) 4095L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      Supplier<Object> supplier1 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier(supplier1, longArray0);
      PointSample<NativeBoolType> pointSample1 = new PointSample<NativeBoolType>(supplier0, pointSample0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample1, 2552);
      // Undeclared exception!
      try { 
        numericComposite0.iterator();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1515);
      Supplier<FloatType> supplier0 = (Supplier<FloatType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      PointSample<FloatType> pointSample0 = new PointSample<FloatType>(supplier0, 1515);
      RealComposite<FloatType> realComposite1 = new RealComposite<FloatType>(pointSample0, 1515);
      // Undeclared exception!
      try { 
        realComposite0.div(realComposite1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2552);
      long[] longArray0 = new long[0];
      PointSample<FloatType> pointSample0 = PointSample.wrapSupplier((Supplier<FloatType>) null, longArray0);
      RealComposite<FloatType> realComposite1 = new RealComposite<FloatType>(pointSample0, 2552);
      // Undeclared exception!
      try { 
        realComposite0.div(realComposite1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Supplier<NativeBoolType> supplier0 = (Supplier<NativeBoolType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(supplier0).get();
      Supplier<VolatileDoubleType> supplier1 = (Supplier<VolatileDoubleType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<VolatileDoubleType> pointSample0 = new PointSample<VolatileDoubleType>(supplier1, 1797);
      PointSample<NativeBoolType> pointSample1 = new PointSample<NativeBoolType>(supplier0, pointSample0);
      NumericComposite<NativeBoolType> numericComposite0 = new NumericComposite<NativeBoolType>(pointSample1, 1300);
      // Undeclared exception!
      try { 
        numericComposite0.add(numericComposite0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.composite.AbstractNumericComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1541);
      float[] floatArray0 = new float[8];
      RealComposite<FloatType> realComposite1 = FloatType.wrapVector(floatArray0);
      // Undeclared exception!
      try { 
        realComposite0.add(realComposite1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Supplier<Unsigned128BitType> supplier0 = (Supplier<Unsigned128BitType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[2];
      PointSample<Unsigned128BitType> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      RealComposite<Unsigned128BitType> realComposite0 = new RealComposite<Unsigned128BitType>(pointSample0, 1515);
      realComposite0.iterator();
      assertArrayEquals(new long[] {0L, (-1L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1823);
      realComposite0.setOne();
      RealComposite<FloatType> realComposite1 = FloatType.createVector(1823);
      RealComposite<FloatType> realComposite2 = realComposite0.copy();
      boolean boolean0 = realComposite2.valueEquals(realComposite1);
      assertEquals(1823, realComposite1.numDimensions());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2542);
      RealComposite<FloatType> realComposite1 = FloatType.createVector(16);
      boolean boolean0 = realComposite0.valueEquals(realComposite1);
      assertFalse(boolean0);
      assertEquals(16, realComposite1.getLength());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1534);
      realComposite0.mul((double) 1534);
      assertEquals(1534, realComposite0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1515);
      realComposite0.mul((float) 1515);
      assertEquals(1515, realComposite0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1528);
      realComposite0.setZero();
      assertEquals(1528, realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2552);
      realComposite0.pow((double) 2552);
      assertEquals(2552, realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1515);
      realComposite0.pow(realComposite0);
      assertEquals(1515, realComposite0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2566);
      realComposite0.mul(realComposite0);
      assertEquals(2566, realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(1515);
      realComposite0.sub(realComposite0);
      assertEquals(1515, realComposite0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2566);
      realComposite0.add(realComposite0);
      assertEquals(2566, realComposite0.getLength());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RealComposite<FloatType> realComposite0 = FloatType.createVector(2552);
      realComposite0.set(realComposite0);
      assertEquals(2552, realComposite0.getLength());
  }
}
