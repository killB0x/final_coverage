/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 10:27:31 GMT 2022
 */

package net.imglib2.view;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.Localizable;
import net.imglib2.Point;
import net.imglib2.PointSample;
import net.imglib2.PointSampleList;
import net.imglib2.RandomAccess;
import net.imglib2.transform.integer.SlicingTransform;
import net.imglib2.view.FullSourceMapSlicingRandomAccess;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FullSourceMapSlicingRandomAccess_ESTest extends FullSourceMapSlicingRandomAccess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, 0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Integer> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Integer>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition(0L, 1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition(1131, 1131);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[9];
      Point point0 = new Point(intArray0);
      fullSourceMapSlicingRandomAccess0.setPosition((Localizable) point0);
      assertEquals(0, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[0];
      fullSourceMapSlicingRandomAccess0.move(intArray0);
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      PointSample<FullSourceMapSlicingRandomAccess<Object>> pointSample1 = new PointSample<FullSourceMapSlicingRandomAccess<Object>>((Supplier<FullSourceMapSlicingRandomAccess<Object>>) null, pointSample0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<FullSourceMapSlicingRandomAccess<Object>> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<FullSourceMapSlicingRandomAccess<Object>>(pointSample1, slicingTransform0);
      SlicingTransform slicingTransform1 = new SlicingTransform(297, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess1 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform1);
      fullSourceMapSlicingRandomAccess0.move((Localizable) fullSourceMapSlicingRandomAccess1);
      assertEquals(0, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[0];
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, longArray0);
      FullSourceMapSlicingRandomAccess<Integer> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Integer>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move(909L, 1145);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move(0, 1132);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getDoublePosition(1122);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getFloatPosition(1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      float[] floatArray0 = new float[0];
      fullSourceMapSlicingRandomAccess0.localize(floatArray0);
      assertEquals(0, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getLongPosition(297);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1155);
      SlicingTransform slicingTransform0 = new SlicingTransform(1155, 1155);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getIntPosition(2145);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      long[] longArray0 = new long[7];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.localize(longArray0);
      assertEquals(7, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[0];
      fullSourceMapSlicingRandomAccess0.localize(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[1];
      PointSample<Object> pointSample0 = PointSample.wrap((Object) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(378, 321);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = null;
      try {
        fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.setPosition((Localizable) pointSample0);
      assertEquals(0, pointSample0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1155);
      SlicingTransform slicingTransform0 = new SlicingTransform(1155, 1155);
      Supplier<Integer> supplier1 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Integer> pointSample1 = new PointSample<Integer>(supplier1, pointSample0);
      FullSourceMapSlicingRandomAccess<Integer> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Integer>(pointSample1, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.setPosition((-1L), 1146);
      assertEquals(1155, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[0];
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, longArray0);
      long[] longArray1 = pointSample0.positionAsLongArray();
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.localize(longArray1);
      assertFalse(longArray1.equals((Object)longArray0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      double[] doubleArray0 = new double[7];
      fullSourceMapSlicingRandomAccess0.localize(doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1166);
      SlicingTransform slicingTransform0 = new SlicingTransform(1166, 1166);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess1 = new FullSourceMapSlicingRandomAccess<Object>(fullSourceMapSlicingRandomAccess0);
      assertEquals(1166, fullSourceMapSlicingRandomAccess1.numDimensions());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      Point point0 = new Point(2171);
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, point0);
      SlicingTransform slicingTransform0 = new SlicingTransform(2171, 2171);
      FullSourceMapSlicingRandomAccess<Integer> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Integer>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.fwd(7);
      assertEquals(2171, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      Point point0 = new Point(2171);
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, point0);
      SlicingTransform slicingTransform0 = new SlicingTransform(2171, 2171);
      FullSourceMapSlicingRandomAccess<Integer> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Integer>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.bck(7);
      assertEquals(2171, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1187);
      SlicingTransform slicingTransform0 = new SlicingTransform(1187, 1187);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      long long0 = fullSourceMapSlicingRandomAccess0.getLongPosition(1133);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1155);
      SlicingTransform slicingTransform0 = new SlicingTransform(1155, 1155);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int int0 = fullSourceMapSlicingRandomAccess0.getIntPosition(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1155);
      SlicingTransform slicingTransform0 = new SlicingTransform(1155, 1155);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      float float0 = fullSourceMapSlicingRandomAccess0.getFloatPosition(1);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1155);
      SlicingTransform slicingTransform0 = new SlicingTransform(1155, 1155);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      double double0 = fullSourceMapSlicingRandomAccess0.getDoublePosition(1134);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[0];
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, longArray0);
      FullSourceMapSlicingRandomAccess<Integer> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Integer>(pointSample0, slicingTransform0);
      Integer integer0 = fullSourceMapSlicingRandomAccess0.get();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      PointSample<FullSourceMapSlicingRandomAccess<Object>> pointSample1 = PointSample.wrap(fullSourceMapSlicingRandomAccess0, longArray0);
      FullSourceMapSlicingRandomAccess<FullSourceMapSlicingRandomAccess<Object>> fullSourceMapSlicingRandomAccess1 = new FullSourceMapSlicingRandomAccess<FullSourceMapSlicingRandomAccess<Object>>(pointSample1, slicingTransform0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess2 = fullSourceMapSlicingRandomAccess1.get();
      assertSame(fullSourceMapSlicingRandomAccess0, fullSourceMapSlicingRandomAccess2);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess1 = fullSourceMapSlicingRandomAccess0.copy();
      assertFalse(fullSourceMapSlicingRandomAccess1.equals((Object)fullSourceMapSlicingRandomAccess0));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1151);
      SlicingTransform slicingTransform0 = new SlicingTransform(1151, 1151);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1151);
      SlicingTransform slicingTransform0 = new SlicingTransform(1151, 1151);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((Localizable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 0);
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((Localizable) fullSourceMapSlicingRandomAccess0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((long) 0, (-1698));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1698 out of bounds for length 0
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((-410), (-410));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -410 out of bounds for length 1541
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1493);
      SlicingTransform slicingTransform0 = new SlicingTransform(1493, 1493);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move((Localizable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 0);
      SlicingTransform slicingTransform0 = new SlicingTransform(1676, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move((Localizable) fullSourceMapSlicingRandomAccess0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move((long) 1541, (-65));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -65 out of bounds for length 1541
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move(1541, (-2187));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2187 out of bounds for length 1541
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1185);
      SlicingTransform slicingTransform0 = new SlicingTransform(1185, 1185);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1526);
      SlicingTransform slicingTransform0 = new SlicingTransform(1526, 1526);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      long[] longArray0 = new long[0];
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1182, 1182);
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1182);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1128);
      SlicingTransform slicingTransform0 = new SlicingTransform(1128, 1128);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getLongPosition((-1027));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1027 out of bounds for length 1128
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1150);
      SlicingTransform slicingTransform0 = new SlicingTransform(1150, 1150);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FullSourceMapSlicingRandomAccess<FullSourceMapSlicingRandomAccess<Object>> fullSourceMapSlicingRandomAccess0 = null;
      try {
        fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<FullSourceMapSlicingRandomAccess<Object>>((FullSourceMapSlicingRandomAccess<FullSourceMapSlicingRandomAccess<Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 4115);
      SlicingTransform slicingTransform0 = new SlicingTransform(4115, 4115);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess1 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      assertFalse(fullSourceMapSlicingRandomAccess1.equals((Object)fullSourceMapSlicingRandomAccess0));
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1149, 1149);
      FullSourceMapSlicingRandomAccess<Integer> fullSourceMapSlicingRandomAccess0 = null;
      try {
        fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Integer>((RandomAccess<Integer>) null, slicingTransform0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1128);
      SlicingTransform slicingTransform0 = new SlicingTransform((-1058), 1128);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = null;
      try {
        fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1058
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 2);
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      long[] longArray0 = new long[6];
      fullSourceMapSlicingRandomAccess0.setPosition(longArray0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.setPosition(longArray0);
      assertEquals(0, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 2);
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      long[] longArray0 = new long[6];
      fullSourceMapSlicingRandomAccess0.move(longArray0);
      assertEquals(6, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.move(longArray0);
      assertArrayEquals(new long[] {}, longArray0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1156);
      SlicingTransform slicingTransform0 = new SlicingTransform(1156, 1156);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getDoublePosition((-1262));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1262 out of bounds for length 1156
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1161);
      SlicingTransform slicingTransform0 = new SlicingTransform(1161, 1161);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getFloatPosition((-704));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -704 out of bounds for length 1161
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 659);
      SlicingTransform slicingTransform0 = new SlicingTransform(659, 659);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getIntPosition((-997));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -997 out of bounds for length 659
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 3);
      SlicingTransform slicingTransform0 = new SlicingTransform(3, 3);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((long) 3, 3);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition(1541, 1541);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1146);
      SlicingTransform slicingTransform0 = new SlicingTransform(1146, 1146);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.setPosition(1146, 1127);
      assertEquals(1146, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(1699, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1093);
      SlicingTransform slicingTransform0 = new SlicingTransform(1093, 1093);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition(intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 3);
      SlicingTransform slicingTransform0 = new SlicingTransform(3, 3);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[3];
      fullSourceMapSlicingRandomAccess0.setPosition(intArray0);
      assertEquals(3, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1156);
      SlicingTransform slicingTransform0 = new SlicingTransform(1156, 1156);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      PointSampleList<FullSourceMapSlicingRandomAccess<Object>> pointSampleList0 = new PointSampleList<FullSourceMapSlicingRandomAccess<Object>>(0);
      Point point0 = pointSampleList0.maxAsPoint();
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.setPosition((Localizable) point0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1139);
      SlicingTransform slicingTransform0 = new SlicingTransform(1139, 1139);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move(intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 3);
      SlicingTransform slicingTransform0 = new SlicingTransform(3, 3);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[7];
      fullSourceMapSlicingRandomAccess0.move(intArray0);
      assertEquals(3, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1139);
      SlicingTransform slicingTransform0 = new SlicingTransform(3946, 1139);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move((Localizable) pointSample0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1187);
      SlicingTransform slicingTransform0 = new SlicingTransform(1187, 1187);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move((long) 1187, 1187);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1185);
      SlicingTransform slicingTransform0 = new SlicingTransform(1185, 1185);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.move((long) 1185, 21);
      double double0 = fullSourceMapSlicingRandomAccess0.getDoublePosition(21);
      assertEquals(1185.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1158);
      SlicingTransform slicingTransform0 = new SlicingTransform(2765, 1158);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      fullSourceMapSlicingRandomAccess0.move(1158, 1158);
      assertEquals(2765, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.move(0, 0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getDoublePosition(0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 2017);
      SlicingTransform slicingTransform0 = new SlicingTransform(2017, 2017);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getFloatPosition(2017);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1541);
      SlicingTransform slicingTransform0 = new SlicingTransform(1541, 1541);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize(doubleArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1);
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      double[] doubleArray0 = fullSourceMapSlicingRandomAccess0.positionAsDoubleArray();
      assertEquals(1, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1544);
      SlicingTransform slicingTransform0 = new SlicingTransform(1544, 1544);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize(floatArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1);
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      float[] floatArray0 = new float[2];
      fullSourceMapSlicingRandomAccess0.localize(floatArray0);
      assertEquals(1, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier((Supplier<Object>) null, longArray0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getLongPosition(0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1158);
      SlicingTransform slicingTransform0 = new SlicingTransform(1158, 1158);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.getIntPosition(1158);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1166);
      SlicingTransform slicingTransform0 = new SlicingTransform(1166, 1166);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1139);
      SlicingTransform slicingTransform0 = new SlicingTransform(1139, 1139);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      Point point0 = fullSourceMapSlicingRandomAccess0.positionAsPoint();
      assertEquals(1139, point0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1150);
      SlicingTransform slicingTransform0 = new SlicingTransform(1150, 1150);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.localize(intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1129);
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1129);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      assertEquals(1, fullSourceMapSlicingRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 510);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = null;
      try {
        fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.bck(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 1128);
      SlicingTransform slicingTransform0 = new SlicingTransform(1128, 1128);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      // Undeclared exception!
      try { 
        fullSourceMapSlicingRandomAccess0.fwd(1128);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1128 out of bounds for length 1128
         //
         verifyException("net.imglib2.view.FullSourceMapSlicingRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 2);
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess0 = new FullSourceMapSlicingRandomAccess<Object>(pointSample0, slicingTransform0);
      FullSourceMapSlicingRandomAccess<Object> fullSourceMapSlicingRandomAccess1 = fullSourceMapSlicingRandomAccess0.copy();
      assertFalse(fullSourceMapSlicingRandomAccess1.equals((Object)fullSourceMapSlicingRandomAccess0));
  }
}
