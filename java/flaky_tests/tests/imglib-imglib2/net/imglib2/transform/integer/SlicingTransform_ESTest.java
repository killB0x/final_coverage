/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 10:01:28 GMT 2022
 */

package net.imglib2.transform.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import net.imglib2.Localizable;
import net.imglib2.Point;
import net.imglib2.PointSample;
import net.imglib2.Positionable;
import net.imglib2.transform.integer.BoundingBox;
import net.imglib2.transform.integer.Slicing;
import net.imglib2.transform.integer.SlicingTransform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SlicingTransform_ESTest extends SlicingTransform_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-3416), 4030);
      SlicingTransform slicingTransform1 = new SlicingTransform((-3416), 0);
      // Undeclared exception!
      try { 
        slicingTransform0.set(slicingTransform1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      SlicingTransform slicingTransform1 = new SlicingTransform((-88), 735);
      // Undeclared exception!
      try { 
        slicingTransform1.set(slicingTransform0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      int[] intArray0 = new int[3];
      slicingTransform0.setComponentMapping(intArray0);
      slicingTransform0.preConcatenate((Slicing) slicingTransform0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      SlicingTransform slicingTransform1 = new SlicingTransform(633, 633);
      // Undeclared exception!
      try { 
        slicingTransform0.preConcatenate((Slicing) slicingTransform1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      SlicingTransform slicingTransform1 = new SlicingTransform(1, 1);
      // Undeclared exception!
      try { 
        slicingTransform1.concatenate((Slicing) slicingTransform0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      long[] longArray0 = new long[7];
      Point point0 = new Point(longArray0);
      slicingTransform0.apply((Localizable) point0, (Positionable) point0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      int[] intArray0 = new int[3];
      int[] intArray1 = new int[3];
      slicingTransform0.apply(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-1), 0);
      int[] intArray0 = new int[7];
      slicingTransform0.setComponentMapping(intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(3, 3);
      int[] intArray0 = new int[3];
      slicingTransform0.setComponentMapping(intArray0);
      SlicingTransform slicingTransform1 = new SlicingTransform(0, 3);
      slicingTransform0.concatenate((Slicing) slicingTransform1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 1);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        slicingTransform0.setComponentMapping(intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 2);
      boolean[] booleanArray0 = new boolean[5];
      slicingTransform0.setComponentZero(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      boolean[] booleanArray0 = new boolean[1];
      slicingTransform0.setComponentZero(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-2365), 1982);
      slicingTransform0.set(slicingTransform0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        slicingTransform0.setTranslation(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(1);
      SlicingTransform slicingTransform0 = new SlicingTransform((-535), 1);
      slicingTransform0.setTranslation(boundingBox0.corner1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      long[] longArray0 = new long[3];
      // Undeclared exception!
      try { 
        slicingTransform0.getTranslation(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      slicingTransform0.preConcatenate((Slicing) slicingTransform0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-88), 3299);
      SlicingTransform slicingTransform1 = new SlicingTransform(3299, 3299);
      SlicingTransform slicingTransform2 = slicingTransform0.preConcatenate((Slicing) slicingTransform1);
      assertTrue(slicingTransform1.hasFullSourceMapping());
      assertEquals((-88), slicingTransform2.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      int int0 = slicingTransform0.numSourceDimensions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      slicingTransform0.numSourceDimensions();
      assertTrue(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-19), 1);
      int int0 = slicingTransform0.numSourceDimensions();
      assertEquals((-19), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1514, 1551);
      boolean boolean0 = slicingTransform0.getComponentZero(1514);
      assertTrue(slicingTransform0.hasFullSourceMapping());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      boolean boolean0 = slicingTransform0.getComponentZero(1);
      assertTrue(slicingTransform0.hasFullSourceMapping());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 2646);
      int int0 = slicingTransform0.getComponentMapping(259);
      assertTrue(slicingTransform0.hasFullSourceMapping());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4222, 4222);
      int int0 = slicingTransform0.getComponentMapping(173);
      assertEquals(173, int0);
      assertTrue(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      SlicingTransform slicingTransform1 = slicingTransform0.concatenate((Slicing) slicingTransform0);
      assertNotSame(slicingTransform1, slicingTransform0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      SlicingTransform slicingTransform1 = new SlicingTransform((-19), 1);
      slicingTransform0.concatenate((Slicing) slicingTransform1);
      assertTrue(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      assertTrue(slicingTransform0.hasFullSourceMapping());
      
      int[] intArray0 = new int[22];
      slicingTransform0.setComponentMapping(intArray0);
      slicingTransform0.concatenate((Slicing) slicingTransform0);
      assertFalse(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      // Undeclared exception!
      try { 
        slicingTransform0.setTranslation((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      // Undeclared exception!
      try { 
        slicingTransform0.setComponentZero((boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(204, 204);
      // Undeclared exception!
      try { 
        slicingTransform0.setComponentMapping((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      // Undeclared exception!
      try { 
        slicingTransform0.set((Slicing) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4222, 4222);
      SlicingTransform slicingTransform1 = new SlicingTransform(4222, 4222);
      // Undeclared exception!
      slicingTransform0.preConcatenate((Slicing) slicingTransform1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      // Undeclared exception!
      try { 
        slicingTransform0.preConcatenate((Slicing) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      int[] intArray0 = new int[6];
      intArray0[0] = 4;
      slicingTransform0.setComponentMapping(intArray0);
      // Undeclared exception!
      try { 
        slicingTransform0.preConcatenate((Slicing) slicingTransform0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-2572), 1);
      // Undeclared exception!
      try { 
        slicingTransform0.hasFullSourceMapping();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2572
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      slicingTransform0.setComponentMapping(intArray0);
      // Undeclared exception!
      try { 
        slicingTransform0.hasFullSourceMapping();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(52, 52);
      // Undeclared exception!
      try { 
        slicingTransform0.getTranslation((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-1296), 1);
      // Undeclared exception!
      try { 
        slicingTransform0.getMatrix();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1295
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-1), 4);
      // Undeclared exception!
      try { 
        slicingTransform0.getMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentZero((boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentMapping((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4222, 4222);
      SlicingTransform slicingTransform1 = new SlicingTransform(4222, 4222);
      // Undeclared exception!
      slicingTransform0.concatenate((Slicing) slicingTransform1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      // Undeclared exception!
      try { 
        slicingTransform0.concatenate((Slicing) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      int[] intArray0 = new int[6];
      intArray0[0] = 4;
      slicingTransform0.setComponentMapping(intArray0);
      // Undeclared exception!
      try { 
        slicingTransform0.concatenate((Slicing) slicingTransform0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4207, 4207);
      BoundingBox boundingBox0 = new BoundingBox(4207);
      BoundingBox boundingBox1 = slicingTransform0.transform(boundingBox0);
      // Undeclared exception!
      slicingTransform0.apply(boundingBox0.corner2, boundingBox1.corner1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      // Undeclared exception!
      try { 
        slicingTransform0.apply((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      int[] intArray0 = new int[16];
      intArray0[0] = 4;
      slicingTransform0.setComponentMapping(intArray0);
      long[] longArray0 = new long[4];
      // Undeclared exception!
      try { 
        slicingTransform0.apply(longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      // Undeclared exception!
      try { 
        slicingTransform0.apply((int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(3, 3);
      int[] intArray0 = new int[7];
      intArray0[0] = 3;
      slicingTransform0.setComponentMapping(intArray0);
      int[] intArray1 = new int[3];
      // Undeclared exception!
      try { 
        slicingTransform0.apply(intArray1, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      Point point0 = new Point(4);
      // Undeclared exception!
      try { 
        slicingTransform0.apply((Localizable) null, (Positionable) point0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      slicingTransform0.setComponentMapping(intArray0);
      Point point0 = new Point(2);
      // Undeclared exception!
      try { 
        slicingTransform0.apply((Localizable) point0, (Positionable) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(5072, 5072);
      SlicingTransform slicingTransform1 = new SlicingTransform(5072, 5072);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SlicingTransform slicingTransform0 = null;
      try {
        slicingTransform0 = new SlicingTransform((-1023), (-1023));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1023
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(3299, 3299);
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentMapping(3299);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      int[] intArray0 = new int[10];
      slicingTransform0.getComponentMapping(intArray0);
      assertArrayEquals(new int[] {0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(206, 206);
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentZero(206);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      boolean[] booleanArray0 = new boolean[8];
      slicingTransform0.getComponentZero(booleanArray0);
      assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false, false}, booleanArray0));
      assertTrue(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      long long0 = slicingTransform0.getTranslation(0);
      assertEquals(0L, long0);
      assertTrue(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 2);
      long long0 = slicingTransform0.getTranslation(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(3, 3);
      // Undeclared exception!
      try { 
        slicingTransform0.getTranslation(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      BoundingBox boundingBox0 = new BoundingBox(2);
      slicingTransform0.getTranslation(boundingBox0.corner2);
      assertTrue(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 1);
      BoundingBox boundingBox1 = slicingTransform0.transform(boundingBox0);
      slicingTransform0.getTranslation(boundingBox1.corner2);
      assertEquals(0, slicingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 44);
      boolean boolean0 = slicingTransform0.hasFullSourceMapping();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      boolean boolean0 = slicingTransform0.hasFullSourceMapping();
      assertEquals(2, slicingTransform0.numSourceDimensions());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 823);
      double[][] doubleArray0 = slicingTransform0.getMatrix();
      assertEquals(824, doubleArray0.length);
      assertEquals(0, slicingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      SlicingTransform slicingTransform1 = new SlicingTransform(2, 2498);
      // Undeclared exception!
      try { 
        slicingTransform0.set(slicingTransform1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      SlicingTransform slicingTransform1 = new SlicingTransform((-19), 1);
      // Undeclared exception!
      try { 
        slicingTransform0.set(slicingTransform1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      SlicingTransform slicingTransform1 = new SlicingTransform(1, 1486);
      assertEquals(1, slicingTransform1.numSourceDimensions());
      
      SlicingTransform slicingTransform2 = slicingTransform0.preConcatenate((Slicing) slicingTransform1);
      assertEquals(1, slicingTransform2.numSourceDimensions());
      assertTrue(slicingTransform2.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-88), 3299);
      // Undeclared exception!
      try { 
        slicingTransform0.preConcatenate((Slicing) slicingTransform0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      SlicingTransform slicingTransform1 = new SlicingTransform(4, 3418);
      SlicingTransform slicingTransform2 = slicingTransform1.concatenate((Slicing) slicingTransform0);
      assertTrue(slicingTransform2.hasFullSourceMapping());
      assertNotSame(slicingTransform2, slicingTransform1);
      assertEquals(4, slicingTransform1.numSourceDimensions());
      assertTrue(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1514, 1551);
      // Undeclared exception!
      try { 
        slicingTransform0.concatenate((Slicing) slicingTransform0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 1266);
      Point point0 = new Point(1266);
      slicingTransform0.apply((Localizable) point0, (Positionable) point0);
      assertTrue(slicingTransform0.hasFullSourceMapping());
      assertEquals(4, slicingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(25, 25);
      Point point0 = new Point(1);
      // Undeclared exception!
      try { 
        slicingTransform0.apply((Localizable) point0, (Positionable) point0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0);
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 1);
      Object object0 = new Object();
      PointSample<Object> pointSample0 = PointSample.wrap(object0, boundingBox0.corner2);
      // Undeclared exception!
      try { 
        slicingTransform0.apply((Localizable) pointSample0, (Positionable) pointSample0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform((-19), 1);
      int[] intArray0 = new int[5];
      slicingTransform0.apply(intArray0, intArray0);
      assertEquals((-19), slicingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 1630);
      int[] intArray0 = new int[16];
      // Undeclared exception!
      try { 
        slicingTransform0.apply(intArray0, intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4222, 4222);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        slicingTransform0.apply(intArray0, intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      assertTrue(slicingTransform0.hasFullSourceMapping());
      
      long[] longArray0 = new long[3];
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      slicingTransform0.setComponentZero(booleanArray0);
      slicingTransform0.apply(longArray0, longArray0);
      assertFalse(slicingTransform0.hasFullSourceMapping());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4222, 4222);
      BoundingBox boundingBox0 = new BoundingBox(40);
      // Undeclared exception!
      try { 
        slicingTransform0.transform(boundingBox0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2059, 2059);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        slicingTransform0.apply(longArray0, longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      assertTrue(slicingTransform0.hasFullSourceMapping());
      
      int[] intArray0 = new int[22];
      slicingTransform0.setComponentMapping(intArray0);
      boolean boolean0 = slicingTransform0.hasFullSourceMapping();
      assertEquals(2, slicingTransform0.numSourceDimensions());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentMapping(1427);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(40, 40);
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentMapping(intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 18);
      boolean[] booleanArray0 = new boolean[1];
      // Undeclared exception!
      try { 
        slicingTransform0.setComponentZero(booleanArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentZero(139);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(13, 13);
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentZero(booleanArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(10, 10);
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        slicingTransform0.setTranslation(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(13, 13);
      slicingTransform0.getMatrix();
      assertTrue(slicingTransform0.hasFullSourceMapping());
      assertEquals(13, slicingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      // Undeclared exception!
      try { 
        slicingTransform0.getTranslation(3317);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 2);
      BoundingBox boundingBox0 = new BoundingBox(0);
      // Undeclared exception!
      try { 
        slicingTransform0.getTranslation(boundingBox0.corner2);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      SlicingTransform slicingTransform0 = null;
      try {
        slicingTransform0 = new SlicingTransform(1916, (-704));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(1, 1);
      slicingTransform0.getConcatenableClass();
      assertTrue(slicingTransform0.hasFullSourceMapping());
      assertEquals(1, slicingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(4, 4);
      slicingTransform0.getPreConcatenableClass();
      assertTrue(slicingTransform0.hasFullSourceMapping());
      assertEquals(4, slicingTransform0.numSourceDimensions());
  }
}
