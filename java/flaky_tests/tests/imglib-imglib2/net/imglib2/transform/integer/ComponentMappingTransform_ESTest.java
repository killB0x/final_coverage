/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 11:27:01 GMT 2022
 */

package net.imglib2.transform.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.Cursor;
import net.imglib2.Localizable;
import net.imglib2.Point;
import net.imglib2.PointSampleList;
import net.imglib2.Positionable;
import net.imglib2.transform.integer.BoundingBox;
import net.imglib2.transform.integer.ComponentMapping;
import net.imglib2.transform.integer.ComponentMappingTransform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComponentMappingTransform_ESTest extends ComponentMappingTransform_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[2];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      ComponentMappingTransform componentMappingTransform1 = new ComponentMappingTransform(0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.preConcatenate((ComponentMapping) componentMappingTransform1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1006);
      ComponentMappingTransform componentMappingTransform1 = new ComponentMappingTransform(0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.concatenate((ComponentMapping) componentMappingTransform1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1);
      int[] intArray0 = new int[9];
      int[] intArray1 = new int[9];
      componentMappingTransform0.apply(intArray0, intArray1);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[5];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      long[] longArray0 = new long[5];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      BoundingBox boundingBox1 = componentMappingTransform0.transform(boundingBox0);
      assertSame(boundingBox1, boundingBox0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      long[] longArray0 = new long[17];
      componentMappingTransform0.apply(longArray0, longArray0);
      assertEquals(0, componentMappingTransform0.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(0);
      int[] intArray0 = new int[8];
      componentMappingTransform0.getComponentMapping(intArray0);
      assertEquals(8, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      ComponentMappingTransform componentMappingTransform1 = componentMappingTransform0.preConcatenate((ComponentMapping) componentMappingTransform0);
      assertEquals(0, componentMappingTransform1.numTargetDimensions());
      assertNotSame(componentMappingTransform1, componentMappingTransform0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[3];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      int int0 = componentMappingTransform0.getComponentMapping(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1983);
      int int0 = componentMappingTransform0.getComponentMapping(1077);
      assertEquals(1077, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = (-1);
      componentMappingTransform0.setComponentMapping(intArray1);
      int int0 = componentMappingTransform0.getComponentMapping(0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[3];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.setComponentMapping((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(3633);
      ComponentMappingTransform componentMappingTransform1 = new ComponentMappingTransform(3633);
      // Undeclared exception!
      componentMappingTransform0.preConcatenate((ComponentMapping) componentMappingTransform1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.preConcatenate((ComponentMapping) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 210;
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.preConcatenate((ComponentMapping) componentMappingTransform0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 210 out of bounds for length 1
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(5784);
      componentMappingTransform0.getMatrix();
      // Undeclared exception!
      componentMappingTransform0.getMatrix();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1207);
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[3];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentMapping((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(3398);
      ComponentMappingTransform componentMappingTransform1 = new ComponentMappingTransform(3398);
      // Undeclared exception!
      componentMappingTransform0.concatenate((ComponentMapping) componentMappingTransform1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[9];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.concatenate((ComponentMapping) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.concatenate((ComponentMapping) componentMappingTransform0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-278);
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply(longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -278 out of bounds for length 1
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply(intArray0, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 601;
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 601 out of bounds for length 2
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      Point point0 = new Point(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply((Localizable) point0, (Positionable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1909);
      Point point0 = new Point(intArray0);
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply((Localizable) point0, (Positionable) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = null;
      try {
        componentMappingTransform0 = new ComponentMappingTransform((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(6335);
      ComponentMappingTransform componentMappingTransform1 = new ComponentMappingTransform(6335);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = null;
      try {
        componentMappingTransform0 = new ComponentMappingTransform((-14));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -14
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentMapping((-3207));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[4];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      ComponentMappingTransform componentMappingTransform1 = new ComponentMappingTransform(0);
      // Undeclared exception!
      try { 
        componentMappingTransform1.preConcatenate((ComponentMapping) componentMappingTransform0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      ComponentMappingTransform componentMappingTransform1 = componentMappingTransform0.concatenate((ComponentMapping) componentMappingTransform0);
      assertNotSame(componentMappingTransform1, componentMappingTransform0);
      assertEquals(1, componentMappingTransform1.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      ComponentMappingTransform componentMappingTransform1 = new ComponentMappingTransform(2336);
      // Undeclared exception!
      try { 
        componentMappingTransform0.concatenate((ComponentMapping) componentMappingTransform1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      ComponentMappingTransform componentMappingTransform1 = componentMappingTransform0.concatenate((ComponentMapping) componentMappingTransform0);
      assertEquals(0, componentMappingTransform1.numSourceDimensions());
      assertNotSame(componentMappingTransform1, componentMappingTransform0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(2081);
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(6270);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      componentMappingTransform0.apply((Localizable) point0, (Positionable) point0);
      assertEquals(6270, point0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[3];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      PointSampleList<ComponentMappingTransform> pointSampleList0 = new PointSampleList<ComponentMappingTransform>(981);
      Cursor<ComponentMappingTransform> cursor0 = pointSampleList0.localizingCursor();
      long[] longArray0 = new long[2];
      Point point0 = Point.wrap(longArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply((Localizable) cursor0, (Positionable) point0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int[] intArray0 = new int[9];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      long[] longArray0 = new long[0];
      Point point0 = Point.wrap(longArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply((Localizable) point0, (Positionable) point0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[9];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      int[] intArray1 = new int[1];
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply(intArray0, intArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1727);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply(intArray0, intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      long[] longArray0 = new long[1];
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply(longArray0, longArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.apply(longArray0, longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.setComponentMapping(intArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      componentMappingTransform0.setComponentMapping(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(698);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentMapping(1955);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      ComponentMappingTransform componentMappingTransform1 = componentMappingTransform0.preConcatenate((ComponentMapping) componentMappingTransform0);
      assertNotSame(componentMappingTransform1, componentMappingTransform0);
      assertEquals(1, componentMappingTransform1.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int[] intArray0 = new int[1];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      componentMappingTransform0.getComponentMapping(intArray0);
      assertEquals(1, componentMappingTransform0.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1796);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentMapping(intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1);
      Class<ComponentMapping> class0 = componentMappingTransform0.getConcatenableClass();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      Class<ComponentMapping> class0 = componentMappingTransform0.getPreConcatenableClass();
      assertFalse(class0.isSynthetic());
  }
}
