/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:38:57 GMT 2022
 */

package net.imglib2.transform.integer.shear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.Localizable;
import net.imglib2.Point;
import net.imglib2.PointSample;
import net.imglib2.PointSampleList;
import net.imglib2.Positionable;
import net.imglib2.RealPointSample;
import net.imglib2.transform.integer.BoundingBox;
import net.imglib2.transform.integer.shear.AbstractShearTransform;
import net.imglib2.transform.integer.shear.InverseShearTransform;
import net.imglib2.transform.integer.shear.ShearTransform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShearTransform_ESTest extends ShearTransform_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(0, 0, 2141);
      ShearTransform shearTransform0 = new ShearTransform((-2578), 0, 0, inverseShearTransform0);
      long[] longArray0 = new long[1];
      longArray0[0] = 2676L;
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      shearTransform0.apply(boundingBox0.corner1, boundingBox0.corner1);
      BoundingBox boundingBox1 = shearTransform0.transform(boundingBox0);
      assertSame(boundingBox1, boundingBox0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(796, (-675), 0);
      long[] longArray0 = new long[3];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      // Undeclared exception!
      try { 
        shearTransform0.transform(boundingBox0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -675 out of bounds for length 3
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(0, 2200, 713);
      // Undeclared exception!
      try { 
        shearTransform0.getShear();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2200 out of bounds for length 0
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(796, (-675), 0);
      ShearTransform shearTransform1 = shearTransform0.copy();
      assertEquals((-675), shearTransform1.getShearDimension());
      assertEquals(0, shearTransform1.getReferenceDimension());
      assertEquals(796, shearTransform1.numDimensions());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(0, 2156, 0);
      ShearTransform shearTransform0 = new ShearTransform((-2255), 0, 0, inverseShearTransform0);
      long[] longArray0 = new long[1];
      longArray0[0] = (long) (-2255);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      Supplier<PointSample<ShearTransform>> supplier1 = (Supplier<PointSample<ShearTransform>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<PointSample<ShearTransform>> pointSample0 = PointSample.wrapSupplier(supplier1, longArray0);
      PointSample<Object> pointSample1 = new PointSample<Object>(supplier0, pointSample0);
      Point point0 = new Point(0);
      // Undeclared exception!
      try { 
        shearTransform0.apply((Localizable) pointSample1, (Positionable) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(0, 1819, 0);
      ShearTransform shearTransform0 = new ShearTransform(2141, 2141, 1819, inverseShearTransform0);
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(2268);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      shearTransform0.apply((Localizable) point0, (Positionable) point0);
      assertEquals(1819, shearTransform0.getReferenceDimension());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(2141, 887, 374);
      ShearTransform shearTransform0 = new ShearTransform(887, 1747, 0, inverseShearTransform0);
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(887);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      // Undeclared exception!
      try { 
        shearTransform0.apply((Localizable) point0, (Positionable) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(0, 0, 2141);
      ShearTransform shearTransform0 = new ShearTransform((-2578), 0, 0, inverseShearTransform0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1522);
      shearTransform0.apply(intArray0, intArray0);
      assertArrayEquals(new int[] {(-3044)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(0, 156, 1);
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(2, (-3270), 2, shearTransform0);
      ShearTransform shearTransform1 = new ShearTransform((-3270), 2, (-3270), inverseShearTransform0);
      int[] intArray0 = new int[9];
      // Undeclared exception!
      try { 
        shearTransform1.apply(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3270 out of bounds for length 9
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(0, 0, 2141);
      ShearTransform shearTransform0 = new ShearTransform((-2578), 0, 0, inverseShearTransform0);
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[3];
      shearTransform0.apply(intArray0, intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(0, 0, 0);
      ShearTransform shearTransform1 = new ShearTransform(1, 0, (-434), shearTransform0);
      long[] longArray0 = new long[2];
      // Undeclared exception!
      try { 
        shearTransform1.apply(longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -434 out of bounds for length 2
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(0, 0, 2141);
      ShearTransform shearTransform0 = new ShearTransform((-2578), 0, 0, inverseShearTransform0);
      long[] longArray0 = new long[1];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      shearTransform0.apply(boundingBox0.corner2, boundingBox0.corner1);
      assertEquals((-2578), shearTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(2, 2754, 2754);
      ShearTransform shearTransform1 = new ShearTransform(2754, 1151, 1151, shearTransform0);
      long[] longArray0 = shearTransform1.getShear();
      assertEquals(2754, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(0, 0, 0, (AbstractShearTransform) null);
      ShearTransform shearTransform1 = shearTransform0.copy();
      assertEquals(0, shearTransform1.getReferenceDimension());
      assertEquals(0, shearTransform1.getShearDimension());
      assertEquals(0, shearTransform1.numDimensions());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform((-1153), (-1153), (-1153));
      ShearTransform shearTransform1 = shearTransform0.copy();
      assertEquals((-1153), shearTransform1.getShearDimension());
      assertEquals((-1153), shearTransform1.getReferenceDimension());
      assertEquals((-1153), shearTransform1.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(0, 0, 0);
      InverseShearTransform inverseShearTransform0 = new InverseShearTransform(108, 0, 0);
      BoundingBox boundingBox0 = new BoundingBox(3977);
      BoundingBox boundingBox1 = inverseShearTransform0.transform(boundingBox0);
      BoundingBox boundingBox2 = shearTransform0.transform(boundingBox1);
      // Undeclared exception!
      shearTransform0.transform(boundingBox2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform((-2255), (-2255), (-2255));
      // Undeclared exception!
      try { 
        shearTransform0.transform((BoundingBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(2896, 2896, 2896);
      // Undeclared exception!
      try { 
        shearTransform0.apply((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(1, 1, 1);
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        shearTransform0.apply(longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(0, 0, 0);
      // Undeclared exception!
      try { 
        shearTransform0.apply((int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(0, 0, 0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        shearTransform0.apply(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(808, 808, 808);
      Point point0 = new Point(808);
      // Undeclared exception!
      try { 
        shearTransform0.apply((Localizable) null, (Positionable) point0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(113, 868, 113);
      Point point0 = new Point(113);
      double[] doubleArray0 = new double[0];
      RealPointSample<ShearTransform> realPointSample0 = RealPointSample.wrap(shearTransform0, doubleArray0);
      // Undeclared exception!
      try { 
        shearTransform0.apply((Localizable) point0, (Positionable) realPointSample0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(810, 810, 810);
      Point point0 = new Point(797);
      // Undeclared exception!
      try { 
        shearTransform0.apply((Localizable) point0, (Positionable) point0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(1, 1, 1);
      int[] intArray0 = new int[2];
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        shearTransform0.apply(intArray0, intArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(11, 11, 11);
      int[] intArray0 = new int[9];
      // Undeclared exception!
      try { 
        shearTransform0.apply(intArray0, intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(2, 1, 2);
      long[] longArray0 = new long[4];
      long[] longArray1 = new long[1];
      // Undeclared exception!
      try { 
        shearTransform0.apply(longArray0, longArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(9, 9, 9);
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        shearTransform0.apply(longArray0, longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform(4, 2268, 2268);
      ShearTransform shearTransform1 = shearTransform0.copy();
      assertEquals(2268, shearTransform1.getShearDimension());
      assertEquals(2268, shearTransform1.getReferenceDimension());
      assertEquals(4, shearTransform1.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ShearTransform shearTransform0 = new ShearTransform((-1258), (-1258), (-1258));
      // Undeclared exception!
      try { 
        shearTransform0.getShear();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1258
         //
         verifyException("net.imglib2.transform.integer.shear.ShearTransform", e);
      }
  }
}
