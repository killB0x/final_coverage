/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:38:53 GMT 2022
 */

package net.imglib2.transform.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.FinalInterval;
import net.imglib2.transform.integer.BoundingBox;
import net.imglib2.transform.integer.ComponentMappingTransform;
import net.imglib2.transform.integer.Mixed;
import net.imglib2.transform.integer.MixedTransform;
import net.imglib2.transform.integer.SlicingTransform;
import net.imglib2.transform.integer.TranslationTransform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractMixedTransform_ESTest extends AbstractMixedTransform_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[5];
      FinalInterval finalInterval0 = new FinalInterval(longArray0, longArray0);
      BoundingBox boundingBox0 = new BoundingBox(finalInterval0);
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1985);
      // Undeclared exception!
      try { 
        componentMappingTransform0.transform(boundingBox0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(0);
      long[] longArray0 = new long[9];
      componentMappingTransform0.getTranslation(longArray0);
      assertEquals(0, componentMappingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(274);
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(274);
      componentMappingTransform0.getTranslation(boundingBox0.corner2);
      assertEquals(274, boundingBox0.n);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1);
      boolean[] booleanArray0 = new boolean[16];
      componentMappingTransform0.getComponentZero(booleanArray0);
      assertEquals(1, componentMappingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      componentMappingTransform0.getComponentMapping(intArray0);
      assertEquals(0, componentMappingTransform0.numSourceDimensions());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(0);
      boolean[] booleanArray0 = new boolean[0];
      componentMappingTransform0.getComponentInversion(booleanArray0);
      assertEquals(0, componentMappingTransform0.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[0];
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(0);
      FinalInterval finalInterval0 = FinalInterval.wrap(longArray0, longArray0);
      BoundingBox boundingBox0 = new BoundingBox(finalInterval0);
      BoundingBox boundingBox1 = componentMappingTransform0.transform(boundingBox0);
      assertSame(boundingBox1, boundingBox0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[0];
      TranslationTransform translationTransform0 = new TranslationTransform(longArray0);
      int int0 = translationTransform0.numTargetDimensions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(10, 10);
      int int0 = slicingTransform0.numTargetDimensions();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TranslationTransform translationTransform0 = new TranslationTransform(0);
      int int0 = translationTransform0.numSourceDimensions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(2, 0);
      int int0 = slicingTransform0.numSourceDimensions();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MixedTransform mixedTransform0 = new MixedTransform((-2248), 1057);
      int int0 = mixedTransform0.numSourceDimensions();
      assertEquals((-2248), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(820);
      long long0 = componentMappingTransform0.getTranslation(820);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[0] = (-2617L);
      TranslationTransform translationTransform0 = new TranslationTransform(longArray0);
      TranslationTransform.InverseTranslationTransform translationTransform_InverseTranslationTransform0 = translationTransform0.new InverseTranslationTransform(0);
      long long0 = translationTransform_InverseTranslationTransform0.getTranslation(0);
      assertEquals(2617L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(831);
      boolean boolean0 = componentMappingTransform0.getComponentZero(831);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[9];
      TranslationTransform translationTransform0 = new TranslationTransform(longArray0);
      int int0 = translationTransform0.getComponentMapping(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TranslationTransform translationTransform0 = new TranslationTransform(1);
      int int0 = translationTransform0.getComponentMapping(1869);
      assertEquals(1869, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[0];
      TranslationTransform translationTransform0 = new TranslationTransform(longArray0);
      int int0 = translationTransform0.getComponentMapping((-3300));
      assertEquals((-3300), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(831);
      boolean boolean0 = componentMappingTransform0.getComponentInversion(831);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(820);
      // Undeclared exception!
      try { 
        componentMappingTransform0.transform((BoundingBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.AbstractMixedTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(3);
      int[] intArray0 = new int[3];
      intArray0[0] = 3;
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(intArray0);
      // Undeclared exception!
      try { 
        componentMappingTransform0.transform(boundingBox0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getTranslation((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.AbstractMixedTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(10, 10);
      long[] longArray0 = new long[3];
      // Undeclared exception!
      try { 
        slicingTransform0.getTranslation(longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(10, 10);
      // Undeclared exception!
      try { 
        slicingTransform0.getTranslation(10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 10 out of bounds for length 10
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(820);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentZero((boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.AbstractMixedTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MixedTransform mixedTransform0 = new MixedTransform(11, 11);
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        mixedTransform0.getComponentZero(booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.transform.integer.MixedTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SlicingTransform slicingTransform0 = new SlicingTransform(0, 0);
      // Undeclared exception!
      try { 
        slicingTransform0.getComponentZero(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.transform.integer.SlicingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(831);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentMapping((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(10);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentMapping(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.transform.integer.ComponentMappingTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1608);
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentInversion((boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.AbstractMixedTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MixedTransform mixedTransform0 = new MixedTransform(831, 831);
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        mixedTransform0.getComponentInversion(booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.transform.integer.MixedTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MixedTransform mixedTransform0 = new MixedTransform(831, 831);
      // Undeclared exception!
      try { 
        mixedTransform0.getComponentInversion(831);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 831 out of bounds for length 831
         //
         verifyException("net.imglib2.transform.integer.MixedTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[19];
      TranslationTransform translationTransform0 = new TranslationTransform(longArray0);
      MixedTransform mixedTransform0 = new MixedTransform(8, 8);
      MixedTransform mixedTransform1 = mixedTransform0.concatenate((Mixed) translationTransform0);
      assertEquals(19, mixedTransform1.numSourceDimensions());
      
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      BoundingBox boundingBox1 = mixedTransform1.transform(boundingBox0);
      assertEquals(8, boundingBox1.n);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(828);
      BoundingBox boundingBox0 = new BoundingBox(2265);
      // Undeclared exception!
      try { 
        componentMappingTransform0.transform(boundingBox0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(6545);
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(6545);
      // Undeclared exception!
      componentMappingTransform0.transform(boundingBox0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(831);
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentInversion(booleanArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MixedTransform mixedTransform0 = new MixedTransform(2184, 2184);
      TranslationTransform translationTransform0 = new TranslationTransform(2184);
      mixedTransform0.set(translationTransform0);
      assertTrue(mixedTransform0.hasFullSourceMapping());
      assertEquals(2184, translationTransform0.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TranslationTransform translationTransform0 = new TranslationTransform(844);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        translationTransform0.getComponentMapping(intArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(1);
      MixedTransform mixedTransform0 = new MixedTransform(1, 800);
      TranslationTransform translationTransform0 = new TranslationTransform(boundingBox0.corner2);
      TranslationTransform.InverseTranslationTransform translationTransform_InverseTranslationTransform0 = translationTransform0.new InverseTranslationTransform((-581));
      mixedTransform0.set(translationTransform_InverseTranslationTransform0);
      assertEquals((-581), translationTransform_InverseTranslationTransform0.numSourceDimensions());
      assertEquals(800, mixedTransform0.numTargetDimensions());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(34);
      boolean[] booleanArray0 = new boolean[16];
      // Undeclared exception!
      try { 
        componentMappingTransform0.getComponentZero(booleanArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ComponentMappingTransform componentMappingTransform0 = new ComponentMappingTransform(1);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        componentMappingTransform0.getTranslation(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
