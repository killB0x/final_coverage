/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:20:07 GMT 2022
 */

package net.imglib2.transform.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.FinalInterval;
import net.imglib2.Interval;
import net.imglib2.PointSampleList;
import net.imglib2.transform.integer.BoundingBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BoundingBox_ESTest extends BoundingBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[4] = 1675L;
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0);
      BoundingBox boundingBox0 = new BoundingBox(finalInterval0);
      Interval interval0 = boundingBox0.getInterval();
      assertEquals(3, interval0.numDimensions());
      assertFalse(interval0.equals((Object)finalInterval0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[6];
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0);
      BoundingBox boundingBox0 = new BoundingBox(finalInterval0);
      boundingBox0.corner2(longArray0);
      assertArrayEquals(new long[] {(-1L), (-1L), (-1L), 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[0];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      long[] longArray1 = new long[1];
      boundingBox0.corner1(longArray1);
      assertFalse(longArray0.equals((Object)longArray1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[1];
      long[] longArray1 = new long[7];
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox(longArray0, longArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[0];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      int int0 = boundingBox0.numDimensions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(6065);
      boundingBox0.getInterval();
      // Undeclared exception!
      boundingBox0.getInterval();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(5);
      // Undeclared exception!
      try { 
        boundingBox0.corner2((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(6041);
      boundingBox0.corner1(boundingBox0.corner2);
      // Undeclared exception!
      boundingBox0.corner1(boundingBox0.corner1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(1285);
      // Undeclared exception!
      try { 
        boundingBox0.corner1((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox((Interval) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.transform.integer.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[0];
      long[] longArray1 = new long[4];
      FinalInterval finalInterval0 = FinalInterval.wrap(longArray1, longArray0);
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox(finalInterval0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox((-2953));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2953
         //
         verifyException("net.imglib2.transform.integer.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = 1694L;
      FinalInterval finalInterval0 = FinalInterval.createMinMax(longArray0);
      BoundingBox boundingBox0 = new BoundingBox(finalInterval0);
      boundingBox0.orderMinMax();
      assertEquals(3, boundingBox0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[6];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      long[] longArray1 = new long[1];
      // Undeclared exception!
      try { 
        boundingBox0.corner2(longArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[6];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      boundingBox0.corner2(longArray0);
      assertEquals(6, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(1894);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        boundingBox0.corner1(longArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[2];
      long[] longArray1 = new long[0];
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox(longArray0, longArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      long[] longArray0 = new long[6];
      BoundingBox boundingBox0 = new BoundingBox(longArray0, longArray0);
      int int0 = boundingBox0.numDimensions();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(6065);
      BoundingBox boundingBox0 = new BoundingBox(pointSampleList0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(5930);
      boundingBox0.getInterval();
      // Undeclared exception!
      boundingBox0.orderMinMax();
  }
}
