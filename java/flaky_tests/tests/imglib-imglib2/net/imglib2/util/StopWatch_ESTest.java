/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:18:50 GMT 2022
 */

package net.imglib2.util;

import org.junit.Test;
import static org.junit.Assert.*;
import net.imglib2.util.StopWatch;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StopWatch_ESTest extends StopWatch_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = StopWatch.secondsToString((-0.24604021513886554));
      assertEquals("-246.040 ms", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = StopWatch.secondsToString((-1.0));
      assertEquals("-1.000 s", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = StopWatch.secondsToString(1.0E-9);
      assertEquals("1.000 ns", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createAndStart();
      System.setCurrentTimeMillis(1392409281320000L);
      stopWatch0.stop();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      StopWatch stopWatch0 = StopWatch.createAndStart();
      stopWatch0.stop();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createAndStart();
      System.setCurrentTimeMillis((-1078L));
      long long0 = stopWatch0.nanoTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createStopped();
      stopWatch0.start();
      System.setCurrentTimeMillis(1392409281320000L);
      double double0 = stopWatch0.seconds();
      assertEquals(1.39101687203868E9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = StopWatch.secondsToString(0.001);
      assertEquals("1.000 ms", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = StopWatch.secondsToString(1.0E-6);
      assertEquals("1.000 \u00B5s", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = StopWatch.secondsToString((-1731.4318002771));
      assertEquals("-1731.432 s", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createAndStart();
      stopWatch0.stop();
      long long0 = stopWatch0.nanoTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createAndStart();
      stopWatch0.stop();
      stopWatch0.stop();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createAndStart();
      System.setCurrentTimeMillis(1392409281320000L);
      long long0 = stopWatch0.nanoTime();
      assertEquals(1391016872038680000L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createAndStart();
      String string0 = stopWatch0.toString();
      assertEquals("0.000 ns", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createAndStart();
      double double0 = stopWatch0.seconds();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StopWatch stopWatch0 = StopWatch.createStopped();
      stopWatch0.start();
      stopWatch0.start();
  }
}
