/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 11:34:16 GMT 2022
 */

package net.imglib2.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.Dimensions;
import net.imglib2.FinalDimensions;
import net.imglib2.FinalInterval;
import net.imglib2.Interval;
import net.imglib2.Localizable;
import net.imglib2.Point;
import net.imglib2.PointSample;
import net.imglib2.PointSampleList;
import net.imglib2.Positionable;
import net.imglib2.RealPoint;
import net.imglib2.util.IntervalIndexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntervalIndexer_ESTest extends IntervalIndexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int[] intArray0 = new int[3];
      int[] intArray1 = new int[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.createAllocationSteps(intArray0, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = new int[5];
      int[] intArray1 = new int[0];
      IntervalIndexer.createAllocationSteps(intArray1, intArray0);
      assertArrayEquals(new int[] {1, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      long[] longArray0 = new long[1];
      long[] longArray1 = new long[0];
      IntervalIndexer.createAllocationSteps(longArray1, longArray0);
      assertArrayEquals(new long[] {1L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[3] = 1509L;
      longArray0[4] = 1509L;
      longArray0[5] = 1509L;
      longArray0[6] = 1509L;
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0);
      Point point0 = new Point(longArray0);
      IntervalIndexer.indexToPositionForInterval(1509L, finalInterval0, point0);
      assertEquals(8, point0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (-461L);
      FinalInterval finalInterval0 = FinalInterval.wrap(longArray0, longArray0);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionForInterval((-461L), finalInterval0, (Positionable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[4] = 1509L;
      longArray0[5] = 1509L;
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0);
      Point point0 = new Point(longArray0);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionForInterval(1509L, finalInterval0, point0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[1] = 1L;
      Point point0 = new Point(longArray0);
      FinalInterval finalInterval0 = new FinalInterval(point0, point0);
      long long0 = IntervalIndexer.positionToIndexForInterval(point0, finalInterval0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[2] = (long) 53;
      int[] intArray0 = new int[8];
      intArray0[2] = 53;
      long long0 = IntervalIndexer.indexToPositionWithOffset(53, intArray0, intArray0, longArray0, 2);
      assertEquals(54L, long0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      long[] longArray0 = new long[5];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-4512L), longArray0, (-1034));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1034 out of bounds for length 5
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-1L);
      longArray0[1] = (-1L);
      longArray0[2] = (-1L);
      longArray0[3] = (-1L);
      longArray0[4] = (-1L);
      longArray0[5] = (-1L);
      longArray0[6] = (-1L);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-1L), longArray0, longArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 6 out of bounds for length 6
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-1L);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-1L), longArray0, longArray0, doubleArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(0L, longArray0, longArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 417L;
      float[] floatArray0 = new float[3];
      IntervalIndexer.indexToPositionWithOffset(417L, longArray0, longArray0, floatArray0);
      assertArrayEquals(new float[] {834.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[0] = 2626L;
      longArray0[1] = 2626L;
      float[] floatArray0 = new float[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(2626L, longArray0, longArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      int[] intArray0 = new int[5];
      long[] longArray0 = new long[8];
      longArray0[0] = (long) 1;
      longArray0[1] = (long) 2;
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(713L, longArray0, longArray0, intArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      long[] longArray0 = new long[5];
      int[] intArray0 = new int[8];
      IntervalIndexer.createAllocationSteps(longArray0, longArray0);
      IntervalIndexer.indexToPositionWithOffset(1L, longArray0, longArray0, intArray0);
      assertArrayEquals(new int[] {1, 1, 1, 1, 2, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[3];
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1479L, longArray1, longArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = (-1900L);
      longArray0[1] = (long) 6;
      longArray0[2] = (-1900L);
      longArray0[3] = (long) 6;
      IntervalIndexer.indexToPositionWithOffset((-1900L), longArray0, longArray0, longArray0);
      assertArrayEquals(new long[] {(-1900L), 7L, (-1900L), 6L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = (-1525L);
      int[] intArray0 = new int[1];
      IntervalIndexer.indexToPositionWithOffset((-399), intArray0, longArray0, longArray0);
      assertArrayEquals(new long[] {(-1924L), 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[3];
      IntervalIndexer.indexToPosition((-1543L), longArray0, intArray0);
      IntervalIndexer.createAllocationSteps(longArray0, longArray0);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(440, intArray0, longArray0, longArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[5];
      intArray0[0] = (-1582);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-1582), intArray0, longArray0, longArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      long[] longArray0 = new long[9];
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1724, intArray0, longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 9
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1580;
      intArray0[1] = 1580;
      intArray0[2] = 1580;
      intArray0[3] = 1580;
      intArray0[4] = 1580;
      IntervalIndexer.indexToPositionWithOffset(1580, intArray0, intArray0, intArray0);
      assertArrayEquals(new int[] {1580, 1581, 1580, 1580, 1580}, intArray0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1580;
      intArray0[1] = 1580;
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1580, intArray0, intArray0, intArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (long) 1580;
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(1580L, longArray0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      long[] longArray0 = new long[0];
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((long) 535, longArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (-477L);
      float[] floatArray0 = new float[9];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-477L), longArray0, floatArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-3578L), longArray0, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 740;
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(740, intArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (long) 35;
      FinalInterval finalInterval0 = new FinalInterval(longArray0);
      RealPoint realPoint0 = new RealPoint(1);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((long) 1301, (Dimensions) finalInterval0, (Positionable) realPoint0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-2690L);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-2690L), longArray0, longArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(2101L, longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-116);
      intArray0[1] = (-116);
      long[] longArray0 = new long[9];
      IntervalIndexer.indexToPosition((-4080), intArray0, longArray0);
      assertArrayEquals(new long[] {(-20L), 35L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      long[] longArray0 = new long[7];
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(4685, intArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 7
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 417L;
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-3828L), longArray0, intArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-766);
      intArray0[1] = (-766);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-766), intArray0, intArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 20;
      int int0 = IntervalIndexer.positionWithOffsetToIndex(intArray0, intArray0, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-1L);
      long[] longArray1 = new long[8];
      int[] intArray0 = new int[2];
      int int0 = IntervalIndexer.positionWithOffsetToIndex(longArray0, intArray0, longArray1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int[] intArray0 = new int[5];
      long[] longArray0 = new long[8];
      longArray0[1] = (long) 2;
      int int0 = IntervalIndexer.positionWithOffsetToIndex(longArray0, intArray0, longArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      long[] longArray0 = new long[7];
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      int int0 = IntervalIndexer.positionWithOffsetToIndex(longArray0, intArray0, longArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[2] = (-5618L);
      long long0 = IntervalIndexer.positionWithOffsetToIndex(longArray0, longArray0, longArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      long[] longArray0 = new long[6];
      long long0 = IntervalIndexer.positionToIndex(longArray0, longArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[2];
      intArray0[0] = 20;
      int int0 = IntervalIndexer.positionToIndex(longArray0, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[0] = 2626L;
      float[] floatArray0 = new float[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(2626L, longArray0, longArray0, floatArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int[] intArray0 = new int[8];
      long[] longArray0 = new long[2];
      longArray0[0] = (-1901L);
      IntervalIndexer.indexToPosition(0L, longArray0, intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-1L);
      float[] floatArray0 = new float[2];
      IntervalIndexer.indexToPosition(0L, longArray0, floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      long[] longArray0 = new long[2];
      FinalInterval finalInterval0 = FinalInterval.wrap(longArray0, longArray0);
      int[] intArray0 = new int[6];
      PointSample<Integer> pointSample0 = PointSample.wrap((Integer) intArray0[5], longArray0);
      IntervalIndexer.indexToPosition((long) 1, (Dimensions) finalInterval0, (Positionable) pointSample0);
      assertArrayEquals(new long[] {0L, 1L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntervalIndexer.indexToPosition(612, intArray0, intArray0);
      assertArrayEquals(new int[] {612}, intArray0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int[] intArray0 = new int[1];
      float[] floatArray0 = new float[1];
      IntervalIndexer.indexToPosition(6, intArray0, floatArray0);
      assertArrayEquals(new float[] {6.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      float[] floatArray0 = new float[3];
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(1, intArray0, floatArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3115;
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1497), intArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-116);
      intArray0[1] = (-116);
      double[] doubleArray0 = new double[3];
      IntervalIndexer.indexToPosition((-116), intArray0, doubleArray0);
      assertArrayEquals(new double[] {0.0, 1.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-2418);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-2418), intArray0, doubleArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-2058);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-2058), intArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 1509L;
      int[] intArray0 = new int[1];
      long[] longArray1 = new long[2];
      int int0 = IntervalIndexer.positionWithOffsetToIndex(longArray0, intArray0, longArray1);
      assertEquals(1509, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      long[] longArray1 = new long[2];
      longArray1[0] = (long) 577;
      int int0 = IntervalIndexer.positionWithOffsetToIndex(longArray0, intArray0, longArray1);
      assertEquals((-577), int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[6];
      intArray1[0] = (-724);
      int int0 = IntervalIndexer.positionWithOffsetToIndex(intArray0, intArray0, intArray1);
      assertEquals(724, int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = (-1801);
      int[] intArray1 = new int[9];
      int int0 = IntervalIndexer.positionWithOffsetToIndex(intArray0, intArray0, intArray1);
      assertEquals((-1800), int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(1580);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 3406);
      long long0 = IntervalIndexer.positionToIndexForInterval(pointSample0, pointSampleList0);
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      long[] longArray0 = new long[2];
      IntervalIndexer.createAllocationSteps(longArray0, longArray0);
      long long0 = IntervalIndexer.positionToIndex(longArray0, longArray0);
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[1];
      IntervalIndexer.indexToPositionWithOffset((-724), intArray0, longArray0, longArray0);
      long long0 = IntervalIndexer.positionToIndex(longArray0, longArray0);
      assertEquals((-724L), long0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int[] intArray0 = new int[2];
      long[] longArray0 = new long[5];
      longArray0[0] = (long) 42;
      int int0 = IntervalIndexer.positionToIndex(longArray0, intArray0);
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-2690L);
      int[] intArray0 = new int[1];
      int int0 = IntervalIndexer.positionToIndex(longArray0, intArray0);
      assertEquals((-2690), int0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      int int0 = IntervalIndexer.positionToIndex(intArray0, intArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = (-2974);
      int int0 = IntervalIndexer.positionToIndex(intArray0, intArray0);
      assertEquals((-2972), int0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-1L);
      longArray0[1] = (-548L);
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, longArray0);
      FinalInterval finalInterval0 = new FinalInterval(longArray0);
      long long0 = IntervalIndexer.positionToIndex((Localizable) pointSample0, (Dimensions) finalInterval0);
      assertEquals(547L, long0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(535);
      Point point0 = pointSampleList0.maxAsPoint();
      long long0 = IntervalIndexer.positionToIndex((Localizable) point0, (Dimensions) pointSampleList0);
      assertEquals((-9223372036854775808L), long0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      long[] longArray0 = new long[1];
      long[] longArray1 = new long[2];
      longArray1[0] = 9223372036854775807L;
      long long0 = IntervalIndexer.indexToPositionWithOffset(0L, longArray1, longArray1, longArray0, 0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[2] = 1509L;
      long long0 = IntervalIndexer.indexToPositionWithOffset(1L, longArray0, longArray0, longArray0, 2);
      assertEquals(1509L, long0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-1L);
      long long0 = IntervalIndexer.indexToPositionWithOffset((-548L), longArray0, longArray0, longArray0, 0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[0] = (-9223372036854775808L);
      longArray0[1] = (-9223372036854775808L);
      longArray0[2] = (long) 1;
      longArray0[3] = (-9223372036854775808L);
      int[] intArray0 = new int[8];
      intArray0[2] = 1;
      IntervalIndexer.indexToPosition((long) 1, longArray0, longArray0);
      long long0 = IntervalIndexer.indexToPositionWithOffset(1, intArray0, intArray0, longArray0, 2);
      assertEquals(0L, long0);
      assertArrayEquals(new long[] {1L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[3] = (-9223372036854775808L);
      int[] intArray0 = new int[8];
      intArray0[3] = 1;
      long long0 = IntervalIndexer.indexToPositionWithOffset(3, intArray0, intArray0, longArray0, 3);
      assertEquals((-9223372036854775808L), long0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[1] = 892;
      int int0 = IntervalIndexer.indexToPositionWithOffset((-90), intArray0, intArray0, intArray0, 1);
      assertEquals(892, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[1] = (-1198);
      int int0 = IntervalIndexer.indexToPositionWithOffset((-1198), intArray0, intArray0, intArray0, 1);
      assertEquals((-1197), int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      int[] intArray1 = new int[5];
      int int0 = IntervalIndexer.indexToPositionWithOffset((-1), intArray0, intArray1, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 808;
      int int0 = IntervalIndexer.indexToPositionWithOffset(1, intArray0, intArray0, 1);
      assertEquals(809, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-1034);
      intArray0[1] = (-1034);
      int int0 = IntervalIndexer.indexToPositionWithOffset((-1034), intArray0, intArray0, 1);
      assertEquals((-1033), int0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      long[] longArray0 = new long[3];
      IntervalIndexer.createAllocationSteps(longArray0, longArray0);
      long long0 = IntervalIndexer.indexToPosition(0L, longArray0, longArray0, 0);
      assertEquals(0L, long0);
      assertArrayEquals(new long[] {1L, 1L, 1L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[4] = 2765L;
      long long0 = IntervalIndexer.indexToPosition(2765L, longArray0, longArray0, 4);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[3] = (long) 6;
      long long0 = IntervalIndexer.indexToPosition((-418L), longArray0, longArray0, 3);
      assertEquals((-3L), long0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (long) 1;
      long long0 = IntervalIndexer.indexToPosition(2L, longArray0, 0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[0] = 1508L;
      longArray0[1] = 2309L;
      long long0 = IntervalIndexer.indexToPosition(2309L, longArray0, 1);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      long[] longArray0 = new long[4];
      long[] longArray1 = new long[4];
      longArray1[0] = 2136L;
      IntervalIndexer.createAllocationSteps(longArray1, longArray0);
      long long0 = IntervalIndexer.indexToPosition((-1909L), longArray0, 1);
      assertArrayEquals(new long[] {1L, 2136L, 0L, 0L}, longArray0);
      assertEquals((-1909L), long0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = 1;
      int int0 = IntervalIndexer.indexToPosition(1, intArray0, intArray0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 83;
      int int0 = IntervalIndexer.indexToPosition(83, intArray0, intArray0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[3] = 3;
      int int0 = IntervalIndexer.indexToPosition((-69), intArray0, intArray0, 3);
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      int int0 = IntervalIndexer.indexToPosition(2, intArray0, 2);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-4208);
      intArray0[1] = (-4208);
      int int0 = IntervalIndexer.indexToPosition((-4208), intArray0, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 9;
      int int0 = IntervalIndexer.indexToPosition((-1598), intArray0, 0);
      assertEquals((-5), int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.positionWithOffsetToIndex((long[]) null, (long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionWithOffsetToIndex(longArray0, longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      long[] longArray0 = new long[3];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionWithOffsetToIndex(longArray0, (int[]) null, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionWithOffsetToIndex(longArray0, intArray0, (long[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 1
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.positionWithOffsetToIndex((int[]) null, (int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionWithOffsetToIndex(intArray0, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndexForInterval((Localizable) null, (Interval) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      long[] longArray0 = new long[0];
      Point point0 = new Point(longArray0);
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0, longArray0);
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndexForInterval(point0, finalInterval0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      long[] longArray0 = new long[7];
      long[] longArray1 = new long[5];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex(longArray1, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 6 out of bounds for length 5
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex((long[]) null, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[10];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex(longArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex((int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(1);
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex((Localizable) null, (Dimensions) pointSampleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(0);
      Point point0 = pointSampleList0.maxAsPoint();
      // Undeclared exception!
      try { 
        IntervalIndexer.positionToIndex((Localizable) point0, (Dimensions) pointSampleList0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(0L, (long[]) null, (long[]) null, (long[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      long[] longArray0 = new long[17];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1L, longArray0, longArray0, longArray0, 1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(2576L, (long[]) null, (long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(531L, longArray0, longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      long[] longArray0 = new long[11];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(0L, longArray0, longArray0, longArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-1065L), longArray0, longArray0, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      long[] longArray0 = new long[0];
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-328L), longArray0, longArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((long) 0, (long[]) null, (long[]) null, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-9223372036854775808L);
      longArray0[1] = (-9223372036854775808L);
      longArray0[2] = (-9223372036854775808L);
      longArray0[3] = (-9223372036854775808L);
      longArray0[4] = (-9223372036854775808L);
      longArray0[5] = (-9223372036854775808L);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-9223372036854775808L), longArray0, longArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 6 out of bounds for length 6
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      long[] longArray0 = new long[5];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1994, (int[]) null, longArray0, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[3];
      IntervalIndexer.createAllocationSteps(intArray0, intArray0);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(750, intArray0, longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      long[] longArray0 = new long[16];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-1248), (int[]) null, (int[]) null, longArray0, (-1248));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int[] intArray0 = new int[2];
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(0, intArray0, intArray0, longArray0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-539), (int[]) null, (int[]) null, (int[]) null, (-539));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(8, intArray0, intArray0, intArray0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 8 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-1), (int[]) null, (int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1, intArray0, intArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      long[] longArray0 = new long[5];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-3027L), longArray0, longArray0, 24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 24 out of bounds for length 5
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      long[] longArray0 = new long[50];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(33L, longArray0, longArray0, 44);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(2101L, (long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(2625L, longArray0, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      long[] longArray0 = new long[7];
      IntervalIndexer.createAllocationSteps(longArray0, longArray0);
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1L), longArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      long[] longArray0 = new long[7];
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1L), longArray0, doubleArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(0L, (long[]) null, 3579);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-2823L), (Dimensions) null, (Positionable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(1, (int[]) null, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(21, intArray0, longArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(8, (int[]) null, (int[]) null, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int[] intArray0 = new int[10];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(83, intArray0, intArray0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1), (int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(1863, (int[]) null, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(40, (int[]) null, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1145), (int[]) null, (-1145));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(0, intArray0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.createAllocationSteps((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.createAllocationSteps(longArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.createAllocationSteps((int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(400, intArray0, 400);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-2810L), (long[]) null, (long[]) null, 3807);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(1425, intArray0, intArray0, 2158);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2158 out of bounds for length 3
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      long[] longArray0 = new long[5];
      IntervalIndexer.createAllocationSteps(longArray0, longArray0);
      IntervalIndexer.indexToPosition(236L, longArray0, longArray0);
      long[] longArray1 = new long[2];
      longArray1[0] = (long) 1;
      long long0 = IntervalIndexer.positionWithOffsetToIndex(longArray1, longArray1, longArray0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 236L}, longArray0);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      long[] longArray0 = new long[1];
      IntervalIndexer.createAllocationSteps(longArray0, longArray0);
      long[] longArray1 = new long[4];
      long long0 = IntervalIndexer.positionWithOffsetToIndex(longArray1, longArray0, longArray0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(0);
      Point point0 = pointSampleList0.maxAsPoint();
      FinalInterval finalInterval0 = new FinalInterval(point0, point0);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionForInterval((-646L), finalInterval0, point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(1027);
      Point point0 = pointSampleList0.maxAsPoint();
      long long0 = IntervalIndexer.positionToIndexForInterval(point0, pointSampleList0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      long[] longArray0 = new long[9];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(2309L, longArray0, 1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-1), intArray0, intArray0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[1];
      IntervalIndexer.indexToPositionWithOffset(0L, longArray0, longArray0, doubleArray0);
      assertEquals(8, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1443L, longArray0, longArray0, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[0] = (-9223372036854775808L);
      longArray0[1] = (-9223372036854775808L);
      longArray0[2] = (long) 1;
      longArray0[3] = (-9223372036854775808L);
      int[] intArray0 = new int[8];
      IntervalIndexer.indexToPositionWithOffset(1L, longArray0, longArray0, intArray0);
      assertArrayEquals(new int[] {1, 0, 1, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(256, intArray0, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = (-1525L);
      longArray0[1] = (-1391L);
      longArray0[2] = (-1525L);
      double[] doubleArray0 = new double[4];
      IntervalIndexer.indexToPosition((-1391L), longArray0, doubleArray0);
      assertArrayEquals(new double[] {(-1391.0), 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int[] intArray0 = new int[0];
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1444), intArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      long[] longArray0 = new long[1];
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(9223372036854775807L, longArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      int[] intArray0 = new int[0];
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(0, intArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(3522);
      FinalInterval finalInterval0 = new FinalInterval((Dimensions) pointSampleList0);
      RealPoint realPoint0 = pointSampleList0.minAsRealPoint();
      // Undeclared exception!
      IntervalIndexer.indexToPosition(0L, (Dimensions) finalInterval0, (Positionable) realPoint0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      long[] longArray0 = new long[0];
      FinalInterval finalInterval0 = FinalInterval.wrap(longArray0, longArray0);
      Point point0 = new Point(longArray0);
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1L), (Dimensions) finalInterval0, (Positionable) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      long[] longArray0 = new long[0];
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition((-1L), longArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPosition(494, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 20);
      long[] longArray0 = new long[4];
      FinalInterval finalInterval0 = FinalInterval.createMinMax(longArray0);
      FinalDimensions finalDimensions0 = new FinalDimensions(finalInterval0);
      long long0 = IntervalIndexer.positionToIndex((Localizable) pointSample0, (Dimensions) finalDimensions0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      long[] longArray0 = new long[8];
      int[] intArray0 = new int[8];
      int int0 = IntervalIndexer.positionToIndex(longArray0, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      int[] intArray0 = new int[5];
      int int0 = IntervalIndexer.positionToIndex(intArray0, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(1L, longArray0, longArray0, longArray0, (-912));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -912 out of bounds for length 1
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(0, intArray0, intArray0, intArray0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      int[] intArray0 = new int[0];
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset((-315), intArray0, intArray0, longArray0, (-315));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -315 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntervalIndexer.indexToPositionWithOffset(331, (int[]) null, (int[]) null, 331);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      IntervalIndexer intervalIndexer0 = new IntervalIndexer();
  }
}
