/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:05:56 GMT 2022
 */

package net.imglib2.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.util.Binning;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Binning_ESTest extends Binning_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 2470;
      Binning.centerValuesPerBin(2470, 2470, 996.246);
      double double0 = 750.0;
      Binning.centerValuesPerBin(2470, 2470, 750.0);
      double double1 = (-1.0);
      Binning.centerValuesPerBin(2470, (-1.0), (-1.0));
      Binning.centerValuesPerBin(2470, 2470, (-1.0));
      // Undeclared exception!
      Binning.edgeValuesPerBin(2470, 750.0, 750.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Binning.exclusiveValueToBin((-1), (-1), (-1.0), 0.0);
      Binning.centerValuesPerBin(1, 1, 1);
      Binning.valueToBin(1, (-1), (-1262.0), 1.0);
      Binning binning0 = new Binning();
      // Undeclared exception!
      try { 
        Binning.edgeValuesPerBin((-2961), 1.0, 0.0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2961
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 2470;
      Binning.centerValuesPerBin(2470, 2470, 996.246);
      double double0 = 750.0;
      Binning.centerValuesPerBin(2470, 2470, 750.0);
      double double1 = (-1.0);
      Binning.centerValuesPerBin(2470, (-1.0), (-1.0));
      Binning.centerValuesPerBin(2470, 2470, (-1.0));
      // Undeclared exception!
      Binning.centerValuesPerBin(2470, 750.0, 750.0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 3617;
      Binning.valueToBin(3617, 3617, (-1.0), (-52.06));
      double double0 = 0.0;
      Binning.centerValuesPerBin(4608, 0.0, 0.0);
      Binning binning0 = new Binning();
      double double1 = 0.0;
      Binning.centerValuesPerBin(3617, 0.0, 0.0);
      // Undeclared exception!
      Binning.centerValuesPerBin(3616, (-52.06), (-52.06));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Binning.exclusiveValueToBin(76, 76, 76, 1701.66513189046);
      Binning.edgeValuesPerBin(2031, 76, 76);
      Binning binning0 = new Binning();
      Binning.exclusiveValueToBin((-3906), 76, (-1.0), (-1.0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binning.edgeValuesPerBin((-2896), (-2896), (-2896));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2896
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Binning.exclusiveValueToBin(201, 201, 201, (-3475.716));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-1);
      double double0 = 551.2435432749955;
      Binning.exclusiveValueToBin((-1), (-1), (-1), 551.2435432749955);
      double double1 = 0.0;
      Binning.valueToBin((-756), 2573.97576, 551.2435432749955, 0.0);
      int int1 = (-1);
      double double2 = 0.0;
      // Undeclared exception!
      try { 
        Binning.edgeValuesPerBin((-1), 0.0, (-1.0));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Binning.exclusiveValueToBin((-1444), (-972.9364556022), (-1444), (-972.9364556022));
      Binning.exclusiveValueToBin(0, (-972.9364556022), (-1444), 2480.45);
      Binning binning0 = new Binning();
      Binning.exclusiveValueToBin(791, 1727.561498645, 0, 0);
      Binning.edgeValuesPerBin(0, (-972.9364556022), 0);
      Binning.edgeValuesPerBin(1, 2065.4855127, (-2395.1722605));
      Binning.valueToBin((-1444), (-1330.13929), 791, 790);
      Binning.valueToBin((-1), 0.0, 847.0588, 847.0588);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Binning.valueToBin(227, 227, 777.9797822916, 227);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = (-4611);
      Binning.exclusiveValueToBin((-4611), (-4611), 268.6495827318309, 0.0);
      int int1 = (-983);
      double double0 = 1.0;
      // Undeclared exception!
      try { 
        Binning.centerValuesPerBin((-983), 1.0, (-4358));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -983
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binning.centerValuesPerBin(0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      Binning.edgeValuesPerBin(0, 1.0, 1.0);
      double double0 = 2702.3196;
      // Undeclared exception!
      try { 
        Binning.centerValuesPerBin(0, 2702.3196, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binning.centerValuesPerBin((-2265), (-2265), (-2265));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2265
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Binning.centerValuesPerBin(2, 2, 2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Binning binning0 = new Binning();
      Binning.edgeValuesPerBin(163, 163, 163);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Binning binning0 = new Binning();
      int int0 = 304;
      Binning.centerValuesPerBin(304, 3830.522694558, 3830.522694558);
      Binning.centerValuesPerBin(304, 3830.522694558, 0.0);
      int int1 = (-2281);
      double double0 = 1.0;
      // Undeclared exception!
      try { 
        Binning.centerValuesPerBin((-2281), 1.0, 304);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2281
         //
         verifyException("net.imglib2.util.Binning", e);
      }
  }
}
