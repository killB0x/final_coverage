/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:03:47 GMT 2022
 */

package net.imglib2.type.numeric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.util.LinkedList;
import net.imglib2.img.basictypeaccess.DoubleAccess;
import net.imglib2.img.basictypeaccess.array.DirtyDoubleArray;
import net.imglib2.img.basictypeaccess.array.DoubleArray;
import net.imglib2.img.basictypeaccess.nio.DoubleBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileDoubleArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileDoubleArray;
import net.imglib2.img.planar.PlanarImg;
import net.imglib2.img.sparse.DoubleNtree;
import net.imglib2.type.Index;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.numeric.ARGBDoubleType;
import net.imglib2.type.numeric.NativeARGBDoubleType;
import net.imglib2.type.volatiles.VolatileARGBType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NativeARGBDoubleType_ESTest extends NativeARGBDoubleType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-2237.03720318296);
      VolatileDoubleArray volatileDoubleArray0 = new VolatileDoubleArray(doubleArray0, false);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(volatileDoubleArray0);
      double double0 = nativeARGBDoubleType0.getR();
      assertEquals((-2237.03720318296), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(1157.1392509320638, 1157.1392509320638, 1157.1392509320638, 1157.1392509320638);
      double double0 = nativeARGBDoubleType0.getG();
      assertEquals(1157.1392509320638, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(0.0, 0.0, 0.0, 0.0);
      nativeARGBDoubleType0.set((-420.270335593103), 894.6, (-1839.26881), 0.0);
      double double0 = nativeARGBDoubleType0.getG();
      assertEquals((-1839.26881), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(1054);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      nativeARGBDoubleType0.setOne();
      double double0 = nativeARGBDoubleType0.getB();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      nativeARGBDoubleType0.setB((-1.0));
      double double0 = nativeARGBDoubleType0.getB();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      double double0 = nativeARGBDoubleType0.getA();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(1.0, 1.0, 0.0, (-1050.32));
      double double0 = nativeARGBDoubleType0.getA();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType((-1313.7), 4534.987412, 4534.987412, (-1313.7));
      double double0 = nativeARGBDoubleType0.getA();
      assertEquals((-1313.7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType((-1313.7), 4534.987412, 4534.987412, (-1313.7));
      NativeARGBDoubleType nativeARGBDoubleType1 = nativeARGBDoubleType0.copy();
      assertTrue(nativeARGBDoubleType1.equals((Object)nativeARGBDoubleType0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[0];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 32767.0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleNtree0);
      // Undeclared exception!
      nativeARGBDoubleType0.setR(0.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess();
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setR(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.DoubleBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(0, false);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setR(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.nio.HeapDoubleBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DoubleArray doubleArray0 = new DoubleArray(0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleArray0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setR(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      NativeARGBDoubleType nativeARGBDoubleType1 = nativeARGBDoubleType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType1.setG(1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(2);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setG(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("java.nio.HeapDoubleBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      double[] doubleArray0 = new double[0];
      DoubleArray doubleArray1 = new DoubleArray(doubleArray0);
      nativeARGBDoubleType0.dataAccess = (DoubleAccess) doubleArray1;
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setG(494.52744608206694);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[0];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 418.192);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleNtree0);
      // Undeclared exception!
      nativeARGBDoubleType0.setB((-1303.0248204));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess();
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setB(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.DoubleBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(8);
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(byteBuffer0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setB(2.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess();
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setA(1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.DoubleBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(0, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setA(1575.0738584529831);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapDoubleBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      DirtyVolatileDoubleArray dirtyVolatileDoubleArray0 = new DirtyVolatileDoubleArray(0, true);
      nativeARGBDoubleType0.dataAccess = (DoubleAccess) dirtyVolatileDoubleArray0;
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setA((-2583.0846389));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long[] longArray0 = new long[0];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 32767.0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleNtree0);
      ARGBDoubleType aRGBDoubleType0 = new ARGBDoubleType(300.55413, 0.0, (-2210.678), 300.55413);
      // Undeclared exception!
      nativeARGBDoubleType0.set(aRGBDoubleType0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.set((ARGBDoubleType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      byte[] byteArray0 = new byte[7];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(byteBuffer0);
      nativeARGBDoubleType0.dataAccess = (DoubleAccess) doubleBufferAccess0;
      ARGBDoubleType aRGBDoubleType0 = new ARGBDoubleType();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.set(aRGBDoubleType0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      VolatileDoubleArray volatileDoubleArray0 = new VolatileDoubleArray(doubleArray0, true);
      VolatileDoubleArray volatileDoubleArray1 = volatileDoubleArray0.createArray(3, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(volatileDoubleArray1);
      ARGBDoubleType aRGBDoubleType0 = new ARGBDoubleType(0.0, (-1.0), (-2925.782408588), (-4349.154958293));
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.set(aRGBDoubleType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      NativeARGBDoubleType nativeARGBDoubleType1 = nativeARGBDoubleType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType1.set(1.0, 1.0, 1.0, 3804.4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, (int) (byte)0, (int) (byte)0);
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(byteBuffer0, false);
      nativeARGBDoubleType0.dataAccess = (DoubleAccess) doubleBufferAccess0;
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.set(2.147483647E9, 2.147483647E9, 2.147483647E9, 0.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      NativeARGBDoubleType nativeARGBDoubleType1 = nativeARGBDoubleType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType1.getR();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(0, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getR();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.nio.HeapDoubleBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DirtyDoubleArray dirtyDoubleArray0 = new DirtyDoubleArray(0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(dirtyDoubleArray0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getR();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      NativeARGBDoubleType nativeARGBDoubleType1 = nativeARGBDoubleType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType1.getG();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(byteBuffer0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getG();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DoubleArray doubleArray0 = new DoubleArray((double[]) null);
      DoubleArray doubleArray1 = doubleArray0.createArray(0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleArray1);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getG();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(4);
      DoubleBufferAccess doubleBufferAccess0 = DoubleBufferAccess.fromByteBuffer(byteBuffer0, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getB();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DoubleArray doubleArray0 = new DoubleArray(0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleArray0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getB();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType((DoubleAccess) null);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getA();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(0, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getA();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapDoubleBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DoubleBuffer doubleBuffer0 = DoubleBuffer.allocate(0);
      DoubleBufferAccess doubleBufferAccess0 = new DoubleBufferAccess(doubleBuffer0, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleBufferAccess0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.copy();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapDoubleBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DoubleArray doubleArray0 = new DoubleArray(0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(doubleArray0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DirtyDoubleArray dirtyDoubleArray0 = new DirtyDoubleArray(0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(dirtyDoubleArray0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.set((double) 0, 65535.0, 0.0, (-3212.0));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.DirtyDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DirtyVolatileDoubleArray dirtyVolatileDoubleArray0 = new DirtyVolatileDoubleArray(0, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(dirtyVolatileDoubleArray0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.getA();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VolatileDoubleArray volatileDoubleArray0 = new VolatileDoubleArray(0, true);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(volatileDoubleArray0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.setB(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractDoubleArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<DoubleBufferAccess> linkedList0 = new LinkedList<DoubleBufferAccess>();
      long[] longArray0 = new long[6];
      Fraction fraction0 = new Fraction(444L, (-4301L));
      PlanarImg<VolatileARGBType, DoubleBufferAccess> planarImg0 = new PlanarImg<VolatileARGBType, DoubleBufferAccess>(linkedList0, longArray0, fraction0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(planarImg0);
      NativeARGBDoubleType nativeARGBDoubleType1 = nativeARGBDoubleType0.createVariable();
      assertNotSame(nativeARGBDoubleType0, nativeARGBDoubleType1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      double double0 = nativeARGBDoubleType0.getB();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.updateContainer(nativeARGBDoubleType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      double double0 = nativeARGBDoubleType0.getG();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      nativeARGBDoubleType0.setG(494.52744608206694);
      assertEquals(0, nativeARGBDoubleType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      nativeARGBDoubleType0.setR(455.34098847425);
      double double0 = nativeARGBDoubleType0.getR();
      assertEquals(455.34098847425, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      NativeTypeFactory<NativeARGBDoubleType, DoubleAccess> nativeTypeFactory0 = nativeARGBDoubleType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.DOUBLE, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      nativeARGBDoubleType0.setA((-2583.0846389));
      assertEquals(0, nativeARGBDoubleType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      Index index0 = nativeARGBDoubleType0.index();
      assertEquals(0, index0.get());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      Fraction fraction0 = nativeARGBDoubleType0.getEntitiesPerPixel();
      assertEquals(4.0, fraction0.getRatio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<DoubleBufferAccess> linkedList0 = new LinkedList<DoubleBufferAccess>();
      long[] longArray0 = new long[6];
      Fraction fraction0 = new Fraction(444L, (-4301L));
      PlanarImg<VolatileARGBType, DoubleBufferAccess> planarImg0 = new PlanarImg<VolatileARGBType, DoubleBufferAccess>(linkedList0, longArray0, fraction0);
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(planarImg0);
      // Undeclared exception!
      try { 
        nativeARGBDoubleType0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      double double0 = nativeARGBDoubleType0.getR();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      ARGBDoubleType aRGBDoubleType0 = new ARGBDoubleType();
      nativeARGBDoubleType0.set(aRGBDoubleType0);
      assertEquals(0.0, aRGBDoubleType0.getG(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType();
      NativeARGBDoubleType nativeARGBDoubleType1 = nativeARGBDoubleType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        nativeARGBDoubleType1.getB();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }
}
