/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:13:11 GMT 2022
 */

package net.imglib2.type.numeric.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.ShortBuffer;
import net.imglib2.img.basictypeaccess.ShortAccess;
import net.imglib2.img.basictypeaccess.array.DirtyShortArray;
import net.imglib2.img.basictypeaccess.array.ShortArray;
import net.imglib2.img.basictypeaccess.nio.ShortBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileShortArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileShortArray;
import net.imglib2.img.cell.Cell;
import net.imglib2.img.cell.CellGrid;
import net.imglib2.img.cell.LazyCellImg;
import net.imglib2.img.sparse.ShortNtree;
import net.imglib2.type.Index;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.numeric.integer.ShortType;
import net.imglib2.type.numeric.integer.UnsignedShortType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericShortType_ESTest extends GenericShortType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((short)2810);
      UnsignedShortType unsignedShortType1 = unsignedShortType0.copy();
      assertTrue(unsignedShortType1.equals((Object)unsignedShortType0));
      
      unsignedShortType0.setShort((short) (-82));
      boolean boolean0 = unsignedShortType0.valueEquals(unsignedShortType1);
      assertFalse(unsignedShortType1.equals((Object)unsignedShortType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ShortType shortType0 = new ShortType((short) (-5875));
      ShortType shortType1 = shortType0.createVariable();
      shortType1.mul(shortType0);
      assertFalse(shortType1.equals((Object)shortType0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ShortType shortType0 = new ShortType((short) (-5875));
      shortType0.add(shortType0);
      assertEquals(0.0, shortType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.mul(0.0);
      assertEquals(0.0, shortType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.mul(2741.908F);
      assertEquals(0.0F, shortType0.getImaginaryFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      short short0 = unsignedShortType0.getValue();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ShortType shortType0 = new ShortType((short) (-719));
      short short0 = shortType0.getValue();
      assertEquals((short) (-719), short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((short)2810);
      unsignedShortType0.setZero();
      short short0 = unsignedShortType0.getShort();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      NativeTypeFactory<UnsignedShortType, ShortAccess> nativeTypeFactory0 = unsignedShortType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.SHORT, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      Fraction fraction0 = unsignedShortType0.getEntitiesPerPixel();
      assertEquals(1.0, fraction0.getRatio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((short)2810);
      UnsignedShortType unsignedShortType1 = unsignedShortType0.copy();
      assertTrue(unsignedShortType1.equals((Object)unsignedShortType0));
      
      unsignedShortType1.setZero();
      int int0 = unsignedShortType0.compareTo(unsignedShortType1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortType shortType1 = shortType0.copy();
      assertTrue(shortType1.equals((Object)shortType0));
      
      shortType1.setComplexNumber(1245.735433191793, (-1.0));
      int int0 = shortType0.compareTo(shortType1);
      assertEquals((-1246), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.valueEquals(unsignedShortType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[7];
      intArray0[0] = (-598);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      ShortType shortType0 = new ShortType((short) (-587));
      LazyCellImg<ShortType, ShortBufferAccess> lazyCellImg0 = new LazyCellImg<ShortType, ShortBufferAccess>(cellGrid0, shortType0, (LazyCellImg.Get<Cell<ShortBufferAccess>>) null);
      UnsignedShortType unsignedShortType1 = new UnsignedShortType(lazyCellImg0);
      // Undeclared exception!
      try { 
        unsignedShortType1.updateContainer(unsignedShortType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.imglib2.type.numeric.integer.UnsignedShortType cannot be cast to class net.imglib2.img.cell.AbstractCellImg$CellImgSampler (net.imglib2.type.numeric.integer.UnsignedShortType and net.imglib2.img.cell.AbstractCellImg$CellImgSampler are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5f93fecd)
         //
         verifyException("net.imglib2.img.cell.AbstractCellImg", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((ShortAccess) null);
      // Undeclared exception!
      try { 
        unsignedShortType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      short[] shortArray0 = new short[0];
      ShortArray shortArray1 = new ShortArray(shortArray0);
      ShortType shortType0 = new ShortType(shortArray1);
      // Undeclared exception!
      try { 
        shortType0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[1];
      ShortNtree shortNtree0 = new ShortNtree(longArray0, longArray0, (short)13);
      ShortType shortType0 = new ShortType(shortNtree0);
      // Undeclared exception!
      shortType0.sub(shortType0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortType shortType1 = shortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        shortType0.sub(shortType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DirtyShortArray dirtyShortArray0 = new DirtyShortArray(0);
      ShortType shortType0 = new ShortType(dirtyShortArray0);
      // Undeclared exception!
      try { 
        shortType0.sub(shortType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[1];
      ShortNtree shortNtree0 = new ShortNtree(longArray0, longArray0, (short) (-1180));
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(shortNtree0);
      // Undeclared exception!
      unsignedShortType0.setZero();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      ShortBufferAccess shortBufferAccess0 = new ShortBufferAccess();
      short[] shortArray0 = new short[0];
      ShortBuffer shortBuffer0 = ShortBuffer.wrap(shortArray0);
      ShortBufferAccess shortBufferAccess1 = shortBufferAccess0.newInstance(shortBuffer0, true);
      unsignedShortType0.dataAccess = (ShortAccess) shortBufferAccess1;
      // Undeclared exception!
      try { 
        unsignedShortType0.setZero();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      short[] shortArray0 = new short[0];
      ShortArray shortArray1 = new ShortArray(shortArray0);
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(shortArray1);
      // Undeclared exception!
      try { 
        unsignedShortType0.setZero();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.setValue((short)1285);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      short[] shortArray0 = new short[0];
      ShortArray shortArray1 = new ShortArray(shortArray0);
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(shortArray1);
      // Undeclared exception!
      try { 
        unsignedShortType0.setValue((short)5233);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortType shortType1 = shortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        shortType1.setShort((short)1169);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.setOne();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType0.set(unsignedShortType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      ShortArray shortArray0 = new ShortArray(0);
      UnsignedShortType unsignedShortType1 = new UnsignedShortType(shortArray0);
      // Undeclared exception!
      try { 
        unsignedShortType0.set(unsignedShortType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      // Undeclared exception!
      try { 
        unsignedShortType0.mul((UnsignedShortType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.UnsignedShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ShortBufferAccess shortBufferAccess0 = new ShortBufferAccess((ShortBuffer) null, false);
      ShortType shortType0 = new ShortType(shortBufferAccess0);
      // Undeclared exception!
      try { 
        shortType0.mul(0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.ShortBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DirtyVolatileShortArray dirtyVolatileShortArray0 = new DirtyVolatileShortArray((short)0, false);
      ShortType shortType0 = new ShortType(dirtyVolatileShortArray0);
      // Undeclared exception!
      try { 
        shortType0.mul((float) (short) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortType shortType1 = shortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        shortType1.mul(1470.76083638144);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.inc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ShortBufferAccess shortBufferAccess0 = ShortBufferAccess.fromByteBuffer(byteBuffer0, true);
      ShortType shortType0 = new ShortType(shortBufferAccess0);
      // Undeclared exception!
      try { 
        shortType0.hashCode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      short[] shortArray0 = new short[0];
      ShortArray shortArray1 = new ShortArray(shortArray0);
      unsignedShortType1.dataAccess = (ShortAccess) shortArray1;
      // Undeclared exception!
      try { 
        unsignedShortType1.hashCode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(16);
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((ShortAccess) null);
      // Undeclared exception!
      try { 
        unsignedShortType0.getShort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(16);
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedShortType1.equals(unsignedShortType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      long[] longArray0 = new long[0];
      long[] longArray1 = new long[2];
      ShortNtree shortNtree0 = new ShortNtree(longArray0, longArray1, (short) (-533));
      ShortType shortType0 = new ShortType(shortNtree0);
      // Undeclared exception!
      shortType0.div(shortType0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortType shortType1 = shortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        shortType0.div(shortType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      VolatileShortArray volatileShortArray0 = new VolatileShortArray(0, false);
      ShortType shortType1 = new ShortType(volatileShortArray0);
      // Undeclared exception!
      try { 
        shortType1.div(shortType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortType shortType1 = shortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        shortType1.dec();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ShortType shortType0 = new ShortType((short) (-248));
      ShortType shortType1 = shortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        shortType0.compareTo(shortType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortType shortType1 = shortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        shortType0.add(shortType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((short)2810);
      boolean boolean0 = unsignedShortType0.valueEquals(unsignedShortType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.setInteger(4876L);
      shortType0.div(shortType0);
      assertEquals(0.0, shortType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      Object object0 = new Object();
      boolean boolean0 = unsignedShortType0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      boolean boolean0 = unsignedShortType0.equals(unsignedShortType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      UnsignedShortType unsignedShortType1 = new UnsignedShortType((-3290));
      boolean boolean0 = unsignedShortType0.valueEquals(unsignedShortType1);
      assertFalse(boolean0);
      assertFalse(unsignedShortType1.equals((Object)unsignedShortType0));
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      unsignedShortType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.sub(shortType0);
      assertEquals(0.0, shortType0.getImaginaryDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.mul(0.0F);
      assertEquals(0.0F, shortType0.getImaginaryFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.mul((-1.0));
      assertEquals(1.0, shortType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      int int0 = shortType0.compareTo(shortType0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      short[] shortArray0 = new short[0];
      ShortArray shortArray1 = new ShortArray(shortArray0);
      ShortType shortType0 = new ShortType(shortArray1);
      int int0 = shortType0.getBitsPerPixel();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(16);
      unsignedShortType0.setValue((short)1253);
      assertEquals(65535.0, unsignedShortType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      // Undeclared exception!
      try { 
        shortType0.div(shortType0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.inc();
      short short0 = shortType0.getShort();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(16);
      short short0 = unsignedShortType0.getValue();
      assertEquals((short)16, short0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.mul(shortType0);
      assertEquals(1.0, shortType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      unsignedShortType0.set(unsignedShortType0);
      assertEquals(0.0, unsignedShortType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      // Undeclared exception!
      try { 
        unsignedShortType0.updateContainer(unsignedShortType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      String string0 = shortType0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      Index index0 = shortType0.index();
      assertEquals(0, index0.get());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      unsignedShortType0.setOne();
      assertEquals(0.0F, unsignedShortType0.getImaginaryFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      shortType0.dec();
      short short0 = shortType0.getShort();
      assertEquals((short) (-1), short0);
  }
}
