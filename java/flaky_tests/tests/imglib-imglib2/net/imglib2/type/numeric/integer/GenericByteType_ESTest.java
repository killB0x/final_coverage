/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:08:54 GMT 2022
 */

package net.imglib2.type.numeric.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.LinkedList;
import net.imglib2.img.basictypeaccess.ByteAccess;
import net.imglib2.img.basictypeaccess.array.ByteArray;
import net.imglib2.img.basictypeaccess.array.DirtyByteArray;
import net.imglib2.img.basictypeaccess.nio.ByteBufferAccess;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileByteArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileByteArray;
import net.imglib2.img.planar.PlanarImg;
import net.imglib2.img.sparse.ByteNtree;
import net.imglib2.type.Index;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.numeric.ARGBType;
import net.imglib2.type.numeric.integer.ByteType;
import net.imglib2.type.numeric.integer.UnsignedByteType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericByteType_ESTest extends GenericByteType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      ByteType byteType1 = byteType0.copy();
      int int0 = byteType0.compareTo(byteType1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte)1);
      ByteType byteType1 = byteType0.copy();
      byteType1.mul(byteType0);
      assertTrue(byteType1.equals((Object)byteType0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      ByteType byteType1 = new ByteType((byte)44);
      byteType0.sub(byteType1);
      byteType1.add(byteType0);
      assertEquals(0.0F, byteType1.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      ByteType byteType1 = byteType0.copy();
      byteType1.add(byteType0);
      assertTrue(byteType1.equals((Object)byteType0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte) (-62));
      byteType0.mul((double) (byte) (-62));
      assertEquals(0.0, byteType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte)1);
      byteType0.setByte((byte)1);
      assertEquals(0, byteType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.setOne();
      assertEquals(0.0, unsignedByteType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte)36);
      byteType0.div(byteType0);
      assertEquals(0.0, byteType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(10);
      byte byte0 = unsignedByteType0.getValue();
      assertEquals((byte)10, byte0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.dec();
      byte byte0 = unsignedByteType0.getValue();
      assertEquals((byte) (-1), byte0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      NativeTypeFactory<UnsignedByteType, ByteAccess> nativeTypeFactory0 = unsignedByteType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.BYTE, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      byte byte0 = unsignedByteType0.getByte();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(10);
      byte byte0 = unsignedByteType0.getByte();
      assertEquals((byte)10, byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      boolean boolean0 = unsignedByteType0.equals(unsignedByteType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.createVariable();
      unsignedByteType0.dec();
      int int0 = unsignedByteType0.compareTo(unsignedByteType1);
      assertFalse(unsignedByteType1.equals((Object)unsignedByteType0));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = new UnsignedByteType(107);
      int int0 = unsignedByteType0.compareTo(unsignedByteType1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType0.valueEquals(unsignedByteType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(0);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(byteArray0);
      // Undeclared exception!
      try { 
        unsignedByteType0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      // Undeclared exception!
      try { 
        unsignedByteType0.sub((UnsignedByteType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.UnsignedByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteType byteType0 = new ByteType((ByteAccess) null);
      // Undeclared exception!
      try { 
        byteType0.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.setValue((byte) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType((-1958));
      ByteArray byteArray0 = new ByteArray(0);
      unsignedByteType0.dataAccess = (ByteAccess) byteArray0;
      // Undeclared exception!
      try { 
        unsignedByteType0.setValue((byte)8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      long[] longArray0 = new long[0];
      ByteNtree byteNtree0 = new ByteNtree(longArray0, longArray0, (byte)0);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(byteNtree0);
      // Undeclared exception!
      unsignedByteType0.setOne();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      long[] longArray0 = new long[2];
      ByteNtree byteNtree0 = new ByteNtree(longArray0, longArray0, (byte)114);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(byteNtree0);
      // Undeclared exception!
      unsignedByteType0.setByte((byte) (-73));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.setByte((byte)5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType0.set(unsignedByteType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      ByteBufferAccess byteBufferAccess0 = ByteBufferAccess.fromByteBuffer(byteBuffer0, false);
      UnsignedByteType unsignedByteType1 = new UnsignedByteType(byteBufferAccess0);
      // Undeclared exception!
      try { 
        unsignedByteType0.set(unsignedByteType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VolatileByteArray volatileByteArray0 = new VolatileByteArray(0, false);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(volatileByteArray0);
      // Undeclared exception!
      try { 
        unsignedByteType0.set(unsignedByteType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(0);
      ByteType byteType0 = new ByteType(byteArray0);
      // Undeclared exception!
      try { 
        byteType0.mul(byteType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte)65);
      ByteType byteType1 = byteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        byteType1.mul(0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DirtyByteArray dirtyByteArray0 = new DirtyByteArray(3066);
      ByteType byteType0 = new ByteType(dirtyByteArray0);
      ByteType byteType1 = byteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        byteType1.inc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DirtyVolatileByteArray dirtyVolatileByteArray0 = new DirtyVolatileByteArray((byte[]) null, false);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(dirtyVolatileByteArray0);
      // Undeclared exception!
      try { 
        unsignedByteType0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      byte[] byteArray0 = new byte[0];
      DirtyVolatileByteArray dirtyVolatileByteArray0 = new DirtyVolatileByteArray(byteArray0, false);
      unsignedByteType0.dataAccess = (ByteAccess) dirtyVolatileByteArray0;
      // Undeclared exception!
      try { 
        unsignedByteType0.hashCode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBufferAccess byteBufferAccess0 = ByteBufferAccess.fromByteBuffer(byteBuffer0, true);
      ByteType byteType0 = new ByteType(byteBufferAccess0);
      // Undeclared exception!
      try { 
        byteType0.getValue();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VolatileByteArray volatileByteArray0 = new VolatileByteArray(0, false);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(volatileByteArray0);
      // Undeclared exception!
      try { 
        unsignedByteType0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.getByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.equals(unsignedByteType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType0.div(unsignedByteType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      ByteArray byteArray0 = new ByteArray(0);
      ByteType byteType1 = new ByteType(byteArray0);
      // Undeclared exception!
      try { 
        byteType0.div(byteType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.dec();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType0.compareTo(unsignedByteType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBufferAccess byteBufferAccess0 = ByteBufferAccess.fromByteBuffer(byteBuffer0, true);
      ByteType byteType0 = new ByteType(byteBufferAccess0);
      // Undeclared exception!
      try { 
        byteType0.compareTo(byteType0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedByteType1.add(unsignedByteType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      UnsignedByteType unsignedByteType1 = unsignedByteType0.copy();
      assertTrue(unsignedByteType1.equals((Object)unsignedByteType0));
      
      unsignedByteType1.pow(unsignedByteType0);
      boolean boolean0 = unsignedByteType0.valueEquals(unsignedByteType1);
      assertFalse(unsignedByteType1.equals((Object)unsignedByteType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      // Undeclared exception!
      try { 
        unsignedByteType0.mul((UnsignedByteType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.UnsignedByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      ByteType byteType0 = new ByteType((byte) (-62));
      boolean boolean0 = unsignedByteType0.equals(byteType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      boolean boolean0 = byteType0.valueEquals(byteType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.setReal(3709.44F);
      UnsignedByteType unsignedByteType1 = unsignedByteType0.createVariable();
      boolean boolean0 = unsignedByteType0.equals(unsignedByteType1);
      assertFalse(boolean0);
      assertFalse(unsignedByteType1.equals((Object)unsignedByteType0));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.setZero();
      assertEquals(0.0, unsignedByteType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      byteType0.mul(byteType0);
      assertEquals(0.0, byteType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      Fraction fraction0 = unsignedByteType0.getEntitiesPerPixel();
      assertEquals(1L, fraction0.getNumerator());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      int int0 = unsignedByteType0.getBitsPerPixel();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      // Undeclared exception!
      try { 
        byteType0.div(byteType0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      byte byte0 = unsignedByteType0.getValue();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<DirtyVolatileByteArray> linkedList0 = new LinkedList<DirtyVolatileByteArray>();
      long[] longArray0 = new long[6];
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(64);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0, false);
      ARGBType aRGBType0 = new ARGBType(intBufferAccess0);
      Fraction fraction0 = aRGBType0.getEntitiesPerPixel();
      PlanarImg<UnsignedByteType, DirtyVolatileByteArray> planarImg0 = new PlanarImg<UnsignedByteType, DirtyVolatileByteArray>(linkedList0, longArray0, fraction0);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(planarImg0);
      // Undeclared exception!
      try { 
        unsignedByteType0.updateContainer(byteBuffer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.nio.HeapByteBuffer cannot be cast to class net.imglib2.img.planar.PlanarImg$PlanarContainerSampler (java.nio.HeapByteBuffer is in module java.base of loader 'bootstrap'; net.imglib2.img.planar.PlanarImg$PlanarContainerSampler is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7106d5c2)
         //
         verifyException("net.imglib2.img.planar.PlanarImg", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      byteType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte) (-38));
      byteType0.mul((-59.63F));
      assertEquals(0.0F, byteType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.set(unsignedByteType0);
      assertEquals(0.0, unsignedByteType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.dec();
      byte byte0 = unsignedByteType0.getByte();
      assertEquals((byte) (-1), byte0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      Index index0 = unsignedByteType0.index();
      assertEquals(0, index0.get());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      String string0 = byteType0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      // Undeclared exception!
      try { 
        unsignedByteType0.updateContainer(unsignedByteType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.setValue((byte) (-1));
      assertEquals(0.0, unsignedByteType0.getImaginaryDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteType byteType0 = new ByteType((ByteAccess) null);
      // Undeclared exception!
      try { 
        byteType0.setOne();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      UnsignedByteType unsignedByteType0 = new UnsignedByteType();
      unsignedByteType0.inc();
      assertEquals(255.0, unsignedByteType0.getMaxValue(), 0.01);
  }
}
