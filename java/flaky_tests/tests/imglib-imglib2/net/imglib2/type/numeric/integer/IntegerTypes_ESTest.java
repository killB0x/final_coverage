/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:16:04 GMT 2022
 */

package net.imglib2.type.numeric.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.type.numeric.IntegerType;
import net.imglib2.type.numeric.integer.IntegerTypes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntegerTypes_ESTest extends IntegerTypes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntegerType<?> integerType0 = IntegerTypes.smallestType(1L, 1L);
      assertEquals(1.0, integerType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntegerTypes.smallestType(true, (-3554L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong usage: min (-1) > max (-3554)
         //
         verifyException("net.imglib2.type.numeric.integer.IntegerTypes", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntegerType<?> integerType0 = IntegerTypes.smallestType(0L, 0L);
      assertEquals(0.0, integerType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IntegerType<?> integerType0 = IntegerTypes.smallestType(true, 9223372036854775807L);
      assertEquals((-9.223372036854776E18), integerType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IntegerType<?> integerType0 = IntegerTypes.smallestType((-9223372036854775808L), (-7L));
      assertEquals(9.223372036854776E18, integerType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntegerTypes.smallestType(1L, (-9223372036854775808L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong usage: min (1) > max (-9223372036854775808)
         //
         verifyException("net.imglib2.type.numeric.integer.IntegerTypes", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IntegerType<?> integerType0 = IntegerTypes.smallestType(false, 31L);
      assertEquals(255.0, integerType0.getMaxValue(), 0.01);
  }
}
