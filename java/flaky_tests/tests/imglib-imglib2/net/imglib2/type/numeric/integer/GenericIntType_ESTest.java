/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:20:07 GMT 2022
 */

package net.imglib2.type.numeric.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.basictypeaccess.IntAccess;
import net.imglib2.img.basictypeaccess.array.DirtyIntArray;
import net.imglib2.img.basictypeaccess.array.IntArray;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileIntArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileIntArray;
import net.imglib2.img.sparse.IntNtree;
import net.imglib2.type.Index;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.numeric.integer.IntType;
import net.imglib2.type.numeric.integer.UnsignedIntType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericIntType_ESTest extends GenericIntType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = new IntType(Integer.MAX_VALUE);
      boolean boolean0 = intType0.valueEquals(intType1);
      assertFalse(intType1.equals((Object)intType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntType intType0 = new IntType((-6));
      intType0.sub(intType0);
      assertEquals(32, intType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[7];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, 5);
      IntType intType0 = new IntType(intNtree0);
      // Undeclared exception!
      intType0.mul(intType0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntType intType0 = new IntType((-6));
      intType0.add(intType0);
      assertEquals(1.0, intType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.mul(886.12275364);
      assertEquals(0, intType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntType intType0 = new IntType((-1722));
      intType0.mul((float) (-1722));
      assertEquals(0.0F, intType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[2];
      DirtyIntArray dirtyIntArray0 = new DirtyIntArray(intArray0);
      long[] longArray0 = new long[9];
      Fraction fraction0 = new Fraction();
      ArrayImg<IntType, DirtyIntArray> arrayImg0 = new ArrayImg<IntType, DirtyIntArray>(dirtyIntArray0, longArray0, fraction0);
      IntType intType0 = new IntType(arrayImg0);
      assertEquals((-2.147483648E9), intType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntType intType0 = new IntType(4);
      intType0.setInt(1670);
      assertEquals((-2.147483648E9), intType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.setValue(32);
      assertEquals(0.0F, intType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntType intType0 = new IntType((-1136));
      intType0.div(intType0);
      assertEquals(32, intType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntType intType0 = new IntType(4);
      intType0.dec();
      assertEquals(1.0, intType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntType intType0 = new IntType(15);
      int int0 = intType0.getValue();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntType intType0 = new IntType((-856));
      int int0 = intType0.getValue();
      assertEquals((-856), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntType intType0 = new IntType((-1136));
      NativeTypeFactory<IntType, IntAccess> nativeTypeFactory0 = intType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.INT, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(935, false);
      IntType intType0 = new IntType(volatileIntArray0);
      intType0.setInteger(935);
      int int0 = intType0.getInt();
      assertEquals(935, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntType intType0 = new IntType(4);
      IntType intType1 = new IntType();
      int int0 = intType0.compareTo(intType1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IntType intType0 = new IntType((-1722));
      IntType intType1 = intType0.createVariable();
      int int0 = intType0.compareTo(intType1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntType intType0 = new IntType();
      // Undeclared exception!
      try { 
        intType0.valueEquals((IntType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(2147483647L);
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0);
      UnsignedIntType unsignedIntType1 = new UnsignedIntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        unsignedIntType0.valueEquals(unsignedIntType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(240, true);
      VolatileIntArray volatileIntArray1 = volatileIntArray0.createArray(0, true);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(volatileIntArray1);
      // Undeclared exception!
      try { 
        unsignedIntType0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType0.sub(intType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IntType intType0 = new IntType();
      int[] intArray0 = new int[0];
      DirtyIntArray dirtyIntArray0 = new DirtyIntArray(intArray0);
      IntType intType1 = new IntType(dirtyIntArray0);
      // Undeclared exception!
      try { 
        intType0.sub(intType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IntType intType0 = new IntType((IntAccess) null);
      // Undeclared exception!
      try { 
        intType0.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.dataAccess = null;
      // Undeclared exception!
      try { 
        intType0.setOne();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType1.setInt(3021);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0, true);
      IntType intType0 = new IntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        intType0.setInt(18);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType0.set(intType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IntType intType0 = new IntType();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0);
      IntType intType1 = new IntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        intType0.set(intType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IntType intType0 = new IntType();
      // Undeclared exception!
      try { 
        intType0.pow((IntType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IntType intType0 = new IntType();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = IntBufferAccess.fromByteBuffer(byteBuffer0, false);
      IntType intType1 = new IntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        intType0.pow(intType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType1.pow(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IntType intType0 = new IntType();
      // Undeclared exception!
      try { 
        intType0.mul((IntType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType1.mul((-1136.8746F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType1.mul(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType1.inc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(0, false);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(dirtyVolatileIntArray0);
      // Undeclared exception!
      try { 
        unsignedIntType0.hashCode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IntType intType0 = new IntType((IntAccess) null);
      // Undeclared exception!
      try { 
        intType0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType1.getInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType0.equals(intType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IntType intType0 = new IntType(0);
      IntArray intArray0 = new IntArray(0);
      IntType intType1 = new IntType(intArray0);
      // Undeclared exception!
      try { 
        intType0.div(intType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IntType intType0 = new IntType();
      // Undeclared exception!
      try { 
        intType0.div(intType0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IntType intType0 = new IntType();
      // Undeclared exception!
      try { 
        intType0.add((IntType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IntType intType0 = new IntType();
      boolean boolean0 = intType0.valueEquals(intType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.setInteger((-2178L));
      int int0 = intType0.getInt();
      assertEquals((-2178), int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IntType intType0 = new IntType();
      int int0 = intType0.getInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IntType intType0 = new IntType((IntAccess) null);
      boolean boolean0 = intType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IntType intType0 = new IntType();
      boolean boolean0 = intType0.equals(intType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(1L);
      UnsignedIntType unsignedIntType1 = unsignedIntType0.createVariable();
      boolean boolean0 = unsignedIntType0.valueEquals(unsignedIntType1);
      assertFalse(boolean0);
      assertFalse(unsignedIntType1.equals((Object)unsignedIntType0));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.mul(intType0);
      assertEquals(0, intType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((IntAccess) null);
      // Undeclared exception!
      try { 
        unsignedIntType0.setValue(200);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IntType intType0 = new IntType(32);
      Index index0 = intType0.index();
      assertEquals(0, index0.get());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IntType intType0 = new IntType();
      int int0 = intType0.getBitsPerPixel();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.pow(0.0);
      assertEquals(32, intType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((IntAccess) null);
      // Undeclared exception!
      try { 
        unsignedIntType0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IntType intType0 = new IntType();
      Fraction fraction0 = intType0.getEntitiesPerPixel();
      assertEquals(1L, fraction0.getNumerator());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IntType intType0 = new IntType();
      String string0 = intType0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.setZero();
      assertEquals(0.0, intType0.getImaginaryDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.mul(0.0);
      assertEquals((-2.147483648E9), intType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      IntType intType0 = new IntType();
      int int0 = intType0.compareTo(intType0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.inc();
      assertEquals(2.147483647E9, intType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      IntType intType0 = new IntType((IntAccess) null);
      // Undeclared exception!
      try { 
        intType0.dec();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.setOne();
      assertEquals(0.0F, intType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.sub(intType0);
      assertEquals(0.0, intType0.getImaginaryDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.pow(intType0);
      assertEquals((-2.147483648E9), intType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      IntType intType0 = new IntType();
      intType0.set(intType0);
      assertEquals((-2.147483648E9), intType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      IntType intType0 = new IntType();
      IntType intType1 = intType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        intType0.compareTo(intType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      IntType intType0 = new IntType();
      // Undeclared exception!
      try { 
        intType0.div((IntType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      IntType intType0 = new IntType();
      // Undeclared exception!
      try { 
        intType0.updateContainer(intType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      IntType intType0 = new IntType();
      int int0 = intType0.getValue();
      assertEquals(0, int0);
  }
}
