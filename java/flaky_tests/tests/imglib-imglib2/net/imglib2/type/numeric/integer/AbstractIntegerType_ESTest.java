/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:04:58 GMT 2022
 */

package net.imglib2.type.numeric.integer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.imglib2.img.NativeImg;
import net.imglib2.img.basictypeaccess.IntAccess;
import net.imglib2.img.basictypeaccess.LongAccess;
import net.imglib2.img.basictypeaccess.array.DirtyByteArray;
import net.imglib2.img.basictypeaccess.array.DirtyIntArray;
import net.imglib2.img.basictypeaccess.array.IntArray;
import net.imglib2.img.basictypeaccess.array.LongArray;
import net.imglib2.img.basictypeaccess.nio.ByteBufferAccess;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileByteArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileIntArray;
import net.imglib2.img.sparse.IntNtree;
import net.imglib2.type.numeric.integer.ByteType;
import net.imglib2.type.numeric.integer.IntType;
import net.imglib2.type.numeric.integer.LongType;
import net.imglib2.type.numeric.integer.UnsignedByteType;
import net.imglib2.type.numeric.integer.UnsignedIntType;
import net.imglib2.type.numeric.integer.UnsignedShortType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractIntegerType_ESTest extends AbstractIntegerType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((-2145));
      unsignedShortType0.setReal((float) (-2145));
      assertEquals(63391, unsignedShortType0.get());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((-2145));
      unsignedShortType0.setReal((double) (-2145));
      assertEquals((short) (-2145), unsignedShortType0.getShort());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((short) (-2344));
      boolean boolean0 = unsignedIntType0.valueEquals(unsignedIntType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((short) (-591));
      UnsignedIntType unsignedIntType1 = new UnsignedIntType((short) (-2344));
      boolean boolean0 = unsignedIntType0.valueEquals(unsignedIntType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      String string0 = unsignedIntType0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte)0);
      float float0 = byteType0.getRealFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      unsignedIntType0.setOne();
      float float0 = unsignedIntType0.getRealFloat();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte) (-7));
      float float0 = byteType0.getRealFloat();
      assertEquals((-7.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      double double0 = unsignedIntType0.getRealDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntArray intArray0 = new IntArray(550);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(intArray0);
      unsignedIntType0.setInteger((-1));
      double double0 = unsignedIntType0.getRealDouble();
      assertEquals(4.294967295E9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (long) (-2145);
      LongArray longArray1 = new LongArray(longArray0);
      LongType longType0 = new LongType(longArray1);
      double double0 = longType0.getRealDouble();
      assertEquals((-2145.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[5];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, (-5052));
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(intNtree0);
      boolean boolean0 = unsignedIntType0.equals(unsignedIntType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((IntAccess) null);
      boolean boolean0 = unsignedIntType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      int int0 = unsignedIntType0.compareTo(unsignedIntType0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(0L);
      unsignedIntType0.dec();
      UnsignedIntType unsignedIntType1 = new UnsignedIntType(0L);
      int int0 = unsignedIntType0.compareTo(unsignedIntType1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(0L);
      UnsignedIntType unsignedIntType1 = unsignedIntType0.copy();
      unsignedIntType1.setComplexNumber(1638.39F, 0.0F);
      int int0 = unsignedIntType0.compareTo(unsignedIntType1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      // Undeclared exception!
      try { 
        unsignedIntType0.valueEquals((UnsignedIntType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((IntAccess) null);
      // Undeclared exception!
      try { 
        unsignedIntType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType1.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[6];
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(intArray0, false);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(volatileIntArray0);
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType1.setReal((float) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      VolatileByteArray volatileByteArray0 = new VolatileByteArray(byteArray0, false);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(volatileByteArray0);
      // Undeclared exception!
      try { 
        unsignedByteType0.setReal((-3358.175F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = IntBufferAccess.fromByteBuffer(byteBuffer0, false);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        unsignedIntType0.setReal((double) (-2145));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((NativeImg<?, ? extends IntAccess>) null);
      // Undeclared exception!
      try { 
        unsignedIntType0.setOne();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DirtyIntArray dirtyIntArray0 = new DirtyIntArray(0);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(dirtyIntArray0);
      // Undeclared exception!
      try { 
        unsignedIntType0.setOne();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.DirtyIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(1024L);
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType1.inc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(3874L);
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        unsignedIntType0.hashCode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LongType longType0 = new LongType((LongAccess) null);
      // Undeclared exception!
      try { 
        longType0.getRealFloat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericLongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        unsignedIntType0.getRealFloat();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LongType longType0 = new LongType((LongAccess) null);
      // Undeclared exception!
      try { 
        longType0.getRealDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericLongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType((IntAccess) null);
      // Undeclared exception!
      try { 
        unsignedIntType0.equals(unsignedIntType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType1.dec();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      UnsignedIntType unsignedIntType1 = unsignedIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        unsignedIntType0.compareTo(unsignedIntType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, true);
      IntType intType0 = new IntType(volatileIntArray0);
      // Undeclared exception!
      try { 
        intType0.getRealFloat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      DirtyByteArray dirtyByteArray0 = new DirtyByteArray(byteArray0);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(dirtyByteArray0);
      // Undeclared exception!
      try { 
        unsignedByteType0.getRealDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      double double0 = unsignedIntType0.getMinIncrement();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LongType longType0 = new LongType((LongAccess) null);
      // Undeclared exception!
      try { 
        longType0.setReal(2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.LongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, (int) (byte)0, 0);
      ByteBufferAccess byteBufferAccess0 = ByteBufferAccess.fromByteBuffer(byteBuffer0, true);
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(byteBufferAccess0);
      // Undeclared exception!
      try { 
        unsignedByteType0.setReal(0.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
