/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:56:07 GMT 2022
 */

package net.imglib2.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.nio.LongBufferAccess;
import net.imglib2.type.label.BasePairBitType;
import net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractBit64Type_ESTest extends AbstractBit64Type_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType(64);
      assertEquals(0.0F, unsignedVariableBitLengthType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = null;
      try {
        unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType(1880);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Supports only bit depths between 1 and 64, can't take 1880
         //
         verifyException("net.imglib2.type.AbstractBit64Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = null;
      try {
        unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Supports only bit depths between 1 and 64, can't take -1
         //
         verifyException("net.imglib2.type.AbstractBit64Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType(48);
      unsignedVariableBitLengthType0.dec();
      assertEquals(1.0, unsignedVariableBitLengthType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasePairBitType basePairBitType0 = new BasePairBitType();
      byte byte0 = basePairBitType0.baseToValue();
      assertEquals((byte)1, byte0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess((byte)1);
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType(longBufferAccess0, (byte)1);
      assertEquals(0.0F, unsignedVariableBitLengthType0.getPhaseFloat(), 0.01F);
  }
}
