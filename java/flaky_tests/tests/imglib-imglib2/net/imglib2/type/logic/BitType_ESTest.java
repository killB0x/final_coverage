/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:17:11 GMT 2022
 */

package net.imglib2.type.logic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.nio.LongBuffer;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.basictypeaccess.LongAccess;
import net.imglib2.img.basictypeaccess.array.DirtyLongArray;
import net.imglib2.img.basictypeaccess.array.LongArray;
import net.imglib2.img.basictypeaccess.nio.LongBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileLongArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileLongArray;
import net.imglib2.img.sparse.LongNtree;
import net.imglib2.img.sparse.Ntree;
import net.imglib2.type.Index;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.logic.BitType;
import net.imglib2.type.numeric.integer.UnsignedByteType;
import net.imglib2.type.numeric.real.DoubleType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BitType_ESTest extends BitType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.mul(0.5F);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BitType bitType0 = new BitType(false);
      BitType bitType1 = bitType0.copy();
      bitType0.mul(bitType1);
      assertTrue(bitType1.equals((Object)bitType0));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BitType bitType0 = new BitType();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-54);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      bitType0.setBigInteger(bigInteger0);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      bitType0.setComplexNumber(889.5378101094482, 0.0);
      assertEquals(0.0F, bitType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BitType bitType0 = new BitType();
      Index index0 = bitType0.index();
      index0.inc();
      bitType0.pow(bitType0);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BitType bitType0 = new BitType(false);
      bitType0.setInteger((-29L));
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.setInteger(3780);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      long[] longArray0 = new long[7];
      DirtyLongArray dirtyLongArray0 = new DirtyLongArray(longArray0);
      DoubleType doubleType0 = new DoubleType();
      Fraction fraction0 = doubleType0.getEntitiesPerPixel();
      ArrayImg<UnsignedByteType, DirtyLongArray> arrayImg0 = new ArrayImg<UnsignedByteType, DirtyLongArray>(dirtyLongArray0, longArray0, fraction0);
      BitType bitType0 = new BitType(arrayImg0);
      bitType0.updateContainer((Object) null);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BitType bitType0 = new BitType();
      long long0 = bitType0.getIntegerLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      boolean boolean0 = bitType0.equals(bitType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = new BitType();
      long[] longArray0 = new long[2];
      longArray0[0] = 523L;
      LongArray longArray1 = new LongArray(longArray0);
      bitType1.dataAccess = (LongAccess) longArray1;
      int int0 = bitType1.compareTo(bitType0);
      assertFalse(bitType1.equals((Object)bitType0));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      BitType bitType1 = bitType0.createVariable();
      int int0 = bitType1.compareTo(bitType0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType0.xor(bitType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BitType bitType0 = new BitType();
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      LongBufferAccess longBufferAccess0 = LongBufferAccess.fromByteBuffer(byteBuffer0, true);
      BitType bitType1 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.xor(bitType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.ByteBufferAsLongBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.createVariable();
      long[] longArray0 = new long[0];
      LongArray longArray1 = new LongArray(longArray0);
      bitType1.dataAccess = (LongAccess) longArray1;
      // Undeclared exception!
      try { 
        bitType1.xor(bitType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.valueEquals(bitType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BitType bitType0 = new BitType();
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(0, true);
      BitType bitType1 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.valueEquals(bitType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      long[] longArray0 = new long[0];
      DirtyLongArray dirtyLongArray0 = new DirtyLongArray(longArray0);
      BitType bitType0 = new BitType(dirtyLongArray0);
      // Undeclared exception!
      try { 
        bitType0.valueEquals(bitType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BitType bitType0 = new BitType();
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, (int) (byte)0, (int) (byte)0);
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(byteBuffer0, true);
      bitType0.dataAccess = (LongAccess) longBufferAccess0;
      // Undeclared exception!
      try { 
        bitType0.toString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.ByteBufferAsLongBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType0.sub(bitType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.createVariable();
      long[] longArray0 = new long[0];
      LongArray longArray1 = new LongArray(longArray0);
      bitType1.dataAccess = (LongAccess) longArray1;
      // Undeclared exception!
      try { 
        bitType0.sub(bitType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BitType bitType0 = new BitType((LongAccess) null);
      // Undeclared exception!
      try { 
        bitType0.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess();
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.LongBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.dataAccess = null;
      // Undeclared exception!
      try { 
        bitType0.setOne();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BitType bitType0 = new BitType();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(byteBuffer0);
      bitType0.dataAccess = (LongAccess) longBufferAccess0;
      // Undeclared exception!
      try { 
        bitType0.setOne();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.ByteBufferAsLongBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BitType bitType0 = new BitType((LongAccess) null);
      // Undeclared exception!
      try { 
        bitType0.setInteger((-2588L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BitType bitType0 = new BitType();
      LongBufferAccess longBufferAccess0 = new LongBufferAccess((LongBuffer) null);
      bitType0.dataAccess = (LongAccess) longBufferAccess0;
      // Undeclared exception!
      try { 
        bitType0.setInteger((-35L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.LongBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BitType bitType0 = new BitType();
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(0, true);
      bitType0.dataAccess = (LongAccess) dirtyVolatileLongArray0;
      // Undeclared exception!
      try { 
        bitType0.setInteger((-836L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.setInteger((-2061584301));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess((LongBuffer) null);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.setInteger((-1943));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.LongBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BitType bitType0 = new BitType();
      Index index0 = bitType0.index();
      index0.inc((-1236));
      // Undeclared exception!
      try { 
        bitType0.setInteger((-1236));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BitType bitType0 = new BitType();
      // Undeclared exception!
      try { 
        bitType0.setBigInteger((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      long[] longArray0 = new long[0];
      LongArray longArray1 = new LongArray(longArray0);
      BitType bitType0 = new BitType(longArray1);
      BigInteger bigInteger0 = BigInteger.ONE;
      // Undeclared exception!
      try { 
        bitType0.setBigInteger(bigInteger0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.set(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(0);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.set(true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BitType bitType0 = new BitType();
      // Undeclared exception!
      try { 
        bitType0.set((BitType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BitType bitType0 = new BitType();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(byteBuffer0, false);
      BitType bitType1 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.set(bitType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.ByteBufferAsLongBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BitType bitType0 = new BitType();
      long[] longArray0 = new long[0];
      DirtyLongArray dirtyLongArray0 = new DirtyLongArray(longArray0);
      BitType bitType1 = new BitType(dirtyLongArray0);
      // Undeclared exception!
      try { 
        bitType0.set(bitType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType0.or(bitType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BitType bitType0 = new BitType();
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(0);
      BitType bitType1 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.or(bitType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BitType bitType0 = new BitType();
      long[] longArray0 = new long[2];
      Ntree<Long> ntree0 = new Ntree<Long>(longArray0, (Long) (-3211L));
      LongNtree longNtree0 = new LongNtree(ntree0, longArray0);
      bitType0.dataAccess = (LongAccess) longNtree0;
      // Undeclared exception!
      bitType0.not();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.not();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      long[] longArray0 = new long[0];
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(longBuffer0);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.not();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.mul((-1826.1613F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(0, false);
      BitType bitType0 = new BitType(dirtyVolatileLongArray0);
      // Undeclared exception!
      try { 
        bitType0.mul((float) 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.mul((-1415.022258339384));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess((LongBuffer) null);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.mul((-397.321062244));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.LongBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(0, true);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.mul((double) 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(0, false);
      BitType bitType0 = new BitType(dirtyVolatileLongArray0);
      // Undeclared exception!
      try { 
        bitType0.mul(1.7976931348623157E308);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(0, false);
      BitType bitType0 = new BitType(dirtyVolatileLongArray0);
      // Undeclared exception!
      try { 
        bitType0.mul((-1.0));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      long[] longArray0 = new long[0];
      Long long0 = new Long((-72L));
      Ntree<Long> ntree0 = new Ntree<Long>(longArray0, long0);
      LongNtree longNtree0 = new LongNtree(ntree0, longArray0);
      BitType bitType0 = new BitType(longNtree0);
      // Undeclared exception!
      bitType0.inc();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.inc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.getIntegerLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      LongBufferAccess longBufferAccess0 = LongBufferAccess.fromByteBuffer(byteBuffer0, true);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.getIntegerLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.ByteBufferAsLongBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BitType bitType0 = new BitType();
      long[] longArray0 = new long[0];
      LongArray longArray1 = new LongArray(longArray0);
      bitType0.dataAccess = (LongAccess) longArray1;
      // Undeclared exception!
      try { 
        bitType0.getIntegerLong();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess();
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.getInteger();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.LongBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BitType bitType0 = new BitType();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(byteBuffer0);
      bitType0.dataAccess = (LongAccess) longBufferAccess0;
      // Undeclared exception!
      try { 
        bitType0.getInteger();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.ByteBufferAsLongBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BitType bitType0 = new BitType((LongAccess) null);
      // Undeclared exception!
      try { 
        bitType0.getBigInteger();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      LongBufferAccess longBufferAccess0 = LongBufferAccess.fromByteBuffer(byteBuffer0, true);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.getBigInteger();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(5);
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(byteBuffer0, false);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.get();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      long[] longArray0 = new long[0];
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(longArray0, false);
      BitType bitType0 = new BitType(dirtyVolatileLongArray0);
      // Undeclared exception!
      try { 
        bitType0.get();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.equals(bitType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.div(bitType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.dec();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BitType bitType0 = new BitType();
      long[] longArray0 = new long[0];
      VolatileLongArray volatileLongArray0 = new VolatileLongArray(longArray0, true);
      bitType0.dataAccess = (LongAccess) volatileLongArray0;
      // Undeclared exception!
      try { 
        bitType0.dec();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BitType bitType0 = new BitType();
      long[] longArray0 = new long[7];
      Ntree<Long> ntree0 = new Ntree<Long>(longArray0, (Long) longArray0[4]);
      long[] longArray1 = new long[4];
      LongNtree longNtree0 = new LongNtree(ntree0, longArray1);
      bitType0.dataAccess = (LongAccess) longNtree0;
      // Undeclared exception!
      try { 
        bitType0.dec();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(0, true);
      BitType bitType0 = new BitType(longBufferAccess0);
      // Undeclared exception!
      try { 
        bitType0.copy();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LongArray longArray0 = new LongArray(0);
      BitType bitType0 = new BitType(longArray0);
      // Undeclared exception!
      try { 
        bitType0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BitType bitType0 = new BitType();
      // Undeclared exception!
      try { 
        bitType0.compareTo((BitType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BitType bitType0 = new BitType(false);
      BitType bitType1 = new BitType();
      long[] longArray0 = new long[7];
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(longArray0, false);
      DirtyVolatileLongArray dirtyVolatileLongArray1 = dirtyVolatileLongArray0.createArray(0, false);
      bitType1.dataAccess = (LongAccess) dirtyVolatileLongArray1;
      // Undeclared exception!
      try { 
        bitType1.compareTo(bitType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType1.and(bitType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      bitType0.not();
      assertEquals(1.0, bitType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.not();
      assertEquals(1.0, bitType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      bitType0.sub(bitType0);
      bitType0.and(bitType0);
      assertEquals(0.0, bitType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LongArray longArray0 = new LongArray((long[]) null);
      BitType bitType0 = new BitType(longArray0);
      // Undeclared exception!
      try { 
        bitType0.set(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.set(false);
      assertEquals(0, bitType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BitType bitType0 = new BitType();
      boolean boolean0 = bitType0.get();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      boolean boolean0 = bitType0.get();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.xor(bitType0);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BitType bitType0 = new BitType();
      boolean boolean0 = bitType0.valueEquals(bitType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = new BitType(true);
      boolean boolean0 = bitType0.valueEquals(bitType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.dec();
      String string0 = bitType0.toString();
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BitType bitType0 = new BitType();
      String string0 = bitType0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      bitType0.mul(0.5);
      assertEquals(0.0F, bitType0.getImaginaryFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.mul(0.5);
      assertEquals(0, bitType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.pow(bitType0);
      bitType0.mul(754.02F);
      assertEquals(1.0, bitType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BitType bitType0 = new BitType();
      long[] longArray0 = new long[7];
      Long long0 = new Long(2247L);
      Ntree<Long> ntree0 = new Ntree<Long>(longArray0, long0);
      LongNtree longNtree0 = new LongNtree(ntree0, longArray0);
      bitType0.dataAccess = (LongAccess) longNtree0;
      // Undeclared exception!
      bitType0.dec();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = new BitType(true);
      assertFalse(bitType1.equals((Object)bitType0));
      
      bitType0.or(bitType1);
      assertTrue(bitType1.equals((Object)bitType0));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.or(bitType0);
      assertEquals(0, bitType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.pow(bitType0);
      bitType0.or(bitType0);
      assertEquals(0, bitType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.dec();
      BitType bitType1 = new BitType();
      assertFalse(bitType1.equals((Object)bitType0));
      
      bitType0.and(bitType1);
      assertTrue(bitType1.equals((Object)bitType0));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess();
      BitType bitType0 = new BitType(longBufferAccess0);
      MockRandom mockRandom0 = new MockRandom(0L);
      BigInteger bigInteger0 = BigInteger.probablePrime(1421, mockRandom0);
      // Undeclared exception!
      try { 
        bitType0.setBigInteger(bigInteger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.LongBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BitType bitType0 = new BitType();
      BigInteger bigInteger0 = BigInteger.ZERO;
      bitType0.setBigInteger(bigInteger0);
      assertEquals(1.0, bitType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.pow(bitType0);
      bitType0.and(bitType0);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      BigInteger bigInteger0 = bitType0.getBigInteger();
      assertEquals((short)1, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BitType bitType0 = new BitType();
      BigInteger bigInteger0 = bitType0.getBigInteger();
      assertEquals((short)0, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BitType bitType0 = new BitType();
      int int0 = bitType0.getInteger();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = new BitType(true);
      bitType0.pow(bitType1);
      assertFalse(bitType1.equals((Object)bitType0));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BitType bitType0 = new BitType();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        bitType0.updateContainer(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.setOne();
      assertEquals(0.0, bitType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BitType bitType0 = new BitType(true);
      double double0 = bitType0.getMaxValue();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BitType bitType0 = new BitType(false);
      int int0 = bitType0.compareTo(bitType0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.inc();
      long long0 = bitType0.getIntegerLong();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.setZero();
      assertEquals(1, bitType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.div(bitType0);
      assertEquals(0.0, bitType0.getPhaseDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.add(bitType0);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        bitType0.add(bitType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BitType bitType0 = new BitType();
      BitType bitType1 = bitType0.copy();
      long[] longArray0 = new long[6];
      LongArray longArray1 = new LongArray(longArray0);
      LongArray longArray2 = longArray1.createArray(0);
      bitType1.dataAccess = (LongAccess) longArray2;
      // Undeclared exception!
      try { 
        bitType1.getInteger();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.set(bitType0);
      assertEquals(0.0, bitType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BitType bitType0 = new BitType();
      Fraction fraction0 = bitType0.getEntitiesPerPixel();
      assertEquals(0.015625, fraction0.getRatio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BitType bitType0 = new BitType();
      Index index0 = bitType0.index();
      boolean boolean0 = bitType0.equals(index0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BitType bitType0 = new BitType((LongAccess) null);
      // Undeclared exception!
      try { 
        bitType0.mul(bitType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.logic.BitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BitType bitType0 = new BitType();
      NativeTypeFactory<BitType, LongAccess> nativeTypeFactory0 = bitType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.LONG, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BitType bitType0 = new BitType();
      int int0 = bitType0.getBitsPerPixel();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BitType bitType0 = new BitType();
      bitType0.dec();
      int int0 = bitType0.getInteger();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BitType bitType0 = new BitType();
      double double0 = bitType0.getMinValue();
      assertEquals(0.0, double0, 0.01);
  }
}
