/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:57:47 GMT 2022
 */

package net.imglib2.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.basictypeaccess.array.DirtyLongArray;
import net.imglib2.type.label.BasePairBitType;
import net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractBitType_ESTest extends AbstractBitType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType(8);
      unsignedVariableBitLengthType0.getNativeTypeFactory();
      assertEquals(255.0, unsignedVariableBitLengthType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasePairBitType basePairBitType0 = new BasePairBitType();
      // Undeclared exception!
      try { 
        basePairBitType0.updateContainer(basePairBitType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.AbstractBitType", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DirtyLongArray dirtyLongArray0 = new DirtyLongArray(1);
      long[] longArray0 = new long[4];
      Fraction fraction0 = new Fraction();
      ArrayImg<UnsignedVariableBitLengthType, DirtyLongArray> arrayImg0 = new ArrayImg<UnsignedVariableBitLengthType, DirtyLongArray>(dirtyLongArray0, longArray0, fraction0);
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType(arrayImg0, 1);
      unsignedVariableBitLengthType0.index();
      assertEquals(1.0, unsignedVariableBitLengthType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DirtyLongArray dirtyLongArray0 = new DirtyLongArray(1);
      long[] longArray0 = new long[4];
      Fraction fraction0 = new Fraction();
      ArrayImg<UnsignedVariableBitLengthType, DirtyLongArray> arrayImg0 = new ArrayImg<UnsignedVariableBitLengthType, DirtyLongArray>(dirtyLongArray0, longArray0, fraction0);
      UnsignedVariableBitLengthType unsignedVariableBitLengthType0 = new UnsignedVariableBitLengthType(arrayImg0, 1);
      unsignedVariableBitLengthType0.updateContainer((Object) null);
      assertEquals(1.0, unsignedVariableBitLengthType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasePairBitType basePairBitType0 = new BasePairBitType();
      Fraction fraction0 = basePairBitType0.getEntitiesPerPixel();
      assertEquals(0.046875, fraction0.getRatio(), 0.01);
  }
}
