/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 19:06:35 GMT 2022
 */

package net.imglib2.type.volatiles;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.basictypeaccess.volatiles.VolatileIntAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileIntArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileIntArray;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.label.BasePairBitType;
import net.imglib2.type.numeric.ARGBType;
import net.imglib2.type.volatiles.VolatileARGBType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileARGBType_ESTest extends VolatileARGBType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType((-1609));
      assertEquals(0, volatileARGBType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      // Undeclared exception!
      try { 
        volatileARGBType0.updateContainer(volatileARGBType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.set((-821));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(0, false);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(dirtyVolatileIntArray0);
      // Undeclared exception!
      try { 
        volatileARGBType0.set(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      // Undeclared exception!
      try { 
        volatileARGBType0.copy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(0, true);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(dirtyVolatileIntArray0);
      // Undeclared exception!
      try { 
        volatileARGBType0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = null;
      try {
        volatileARGBType0 = new VolatileARGBType((VolatileIntAccess) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.createVariable();
      // Undeclared exception!
      try { 
        volatileARGBType1.duplicateTypeOnSameNativeImg();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      volatileARGBType0.set((-821));
      assertEquals(0, volatileARGBType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, true);
      long[] longArray0 = new long[5];
      BasePairBitType.Base basePairBitType_Base0 = BasePairBitType.Base.C;
      BasePairBitType basePairBitType0 = new BasePairBitType(basePairBitType_Base0);
      Fraction fraction0 = basePairBitType0.getEntitiesPerPixel();
      ArrayImg<ARGBType, VolatileIntArray> arrayImg0 = new ArrayImg<ARGBType, VolatileIntArray>(volatileIntArray0, longArray0, fraction0);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(arrayImg0);
      // Undeclared exception!
      try { 
        volatileARGBType0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      NativeTypeFactory<VolatileARGBType, ?> nativeTypeFactory0 = volatileARGBType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.INT, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[7];
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(intArray0, true);
      long[] longArray0 = new long[6];
      BasePairBitType basePairBitType0 = new BasePairBitType();
      Fraction fraction0 = basePairBitType0.getEntitiesPerPixel();
      ArrayImg<ARGBType, VolatileIntAccess> arrayImg0 = new ArrayImg<ARGBType, VolatileIntAccess>((VolatileIntAccess) dirtyVolatileIntArray0, longArray0, fraction0);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(arrayImg0);
      volatileARGBType0.updateContainer((Object) null);
      assertTrue(volatileARGBType0.isValid());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType0.createVariable();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
