/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:47:01 GMT 2022
 */

package net.imglib2.type.volatiles;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.imglib2.img.basictypeaccess.array.DirtyIntArray;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import net.imglib2.type.numeric.integer.UnsignedIntType;
import net.imglib2.type.volatiles.VolatileRealType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileRealType_ESTest extends VolatileRealType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      VolatileRealType<UnsignedIntType> volatileRealType0 = new VolatileRealType<UnsignedIntType>(unsignedIntType0, true);
      VolatileRealType<UnsignedIntType> volatileRealType1 = volatileRealType0.createVariable();
      assertTrue(volatileRealType1.isValid());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      VolatileRealType<UnsignedIntType> volatileRealType0 = new VolatileRealType<UnsignedIntType>(unsignedIntType0, true);
      VolatileRealType<UnsignedIntType> volatileRealType1 = volatileRealType0.copy();
      assertTrue(volatileRealType1.equals((Object)volatileRealType0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      VolatileRealType<UnsignedIntType> volatileRealType0 = new VolatileRealType<UnsignedIntType>(unsignedIntType0, false);
      VolatileRealType<UnsignedIntType> volatileRealType1 = volatileRealType0.copy();
      assertNotSame(volatileRealType0, volatileRealType1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = IntBufferAccess.fromByteBuffer(byteBuffer0, true);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(intBufferAccess0);
      VolatileRealType<UnsignedIntType> volatileRealType0 = new VolatileRealType<UnsignedIntType>(unsignedIntType0);
      // Undeclared exception!
      try { 
        volatileRealType0.copy();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DirtyIntArray dirtyIntArray0 = new DirtyIntArray(0);
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(dirtyIntArray0);
      VolatileRealType<UnsignedIntType> volatileRealType0 = new VolatileRealType<UnsignedIntType>(unsignedIntType0, true);
      // Undeclared exception!
      try { 
        volatileRealType0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      VolatileRealType<UnsignedIntType> volatileRealType0 = new VolatileRealType<UnsignedIntType>((UnsignedIntType) null);
      // Undeclared exception!
      try { 
        volatileRealType0.createVariable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileRealType", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      VolatileRealType<UnsignedIntType> volatileRealType0 = new VolatileRealType<UnsignedIntType>((UnsignedIntType) null);
      // Undeclared exception!
      try { 
        volatileRealType0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileRealType", e);
      }
  }
}
