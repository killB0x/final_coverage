/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:36:05 GMT 2022
 */

package net.imglib2.type.volatiles;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.basictypeaccess.nio.LongBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.VolatileLongAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileLongArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileLongArray;
import net.imglib2.img.cell.Cell;
import net.imglib2.img.cell.CellGrid;
import net.imglib2.img.cell.LazyCellImg;
import net.imglib2.img.sparse.LongNtree;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.numeric.integer.LongType;
import net.imglib2.type.numeric.integer.UnsignedShortType;
import net.imglib2.type.volatiles.VolatileLongType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileLongType_ESTest extends VolatileLongType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType((-806L));
      assertEquals(9.223372036854776E18, volatileLongType0.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType();
      VolatileLongType volatileLongType1 = volatileLongType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileLongType1.set((-2457L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.LongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess();
      VolatileLongType volatileLongType0 = new VolatileLongType(longBufferAccess0);
      // Undeclared exception!
      try { 
        volatileLongType0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.LongBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongBufferAccess longBufferAccess0 = new LongBufferAccess(0);
      VolatileLongType volatileLongType0 = new VolatileLongType(longBufferAccess0);
      // Undeclared exception!
      try { 
        volatileLongType0.copy();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[0];
      VolatileLongArray volatileLongArray0 = new VolatileLongArray(longArray0, true);
      VolatileLongType volatileLongType0 = new VolatileLongType(volatileLongArray0);
      // Undeclared exception!
      try { 
        volatileLongType0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractLongArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VolatileLongType volatileLongType0 = null;
      try {
        volatileLongType0 = new VolatileLongType((VolatileLongAccess) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileLongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType();
      VolatileLongType volatileLongType1 = volatileLongType0.createVariable();
      // Undeclared exception!
      try { 
        volatileLongType1.createVariable();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType();
      volatileLongType0.set((-2457L));
      assertEquals(1.0, volatileLongType0.getMinIncrement(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[4];
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(longArray0, true);
      UnsignedShortType unsignedShortType0 = new UnsignedShortType();
      Fraction fraction0 = unsignedShortType0.getEntitiesPerPixel();
      ArrayImg<LongType, VolatileLongAccess> arrayImg0 = new ArrayImg<LongType, VolatileLongAccess>((VolatileLongAccess) dirtyVolatileLongArray0, longArray0, fraction0);
      VolatileLongType volatileLongType0 = new VolatileLongType(arrayImg0);
      volatileLongType0.updateContainer(fraction0);
      assertEquals((-9.223372036854776E18), volatileLongType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType();
      NativeTypeFactory<VolatileLongType, ?> nativeTypeFactory0 = volatileLongType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.LONG, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType();
      long[] longArray0 = new long[1];
      LongNtree longNtree0 = new LongNtree(longArray0, longArray0, (-5008));
      LongType longType0 = new LongType(longNtree0);
      // Undeclared exception!
      try { 
        volatileLongType0.updateContainer(longType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileLongType", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType();
      VolatileLongType volatileLongType1 = volatileLongType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileLongType1.duplicateTypeOnSameNativeImg();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-5008);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      LongNtree longNtree0 = new LongNtree(longArray0, longArray0, (-5008));
      LongType longType0 = new LongType(longNtree0);
      LazyCellImg.Get<Cell<VolatileLongAccess>> lazyCellImg_Get0 = (LazyCellImg.Get<Cell<VolatileLongAccess>>) mock(LazyCellImg.Get.class, new ViolatedAssumptionAnswer());
      LazyCellImg<LongType, VolatileLongAccess> lazyCellImg0 = new LazyCellImg<LongType, VolatileLongAccess>(cellGrid0, longType0, lazyCellImg_Get0);
      VolatileLongType volatileLongType0 = new VolatileLongType(lazyCellImg0);
      // Undeclared exception!
      try { 
        volatileLongType0.updateContainer(longType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.imglib2.type.numeric.integer.LongType cannot be cast to class net.imglib2.img.cell.AbstractCellImg$CellImgSampler (net.imglib2.type.numeric.integer.LongType and net.imglib2.img.cell.AbstractCellImg$CellImgSampler are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3192dfd9)
         //
         verifyException("net.imglib2.img.cell.AbstractCellImg", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VolatileLongType volatileLongType0 = new VolatileLongType();
      // Undeclared exception!
      try { 
        volatileLongType0.copy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
