/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:51:11 GMT 2022
 */

package net.imglib2.type.volatiles;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.VolatileIntAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileIntArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileIntArray;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.numeric.integer.IntType;
import net.imglib2.type.volatiles.VolatileIntType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileIntType_ESTest extends VolatileIntType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType();
      // Undeclared exception!
      try { 
        volatileIntType0.updateContainer(volatileIntType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType(1853);
      VolatileIntType volatileIntType1 = volatileIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileIntType1.set(1853);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      VolatileIntType volatileIntType0 = new VolatileIntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileIntType0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0);
      VolatileIntType volatileIntType0 = new VolatileIntType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileIntType0.copy();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, false);
      VolatileIntType volatileIntType0 = new VolatileIntType(volatileIntArray0);
      // Undeclared exception!
      try { 
        volatileIntType0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VolatileIntType volatileIntType0 = null;
      try {
        volatileIntType0 = new VolatileIntType((VolatileIntAccess) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileIntType", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType(1853);
      volatileIntType0.set(1853);
      assertEquals(32, volatileIntType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType(0);
      // Undeclared exception!
      try { 
        volatileIntType0.copy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType();
      VolatileIntType volatileIntType1 = volatileIntType0.createVariable();
      // Undeclared exception!
      try { 
        volatileIntType1.duplicateTypeOnSameNativeImg();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType();
      NativeTypeFactory<VolatileIntType, ?> nativeTypeFactory0 = volatileIntType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.INT, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(1, true);
      long[] longArray0 = new long[1];
      VolatileIntType volatileIntType0 = new VolatileIntType();
      Fraction fraction0 = volatileIntType0.getEntitiesPerPixel();
      ArrayImg<IntType, DirtyVolatileIntArray> arrayImg0 = new ArrayImg<IntType, DirtyVolatileIntArray>(dirtyVolatileIntArray0, longArray0, fraction0);
      VolatileIntType volatileIntType1 = new VolatileIntType(arrayImg0);
      volatileIntType1.updateContainer(volatileIntType0);
      assertTrue(volatileIntType1.equals((Object)volatileIntType0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType();
      VolatileIntType volatileIntType1 = volatileIntType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileIntType1.createVariable();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
