/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:47:23 GMT 2022
 */

package net.imglib2.type.volatiles;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.basictypeaccess.nio.ByteBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.VolatileByteAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileByteArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileByteArray;
import net.imglib2.type.NativeTypeFactory;
import net.imglib2.type.PrimitiveType;
import net.imglib2.type.label.BasePairCharType;
import net.imglib2.type.numeric.integer.Unsigned4BitType;
import net.imglib2.type.volatiles.VolatileByteType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileByteType_ESTest extends VolatileByteType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VolatileByteType volatileByteType0 = new VolatileByteType();
      // Undeclared exception!
      try { 
        volatileByteType0.updateContainer(volatileByteType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VolatileByteType volatileByteType0 = new VolatileByteType((byte) (-51));
      VolatileByteType volatileByteType1 = volatileByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileByteType1.set((byte) (-51));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VolatileByteType volatileByteType0 = new VolatileByteType();
      // Undeclared exception!
      try { 
        volatileByteType0.copy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteBufferAccess byteBufferAccess0 = new ByteBufferAccess(0);
      VolatileByteType volatileByteType0 = new VolatileByteType(byteBufferAccess0);
      // Undeclared exception!
      try { 
        volatileByteType0.copy();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VolatileByteArray volatileByteArray0 = new VolatileByteArray(0, false);
      VolatileByteType volatileByteType0 = new VolatileByteType(volatileByteArray0);
      // Undeclared exception!
      try { 
        volatileByteType0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VolatileByteType volatileByteType0 = null;
      try {
        volatileByteType0 = new VolatileByteType((VolatileByteAccess) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.VolatileByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VolatileByteType volatileByteType0 = new VolatileByteType((byte) (-51));
      volatileByteType0.set((byte) (-51));
      assertEquals(8, volatileByteType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VolatileByteType volatileByteType0 = new VolatileByteType();
      volatileByteType0.createVariable();
      // Undeclared exception!
      try { 
        volatileByteType0.createVariable();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DirtyVolatileByteArray dirtyVolatileByteArray0 = new DirtyVolatileByteArray(0, false);
      long[] longArray0 = new long[9];
      BasePairCharType basePairCharType0 = new BasePairCharType('f');
      Fraction fraction0 = basePairCharType0.getEntitiesPerPixel();
      ArrayImg<Unsigned4BitType, DirtyVolatileByteArray> arrayImg0 = new ArrayImg<Unsigned4BitType, DirtyVolatileByteArray>(dirtyVolatileByteArray0, longArray0, fraction0);
      VolatileByteType volatileByteType0 = new VolatileByteType(arrayImg0);
      NativeTypeFactory<VolatileByteType, ?> nativeTypeFactory0 = volatileByteType0.getNativeTypeFactory();
      assertEquals(PrimitiveType.BYTE, nativeTypeFactory0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteBufferAccess byteBufferAccess0 = new ByteBufferAccess();
      VolatileByteType volatileByteType0 = new VolatileByteType(byteBufferAccess0);
      // Undeclared exception!
      try { 
        volatileByteType0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.ByteBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VolatileByteType volatileByteType0 = new VolatileByteType();
      VolatileByteType volatileByteType1 = volatileByteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileByteType1.duplicateTypeOnSameNativeImg();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DirtyVolatileByteArray dirtyVolatileByteArray0 = new DirtyVolatileByteArray(0, false);
      long[] longArray0 = new long[9];
      BasePairCharType basePairCharType0 = new BasePairCharType('f');
      Fraction fraction0 = basePairCharType0.getEntitiesPerPixel();
      ArrayImg<Unsigned4BitType, DirtyVolatileByteArray> arrayImg0 = new ArrayImg<Unsigned4BitType, DirtyVolatileByteArray>(dirtyVolatileByteArray0, longArray0, fraction0);
      VolatileByteType volatileByteType0 = new VolatileByteType(arrayImg0);
      volatileByteType0.updateContainer(volatileByteType0);
      assertEquals(1.0, volatileByteType0.getMinIncrement(), 0.01);
  }
}
