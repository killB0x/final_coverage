/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:37:16 GMT 2022
 */

package net.imglib2.type.volatiles;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileByteArray;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileIntArray;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileIntArray;
import net.imglib2.type.volatiles.VolatileARGBType;
import net.imglib2.type.volatiles.VolatileNumericType;
import net.imglib2.type.volatiles.VolatileUnsignedByteType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractVolatileNumericType_ESTest extends AbstractVolatileNumericType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(1843);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(1843, false);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      volatileARGBType0.pow(volatileARGBType1);
      assertFalse(volatileARGBType0.isValid());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.copy();
      volatileARGBType0.pow(volatileARGBType1);
      assertTrue(volatileARGBType0.isValid());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-126);
      DirtyVolatileByteArray dirtyVolatileByteArray0 = new DirtyVolatileByteArray(byteArray0, false);
      VolatileUnsignedByteType volatileUnsignedByteType0 = new VolatileUnsignedByteType(dirtyVolatileByteArray0);
      VolatileNumericType<VolatileUnsignedByteType> volatileNumericType0 = new VolatileNumericType<VolatileUnsignedByteType>(volatileUnsignedByteType0);
      VolatileNumericType<VolatileUnsignedByteType> volatileNumericType1 = new VolatileNumericType<VolatileUnsignedByteType>(volatileUnsignedByteType0, false);
      volatileNumericType0.div(volatileNumericType1);
      assertFalse(volatileNumericType0.isValid());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(15);
      volatileARGBType0.mul(volatileARGBType1);
      assertTrue(volatileARGBType0.isValid());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileNumericType<VolatileARGBType> volatileNumericType0 = new VolatileNumericType<VolatileARGBType>(volatileARGBType0, false);
      VolatileNumericType<VolatileARGBType> volatileNumericType1 = volatileNumericType0.createVariable();
      volatileNumericType1.sub(volatileNumericType0);
      assertFalse(volatileNumericType1.isValid());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(4600, false);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      volatileARGBType0.add(volatileARGBType1);
      assertFalse(volatileARGBType0.isValid());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.copy();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(4600, false);
      VolatileARGBType volatileARGBType2 = new VolatileARGBType(intBufferAccess0);
      volatileARGBType0.add(volatileARGBType2);
      volatileARGBType1.mul(volatileARGBType0);
      assertFalse(volatileARGBType0.isValid());
      assertTrue(volatileARGBType0.equals((Object)volatileARGBType1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      volatileARGBType0.set(volatileARGBType0);
      assertEquals(0, volatileARGBType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      boolean boolean0 = volatileARGBType0.equals(volatileARGBType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      // Undeclared exception!
      try { 
        volatileARGBType0.valueEquals((VolatileARGBType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.AbstractVolatileNumericType", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.valueEquals(volatileARGBType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapIntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, true);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(volatileIntArray0);
      // Undeclared exception!
      try { 
        volatileARGBType0.valueEquals(volatileARGBType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType0.sub(volatileARGBType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.sub(volatileARGBType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapIntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(0, false);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(dirtyVolatileIntArray0);
      // Undeclared exception!
      try { 
        volatileARGBType1.sub(volatileARGBType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.setZero();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0, true);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.setZero();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.setOne();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.set(volatileARGBType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.set(volatileARGBType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapIntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, true);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(volatileIntArray0);
      // Undeclared exception!
      try { 
        volatileARGBType0.set(volatileARGBType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType0.pow(volatileARGBType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.pow(volatileARGBType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, true);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(volatileIntArray0);
      // Undeclared exception!
      try { 
        volatileARGBType0.pow(volatileARGBType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.pow(2200.81432073);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[0];
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(intArray0, false);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(dirtyVolatileIntArray0);
      VolatileNumericType<VolatileARGBType> volatileNumericType0 = new VolatileNumericType<VolatileARGBType>(volatileARGBType0, false);
      // Undeclared exception!
      try { 
        volatileNumericType0.pow((-2.147483648E9));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.mul(volatileARGBType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.mul(volatileARGBType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapIntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.mul(2475.6238F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0, true);
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.mul((float) 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapIntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        volatileARGBType1.mul(807.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.ARGBType", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.equals(volatileARGBType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      // Undeclared exception!
      try { 
        volatileARGBType0.div((VolatileARGBType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.AbstractVolatileNumericType", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      IntBuffer intBuffer0 = IntBuffer.allocate(0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(intBuffer0);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType1.div(volatileARGBType0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.HeapIntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType((-1613));
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(0, true);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(dirtyVolatileIntArray0);
      // Undeclared exception!
      try { 
        volatileARGBType0.div(volatileARGBType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VolatileUnsignedByteType volatileUnsignedByteType0 = new VolatileUnsignedByteType();
      VolatileNumericType<VolatileUnsignedByteType> volatileNumericType0 = new VolatileNumericType<VolatileUnsignedByteType>(volatileUnsignedByteType0);
      // Undeclared exception!
      try { 
        volatileNumericType0.div(volatileNumericType0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.type.numeric.integer.UnsignedByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      // Undeclared exception!
      try { 
        volatileARGBType0.add((VolatileARGBType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.volatiles.AbstractVolatileNumericType", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0, false);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(intBufferAccess0);
      // Undeclared exception!
      try { 
        volatileARGBType0.add(volatileARGBType1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      int[] intArray0 = new int[8];
      DirtyVolatileIntArray dirtyVolatileIntArray0 = new DirtyVolatileIntArray(intArray0, false);
      DirtyVolatileIntArray dirtyVolatileIntArray1 = dirtyVolatileIntArray0.createArray(0, false);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(dirtyVolatileIntArray1);
      // Undeclared exception!
      try { 
        volatileARGBType0.add(volatileARGBType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(1843);
      VolatileARGBType volatileARGBType1 = volatileARGBType0.duplicateTypeOnSameNativeImg();
      boolean boolean0 = volatileARGBType0.valueEquals(volatileARGBType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(4600);
      Object object0 = new Object();
      boolean boolean0 = volatileARGBType0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(4600);
      VolatileARGBType volatileARGBType1 = new VolatileARGBType(4600);
      assertTrue(volatileARGBType1.equals((Object)volatileARGBType0));
      
      volatileARGBType1.setOne();
      boolean boolean0 = volatileARGBType1.valueEquals(volatileARGBType0);
      assertFalse(volatileARGBType1.equals((Object)volatileARGBType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(4600);
      boolean boolean0 = volatileARGBType0.valueEquals(volatileARGBType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      volatileARGBType0.mul((-844.856363585778));
      assertEquals(0, volatileARGBType0.getIndex());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      volatileARGBType0.mul((-487.0F));
      assertTrue(volatileARGBType0.isValid());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType(4600);
      volatileARGBType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      volatileARGBType0.pow(1406.227711264);
      assertTrue(volatileARGBType0.isValid());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VolatileARGBType volatileARGBType0 = new VolatileARGBType();
      volatileARGBType0.setZero();
      assertEquals(0, volatileARGBType0.getIndex());
  }
}
