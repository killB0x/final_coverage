/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:11:22 GMT 2022
 */

package net.imglib2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.Point;
import net.imglib2.PointSample;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractLocalizable_ESTest extends AbstractLocalizable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[3];
      Point point0 = new Point(intArray0);
      long[] longArray0 = new long[4];
      point0.localize(longArray0);
      assertEquals(3, point0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[3];
      PointSample<Integer> pointSample0 = new PointSample<Integer>((Supplier<Integer>) null, longArray0, false);
      float[] floatArray0 = new float[3];
      pointSample0.localize(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[1];
      PointSample<Object> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      double[] doubleArray0 = new double[2];
      pointSample0.localize(doubleArray0);
      assertEquals(1, pointSample0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, 548);
      long long0 = pointSample0.getLongPosition(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Integer> pointSample0 = new PointSample<Integer>(supplier0, 3871);
      Supplier<Integer> supplier1 = pointSample0.sampleSupplier;
      int[] intArray0 = new int[9];
      intArray0[0] = 3871;
      PointSample<Integer> pointSample1 = new PointSample<Integer>(supplier1, intArray0);
      long long0 = pointSample1.getLongPosition(0);
      assertEquals(3871L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-1715);
      PointSample<Integer> pointSample0 = new PointSample<Integer>((Supplier<Integer>) null, intArray0);
      long long0 = pointSample0.getLongPosition(0);
      assertEquals((-1715L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = 549L;
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, longArray0, true);
      int int0 = pointSample0.getIntPosition(0);
      assertEquals(549, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-2985L);
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, longArray0);
      int int0 = pointSample0.getIntPosition(0);
      assertEquals((-2985), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[3];
      longArray0[0] = 1L;
      PointSample<Object> pointSample0 = PointSample.wrap((Object) supplier0, longArray0);
      float float0 = pointSample0.getFloatPosition(0);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer((-4312));
      long[] longArray0 = new long[6];
      longArray0[0] = (long) (-4312);
      PointSample<Integer> pointSample0 = PointSample.wrap(integer0, longArray0);
      float float0 = pointSample0.getFloatPosition(0);
      assertEquals((-4312.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[3];
      longArray0[0] = 1L;
      PointSample<Object> pointSample0 = PointSample.wrap((Object) supplier0, longArray0);
      Point point0 = pointSample0.positionAsPoint();
      double double0 = point0.getDoublePosition(0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-1349);
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, intArray0);
      double double0 = pointSample0.getDoublePosition(0);
      assertEquals((-1349.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point point0 = new Point(1080);
      // Undeclared exception!
      try { 
        point0.localize((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point point0 = new Point(4727);
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        point0.localize(longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[11];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, intArray0);
      // Undeclared exception!
      try { 
        pointSample0.localize((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[1];
      Point point0 = new Point(4727);
      // Undeclared exception!
      try { 
        point0.localize(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[3];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, intArray0);
      // Undeclared exception!
      try { 
        pointSample0.localize((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Point point0 = new Point(1069);
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        point0.localize(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point point0 = new Point(1080);
      // Undeclared exception!
      try { 
        point0.localize((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[2];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, intArray0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        pointSample0.localize(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[5];
      PointSample<Integer> pointSample0 = new PointSample<Integer>((Supplier<Integer>) null, intArray0);
      // Undeclared exception!
      try { 
        pointSample0.getLongPosition((-1715));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1715 out of bounds for length 5
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[0];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, intArray0);
      // Undeclared exception!
      try { 
        pointSample0.getIntPosition((-1345));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1345 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Point point0 = new Point(1080);
      // Undeclared exception!
      try { 
        point0.getFloatPosition((-328));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -328 out of bounds for length 1080
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      long[] longArray0 = new long[2];
      Point point0 = new Point(longArray0);
      // Undeclared exception!
      try { 
        point0.getDoublePosition(3829);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3829 out of bounds for length 2
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      long[] longArray0 = new long[3];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, longArray0, true);
      int[] intArray0 = new int[6];
      pointSample0.localize(intArray0);
      assertEquals(6, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[3];
      PointSample<Object> pointSample0 = PointSample.wrap((Object) supplier0, longArray0);
      Point point0 = pointSample0.positionAsPoint();
      double double0 = point0.getDoublePosition(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[3];
      PointSample<Object> pointSample0 = new PointSample<Object>((Supplier<Object>) null, longArray0, true);
      int int0 = pointSample0.getIntPosition(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      long[] longArray0 = new long[3];
      PointSample<Object> pointSample0 = PointSample.wrap((Object) supplier0, longArray0);
      float float0 = pointSample0.getFloatPosition(0);
      assertEquals(0.0F, float0, 0.01F);
  }
}
