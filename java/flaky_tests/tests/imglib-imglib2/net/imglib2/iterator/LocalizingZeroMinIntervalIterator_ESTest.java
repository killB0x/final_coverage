/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:29:43 GMT 2022
 */

package net.imglib2.iterator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.Dimensions;
import net.imglib2.FinalInterval;
import net.imglib2.Interval;
import net.imglib2.Point;
import net.imglib2.Positionable;
import net.imglib2.RealPoint;
import net.imglib2.RealPointSample;
import net.imglib2.RealPositionable;
import net.imglib2.iterator.IntervalIterator;
import net.imglib2.iterator.LocalizingZeroMinIntervalIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizingZeroMinIntervalIterator_ESTest extends LocalizingZeroMinIntervalIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[1];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator1 = null;
      try {
        localizingZeroMinIntervalIterator1 = new LocalizingZeroMinIntervalIterator((Interval) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[1];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator1 = null;
      try {
        localizingZeroMinIntervalIterator1 = new LocalizingZeroMinIntervalIterator(finalInterval0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.iterator.IntervalIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[6];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      long[] longArray1 = new long[0];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator1 = null;
      try {
        localizingZeroMinIntervalIterator1 = new LocalizingZeroMinIntervalIterator(longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.iterator.IntervalIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[1];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator1 = null;
      try {
        localizingZeroMinIntervalIterator1 = new LocalizingZeroMinIntervalIterator((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[2];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      assertEquals((-1L), localizingZeroMinIntervalIterator0.getIndex());
      
      int[] intArray0 = new int[0];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator1 = null;
      try {
        localizingZeroMinIntervalIterator1 = new LocalizingZeroMinIntervalIterator(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.iterator.IntervalIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[1];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator1 = null;
      try {
        localizingZeroMinIntervalIterator1 = new LocalizingZeroMinIntervalIterator((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(intArray0);
      localizingZeroMinIntervalIterator0.fwd();
      Point point0 = new Point(localizingZeroMinIntervalIterator0);
      localizingZeroMinIntervalIterator0.max((Positionable) point0);
      localizingZeroMinIntervalIterator0.jumpFwd(1);
      localizingZeroMinIntervalIterator0.jumpFwd(0L);
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.maxAsDoubleArray();
      localizingZeroMinIntervalIterator0.jumpFwd(1);
      long[] longArray0 = new long[9];
      longArray0[0] = (long) 1;
      longArray0[1] = 0L;
      longArray0[2] = (long) 1;
      longArray0[3] = (long) 1;
      longArray0[4] = 814L;
      longArray0[5] = (long) 1;
      longArray0[6] = (long) 1;
      longArray0[7] = 0L;
      longArray0[8] = 0L;
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0, longArray0);
      IntervalIterator.create(finalInterval0);
      localizingZeroMinIntervalIterator0.reset();
      localizingZeroMinIntervalIterator0.reset();
      localizingZeroMinIntervalIterator0.fwd();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = 0L;
      longArray0[1] = (-1335L);
      longArray0[2] = (-1981L);
      longArray0[3] = 929L;
      longArray0[4] = 1498L;
      longArray0[5] = 0L;
      longArray0[6] = (-1L);
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0);
      FinalInterval finalInterval1 = new FinalInterval((Interval) finalInterval0);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(finalInterval1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[3];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator1 = new LocalizingZeroMinIntervalIterator(localizingZeroMinIntervalIterator0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 0L;
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      localizingZeroMinIntervalIterator0.max(longArray0);
      localizingZeroMinIntervalIterator0.maxAsPoint();
      localizingZeroMinIntervalIterator0.positionAsRealPoint();
      localizingZeroMinIntervalIterator0.maxAsDoubleArray();
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.fwd();
      Point point0 = localizingZeroMinIntervalIterator0.maxAsPoint();
      localizingZeroMinIntervalIterator0.maxAsRealPoint();
      RealPoint realPoint0 = localizingZeroMinIntervalIterator0.minAsRealPoint();
      point0.localize((RealPositionable) realPoint0);
      Object object0 = new Object();
      point0.toString();
      point0.equals(object0);
      localizingZeroMinIntervalIterator0.min((Positionable) point0);
      localizingZeroMinIntervalIterator0.reset();
      localizingZeroMinIntervalIterator0.jumpFwd((-1L));
      localizingZeroMinIntervalIterator0.positionAsDoubleArray();
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.jumpFwd((-1L));
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.reset();
      localizingZeroMinIntervalIterator0.jumpFwd((-9223372036854775808L));
      localizingZeroMinIntervalIterator0.reset();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = (-1);
      intArray0[2] = (-2454);
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = (-1016);
      intArray0[6] = (-1744);
      intArray0[7] = 1;
      intArray0[8] = (-330);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(intArray0);
      localizingZeroMinIntervalIterator0.minAsDoubleArray();
      // Undeclared exception!
      try { 
        localizingZeroMinIntervalIterator0.jumpFwd(0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[16];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      // Undeclared exception!
      try { 
        localizingZeroMinIntervalIterator0.jumpFwd(2922L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = (-572L);
      longArray0[1] = 0L;
      longArray0[2] = (-1570L);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.dimensionsAsPoint();
      try { 
        Dimensions.verifyAllPositive(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected only positive dimensions but got: [-572, 0, -1570]
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[4];
      FinalInterval finalInterval0 = new FinalInterval(longArray0, longArray0);
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(finalInterval0);
      localizingZeroMinIntervalIterator0.fwd();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[1];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      localizingZeroMinIntervalIterator0.jumpFwd(1L);
      localizingZeroMinIntervalIterator0.reset();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[4];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(intArray0);
      localizingZeroMinIntervalIterator0.reset();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[1];
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(longArray0);
      localizingZeroMinIntervalIterator0.fwd();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[1] = 3766;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 138;
      intArray0[5] = 1930;
      intArray0[6] = 0;
      LocalizingZeroMinIntervalIterator localizingZeroMinIntervalIterator0 = new LocalizingZeroMinIntervalIterator(intArray0);
      long[] longArray0 = new long[9];
      longArray0[0] = (long) 3766;
      localizingZeroMinIntervalIterator0.maxAsRealPoint();
      longArray0[1] = (-1L);
      longArray0[2] = (long) 0;
      longArray0[3] = (long) 0;
      longArray0[4] = (long) 3766;
      longArray0[5] = (long) 3766;
      longArray0[6] = (long) 0;
      longArray0[7] = (long) 138;
      longArray0[8] = (long) 138;
      localizingZeroMinIntervalIterator0.max(longArray0);
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.fwd();
      localizingZeroMinIntervalIterator0.reset();
      // Undeclared exception!
      try { 
        localizingZeroMinIntervalIterator0.jumpFwd(1L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }
}
