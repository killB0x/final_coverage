/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:16:10 GMT 2022
 */

package net.imglib2.parallel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;
import net.imglib2.parallel.ForkJoinExecutorService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ForkJoinExecutorService_ESTest extends ForkJoinExecutorService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(callable0).toString();
      Future<Object> future0 = forkJoinExecutorService0.submit(callable0);
      assertNotNull(future0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      // Undeclared exception!
      try { 
        forkJoinExecutorService0.submit((Runnable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ForkJoinTask$AdaptedRunnableAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      FutureTask<Object> futureTask0 = new FutureTask<Object>(callable0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, futureTask0, "Vt}jK?", (-1567L));
      futureTask0.isDone();
      forkJoinExecutorService0.submit((Runnable) mockThread0, (Object) "Vt}jK?");
      boolean boolean0 = forkJoinExecutorService0.isTerminated();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      boolean boolean0 = forkJoinExecutorService0.isShutdown();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      LinkedBlockingQueue<Callable<Object>> linkedBlockingQueue0 = new LinkedBlockingQueue<Callable<Object>>();
      Object object0 = new Object();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(callable0).toString();
      doReturn((Object) null).when(callable0).call();
      linkedBlockingQueue0.add(callable0);
      forkJoinExecutorService0.invokeAll((Collection<? extends Callable<Object>>) linkedBlockingQueue0);
      int int0 = forkJoinExecutorService0.getParallelism();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      forkJoinExecutorService0.isTerminated();
      // Undeclared exception!
      try { 
        forkJoinExecutorService0.shutdownNow();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ForkJoinExecutorService, shutdownNow is not implemented.
         //
         verifyException("net.imglib2.parallel.ForkJoinExecutorService", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread(mockThread0);
      forkJoinExecutorService0.submit((Runnable) mockThread1);
      ForkJoinExecutorService forkJoinExecutorService1 = new ForkJoinExecutorService();
      assertFalse(forkJoinExecutorService1.isShutdown());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      forkJoinExecutorService0.shutdown();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      // Undeclared exception!
      try { 
        forkJoinExecutorService0.awaitTermination(1, timeUnit0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ForkJoinExecutorService, awaitTermination is not implemented.
         //
         verifyException("net.imglib2.parallel.ForkJoinExecutorService", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      forkJoinExecutorService0.getParallelism();
      MockThread mockThread0 = new MockThread("V6^n](=yZMJbK2-/7");
      forkJoinExecutorService0.execute(mockThread0);
      assertFalse(mockThread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      LinkedBlockingDeque<Callable<Object>> linkedBlockingDeque0 = new LinkedBlockingDeque<Callable<Object>>();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      // Undeclared exception!
      try { 
        forkJoinExecutorService0.invokeAll((Collection<? extends Callable<Object>>) linkedBlockingDeque0, (-1142L), timeUnit0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ForkJoinExecutorService, invokeAll with timeout is not implemented.
         //
         verifyException("net.imglib2.parallel.ForkJoinExecutorService", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForkJoinExecutorService forkJoinExecutorService0 = new ForkJoinExecutorService();
      forkJoinExecutorService0.getParallelism();
      // Undeclared exception!
      try { 
        forkJoinExecutorService0.submit((Callable<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ForkJoinTask$AdaptedCallable", e);
      }
  }
}
