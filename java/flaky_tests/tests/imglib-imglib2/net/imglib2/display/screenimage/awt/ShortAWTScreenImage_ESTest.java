/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 19:01:23 GMT 2022
 */

package net.imglib2.display.screenimage.awt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.display.awt.SignedShortDataBuffer;
import net.imglib2.display.screenimage.awt.ShortAWTScreenImage;
import net.imglib2.img.basictypeaccess.array.ShortArray;
import net.imglib2.type.numeric.integer.ShortType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShortAWTScreenImage_ESTest extends ShortAWTScreenImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShortType shortType0 = new ShortType((short)1);
      short[] shortArray0 = new short[7];
      ShortArray shortArray1 = new ShortArray(shortArray0);
      long[] longArray0 = new long[2];
      longArray0[0] = (long) (short)1;
      longArray0[1] = (long) (short)1;
      ShortAWTScreenImage shortAWTScreenImage0 = new ShortAWTScreenImage(shortType0, shortArray1, longArray0);
      SignedShortDataBuffer signedShortDataBuffer0 = shortAWTScreenImage0.createDataBuffer(shortArray1);
      assertEquals(1, signedShortDataBuffer0.getDataType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShortType shortType0 = new ShortType((short)4185);
      short[] shortArray0 = new short[0];
      ShortArray shortArray1 = new ShortArray(shortArray0);
      long[] longArray0 = new long[7];
      longArray0[0] = (long) (short)4185;
      longArray0[1] = (long) (short)4185;
      ShortAWTScreenImage shortAWTScreenImage0 = new ShortAWTScreenImage(shortType0, shortArray1, longArray0);
      SignedShortDataBuffer signedShortDataBuffer0 = shortAWTScreenImage0.createDataBuffer(shortArray1);
      assertEquals(0, signedShortDataBuffer0.getSize());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortArray shortArray0 = new ShortArray(54);
      long[] longArray0 = new long[2];
      longArray0[0] = (long) 54;
      longArray0[1] = (long) 54;
      ShortAWTScreenImage shortAWTScreenImage0 = new ShortAWTScreenImage(shortType0, shortArray0, longArray0);
      // Undeclared exception!
      try { 
        shortAWTScreenImage0.createDataBuffer((ShortArray) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.screenimage.awt.ShortAWTScreenImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortArray shortArray0 = new ShortArray(1);
      long[] longArray0 = new long[2];
      ShortAWTScreenImage shortAWTScreenImage0 = null;
      try {
        shortAWTScreenImage0 = new ShortAWTScreenImage(shortType0, shortArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortArray shortArray0 = new ShortArray(54);
      long[] longArray0 = new long[1];
      ShortAWTScreenImage shortAWTScreenImage0 = null;
      try {
        shortAWTScreenImage0 = new ShortAWTScreenImage(shortType0, shortArray0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      ShortArray shortArray0 = new ShortArray(54);
      long[] longArray0 = new long[2];
      longArray0[0] = (long) 54;
      longArray0[1] = (long) 54;
      ShortAWTScreenImage shortAWTScreenImage0 = new ShortAWTScreenImage(shortType0, shortArray0, longArray0);
      ShortAWTScreenImage shortAWTScreenImage1 = null;
      try {
        shortAWTScreenImage1 = new ShortAWTScreenImage(shortAWTScreenImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.array.AbstractArrayCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ShortType shortType0 = new ShortType();
      long[] longArray0 = new long[2];
      ShortAWTScreenImage shortAWTScreenImage0 = null;
      try {
        shortAWTScreenImage0 = new ShortAWTScreenImage(shortType0, (ShortArray) null, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.screenimage.awt.ShortAWTScreenImage", e);
      }
  }
}
