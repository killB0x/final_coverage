/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:00:50 GMT 2022
 */

package net.imglib2.display;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.display.ColorTable16;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ColorTable16_ESTest extends ColorTable16_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      short[][] shortArray0 = new short[9][9];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      colorTable16_0.getResampled(0, 2324, (short)0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      short[][] shortArray0 = new short[9][9];
      short[] shortArray1 = new short[7];
      shortArray1[0] = (short) (-1397);
      shortArray0[0] = shortArray1;
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      colorTable16_0.getResampled(0, 2324, (short)0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      short[][] shortArray0 = new short[5][7];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      colorTable16_0.getNative(0, 0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      short[][] shortArray0 = new short[5][7];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      colorTable16_0.get(0, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      short[][] shortArray0 = new short[5][7];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      assertEquals(5, colorTable16_0.getComponentCount());
      assertEquals(7, colorTable16_0.getLength());
      assertEquals(16, colorTable16_0.getBits());
      assertEquals(5, shortArray0.length);
      assertNotNull(colorTable16_0);
      
      // Undeclared exception!
      try { 
        colorTable16_0.getResampled((short)42, (short)42, 9985);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 42 out of bounds for length 5
         //
         verifyException("net.imglib2.display.ColorTable16", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      short[][] shortArray0 = new short[8][7];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      assertEquals(8, colorTable16_0.getComponentCount());
      assertEquals(16, colorTable16_0.getBits());
      assertEquals(7, colorTable16_0.getLength());
      assertEquals(8, shortArray0.length);
      assertNotNull(colorTable16_0);
      
      // Undeclared exception!
      try { 
        colorTable16_0.getNative(0, 16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 16 out of bounds for length 7
         //
         verifyException("net.imglib2.display.ColorTable16", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorTable16 colorTable16_0 = new ColorTable16((short[][]) null);
      assertEquals(16, colorTable16_0.getBits());
      assertNotNull(colorTable16_0);
      
      // Undeclared exception!
      try { 
        colorTable16_0.getLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.ColorTable16", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      short[][] shortArray0 = new short[9][9];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      assertEquals(9, colorTable16_0.getComponentCount());
      assertEquals(16, colorTable16_0.getBits());
      assertEquals(9, colorTable16_0.getLength());
      assertEquals(9, shortArray0.length);
      assertNotNull(colorTable16_0);
      
      // Undeclared exception!
      try { 
        colorTable16_0.get((-2541), (-2541));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2541 out of bounds for length 9
         //
         verifyException("net.imglib2.display.ColorTable16", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorTable16 colorTable16_0 = new ColorTable16((short[][]) null);
      assertEquals(16, colorTable16_0.getBits());
      assertNotNull(colorTable16_0);
      
      // Undeclared exception!
      try { 
        colorTable16_0.getNative(9950, 9950);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.ColorTable16", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      short[][] shortArray0 = new short[5][7];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      assertEquals(5, colorTable16_0.getComponentCount());
      assertEquals(16, colorTable16_0.getBits());
      assertEquals(7, colorTable16_0.getLength());
      assertEquals(5, shortArray0.length);
      assertNotNull(colorTable16_0);
      
      // Undeclared exception!
      try { 
        colorTable16_0.getResampled(0, 0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.display.ColorTable16", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorTable16 colorTable16_0 = new ColorTable16();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorTable16 colorTable16_0 = new ColorTable16((short[][]) null);
      int int0 = colorTable16_0.getBits();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      short[][] shortArray0 = new short[5][7];
      ColorTable16 colorTable16_0 = new ColorTable16(shortArray0);
      int int0 = colorTable16_0.getLength();
      assertEquals(7, int0);
  }
}
