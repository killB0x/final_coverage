/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:15:40 GMT 2022
 */

package net.imglib2.display.awt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.display.awt.SignedByteDataBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SignedByteDataBuffer_ESTest extends SignedByteDataBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[][] byteArray0 = new byte[9][3];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 961);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getElem(1, (int) (byte) (-117));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][1];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      signedByteDataBuffer0.setElem((int) (byte)0, 0, (int) (byte)0);
      assertEquals(0, signedByteDataBuffer0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      byte[] byteArray1 = new byte[5];
      byteArray1[1] = (byte)1;
      byteArray0[0] = byteArray1;
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      int int0 = signedByteDataBuffer0.getElem(0, (int) (byte)1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      signedByteDataBuffer0.setElemFloat(0, (-2055.8108F));
      int int0 = signedByteDataBuffer0.getElem(0, 0);
      assertArrayEquals(new byte[] {(byte) (-7), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((-7), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, (byte)0);
      int int0 = signedByteDataBuffer0.getElem((int) (byte)0);
      assertEquals(92, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      signedByteDataBuffer0.setElemFloat(0, (-2055.8108F));
      int int0 = signedByteDataBuffer0.getElem(0);
      assertArrayEquals(new byte[] {(byte) (-7), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((-7), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[][] byteArray0 = new byte[6][2];
      byteArray0[0] = null;
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 995);
      byte[] byteArray1 = signedByteDataBuffer0.getData(0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[][] byteArray0 = new byte[6][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 2598);
      byte[] byteArray2 = signedByteDataBuffer0.getData(0);
      assertEquals(0, byteArray2.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer((byte[]) null, (-6));
      byte[] byteArray0 = signedByteDataBuffer0.getData();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[][] byteArray0 = new byte[9][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, (byte) (-74));
      byte[] byteArray2 = signedByteDataBuffer0.getData();
      assertArrayEquals(new byte[] {}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer((byte[][]) null, (-7));
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.setElem((-7), (-7), (-7));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer((byte[]) null, 995);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.setElem(995, 995);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 3099);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.setElem(3099, 3099);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3099 out of bounds for length 7
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer((byte[][]) null, 0);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getElem(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer((byte[]) null, 3099);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getElem(3099);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 3099);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getElem(3099);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3099 out of bounds for length 1
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer((byte[][]) null, 1003);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getData((-1983));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 3099);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getData(3099);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3099 out of bounds for length 1
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer((byte[][]) null, 0);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][5];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 1026);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.getData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      // Undeclared exception!
      try { 
        signedByteDataBuffer0.setElem((int) (byte)1, 4479, (int) (byte)70);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.display.awt.SignedByteDataBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      byte[] byteArray1 = signedByteDataBuffer0.getData();
      assertSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[][] byteArray0 = new byte[6][2];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 995);
      byte[] byteArray1 = signedByteDataBuffer0.getData(0);
      assertEquals(2, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      signedByteDataBuffer0.setElem(0, 0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      int int0 = signedByteDataBuffer0.getElem(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      SignedByteDataBuffer signedByteDataBuffer0 = new SignedByteDataBuffer(byteArray0, 0);
      int int0 = signedByteDataBuffer0.getElem(0, 0);
      assertEquals(0, int0);
  }
}
