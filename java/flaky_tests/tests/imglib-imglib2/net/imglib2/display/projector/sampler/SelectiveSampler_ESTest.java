/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:35:17 GMT 2022
 */

package net.imglib2.display.projector.sampler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.PointSample;
import net.imglib2.display.projector.sampler.SelectiveSampler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SelectiveSampler_ESTest extends SelectiveSampler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[4];
      SelectiveSampler<Integer> selectiveSampler0 = new SelectiveSampler<Integer>(1, longArray0);
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      PointSample<Integer> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      selectiveSampler0.setRandomAccess(pointSample0);
      selectiveSampler0.get();
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[1];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1, longArray0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(selectiveSampler0).when(supplier0).get();
      long[] longArray1 = new long[4];
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, longArray1);
      selectiveSampler0.setRandomAccess(pointSample0);
      SelectiveSampler selectiveSampler1 = (SelectiveSampler)selectiveSampler0.get();
      assertTrue(selectiveSampler1.hasNext());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[4];
      SelectiveSampler<Integer> selectiveSampler0 = new SelectiveSampler<Integer>(1, longArray0);
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      PointSample<Integer> pointSample0 = PointSample.wrapSupplier(supplier0, longArray0);
      selectiveSampler0.setRandomAccess(pointSample0);
      selectiveSampler0.copy();
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SelectiveSampler<Integer> selectiveSampler0 = new SelectiveSampler<Integer>(2704, (long[]) null);
      // Undeclared exception!
      try { 
        selectiveSampler0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.projector.sampler.SelectiveSampler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[4];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1457, longArray0);
      PointSample<Object> pointSample0 = PointSample.wrap((Object) selectiveSampler0, longArray0);
      selectiveSampler0.setRandomAccess(pointSample0);
      // Undeclared exception!
      try { 
        selectiveSampler0.get();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1457 out of bounds for length 4
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[0];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1, longArray0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, longArray0);
      selectiveSampler0.setRandomAccess(pointSample0);
      // Undeclared exception!
      try { 
        selectiveSampler0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[0];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1, longArray0);
      assertFalse(selectiveSampler0.hasNext());
      
      selectiveSampler0.jumpFwd(9223372036854775807L);
      boolean boolean0 = selectiveSampler0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[0];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1, longArray0);
      boolean boolean0 = selectiveSampler0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[0];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1, longArray0);
      selectiveSampler0.jumpFwd(1);
      boolean boolean0 = selectiveSampler0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[4];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1457, longArray0);
      // Undeclared exception!
      try { 
        selectiveSampler0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.projector.sampler.SelectiveSampler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SelectiveSampler<Integer> selectiveSampler0 = new SelectiveSampler<Integer>(2704, (long[]) null);
      selectiveSampler0.fwd();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[1];
      SelectiveSampler<Integer> selectiveSampler0 = new SelectiveSampler<Integer>((-3154), longArray0);
      // Undeclared exception!
      try { 
        selectiveSampler0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.display.projector.sampler.SelectiveSampler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[0];
      SelectiveSampler<Object> selectiveSampler0 = new SelectiveSampler<Object>(1, longArray0);
      selectiveSampler0.reset();
      assertFalse(selectiveSampler0.hasNext());
  }
}
