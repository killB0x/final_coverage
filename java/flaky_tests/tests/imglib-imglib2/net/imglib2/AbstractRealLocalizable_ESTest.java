/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:50:41 GMT 2022
 */

package net.imglib2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.PointSample;
import net.imglib2.PointSampleList;
import net.imglib2.RealPoint;
import net.imglib2.RealPointSample;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractRealLocalizable_ESTest extends AbstractRealLocalizable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1);
      Supplier<Object> supplier1 = pointSample0.sampleSupplier;
      float[] floatArray0 = new float[3];
      RealPointSample<Object> realPointSample0 = new RealPointSample<Object>(supplier1, floatArray0);
      double[] doubleArray0 = new double[7];
      realPointSample0.localize(doubleArray0);
      assertEquals(7, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1);
      Supplier<Object> supplier1 = pointSample0.sampleSupplier;
      float[] floatArray0 = new float[3];
      floatArray0[1] = (float) 1;
      RealPointSample<Object> realPointSample0 = new RealPointSample<Object>(supplier1, floatArray0);
      RealPoint realPoint0 = realPointSample0.positionAsRealPoint();
      float float0 = realPoint0.getFloatPosition(1);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RealPoint realPoint0 = new RealPoint(2249);
      double double0 = realPoint0.getDoublePosition(40);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      float[] floatArray0 = new float[5];
      RealPoint realPoint0 = new RealPoint(floatArray0);
      // Undeclared exception!
      try { 
        realPoint0.localize((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      float[] floatArray0 = new float[16];
      RealPoint realPoint0 = new RealPoint(floatArray0);
      float[] floatArray1 = new float[0];
      // Undeclared exception!
      try { 
        realPoint0.localize(floatArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float[] floatArray0 = new float[6];
      RealPoint realPoint0 = new RealPoint(floatArray0);
      // Undeclared exception!
      try { 
        realPoint0.localize((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RealPoint realPoint0 = new RealPoint(8);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        realPoint0.localize(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RealPoint realPoint0 = new RealPoint(8);
      // Undeclared exception!
      try { 
        realPoint0.getFloatPosition(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 8 out of bounds for length 8
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RealPoint realPoint0 = new RealPoint(8);
      // Undeclared exception!
      try { 
        realPoint0.getDoublePosition(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 8 out of bounds for length 8
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(3142);
      double[] doubleArray0 = new double[0];
      RealPointSample<Integer> realPointSample0 = RealPointSample.wrap(integer0, doubleArray0);
      assertEquals(0, realPointSample0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      PointSample<Object> pointSample0 = new PointSample<Object>(supplier0, 1);
      Supplier<Object> supplier1 = pointSample0.sampleSupplier;
      float[] floatArray0 = new float[3];
      RealPointSample<Object> realPointSample0 = new RealPointSample<Object>(supplier1, floatArray0);
      RealPoint realPoint0 = realPointSample0.positionAsRealPoint();
      float float0 = realPoint0.getFloatPosition(1);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(3142);
      RealPoint realPoint0 = pointSampleList0.minAsRealPoint();
      double double0 = realPoint0.getDoublePosition(187);
      assertEquals(9.223372036854776E18, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[6];
      RealPoint realPoint0 = new RealPoint(floatArray0);
      realPoint0.localize(floatArray0);
      assertEquals(6, floatArray0.length);
  }
}
