/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:48:12 GMT 2022
 */

package net.imglib2.img.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import net.imglib2.RealPositionable;
import net.imglib2.img.array.ArrayImg;
import net.imglib2.img.array.ArrayRandomAccess;
import net.imglib2.img.basictypeaccess.nio.DoubleBufferAccess;
import net.imglib2.img.planar.PlanarImg;
import net.imglib2.type.logic.BitType;
import net.imglib2.type.numeric.NativeARGBDoubleType;
import net.imglib2.type.numeric.real.DoubleType;
import net.imglib2.type.volatiles.VolatileFloatType;
import net.imglib2.util.Fraction;
import net.imglib2.view.composite.RealComposite;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayRandomAccess_ESTest extends ArrayRandomAccess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayRandomAccess<NativeARGBDoubleType> arrayRandomAccess0 = null;
      try {
        arrayRandomAccess0 = new ArrayRandomAccess<NativeARGBDoubleType>((ArrayRandomAccess<NativeARGBDoubleType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.array.ArrayRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<DoubleBufferAccess> linkedList0 = new LinkedList<DoubleBufferAccess>();
      long[] longArray0 = new long[3];
      Fraction fraction0 = new Fraction();
      PlanarImg<BitType, DoubleBufferAccess> planarImg0 = new PlanarImg<BitType, DoubleBufferAccess>(linkedList0, longArray0, fraction0);
      ArrayImg<VolatileFloatType, PlanarImg<BitType, DoubleBufferAccess>> arrayImg0 = new ArrayImg<VolatileFloatType, PlanarImg<BitType, DoubleBufferAccess>>(planarImg0, longArray0, fraction0);
      ArrayRandomAccess<VolatileFloatType> arrayRandomAccess0 = null;
      try {
        arrayRandomAccess0 = new ArrayRandomAccess<VolatileFloatType>(arrayImg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.array.ArrayRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<DoubleBufferAccess> linkedList0 = new LinkedList<DoubleBufferAccess>();
      long[] longArray0 = new long[4];
      double[] doubleArray0 = new double[6];
      RealComposite<DoubleType> realComposite0 = DoubleType.wrapVector(doubleArray0);
      Fraction fraction0 = new Fraction();
      PlanarImg<BitType, DoubleBufferAccess> planarImg0 = new PlanarImg<BitType, DoubleBufferAccess>(linkedList0, longArray0, fraction0);
      planarImg0.realMin((RealPositionable) realComposite0);
      ArrayImg<VolatileFloatType, PlanarImg<BitType, DoubleBufferAccess>> arrayImg0 = new ArrayImg<VolatileFloatType, PlanarImg<BitType, DoubleBufferAccess>>(planarImg0, longArray0, fraction0);
      // Undeclared exception!
      try { 
        arrayImg0.realMax((RealPositionable) realComposite0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("net.imglib2.view.composite.RealComposite", e);
      }
  }
}
