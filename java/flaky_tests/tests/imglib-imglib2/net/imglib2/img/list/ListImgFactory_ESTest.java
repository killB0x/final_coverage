/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:58:39 GMT 2022
 */

package net.imglib2.img.list;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.Dimensions;
import net.imglib2.FinalDimensions;
import net.imglib2.FinalInterval;
import net.imglib2.PointSampleList;
import net.imglib2.RealPoint;
import net.imglib2.img.ImgFactory;
import net.imglib2.img.list.ListImg;
import net.imglib2.img.list.ListImgFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListImgFactory_ESTest extends ListImgFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>(integer0);
      long[] longArray0 = new long[6];
      longArray0[0] = (long) 1;
      longArray0[1] = (long) 1;
      ListImg<Integer> listImg0 = listImgFactory0.create(longArray0, integer0);
      longArray0[2] = (long) 1;
      longArray0[3] = (long) 1;
      longArray0[4] = (long) 1;
      longArray0[5] = (long) 1;
      ListImgFactory<Object> listImgFactory1 = new ListImgFactory<Object>(integer0);
      ListImg<Object> listImg1 = listImgFactory1.create(longArray0, (Object) listImg0);
      assertEquals(6, listImg1.numDimensions());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ListImgFactory<RealPoint> listImgFactory0 = new ListImgFactory<RealPoint>();
      long[] longArray0 = new long[3];
      longArray0[0] = 2147483639L;
      longArray0[1] = 1000L;
      longArray0[2] = 2147483647L;
      double[] doubleArray0 = new double[0];
      RealPoint realPoint0 = RealPoint.wrap(doubleArray0);
      ListImg<RealPoint> listImg0 = listImgFactory0.create(longArray0, realPoint0);
      assertEquals((-21474836471000L), listImg0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>(integer0);
      long[] longArray0 = new long[6];
      longArray0[0] = (long) 1;
      longArray0[1] = (long) 1;
      longArray0[2] = (long) 1;
      longArray0[3] = (long) 1;
      longArray0[4] = (long) 1;
      longArray0[5] = (long) 1;
      ListImg<Integer> listImg0 = listImgFactory0.create(longArray0);
      assertEquals(6, listImg0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = 2147483639L;
      longArray0[1] = 1000L;
      longArray0[2] = 2147483647L;
      ListImgFactory<Object> listImgFactory0 = new ListImgFactory<Object>();
      ListImg<Object> listImg0 = listImgFactory0.create(longArray0);
      assertEquals(3, listImg0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ListImg<Integer> listImg0 = listImgFactory0.create(intArray0);
      assertEquals(1L, listImg0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      long[] longArray0 = new long[2];
      longArray0[0] = 1L;
      longArray0[1] = 983L;
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0, longArray0);
      ListImg<Integer> listImg0 = listImgFactory0.create((Dimensions) finalInterval0);
      assertEquals(983L, listImg0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(2147483639);
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>(integer0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2147483639;
      intArray0[1] = 2147483639;
      intArray0[2] = 2147483639;
      intArray0[3] = 2147483639;
      intArray0[4] = 2147483639;
      intArray0[5] = 2147483639;
      intArray0[6] = 2147483639;
      intArray0[7] = 2147483639;
      ListImg<Integer> listImg0 = listImgFactory0.create(intArray0);
      ListImgFactory<Object> listImgFactory1 = new ListImgFactory<Object>(listImgFactory0);
      ListImg<Object> listImg1 = listImgFactory1.create((Dimensions) listImg0);
      assertEquals((-82170781688080575L), listImg1.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(1280);
      ListImg<Integer> listImg0 = listImgFactory0.create((Dimensions) pointSampleList0);
      assertEquals(0L, listImg0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(2147483639);
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>(integer0);
      long[] longArray0 = new long[2];
      longArray0[0] = (long) 2147483639;
      longArray0[1] = (long) 2147483639;
      // Undeclared exception!
      listImgFactory0.create(longArray0, integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      ListImgFactory<Object> listImgFactory1 = new ListImgFactory<Object>();
      long[] longArray0 = new long[1];
      longArray0[0] = 2147483647L;
      // Undeclared exception!
      listImgFactory1.create(longArray0, (Object) listImgFactory0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      ListImgFactory<Object> listImgFactory1 = new ListImgFactory<Object>(listImgFactory0);
      // Undeclared exception!
      try { 
        listImgFactory1.create((long[]) null, (Object) listImgFactory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.AbstractImg", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      long[] longArray0 = new long[1];
      longArray0[0] = (long) (-1);
      // Undeclared exception!
      try { 
        listImgFactory0.create(longArray0, integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ListImgFactory<RealPoint> listImgFactory0 = new ListImgFactory<RealPoint>();
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        listImgFactory0.create(longArray0, (RealPoint) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ListImgFactory<Object> listImgFactory0 = new ListImgFactory<Object>();
      long[] longArray0 = new long[2];
      longArray0[0] = 582L;
      longArray0[1] = 921L;
      // Undeclared exception!
      listImgFactory0.create(longArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      long[] longArray0 = new long[1];
      longArray0[0] = 2147483647L;
      // Undeclared exception!
      listImgFactory0.create(longArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ListImgFactory<Object> listImgFactory0 = new ListImgFactory<Object>();
      // Undeclared exception!
      try { 
        listImgFactory0.create((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.exception.InvalidDimensionsException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ListImgFactory<Object> listImgFactory0 = new ListImgFactory<Object>();
      long[] longArray0 = new long[1];
      longArray0[0] = 9223372036854775807L;
      // Undeclared exception!
      try { 
        listImgFactory0.create(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      int[] intArray0 = new int[2];
      intArray0[0] = 1347;
      intArray0[1] = 2072;
      // Undeclared exception!
      listImgFactory0.create(intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      ListImgFactory<Object> listImgFactory1 = new ListImgFactory<Object>(listImgFactory0);
      int[] intArray0 = new int[1];
      intArray0[0] = Integer.MAX_VALUE;
      // Undeclared exception!
      listImgFactory1.create(intArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      // Undeclared exception!
      try { 
        listImgFactory0.create((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(1456);
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>(integer0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1456;
      intArray0[1] = 1456;
      intArray0[2] = 1456;
      // Undeclared exception!
      try { 
        listImgFactory0.create(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1208340480
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(44);
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>(integer0);
      int[] intArray0 = new int[3];
      intArray0[0] = 44;
      intArray0[1] = 44;
      intArray0[2] = 44;
      FinalDimensions finalDimensions0 = new FinalDimensions(intArray0);
      // Undeclared exception!
      listImgFactory0.create((Dimensions) finalDimensions0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      long[] longArray0 = new long[1];
      longArray0[0] = 2147483647L;
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0, longArray0);
      // Undeclared exception!
      listImgFactory0.create((Dimensions) finalInterval0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      // Undeclared exception!
      try { 
        listImgFactory0.create((Dimensions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.Intervals", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      long[] longArray0 = new long[8];
      longArray0[0] = (long) 40;
      longArray0[1] = (long) 40;
      longArray0[2] = (long) 40;
      longArray0[3] = (long) 40;
      longArray0[4] = (long) 40;
      longArray0[5] = (long) 40;
      longArray0[6] = (long) 40;
      longArray0[7] = (long) 40;
      FinalDimensions finalDimensions0 = new FinalDimensions(longArray0);
      // Undeclared exception!
      try { 
        listImgFactory0.create((Dimensions) finalDimensions0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -520093696
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      long[] longArray0 = new long[7];
      long[] longArray1 = new long[0];
      FinalInterval finalInterval0 = FinalInterval.wrap(longArray0, longArray1);
      // Undeclared exception!
      try { 
        listImgFactory0.create((Dimensions) finalInterval0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[3];
      ListImgFactory<Object> listImgFactory0 = new ListImgFactory<Object>();
      // Undeclared exception!
      try { 
        listImgFactory0.create(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected only positive dimensions but got: [0, 0, 0]
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      Integer integer0 = new Integer(40);
      ImgFactory<Integer> imgFactory0 = listImgFactory0.imgFactory(integer0);
      assertNotNull(imgFactory0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(1456);
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>(integer0);
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        listImgFactory0.create(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected only positive dimensions but got: [0, 0, 0]
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ListImgFactory<Integer> listImgFactory0 = new ListImgFactory<Integer>();
      long[] longArray0 = new long[1];
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0, longArray0);
      // Undeclared exception!
      try { 
        listImgFactory0.create((Dimensions) finalInterval0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected only positive dimensions but got: [0]
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }
}
