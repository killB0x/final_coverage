/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:30:20 GMT 2022
 */

package net.imglib2.img.cell;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.Cursor;
import net.imglib2.FinalInterval;
import net.imglib2.Interval;
import net.imglib2.Localizable;
import net.imglib2.PointSample;
import net.imglib2.Positionable;
import net.imglib2.RealPoint;
import net.imglib2.img.cell.CellGrid;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CellGrid_ESTest extends CellGrid_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709474);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.cellIntervals();
      cellGrid0.getCellGridPositionFlat((-2143709474), longArray0);
      RealPoint realPoint0 = cellGrid_CellIntervals0.maxAsRealPoint();
      cellGrid0.getCellPosition(longArray0, (Positionable) realPoint0);
      assertArrayEquals(new long[] {(-2143709474L)}, longArray0);
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[7];
      intArray0[0] = 1021;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.getCellGridPositionFlat(2, longArray0);
      cellGrid0.getCellPosition(longArray0, longArray0);
      assertArrayEquals(new long[] {0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 1L;
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellPosition(longArray0, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellPosition(longArray0, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[4];
      int[] intArray0 = new int[7];
      intArray0[0] = 1021;
      intArray0[1] = 1021;
      intArray0[2] = 2;
      intArray0[3] = 2;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.getCellDimension(2, 2);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[4];
      int[] intArray0 = new int[7];
      intArray0[0] = 1021;
      long[] longArray1 = new long[1];
      CellGrid cellGrid0 = new CellGrid(longArray1, intArray0);
      cellGrid0.getCellDimensions(longArray0, longArray1, intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[4];
      int[] intArray0 = new int[7];
      intArray0[0] = 1021;
      intArray0[1] = 1021;
      intArray0[2] = 2;
      intArray0[3] = 2;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.getCellGridPositionFlat(1L, longArray0);
      cellGrid0.getCellDimensions(longArray0, longArray0, intArray0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 2L}, longArray0);
      assertArrayEquals(new int[] {0, 0, 0, 2, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[2] = (-4454L);
      int[] intArray0 = new int[7];
      intArray0[0] = 1021;
      intArray0[1] = 1021;
      intArray0[2] = 2;
      intArray0[3] = 2;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.getCellDimensions((-1013L), longArray0, intArray0);
      assertArrayEquals(new int[] {0, 0, 2, 0, 0, 0, 0}, intArray0);
      assertArrayEquals(new long[] {0L, 0L, (-2026L), 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = 269L;
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = (-1839);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.getCellDimensions((-2488L), longArray0, intArray0);
      assertArrayEquals(new int[] {2, 0, 0, 0, 0, 0}, intArray0);
      assertArrayEquals(new long[] {(-116L), 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709511);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.new CellIntervals();
      cellGrid_CellIntervals0.randomAccess();
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[5];
      intArray0[0] = 423;
      intArray0[1] = 1523;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.cellIntervals();
      cellGrid_CellIntervals0.numDimensions();
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[5];
      intArray0[0] = 423;
      intArray0[1] = 1523;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.cellIntervals();
      cellGrid_CellIntervals0.iterator();
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.cellIntervals();
      cellGrid_CellIntervals0.cursor();
      assertEquals(2L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 1L;
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.imgDimension(0);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[3] = (long) (-2143709506);
      int[] intArray0 = new int[8];
      intArray0[0] = (-2143709506);
      intArray0[1] = (-2143709506);
      intArray0[2] = (-2143709506);
      intArray0[3] = (-1);
      intArray0[4] = (-2143709506);
      intArray0[5] = (-2143709506);
      intArray0[6] = (-2143709506);
      intArray0[7] = (-2143709506);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.imgDimension(3);
      assertEquals((-2143709506L), long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.gridDimension(0);
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[2] = (-4454L);
      int[] intArray0 = new int[7];
      intArray0[0] = 2145382399;
      intArray0[1] = 2145382399;
      intArray0[2] = 2;
      intArray0[3] = 2;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.gridDimension(2);
      assertEquals((-2226L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[7];
      intArray0[0] = 1021;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.getCellMin(0, 1);
      assertEquals(1021L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[6];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.getCellMin(1, 516);
      assertEquals((-516L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[4];
      int[] intArray0 = new int[7];
      intArray0[0] = 2145382399;
      intArray0[1] = 2145382399;
      intArray0[2] = 2;
      intArray0[3] = 2;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.getCellDimension(1, (-1L));
      assertEquals(2145382399, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-1937L);
      int[] intArray0 = new int[5];
      intArray0[0] = 423;
      intArray0[1] = 1523;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.cellIntervals();
      assertEquals(0L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = 4137;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.cellDimension(0);
      assertEquals(4137, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.cellDimension(0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[6];
      intArray0[0] = (-2143709524);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.imgDimensions((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = 4147;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        cellGrid0.imgDimensions(longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709507);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.imgDimension((-2143709507));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2143709507 out of bounds for length 1
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[2];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.gridDimensions((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709524);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        cellGrid0.gridDimensions(longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[12];
      intArray0[0] = 1388;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        cellGrid0.getCellPosition(longArray1, longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellPosition(longArray0, (Positionable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = 31;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = new long[0];
      PointSample<Object> pointSample0 = PointSample.wrap((Object) cellGrid0, longArray1);
      // Undeclared exception!
      try { 
        cellGrid0.getCellPosition(longArray0, (Positionable) pointSample0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.PointSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellMin((-2143709510), (-2143709510));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2143709510 out of bounds for length 1
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[20];
      intArray0[0] = (-2143709474);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellInterval((long[]) null, longArray0, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        cellGrid0.getCellInterval(longArray0, longArray0, longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709506);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellGridPositionFlat((-2143709506), (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        cellGrid0.getCellGridPositionFlat((-2143709510), longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = 2147483642L;
      int[] intArray0 = new int[5];
      intArray0[0] = (-1073741823);
      intArray0[1] = (-4948);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellGridPositionFlat((-9), longArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.IntervalIndexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709524);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellDimensions(longArray0, longArray0, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709507);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        cellGrid0.getCellDimensions(longArray1, longArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[8];
      intArray0[0] = 2146754203;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        cellGrid0.getCellDimensions((long) 2146754203, longArray0, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[18];
      intArray0[0] = 1;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellDimensions((long) 1, longArray0, intArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellDimension((-2143709510), (-2143709510));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2143709510 out of bounds for length 1
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[18];
      intArray0[0] = 9;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.cellDimensions((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        cellGrid0.cellDimensions(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709512);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.cellDimension((-2143709512));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2143709512 out of bounds for length 1
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      long[] longArray0 = new long[1];
      CellGrid cellGrid0 = null;
      try {
        cellGrid0 = new CellGrid(longArray0, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      long[] longArray0 = new long[0];
      int[] intArray0 = new int[9];
      CellGrid cellGrid0 = null;
      try {
        cellGrid0 = new CellGrid(longArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.util.Intervals", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      CellGrid cellGrid0 = null;
      try {
        cellGrid0 = new CellGrid(longArray0, intArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CellGrid cellGrid0 = null;
      try {
        cellGrid0 = new CellGrid((CellGrid) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709511);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.getCellInterval(longArray0, longArray0, longArray0);
      assertArrayEquals(new long[] {(-1L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = (-2143709510);
      CellGrid cellGrid1 = new CellGrid(longArray0, intArray1);
      boolean boolean0 = cellGrid0.equals(cellGrid1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      boolean boolean0 = cellGrid0.equals(cellGrid0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      long[] longArray0 = new long[4];
      int[] intArray0 = new int[7];
      intArray0[0] = 2145382399;
      intArray0[1] = 2145382399;
      intArray0[2] = 2;
      intArray0[3] = 2;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      boolean boolean0 = cellGrid0.equals(0L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709512);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.getCellDimension(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-1173);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.getCellDimension(0, (-1173));
      assertEquals((-1173), int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[20];
      intArray0[0] = 1;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.getCellInterval(longArray0, longArray0, longArray0);
      assertArrayEquals(new long[] {0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.getCellDimensions(longArray0, longArray0, intArray0);
      assertArrayEquals(new long[] {0L}, longArray0);
      assertArrayEquals(new int[] {(-1), 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = 2139786600;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.getCellDimensions((long) 2139786600, (long[]) null, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[18];
      intArray0[0] = 4160;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.cellDimensions(intArray0);
      assertEquals(18, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[18];
      intArray0[0] = 4160;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.imgDimensions(longArray0);
      assertEquals(1, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = 4137;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.gridDimensions(longArray0);
      CellGrid cellGrid1 = new CellGrid(longArray0, intArray0);
      boolean boolean0 = cellGrid0.equals(cellGrid1);
      assertArrayEquals(new long[] {1L}, longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.cellIntervals();
      long long0 = cellGrid_CellIntervals0.size();
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709511);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.new CellIntervals();
      Cursor<Interval> cursor0 = cellGrid_CellIntervals0.localizingCursor();
      cellGrid_CellIntervals0.getAt((Localizable) cursor0);
      assertTrue(cursor0.hasNext());
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709474);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.cellIntervals();
      cellGrid_CellIntervals0.iterationOrder();
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.new CellIntervals();
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0, longArray0);
      cellGrid_CellIntervals0.randomAccess((Interval) finalInterval0);
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[9];
      intArray0[0] = (-2143709474);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid.CellIntervals cellGrid_CellIntervals0 = cellGrid0.new CellIntervals();
      cellGrid_CellIntervals0.firstElement();
      assertEquals(1L, cellGrid_CellIntervals0.size());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[18];
      intArray0[0] = 4160;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.cellDimension(2);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = cellGrid0.getImgDimensions();
      assertNotSame(longArray0, longArray1);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      long[] longArray0 = new long[8];
      int[] intArray0 = new int[8];
      intArray0[0] = (-2143709506);
      intArray0[1] = (-2143709506);
      intArray0[2] = (-2143709506);
      intArray0[3] = (-1);
      intArray0[4] = (-2143709506);
      intArray0[5] = (-2143709506);
      intArray0[6] = (-2143709506);
      intArray0[7] = (-2143709506);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.imgDimension(3);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[11];
      intArray0[0] = (-2143709512);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int[] intArray1 = cellGrid0.getCellDimensions();
      assertNotSame(intArray0, intArray1);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[12];
      intArray0[0] = (-2143709579);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      // Undeclared exception!
      try { 
        cellGrid0.gridDimension((-2143709579));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2143709579 out of bounds for length 1
         //
         verifyException("net.imglib2.img.cell.CellGrid", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709512);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      CellGrid cellGrid1 = new CellGrid(cellGrid0);
      assertEquals(1, cellGrid1.numDimensions());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[7];
      intArray0[0] = 2139786532;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long[] longArray1 = cellGrid0.getGridDimensions();
      assertArrayEquals(new long[] {1L}, longArray1);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709510);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      String string0 = cellGrid0.toString();
      assertEquals("CellGrid( dims = (0), cellDims = (-2143709510) )", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709512);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      cellGrid0.hashCode();
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      long[] longArray0 = new long[4];
      int[] intArray0 = new int[7];
      intArray0[0] = 2145382399;
      intArray0[1] = 2145382399;
      intArray0[2] = 2;
      intArray0[3] = 2;
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      long long0 = cellGrid0.getCellMin(0, 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (-2143709507);
      CellGrid cellGrid0 = new CellGrid(longArray0, intArray0);
      int int0 = cellGrid0.numDimensions();
      assertEquals(1, int0);
  }
}
