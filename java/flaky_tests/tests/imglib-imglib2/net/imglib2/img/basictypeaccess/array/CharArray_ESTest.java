/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:45:19 GMT 2022
 */

package net.imglib2.img.basictypeaccess.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.array.CharArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharArray_ESTest extends CharArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharArray charArray0 = new CharArray(2859);
      CharArray charArray1 = charArray0.createArray(0);
      assertEquals(0, charArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharArray charArray0 = new CharArray(2859);
      CharArray charArray1 = charArray0.createArray(176);
      assertEquals(176, charArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharArray charArray0 = null;
      try {
        charArray0 = new CharArray((-3622));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3622
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractCharArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArray charArray1 = new CharArray(charArray0);
      // Undeclared exception!
      try { 
        charArray1.createArray((-1292));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1292
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractCharArray", e);
      }
  }
}
