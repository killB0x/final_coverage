/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:00:04 GMT 2022
 */

package net.imglib2.img.basictypeaccess.volatiles.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileShortArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileShortArray_ESTest extends VolatileShortArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VolatileShortArray volatileShortArray0 = new VolatileShortArray(0, false);
      VolatileShortArray volatileShortArray1 = volatileShortArray0.createArray(0, true);
      assertTrue(volatileShortArray1.isValid());
      assertEquals(0, volatileShortArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VolatileShortArray volatileShortArray0 = new VolatileShortArray(0, false);
      VolatileShortArray volatileShortArray1 = volatileShortArray0.createArray(0, false);
      assertFalse(volatileShortArray1.isValid());
      assertEquals(0, volatileShortArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[0];
      VolatileShortArray volatileShortArray0 = new VolatileShortArray(shortArray0, true);
      // Undeclared exception!
      try { 
        volatileShortArray0.createArray((-2469), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2469
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VolatileShortArray volatileShortArray0 = null;
      try {
        volatileShortArray0 = new VolatileShortArray((-2485), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2485
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractShortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      VolatileShortArray volatileShortArray0 = new VolatileShortArray(1733, false);
      VolatileShortArray volatileShortArray1 = volatileShortArray0.createArray(1733, false);
      assertFalse(volatileShortArray1.isValid());
      assertEquals(1733, volatileShortArray1.getArrayLength());
  }
}
