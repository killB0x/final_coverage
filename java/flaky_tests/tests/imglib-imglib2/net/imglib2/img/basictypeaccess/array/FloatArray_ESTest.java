/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:55:23 GMT 2022
 */

package net.imglib2.img.basictypeaccess.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.array.FloatArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatArray_ESTest extends FloatArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[2];
      FloatArray floatArray1 = new FloatArray(floatArray0);
      FloatArray floatArray2 = floatArray1.createArray(0);
      assertEquals(0, floatArray2.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(3535);
      FloatArray floatArray1 = floatArray0.createArray(3535);
      assertEquals(3535, floatArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FloatArray floatArray0 = null;
      try {
        floatArray0 = new FloatArray((-985));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -985
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(15);
      // Undeclared exception!
      try { 
        floatArray0.createArray((-2894));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2894
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }
}
