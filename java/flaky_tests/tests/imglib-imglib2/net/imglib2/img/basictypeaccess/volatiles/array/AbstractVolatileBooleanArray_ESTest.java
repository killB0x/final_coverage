/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:28:50 GMT 2022
 */

package net.imglib2.img.basictypeaccess.volatiles.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileBooleanArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractVolatileBooleanArray_ESTest extends AbstractVolatileBooleanArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[2];
      VolatileBooleanArray volatileBooleanArray0 = new VolatileBooleanArray(booleanArray0, false);
      boolean boolean0 = volatileBooleanArray0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      VolatileBooleanArray volatileBooleanArray0 = new VolatileBooleanArray(booleanArray0, true);
      VolatileBooleanArray volatileBooleanArray1 = volatileBooleanArray0.createArray(3882);
      assertTrue(volatileBooleanArray0.isValid());
      assertEquals(3882, volatileBooleanArray1.getArrayLength());
      assertTrue(volatileBooleanArray1.isValid());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      VolatileBooleanArray volatileBooleanArray0 = new VolatileBooleanArray(booleanArray0, false);
      // Undeclared exception!
      try { 
        volatileBooleanArray0.createArray((-336));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -336
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractBooleanArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VolatileBooleanArray volatileBooleanArray0 = new VolatileBooleanArray(0, true);
      boolean boolean0 = volatileBooleanArray0.isValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      VolatileBooleanArray volatileBooleanArray0 = new VolatileBooleanArray(0, false);
      VolatileBooleanArray volatileBooleanArray1 = volatileBooleanArray0.createArray(0);
      assertEquals(0, volatileBooleanArray1.getArrayLength());
      assertTrue(volatileBooleanArray1.isValid());
  }
}
