/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:40:56 GMT 2022
 */

package net.imglib2.img.basictypeaccess.volatiles.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileCharArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileCharArray_ESTest extends VolatileCharArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[7];
      VolatileCharArray volatileCharArray0 = new VolatileCharArray(charArray0, false);
      VolatileCharArray volatileCharArray1 = volatileCharArray0.createArray(0, true);
      assertTrue(volatileCharArray1.isValid());
      assertEquals(0, volatileCharArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[7];
      VolatileCharArray volatileCharArray0 = new VolatileCharArray(charArray0, false);
      VolatileCharArray volatileCharArray1 = volatileCharArray0.createArray(1, false);
      assertFalse(volatileCharArray1.isValid());
      assertEquals(1, volatileCharArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VolatileCharArray volatileCharArray0 = new VolatileCharArray(2218, true);
      // Undeclared exception!
      try { 
        volatileCharArray0.createArray((-654), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -654
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractCharArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VolatileCharArray volatileCharArray0 = null;
      try {
        volatileCharArray0 = new VolatileCharArray((-866), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -866
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractCharArray", e);
      }
  }
}
