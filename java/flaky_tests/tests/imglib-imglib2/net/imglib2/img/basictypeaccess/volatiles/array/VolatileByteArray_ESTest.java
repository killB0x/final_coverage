/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:05:48 GMT 2022
 */

package net.imglib2.img.basictypeaccess.volatiles.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileByteArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileByteArray_ESTest extends VolatileByteArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VolatileByteArray volatileByteArray0 = new VolatileByteArray(1461, true);
      VolatileByteArray volatileByteArray1 = volatileByteArray0.createArray(0, false);
      assertEquals(0, volatileByteArray1.getArrayLength());
      assertFalse(volatileByteArray1.isValid());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VolatileByteArray volatileByteArray0 = new VolatileByteArray(1, true);
      VolatileByteArray volatileByteArray1 = volatileByteArray0.createArray(1, true);
      assertTrue(volatileByteArray1.isValid());
      assertEquals(1, volatileByteArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VolatileByteArray volatileByteArray0 = null;
      try {
        volatileByteArray0 = new VolatileByteArray((-1404), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1404
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VolatileByteArray volatileByteArray0 = new VolatileByteArray((byte[]) null, false);
      // Undeclared exception!
      try { 
        volatileByteArray0.createArray((-1383), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1383
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractByteArray", e);
      }
  }
}
