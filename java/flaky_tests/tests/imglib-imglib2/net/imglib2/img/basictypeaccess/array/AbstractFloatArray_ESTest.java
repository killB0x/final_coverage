/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:48:21 GMT 2022
 */

package net.imglib2.img.basictypeaccess.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.array.DirtyFloatArray;
import net.imglib2.img.basictypeaccess.array.FloatArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractFloatArray_ESTest extends AbstractFloatArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float[] floatArray0 = new float[9];
      FloatArray floatArray1 = new FloatArray(floatArray0);
      floatArray1.setValue(0, 0.0F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      float[] floatArray0 = new float[7];
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(floatArray0);
      float float0 = dirtyFloatArray0.getValue(1);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = 2314.687F;
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(floatArray0);
      float float0 = dirtyFloatArray0.getValue(0);
      assertEquals(2314.687F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(1);
      dirtyFloatArray0.setValue(0, (-1711.9F));
      dirtyFloatArray0.getValue(0);
      assertEquals(1, dirtyFloatArray0.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      float[] floatArray0 = new float[3];
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(floatArray0);
      float[] floatArray1 = dirtyFloatArray0.getCurrentStorageArray();
      assertEquals(3, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(0);
      float[] floatArray0 = dirtyFloatArray0.getCurrentStorageArray();
      assertEquals(0, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(0);
      int int0 = dirtyFloatArray0.getArrayLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray((float[]) null);
      DirtyFloatArray dirtyFloatArray1 = dirtyFloatArray0.createArray(3066);
      int int0 = dirtyFloatArray1.getArrayLength();
      assertEquals(3066, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray((float[]) null);
      // Undeclared exception!
      try { 
        dirtyFloatArray0.setValue(4478, 4478);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.array.DirtyFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray((float[]) null);
      // Undeclared exception!
      try { 
        dirtyFloatArray0.getValue(47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(0);
      // Undeclared exception!
      try { 
        floatArray0.setValue(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(0);
      // Undeclared exception!
      try { 
        dirtyFloatArray0.getValue(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray((float[]) null);
      // Undeclared exception!
      try { 
        dirtyFloatArray0.getArrayLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray((float[]) null);
      float[] floatArray0 = dirtyFloatArray0.getCurrentStorageArray();
      assertNull(floatArray0);
  }
}
