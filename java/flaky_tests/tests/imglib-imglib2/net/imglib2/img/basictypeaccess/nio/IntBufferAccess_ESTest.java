/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:30:02 GMT 2022
 */

package net.imglib2.img.basictypeaccess.nio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntBufferAccess_ESTest extends IntBufferAccess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      IntBufferAccess intBufferAccess1 = intBufferAccess0.allocate(3545, true, false);
      assertFalse(intBufferAccess1.isValid());
      assertTrue(intBufferAccess1.isDirect());
      assertEquals(4, intBufferAccess0.getNumBytesPerEntity());
      assertEquals(3545, intBufferAccess1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1522);
      IntBuffer intBuffer0 = byteBuffer0.asIntBuffer();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(intBuffer0);
      IntBuffer intBuffer1 = intBufferAccess0.setValues(intBufferAccess0);
      assertEquals(380, intBuffer1.position());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0);
      int[] intArray0 = new int[6];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      IntBuffer intBuffer1 = intBufferAccess0.duplicateBuffer(intBuffer0);
      assertNotSame(intBuffer1, intBuffer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(4312, false);
      intBufferAccess0.setValue(0, (-4825));
      assertFalse(intBufferAccess0.isDirect());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1522);
      IntBuffer intBuffer0 = byteBuffer0.asIntBuffer();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(intBuffer0);
      IntBufferAccess intBufferAccess1 = intBufferAccess0.newInstance(intBuffer0, true);
      assertTrue(intBufferAccess1.isValid());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess((IntBuffer) null, true);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3864);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      IntBufferAccess intBufferAccess1 = intBufferAccess0.newInstance(byteBuffer1, true);
      assertTrue(intBufferAccess1.isValid());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(byteBuffer0, false);
      IntBufferAccess intBufferAccess1 = intBufferAccess0.newInstance(byteBuffer0, false);
      assertFalse(intBufferAccess1.isValid());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1522);
      IntBuffer intBuffer0 = byteBuffer0.asIntBuffer();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(intBuffer0);
      int int0 = intBufferAccess0.getValue(1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0, 1, 1);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(intBuffer0, true);
      int int0 = intBufferAccess0.getValue(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-1517);
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(intBuffer0);
      int int0 = intBufferAccess0.getValue(0);
      assertEquals((-1517), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1761);
      IntBufferAccess intBufferAccess0 = IntBufferAccess.fromByteBuffer(byteBuffer0, false);
      assertFalse(intBufferAccess0.isValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(4312, false);
      IntBufferAccess intBufferAccess1 = intBufferAccess0.allocate(2030, false, false);
      assertFalse(intBufferAccess1.isValid());
      assertEquals(2030, intBufferAccess1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      IntBufferAccess intBufferAccess0 = IntBufferAccess.fromByteBuffer(byteBuffer0, true);
      IntBufferAccess intBufferAccess1 = intBufferAccess0.allocate(0, false, true);
      assertTrue(intBufferAccess0.isValid());
      assertEquals(0, intBufferAccess1.getArrayLength());
      assertTrue(intBufferAccess1.isValid());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      IntBufferAccess intBufferAccess0 = IntBufferAccess.fromByteBuffer(byteBuffer0, false);
      IntBufferAccess intBufferAccess1 = new IntBufferAccess(1, false);
      // Undeclared exception!
      try { 
        intBufferAccess0.setValues(intBufferAccess1);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.IntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      // Undeclared exception!
      try { 
        intBufferAccess0.setValue(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      // Undeclared exception!
      try { 
        intBufferAccess0.allocate((-3497), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-3497 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = null;
      try {
        intBufferAccess0 = new IntBufferAccess((ByteBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = null;
      try {
        intBufferAccess0 = new IntBufferAccess((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = null;
      try {
        intBufferAccess0 = new IntBufferAccess((-42), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-42 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = null;
      try {
        intBufferAccess0 = new IntBufferAccess((-42));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-42 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      int int0 = intBufferAccess0.getNumBytesPerEntity();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        IntBufferAccess.fromByteBuffer((ByteBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      // Undeclared exception!
      try { 
        intBufferAccess0.newInstance((ByteBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess((IntBuffer) null, true);
      // Undeclared exception!
      try { 
        intBufferAccess0.setValues(intBufferAccess0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess((IntBuffer) null);
      IntBufferAccess intBufferAccess1 = intBufferAccess0.newInstance((IntBuffer) null, false);
      assertFalse(intBufferAccess1.isValid());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(0);
      // Undeclared exception!
      try { 
        intBufferAccess0.setValue(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      // Undeclared exception!
      try { 
        intBufferAccess0.getValue(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess(1);
      // Undeclared exception!
      try { 
        intBufferAccess0.getValue(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.nio.HeapIntBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      // Undeclared exception!
      try { 
        intBufferAccess0.duplicateBuffer((IntBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }
}
