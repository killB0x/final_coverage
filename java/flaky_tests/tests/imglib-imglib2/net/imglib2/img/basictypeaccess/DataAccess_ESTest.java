/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:22:37 GMT 2022
 */

package net.imglib2.img.basictypeaccess;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.DataAccess;
import net.imglib2.img.basictypeaccess.array.DirtyFloatArray;
import net.imglib2.img.basictypeaccess.nio.IntBufferAccess;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataAccess_ESTest extends DataAccess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      IntBufferAccess intBufferAccess0 = new IntBufferAccess();
      // Undeclared exception!
      try { 
        intBufferAccess0.createView(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.basictypeaccess.nio.IntBufferAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      float[] floatArray0 = new float[3];
      DirtyFloatArray dirtyFloatArray0 = new DirtyFloatArray(floatArray0);
      DataAccess dataAccess0 = dirtyFloatArray0.createView(dirtyFloatArray0);
      assertSame(dirtyFloatArray0, dataAccess0);
  }
}
