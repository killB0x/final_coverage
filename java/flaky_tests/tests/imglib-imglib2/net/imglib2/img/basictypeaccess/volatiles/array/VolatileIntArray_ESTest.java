/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:39:34 GMT 2022
 */

package net.imglib2.img.basictypeaccess.volatiles.array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileIntArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VolatileIntArray_ESTest extends VolatileIntArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, false);
      VolatileIntArray volatileIntArray1 = volatileIntArray0.createArray(1);
      assertEquals(1, volatileIntArray1.getArrayLength());
      assertTrue(volatileIntArray1.isValid());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, false);
      VolatileIntArray volatileIntArray1 = volatileIntArray0.createArray(1, false);
      assertFalse(volatileIntArray1.isValid());
      assertEquals(1, volatileIntArray1.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(794, true);
      // Undeclared exception!
      try { 
        volatileIntArray0.createArray((-337), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -337
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = null;
      try {
        volatileIntArray0 = new VolatileIntArray((-9), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -9
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractIntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray((int[]) null, false);
      assertFalse(volatileIntArray0.isValid());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      VolatileIntArray volatileIntArray0 = new VolatileIntArray(0, true);
      VolatileIntArray volatileIntArray1 = volatileIntArray0.createArray(0, true);
      assertTrue(volatileIntArray1.isValid());
      assertEquals(0, volatileIntArray1.getArrayLength());
  }
}
