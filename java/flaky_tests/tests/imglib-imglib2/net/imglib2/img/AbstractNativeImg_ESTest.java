/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:27:42 GMT 2022
 */

package net.imglib2.img;

import org.junit.Test;
import static org.junit.Assert.*;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileLongArray;
import net.imglib2.img.sparse.DoubleNtree;
import net.imglib2.img.sparse.IntNtree;
import net.imglib2.img.sparse.NtreeImg;
import net.imglib2.type.numeric.integer.Unsigned128BitType;
import net.imglib2.type.numeric.integer.UnsignedByteType;
import net.imglib2.type.volatiles.VolatileFloatType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractNativeImg_ESTest extends AbstractNativeImg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = 1L;
      longArray0[1] = 1L;
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(1);
      Fraction fraction0 = unsignedByteType0.getEntitiesPerPixel();
      NtreeImg<VolatileFloatType, IntNtree> ntreeImg0 = new NtreeImg<VolatileFloatType, IntNtree>((IntNtree) null, longArray0, fraction0);
      assertEquals(2, ntreeImg0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[2];
      UnsignedByteType unsignedByteType0 = new UnsignedByteType(1);
      Fraction fraction0 = unsignedByteType0.getEntitiesPerPixel();
      NtreeImg<VolatileFloatType, IntNtree> ntreeImg0 = new NtreeImg<VolatileFloatType, IntNtree>((IntNtree) null, longArray0, fraction0);
      VolatileFloatType volatileFloatType0 = ntreeImg0.createLinkedType();
      assertNull(volatileFloatType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[6];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, (-436.0));
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(longArray0, true);
      Unsigned128BitType unsigned128BitType0 = new Unsigned128BitType(dirtyVolatileLongArray0);
      Fraction fraction0 = unsigned128BitType0.getEntitiesPerPixel();
      NtreeImg<VolatileFloatType, DoubleNtree> ntreeImg0 = new NtreeImg<VolatileFloatType, DoubleNtree>(doubleNtree0, longArray0, fraction0);
      VolatileFloatType volatileFloatType0 = new VolatileFloatType();
      ntreeImg0.setLinkedType(volatileFloatType0);
      assertEquals(6, ntreeImg0.numDimensions());
  }
}
