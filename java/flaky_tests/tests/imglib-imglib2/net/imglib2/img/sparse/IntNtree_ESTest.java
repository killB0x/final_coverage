/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:38:09 GMT 2022
 */

package net.imglib2.img.sparse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.sparse.IntNtree;
import net.imglib2.img.sparse.Ntree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntNtree_ESTest extends IntNtree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[1];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, 2);
      int int0 = intNtree0.getValue(2);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[8];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, (-1626));
      int int0 = intNtree0.getValue((-1336));
      assertEquals((-1626), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[1];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, 2);
      // Undeclared exception!
      intNtree0.setValue(977, 977);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[30];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, 0);
      // Undeclared exception!
      intNtree0.setValue(0, 190);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[3];
      IntNtree intNtree0 = new IntNtree(longArray0, (long[]) null, (-33));
      // Undeclared exception!
      try { 
        intNtree0.setValue(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[1];
      long[] longArray1 = new long[0];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray1, 126);
      // Undeclared exception!
      try { 
        intNtree0.setValue(126, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[1] = 196L;
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, 0);
      intNtree0.setValue(759, 759);
      IntNtree intNtree1 = intNtree0.createInstance((long[]) null);
      // Undeclared exception!
      try { 
        intNtree1.getValue(759);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IntNtree intNtree0 = null;
      try {
        intNtree0 = new IntNtree((long[]) null, (long[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[8];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, (-1626));
      Ntree<Integer> ntree0 = intNtree0.getCurrentStorageNtree();
      assertNotNull(ntree0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[2];
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, 0);
      int int0 = intNtree0.getValue(759);
      assertEquals(0, int0);
  }
}
