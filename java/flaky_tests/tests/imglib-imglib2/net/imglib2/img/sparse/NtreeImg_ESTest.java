/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:44:10 GMT 2022
 */

package net.imglib2.img.sparse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.FlatIterationOrder;
import net.imglib2.img.ImgFactory;
import net.imglib2.img.sparse.BooleanNtree;
import net.imglib2.img.sparse.ByteNtree;
import net.imglib2.img.sparse.CharNtree;
import net.imglib2.img.sparse.IntNtree;
import net.imglib2.img.sparse.LongNtree;
import net.imglib2.img.sparse.NtreeImg;
import net.imglib2.img.sparse.ShortNtree;
import net.imglib2.type.label.BasePairBitType;
import net.imglib2.type.numeric.ARGBType;
import net.imglib2.type.numeric.NativeARGBDoubleType;
import net.imglib2.type.numeric.integer.ShortType;
import net.imglib2.type.numeric.real.DoubleType;
import net.imglib2.type.numeric.real.FloatType;
import net.imglib2.util.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NtreeImg_ESTest extends NtreeImg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[19];
      Fraction fraction0 = new Fraction();
      IntNtree intNtree0 = new IntNtree(longArray0, longArray0, (-137));
      NtreeImg<NativeARGBDoubleType, IntNtree> ntreeImg0 = new NtreeImg<NativeARGBDoubleType, IntNtree>(intNtree0, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.update(intNtree0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.imglib2.img.sparse.IntNtree cannot be cast to class net.imglib2.img.sparse.NtreeImg$PositionProvider (net.imglib2.img.sparse.IntNtree and net.imglib2.img.sparse.NtreeImg$PositionProvider are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5b09df34)
         //
         verifyException("net.imglib2.img.sparse.NtreeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[1];
      Fraction fraction0 = new Fraction();
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.localizingCursor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.NtreeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[3];
      Fraction fraction0 = new Fraction();
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.cursor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.NtreeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[8];
      Fraction fraction0 = new Fraction();
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, fraction0);
      ARGBType aRGBType0 = new ARGBType();
      ntreeImg0.setLinkedType(aRGBType0);
      // Undeclared exception!
      try { 
        ntreeImg0.copy();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected only positive dimensions but got: [0, 0, 0, 0, 0, 0, 0, 0]
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[0];
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = null;
      try {
        ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, (Fraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.AbstractNativeImg", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[1];
      Fraction fraction0 = new Fraction(1650L, 0L);
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = null;
      try {
        ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, fraction0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("net.imglib2.util.Fraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[1];
      BooleanNtree booleanNtree0 = new BooleanNtree(longArray0, longArray0, true);
      DoubleType doubleType0 = new DoubleType(3756.24841994);
      Fraction fraction0 = doubleType0.getEntitiesPerPixel();
      NtreeImg<ShortType, BooleanNtree> ntreeImg0 = new NtreeImg<ShortType, BooleanNtree>(booleanNtree0, longArray0, fraction0);
      ImgFactory<ShortType> imgFactory0 = ntreeImg0.factory();
      assertNotNull(imgFactory0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[0];
      Fraction fraction0 = new Fraction();
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.cursor();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.iterator.IntervalIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[1];
      Fraction fraction0 = new Fraction();
      LongNtree longNtree0 = new LongNtree(longArray0, longArray0, (byte) (-35));
      NtreeImg<FloatType, LongNtree> ntreeImg0 = new NtreeImg<FloatType, LongNtree>(longNtree0, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.randomAccess();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.NtreeRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[7];
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(0.0, (-2829L), 1.7976931348623157E308, 0.0);
      Fraction fraction0 = nativeARGBDoubleType0.getEntitiesPerPixel();
      ShortNtree shortNtree0 = new ShortNtree(longArray0, longArray0, (short) (-588));
      NtreeImg<ShortType, ShortNtree> ntreeImg0 = new NtreeImg<ShortType, ShortNtree>(shortNtree0, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.NtreeImgFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[0];
      Fraction fraction0 = new Fraction();
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.localizingCursor();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.iterator.IntervalIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[7];
      CharNtree charNtree0 = new CharNtree(longArray0, longArray0, '!');
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType(0.0, (-2829L), 1.7976931348623157E308, 0.0);
      Fraction fraction0 = nativeARGBDoubleType0.getEntitiesPerPixel();
      NtreeImg<BasePairBitType, CharNtree> ntreeImg0 = new NtreeImg<BasePairBitType, CharNtree>(charNtree0, longArray0, fraction0);
      FlatIterationOrder flatIterationOrder0 = ntreeImg0.iterationOrder();
      assertNotNull(flatIterationOrder0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[0];
      Fraction fraction0 = new Fraction();
      NtreeImg<ARGBType, ByteNtree> ntreeImg0 = new NtreeImg<ARGBType, ByteNtree>((ByteNtree) null, longArray0, fraction0);
      // Undeclared exception!
      try { 
        ntreeImg0.update(fraction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.NtreeImg", e);
      }
  }
}
