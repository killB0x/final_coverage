/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:44:07 GMT 2022
 */

package net.imglib2.img.sparse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.sparse.CharNtree;
import net.imglib2.img.sparse.Ntree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharNtree_ESTest extends CharNtree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[9];
      CharNtree charNtree0 = new CharNtree(longArray0, (long[]) null, '^');
      char char0 = charNtree0.getValue(0);
      assertEquals('^', char0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 1633L;
      CharNtree charNtree0 = new CharNtree(longArray0, longArray0, 'd');
      charNtree0.setValue('d', '7');
      char char0 = charNtree0.getValue('d');
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[1];
      CharNtree charNtree0 = new CharNtree(longArray0, longArray0, 't');
      // Undeclared exception!
      charNtree0.setValue((-35), 'A');
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[3];
      CharNtree charNtree0 = new CharNtree(longArray0, (long[]) null, 'A');
      // Undeclared exception!
      try { 
        charNtree0.setValue(0, 'L');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[2];
      long[] longArray1 = new long[0];
      CharNtree charNtree0 = new CharNtree(longArray0, longArray1, 'r');
      // Undeclared exception!
      try { 
        charNtree0.setValue(0, '|');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[0] = 372L;
      CharNtree charNtree0 = new CharNtree(longArray0, longArray0, 'd');
      charNtree0.setValue(0, 'r');
      CharNtree charNtree1 = charNtree0.createInstance((long[]) null);
      // Undeclared exception!
      try { 
        charNtree1.getValue('r');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharNtree charNtree0 = null;
      try {
        charNtree0 = new CharNtree((long[]) null, (long[]) null, '6');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[8];
      CharNtree charNtree0 = new CharNtree(longArray0, longArray0, 'd');
      char char0 = charNtree0.getValue('d');
      assertEquals('d', char0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[8];
      CharNtree charNtree0 = new CharNtree(longArray0, longArray0, 'd');
      Ntree<Character> ntree0 = charNtree0.getCurrentStorageNtree();
      assertNotNull(ntree0);
  }
}
