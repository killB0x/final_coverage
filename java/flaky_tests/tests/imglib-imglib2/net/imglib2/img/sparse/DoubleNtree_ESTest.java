/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:10:17 GMT 2022
 */

package net.imglib2.img.sparse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.img.sparse.DoubleNtree;
import net.imglib2.img.sparse.Ntree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleNtree_ESTest extends DoubleNtree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[2] = 1L;
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 1.0);
      doubleNtree0.setValue((-1231), 0.0);
      double double0 = doubleNtree0.getValue((-477));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[2] = 1L;
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 1.0);
      doubleNtree0.setValue(369, (-562.508494));
      double double0 = doubleNtree0.getValue(0);
      assertEquals((-562.508494), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[5];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, (long[]) null, (-33.54323906078136));
      // Undeclared exception!
      try { 
        doubleNtree0.setValue(0, 726.3369544692);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[6];
      long[] longArray1 = new long[1];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray1, 0L);
      // Undeclared exception!
      try { 
        doubleNtree0.setValue(488, 488);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 2199L;
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 2199L);
      doubleNtree0.setValue(565, (-1.0));
      long[] longArray1 = new long[2];
      DoubleNtree doubleNtree1 = doubleNtree0.createInstance(longArray1);
      // Undeclared exception!
      try { 
        doubleNtree1.getValue(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DoubleNtree doubleNtree0 = null;
      try {
        doubleNtree0 = new DoubleNtree((long[]) null, (long[]) null, (-2701.505148377395));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.img.sparse.Ntree", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[3];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 1.0);
      double double0 = doubleNtree0.getValue(0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[3];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 1.0);
      Ntree<Double> ntree0 = doubleNtree0.getCurrentStorageNtree();
      assertNotNull(ntree0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[8];
      DoubleNtree doubleNtree0 = new DoubleNtree(longArray0, longArray0, 2199L);
      // Undeclared exception!
      doubleNtree0.setValue(565, (-1.0));
  }
}
