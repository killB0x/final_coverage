/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:40:38 GMT 2022
 */

package net.imglib2.position.transform;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.Localizable;
import net.imglib2.Point;
import net.imglib2.PointSampleList;
import net.imglib2.Positionable;
import net.imglib2.RealPointSample;
import net.imglib2.position.transform.Floor;
import net.imglib2.position.transform.FloorOffset;
import net.imglib2.position.transform.Round;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractPositionableTransform_ESTest extends AbstractPositionableTransform_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(1);
      Point point0 = pointSampleList0.maxAsPoint();
      long[] longArray0 = new long[3];
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, longArray0);
      Point point1 = new Point(point0);
      floorOffset0.setPosition((Localizable) point1);
      assertEquals(1, floorOffset0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(17);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      long[] longArray0 = pointSampleList0.dimensionsAsLongArray();
      Round<Point> round0 = new Round<Point>(point0);
      round0.move(longArray0);
      assertEquals(17, round0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(17);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0, point0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      // Undeclared exception!
      try { 
        floorOffset0.move(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 7 out of bounds for length 7
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(0);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      long[] longArray0 = pointSampleList0.dimensionsAsLongArray();
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0, point0);
      Point point1 = Point.wrap(longArray0);
      Round<Point> round0 = new Round<Point>(floorOffset0, point1);
      round0.move((Localizable) point0);
      assertTrue(point0.equals((Object)point1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(1892);
      Point point0 = pointSampleList0.maxAsPoint();
      Floor<Point> floor0 = new Floor<Point>(point0);
      double[] doubleArray0 = new double[0];
      floor0.localize(doubleArray0);
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(1940);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      Round<Point> round0 = new Round<Point>(point0);
      round0.setPosition((long) 1940, 1209);
      assertEquals(1940, round0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[5];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      Round<Point> round0 = new Round<Point>(floor0, point0);
      round0.setPosition(5, 1);
      assertArrayEquals(new long[] {0L, 5L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(17);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0, point0);
      floorOffset0.move(2557, 1);
      assertEquals(17, floorOffset0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Point point0 = new Point(17);
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0, point0);
      floorOffset0.fwd(10);
      assertEquals(17, floorOffset0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[5];
      Point point0 = Point.wrap(longArray0);
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0);
      floorOffset0.bck(1);
      assertArrayEquals(new long[] {0L, (-1L), 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(6);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      Round<Point> round0 = new Round<Point>(point0);
      Floor<Point> floor0 = new Floor<Point>(round0, point0);
      float float0 = floor0.getFloatPosition(2);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[5];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      int[] intArray0 = new int[7];
      intArray0[1] = 1;
      floor0.setPosition(intArray0);
      float float0 = floor0.getFloatPosition(1);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(6);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      Round<Point> round0 = new Round<Point>(point0);
      Floor<Point> floor0 = new Floor<Point>(round0, point0);
      pointSampleList0.max((Positionable) round0);
      floor0.move((Localizable) point0);
      float float0 = floor0.getFloatPosition(2);
      assertEquals((-9.223372E18F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = (-1);
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      floor0.move((Localizable) point0);
      double double0 = floor0.getDoublePosition(1);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[0];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[6];
      Point point0 = Point.wrap(longArray0);
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0, longArray0);
      // Undeclared exception!
      try { 
        floorOffset0.setPosition((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[1];
      Point point0 = new Point(intArray0);
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        floorOffset0.setPosition(longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[6];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.setPosition((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[2];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        floor0.setPosition(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[6];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.setPosition((Localizable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      long[] longArray0 = new long[18];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      int[] intArray0 = new int[1];
      Point point1 = new Point(intArray0);
      // Undeclared exception!
      try { 
        floor0.setPosition((Localizable) point1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[1];
      Point point0 = new Point(intArray0);
      Round<Point> round0 = new Round<Point>(point0);
      // Undeclared exception!
      try { 
        round0.move((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long[] longArray0 = new long[6];
      Point point0 = Point.wrap(longArray0);
      Round<Point> round0 = new Round<Point>(point0);
      long[] longArray1 = new long[0];
      // Undeclared exception!
      try { 
        round0.move(longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      long[] longArray0 = new long[4];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.move((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[7];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.move((Localizable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      long[] longArray0 = new long[4];
      Point point0 = Point.wrap(longArray0);
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(5);
      Point point1 = pointSampleList0.maxAsPoint();
      Floor<Point> floor0 = new Floor<Point>(point1);
      // Undeclared exception!
      try { 
        floor0.move((Localizable) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("net.imglib2.AbstractLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[4];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.move(688L, 866);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 866 out of bounds for length 4
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      long[] longArray0 = new long[5];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0, point0);
      // Undeclared exception!
      try { 
        floor0.localize((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      long[] longArray0 = new long[5];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      float[] floatArray0 = new float[20];
      // Undeclared exception!
      try { 
        floor0.localize(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[4];
      Point point0 = Point.wrap(longArray0);
      Round<Point> round0 = new Round<Point>(point0);
      // Undeclared exception!
      try { 
        round0.localize((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[0];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        floor0.localize(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long[] longArray0 = new long[6];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.getDoublePosition(28);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 28 out of bounds for length 6
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[4];
      Point point0 = Point.wrap(longArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      String string0 = floor0.toString();
      assertEquals("(0.0, 0.0, 0.0, 0.0)", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      long[] longArray0 = new long[4];
      Point point0 = Point.wrap(longArray0);
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0);
      floorOffset0.setPosition(longArray0);
      assertEquals(4, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[1];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      floor0.move(intArray0);
      assertEquals(1, floor0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[1];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      float[] floatArray0 = new float[1];
      floor0.localize(floatArray0);
      assertEquals(1, floor0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(1);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0);
      // Undeclared exception!
      try { 
        floorOffset0.bck(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[4];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      double double0 = floor0.getDoublePosition(1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PointSampleList<RealPointSample<Point>> pointSampleList0 = new PointSampleList<RealPointSample<Point>>(17);
      Point point0 = pointSampleList0.dimensionsAsPoint();
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.fwd(17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 17 out of bounds for length 17
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Point point0 = new Point(1139);
      Round<Point> round0 = new Round<Point>(point0);
      // Undeclared exception!
      try { 
        round0.setPosition((long) 1139, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1139
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(836);
      Point point0 = pointSampleList0.maxAsPoint();
      FloorOffset<Point> floorOffset0 = new FloorOffset<Point>(point0, point0);
      // Undeclared exception!
      try { 
        floorOffset0.setPosition(8, 836);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 836 out of bounds for length 836
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(8);
      Point point0 = pointSampleList0.maxAsPoint();
      Floor<Point> floor0 = new Floor<Point>(point0);
      floor0.move((long) 8, 0);
      assertEquals(8, floor0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int[] intArray0 = new int[1];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.move(1812, 1139);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1139 out of bounds for length 1
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int[] intArray0 = new int[0];
      Point point0 = new Point(intArray0);
      Floor<Point> floor0 = new Floor<Point>(point0);
      // Undeclared exception!
      try { 
        floor0.getFloatPosition(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.position.transform.AbstractPositionableTransform", e);
      }
  }
}
