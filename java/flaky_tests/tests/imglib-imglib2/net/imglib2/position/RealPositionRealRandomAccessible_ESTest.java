/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:50:28 GMT 2022
 */

package net.imglib2.position;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.FinalInterval;
import net.imglib2.RealInterval;
import net.imglib2.RealLocalizable;
import net.imglib2.position.RealPositionRealRandomAccessible;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RealPositionRealRandomAccessible_ESTest extends RealPositionRealRandomAccessible_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(4128, 31);
      RealPositionRealRandomAccessible.RealPositionRealRandomAccess realPositionRealRandomAccessible_RealPositionRealRandomAccess0 = realPositionRealRandomAccessible0.realRandomAccess();
      realPositionRealRandomAccessible0.getAt((RealLocalizable) realPositionRealRandomAccessible_RealPositionRealRandomAccess0);
      assertEquals(4128, realPositionRealRandomAccessible_RealPositionRealRandomAccess0.numDimensions());
      assertEquals(4128, realPositionRealRandomAccessible0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(0, 0);
      long[] longArray0 = new long[7];
      FinalInterval finalInterval0 = new FinalInterval(longArray0, longArray0);
      RealPositionRealRandomAccessible.RealPositionRealRandomAccess realPositionRealRandomAccessible_RealPositionRealRandomAccess0 = realPositionRealRandomAccessible0.realRandomAccess((RealInterval) finalInterval0);
      assertEquals(0, realPositionRealRandomAccessible_RealPositionRealRandomAccess0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(1, 8);
      long[] longArray0 = new long[0];
      FinalInterval finalInterval0 = new FinalInterval(longArray0);
      realPositionRealRandomAccessible0.realRandomAccess((RealInterval) finalInterval0);
      assertEquals(1, realPositionRealRandomAccessible0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(0, 0);
      int int0 = realPositionRealRandomAccessible0.numDimensions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(1, 8);
      int int0 = realPositionRealRandomAccessible0.numDimensions();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(2147483639, 2147483639);
      // Undeclared exception!
      realPositionRealRandomAccessible0.realRandomAccess((RealInterval) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(Integer.MAX_VALUE, Integer.MAX_VALUE);
      // Undeclared exception!
      realPositionRealRandomAccessible0.realRandomAccess();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible((-1343), (-1343));
      // Undeclared exception!
      try { 
        realPositionRealRandomAccessible0.realRandomAccess();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1343
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible((-1497), 92);
      int int0 = realPositionRealRandomAccessible0.numDimensions();
      assertEquals((-1497), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible((-1343), (-1343));
      // Undeclared exception!
      try { 
        realPositionRealRandomAccessible0.realRandomAccess((RealInterval) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1343
         //
         verifyException("net.imglib2.AbstractRealLocalizable", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(96, 96);
      RealPositionRealRandomAccessible.RealPositionRealRandomAccess realPositionRealRandomAccessible_RealPositionRealRandomAccess0 = realPositionRealRandomAccessible0.realRandomAccess();
      // Undeclared exception!
      try { 
        realPositionRealRandomAccessible_RealPositionRealRandomAccess0.get();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 96 out of bounds for length 96
         //
         verifyException("net.imglib2.position.RealPositionRealRandomAccessible$RealPositionRealRandomAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(0, 0);
      RealPositionRealRandomAccessible.RealPositionRealRandomAccess realPositionRealRandomAccessible_RealPositionRealRandomAccess0 = realPositionRealRandomAccessible0.new RealPositionRealRandomAccess();
      RealPositionRealRandomAccessible.RealPositionRealRandomAccess realPositionRealRandomAccessible_RealPositionRealRandomAccess1 = realPositionRealRandomAccessible_RealPositionRealRandomAccess0.copy();
      assertEquals(0, realPositionRealRandomAccessible_RealPositionRealRandomAccess1.numDimensions());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RealPositionRealRandomAccessible realPositionRealRandomAccessible0 = new RealPositionRealRandomAccessible(0, 0);
      realPositionRealRandomAccessible0.realRandomAccess();
      assertEquals(0, realPositionRealRandomAccessible0.numDimensions());
  }
}
