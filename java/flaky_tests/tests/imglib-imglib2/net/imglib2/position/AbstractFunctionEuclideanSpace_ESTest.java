/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:19:10 GMT 2022
 */

package net.imglib2.position;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.function.BiConsumer;
import java.util.function.Supplier;
import net.imglib2.Localizable;
import net.imglib2.RealLocalizable;
import net.imglib2.position.FunctionRandomAccessible;
import net.imglib2.position.FunctionRealRandomAccessible;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractFunctionEuclideanSpace_ESTest extends AbstractFunctionEuclideanSpace_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BiConsumer<RealLocalizable, Object> biConsumer0 = (BiConsumer<RealLocalizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      FunctionRealRandomAccessible<Object> functionRealRandomAccessible0 = new FunctionRealRandomAccessible<Object>((-1), biConsumer0, supplier0);
      assertEquals((-1), functionRealRandomAccessible0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      FunctionRandomAccessible<Object> functionRandomAccessible0 = new FunctionRandomAccessible<Object>((-1006), biConsumer0, (Supplier<Object>) null);
      int int0 = functionRandomAccessible0.numDimensions();
      assertEquals((-1006), int0);
  }
}
