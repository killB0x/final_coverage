/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:23:59 GMT 2022
 */

package net.imglib2;

import org.junit.Test;
import static org.junit.Assert.*;
import net.imglib2.Volatile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Volatile_ESTest extends Volatile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Volatile<Integer> volatile0 = new Volatile<Integer>((Integer) null);
      volatile0.get();
      assertFalse(volatile0.isValid());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Volatile<Object> volatile0 = new Volatile<Object>(object0);
      Object object1 = volatile0.get();
      assertNotNull(object1);
      
      Volatile<Object> volatile1 = new Volatile<Object>(object1, true);
      assertTrue(volatile1.isValid());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-96));
      Volatile<Integer> volatile0 = new Volatile<Integer>(integer0, false);
      assertFalse(volatile0.isValid());
      
      volatile0.setValid(true);
      boolean boolean0 = volatile0.isValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(2683);
      Volatile<Integer> volatile0 = new Volatile<Integer>(integer0);
      boolean boolean0 = volatile0.isValid();
      assertFalse(boolean0);
  }
}
