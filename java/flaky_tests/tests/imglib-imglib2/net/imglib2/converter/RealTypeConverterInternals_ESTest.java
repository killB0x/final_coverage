/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:03:28 GMT 2022
 */

package net.imglib2.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.converter.Converter;
import net.imglib2.converter.RealTypeConverterInternals;
import net.imglib2.img.basictypeaccess.ByteAccess;
import net.imglib2.img.sparse.LongNtree;
import net.imglib2.type.BooleanType;
import net.imglib2.type.logic.BoolType;
import net.imglib2.type.logic.NativeBoolType;
import net.imglib2.type.numeric.IntegerType;
import net.imglib2.type.numeric.RealType;
import net.imglib2.type.numeric.integer.ByteType;
import net.imglib2.type.numeric.integer.GenericByteType;
import net.imglib2.type.numeric.integer.GenericShortType;
import net.imglib2.type.numeric.integer.LongType;
import net.imglib2.type.numeric.integer.UnsignedShortType;
import net.imglib2.type.numeric.real.FloatType;
import net.imglib2.type.volatiles.VolatileIntType;
import net.imglib2.type.volatiles.VolatileRealType;
import net.imglib2.type.volatiles.VolatileUnsignedIntType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RealTypeConverterInternals_ESTest extends RealTypeConverterInternals_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeBoolType nativeBoolType0 = new NativeBoolType();
      NativeBoolType nativeBoolType1 = nativeBoolType0.copy();
      RealTypeConverterInternals.BooleanConverter realTypeConverterInternals_BooleanConverter0 = new RealTypeConverterInternals.BooleanConverter();
      realTypeConverterInternals_BooleanConverter0.convert((BooleanType<?>) nativeBoolType1, (BooleanType<?>) nativeBoolType0);
      assertNotSame(nativeBoolType0, nativeBoolType1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RealTypeConverterInternals.ShortConverter realTypeConverterInternals_ShortConverter0 = new RealTypeConverterInternals.ShortConverter();
      UnsignedShortType unsignedShortType0 = new UnsignedShortType((-647));
      UnsignedShortType unsignedShortType1 = unsignedShortType0.createVariable();
      realTypeConverterInternals_ShortConverter0.convert((GenericShortType<?>) unsignedShortType0, (GenericShortType<?>) unsignedShortType1);
      assertEquals(64889, unsignedShortType1.getInteger());
      assertTrue(unsignedShortType0.equals((Object)unsignedShortType1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RealTypeConverterInternals.ByteConverter realTypeConverterInternals_ByteConverter0 = new RealTypeConverterInternals.ByteConverter();
      ByteType byteType0 = new ByteType((ByteAccess) null);
      ByteType byteType1 = byteType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        realTypeConverterInternals_ByteConverter0.convert((GenericByteType<?>) byteType1, (GenericByteType<?>) byteType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericByteType", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RealTypeConverterInternals.LongConverter realTypeConverterInternals_LongConverter0 = new RealTypeConverterInternals.LongConverter();
      LongType longType0 = new LongType();
      LongType longType1 = longType0.createVariable();
      realTypeConverterInternals_LongConverter0.convert((IntegerType<?>) longType1, (IntegerType<?>) longType0);
      assertEquals(0, longType1.getInteger());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RealTypeConverterInternals.IntegerConverter realTypeConverterInternals_IntegerConverter0 = new RealTypeConverterInternals.IntegerConverter();
      LongType longType0 = new LongType(0L);
      LongType longType1 = longType0.copy();
      realTypeConverterInternals_IntegerConverter0.convert((IntegerType<?>) longType0, (IntegerType<?>) longType1);
      assertEquals(0, longType0.getInteger());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongType longType0 = new LongType();
      RealTypeConverterInternals.FloatConverter realTypeConverterInternals_FloatConverter0 = new RealTypeConverterInternals.FloatConverter();
      long[] longArray0 = new long[7];
      LongNtree longNtree0 = new LongNtree(longArray0, longArray0, (-1539L));
      LongType longType1 = new LongType(longNtree0);
      // Undeclared exception!
      realTypeConverterInternals_FloatConverter0.convert((RealType<?>) longType0, (RealType<?>) longType1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BoolType boolType0 = new BoolType(true);
      RealTypeConverterInternals.DoubleConverter realTypeConverterInternals_DoubleConverter0 = new RealTypeConverterInternals.DoubleConverter();
      LongType longType0 = new LongType();
      realTypeConverterInternals_DoubleConverter0.convert((RealType<?>) boolType0, (RealType<?>) longType0);
      assertEquals(1L, longType0.getIntegerLong());
      assertEquals(1L, longType0.getLong());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VolatileIntType volatileIntType0 = new VolatileIntType();
      boolean boolean0 = RealTypeConverterInternals.smallerThanInt(volatileIntType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteType byteType0 = new ByteType((byte)0);
      RealTypeConverterInternals.ByteConverter realTypeConverterInternals_ByteConverter0 = new RealTypeConverterInternals.ByteConverter();
      realTypeConverterInternals_ByteConverter0.convert((GenericByteType<?>) byteType0, (GenericByteType<?>) byteType0);
      assertEquals(8, byteType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        RealTypeConverterInternals.smallerThanInt((RealType<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.RealTypeConverterInternals", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VolatileUnsignedIntType volatileUnsignedIntType0 = new VolatileUnsignedIntType();
      boolean boolean0 = RealTypeConverterInternals.smallerThanInt(volatileUnsignedIntType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeBoolType nativeBoolType0 = new NativeBoolType();
      boolean boolean0 = RealTypeConverterInternals.smallerThanInt(nativeBoolType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongType longType0 = new LongType();
      boolean boolean0 = RealTypeConverterInternals.smallerThanInt(longType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeBoolType nativeBoolType0 = new NativeBoolType();
      LongType longType0 = new LongType();
      Converter<LongType, NativeBoolType> converter0 = RealTypeConverterInternals.getConverter(longType0, nativeBoolType0);
      assertNotNull(converter0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FloatType floatType0 = new FloatType(1.0F);
      VolatileRealType<FloatType> volatileRealType0 = new VolatileRealType<FloatType>(floatType0);
      Converter<FloatType, VolatileRealType<FloatType>> converter0 = RealTypeConverterInternals.getConverter(floatType0, volatileRealType0);
      assertNotNull(converter0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LongType longType0 = new LongType();
      NativeBoolType nativeBoolType0 = new NativeBoolType();
      Converter<NativeBoolType, LongType> converter0 = RealTypeConverterInternals.getConverter(nativeBoolType0, longType0);
      assertNotNull(converter0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FloatType floatType0 = new FloatType();
      VolatileRealType<FloatType> volatileRealType0 = new VolatileRealType<FloatType>(floatType0, false);
      Converter<VolatileRealType<FloatType>, FloatType> converter0 = RealTypeConverterInternals.getConverter(volatileRealType0, floatType0);
      assertNotNull(converter0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteType byteType0 = new ByteType();
      VolatileRealType<ByteType> volatileRealType0 = new VolatileRealType<ByteType>(byteType0);
      Converter<ByteType, VolatileRealType<ByteType>> converter0 = RealTypeConverterInternals.getConverter(byteType0, volatileRealType0);
      assertNotNull(converter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LongType longType0 = new LongType();
      Converter<LongType, LongType> converter0 = RealTypeConverterInternals.getConverter(longType0, longType0);
      assertNotNull(converter0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RealTypeConverterInternals.FloatConverter realTypeConverterInternals_FloatConverter0 = new RealTypeConverterInternals.FloatConverter();
      LongType longType0 = new LongType(0L);
      realTypeConverterInternals_FloatConverter0.convert((RealType<?>) longType0, (RealType<?>) longType0);
      assertEquals(0.0F, longType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        RealTypeConverterInternals.getConverter((LongType) null, (LongType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.RealTypeConverterInternals", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RealTypeConverterInternals realTypeConverterInternals0 = new RealTypeConverterInternals();
  }
}
