/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:43:24 GMT 2022
 */

package net.imglib2.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import java.util.function.Supplier;
import net.imglib2.IterableInterval;
import net.imglib2.PointSampleList;
import net.imglib2.converter.AbstractConvertedCursor;
import net.imglib2.converter.Converter;
import net.imglib2.converter.TypeIdentity;
import net.imglib2.converter.read.ConvertedIterableInterval;
import net.imglib2.converter.readwrite.SamplerConverter;
import net.imglib2.converter.readwrite.WriteConvertedIterableInterval;
import net.imglib2.type.numeric.integer.UnsignedByteType;
import net.imglib2.view.composite.AbstractComposite;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractConvertedIterableInterval_ESTest extends AbstractConvertedIterableInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PointSampleList<UnsignedByteType> pointSampleList0 = new PointSampleList<UnsignedByteType>(1092);
      TypeIdentity<UnsignedByteType> typeIdentity0 = new TypeIdentity<UnsignedByteType>();
      ConvertedIterableInterval<UnsignedByteType, UnsignedByteType> convertedIterableInterval0 = new ConvertedIterableInterval<UnsignedByteType, UnsignedByteType>(pointSampleList0, typeIdentity0, (Supplier<? extends UnsignedByteType>) null);
      long long0 = convertedIterableInterval0.size();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(2376);
      SamplerConverter<Integer, UnsignedByteType> samplerConverter0 = (SamplerConverter<Integer, UnsignedByteType>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(samplerConverter0).convert(any(net.imglib2.Sampler.class));
      WriteConvertedIterableInterval<Integer, UnsignedByteType> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Integer, UnsignedByteType>(pointSampleList0, samplerConverter0);
      AbstractConvertedCursor<Integer, UnsignedByteType> abstractConvertedCursor0 = writeConvertedIterableInterval0.localizingCursor();
      assertNotNull(abstractConvertedCursor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(0);
      SamplerConverter<Object, Object> samplerConverter0 = (SamplerConverter<Object, Object>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(samplerConverter0).convert(any(net.imglib2.Sampler.class));
      WriteConvertedIterableInterval<Object, Object> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Object, Object>(pointSampleList0, samplerConverter0);
      Iterator<Object> iterator0 = writeConvertedIterableInterval0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PointSampleList<UnsignedByteType> pointSampleList0 = new PointSampleList<UnsignedByteType>(0);
      WriteConvertedIterableInterval<UnsignedByteType, UnsignedByteType> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<UnsignedByteType, UnsignedByteType>(pointSampleList0, (SamplerConverter<? super UnsignedByteType, UnsignedByteType>) null);
      PointSampleList pointSampleList1 = (PointSampleList)writeConvertedIterableInterval0.iterationOrder();
      assertEquals(0L, pointSampleList1.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(754);
      SamplerConverter<Integer, AbstractComposite<UnsignedByteType>> samplerConverter0 = (SamplerConverter<Integer, AbstractComposite<UnsignedByteType>>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(samplerConverter0).convert(any(net.imglib2.Sampler.class));
      WriteConvertedIterableInterval<Integer, AbstractComposite<UnsignedByteType>> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Integer, AbstractComposite<UnsignedByteType>>(pointSampleList0, samplerConverter0);
      AbstractConvertedCursor<Integer, AbstractComposite<UnsignedByteType>> abstractConvertedCursor0 = writeConvertedIterableInterval0.cursor();
      assertNotNull(abstractConvertedCursor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SamplerConverter<Object, Object> samplerConverter0 = (SamplerConverter<Object, Object>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      WriteConvertedIterableInterval<Object, Object> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Object, Object>((IterableInterval<Object>) null, samplerConverter0);
      // Undeclared exception!
      try { 
        writeConvertedIterableInterval0.localizingCursor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.readwrite.WriteConvertedIterableInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PointSampleList<AbstractComposite<Integer>> pointSampleList0 = new PointSampleList<AbstractComposite<Integer>>(0);
      Converter<Object, Object> converter0 = (Converter<Object, Object>) mock(Converter.class, new ViolatedAssumptionAnswer());
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      ConvertedIterableInterval<AbstractComposite<Integer>, Object> convertedIterableInterval0 = new ConvertedIterableInterval<AbstractComposite<Integer>, Object>(pointSampleList0, converter0, supplier0);
      // Undeclared exception!
      try { 
        convertedIterableInterval0.firstElement();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SamplerConverter<Object, Object> samplerConverter0 = (SamplerConverter<Object, Object>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      WriteConvertedIterableInterval<Object, Object> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Object, Object>((IterableInterval<Object>) null, samplerConverter0);
      // Undeclared exception!
      try { 
        writeConvertedIterableInterval0.cursor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.readwrite.WriteConvertedIterableInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WriteConvertedIterableInterval<Object, Object> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Object, Object>((IterableInterval<Object>) null, (SamplerConverter<? super Object, Object>) null);
      // Undeclared exception!
      try { 
        writeConvertedIterableInterval0.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.readwrite.WriteConvertedIterableInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SamplerConverter<Object, Object> samplerConverter0 = (SamplerConverter<Object, Object>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      WriteConvertedIterableInterval<Object, Object> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Object, Object>((IterableInterval<Object>) null, samplerConverter0);
      // Undeclared exception!
      try { 
        writeConvertedIterableInterval0.iterationOrder();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.AbstractConvertedIterableInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SamplerConverter<Object, Object> samplerConverter0 = (SamplerConverter<Object, Object>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      WriteConvertedIterableInterval<Object, Object> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Object, Object>((IterableInterval<Object>) null, samplerConverter0);
      // Undeclared exception!
      try { 
        writeConvertedIterableInterval0.firstElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.readwrite.WriteConvertedIterableInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SamplerConverter<Object, Object> samplerConverter0 = (SamplerConverter<Object, Object>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      WriteConvertedIterableInterval<Object, Object> writeConvertedIterableInterval0 = new WriteConvertedIterableInterval<Object, Object>((IterableInterval<Object>) null, samplerConverter0);
      // Undeclared exception!
      try { 
        writeConvertedIterableInterval0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.AbstractConvertedIterableInterval", e);
      }
  }
}
