/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:29:50 GMT 2022
 */

package net.imglib2.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.imglib2.converter.RealUnsignedShortConverter;
import net.imglib2.img.basictypeaccess.nio.ShortBufferAccess;
import net.imglib2.type.numeric.integer.UnsignedShortType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RealUnsignedShortConverter_ESTest extends RealUnsignedShortConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RealUnsignedShortConverter<UnsignedShortType> realUnsignedShortConverter0 = new RealUnsignedShortConverter<UnsignedShortType>((-2.147483648E9), (-1562.48036904329));
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2113);
      ShortBufferAccess shortBufferAccess0 = new ShortBufferAccess(byteBuffer0);
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(shortBufferAccess0);
      realUnsignedShortConverter0.convert(unsignedShortType0, unsignedShortType0);
      assertEquals(0.0F, unsignedShortType0.getPhaseFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RealUnsignedShortConverter<UnsignedShortType> realUnsignedShortConverter0 = new RealUnsignedShortConverter<UnsignedShortType>();
      assertEquals(0.0, realUnsignedShortConverter0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RealUnsignedShortConverter<UnsignedShortType> realUnsignedShortConverter0 = new RealUnsignedShortConverter<UnsignedShortType>(0.0, 0.0);
      UnsignedShortType unsignedShortType0 = new UnsignedShortType(1775);
      UnsignedShortType unsignedShortType1 = unsignedShortType0.duplicateTypeOnSameNativeImg();
      // Undeclared exception!
      try { 
        realUnsignedShortConverter0.convert(unsignedShortType0, unsignedShortType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.integer.GenericShortType", e);
      }
  }
}
