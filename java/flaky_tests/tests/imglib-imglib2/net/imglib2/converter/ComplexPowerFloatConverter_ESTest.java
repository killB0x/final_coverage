/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 19:06:51 GMT 2022
 */

package net.imglib2.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.FloatBuffer;
import net.imglib2.converter.ComplexPowerFloatConverter;
import net.imglib2.img.basictypeaccess.array.FloatArray;
import net.imglib2.img.basictypeaccess.nio.FloatBufferAccess;
import net.imglib2.type.numeric.integer.UnsignedIntType;
import net.imglib2.type.numeric.real.FloatType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComplexPowerFloatConverter_ESTest extends ComplexPowerFloatConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ComplexPowerFloatConverter<UnsignedIntType> complexPowerFloatConverter0 = new ComplexPowerFloatConverter<UnsignedIntType>();
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      FloatBuffer floatBuffer0 = mock(FloatBuffer.class, new ViolatedAssumptionAnswer());
      doReturn((FloatBuffer) null).when(floatBuffer0).put(anyInt() , anyFloat());
      FloatBufferAccess floatBufferAccess0 = new FloatBufferAccess(floatBuffer0);
      FloatType floatType0 = new FloatType(floatBufferAccess0);
      complexPowerFloatConverter0.convert(unsignedIntType0, floatType0);
      assertEquals(32, floatType0.getBitsPerPixel());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ComplexPowerFloatConverter<UnsignedIntType> complexPowerFloatConverter0 = new ComplexPowerFloatConverter<UnsignedIntType>();
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      FloatArray floatArray0 = new FloatArray(0);
      FloatType floatType0 = new FloatType(floatArray0);
      // Undeclared exception!
      try { 
        complexPowerFloatConverter0.convert(unsignedIntType0, floatType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ComplexPowerFloatConverter<UnsignedIntType> complexPowerFloatConverter0 = new ComplexPowerFloatConverter<UnsignedIntType>();
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      // Undeclared exception!
      try { 
        complexPowerFloatConverter0.convert(unsignedIntType0, (FloatType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.ComplexPowerFloatConverter", e);
      }
  }
}
