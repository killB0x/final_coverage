/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:13:10 GMT 2022
 */

package net.imglib2.converter.read;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Function;
import java.util.function.Supplier;
import net.imglib2.Cursor;
import net.imglib2.PointSampleList;
import net.imglib2.RealCursor;
import net.imglib2.RealPoint;
import net.imglib2.RealPointSampleList;
import net.imglib2.converter.BiConverter;
import net.imglib2.converter.read.BiConvertedRealCursor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BiConvertedRealCursor_ESTest extends BiConvertedRealCursor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RealPointSampleList<BiConvertedRealCursor<Object, Object, Object>> realPointSampleList0 = new RealPointSampleList<BiConvertedRealCursor<Object, Object, Object>>(0);
      RealCursor<BiConvertedRealCursor<Object, Object, Object>> realCursor0 = realPointSampleList0.cursor();
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(0);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = pointSampleList0.new PointSampleListCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor1 = pointSampleList0.new PointSampleListCursor();
      Supplier<PointSampleList.PointSampleListCursor> supplier0 = (Supplier<PointSampleList.PointSampleListCursor>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pointSampleList_PointSampleListCursor1).when(supplier0).get();
      BiConvertedRealCursor<BiConvertedRealCursor<Object, Object, Object>, Function<Object, Object>, PointSampleList.PointSampleListCursor> biConvertedRealCursor0 = new BiConvertedRealCursor<BiConvertedRealCursor<Object, Object, Object>, Function<Object, Object>, PointSampleList.PointSampleListCursor>(realCursor0, pointSampleList_PointSampleListCursor0, biConverter0, supplier0);
      BiConverter<Object, Object, Object> biConverter1 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      Supplier<Function<Object, Object>> supplier1 = (Supplier<Function<Object, Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier1).get();
      BiConvertedRealCursor<Function<Object, Object>, PointSampleList.PointSampleListCursor, Function<Object, Object>> biConvertedRealCursor1 = new BiConvertedRealCursor<Function<Object, Object>, PointSampleList.PointSampleListCursor, Function<Object, Object>>(pointSampleList_PointSampleListCursor0, biConvertedRealCursor0, biConverter1, supplier1);
      biConvertedRealCursor1.reset();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RealPointSampleList<BiConvertedRealCursor<Object, Object, Object>> realPointSampleList0 = new RealPointSampleList<BiConvertedRealCursor<Object, Object, Object>>(0);
      RealCursor<BiConvertedRealCursor<Object, Object, Object>> realCursor0 = realPointSampleList0.cursor();
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(0);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = pointSampleList0.new PointSampleListCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor1 = pointSampleList0.new PointSampleListCursor();
      Supplier<PointSampleList.PointSampleListCursor> supplier0 = (Supplier<PointSampleList.PointSampleListCursor>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pointSampleList_PointSampleListCursor1).when(supplier0).get();
      BiConvertedRealCursor<BiConvertedRealCursor<Object, Object, Object>, Function<Object, Object>, PointSampleList.PointSampleListCursor> biConvertedRealCursor0 = new BiConvertedRealCursor<BiConvertedRealCursor<Object, Object, Object>, Function<Object, Object>, PointSampleList.PointSampleListCursor>(realCursor0, pointSampleList_PointSampleListCursor0, biConverter0, supplier0);
      biConvertedRealCursor0.remove();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPoint realPoint0 = realPointSampleList0.maxAsRealPoint();
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      RealCursor<PointSampleList.PointSampleListCursor> realCursor0 = realPointSampleList_RealPointSampleListCursor0.copyCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      RealPointSampleList<Function<Object, Object>> realPointSampleList1 = new RealPointSampleList<Function<Object, Object>>(0);
      realPointSampleList0.add(realPoint0, realPointSampleList1);
      Supplier<BiConvertedRealCursor<Object, Object, Object>> supplier0 = (Supplier<BiConvertedRealCursor<Object, Object, Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>>(realCursor0, realPointSampleList_RealPointSampleListCursor0, biConverter0, supplier0);
      biConvertedRealCursor0.fwd();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPoint realPoint0 = realPointSampleList0.maxAsRealPoint();
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      RealPointSampleList<Function<Object, Object>> realPointSampleList1 = new RealPointSampleList<Function<Object, Object>>(0);
      realPointSampleList0.add(realPoint0, realPointSampleList1);
      Supplier<BiConvertedRealCursor<Object, Object, Object>> supplier0 = (Supplier<BiConvertedRealCursor<Object, Object, Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>>(realPointSampleList_RealPointSampleListCursor0, realPointSampleList_RealPointSampleListCursor0, biConverter0, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.fwd();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(0);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = pointSampleList0.new PointSampleListCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      RealPointSampleList<PointSampleList.PointSampleListCursor> realPointSampleList1 = new RealPointSampleList<PointSampleList.PointSampleListCursor>(0);
      RealPoint realPoint0 = realPointSampleList1.maxAsRealPoint();
      realPointSampleList0.add(realPoint0, realPointSampleList1);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<Object, Function<Object, Object>, Object> biConvertedRealCursor0 = new BiConvertedRealCursor<Object, Function<Object, Object>, Object>(realPointSampleList_RealPointSampleListCursor0, pointSampleList_PointSampleListCursor0, biConverter0, supplier0);
      boolean boolean0 = biConvertedRealCursor0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(1821);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = pointSampleList0.new PointSampleListCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor1 = mock(PointSampleList.PointSampleListCursor.class, new ViolatedAssumptionAnswer());
      Supplier<PointSampleList.PointSampleListCursor> supplier0 = (Supplier<PointSampleList.PointSampleListCursor>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<Function<Object, Object>, Function<Object, Object>, PointSampleList.PointSampleListCursor> biConvertedRealCursor0 = new BiConvertedRealCursor<Function<Object, Object>, Function<Object, Object>, PointSampleList.PointSampleListCursor>(pointSampleList_PointSampleListCursor0, pointSampleList_PointSampleListCursor0, biConverter0, supplier0);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor2 = biConvertedRealCursor0.get();
      assertFalse(pointSampleList_PointSampleListCursor2.hasNext());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Supplier<BiConvertedRealCursor<Object, Object, Object>> supplier0 = (Supplier<BiConvertedRealCursor<Object, Object, Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>>((RealCursor<PointSampleList.PointSampleListCursor>) null, (RealCursor<PointSampleList.PointSampleListCursor>) null, (BiConverter<? super PointSampleList.PointSampleListCursor, ? super PointSampleList.PointSampleListCursor, ? super BiConvertedRealCursor<Object, Object, Object>>) null, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.reset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.read.BiConvertedRealCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      Supplier<RealPointSampleList<Object>> supplier0 = (Supplier<RealPointSampleList<Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, RealPointSampleList<Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, RealPointSampleList<Object>>((RealCursor<PointSampleList.PointSampleListCursor>) null, (RealCursor<PointSampleList.PointSampleListCursor>) null, biConverter0, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.jumpFwd((-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.read.BiConvertedRealCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(1);
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = mock(PointSampleList.PointSampleListCursor.class, new ViolatedAssumptionAnswer());
      Supplier<PointSampleList.PointSampleListCursor> supplier0 = (Supplier<PointSampleList.PointSampleListCursor>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pointSampleList_PointSampleListCursor0).when(supplier0).get();
      BiConvertedRealCursor<Object, Function<Object, Object>, PointSampleList.PointSampleListCursor> biConvertedRealCursor0 = new BiConvertedRealCursor<Object, Function<Object, Object>, PointSampleList.PointSampleListCursor>(realPointSampleList_RealPointSampleListCursor0, (RealCursor<Function<Object, Object>>) null, (BiConverter<? super Object, ? super Function<Object, Object>, ? super PointSampleList.PointSampleListCursor>) null, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.jumpFwd(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Supplier<RealPointSampleList<Object>> supplier0 = (Supplier<RealPointSampleList<Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, RealPointSampleList<Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, RealPointSampleList<Object>>((RealCursor<PointSampleList.PointSampleListCursor>) null, (RealCursor<PointSampleList.PointSampleListCursor>) null, (BiConverter<? super PointSampleList.PointSampleListCursor, ? super PointSampleList.PointSampleListCursor, ? super RealPointSampleList<Object>>) null, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.read.BiConvertedRealCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      Supplier<BiConvertedRealCursor<Object, Object, Object>> supplier0 = (Supplier<BiConvertedRealCursor<Object, Object, Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>>((RealCursor<PointSampleList.PointSampleListCursor>) null, (RealCursor<PointSampleList.PointSampleListCursor>) null, biConverter0, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.fwd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.read.BiConvertedRealCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      Supplier<RealPointSampleList<Object>> supplier0 = (Supplier<RealPointSampleList<Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<Object, PointSampleList.PointSampleListCursor, RealPointSampleList<Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<Object, PointSampleList.PointSampleListCursor, RealPointSampleList<Object>>((RealCursor<Object>) null, realPointSampleList_RealPointSampleListCursor0, (BiConverter<? super Object, ? super PointSampleList.PointSampleListCursor, ? super RealPointSampleList<Object>>) null, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.read.BiConvertedRealCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>> biConvertedRealCursor0 = null;
      try {
        biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>>((RealCursor<PointSampleList.PointSampleListCursor>) null, (RealCursor<PointSampleList.PointSampleListCursor>) null, (BiConverter<? super PointSampleList.PointSampleListCursor, ? super PointSampleList.PointSampleListCursor, ? super BiConvertedRealCursor<Object, Object, Object>>) null, (Supplier<? extends BiConvertedRealCursor<Object, Object, Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.read.BiConvertedRealCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(0);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = pointSampleList0.new PointSampleListCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(supplier0).get();
      BiConvertedRealCursor<Object, Function<Object, Object>, Object> biConvertedRealCursor0 = new BiConvertedRealCursor<Object, Function<Object, Object>, Object>(realPointSampleList_RealPointSampleListCursor0, pointSampleList_PointSampleListCursor0, biConverter0, supplier0);
      BiConvertedRealCursor<Object, Function<Object, Object>, Object> biConvertedRealCursor1 = biConvertedRealCursor0.copy();
      assertNotSame(biConvertedRealCursor1, biConvertedRealCursor0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      Supplier<BiConvertedRealCursor<Object, Object, Object>> supplier0 = (Supplier<BiConvertedRealCursor<Object, Object, Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, BiConvertedRealCursor<Object, Object, Object>>((RealCursor<PointSampleList.PointSampleListCursor>) null, (RealCursor<PointSampleList.PointSampleListCursor>) null, biConverter0, supplier0);
      // Undeclared exception!
      try { 
        biConvertedRealCursor0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.read.BiConvertedRealCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      PointSampleList<RealPointSampleList<Object>> pointSampleList0 = new PointSampleList<RealPointSampleList<Object>>(0);
      Cursor<RealPointSampleList<Object>> cursor0 = pointSampleList0.cursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      Supplier<RealPointSampleList<Object>> supplier0 = (Supplier<RealPointSampleList<Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, RealPointSampleList<Object>, RealPointSampleList<Object>> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, RealPointSampleList<Object>, RealPointSampleList<Object>>(realPointSampleList_RealPointSampleListCursor0, cursor0, biConverter0, supplier0);
      Object object0 = biConvertedRealCursor0.get();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(0);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = pointSampleList0.new PointSampleListCursor();
      Supplier<PointSampleList.PointSampleListCursor> supplier0 = (Supplier<PointSampleList.PointSampleListCursor>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pointSampleList_PointSampleListCursor0).when(supplier0).get();
      BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor> biConvertedRealCursor0 = new BiConvertedRealCursor<PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor, PointSampleList.PointSampleListCursor>(realPointSampleList_RealPointSampleListCursor0, realPointSampleList_RealPointSampleListCursor0, (BiConverter<? super PointSampleList.PointSampleListCursor, ? super PointSampleList.PointSampleListCursor, ? super PointSampleList.PointSampleListCursor>) null, supplier0);
      biConvertedRealCursor0.jumpFwd(0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RealPointSampleList<Object> realPointSampleList0 = new RealPointSampleList<Object>(0);
      RealPointSampleList.RealPointSampleListCursor realPointSampleList_RealPointSampleListCursor0 = realPointSampleList0.new RealPointSampleListCursor();
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(0);
      PointSampleList.PointSampleListCursor pointSampleList_PointSampleListCursor0 = pointSampleList0.new PointSampleListCursor();
      BiConverter<Object, Object, Object> biConverter0 = (BiConverter<Object, Object, Object>) mock(BiConverter.class, new ViolatedAssumptionAnswer());
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      BiConvertedRealCursor<Object, Function<Object, Object>, Object> biConvertedRealCursor0 = new BiConvertedRealCursor<Object, Function<Object, Object>, Object>(realPointSampleList_RealPointSampleListCursor0, pointSampleList_PointSampleListCursor0, biConverter0, supplier0);
      boolean boolean0 = biConvertedRealCursor0.hasNext();
      assertFalse(boolean0);
  }
}
