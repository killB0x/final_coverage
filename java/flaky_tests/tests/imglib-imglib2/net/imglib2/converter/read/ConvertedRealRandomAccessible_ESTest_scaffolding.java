/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 05 17:57:15 GMT 2022
 */

package net.imglib2.converter.read;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class ConvertedRealRandomAccessible_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "net.imglib2.converter.read.ConvertedRealRandomAccessible"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConvertedRealRandomAccessible_ESTest_scaffolding.class.getClassLoader() ,
      "net.imglib2.RealInterval",
      "net.imglib2.AbstractRealInterval",
      "net.imglib2.type.operators.Add",
      "net.imglib2.AbstractRealLocalizable",
      "net.imglib2.type.numeric.integer.UnsignedByteType",
      "net.imglib2.type.operators.PowFloatingPoint",
      "net.imglib2.Volatile",
      "net.imglib2.type.numeric.real.AbstractRealType",
      "net.imglib2.type.numeric.real.FloatType",
      "net.imglib2.converter.Converter",
      "net.imglib2.converter.AbstractConvertedRealRandomAccessible",
      "net.imglib2.converter.AbstractConvertedRealRandomAccess",
      "net.imglib2.type.numeric.complex.ComplexFloatType",
      "net.imglib2.type.NativeType",
      "net.imglib2.type.operators.Div",
      "net.imglib2.Sampler",
      "net.imglib2.Localizable",
      "net.imglib2.FinalRealInterval",
      "net.imglib2.type.volatiles.AbstractVolatileNativeRealType",
      "net.imglib2.RealPoint",
      "net.imglib2.type.numeric.ComplexType",
      "net.imglib2.type.operators.SetOne",
      "net.imglib2.converter.TypeIdentity",
      "net.imglib2.converter.read.ConvertedRealRandomAccessible",
      "net.imglib2.type.operators.MulFloatingPoint",
      "net.imglib2.type.numeric.integer.GenericByteType",
      "net.imglib2.RealPositionable",
      "net.imglib2.type.volatiles.VolatileByteType",
      "net.imglib2.converter.ComplexPowerGLogFloatConverter",
      "net.imglib2.type.operators.ValueEquals",
      "net.imglib2.type.numeric.RealType",
      "net.imglib2.converter.ChannelARGBConverter",
      "net.imglib2.type.operators.Pow",
      "net.imglib2.converter.ChannelARGBConverter$Channel",
      "net.imglib2.type.numeric.ARGBType",
      "net.imglib2.type.numeric.IntegerType",
      "net.imglib2.converter.read.ConvertedRealRandomAccess",
      "net.imglib2.type.numeric.complex.AbstractComplexType",
      "net.imglib2.view.composite.Composite",
      "net.imglib2.Positionable",
      "net.imglib2.type.operators.Mul",
      "net.imglib2.interpolation.Interpolant",
      "net.imglib2.type.numeric.integer.AbstractIntegerType",
      "net.imglib2.position.FunctionRealRandomAccessible",
      "net.imglib2.RealLocalizable",
      "net.imglib2.View",
      "net.imglib2.type.operators.SetZero",
      "net.imglib2.type.volatiles.VolatileShortType",
      "net.imglib2.type.AbstractNativeType",
      "net.imglib2.RealRandomAccess",
      "net.imglib2.type.operators.Sub",
      "net.imglib2.position.AbstractFunctionEuclideanSpace",
      "net.imglib2.type.Type",
      "net.imglib2.type.numeric.NumericType",
      "net.imglib2.type.volatiles.AbstractVolatileRealType",
      "net.imglib2.position.FunctionRealRandomAccessible$RealFunctionRealRandomAccess",
      "net.imglib2.RealRandomAccess$1",
      "net.imglib2.RealRandomAccessible",
      "net.imglib2.EuclideanSpace",
      "net.imglib2.AbstractEuclideanSpace",
      "net.imglib2.interpolation.InterpolatorFactory"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.util.function.BiConsumer", false, ConvertedRealRandomAccessible_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.function.Supplier", false, ConvertedRealRandomAccessible_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("net.imglib2.converter.Converter", false, ConvertedRealRandomAccessible_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("net.imglib2.interpolation.InterpolatorFactory", false, ConvertedRealRandomAccessible_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConvertedRealRandomAccessible_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "net.imglib2.converter.AbstractConvertedRealRandomAccessible",
      "net.imglib2.converter.read.ConvertedRealRandomAccessible",
      "net.imglib2.converter.ChannelARGBConverter",
      "net.imglib2.interpolation.Interpolant",
      "net.imglib2.AbstractEuclideanSpace",
      "net.imglib2.AbstractRealLocalizable",
      "net.imglib2.RealRandomAccess$1",
      "net.imglib2.RealRandomAccess",
      "net.imglib2.RealPointSample",
      "net.imglib2.position.AbstractFunctionEuclideanSpace",
      "net.imglib2.position.FunctionRealRandomAccessible",
      "net.imglib2.converter.AbstractConvertedRealRandomAccess",
      "net.imglib2.converter.read.ConvertedRealRandomAccess",
      "net.imglib2.RealPoint",
      "net.imglib2.position.FunctionRealRandomAccessible$RealFunctionRealRandomAccess",
      "net.imglib2.converter.ComplexPowerGLogFloatConverter",
      "net.imglib2.KDTree",
      "net.imglib2.AbstractInterval",
      "net.imglib2.PointSampleList",
      "net.imglib2.interpolation.randomaccess.FloorInterpolatorFactory",
      "net.imglib2.AbstractLocalizable",
      "net.imglib2.Point",
      "net.imglib2.RandomAccess$1",
      "net.imglib2.RandomAccess",
      "net.imglib2.PointSample",
      "net.imglib2.converter.TypeIdentity",
      "net.imglib2.type.numeric.complex.AbstractComplexType",
      "net.imglib2.type.numeric.real.AbstractRealType",
      "net.imglib2.type.numeric.integer.AbstractIntegerType",
      "net.imglib2.type.numeric.integer.GenericByteType",
      "net.imglib2.type.NativeTypeFactory",
      "net.imglib2.type.PrimitiveType",
      "net.imglib2.type.numeric.integer.UnsignedByteType",
      "net.imglib2.type.Index",
      "net.imglib2.AbstractRealInterval",
      "net.imglib2.FinalRealInterval",
      "net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGBFactory",
      "net.imglib2.img.cell.CellGrid",
      "net.imglib2.type.numeric.real.FloatType",
      "net.imglib2.img.basictypeaccess.array.AbstractFloatArray",
      "net.imglib2.img.basictypeaccess.array.FloatArray",
      "net.imglib2.img.AbstractImg",
      "net.imglib2.img.AbstractNativeImg",
      "net.imglib2.img.cell.AbstractCellImg",
      "net.imglib2.img.cell.LazyCellImg",
      "net.imglib2.img.list.AbstractLongListImg",
      "net.imglib2.img.cell.LazyCellImg$LazyCells",
      "net.imglib2.type.numeric.complex.ComplexDoubleType",
      "net.imglib2.img.basictypeaccess.array.AbstractDoubleArray",
      "net.imglib2.img.basictypeaccess.array.DoubleArray",
      "net.imglib2.util.Fraction",
      "net.imglib2.img.ImgFactory",
      "net.imglib2.img.NativeImgFactory",
      "net.imglib2.img.cell.CellImgFactory",
      "net.imglib2.img.cell.CellImg",
      "net.imglib2.AbstractWrappedRealInterval",
      "net.imglib2.converter.read.BiConvertedRealRandomAccessibleRealInterval",
      "net.imglib2.view.ExtendedRealRandomAccessibleRealInterval",
      "net.imglib2.Volatile",
      "net.imglib2.type.volatiles.AbstractVolatileRealType",
      "net.imglib2.type.volatiles.AbstractVolatileNativeRealType",
      "net.imglib2.type.volatiles.VolatileByteType",
      "net.imglib2.type.numeric.integer.ByteType",
      "net.imglib2.type.volatiles.VolatileByteType$WrappedByteType",
      "net.imglib2.util.Util",
      "net.imglib2.converter.read.ConvertedRealRandomAccessibleRealInterval",
      "net.imglib2.interpolation.randomaccess.NLinearInterpolatorFactory",
      "net.imglib2.converter.CompositeChannelConverter",
      "net.imglib2.type.numeric.real.DoubleType",
      "net.imglib2.type.numeric.integer.GenericShortType",
      "net.imglib2.type.numeric.integer.ShortType",
      "net.imglib2.img.basictypeaccess.array.AbstractShortArray",
      "net.imglib2.img.basictypeaccess.array.ShortArray",
      "net.imglib2.position.transform.AbstractPositionableTransform",
      "net.imglib2.position.transform.Floor",
      "net.imglib2.interpolation.randomaccess.FloorInterpolator",
      "net.imglib2.type.logic.BitType",
      "net.imglib2.img.basictypeaccess.array.AbstractLongArray",
      "net.imglib2.img.basictypeaccess.array.LongArray",
      "net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolatorFactory",
      "net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator",
      "net.imglib2.FinalInterval",
      "net.imglib2.img.array.ArrayImgs",
      "net.imglib2.img.array.ArrayImgFactory",
      "net.imglib2.exception.InvalidDimensionsException",
      "net.imglib2.view.composite.AbstractComposite",
      "net.imglib2.view.composite.AbstractNumericComposite",
      "net.imglib2.view.composite.RealComposite",
      "net.imglib2.view.composite.AbstractNumericComposite$1",
      "net.imglib2.img.list.ListImgFactory",
      "net.imglib2.img.list.AbstractListImg",
      "net.imglib2.img.list.ListImg"
    );
  }
}
