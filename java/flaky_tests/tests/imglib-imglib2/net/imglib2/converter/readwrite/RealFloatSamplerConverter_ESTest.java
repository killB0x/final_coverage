/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:53:29 GMT 2022
 */

package net.imglib2.converter.readwrite;

import org.junit.Test;
import static org.junit.Assert.*;
import net.imglib2.PointSample;
import net.imglib2.converter.readwrite.RealFloatSamplerConverter;
import net.imglib2.img.basictypeaccess.volatiles.array.DirtyVolatileLongArray;
import net.imglib2.type.numeric.integer.Unsigned2BitType;
import net.imglib2.type.numeric.real.FloatType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RealFloatSamplerConverter_ESTest extends RealFloatSamplerConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RealFloatSamplerConverter<Unsigned2BitType> realFloatSamplerConverter0 = new RealFloatSamplerConverter<Unsigned2BitType>();
      long[] longArray0 = new long[2];
      DirtyVolatileLongArray dirtyVolatileLongArray0 = new DirtyVolatileLongArray(longArray0, true);
      Unsigned2BitType unsigned2BitType0 = new Unsigned2BitType(dirtyVolatileLongArray0);
      PointSample<Unsigned2BitType> pointSample0 = PointSample.wrap(unsigned2BitType0, longArray0);
      FloatType floatType0 = realFloatSamplerConverter0.convert(pointSample0);
      floatType0.mul((-653.81));
      assertEquals(0.0F, floatType0.getPhaseFloat(), 0.01F);
  }
}
