/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 17:24:40 GMT 2022
 */

package net.imglib2.converter.readwrite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.IterableRealInterval;
import net.imglib2.Point;
import net.imglib2.PointSampleList;
import net.imglib2.RealPointSampleList;
import net.imglib2.converter.readwrite.CompositeARGBSamplerConverter;
import net.imglib2.converter.readwrite.SamplerConverter;
import net.imglib2.converter.readwrite.WriteConvertedIterableRealInterval;
import net.imglib2.converter.readwrite.WriteConvertedRealCursor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WriteConvertedIterableRealInterval_ESTest extends WriteConvertedIterableRealInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RealPointSampleList<CompositeARGBSamplerConverter> realPointSampleList0 = new RealPointSampleList<CompositeARGBSamplerConverter>(0);
      SamplerConverter<CompositeARGBSamplerConverter, CompositeARGBSamplerConverter> samplerConverter0 = (SamplerConverter<CompositeARGBSamplerConverter, CompositeARGBSamplerConverter>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(samplerConverter0).convert(any(net.imglib2.Sampler.class));
      WriteConvertedIterableRealInterval<CompositeARGBSamplerConverter, CompositeARGBSamplerConverter> writeConvertedIterableRealInterval0 = new WriteConvertedIterableRealInterval<CompositeARGBSamplerConverter, CompositeARGBSamplerConverter>(realPointSampleList0, samplerConverter0);
      WriteConvertedRealCursor<CompositeARGBSamplerConverter, CompositeARGBSamplerConverter> writeConvertedRealCursor0 = writeConvertedIterableRealInterval0.localizingCursor();
      assertNotNull(writeConvertedRealCursor0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PointSampleList<CompositeARGBSamplerConverter> pointSampleList0 = new PointSampleList<CompositeARGBSamplerConverter>(739);
      SamplerConverter<CompositeARGBSamplerConverter, Point> samplerConverter0 = (SamplerConverter<CompositeARGBSamplerConverter, Point>) mock(SamplerConverter.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(samplerConverter0).convert(any(net.imglib2.Sampler.class));
      WriteConvertedIterableRealInterval<CompositeARGBSamplerConverter, Point> writeConvertedIterableRealInterval0 = new WriteConvertedIterableRealInterval<CompositeARGBSamplerConverter, Point>(pointSampleList0, samplerConverter0);
      WriteConvertedRealCursor<CompositeARGBSamplerConverter, Point> writeConvertedRealCursor0 = writeConvertedIterableRealInterval0.cursor();
      assertNotNull(writeConvertedRealCursor0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WriteConvertedIterableRealInterval<Point, CompositeARGBSamplerConverter> writeConvertedIterableRealInterval0 = new WriteConvertedIterableRealInterval<Point, CompositeARGBSamplerConverter>((IterableRealInterval<Point>) null, (SamplerConverter<? super Point, CompositeARGBSamplerConverter>) null);
      // Undeclared exception!
      try { 
        writeConvertedIterableRealInterval0.cursor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.readwrite.WriteConvertedIterableRealInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WriteConvertedIterableRealInterval<Point, CompositeARGBSamplerConverter> writeConvertedIterableRealInterval0 = new WriteConvertedIterableRealInterval<Point, CompositeARGBSamplerConverter>((IterableRealInterval<Point>) null, (SamplerConverter<? super Point, CompositeARGBSamplerConverter>) null);
      // Undeclared exception!
      try { 
        writeConvertedIterableRealInterval0.localizingCursor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.readwrite.WriteConvertedIterableRealInterval", e);
      }
  }
}
