/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:26:59 GMT 2022
 */

package net.imglib2.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.converter.TypeIdentity;
import net.imglib2.img.basictypeaccess.volatiles.array.VolatileFloatArray;
import net.imglib2.type.volatiles.VolatileFloatType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeIdentity_ESTest extends TypeIdentity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeIdentity<VolatileFloatType> typeIdentity0 = new TypeIdentity<VolatileFloatType>();
      VolatileFloatType volatileFloatType0 = new VolatileFloatType();
      typeIdentity0.convert(volatileFloatType0, volatileFloatType0);
      assertEquals((-3.4028234663852886E38), volatileFloatType0.getMinValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeIdentity<VolatileFloatType> typeIdentity0 = new TypeIdentity<VolatileFloatType>();
      VolatileFloatType volatileFloatType0 = new VolatileFloatType((-1.0F));
      float[] floatArray0 = new float[5];
      VolatileFloatArray volatileFloatArray0 = new VolatileFloatArray(floatArray0, false);
      VolatileFloatArray volatileFloatArray1 = volatileFloatArray0.createArray(0, false);
      VolatileFloatType volatileFloatType1 = new VolatileFloatType(volatileFloatArray1);
      // Undeclared exception!
      try { 
        typeIdentity0.convert(volatileFloatType0, volatileFloatType1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.img.basictypeaccess.array.AbstractFloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeIdentity<VolatileFloatType> typeIdentity0 = new TypeIdentity<VolatileFloatType>();
      // Undeclared exception!
      try { 
        typeIdentity0.convert((VolatileFloatType) null, (VolatileFloatType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.converter.TypeIdentity", e);
      }
  }
}
