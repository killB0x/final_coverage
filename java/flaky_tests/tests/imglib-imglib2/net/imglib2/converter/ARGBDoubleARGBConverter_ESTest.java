/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 19:12:07 GMT 2022
 */

package net.imglib2.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.converter.ARGBDoubleARGBConverter;
import net.imglib2.img.NativeImg;
import net.imglib2.img.basictypeaccess.DoubleAccess;
import net.imglib2.type.numeric.ARGBDoubleType;
import net.imglib2.type.numeric.ARGBType;
import net.imglib2.type.numeric.NativeARGBDoubleType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ARGBDoubleARGBConverter_ESTest extends ARGBDoubleARGBConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ARGBDoubleARGBConverter<ARGBDoubleType> aRGBDoubleARGBConverter0 = new ARGBDoubleARGBConverter<ARGBDoubleType>();
      ARGBDoubleType aRGBDoubleType0 = new ARGBDoubleType();
      ARGBType aRGBType0 = new ARGBType();
      aRGBDoubleARGBConverter0.convert(aRGBDoubleType0, aRGBType0);
      assertEquals(0.0, aRGBDoubleType0.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ARGBDoubleARGBConverter<NativeARGBDoubleType> aRGBDoubleARGBConverter0 = new ARGBDoubleARGBConverter<NativeARGBDoubleType>();
      NativeARGBDoubleType nativeARGBDoubleType0 = new NativeARGBDoubleType((NativeImg<?, ? extends DoubleAccess>) null);
      ARGBType aRGBType0 = new ARGBType();
      // Undeclared exception!
      try { 
        aRGBDoubleARGBConverter0.convert(nativeARGBDoubleType0, aRGBType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.type.numeric.NativeARGBDoubleType", e);
      }
  }
}
