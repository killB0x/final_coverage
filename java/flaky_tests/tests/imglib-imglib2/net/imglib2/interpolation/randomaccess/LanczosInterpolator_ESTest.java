/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:54:36 GMT 2022
 */

package net.imglib2.interpolation.randomaccess;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.BiConsumer;
import java.util.function.Supplier;
import net.imglib2.Localizable;
import net.imglib2.RandomAccessible;
import net.imglib2.img.list.ListImg;
import net.imglib2.interpolation.randomaccess.LanczosInterpolator;
import net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory;
import net.imglib2.position.FunctionRandomAccessible;
import net.imglib2.type.numeric.integer.UnsignedIntType;
import net.imglib2.view.SubsampleView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LanczosInterpolator_ESTest extends LanczosInterpolator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      unsignedIntType0.pow(unsignedIntType0);
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>();
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      lanczosInterpolator0.get();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(17, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>();
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      // Undeclared exception!
      lanczosInterpolator0.get();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0, unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>(0, (-4235.02252971), 10.0);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator1 = new LanczosInterpolator<UnsignedIntType>(lanczosInterpolator0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>();
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      lanczosInterpolator0.accumulate((-461));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = new LanczosInterpolator<UnsignedIntType>(functionRandomAccessible0, 0, true, 2481.00378089, (-1823.732));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>();
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      lanczosInterpolator0.resetKernel();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>();
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      // Undeclared exception!
      try { 
        lanczosInterpolator0.accumulate(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.interpolation.randomaccess.LanczosInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[2];
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(0L);
      ListImg<UnsignedIntType> listImg0 = new ListImg<UnsignedIntType>(longArray0, unsignedIntType0);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = new LanczosInterpolator<UnsignedIntType>(listImg0, 2681, false, 2681, 2681);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = null;
      try {
        lanczosInterpolator0 = new LanczosInterpolator<UnsignedIntType>(functionRandomAccessible0, 0, true, 0, 368.20704);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.interpolation.randomaccess.LanczosInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[2];
      UnsignedIntType unsignedIntType0 = new UnsignedIntType(0L);
      ListImg<UnsignedIntType> listImg0 = new ListImg<UnsignedIntType>(longArray0, unsignedIntType0);
      SubsampleView<UnsignedIntType> subsampleView0 = new SubsampleView<UnsignedIntType>(listImg0, longArray0);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = null;
      try {
        lanczosInterpolator0 = new LanczosInterpolator<UnsignedIntType>(subsampleView0, 868, false, 2.9, (-1248.885634615352));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>(0, (-1940.511941));
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      UnsignedIntType unsignedIntType1 = lanczosInterpolator0.get();
      assertEquals(4294965355L, unsignedIntType1.getIntegerLong());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BiConsumer<Localizable, Object> biConsumer0 = (BiConsumer<Localizable, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      Supplier<UnsignedIntType> supplier0 = (Supplier<UnsignedIntType>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(unsignedIntType0).when(supplier0).get();
      FunctionRandomAccessible<UnsignedIntType> functionRandomAccessible0 = new FunctionRandomAccessible<UnsignedIntType>(0, biConsumer0, supplier0);
      LanczosInterpolatorFactory<UnsignedIntType> lanczosInterpolatorFactory0 = new LanczosInterpolatorFactory<UnsignedIntType>();
      lanczosInterpolatorFactory0.setClipping(false);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = lanczosInterpolatorFactory0.create((RandomAccessible<UnsignedIntType>) functionRandomAccessible0);
      UnsignedIntType unsignedIntType1 = lanczosInterpolator0.get();
      assertEquals(0, unsignedIntType1.getInteger());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[2];
      UnsignedIntType unsignedIntType0 = new UnsignedIntType();
      ListImg<UnsignedIntType> listImg0 = new ListImg<UnsignedIntType>(longArray0, unsignedIntType0);
      SubsampleView<UnsignedIntType> subsampleView0 = new SubsampleView<UnsignedIntType>(listImg0, longArray0);
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = null;
      try {
        lanczosInterpolator0 = new LanczosInterpolator<UnsignedIntType>(subsampleView0, (-3504), false, 0L, 0L);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -35038
         //
         verifyException("net.imglib2.interpolation.randomaccess.LanczosInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LanczosInterpolator<UnsignedIntType> lanczosInterpolator0 = null;
      try {
        lanczosInterpolator0 = new LanczosInterpolator<UnsignedIntType>((LanczosInterpolator<UnsignedIntType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.interpolation.randomaccess.LanczosInterpolator", e);
      }
  }
}
