/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:05:15 GMT 2022
 */

package net.imglib2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Supplier;
import net.imglib2.Dimensions;
import net.imglib2.FinalDimensions;
import net.imglib2.FinalInterval;
import net.imglib2.Point;
import net.imglib2.PointSampleList;
import net.imglib2.Positionable;
import net.imglib2.RealPoint;
import net.imglib2.RealPointSample;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Dimensions_ESTest extends Dimensions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 2675L;
      longArray0[1] = 1L;
      boolean boolean0 = Dimensions.allPositive(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(2);
      long[] longArray0 = pointSampleList0.dimensionsAsLongArray();
      long[] longArray1 = Dimensions.verifyAllPositive(longArray0);
      assertEquals(2, longArray1.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (long) 1822;
      longArray0[1] = (long) 1822;
      longArray0[2] = (long) 1822;
      longArray0[3] = (long) 1822;
      longArray0[4] = (long) 1822;
      longArray0[5] = (long) 1822;
      longArray0[6] = (long) 1822;
      longArray0[7] = (long) 1822;
      long[] longArray1 = Dimensions.verify(longArray0);
      assertArrayEquals(new long[] {1822L, 1822L, 1822L, 1822L, 1822L, 1822L, 1822L, 1822L}, longArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 4;
      intArray0[1] = 4;
      intArray0[2] = 4;
      intArray0[3] = 4;
      int[] intArray1 = Dimensions.verify(intArray0);
      assertSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[1];
      FinalDimensions finalDimensions0 = new FinalDimensions(intArray0);
      Point point0 = finalDimensions0.dimensionsAsPoint();
      assertEquals(1, point0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[1];
      FinalInterval finalInterval0 = FinalInterval.createMinSize(longArray0);
      long[] longArray1 = finalInterval0.dimensionsAsLongArray();
      assertNotSame(longArray1, longArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dimensions.verifyAllPositive((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dimensions.verifyAllPositive((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PointSampleList<Object> pointSampleList0 = new PointSampleList<Object>(3420);
      long[] longArray0 = pointSampleList0.minAsLongArray();
      long[] longArray1 = Dimensions.verify(longArray0);
      assertEquals(3420, longArray1.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FinalDimensions finalDimensions0 = FinalDimensions.wrap((long[]) null);
      // Undeclared exception!
      try { 
        finalDimensions0.dimensionsAsPoint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.FinalDimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[0];
      long[] longArray1 = new long[1];
      FinalInterval finalInterval0 = new FinalInterval(longArray1, longArray0, false);
      // Undeclared exception!
      try { 
        finalInterval0.dimensionsAsPoint();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[0];
      FinalDimensions finalDimensions0 = FinalDimensions.wrap(longArray0);
      // Undeclared exception!
      try { 
        finalDimensions0.dimensions((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.FinalDimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[0];
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(10);
      // Undeclared exception!
      try { 
        pointSampleList0.dimensions(longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.AbstractInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PointSampleList<Integer> pointSampleList0 = new PointSampleList<Integer>(5368);
      RealPoint realPoint0 = new RealPoint(5368);
      pointSampleList0.dimensions((Positionable) realPoint0);
      assertEquals(5368, realPoint0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[1];
      FinalDimensions finalDimensions0 = new FinalDimensions(intArray0);
      // Undeclared exception!
      try { 
        finalDimensions0.dimensions((Positionable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[4];
      FinalInterval finalInterval0 = new FinalInterval(longArray0);
      long[] longArray1 = new long[2];
      Point point0 = Point.wrap(longArray1);
      // Undeclared exception!
      try { 
        finalInterval0.dimensions((Positionable) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("net.imglib2.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dimensions.allPositive((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dimensions.allPositive((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[8];
      try { 
        Dimensions.verifyAllPositive(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected only positive dimensions but got: [0, 0, 0, 0, 0, 0, 0, 0]
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[1];
      try { 
        Dimensions.verifyAllPositive(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected only positive dimensions but got: [0]
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 1822;
      intArray0[1] = 1822;
      intArray0[2] = 1822;
      intArray0[3] = 1822;
      intArray0[4] = 1822;
      intArray0[5] = 1822;
      intArray0[6] = 1822;
      intArray0[7] = 1822;
      intArray0[8] = 1822;
      boolean boolean0 = Dimensions.allPositive(intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[8];
      boolean boolean0 = Dimensions.allPositive(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long[] longArray0 = new long[0];
      boolean boolean0 = Dimensions.allPositive(longArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FinalDimensions finalDimensions0 = FinalDimensions.wrap((long[]) null);
      // Undeclared exception!
      try { 
        finalDimensions0.dimensionsAsLongArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.FinalDimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[0];
      try { 
        Dimensions.verify(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Dimensions are zero length.
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dimensions.verify((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.util.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[0];
      try { 
        Dimensions.verify(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Dimensions are zero length.
         //
         verifyException("net.imglib2.Dimensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dimensions.verify((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.exception.InvalidDimensionsException", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 2147483639;
      int[] intArray1 = Dimensions.verifyAllPositive(intArray0);
      assertEquals(1, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[0];
      int[] intArray1 = Dimensions.verifyAllPositive(intArray0);
      assertArrayEquals(new int[] {}, intArray1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[0];
      long[] longArray1 = Dimensions.verifyAllPositive(longArray0);
      assertSame(longArray1, longArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long[] longArray0 = new long[2];
      Supplier<PointSampleList.PointSampleListCursor> supplier0 = (Supplier<PointSampleList.PointSampleListCursor>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[6];
      RealPointSample<PointSampleList.PointSampleListCursor> realPointSample0 = new RealPointSample<PointSampleList.PointSampleListCursor>(supplier0, doubleArray0, false);
      FinalInterval finalInterval0 = FinalInterval.createMinMax(longArray0);
      finalInterval0.dimensions((Positionable) realPointSample0);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[0];
      FinalInterval finalInterval0 = new FinalInterval(longArray0);
      Point point0 = finalInterval0.dimensionsAsPoint();
      assertEquals(0, point0.numDimensions());
  }
}
