/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:22:44 GMT 2022
 */

package net.imglib2.outofbounds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.PriorityQueue;
import net.imglib2.Localizable;
import net.imglib2.RandomAccessibleInterval;
import net.imglib2.img.list.ListImg;
import net.imglib2.outofbounds.OutOfBoundsBorder;
import net.imglib2.util.Grid;
import net.imglib2.view.IntervalView;
import net.imglib2.view.SubsampleIntervalView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OutOfBoundsBorder_ESTest extends OutOfBoundsBorder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[1] = 2628L;
      ListImg<Grid.CellIntervals> listImg0 = new ListImg<Grid.CellIntervals>(longArray0, (Grid.CellIntervals) null);
      long[] longArray1 = new long[4];
      SubsampleIntervalView<Grid.CellIntervals> subsampleIntervalView0 = new SubsampleIntervalView<Grid.CellIntervals>(listImg0, longArray1);
      OutOfBoundsBorder<Grid.CellIntervals> outOfBoundsBorder0 = new OutOfBoundsBorder<Grid.CellIntervals>((RandomAccessibleInterval<Grid.CellIntervals>) subsampleIntervalView0);
      outOfBoundsBorder0.fwd(1);
      assertFalse(outOfBoundsBorder0.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[5];
      ListImg<Grid.CellIntervals> listImg0 = new ListImg<Grid.CellIntervals>(longArray0, (Grid.CellIntervals) null);
      OutOfBoundsBorder<Grid.CellIntervals> outOfBoundsBorder0 = new OutOfBoundsBorder<Grid.CellIntervals>((RandomAccessibleInterval<Grid.CellIntervals>) listImg0);
      assertFalse(outOfBoundsBorder0.isOutOfBounds());
      
      int[] intArray0 = new int[5];
      outOfBoundsBorder0.setPosition(intArray0);
      assertTrue(outOfBoundsBorder0.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[5];
      ListImg<Grid.CellIntervals> listImg0 = new ListImg<Grid.CellIntervals>(longArray0, (Grid.CellIntervals) null);
      SubsampleIntervalView<Grid.CellIntervals> subsampleIntervalView0 = new SubsampleIntervalView<Grid.CellIntervals>(listImg0, longArray0);
      OutOfBoundsBorder<Grid.CellIntervals> outOfBoundsBorder0 = new OutOfBoundsBorder<Grid.CellIntervals>((RandomAccessibleInterval<Grid.CellIntervals>) subsampleIntervalView0);
      assertFalse(outOfBoundsBorder0.isOutOfBounds());
      
      outOfBoundsBorder0.setPosition((Localizable) outOfBoundsBorder0);
      assertTrue(outOfBoundsBorder0.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[5];
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(linkedHashSet0, longArray0);
      OutOfBoundsBorder<Object> outOfBoundsBorder0 = new OutOfBoundsBorder<Object>((RandomAccessibleInterval<Object>) listImg0);
      assertFalse(outOfBoundsBorder0.isOutOfBounds());
      
      outOfBoundsBorder0.move((-1L), 0);
      assertTrue(outOfBoundsBorder0.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[5];
      ListImg<Grid.CellIntervals> listImg0 = new ListImg<Grid.CellIntervals>(longArray0, (Grid.CellIntervals) null);
      OutOfBoundsBorder<Grid.CellIntervals> outOfBoundsBorder0 = new OutOfBoundsBorder<Grid.CellIntervals>((RandomAccessibleInterval<Grid.CellIntervals>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsBorder0.setPosition((Localizable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OutOfBoundsBorder<RandomAccessibleInterval<Grid.CellIntervals>> outOfBoundsBorder0 = null;
      try {
        outOfBoundsBorder0 = new OutOfBoundsBorder<RandomAccessibleInterval<Grid.CellIntervals>>((OutOfBoundsBorder<RandomAccessibleInterval<Grid.CellIntervals>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[5];
      PriorityQueue<Object> priorityQueue0 = new PriorityQueue<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(priorityQueue0, longArray0);
      SubsampleIntervalView<Object> subsampleIntervalView0 = new SubsampleIntervalView<Object>(listImg0, (-3078L));
      long[] longArray1 = new long[3];
      IntervalView<Object> intervalView0 = new IntervalView<Object>(subsampleIntervalView0, longArray0, longArray1);
      OutOfBoundsBorder<Object> outOfBoundsBorder0 = null;
      try {
        outOfBoundsBorder0 = new OutOfBoundsBorder<Object>((RandomAccessibleInterval<Object>) intervalView0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("net.imglib2.AbstractInterval", e);
      }
  }
}
