/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:06:14 GMT 2022
 */

package net.imglib2.outofbounds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Stack;
import net.imglib2.Localizable;
import net.imglib2.Point;
import net.imglib2.PointSampleList;
import net.imglib2.Positionable;
import net.imglib2.RandomAccessibleInterval;
import net.imglib2.img.basictypeaccess.nio.ByteBufferAccess;
import net.imglib2.img.list.ListImg;
import net.imglib2.outofbounds.OutOfBoundsConstantValue;
import net.imglib2.util.Grid;
import net.imglib2.view.IntervalView;
import net.imglib2.view.IterableRandomAccessibleInterval;
import net.imglib2.view.SubsampleIntervalView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractOutOfBoundsValue_ESTest extends AbstractOutOfBoundsValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[8];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      long[] longArray1 = new long[1];
      longArray1[0] = 3564L;
      outOfBoundsConstantValue0.setPosition(longArray1);
      outOfBoundsConstantValue0.bck(0);
      assertEquals(8, outOfBoundsConstantValue0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 1878L;
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) 0L);
      outOfBoundsConstantValue0.fwd(0);
      assertEquals(8, outOfBoundsConstantValue0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[8];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) null);
      PointSampleList<RandomAccessibleInterval<Grid.CellIntervals>> pointSampleList0 = new PointSampleList<RandomAccessibleInterval<Grid.CellIntervals>>(799);
      Point point0 = pointSampleList0.minAsPoint();
      outOfBoundsConstantValue0.setPosition((Localizable) point0);
      outOfBoundsConstantValue0.fwd(0);
      assertEquals(8, outOfBoundsConstantValue0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[3];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      // Undeclared exception!
      try { 
        outOfBoundsConstantValue0.setPosition((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[6];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      // Undeclared exception!
      try { 
        outOfBoundsConstantValue0.setPosition((Localizable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[6];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      // Undeclared exception!
      try { 
        outOfBoundsConstantValue0.move((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[7];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      // Undeclared exception!
      try { 
        outOfBoundsConstantValue0.fwd((-1197));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1197 out of bounds for length 7
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[3];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      // Undeclared exception!
      try { 
        outOfBoundsConstantValue0.bck(508);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 508 out of bounds for length 3
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[6];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      outOfBoundsConstantValue0.setPosition(64L, 0);
      assertFalse(stack0.contains(64L));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[3];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      ByteBufferAccess byteBufferAccess0 = new ByteBufferAccess(11);
      ListImg<ByteBufferAccess> listImg1 = new ListImg<ByteBufferAccess>(longArray0, byteBufferAccess0);
      IntervalView<ByteBufferAccess> intervalView0 = new IntervalView<ByteBufferAccess>(listImg1, listImg0);
      SubsampleIntervalView<ByteBufferAccess> subsampleIntervalView0 = new SubsampleIntervalView<ByteBufferAccess>(intervalView0, (-364));
      IterableRandomAccessibleInterval<ByteBufferAccess> iterableRandomAccessibleInterval0 = IterableRandomAccessibleInterval.create((RandomAccessibleInterval<ByteBufferAccess>) subsampleIntervalView0);
      iterableRandomAccessibleInterval0.max((Positionable) outOfBoundsConstantValue0);
      assertEquals(0L, iterableRandomAccessibleInterval0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[2];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsConstantValue0.move(2, 2147);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147 out of bounds for length 2
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[7];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      outOfBoundsConstantValue0.bck(0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue1 = new OutOfBoundsConstantValue<Object>(outOfBoundsConstantValue0);
      outOfBoundsConstantValue1.bck(0);
      assertNotSame(outOfBoundsConstantValue0, outOfBoundsConstantValue1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 1878L;
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) 0L);
      outOfBoundsConstantValue0.setPosition(longArray0);
      outOfBoundsConstantValue0.bck(0);
      assertEquals(8, outOfBoundsConstantValue0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[6];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      outOfBoundsConstantValue0.setPositionAndGet(longArray0);
      outOfBoundsConstantValue0.fwd(0);
      assertEquals(6, outOfBoundsConstantValue0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[6];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      outOfBoundsConstantValue0.bck(0);
      outOfBoundsConstantValue0.fwd(0);
      assertEquals(6, outOfBoundsConstantValue0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[3];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      boolean boolean0 = outOfBoundsConstantValue0.isOutOfBounds();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[3];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsConstantValue<Object> outOfBoundsConstantValue0 = new OutOfBoundsConstantValue<Object>((RandomAccessibleInterval<Object>) listImg0, (Object) stack0);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        outOfBoundsConstantValue0.move(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsValue", e);
      }
  }
}
