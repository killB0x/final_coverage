/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:25:19 GMT 2022
 */

package net.imglib2.outofbounds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.imglib2.Positionable;
import net.imglib2.RandomAccessibleInterval;
import net.imglib2.img.list.ListImg;
import net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing;
import net.imglib2.type.logic.BitType;
import net.imglib2.type.logic.BoolType;
import net.imglib2.type.logic.NativeBoolType;
import net.imglib2.view.SubsampleIntervalView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OutOfBoundsMirrorExpWindowing_ESTest extends OutOfBoundsMirrorExpWindowing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 955;
      int[] intArray0 = new int[4];
      intArray0[0] = 955;
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 955);
      float float0 = outOfBoundsMirrorExpWindowing0.getWeight(longArray0);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[7];
      BoolType boolType0 = new BoolType();
      long[] longArray0 = new long[5];
      longArray0[0] = (long) 1;
      longArray0[1] = (long) 1;
      longArray0[2] = (long) 1;
      longArray0[3] = (long) 1;
      longArray0[4] = 1406L;
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 1);
      listImg0.dimensions((Positionable) outOfBoundsMirrorExpWindowing0);
      String string0 = outOfBoundsMirrorExpWindowing0.toString();
      assertEquals("(1, 1, 1, 1, 1406) = 0", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 955;
      int[] intArray0 = new int[7];
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      SubsampleIntervalView<BoolType> subsampleIntervalView0 = new SubsampleIntervalView<BoolType>(listImg0, 955L);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) subsampleIntervalView0, intArray0, (-1777.2024F));
      float float0 = outOfBoundsMirrorExpWindowing0.getWeight(longArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 955;
      float[][] floatArray0 = OutOfBoundsMirrorExpWindowing.preComputeWeights(1, intArray0, 872.0892F);
      assertEquals(1, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[19];
      BoolType boolType0 = new BoolType();
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 1;
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, Float.NaN);
      assertEquals(1, outOfBoundsMirrorExpWindowing0.numDimensions());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float[][] floatArray0 = OutOfBoundsMirrorExpWindowing.preComputeWeights(0, (int[]) null, 0);
      assertEquals(0, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        OutOfBoundsMirrorExpWindowing.preComputeWeights(955, (int[]) null, 955);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        OutOfBoundsMirrorExpWindowing.preComputeWeights((-1576), intArray0, 1.0E-4F);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1576
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        OutOfBoundsMirrorExpWindowing.preComputeWeights(5, intArray0, (-1576));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 955;
      int[] intArray0 = new int[4];
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 955);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorExpWindowing0.getWeight((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[19];
      BoolType boolType0 = new BoolType();
      long[] longArray0 = new long[5];
      longArray0[0] = (long) 5;
      longArray0[1] = (long) 5;
      longArray0[2] = (long) 5;
      longArray0[3] = (long) 5;
      longArray0[4] = (long) 5;
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 5L);
      long[] longArray1 = new long[2];
      // Undeclared exception!
      try { 
        outOfBoundsMirrorExpWindowing0.getWeight(longArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutOfBoundsMirrorExpWindowing<NativeBoolType> outOfBoundsMirrorExpWindowing0 = null;
      try {
        outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<NativeBoolType>((OutOfBoundsMirrorExpWindowing<NativeBoolType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutOfBoundsMirrorExpWindowing<BitType> outOfBoundsMirrorExpWindowing0 = null;
      try {
        outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BitType>((RandomAccessibleInterval<BitType>) null, (int[]) null, (float) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[7];
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = null;
      try {
        outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 0L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 955;
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      int[] intArray0 = new int[0];
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = null;
      try {
        outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, 1.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 955;
      int[] intArray0 = new int[7];
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      SubsampleIntervalView<BoolType> subsampleIntervalView0 = new SubsampleIntervalView<BoolType>(listImg0, 955L);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) subsampleIntervalView0, intArray0, (-1777.2024F));
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing1 = new OutOfBoundsMirrorExpWindowing<BoolType>(outOfBoundsMirrorExpWindowing0);
      assertFalse(outOfBoundsMirrorExpWindowing1.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 955;
      int[] intArray0 = new int[7];
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 955L);
      long[] longArray1 = new long[4];
      longArray1[0] = (-2874L);
      float float0 = outOfBoundsMirrorExpWindowing0.getWeight(longArray1);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 946;
      int[] intArray0 = new int[7];
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 946);
      BoolType boolType1 = outOfBoundsMirrorExpWindowing0.get();
      assertEquals(1.0, boolType1.getMaxValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 955;
      float[][] floatArray0 = OutOfBoundsMirrorExpWindowing.preComputeWeights(1, intArray0, 1.0F);
      assertEquals(1, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 955;
      int[] intArray0 = new int[7];
      BoolType boolType0 = new BoolType();
      ListImg<BoolType> listImg0 = new ListImg<BoolType>(longArray0, boolType0);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing0 = new OutOfBoundsMirrorExpWindowing<BoolType>((RandomAccessibleInterval<BoolType>) listImg0, intArray0, (float) 6);
      OutOfBoundsMirrorExpWindowing<BoolType> outOfBoundsMirrorExpWindowing1 = outOfBoundsMirrorExpWindowing0.copy();
      assertEquals(1, outOfBoundsMirrorExpWindowing1.numDimensions());
  }
}
