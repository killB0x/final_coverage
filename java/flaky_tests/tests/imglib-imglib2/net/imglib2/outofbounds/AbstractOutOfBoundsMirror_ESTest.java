/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:45:25 GMT 2022
 */

package net.imglib2.outofbounds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import net.imglib2.RandomAccessibleInterval;
import net.imglib2.img.list.ListImg;
import net.imglib2.outofbounds.OutOfBoundsMirrorDoubleBoundary;
import net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary;
import net.imglib2.view.IterableRandomAccessibleInterval;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractOutOfBoundsMirror_ESTest extends AbstractOutOfBoundsMirror_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long[] longArray0 = new long[8];
      PriorityQueue<Object> priorityQueue0 = new PriorityQueue<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(priorityQueue0, longArray0);
      IterableRandomAccessibleInterval<Object> iterableRandomAccessibleInterval0 = IterableRandomAccessibleInterval.create((RandomAccessibleInterval<Object>) listImg0);
      OutOfBoundsMirrorDoubleBoundary<Object> outOfBoundsMirrorDoubleBoundary0 = new OutOfBoundsMirrorDoubleBoundary<Object>((RandomAccessibleInterval<Object>) iterableRandomAccessibleInterval0);
      int int0 = outOfBoundsMirrorDoubleBoundary0.numDimensions();
      assertEquals(8, int0);
      assertFalse(outOfBoundsMirrorDoubleBoundary0.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[7];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      long long0 = outOfBoundsMirrorSingleBoundary0.getLongPosition(0);
      assertFalse(outOfBoundsMirrorSingleBoundary0.isOutOfBounds());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[7];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      int int0 = outOfBoundsMirrorSingleBoundary0.getIntPosition(6);
      assertFalse(outOfBoundsMirrorSingleBoundary0.isOutOfBounds());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[9];
      Vector<Object> vector0 = new Vector<Object>();
      long[] longArray1 = new long[8];
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray1);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.setPosition(longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 8 out of bounds for length 8
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[6];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.setPosition((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[9];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.setPosition((-1803), (-1803));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1803 out of bounds for length 9
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[11];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.localize((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[8];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.localize(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[23];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.getFloatPosition((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 23
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[22];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.getLongPosition(31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 31 out of bounds for length 22
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[6];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.move(11, 11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 11 out of bounds for length 6
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[1];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(linkedList0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.move((-1897L), (-538));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -538 out of bounds for length 1
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[7];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      int[] intArray0 = new int[0];
      outOfBoundsMirrorSingleBoundary0.setPosition(intArray0);
      assertFalse(outOfBoundsMirrorSingleBoundary0.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[9];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      outOfBoundsMirrorSingleBoundary0.checkOutOfBounds();
      assertFalse(outOfBoundsMirrorSingleBoundary0.isOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[8];
      Stack<Object> stack0 = new Stack<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(stack0, longArray0);
      int[] intArray0 = new int[9];
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.setPosition(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 8 out of bounds for length 8
         //
         verifyException("net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[11];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(linkedList0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.toString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[7];
      Vector<Object> vector0 = new Vector<Object>();
      ListImg<Object> listImg0 = new ListImg<Object>(vector0, longArray0);
      OutOfBoundsMirrorSingleBoundary<Object> outOfBoundsMirrorSingleBoundary0 = new OutOfBoundsMirrorSingleBoundary<Object>((RandomAccessibleInterval<Object>) listImg0);
      // Undeclared exception!
      try { 
        outOfBoundsMirrorSingleBoundary0.getIntPosition(1339);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1339 out of bounds for length 7
         //
         verifyException("net.imglib2.outofbounds.AbstractOutOfBoundsMirror", e);
      }
  }
}
