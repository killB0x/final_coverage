/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:56:25 GMT 2022
 */

package org.addition.epanet.network.structures;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.addition.epanet.network.structures.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Field_ESTest extends Field_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Field field0 = new Field("s=y");
      assertFalse(field0.isEnabled());
      
      field0.setEnabled(true);
      boolean boolean0 = field0.isEnabled();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Field field0 = new Field("s=y");
      field0.setUnits("");
      field0.getUnits();
      assertEquals(2, field0.getPrecision());
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Field field0 = new Field((String) null);
      Field.RangeType field_RangeType0 = Field.RangeType.PREC;
      double double0 = field0.getRptLim(field_RangeType0);
      assertEquals(2, field0.getPrecision());
      assertEquals(0.0, double0, 0.01);
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Field field0 = new Field("s=y");
      Field.RangeType field_RangeType0 = Field.RangeType.HI;
      double double0 = field0.getRptLim(field_RangeType0);
      assertEquals(2, field0.getPrecision());
      assertEquals((-1.0E20), double0, 0.01);
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Field field0 = new Field("s=y");
      assertEquals(2, field0.getPrecision());
      
      field0.setPrecision(0);
      int int0 = field0.getPrecision();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Field field0 = new Field("e'+Di$,EpxZ");
      field0.setPrecision((-771));
      int int0 = field0.getPrecision();
      assertEquals((-771), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Field field0 = new Field("");
      field0.setName((String) null);
      field0.getName();
      assertEquals(2, field0.getPrecision());
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Field field0 = new Field((String) null);
      field0.setName("");
      field0.getName();
      assertEquals(2, field0.getPrecision());
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Field field0 = new Field("");
      // Undeclared exception!
      try { 
        field0.getRptLim((Field.RangeType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.structures.Field", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Field field0 = new Field("s=y");
      Field.RangeType field_RangeType0 = Field.RangeType.HI;
      field0.setRptLim(field_RangeType0, (-3433.8988873794474));
      assertEquals(2, field0.getPrecision());
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Field field0 = new Field("s=y");
      field0.setUnits("s=y");
      field0.getUnits();
      assertFalse(field0.isEnabled());
      assertEquals(2, field0.getPrecision());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Field field0 = new Field("s=y");
      field0.getUnits();
      assertEquals(2, field0.getPrecision());
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Field field0 = new Field("$VALUE");
      field0.getName();
      assertFalse(field0.isEnabled());
      assertEquals(2, field0.getPrecision());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Field field0 = new Field("e'+Di$,EpxZ");
      Field.RangeType field_RangeType0 = Field.RangeType.LOW;
      double double0 = field0.getRptLim(field_RangeType0);
      assertFalse(field0.isEnabled());
      assertEquals(1.0E20, double0, 0.01);
      assertEquals(2, field0.getPrecision());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Field field0 = new Field("e'+Di$,EpxZ");
      boolean boolean0 = field0.isEnabled();
      assertEquals(2, field0.getPrecision());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Field field0 = new Field("e'+Di$,EpxZ");
      int int0 = field0.getPrecision();
      assertFalse(field0.isEnabled());
      assertEquals(2, int0);
  }
}
