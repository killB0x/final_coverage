/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:31:09 GMT 2022
 */

package org.addition.epanet.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.addition.epanet.network.FieldsMap;
import org.addition.epanet.network.PropertiesMap;
import org.addition.epanet.network.structures.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldsMap_ESTest extends FieldsMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      Double double0 = new Double((-4502.4628396003645));
      Long long0 = new Long(1L);
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "J+u@#K[UE'X;#U./D<%", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.PRESSURE;
      double double1 = fieldsMap0.revertUnit(fieldsMap_Type0, (-4502.4628396003645));
      assertEquals(6.056521089043464E7, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.parse("Diameter");
      assertEquals(FieldsMap.Type.DIAM, fieldsMap_Type0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      Double double0 = new Double((-1155.0));
      Long long0 = new Long(1L);
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "J+u@#K[UE'X;#U./D<%", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.DIAM;
      double double1 = fieldsMap0.revertUnit(fieldsMap_Type0, 0.0);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      double double0 = fieldsMap0.revertUnit((FieldsMap.Type) null, 1455.28);
      assertEquals(1455.28, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      Long long0 = new Long(1800L);
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.LPS;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.NONE;
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      Double double0 = new Double(0.0);
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "pGYM Ypfo+VM7e+:10v", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.PRESSURE;
      Double double1 = fieldsMap0.getUnits(fieldsMap_Type0);
      assertEquals((double)double1, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double((-1965.0));
      Long long0 = new Long(2584L);
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "Junc", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.PRESSURE;
      Double double1 = fieldsMap0.getUnits(fieldsMap_Type0);
      assertEquals((-5870.6408775), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.LENGTH;
      Field field0 = fieldsMap0.getField(fieldsMap_Type0);
      assertFalse(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CFS;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      Double double0 = new Double((-918.0));
      Long long0 = new Long((-3796L));
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "|2|Y)rb`-.8F2", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.FLOW;
      double double1 = fieldsMap0.convertUnitToSystem(fieldsMap_Type0, 0.0);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double((-1965.0));
      Long long0 = new Long(2584L);
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "Junc", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.QUALITY;
      double double1 = fieldsMap0.convertUnitToSystem(fieldsMap_Type0, 2584L);
      assertEquals(2584.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      // Undeclared exception!
      try { 
        fieldsMap0.getUnits((FieldsMap.Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.POWER;
      try { 
        fieldsMap0.convertUnitToSystem(fieldsMap_Type0, 271.32);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.FRICTION;
      try { 
        fieldsMap0.getUnits(fieldsMap_Type0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.QUALITY;
      Field field0 = fieldsMap0.getField(fieldsMap_Type0);
      assertTrue(field0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.HEAD;
      try { 
        fieldsMap0.revertUnit(fieldsMap_Type0, (-1963.187826537425));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      double double0 = fieldsMap0.revertUnit((FieldsMap.Type) null, (-1965.0));
      assertEquals((-1965.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.MGD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.TRACE;
      Double double0 = new Double(1.0);
      Long long0 = new Long(1800L);
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "", double0, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = new Long((-1640L));
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.AFD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      // Undeclared exception!
      try { 
        fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "", (Double) null, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.GPM;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      Double double0 = new Double((-1963.187826537425));
      Long long0 = new Long(2590L);
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "", double0, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.KPA;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.CHEM;
      Double double0 = new Double(1162.82147);
      // Undeclared exception!
      try { 
        fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "~rYn)2zJbs", double0, (Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMH;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.NONE;
      Long long0 = new Long(2794L);
      // Undeclared exception!
      try { 
        fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "ACTIVE", (Double) null, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.LPM;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.KPA;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      Long long0 = new Long((-4980L));
      // Undeclared exception!
      try { 
        fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, (String) null, (Double) null, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.METERS;
      Double double0 = new Double((-1246.779445374));
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.MLD;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      // Undeclared exception!
      try { 
        fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "<Kma%VAlCoT0H", double0, (Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-1965.0));
      Long long0 = new Long(2584L);
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "Junc", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.QUALITY;
      Double double1 = fieldsMap0.getUnits(fieldsMap_Type0);
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      // Undeclared exception!
      try { 
        fieldsMap0.getField((FieldsMap.Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.parse("FLOWPACED");
      assertEquals(FieldsMap.Type.FLOW, fieldsMap_Type0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      PropertiesMap.QualType propertiesMap_QualType0 = PropertiesMap.QualType.AGE;
      Double double0 = new Double((-1965.0));
      Long long0 = new Long(2584L);
      fieldsMap0.prepare(propertiesMap_UnitsType0, propertiesMap_FlowUnitsType0, propertiesMap_PressUnitsType0, propertiesMap_QualType0, "", double0, long0);
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.PRESSURE;
      double double1 = fieldsMap0.convertUnitToSystem(fieldsMap_Type0, 2584L);
      assertEquals((-3.034878196737388), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      FieldsMap.Type fieldsMap_Type0 = FieldsMap.Type.parse("");
      // Undeclared exception!
      try { 
        fieldsMap0.convertUnitToSystem(fieldsMap_Type0, 2584L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }
}
