/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:42:01 GMT 2022
 */

package org.addition.epanet.network.io.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.addition.epanet.network.Network;
import org.addition.epanet.network.io.output.InpComposer;
import org.addition.epanet.network.io.output.OutputComposer;
import org.addition.epanet.network.io.output.XMLComposer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OutputComposer_ESTest extends OutputComposer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        OutputComposer.create((Network.FileType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.OutputComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      File file0 = MockFile.createTempFile("org.addition.epanet.network.io.output.OutputComposer", "org.addition.epanet.network.io.output.OutputComposer");
      try { 
        inpComposer0.composer(network0, file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XMLComposer xMLComposer0 = new XMLComposer(false);
      Network network0 = new Network();
      File file0 = MockFile.createTempFile("H8=", "H8=");
      xMLComposer0.composer(network0, file0);
      // Undeclared exception!
      xMLComposer0.composer(network0, file0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Network.FileType network_FileType0 = Network.FileType.NULL_FILE;
      OutputComposer outputComposer0 = OutputComposer.create(network_FileType0);
      assertNull(outputComposer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Network.FileType network_FileType0 = Network.FileType.XML_GZ_FILE;
      OutputComposer outputComposer0 = OutputComposer.create(network_FileType0);
      Network network0 = new Network();
      MockFile mockFile0 = new MockFile("Vu1BVGg`", "Vu1BVGg`");
      // Undeclared exception!
      try { 
        outputComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("java.util.zip.GZIPOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Network.FileType network_FileType0 = Network.FileType.EXCEL_FILE;
      // Undeclared exception!
      try { 
        OutputComposer.create(network_FileType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/poi/ss/usermodel/Workbook
         //
         verifyException("org.addition.epanet.network.io.output.OutputComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Network.FileType network_FileType0 = Network.FileType.XML_FILE;
      OutputComposer outputComposer0 = OutputComposer.create(network_FileType0);
      assertNotNull(outputComposer0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Network.FileType network_FileType0 = Network.FileType.INP_FILE;
      OutputComposer outputComposer0 = OutputComposer.create(network_FileType0);
      assertNotNull(outputComposer0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
