/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:02:10 GMT 2022
 */

package org.addition.epanet.network.io.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.addition.epanet.network.Network;
import org.addition.epanet.network.PropertiesMap;
import org.addition.epanet.network.io.output.InpComposer;
import org.addition.epanet.network.structures.Control;
import org.addition.epanet.network.structures.Curve;
import org.addition.epanet.network.structures.Link;
import org.addition.epanet.network.structures.Node;
import org.addition.epanet.network.structures.Pattern;
import org.addition.epanet.network.structures.Point;
import org.addition.epanet.network.structures.Rule;
import org.addition.epanet.network.structures.Source;
import org.addition.epanet.network.structures.Tank;
import org.addition.epanet.network.structures.Valve;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InpComposer_ESTest extends InpComposer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Node node0 = new Node();
      node0.setKe((-1662.535093442494));
      network0.addJunction("y`n_;qak>x?", node0);
      MockFile mockFile0 = new MockFile("wq", "y`n_;qak>x?");
      InpComposer inpComposer0 = new InpComposer();
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1571L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Valve valve0 = new Valve();
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      valve0.setNUDiameter(propertiesMap_UnitsType0, 4.0);
      Link.LinkType link_LinkType0 = Link.LinkType.GPV;
      valve0.setType(link_LinkType0);
      network0.addValve(" AT %s %s HOURS", valve0);
      MockFile mockFile0 = new MockFile("1");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.FCV;
      valve0.setRoughness((-788.8463));
      valve0.setType(link_LinkType0);
      network0.addValve(" AT %s %s HOURS", valve0);
      MockFile mockFile0 = new MockFile(" AT %s %s HOURS");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Network network0 = new Network();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.PBV;
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      valve0.setNUDiameter(propertiesMap_UnitsType0, 328.3902705);
      valve0.setType(link_LinkType0);
      network0.addValve("YvfI=hVzk8Ny)(s", valve0);
      MockFile mockFile0 = new MockFile("YvfI=hVzk8Ny)(s");
      InpComposer inpComposer0 = new InpComposer();
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Tank tank0 = new Tank();
      tank0.setArea(2597.294509);
      tank0.setVmin(2597.294509);
      network0.addJunction("`6.@+MPIX(!(,", tank0);
      MockFile mockFile0 = new MockFile("`6.@+MPIX(!(,");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      MockFile mockFile0 = new MockFile("");
      inpComposer0.composer(network0, mockFile0);
      assertFalse(mockFile0.isHidden());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Link.LinkType link_LinkType0 = Link.LinkType.FCV;
      Valve valve0 = new Valve();
      valve0.setType(link_LinkType0);
      network0.addValve(";Junction\tDemand\tPattern\tCategory", valve0);
      MockFile mockFile0 = new MockFile(" AT %s %s HOURS");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Valve valve0 = new Valve();
      Node node0 = new Node();
      valve0.setFirst(node0);
      network0.addValve(" Network\n  Nodes : 0\n  Links : 0\n  Pattern : 1\n  Curves : 0\n  Controls : 0\n  Labels : 0\n  Rules : 0\n", valve0);
      File file0 = MockFile.createTempFile("Nu:", "1");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.PBV;
      valve0.setType(link_LinkType0);
      Control control0 = new Control();
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("8'g'7a(<;[#:", "1");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      // Undeclared exception!
      try { 
        inpComposer0.composeHeader((Network) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      inpComposer0.composeHeader(network0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Rule rule0 = new Rule();
      network0.addRule(rule0);
      MockFile mockFile0 = new MockFile("FV");
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1341L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      tank0.setPosition((Point) null);
      network0.addJunction("p!", tank0);
      MockFile mockFile0 = new MockFile("p!");
      InpComposer inpComposer0 = new InpComposer();
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1492L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      tank0.setKb(1514.1);
      Tank.MixType tank_MixType0 = Tank.MixType.FIFO;
      tank0.setMixModel(tank_MixType0);
      tank0.setArea((-2063.4));
      network0.addJunction("GLOBAL PRI;E %s\n", tank0);
      InpComposer inpComposer0 = new InpComposer();
      MockFile mockFile0 = new MockFile("GLOBAL PRI;E %s\n", "GLOBAL PRI;E %s\n");
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1667L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      Tank.MixType tank_MixType0 = Tank.MixType.FIFO;
      tank0.setMixModel(tank_MixType0);
      tank0.setArea((-2090.5));
      network0.addJunction("Chez78y-Manig", tank0);
      InpComposer inpComposer0 = new InpComposer();
      MockFile mockFile0 = new MockFile("Chez78y-Manig", "Chez78y-Manig");
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1615L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Source source0 = new Source();
      Source.Type source_Type0 = Source.Type.CONCEN;
      source0.setType(source_Type0);
      Pattern pattern0 = new Pattern();
      source0.setPattern(pattern0);
      Tank tank0 = new Tank();
      tank0.setSource(source0);
      network0.addJunction(" CV", tank0);
      MockFile mockFile0 = new MockFile(" CV", "&(1wBzI#Wcbdb11");
      InpComposer inpComposer0 = new InpComposer();
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1523L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      Source source0 = new Source();
      Source.Type source_Type0 = Source.Type.MASS;
      source0.setType(source_Type0);
      tank0.setSource(source0);
      network0.addJunction("", tank0);
      MockFile mockFile0 = new MockFile("", "&(1wBzI#Wcbdb11");
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1511L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Node node0 = new Node();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-591.5162228998043);
      node0.setC0(doubleArray0);
      network0.addJunction("w@", node0);
      MockFile mockFile0 = new MockFile("w@", "w@");
      InpComposer inpComposer0 = new InpComposer();
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1556L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      double[] doubleArray0 = new double[4];
      tank0.setC0(doubleArray0);
      network0.addJunction("PRESSURE %s\n", tank0);
      MockFile mockFile0 = new MockFile("PRESSURE %s\n");
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1525L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Network network0 = new Network();
      Control.ControlType control_ControlType0 = Control.ControlType.LOWLEVEL;
      Control control0 = new Control();
      control0.setType(control_ControlType0);
      Tank tank0 = new Tank();
      control0.setNode(tank0);
      Valve valve0 = new Valve();
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("_~Zc:`u>eC;JEW");
      InpComposer inpComposer0 = new InpComposer();
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Network network0 = new Network();
      Control.ControlType control_ControlType0 = Control.ControlType.LOWLEVEL;
      Control control0 = new Control();
      control0.setType(control_ControlType0);
      Node node0 = new Node();
      control0.setNode(node0);
      Valve valve0 = new Valve();
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("org.addition.epanet.network.structures.Tank");
      InpComposer inpComposer0 = new InpComposer();
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Network network0 = new Network();
      Control control0 = new Control();
      Control.ControlType control_ControlType0 = Control.ControlType.TIMEOFDAY;
      control0.setType(control_ControlType0);
      Valve valve0 = new Valve();
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("_~Zc:`u>eC;JEW", "_~Zc:`u>eC;JEW");
      InpComposer inpComposer0 = new InpComposer();
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Network network0 = new Network();
      Control control0 = new Control();
      Control.ControlType control_ControlType0 = Control.ControlType.HILEVEL;
      control0.setType(control_ControlType0);
      Valve valve0 = new Valve();
      control0.setLink(valve0);
      network0.addControl(control0);
      InpComposer inpComposer0 = new InpComposer();
      MockFile mockFile0 = new MockFile("1");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Valve valve0 = new Valve();
      Control control0 = new Control();
      Control.ControlType control_ControlType0 = Control.ControlType.TIMER;
      control0.setType(control_ControlType0);
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("8'g^{ay[:", "1");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Control control0 = new Control();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.PSV;
      valve0.setType(link_LinkType0);
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("Q~(bLts*nG.YHA^[D");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Link.LinkType link_LinkType0 = Link.LinkType.PRV;
      Valve valve0 = new Valve();
      valve0.setType(link_LinkType0);
      Control control0 = new Control();
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("VWq[3aK]{Ch0/uK?t=", "VWq[3aK]{Ch0/uK?t=");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Control control0 = new Control();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.FCV;
      valve0.setType(link_LinkType0);
      control0.setLink(valve0);
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("[;rN{3w o]");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Control control0 = new Control();
      network0.addControl(control0);
      MockFile mockFile0 = new MockFile("8'g^{ay[:", "1");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Curve curve0 = new Curve();
      network0.addCurve("[RULES]", curve0);
      MockFile mockFile0 = new MockFile("(qr2AYg>p[tBm2U");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Network network0 = new Network();
      Pattern pattern0 = new Pattern();
      Double double0 = new Double(3.758728544435172);
      pattern0.add(double0);
      pattern0.add(double0);
      pattern0.add(double0);
      pattern0.add(double0);
      pattern0.add(double0);
      pattern0.add(double0);
      network0.addPattern("CHKFbE8 d\n", pattern0);
      InpComposer inpComposer0 = new InpComposer();
      MockFile mockFile0 = new MockFile("CHKFbE8 d\n");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Node node0 = new Node();
      node0.setKe(1.0);
      network0.addJunction("@", node0);
      MockFile mockFile0 = new MockFile("@", "@");
      InpComposer inpComposer0 = new InpComposer();
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1552L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.PSV;
      valve0.setType(link_LinkType0);
      network0.addValve(" AT %s %s HOURS", valve0);
      MockFile mockFile0 = new MockFile(" AT %s %s HOURS");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.PRV;
      valve0.setType(link_LinkType0);
      network0.addValve("YvfI=hVzk8Ny)(s", valve0);
      MockFile mockFile0 = new MockFile("YvfI=hVzk8Ny)(s");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Valve valve0 = new Valve();
      Link.LinkType link_LinkType0 = Link.LinkType.PIPE;
      valve0.setType(link_LinkType0);
      network0.addValve("", valve0);
      MockFile mockFile0 = new MockFile("d*r]~#L");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      tank0.setComment("1");
      tank0.setArea(4.0);
      network0.addJunction(";ID\tElevation\tInitLevel\tMinLevel\tMaxLevel\tDiameter\tMinVol\tVolCurve", tank0);
      MockFile mockFile0 = new MockFile(";ID\tElevation\tInitLevel\tMinLevel\tMaxLevel\tDiameter\tMinVol\tVolCurve", ";ID\tElevation\tInitLevel\tMinLevel\tMaxLevel\tDiameter\tMinVol\tVolCurve");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      Curve curve0 = new Curve();
      tank0.setVcurve(curve0);
      tank0.setArea((-2090.5));
      network0.addJunction("Chez78y-Manig", tank0);
      InpComposer inpComposer0 = new InpComposer();
      MockFile mockFile0 = new MockFile("Chez78y-Manig", "Chez78y-Manig");
      // Undeclared exception!
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.io.output.InpComposer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      Tank tank0 = new Tank();
      tank0.setElevation((-465.1353));
      tank0.setArea(4.0);
      network0.addJunction(";ID\tElevation\tInitLevel\tMinLevel\tMaxLevel\tDiameter\tMinVol\tVolCurve", tank0);
      MockFile mockFile0 = new MockFile("YES", "YES");
      try { 
        inpComposer0.composer(network0, mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.FieldsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InpComposer inpComposer0 = new InpComposer();
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      tank0.setComment("%-19s NO\n");
      network0.addJunction("<V", tank0);
      MockFile mockFile0 = new MockFile("<V");
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1515L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Tank tank0 = new Tank();
      Pattern pattern0 = new Pattern();
      tank0.setPattern(pattern0);
      network0.addJunction("e<o", tank0);
      MockFile mockFile0 = new MockFile("e<o", "e<o");
      InpComposer inpComposer0 = new InpComposer();
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1507L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Network network0 = new Network();
      network0.updatedUnitsProperty();
      Node node0 = new Node();
      node0.setComment("Bz'2d`o0A*zb4");
      network0.addJunction("@", node0);
      InpComposer inpComposer0 = new InpComposer();
      MockFile mockFile0 = new MockFile("@");
      inpComposer0.composer(network0, mockFile0);
      assertEquals(1546L, mockFile0.length());
  }
}
