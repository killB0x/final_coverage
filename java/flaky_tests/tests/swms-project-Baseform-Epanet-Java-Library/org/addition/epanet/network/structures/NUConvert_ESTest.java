/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:17:30 GMT 2022
 */

package org.addition.epanet.network.structures;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.addition.epanet.network.PropertiesMap;
import org.addition.epanet.network.structures.NUConvert;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NUConvert_ESTest extends NUConvert_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.METERS;
      double double0 = NUConvert.revertPressure(propertiesMap_PressUnitsType0, 92.71121584380909, (-1.0));
      assertEquals((-28.25837858919301), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMD;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, 2.682043717312592);
      assertEquals(273.40753654284566, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.LPM;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, (-989.6856));
      assertEquals((-1681475.8344), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.KPA;
      double double0 = NUConvert.convertPressure(propertiesMap_PressUnitsType0, 2015.897204748684, 2015.897204748684);
      assertEquals(0.3347164374389038, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      double double0 = NUConvert.convertPressure(propertiesMap_PressUnitsType0, 1570.738434, 245.47459);
      assertEquals(245.47459, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMD;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, (-3056.531357282));
      assertEquals((-29.983631128918972), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMH;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, (-1696.781));
      assertEquals((-16.64489896017265), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.revertVolume(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.KPA;
      double double0 = NUConvert.revertPressure(propertiesMap_PressUnitsType0, 5.0E-4, 448.831);
      assertEquals(0.67046453325425, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertPower(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.revertPower(propertiesMap_UnitsType0, (-21.9694471));
      assertEquals((-21.9694471), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertDistance(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertDistance(propertiesMap_UnitsType0, 2195.5257526082);
      assertEquals(669.1962493949794, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.revertDiameter(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertArea(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertVolume(propertiesMap_UnitsType0, (-1306.046270467));
      assertEquals((-46122.33889419784), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertPower(propertiesMap_UnitsType0, 2.0);
      assertEquals(2.682043717312592, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertPower(propertiesMap_UnitsType0, (-1652.217));
      assertEquals((-2215.6591122435298), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertDistance(propertiesMap_UnitsType0, (-2001.3));
      assertEquals((-6565.944881889764), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertArea(propertiesMap_UnitsType0, (-416.1586));
      assertEquals((-4479.493889543334), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        NUConvert.revertPressure((PropertiesMap.PressUnitsType) null, (-2569.97), (-2569.97));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.structures.NUConvert", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        NUConvert.revertFlow((PropertiesMap.FlowUnitsType) null, 1718.3521344044111);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.structures.NUConvert", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        NUConvert.convertPressure((PropertiesMap.PressUnitsType) null, (-2569.97), (-2569.97));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.structures.NUConvert", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        NUConvert.convertFlow((PropertiesMap.FlowUnitsType) null, 623.15203435);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.network.structures.NUConvert", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertVolume(propertiesMap_UnitsType0, (-4126.052913877559));
      assertEquals((-116.83744036227084), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.revertVolume(propertiesMap_UnitsType0, 1123.5685950496547);
      assertEquals(1123.5685950496547, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.METERS;
      double double0 = NUConvert.revertPressure(propertiesMap_PressUnitsType0, 4145.23116198397, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      double double0 = NUConvert.revertPressure(propertiesMap_PressUnitsType0, 245.47459, (-1583.077927));
      assertEquals((-1583.077927), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertPower(propertiesMap_UnitsType0, 1461.44908633);
      assertEquals(1089.802583676281, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMD;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, -0.0);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMH;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, (-304.8));
      assertEquals((-31071.312), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.MLD;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, 0.7457);
      assertEquals(1.82442962, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.LPS;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, 105.50565031606456);
      assertEquals(2987.6035, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.AFD;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, 2216.26);
      assertEquals(4396.394962, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, 90848.40020259179);
      assertEquals(48894.6089890349, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.MGD;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, 1.0E-4);
      assertEquals(6.4632E-5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.GPM;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, 5.0E-4);
      assertEquals(0.22441550000000002, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CFS;
      double double0 = NUConvert.revertFlow(propertiesMap_FlowUnitsType0, (-989.6856));
      assertEquals((-28024.9271352), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertDiameter(propertiesMap_UnitsType0, (-1.0));
      assertEquals((-304.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.revertDiameter(propertiesMap_UnitsType0, 1940.0);
      assertEquals(23280.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertDistance(propertiesMap_UnitsType0, (-4126.052913877559));
      assertEquals((-1257.62092814988), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.revertDistance(propertiesMap_UnitsType0, (-4126.052913877559));
      assertEquals((-4126.052913877559), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.revertArea(propertiesMap_UnitsType0, (-1953.66));
      assertEquals((-181.50095312640002), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.revertArea(propertiesMap_UnitsType0, 2228.823022);
      assertEquals(2228.823022, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertVolume(propertiesMap_UnitsType0, 2.9876035);
      assertEquals(105.50565031606456, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.convertVolume(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.KPA;
      double double0 = NUConvert.convertPressure(propertiesMap_PressUnitsType0, 521.1, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.METERS;
      double double0 = NUConvert.convertPressure(propertiesMap_PressUnitsType0, (-1090.1794), (-1953.66));
      assertEquals(5.879441190405302, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PropertiesMap.PressUnitsType propertiesMap_PressUnitsType0 = PropertiesMap.PressUnitsType.PSI;
      double double0 = NUConvert.convertPressure(propertiesMap_PressUnitsType0, (-4126.052913877559), (-4126.052913877559));
      assertEquals((-4126.052913877559), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertPower(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.convertPower(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CMD;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.MLD;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, (-2032.087188565817));
      assertEquals((-830.5759783233127), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.LPM;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, 1699.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.LPS;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, 1.0E-7);
      assertEquals(3.531447540346788E-9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.AFD;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, 2228.823022);
      assertEquals(1123.5685950496547, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.IMGD;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, 945.0844262287094);
      assertEquals(1756.0097105698799, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.MGD;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, 5.0E-4);
      assertEquals(7.736105953707142E-4, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.GPM;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, (-2032.087188565817));
      assertEquals((-4.5275107748034715), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PropertiesMap.FlowUnitsType propertiesMap_FlowUnitsType0 = PropertiesMap.FlowUnitsType.CFS;
      double double0 = NUConvert.convertFlow(propertiesMap_FlowUnitsType0, 427.368);
      assertEquals(15.092276724229261, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertDistance(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.convertDistance(propertiesMap_UnitsType0, 2216.26);
      assertEquals(2216.26, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.SI;
      double double0 = NUConvert.convertArea(propertiesMap_UnitsType0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      PropertiesMap.UnitsType propertiesMap_UnitsType0 = PropertiesMap.UnitsType.US;
      double double0 = NUConvert.convertArea(propertiesMap_UnitsType0, 4351.866908319081);
      assertEquals(4351.866908319081, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      NUConvert nUConvert0 = new NUConvert();
  }
}
