/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:59:15 GMT 2022
 */

package org.addition.epanet.network.structures;

import org.junit.Test;
import static org.junit.Assert.*;
import org.addition.epanet.network.structures.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point_ESTest extends Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point point0 = new Point(0.0, 2289.18);
      double double0 = point0.getY();
      assertEquals(2289.18, double0, 0.01);
      assertEquals(0.0, point0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point point0 = new Point();
      point0.setY((-3014.527162224));
      double double0 = point0.getY();
      assertEquals((-3014.527162224), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point point0 = new Point(0.0, 0.0);
      point0.setX(1.0);
      double double0 = point0.getX();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Point point0 = new Point(0.0, 0.0);
      point0.setX((-2261.611624378014));
      double double0 = point0.getX();
      assertEquals((-2261.611624378014), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Point point0 = new Point(0.0, 0.0);
      String string0 = point0.toString();
      assertEquals("Point{x=0.0, y=0.0}", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Point point0 = new Point(0.0, 0.0);
      double double0 = point0.getY();
      assertEquals(0.0, point0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Point point0 = new Point();
      double double0 = point0.getX();
      assertEquals(0.0, point0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }
}
