/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:58:10 GMT 2022
 */

package org.addition.epanet.hydraulic.structures;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.addition.epanet.hydraulic.structures.LSVariables;
import org.addition.epanet.hydraulic.structures.SimulationNode;
import org.addition.epanet.network.structures.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LSVariables_ESTest extends LSVariables_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1, 814);
      lSVariables0.addAij(0, 1.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1217, 5486);
      lSVariables0.addAii(4, 4);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(0, 2900);
      double[] doubleArray0 = lSVariables0.getRHSCoeffs();
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1, 814);
      double double0 = lSVariables0.getRHSCoeff(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(3057, 3057);
      lSVariables0.addNodalInFlow(0, (double) 3057);
      double double0 = lSVariables0.getNodalInFlow(0);
      assertEquals(3057.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1, 0);
      double[] doubleArray0 = lSVariables0.getAijVector();
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1217, 5486);
      double double0 = lSVariables0.getAij(4);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1217, 5486);
      double[] doubleArray0 = lSVariables0.getAiiVector();
      assertEquals(1217, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1, 1);
      // Undeclared exception!
      try { 
        lSVariables0.getNodalInFlow((SimulationNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(13, 13);
      Node node0 = new Node();
      SimulationNode simulationNode0 = SimulationNode.createIndexedNode(node0, 13);
      // Undeclared exception!
      try { 
        lSVariables0.getNodalInFlow(simulationNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 13 out of bounds for length 13
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(35, 35);
      // Undeclared exception!
      try { 
        lSVariables0.getNodalInFlow(35);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 35 out of bounds for length 35
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(16, 16);
      // Undeclared exception!
      try { 
        lSVariables0.getAii(16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 16 out of bounds for length 16
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(6, 6);
      // Undeclared exception!
      try { 
        lSVariables0.addRHSCoeff(5258, 5258);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5258 out of bounds for length 6
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(707, 0);
      // Undeclared exception!
      try { 
        lSVariables0.addNodalInFlow((SimulationNode) null, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(13, 13);
      Node node0 = new Node();
      SimulationNode simulationNode0 = SimulationNode.createIndexedNode(node0, 13);
      // Undeclared exception!
      try { 
        lSVariables0.addNodalInFlow(simulationNode0, (double) 13);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 13 out of bounds for length 13
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1, 0);
      // Undeclared exception!
      try { 
        lSVariables0.addNodalInFlow((-2129), 1049.34661468794);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2129 out of bounds for length 1
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LSVariables lSVariables0 = null;
      try {
        lSVariables0 = new LSVariables((-2731), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2731
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(3057, 3057);
      lSVariables0.clear();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(279, 279);
      // Undeclared exception!
      try { 
        lSVariables0.getRHSCoeff(279);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 279 out of bounds for length 279
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1, 814);
      // Undeclared exception!
      try { 
        lSVariables0.addAii(2639, 1.0E-4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2639 out of bounds for length 1
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(707, 707);
      Node node0 = new Node();
      SimulationNode simulationNode0 = SimulationNode.createIndexedNode(node0, 3);
      lSVariables0.addNodalInFlow(simulationNode0, (double) 3);
      double double0 = lSVariables0.getNodalInFlow(simulationNode0);
      assertEquals(3.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(707, 707);
      Node node0 = new Node();
      SimulationNode simulationNode0 = SimulationNode.createIndexedNode(node0, 3);
      double double0 = lSVariables0.getNodalInFlow(simulationNode0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(3057, 3057);
      double double0 = lSVariables0.getAii(1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(13, 13);
      double double0 = lSVariables0.getNodalInFlow(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(707, 707);
      lSVariables0.addRHSCoeff(3, 3);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(1, 1);
      double[] doubleArray0 = lSVariables0.getAijVector();
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(13, 13);
      // Undeclared exception!
      try { 
        lSVariables0.addAij(13, 0.4333);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 13 out of bounds for length 13
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(0, 1);
      double[] doubleArray0 = lSVariables0.getAiiVector();
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(13, 13);
      // Undeclared exception!
      try { 
        lSVariables0.getAij(13);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 13 out of bounds for length 13
         //
         verifyException("org.addition.epanet.hydraulic.structures.LSVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LSVariables lSVariables0 = new LSVariables(13, 13);
      double[] doubleArray0 = lSVariables0.getRHSCoeffs();
      assertEquals(13, doubleArray0.length);
  }
}
