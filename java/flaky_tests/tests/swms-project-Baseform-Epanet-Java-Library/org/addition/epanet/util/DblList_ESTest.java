/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:57:27 GMT 2022
 */

package org.addition.epanet.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.addition.epanet.util.DblList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DblList_ESTest extends DblList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DblList dblList0 = null;
      try {
        dblList0 = new DblList((Collection<? extends Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DblList dblList0 = null;
      try {
        dblList0 = new DblList((-302));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -302
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      DblList dblList0 = new DblList(linkedList0);
      assertTrue(dblList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DblList dblList0 = new DblList();
      assertEquals(0, dblList0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DblList dblList0 = new DblList(1);
      assertTrue(dblList0.isEmpty());
  }
}
