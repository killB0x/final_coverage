/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:52:55 GMT 2022
 */

package org.addition.epanet.msx;

import org.junit.Test;
import static org.junit.Assert.*;
import org.addition.epanet.msx.Network;
import org.addition.epanet.msx.Structures.Link;
import org.addition.epanet.msx.Structures.Node;
import org.addition.epanet.msx.Structures.Species;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Network_ESTest extends Network_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Network network0 = new Network();
      Species[] speciesArray0 = new Species[5];
      network0.Species = speciesArray0;
      Species[] speciesArray1 = network0.getSpecies();
      assertEquals(5, speciesArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Network network0 = new Network();
      Species[] speciesArray0 = new Species[0];
      network0.Species = speciesArray0;
      Species[] speciesArray1 = network0.getSpecies();
      assertEquals(0, speciesArray1.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Network network0 = new Network();
      network0.setRstart(1L);
      long long0 = network0.getRstart();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Network network0 = new Network();
      network0.Rstart = (-1L);
      long long0 = network0.getRstart();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Network network0 = new Network();
      network0.Qtime = 1L;
      long long0 = network0.getQtime();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Network network0 = new Network();
      network0.Qtime = (-2346L);
      long long0 = network0.getQtime();
      assertEquals((-2346L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Network network0 = new Network();
      network0.setQstep(608L);
      long long0 = network0.getQstep();
      assertEquals(608L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Network network0 = new Network();
      network0.setQstep((-1213L));
      long long0 = network0.getQstep();
      assertEquals((-1213L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Network network0 = new Network();
      network0.Nperiods = 3578;
      int int0 = network0.getNperiods();
      assertEquals(3578, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Network network0 = new Network();
      network0.Nperiods = (-172);
      int int0 = network0.getNperiods();
      assertEquals((-172), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Network network0 = new Network();
      Node[] nodeArray0 = new Node[7];
      network0.Node = nodeArray0;
      Node[] nodeArray1 = network0.getNodes();
      assertEquals(7, nodeArray1.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Network network0 = new Network();
      Node[] nodeArray0 = new Node[0];
      network0.Node = nodeArray0;
      Node[] nodeArray1 = network0.getNodes();
      assertEquals(0, nodeArray1.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Network network0 = new Network();
      Link[] linkArray0 = new Link[2];
      network0.Link = linkArray0;
      Link[] linkArray1 = network0.getLinks();
      assertSame(linkArray1, linkArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Network network0 = new Network();
      Link[] linkArray0 = new Link[0];
      network0.Link = linkArray0;
      Link[] linkArray1 = network0.getLinks();
      assertEquals(0, linkArray1.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Network network0 = new Network();
      network0.Dur = 2103L;
      long long0 = network0.getDuration();
      assertEquals(2103L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Network network0 = new Network();
      network0.setDur((-1213L));
      long long0 = network0.getDuration();
      assertEquals((-1213L), long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Network network0 = new Network();
      network0.setRstep((-2225L));
      assertEquals(0L, network0.getQtime());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Network network0 = new Network();
      long long0 = network0.getQtime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Network network0 = new Network();
      long long0 = network0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Network network0 = new Network();
      Species[] speciesArray0 = network0.getSpecies();
      assertNull(speciesArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Network network0 = new Network();
      Node[] nodeArray0 = network0.getNodes();
      assertNull(nodeArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Network network0 = new Network();
      int int0 = network0.getNperiods();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Network network0 = new Network();
      long long0 = network0.getRstart();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Network network0 = new Network();
      long long0 = network0.getQstep();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Network network0 = new Network();
      Link[] linkArray0 = network0.getLinks();
      assertNull(linkArray0);
  }
}
