/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:55:43 GMT 2022
 */

package org.addition.epanet.msx.Structures;

import org.junit.Test;
import static org.junit.Assert.*;
import org.addition.epanet.msx.Structures.Pipe;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pipe_ESTest extends Pipe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      pipe0.setV(3528.855327184);
      double double0 = pipe0.getV();
      assertEquals(3528.855327184, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      pipe0.v = 1.0;
      pipe0.v = (-464.67069763);
      double double0 = pipe0.getV();
      assertEquals((-464.67069763), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      pipe0.hstep = (-1.0);
      double double0 = pipe0.getHstep();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      double[] doubleArray0 = new double[7];
      pipe0.c = doubleArray0;
      double[] doubleArray1 = pipe0.getC();
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      double double0 = pipe0.getV();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      double[] doubleArray0 = new double[0];
      pipe0.setC(doubleArray0);
      double[] doubleArray1 = pipe0.getC();
      assertSame(doubleArray1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      double[] doubleArray0 = pipe0.getC();
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      double double0 = pipe0.getHstep();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Pipe pipe0 = new Pipe();
      pipe0.setHstep(1031.149236779146);
      double double0 = pipe0.getHstep();
      assertEquals(1031.149236779146, double0, 0.01);
  }
}
