/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:58:34 GMT 2022
 */

package org.addition.epanet.msx.Structures;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.addition.epanet.msx.Structures.Tank;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tank_ESTest extends Tank_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tank tank0 = new Tank(3218, 3218);
      tank0.vMix = 1690.3696617659;
      double double0 = tank0.getvMix();
      assertEquals(1690.3696617659, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tank tank0 = new Tank(1, 1133);
      tank0.setV0(1);
      double double0 = tank0.getV0();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      tank0.v0 = (-547.24158325);
      double double0 = tank0.getV0();
      assertEquals((-547.24158325), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tank tank0 = new Tank(3218, 3218);
      tank0.setV(3218);
      double double0 = tank0.getV();
      assertEquals(3218.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tank tank0 = new Tank(2038, 0);
      tank0.setV((-4597.33878));
      double double0 = tank0.getV();
      assertEquals((-4597.33878), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      tank0.setParam((double[]) null);
      double[] doubleArray0 = tank0.getParam();
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      double[] doubleArray0 = tank0.getParam();
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tank tank0 = new Tank(319, 2788);
      tank0.setNode(319);
      int int0 = tank0.getNode();
      assertEquals(319, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tank tank0 = new Tank(2327, 2327);
      tank0.setNode((-662));
      int int0 = tank0.getNode();
      assertEquals((-662), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      tank0.setMixModel((-1));
      int int0 = tank0.getMixModel();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      tank0.setHstep(1.0);
      double double0 = tank0.getHstep();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tank tank0 = new Tank(3594, 3594);
      tank0.setC((double[]) null);
      double[] doubleArray0 = tank0.getC();
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      double[] doubleArray0 = tank0.getC();
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tank tank0 = new Tank(3218, 3218);
      tank0.a = (double) 3218;
      double double0 = tank0.getA();
      assertEquals(3218.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tank tank0 = new Tank(2038, 0);
      tank0.a = (double) 0;
      tank0.a = (-1625.2022308);
      double double0 = tank0.getA();
      assertEquals((-1625.2022308), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tank tank0 = null;
      try {
        tank0 = new Tank(675, (-2334));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2334
         //
         verifyException("org.addition.epanet.msx.Structures.Tank", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      tank0.setMixModel(1322);
      int int0 = tank0.getMixModel();
      assertEquals(1322, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tank tank0 = new Tank(3594, 3594);
      double[] doubleArray0 = tank0.getC();
      assertEquals(3594, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      int int0 = tank0.getNode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      int int0 = tank0.getMixModel();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      double double0 = tank0.getvMix();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tank tank0 = new Tank(1, 1133);
      double[] doubleArray0 = tank0.getParam();
      assertEquals(1, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tank tank0 = new Tank(2038, 0);
      double double0 = tank0.getA();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      double double0 = tank0.getV0();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tank tank0 = new Tank(1448, 1448);
      double double0 = tank0.getHstep();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tank tank0 = new Tank(3594, 3594);
      tank0.setA(3594);
      assertEquals(3594.0, tank0.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tank tank0 = new Tank(0, 0);
      tank0.setvMix((-43.9025));
      double double0 = tank0.getvMix();
      assertEquals((-43.9025), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tank tank0 = new Tank(1448, 1448);
      tank0.setHstep((-6387.4576525795));
      double double0 = tank0.getHstep();
      assertEquals((-6387.4576525795), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tank tank0 = new Tank(2038, 0);
      double double0 = tank0.getV();
      assertEquals(0.0, double0, 0.01);
  }
}
