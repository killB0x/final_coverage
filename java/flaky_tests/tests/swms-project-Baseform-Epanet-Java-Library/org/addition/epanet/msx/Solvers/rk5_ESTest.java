/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 16:26:48 GMT 2022
 */

package org.addition.epanet.msx.Solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.addition.epanet.msx.Chemical;
import org.addition.epanet.msx.ENToolkit2;
import org.addition.epanet.msx.EpanetMSX;
import org.addition.epanet.msx.Solvers.JacobianInterface;
import org.addition.epanet.msx.Solvers.rk5;
import org.addition.epanet.network.Network;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class rk5_ESTest extends rk5_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      // Undeclared exception!
      try { 
        rk5_0.rk5_open((-13), (-13), (-13));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -12
         //
         verifyException("org.addition.epanet.msx.Solvers.rk5", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      double[] doubleArray0 = new double[4];
      rk5_0.Itmax = 1968526677;
      Chemical chemical0 = new Chemical();
      JacobianInterface.Operation jacobianInterface_Operation0 = JacobianInterface.Operation.PIPES_EQUIL;
      // Undeclared exception!
      rk5_0.rk5_integrate(doubleArray0, 0, 0, 1968526677, doubleArray0, doubleArray0, doubleArray0, chemical0, jacobianInterface_Operation0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      Chemical chemical0 = new Chemical();
      JacobianInterface.Operation jacobianInterface_Operation0 = JacobianInterface.Operation.PIPES_EQUIL;
      // Undeclared exception!
      try { 
        rk5_0.rk5_integrate((double[]) null, 0, 0, 0, (double[]) null, (double[]) null, (double[]) null, chemical0, jacobianInterface_Operation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.msx.Solvers.rk5", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      Chemical chemical0 = new Chemical();
      JacobianInterface.Operation jacobianInterface_Operation0 = JacobianInterface.Operation.PIPES_EQUIL;
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        rk5_0.rk5_integrate(doubleArray0, 0, 0, 0, doubleArray0, doubleArray0, doubleArray0, chemical0, jacobianInterface_Operation0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.addition.epanet.msx.Solvers.rk5", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      double[] doubleArray0 = new double[8];
      Chemical chemical0 = new Chemical();
      JacobianInterface.Operation jacobianInterface_Operation0 = JacobianInterface.Operation.PIPES_EQUIL;
      int int0 = rk5_0.rk5_integrate(doubleArray0, (-1001), (-2246.0), 2.622500755283725E-13, doubleArray0, doubleArray0, doubleArray0, chemical0, jacobianInterface_Operation0);
      assertArrayEquals(new double[] {2246.0000000000005, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-281);
      Chemical chemical0 = new Chemical();
      JacobianInterface.Operation jacobianInterface_Operation0 = JacobianInterface.Operation.PIPES_EQUIL;
      int int0 = rk5_0.rk5_integrate(doubleArray0, (-1963416004), (-1963416004), (-281.0), doubleArray0, doubleArray0, doubleArray0, chemical0, jacobianInterface_Operation0);
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      rk5_0.rk5_open(37, 1644, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 37;
      Chemical chemical0 = new Chemical();
      Network network0 = new Network();
      ENToolkit2 eNToolkit2_0 = new ENToolkit2(network0);
      EpanetMSX epanetMSX0 = new EpanetMSX(eNToolkit2_0);
      chemical0.loadDependencies(epanetMSX0);
      JacobianInterface.Operation jacobianInterface_Operation0 = JacobianInterface.Operation.TANKS_DC_DT_CONCENTRATIONS;
      int int0 = rk5_0.rk5_integrate(doubleArray0, 0, 0, 1501.33, doubleArray0, doubleArray0, doubleArray0, chemical0, jacobianInterface_Operation0);
      assertEquals(247, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      rk5 rk5_0 = new rk5();
      double[] doubleArray0 = new double[8];
      Chemical chemical0 = new Chemical();
      JacobianInterface.Operation jacobianInterface_Operation0 = JacobianInterface.Operation.PIPES_EQUIL;
      int int0 = rk5_0.rk5_integrate(doubleArray0, (-1051), 0, 2077.63938377, doubleArray0, doubleArray0, doubleArray0, chemical0, jacobianInterface_Operation0);
      assertEquals((-1), int0);
  }
}
