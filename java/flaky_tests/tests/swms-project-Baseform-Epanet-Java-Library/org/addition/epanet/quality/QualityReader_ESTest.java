/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 17:00:28 GMT 2022
 */

package org.addition.epanet.quality;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Iterator;
import java.util.function.Consumer;
import org.addition.epanet.network.FieldsMap;
import org.addition.epanet.quality.QualityReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QualityReader_ESTest extends QualityReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QualityReader qualityReader0 = new QualityReader((FieldsMap) null);
      MockFile mockFile0 = new MockFile("(_P0]Uma1", "(_P0]Uma1");
      try { 
        qualityReader0.open(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QualityReader qualityReader0 = new QualityReader((FieldsMap) null);
      Iterator<QualityReader.Step> iterator0 = qualityReader0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QualityReader qualityReader0 = new QualityReader((FieldsMap) null);
      File file0 = MockFile.createTempFile(".u#Y=~y", ".u#Y=~y");
      try { 
        qualityReader0.open(file0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QualityReader qualityReader0 = new QualityReader((FieldsMap) null);
      Consumer<QualityReader.Step> consumer0 = (Consumer<QualityReader.Step>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      qualityReader0.forEach(consumer0);
      assertEquals(0, qualityReader0.getLinks());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      QualityReader qualityReader0 = new QualityReader(fieldsMap0);
      int int0 = qualityReader0.getPeriods();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      QualityReader qualityReader0 = new QualityReader(fieldsMap0);
      int int0 = qualityReader0.getLinks();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      QualityReader qualityReader0 = new QualityReader(fieldsMap0);
      // Undeclared exception!
      try { 
        qualityReader0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.addition.epanet.quality.QualityReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FieldsMap fieldsMap0 = new FieldsMap();
      QualityReader qualityReader0 = new QualityReader(fieldsMap0);
      // Undeclared exception!
      try { 
        qualityReader0.open((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      QualityReader qualityReader0 = new QualityReader((FieldsMap) null);
      int int0 = qualityReader0.getNodes();
      assertEquals(0, int0);
  }
}
