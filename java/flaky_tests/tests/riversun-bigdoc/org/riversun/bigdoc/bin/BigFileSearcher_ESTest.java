/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 22:00:08 GMT 2022
 */

package org.riversun.bigdoc.bin;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.lang.reflect.Array;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.riversun.bigdoc.bin.BigFileSearcher;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BigFileSearcher_ESTest extends BigFileSearcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", max num of thread=/, max num of thread=0, max num of thread=");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.riversun.bigdoc.bin.BinFileSearcher$3");
      MockFile mockFile0 = new MockFile(", max num of thread=");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ", max num of thread=");
      File file0 = MockFile.createTempFile(", max num of thread=", ", max num of thread=", (File) mockFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "org.riversun.bigdoc.bin.BigFileSearcher$1");
      byte[] byteArray0 = new byte[3];
      bigFileSearcher0.searchBigFile(file0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("`E'3;1{fk");
      byte[] byteArray0 = new byte[3];
      bigFileSearcher0.searchBigFile((File) mockFile0, byteArray0);
      bigFileSearcher0._showProfile();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("J&d|& )*", "J&d|& )*");
      byte[] byteArray0 = new byte[0];
      bigFileSearcher0.searchBigFile((File) mockFile0, byteArray0);
      bigFileSearcher0.getEllapsedMillis();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", max num of thread=/, max num of thread=0, max num of thread=");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, " possible max memory=");
      MockFile mockFile0 = new MockFile(", max num of thread=");
      File file0 = MockFile.createTempFile(", max num of thread=", ", max num of thread=", (File) mockFile0);
      BigFileSearcher.OnProgressListener bigFileSearcher_OnProgressListener0 = mock(BigFileSearcher.OnProgressListener.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[1];
      bigFileSearcher0.searchBigFile(file0, byteArray0, bigFileSearcher_OnProgressListener0);
      BigFileSearcher.OnProgressListener bigFileSearcher_OnProgressListener1 = mock(BigFileSearcher.OnProgressListener.class, new ViolatedAssumptionAnswer());
      bigFileSearcher0.searchBigFile(file0, byteArray0, bigFileSearcher_OnProgressListener1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("org.riversn.bigdoc.bin.BigFileSearcher$1", "org.riversn.bigdoc.bin.BigFileSearcher$1");
      byte[] byteArray0 = new byte[0];
      bigFileSearcher0.searchBigFileRealtime((File) mockFile0, byteArray0, (BigFileSearcher.OnRealtimeResultListener) null);
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFileRealtime((File) mockFile0, byteArray0, (BigFileSearcher.OnRealtimeResultListener) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFileRealtime((File) null, (byte[]) null, 1048576L, (BigFileSearcher.OnRealtimeResultListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("");
      byte[] byteArray0 = new byte[7];
      bigFileSearcher0.searchBigFileRealtime((File) mockFile0, byteArray0, (BigFileSearcher.OnRealtimeResultListener) null);
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFileRealtime((File) mockFile0, byteArray0, (-3039L), (BigFileSearcher.OnRealtimeResultListener) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFile((File) null, byteArray0, (BigFileSearcher.OnProgressListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("worker blockSize=", "worker blockSize=");
      byte[] byteArray0 = new byte[0];
      bigFileSearcher0.searchBigFile((File) mockFile0, byteArray0, (BigFileSearcher.OnProgressListener) null);
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFile((File) mockFile0, byteArray0, (BigFileSearcher.OnProgressListener) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("");
      byte[] byteArray0 = new byte[7];
      bigFileSearcher0.searchBigFile((File) mockFile0, byteArray0);
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFile((File) mockFile0, byteArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      File file0 = MockFile.createTempFile("%.1f(MB)", ", sub buffer size=");
      byte[] byteArray0 = new byte[4];
      BigFileSearcher.OnRealtimeResultListener bigFileSearcher_OnRealtimeResultListener0 = mock(BigFileSearcher.OnRealtimeResultListener.class, new ViolatedAssumptionAnswer());
      bigFileSearcher0.searchBigFileRealtime(file0, byteArray0, (-1L), bigFileSearcher_OnRealtimeResultListener0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      bigFileSearcher0.setBlockSize(24);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      bigFileSearcher0.setSubBufferSize((-1073741823));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      bigFileSearcher0.setBufferSizePerWorker(24);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      bigFileSearcher0.setMaxNumOfThreads(1536);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", max num of thread=/, max num of thread=0, max num of thread=");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "lrg.rive=sun.bigdoc.bin.BiFileSearcher$3");
      MockFile mockFile0 = new MockFile(", max num of thread=");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ", max num of thread=");
      File file0 = MockFile.createTempFile(", max num of thread=", ", max num of thread=", (File) mockFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "lrg.rive=sun.bigdoc.bin.BiFileSearcher$3");
      byte[] byteArray0 = new byte[1];
      bigFileSearcher0.searchBigFile(file0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigFileSearcher.ProgressCache bigFileSearcher_ProgressCache0 = new BigFileSearcher.ProgressCache(1003, false);
      bigFileSearcher_ProgressCache0.getProgress();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigFileSearcher.ProgressCache bigFileSearcher_ProgressCache0 = new BigFileSearcher.ProgressCache(24, true);
      // Undeclared exception!
      try { 
        bigFileSearcher_ProgressCache0.getResultPointers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigFileSearcher.ProgressCache bigFileSearcher_ProgressCache0 = new BigFileSearcher.ProgressCache(0, true);
      bigFileSearcher_ProgressCache0.getResultPointers();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      BigFileSearcher.ProgressCache bigFileSearcher_ProgressCache0 = new BigFileSearcher.ProgressCache(24, true);
      MockFile mockFile0 = new MockFile(", max num of thread=");
      byte[] byteArray0 = new byte[0];
      BigFileSearcher.OnRealtimeResultListener bigFileSearcher_OnRealtimeResultListener0 = mock(BigFileSearcher.OnRealtimeResultListener.class, new ViolatedAssumptionAnswer());
      List<Long> list0 = bigFileSearcher0.searchBigFileRealtime((File) mockFile0, byteArray0, bigFileSearcher_OnRealtimeResultListener0);
      List<Long>[] listArray0 = (List<Long>[]) Array.newInstance(List.class, 3);
      listArray0[0] = list0;
      bigFileSearcher_ProgressCache0.pointerList = listArray0;
      bigFileSearcher_ProgressCache0.setProgress(0, 24, list0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigFileSearcher.ProgressCache bigFileSearcher_ProgressCache0 = new BigFileSearcher.ProgressCache(24, true);
      List<Long> list0 = bigFileSearcher_ProgressCache0.resultPointerList;
      bigFileSearcher_ProgressCache0.setProgress(0, 24, list0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigFileSearcher.ProgressCache bigFileSearcher_ProgressCache0 = new BigFileSearcher.ProgressCache(24, false);
      bigFileSearcher_ProgressCache0.setProgress(0, (-1071.2054F), (List<Long>) null);
      bigFileSearcher_ProgressCache0.getProgress();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", max num of thread=/, max num of thread=0, max num of thread=");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, " possible max memory=");
      MockFile mockFile0 = new MockFile(", max num of thread=");
      File file0 = MockFile.createTempFile(", max num of thread=", ", max num of thread=", (File) mockFile0);
      BigFileSearcher.OnProgressListener bigFileSearcher_OnProgressListener0 = mock(BigFileSearcher.OnProgressListener.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[0];
      bigFileSearcher0.searchBigFile(file0, byteArray0, bigFileSearcher_OnProgressListener0);
      BigFileSearcher.OnRealtimeResultListener bigFileSearcher_OnRealtimeResultListener0 = mock(BigFileSearcher.OnRealtimeResultListener.class, new ViolatedAssumptionAnswer());
      List<Long> list0 = bigFileSearcher0.searchBigFileRealtime(file0, byteArray0, 2115L, bigFileSearcher_OnRealtimeResultListener0);
      assertFalse(list0.contains(2115L));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      long long0 = bigFileSearcher0.getEllapsedMillis();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("", "");
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      try { 
        bigFileSearcher0.indexOf((File) mockFile0, byteArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/riversun/finbin/BigBinarySearcher
         //
         verifyException("org.riversun.bigdoc.bin.BinFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("worker blockSize=");
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFileRealtime((File) mockFile0, (byte[]) null, (BigFileSearcher.OnRealtimeResultListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      bigFileSearcher0.setUseOptimization(false);
      assertEquals(10485760, BigFileSearcher.DEFAULT_BLOCK_SIZE);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      bigFileSearcher0.setSubThreadSize((-1003));
      assertEquals(24, BigFileSearcher.DEFAULT_MAX_NUM_OF_THREADS);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      bigFileSearcher0._showProfile();
      assertEquals(0L, bigFileSearcher0.getEllapsedMillis());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      // Undeclared exception!
      try { 
        bigFileSearcher0.indexOf((File) null, (byte[]) null, 0L);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/riversun/finbin/BigBinarySearcher
         //
         verifyException("org.riversun.bigdoc.bin.BinFileSearcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigFileSearcher bigFileSearcher0 = new BigFileSearcher();
      MockFile mockFile0 = new MockFile("fQq%KFw-/'}b[>nWG", "fQq%KFw-/'}b[>nWG");
      // Undeclared exception!
      try { 
        bigFileSearcher0.searchBigFile((File) mockFile0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.riversun.bigdoc.bin.BigFileSearcher", e);
      }
  }
}
