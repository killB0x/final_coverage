/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 00:38:38 GMT 2022
 */

package com.google.common.css.compiler.passes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.css.compiler.passes.CodeBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CodeBuffer_ESTest extends CodeBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append(':');
      codeBuffer1.deleteLastCharIfCharIs('8');
      assertEquals(":", codeBuffer0.getOutput());
      assertEquals(0, codeBuffer0.getLastCharIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.deleteLastChars(10);
      assertEquals(0, codeBuffer1.getNextLineIndex());
      assertEquals((-1), codeBuffer1.getLastCharIndex());
      assertEquals(0, codeBuffer1.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.append("N+#<d[Tkpz`/`5lnZvc");
      codeBuffer0.getOutput();
      assertEquals("N+#<d[Tkpz`/`5lnZvc", codeBuffer0.getOutput());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.startNewLine();
      int int0 = codeBuffer0.getNextLineIndex();
      assertEquals("\n", codeBuffer0.getOutput());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append('C');
      int int0 = codeBuffer1.getNextCharIndex();
      assertEquals("C", codeBuffer0.getOutput());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.startNewLine();
      codeBuffer0.startNewLine();
      int int0 = codeBuffer1.getLastLineIndex();
      assertEquals("\n\n", codeBuffer1.getOutput());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.startNewLine();
      int int0 = codeBuffer0.getLastCharIndex();
      assertEquals("\n", codeBuffer0.getOutput());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append('Q');
      codeBuffer1.startNewLine();
      int int0 = codeBuffer0.getLastCharIndex();
      assertEquals(1, codeBuffer0.getNextLineIndex());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.startNewLine();
      char char0 = codeBuffer0.getLastChar();
      assertEquals("\n", codeBuffer0.getOutput());
      assertEquals('\n', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append('8');
      char char0 = codeBuffer1.getLastChar();
      assertEquals("8", codeBuffer0.getOutput());
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append("e2iWsCZ4V/Y^V");
      char char0 = codeBuffer1.getLastChar();
      assertEquals("e2iWsCZ4V/Y^V", codeBuffer0.getOutput());
      assertEquals('V', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.startNewLine();
      codeBuffer1.getCurrentLength();
      assertEquals("\n", codeBuffer0.getOutput());
      assertEquals(1, codeBuffer0.getNextLineIndex());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append('Z');
      codeBuffer1.deleteLastChars((-1));
      assertEquals(1, codeBuffer0.getNextCharIndex());
      assertEquals("Z", codeBuffer0.getOutput());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.startNewLine();
      codeBuffer1.deleteLastChars((-1));
      assertEquals("\n", codeBuffer0.getOutput());
      assertEquals(1, codeBuffer0.getNextLineIndex());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append('Q');
      CodeBuffer codeBuffer2 = codeBuffer1.startNewLine();
      codeBuffer2.deleteLastChars(0);
      assertEquals("Q\n", codeBuffer1.getOutput());
      assertEquals(1, codeBuffer0.getLastCharIndex());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.startNewLine();
      Object object0 = new Object();
      codeBuffer1.append(object0);
      assertEquals(1, codeBuffer0.getNextLineIndex());
      assertEquals(27, codeBuffer0.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append("I");
      codeBuffer1.append('{');
      assertEquals("I{", codeBuffer0.getOutput());
      assertEquals(2, codeBuffer0.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      // Undeclared exception!
      try { 
        codeBuffer0.deleteEndingIfEndingIs("\n");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start -1, end 0, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      // Undeclared exception!
      try { 
        codeBuffer0.deleteEndingIfEndingIs((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.CodeBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      // Undeclared exception!
      try { 
        codeBuffer0.append((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append('8');
      // Undeclared exception!
      try { 
        codeBuffer1.deleteLastChar();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.common.css.compiler.passes.CodeBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.append('\n');
      assertEquals("\n", codeBuffer0.getOutput());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      // Undeclared exception!
      try { 
        codeBuffer0.getLastChar();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.getCurrentLength();
      assertEquals(0, codeBuffer0.getNextLineIndex());
      assertEquals((-1), codeBuffer0.getLastCharIndex());
      assertEquals(0, codeBuffer0.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.deleteEndingIfEndingIs("");
      assertEquals((-1), codeBuffer0.getLastCharIndex());
      assertEquals(0, codeBuffer0.getNextCharIndex());
      assertEquals(0, codeBuffer0.getNextLineIndex());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      Object object0 = new Object();
      codeBuffer0.append(object0);
      codeBuffer0.deleteEndingIfEndingIs(":0c0lW~\"L<{G@u");
      assertEquals(27, codeBuffer0.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.append('@');
      // Undeclared exception!
      try { 
        codeBuffer0.deleteLastCharIfCharIs('@');
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.common.css.compiler.passes.CodeBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.deleteLastCharIfCharIs('S');
      assertEquals((-1), codeBuffer0.getLastCharIndex());
      assertEquals(0, codeBuffer0.getNextLineIndex());
      assertEquals(0, codeBuffer0.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.startNewLine();
      // Undeclared exception!
      try { 
        codeBuffer0.deleteLastChars(1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.common.css.compiler.passes.CodeBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.deleteLastChar();
      assertEquals((-1), codeBuffer1.getLastCharIndex());
      assertEquals(0, codeBuffer1.getNextCharIndex());
      assertEquals(0, codeBuffer1.getNextLineIndex());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.append("9\n");
      assertEquals("9\n", codeBuffer0.getOutput());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append("\n");
      // Undeclared exception!
      try { 
        codeBuffer1.deleteEndingIfEndingIs("\n");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.common.css.compiler.passes.CodeBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.append((String) null);
      assertEquals(0, codeBuffer1.getNextLineIndex());
      assertEquals((-1), codeBuffer1.getLastCharIndex());
      assertEquals(0, codeBuffer1.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.startNewLine();
      int int0 = codeBuffer1.getLastLineIndex();
      assertEquals("\n", codeBuffer0.getOutput());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      int int0 = codeBuffer0.getLastLineIndex();
      assertEquals(0, int0);
      assertEquals((-1), codeBuffer0.getLastCharIndex());
      assertEquals(0, codeBuffer0.getNextCharIndex());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      CodeBuffer codeBuffer1 = codeBuffer0.reset();
      assertEquals("", codeBuffer1.getOutput());
      assertEquals((-1), codeBuffer1.getLastCharIndex());
      assertEquals(0, codeBuffer1.getNextCharIndex());
      assertEquals(0, codeBuffer1.getNextLineIndex());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.getOutput();
      assertEquals((-1), codeBuffer0.getLastCharIndex());
      assertEquals(0, codeBuffer0.getNextCharIndex());
      assertEquals(0, codeBuffer0.getNextLineIndex());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      int int0 = codeBuffer0.getLastCharIndex();
      assertEquals((-1), int0);
      assertEquals(0, codeBuffer0.getNextCharIndex());
      assertEquals(0, codeBuffer0.getNextLineIndex());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      int int0 = codeBuffer0.getNextLineIndex();
      assertEquals((-1), codeBuffer0.getLastCharIndex());
      assertEquals(0, codeBuffer0.getNextCharIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.append((Object) codeBuffer0);
      int int0 = codeBuffer0.getLastLineIndex();
      assertEquals(59, codeBuffer0.getNextCharIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      int int0 = codeBuffer0.getNextCharIndex();
      assertEquals(0, codeBuffer0.getNextLineIndex());
      assertEquals((-1), codeBuffer0.getLastCharIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CodeBuffer codeBuffer0 = new CodeBuffer();
      codeBuffer0.startNewLine();
      codeBuffer0.deleteLastCharIfCharIs('k');
      assertEquals("\n", codeBuffer0.getOutput());
  }
}
