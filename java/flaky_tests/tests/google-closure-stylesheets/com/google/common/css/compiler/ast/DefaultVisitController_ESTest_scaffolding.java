/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 06 00:30:43 GMT 2022
 */

package com.google.common.css.compiler.ast;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DefaultVisitController_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.google.common.css.compiler.ast.DefaultVisitController"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DefaultVisitController_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.css.compiler.ast.CssTree",
      "com.google.common.css.compiler.ast.CssNode",
      "com.google.common.css.Locatable",
      "com.google.common.css.compiler.ast.CssRootNode",
      "com.google.common.css.compiler.ast.DefaultVisitController",
      "com.google.common.css.compiler.ast.DefaultVisitController$StateStack",
      "com.google.common.css.compiler.ast.MutatingVisitController",
      "com.google.common.css.compiler.ast.DefaultVisitController$StopVisitRequestedException",
      "com.google.common.css.compiler.ast.VisitController",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitState"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DefaultVisitController_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.google.common.css.compiler.ast.DefaultVisitController",
      "com.google.common.css.compiler.ast.DefaultVisitController$StateStack",
      "com.google.common.css.compiler.ast.DefaultVisitController$BaseVisitState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitProvideState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitRequireState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitReplaceChildrenState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitMediaRuleState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitChildrenOptionalState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitPageRuleState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitPageSelectorState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitFontFaceState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitImportRuleState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitComponentState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitRefinerNodeState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitDeclarationState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitMixinState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitForLoopRuleState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitUnknownAtRuleState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitWebkitKeyframesState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitKeyframeRulesetState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitConditionalBlockState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitRulesetState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitDefinitionState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitFunctionNodeState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitMixinDefinitionState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitCompositeValueState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitPropertyValueState",
      "com.google.common.css.compiler.ast.DefaultVisitController$RootVisitBeforeChildrenState",
      "com.google.common.css.compiler.ast.DefaultVisitController$StopVisitRequestedException",
      "com.google.common.css.compiler.ast.DefaultVisitController$IntervalueState",
      "com.google.common.css.compiler.ast.DefaultVisitController$RootVisitAfterChildrenState",
      "com.google.common.css.compiler.ast.DefaultVisitController$RootVisitBodyState",
      "com.google.common.css.compiler.ast.DefaultVisitController$RootVisitCharsetState",
      "com.google.common.css.compiler.ast.DefaultVisitController$RootVisitImportBlockState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitChildrenState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitCombinatorState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitConditionalRuleState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitDeclarationBlockState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitFunctionArgumentNodeState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitKeyBlockState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitKeyState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitMediaTypeListDelimiterState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitSelectorBlockState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitSelectorState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitUnknownAtRuleBlockState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitValueNodeState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitDefinitionParametersState",
      "com.google.common.css.compiler.ast.DefaultVisitController$VisitFunctionArgumentsNodeState",
      "com.google.common.css.SourceCode",
      "com.google.common.css.compiler.ast.CssNode",
      "com.google.common.css.compiler.ast.CssNodesListNode",
      "com.google.common.css.compiler.ast.CssAbstractBlockNode",
      "com.google.common.css.compiler.ast.CssDeclarationBlockNode",
      "com.google.common.css.compiler.ast.CssPropertyValueNode",
      "com.google.common.css.compiler.ast.CssTree",
      "com.google.common.css.compiler.ast.CssTree$RulesetNodesToRemove",
      "com.google.common.css.compiler.ast.CssAtRuleNode",
      "com.google.common.css.compiler.ast.CssFontFaceNode",
      "com.google.common.css.compiler.ast.CssValueNode",
      "com.google.common.css.compiler.ast.CssLiteralNode",
      "com.google.common.css.compiler.ast.CssRootNode",
      "com.google.common.css.compiler.ast.CssBlockNode",
      "com.google.common.css.compiler.ast.CssLoopVariableNode",
      "com.google.common.css.compiler.ast.CssFunctionNode",
      "com.google.common.css.compiler.ast.CssSelectorListNode",
      "com.google.common.css.compiler.ast.CssRulesetNode",
      "com.google.common.css.compiler.ast.CssFunctionArgumentsNode",
      "com.google.common.css.compiler.ast.CssConstantReferenceNode",
      "com.google.common.css.compiler.ast.CssSelectorNode",
      "com.google.common.css.compiler.ast.CssCustomFunctionNode",
      "com.google.common.css.compiler.ast.CssRefinerNode",
      "com.google.common.css.compiler.ast.CssPseudoClassNode",
      "com.google.common.css.compiler.ast.CssImportRuleNode",
      "com.google.common.css.compiler.ast.CssImportBlockNode",
      "com.google.common.css.compiler.ast.CssConditionalBlockNode",
      "com.google.common.css.compiler.ast.CssUnicodeRangeNode",
      "com.google.common.css.compiler.ast.CssUnknownAtRuleNode",
      "com.google.common.css.compiler.ast.CssMediaRuleNode",
      "com.google.common.css.compiler.ast.CssCompositeValueNode",
      "com.google.common.css.compiler.ast.CssMathNode",
      "com.google.common.css.compiler.ast.CssClassSelectorNode",
      "com.google.common.css.compiler.ast.CssHexColorNode",
      "com.google.common.css.compiler.ast.CssKeyframeRulesetNode",
      "com.google.common.css.compiler.ast.CssPropertyNode",
      "com.google.common.css.compiler.ast.CssBooleanExpressionNode",
      "com.google.common.css.compiler.ast.CssPriorityNode",
      "com.google.common.css.compiler.ast.CssFunctionNode$Function",
      "com.google.common.css.compiler.ast.CssKeyListNode",
      "com.google.common.css.compiler.ast.CssPseudoElementNode",
      "com.google.common.css.compiler.ast.CssRefinerNode$Refiner",
      "com.google.common.css.compiler.ast.CssRefinerListNode",
      "com.google.common.css.compiler.ast.CssNumericNode",
      "com.google.common.css.compiler.ast.CssKeyNode",
      "com.google.common.css.compiler.ast.CssIdSelectorNode",
      "com.google.common.css.compiler.ast.CssDefinitionNode",
      "com.google.common.css.compiler.ast.CssMixinDefinitionNode",
      "com.google.common.css.compiler.ast.CssComponentNode",
      "com.google.common.css.compiler.ast.CssDeclarationNode",
      "com.google.common.css.compiler.ast.CssKeyframesNode",
      "com.google.common.css.compiler.ast.CssAttributeSelectorNode",
      "com.google.common.css.compiler.ast.CssConditionalRuleNode"
    );
  }
}
