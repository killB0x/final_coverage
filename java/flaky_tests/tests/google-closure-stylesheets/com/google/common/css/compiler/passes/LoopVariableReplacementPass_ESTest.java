/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 00:43:20 GMT 2022
 */

package com.google.common.css.compiler.passes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.css.compiler.ast.CssClassSelectorNode;
import com.google.common.css.compiler.ast.CssDefinitionNode;
import com.google.common.css.compiler.ast.CssForLoopRuleNode;
import com.google.common.css.compiler.ast.CssPseudoClassNode;
import com.google.common.css.compiler.ast.CssValueNode;
import com.google.common.css.compiler.ast.MutatingVisitController;
import com.google.common.css.compiler.passes.LoopVariableReplacementPass;
import java.nio.charset.Charset;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoopVariableReplacementPass_ESTest extends LoopVariableReplacementPass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass("^*3$H}_0", 117, set0, (MutatingVisitController) null, 117);
      // Undeclared exception!
      try { 
        loopVariableReplacementPass0.runPass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.LoopVariableReplacementPass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass("", (-2657), (Set<String>) null, (MutatingVisitController) null, (-2657));
      // Undeclared exception!
      try { 
        loopVariableReplacementPass0.enterPseudoClass((CssPseudoClassNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.LoopVariableReplacementPass", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass("TRUE", (-1537), (Set<String>) null, (MutatingVisitController) null, (-1537));
      // Undeclared exception!
      try { 
        loopVariableReplacementPass0.enterClassSelector((CssClassSelectorNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.LoopVariableReplacementPass", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LoopVariableReplacementPass loopVariableReplacementPass0 = null;
      try {
        loopVariableReplacementPass0 = new LoopVariableReplacementPass((String) null, 1596, (Set<String>) null, (MutatingVisitController) null, (-373));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass("", 206, (Set<String>) null, (MutatingVisitController) null, 206);
      boolean boolean0 = loopVariableReplacementPass0.enterArgumentNode((CssValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass(">j={M", 206, (Set<String>) null, (MutatingVisitController) null, 206);
      boolean boolean0 = loopVariableReplacementPass0.enterValueNode((CssValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass("zt3AOZ2]_J~", 206, (Set<String>) null, (MutatingVisitController) null, 206);
      // Undeclared exception!
      try { 
        loopVariableReplacementPass0.enterDefinition((CssDefinitionNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.LoopVariableReplacementPass", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      MutatingVisitController mutatingVisitController0 = mock(MutatingVisitController.class, new ViolatedAssumptionAnswer());
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass(".X2bk8W}69})y", 0, set0, mutatingVisitController0, 0);
      loopVariableReplacementPass0.runPass();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      LoopVariableReplacementPass loopVariableReplacementPass0 = new LoopVariableReplacementPass("9__", 1414, linkedHashSet0, (MutatingVisitController) null, 1414);
      // Undeclared exception!
      try { 
        loopVariableReplacementPass0.enterForLoop((CssForLoopRuleNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.LoopVariableReplacementPass", e);
      }
  }
}
