/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 00:32:24 GMT 2022
 */

package com.google.common.css.compiler.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.css.compiler.ast.ParseException;
import com.google.common.css.compiler.ast.Token;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseException_ESTest extends ParseException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ParseException.add_escapes("UZo+{oG9t!^~C");
      assertEquals("UZo+{oG9t!^~C", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ParseException.add_escapes("Mghb.@[< Nz");
      assertEquals("Mghb.@[< Nz", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[3];
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[2];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.ast.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = ParseException.add_escapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Token token0 = new Token(0);
      // Undeclared exception!
      try { 
        ParseException.add_escapes(token0.image);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.ast.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Token token0 = new Token(1, "mlyfWM6(;wrR0f>/P");
      int[][] intArray0 = new int[7][6];
      int[] intArray1 = new int[9];
      intArray1[2] = 2099;
      intArray0[3] = intArray1;
      String[] stringArray0 = new String[3];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2099 out of bounds for length 3
         //
         verifyException("com.google.common.css.compiler.ast.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseException.add_escapes("-;wwR3\"/sUP>u.FK");
      assertEquals("-;wwR3\\\"/sUP>u.FK", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ParseException.add_escapes("$6c9%T$'nwR@\"AD");
      assertEquals("$6c9%T$\\'nwR@\\\"AD", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ParseException.add_escapes("\n");
      assertEquals("\\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Token token0 = new Token(0);
      int[][] intArray0 = new int[1][3];
      String[] stringArray0 = new String[4];
      token0.next = token0;
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Token token0 = new Token(0, "J=)'M(YAdi");
      int[][] intArray0 = new int[0][5];
      token0.next = token0;
      String[] stringArray0 = new String[2];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[8][1];
      token0.next = token0;
      String[] stringArray0 = new String[2];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token token0 = new Token();
      Token token1 = new Token(36, "9jMJtd&\"G");
      token0.next = token1;
      int[][] intArray0 = new int[40][5];
      String[] stringArray0 = new String[37];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.ast.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token token0 = Token.newToken(122, "  ");
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[5];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.ast.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParseException parseException0 = new ParseException("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseException parseException0 = new ParseException();
  }
}
