/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 00:55:43 GMT 2022
 */

package com.google.common.css.compiler.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.css.compiler.ast.CssAtRuleNode;
import com.google.common.css.compiler.ast.CssCommentNode;
import com.google.common.css.compiler.ast.CssConditionalRuleNode;
import com.google.common.css.compiler.ast.CssDeclarationBlockNode;
import com.google.common.css.compiler.ast.CssDefinitionNode;
import com.google.common.css.compiler.ast.CssLiteralNode;
import com.google.common.css.compiler.ast.CssPageSelectorNode;
import com.google.common.css.compiler.ast.CssValueNode;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CssAtRuleNode_ESTest extends CssAtRuleNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.PAGE;
      ArrayList<CssCommentNode> arrayList0 = new ArrayList<CssCommentNode>();
      CssPageSelectorNode cssPageSelectorNode0 = null;
      try {
        cssPageSelectorNode0 = new CssPageSelectorNode(cssAtRuleNode_Type0, arrayList0, (CssDeclarationBlockNode) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Lists
         //
         verifyException("com.google.common.css.compiler.ast.CssNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayList<CssCommentNode> arrayList0 = new ArrayList<CssCommentNode>();
      CssDefinitionNode cssDefinitionNode0 = null;
      try {
        cssDefinitionNode0 = new CssDefinitionNode((CssLiteralNode) null, arrayList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Lists
         //
         verifyException("com.google.common.css.compiler.ast.CssNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.IF;
      CssConditionalRuleNode cssConditionalRuleNode0 = null;
      try {
        cssConditionalRuleNode0 = new CssConditionalRuleNode(cssAtRuleNode_Type0, (CssLiteralNode) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.google.common.css.compiler.ast.CssBlockNode
         //
         verifyException("com.google.common.css.compiler.ast.CssAtRuleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayList<CssValueNode> arrayList0 = new ArrayList<CssValueNode>();
      CssDefinitionNode cssDefinitionNode0 = null;
      try {
        cssDefinitionNode0 = new CssDefinitionNode(arrayList0, (CssLiteralNode) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Lists
         //
         verifyException("com.google.common.css.compiler.ast.CssNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.PAGE;
      boolean boolean0 = cssAtRuleNode_Type0.isConditional();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.ELSEIF;
      boolean boolean0 = cssAtRuleNode_Type0.isConditional();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.ELSE;
      boolean boolean0 = cssAtRuleNode_Type0.isConditional();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.IF;
      boolean boolean0 = cssAtRuleNode_Type0.isConditional();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.LEFT_BOTTOM;
      boolean boolean0 = cssAtRuleNode_Type0.hasBlock();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CssAtRuleNode.Type cssAtRuleNode_Type0 = CssAtRuleNode.Type.LEFT_BOTTOM;
      String string0 = cssAtRuleNode_Type0.toString();
      assertEquals("@left-bottom", string0);
  }
}
