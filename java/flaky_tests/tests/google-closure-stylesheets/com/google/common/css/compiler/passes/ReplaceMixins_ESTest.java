/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 00:26:58 GMT 2022
 */

package com.google.common.css.compiler.passes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.css.compiler.ast.CssDeclarationBlockNode;
import com.google.common.css.compiler.ast.CssDeclarationNode;
import com.google.common.css.compiler.ast.CssMixinDefinitionNode;
import com.google.common.css.compiler.ast.CssMixinNode;
import com.google.common.css.compiler.ast.CssValueNode;
import com.google.common.css.compiler.ast.ErrorManager;
import com.google.common.css.compiler.ast.MutatingVisitController;
import com.google.common.css.compiler.passes.ReplaceMixins;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReplaceMixins_ESTest extends ReplaceMixins_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, CssMixinDefinitionNode> hashMap0 = new HashMap<String, CssMixinDefinitionNode>();
      ReplaceMixins replaceMixins0 = new ReplaceMixins((MutatingVisitController) null, (ErrorManager) null, hashMap0);
      // Undeclared exception!
      try { 
        replaceMixins0.runPass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.ReplaceMixins", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MutatingVisitController mutatingVisitController0 = mock(MutatingVisitController.class, new ViolatedAssumptionAnswer());
      HashMap<String, CssMixinDefinitionNode> hashMap0 = new HashMap<String, CssMixinDefinitionNode>();
      ReplaceMixins replaceMixins0 = new ReplaceMixins(mutatingVisitController0, (ErrorManager) null, hashMap0);
      replaceMixins0.leaveDeclaration((CssDeclarationNode) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, CssMixinDefinitionNode> hashMap0 = new HashMap<String, CssMixinDefinitionNode>();
      ReplaceMixins replaceMixins0 = new ReplaceMixins((MutatingVisitController) null, (ErrorManager) null, hashMap0);
      // Undeclared exception!
      try { 
        replaceMixins0.leaveMixin((CssMixinNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.ReplaceMixins", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MutatingVisitController mutatingVisitController0 = mock(MutatingVisitController.class, new ViolatedAssumptionAnswer());
      HashMap<String, CssMixinDefinitionNode> hashMap0 = new HashMap<String, CssMixinDefinitionNode>();
      ReplaceMixins replaceMixins0 = new ReplaceMixins(mutatingVisitController0, (ErrorManager) null, hashMap0);
      boolean boolean0 = replaceMixins0.enterValueNode((CssValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MutatingVisitController mutatingVisitController0 = mock(MutatingVisitController.class, new ViolatedAssumptionAnswer());
      HashMap<String, CssMixinDefinitionNode> hashMap0 = new HashMap<String, CssMixinDefinitionNode>();
      ReplaceMixins replaceMixins0 = new ReplaceMixins(mutatingVisitController0, (ErrorManager) null, hashMap0);
      replaceMixins0.runPass();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MutatingVisitController mutatingVisitController0 = mock(MutatingVisitController.class, new ViolatedAssumptionAnswer());
      HashMap<String, CssMixinDefinitionNode> hashMap0 = new HashMap<String, CssMixinDefinitionNode>();
      ReplaceMixins replaceMixins0 = new ReplaceMixins(mutatingVisitController0, (ErrorManager) null, hashMap0);
      boolean boolean0 = replaceMixins0.enterArgumentNode((CssValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReplaceMixins replaceMixins0 = new ReplaceMixins((MutatingVisitController) null, (ErrorManager) null, (Map<String, CssMixinDefinitionNode>) null);
      replaceMixins0.leaveDeclarationBlock((CssDeclarationBlockNode) null);
  }
}
