/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 01:46:36 GMT 2022
 */

package com.google.common.css.compiler.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.google.common.css.compiler.ast.CssAttributeSelectorNode;
import com.google.common.css.compiler.ast.CssBlockNode;
import com.google.common.css.compiler.ast.CssClassSelectorNode;
import com.google.common.css.compiler.ast.CssCombinatorNode;
import com.google.common.css.compiler.ast.CssComponentNode;
import com.google.common.css.compiler.ast.CssCompositeValueNode;
import com.google.common.css.compiler.ast.CssConditionalBlockNode;
import com.google.common.css.compiler.ast.CssConditionalRuleNode;
import com.google.common.css.compiler.ast.CssDeclarationBlockNode;
import com.google.common.css.compiler.ast.CssDeclarationNode;
import com.google.common.css.compiler.ast.CssDefinitionNode;
import com.google.common.css.compiler.ast.CssFontFaceNode;
import com.google.common.css.compiler.ast.CssForLoopRuleNode;
import com.google.common.css.compiler.ast.CssFunctionNode;
import com.google.common.css.compiler.ast.CssIdSelectorNode;
import com.google.common.css.compiler.ast.CssImportBlockNode;
import com.google.common.css.compiler.ast.CssImportRuleNode;
import com.google.common.css.compiler.ast.CssKeyListNode;
import com.google.common.css.compiler.ast.CssKeyNode;
import com.google.common.css.compiler.ast.CssKeyframeRulesetNode;
import com.google.common.css.compiler.ast.CssKeyframesNode;
import com.google.common.css.compiler.ast.CssMediaRuleNode;
import com.google.common.css.compiler.ast.CssMixinDefinitionNode;
import com.google.common.css.compiler.ast.CssMixinNode;
import com.google.common.css.compiler.ast.CssNode;
import com.google.common.css.compiler.ast.CssNodesListNode;
import com.google.common.css.compiler.ast.CssPageRuleNode;
import com.google.common.css.compiler.ast.CssPageSelectorNode;
import com.google.common.css.compiler.ast.CssPropertyValueNode;
import com.google.common.css.compiler.ast.CssProvideNode;
import com.google.common.css.compiler.ast.CssPseudoClassNode;
import com.google.common.css.compiler.ast.CssPseudoElementNode;
import com.google.common.css.compiler.ast.CssRequireNode;
import com.google.common.css.compiler.ast.CssRootNode;
import com.google.common.css.compiler.ast.CssRulesetNode;
import com.google.common.css.compiler.ast.CssSelectorListNode;
import com.google.common.css.compiler.ast.CssSelectorNode;
import com.google.common.css.compiler.ast.CssUnknownAtRuleNode;
import com.google.common.css.compiler.ast.CssValueNode;
import com.google.common.css.compiler.ast.DefaultTreeVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultTreeVisitor_ESTest extends DefaultTreeVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterKey((CssKeyNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveAttributeSelector((CssAttributeSelectorNode) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveImportBlock((CssImportBlockNode) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveBlock((CssBlockNode) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterCompositeValueNode((CssCompositeValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveImportRule((CssImportRuleNode) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterDeclaration((CssDeclarationNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leavePageRule((CssPageRuleNode) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterClassSelector((CssClassSelectorNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterKeyframeRuleset((CssKeyframeRulesetNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveRuleset((CssRulesetNode) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveKey((CssKeyNode) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveConditionalBlock((CssConditionalBlockNode) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterMediaTypeListDelimiter((CssNodesListNode<? extends CssNode>) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterKeyBlock((CssKeyListNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterMixin((CssMixinNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveValueNode((CssValueNode) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveSelectorBlock((CssSelectorListNode) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterSelectorBlock((CssSelectorListNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveConditionalRule((CssConditionalRuleNode) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterImportBlock((CssImportBlockNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterComponent((CssComponentNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterAttributeSelector((CssAttributeSelectorNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveIdSelector((CssIdSelectorNode) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterBlock((CssBlockNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterFontFace((CssFontFaceNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterCombinator((CssCombinatorNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterImportRule((CssImportRuleNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterIdSelector((CssIdSelectorNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterDeclarationBlock((CssDeclarationBlockNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveCompositeValueNodeOperator((CssCompositeValueNode) null);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveCombinator((CssCombinatorNode) null);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveKeyBlock((CssKeyListNode) null);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      CssNodesListNode<CssPseudoElementNode> cssNodesListNode0 = (CssNodesListNode<CssPseudoElementNode>) mock(CssNodesListNode.class, new ViolatedAssumptionAnswer());
      defaultTreeVisitor0.leaveMediaTypeListDelimiter(cssNodesListNode0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveFunctionNode((CssFunctionNode) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveArgumentNode((CssValueNode) null);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveForLoop((CssForLoopRuleNode) null);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveMixin((CssMixinNode) null);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterPropertyValue((CssPropertyValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterProvideNode((CssProvideNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterTree((CssRootNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveUnknownAtRule((CssUnknownAtRuleNode) null);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterSelector((CssSelectorNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveTree((CssRootNode) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveKeyframesRule((CssKeyframesNode) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leavePseudoClass((CssPseudoClassNode) null);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveKeyframeRuleset((CssKeyframeRulesetNode) null);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterPageSelector((CssPageSelectorNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterPseudoElement((CssPseudoElementNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveComponent((CssComponentNode) null);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterConditionalRule((CssConditionalRuleNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterCompositeValueNodeOperator((CssCompositeValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterDefinition((CssDefinitionNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveRequireNode((CssRequireNode) null);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveDeclarationBlock((CssDeclarationBlockNode) null);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveMixinDefinition((CssMixinDefinitionNode) null);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterValueNode((CssValueNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterPageRule((CssPageRuleNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterRuleset((CssRulesetNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterForLoop((CssForLoopRuleNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterFunctionNode((CssFunctionNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveProvideNode((CssProvideNode) null);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveDefinition((CssDefinitionNode) null);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveFontFace((CssFontFaceNode) null);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterUnknownAtRule((CssUnknownAtRuleNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leavePropertyValue((CssPropertyValueNode) null);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveClassSelector((CssClassSelectorNode) null);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveSelector((CssSelectorNode) null);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveDeclaration((CssDeclarationNode) null);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterConditionalBlock((CssConditionalBlockNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterMixinDefinition((CssMixinDefinitionNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterKeyframesRule((CssKeyframesNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leavePseudoElement((CssPseudoElementNode) null);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterRequireNode((CssRequireNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterPseudoClass((CssPseudoClassNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leavePageSelector((CssPageSelectorNode) null);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterMediaRule((CssMediaRuleNode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveMediaRule((CssMediaRuleNode) null);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      defaultTreeVisitor0.leaveCompositeValueNode((CssCompositeValueNode) null);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DefaultTreeVisitor defaultTreeVisitor0 = new DefaultTreeVisitor();
      boolean boolean0 = defaultTreeVisitor0.enterArgumentNode((CssValueNode) null);
      assertTrue(boolean0);
  }
}
