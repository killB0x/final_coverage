/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 01:41:19 GMT 2022
 */

package com.google.common.css.compiler.passes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.css.compiler.ast.CssDefinitionNode;
import com.google.common.css.compiler.ast.CssFontFaceNode;
import com.google.common.css.compiler.ast.CssFunctionNode;
import com.google.common.css.compiler.ast.CssKeyframesNode;
import com.google.common.css.compiler.ast.CssMediaRuleNode;
import com.google.common.css.compiler.ast.CssNode;
import com.google.common.css.compiler.ast.CssProvideNode;
import com.google.common.css.compiler.ast.CssSelectorNode;
import com.google.common.css.compiler.ast.CssTree;
import com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapChunkAwareNodesToChunk_ESTest extends MapChunkAwareNodesToChunk_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapChunkAwareNodesToChunk<Object> mapChunkAwareNodesToChunk0 = new MapChunkAwareNodesToChunk<Object>((CssTree) null, hashMap0);
      // Undeclared exception!
      try { 
        mapChunkAwareNodesToChunk0.enterDefinition((CssDefinitionNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapChunkAwareNodesToChunk<Object> mapChunkAwareNodesToChunk0 = new MapChunkAwareNodesToChunk<Object>((CssTree) null, hashMap0);
      // Undeclared exception!
      try { 
        mapChunkAwareNodesToChunk0.enterFunctionNode((CssFunctionNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, CssProvideNode> hashMap0 = new HashMap<String, CssProvideNode>();
      MapChunkAwareNodesToChunk<CssProvideNode> mapChunkAwareNodesToChunk0 = new MapChunkAwareNodesToChunk<CssProvideNode>((CssTree) null, hashMap0);
      // Undeclared exception!
      try { 
        mapChunkAwareNodesToChunk0.enterFontFace((CssFontFaceNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapChunkAwareNodesToChunk<Object> mapChunkAwareNodesToChunk0 = new MapChunkAwareNodesToChunk<Object>((CssTree) null, hashMap0);
      // Undeclared exception!
      try { 
        mapChunkAwareNodesToChunk0.enterMediaRule((CssMediaRuleNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapChunkAwareNodesToChunk<Object> mapChunkAwareNodesToChunk0 = new MapChunkAwareNodesToChunk<Object>((CssTree) null, hashMap0);
      // Undeclared exception!
      try { 
        mapChunkAwareNodesToChunk0.enterSelector((CssSelectorNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapChunkAwareNodesToChunk<Object> mapChunkAwareNodesToChunk0 = new MapChunkAwareNodesToChunk<Object>((CssTree) null, hashMap0);
      // Undeclared exception!
      try { 
        mapChunkAwareNodesToChunk0.enterKeyframesRule((CssKeyframesNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, CssProvideNode> hashMap0 = new HashMap<String, CssProvideNode>();
      // Undeclared exception!
      try { 
        MapChunkAwareNodesToChunk.getChunk((CssNode) null, (Map<String, CssProvideNode>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapChunkAwareNodesToChunk<Object> mapChunkAwareNodesToChunk0 = new MapChunkAwareNodesToChunk<Object>((CssTree) null, hashMap0);
      // Undeclared exception!
      try { 
        mapChunkAwareNodesToChunk0.runPass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.css.compiler.passes.MapChunkAwareNodesToChunk", e);
      }
  }
}
