/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:28:36 GMT 2022
 */

package ch.hsr.geohash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.hsr.geohash.BoundingBox;
import ch.hsr.geohash.WGS84Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BoundingBox_ESTest extends BoundingBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      WGS84Point wGS84Point0 = new WGS84Point(2.0, 19.8506842905);
      BoundingBox boundingBox1 = new BoundingBox(wGS84Point0, wGS84Point0);
      boundingBox0.expandToInclude(boundingBox1);
      assertEquals(2.0, boundingBox0.getNorthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-39.701368581), (-39.701368581), 1.0, 0.0);
      WGS84Point wGS84Point0 = new WGS84Point(0.0, (-180.0));
      BoundingBox boundingBox1 = new BoundingBox(wGS84Point0, wGS84Point0);
      boundingBox1.expandToInclude(boundingBox0);
      assertEquals((-39.701368581), boundingBox1.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-33.20856322015107), 0.0, 180.0, 0.0);
      WGS84Point wGS84Point0 = boundingBox0.getCenter();
      boolean boolean0 = boundingBox0.contains(wGS84Point0);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals((-16.604281610075535), wGS84Point0.getLatitude(), 0.01);
      assertEquals(90.0, wGS84Point0.getLongitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, boundingBox0.getEastLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(89.44126677575427, 180.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      
      WGS84Point wGS84Point1 = boundingBox0.getCenter();
      assertFalse(boundingBox0.intersects180Meridian());
      assertTrue(wGS84Point1.equals((Object)wGS84Point0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(7.882541144877488, 7.882541144877488, 7.882541144877488, (-39.701368581));
      BoundingBox boundingBox1 = new BoundingBox(7.882541144877488, 7.882541144877488, 7.882541144877488, 7.882541144877488);
      WGS84Point wGS84Point0 = new WGS84Point((-39.701368581), (-1.0));
      boundingBox0.expandToInclude(wGS84Point0);
      boolean boolean0 = boundingBox1.intersects(boundingBox0);
      assertEquals(47.58390972587748, boundingBox0.getLatitudeSize(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      BoundingBox boundingBox1 = new BoundingBox(boundingBox0);
      boundingBox0.expandToInclude(boundingBox1);
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertFalse(boundingBox0.intersects180Meridian());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, (-19.970476923869796), (-39.701368581));
      WGS84Point wGS84Point0 = boundingBox0.getCenter();
      WGS84Point wGS84Point1 = new WGS84Point(0.0, 0.0);
      BoundingBox boundingBox1 = new BoundingBox(wGS84Point0, wGS84Point1);
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertFalse(boundingBox1.intersects180Meridian());
      assertEquals(29.835922752434897, boundingBox1.getLongitudeSize(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, boundingBox1.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-2.2975571577875114), (-2.2975571577875114), (-2.2975571577875114), (-28.241617682120232));
      BoundingBox boundingBox1 = new BoundingBox((-28.241617682120232), (-2.2975571577875114), (-110.208502), (-28.241617682120232));
      BoundingBox boundingBox2 = new BoundingBox(boundingBox1);
      boolean boolean0 = boundingBox0.intersects(boundingBox2);
      assertEquals(81.96688431787976, boundingBox1.getLongitudeSize(), 0.01);
      assertEquals(334.0559394756673, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox2.intersects180Meridian());
      assertTrue(boolean0);
      assertEquals(25.94406052433272, boundingBox1.getLatitudeSize(), 0.01);
      assertEquals((-2.2975571577875114), boundingBox0.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-17.737878622358437), (-0.0085376823255589));
      boolean boolean0 = boundingBox0.intersects(boundingBox0);
      assertTrue(boolean0);
      assertEquals((-0.0085376823255589), boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(17.729340940032877, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      boundingBox0.hashCode();
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(320.298631419, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      BoundingBox boundingBox1 = new BoundingBox(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = boundingBox1.equals(boundingBox0);
      assertFalse(boundingBox0.equals((Object)boundingBox1));
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertEquals(0.0, boundingBox1.getLongitudeSize(), 0.01);
      assertFalse(boundingBox1.intersects180Meridian());
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getNorthLatitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, boundingBox1.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-2.17), (-2.17), (-2.17), (-2.17));
      BoundingBox boundingBox1 = new BoundingBox((-2.17), 0.0, (-2.17), 0.0);
      boolean boolean0 = boundingBox0.equals(boundingBox1);
      assertEquals(2.17, boundingBox1.getLongitudeSize(), 0.01);
      assertEquals(2.17, boundingBox1.getLatitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertFalse(boolean0);
      assertEquals((-2.17), boundingBox0.getEastLongitude(), 0.01);
      assertFalse(boundingBox1.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, 0.0);
      BoundingBox boundingBox1 = new BoundingBox(0.0, 0.0, 2.0, 2.0);
      boolean boolean0 = boundingBox1.equals(boundingBox0);
      assertEquals(0.0, boundingBox1.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox1.getLatitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertFalse(boolean0);
      assertFalse(boundingBox1.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-24.2402801270461), (-24.2402801270461), 0.0, (-39.701368581));
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 0.0);
      BoundingBox boundingBox1 = new BoundingBox(wGS84Point0, wGS84Point0);
      boolean boolean0 = boundingBox0.equals(boundingBox1);
      assertTrue(boundingBox0.intersects180Meridian());
      assertFalse(boolean0);
      assertEquals(0.0, boundingBox1.getWestLongitude(), 0.01);
      assertEquals(320.298631419, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertFalse(boundingBox1.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 180.0, 0.0);
      boolean boolean0 = boundingBox0.intersects180Meridian();
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(180.0, boundingBox0.getWestLongitude(), 0.01);
      assertEquals(180.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getEastLongitude(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 0.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      double double0 = boundingBox0.getWestLongitude();
      assertEquals(0.0, boundingBox0.getEastLongitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      WGS84Point wGS84Point0 = boundingBox0.getSouthWestCorner();
      assertEquals(0.0, wGS84Point0.getLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getNorthLatitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, wGS84Point0.getLongitude(), 0.01);
      assertEquals(320.298631419, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(1.0, 13.010859072927598);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      WGS84Point wGS84Point1 = boundingBox0.getSouthWestCorner();
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(1.0, boundingBox0.getNorthLatitude(), 0.01);
      assertTrue(wGS84Point1.equals((Object)wGS84Point0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 0.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      double double0 = boundingBox0.getSouthLatitude();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      double double0 = boundingBox0.getSouthLatitude();
      assertEquals(90.0, double0, 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 0.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      WGS84Point wGS84Point1 = boundingBox0.getSouthEastCorner();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, wGS84Point1.getLatitude(), 0.01);
      assertEquals(0.0, wGS84Point1.getLongitude(), 0.01);
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      WGS84Point wGS84Point0 = boundingBox0.getSouthEastCorner();
      BoundingBox boundingBox1 = new BoundingBox(wGS84Point0, wGS84Point0);
      double double0 = boundingBox1.getWestLongitude();
      assertEquals((-39.701368581), double0, 0.01);
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertFalse(boundingBox1.intersects180Meridian());
      assertEquals(0.0, boundingBox1.getSouthLatitude(), 0.01);
      assertEquals(0.0, boundingBox1.getNorthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(2.0311978232942596, 2.0311978232942596, 2.0311978232942596, 2.0311978232942596);
      WGS84Point wGS84Point0 = boundingBox0.getSouthEastCorner();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(2.0311978232942596, wGS84Point0.getLongitude(), 0.01);
      assertEquals(2.0311978232942596, wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      WGS84Point wGS84Point0 = boundingBox0.getNorthWestCorner();
      assertEquals(320.298631419, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, wGS84Point0.getLatitude(), 0.01);
      assertEquals(0.0, wGS84Point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      WGS84Point wGS84Point1 = boundingBox0.getNorthWestCorner();
      assertEquals(90.0, boundingBox0.getEastLongitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertTrue(wGS84Point1.equals((Object)wGS84Point0));
      assertEquals(90.0, boundingBox0.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      double double0 = boundingBox0.getNorthLatitude();
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, double0, 0.01);
      assertEquals(320.298631419, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point((-0.0085376823255589), (-0.0085376823255589));
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      double double0 = boundingBox0.getNorthLatitude();
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals((-0.0085376823255589), double0, 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, 0.0);
      WGS84Point wGS84Point0 = boundingBox0.getNorthEastCorner();
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(0.0, wGS84Point0.getLatitude(), 0.01);
      assertEquals(0.0, wGS84Point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      WGS84Point wGS84Point0 = boundingBox0.getNorthEastCorner();
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, wGS84Point0.getLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals((-39.701368581), wGS84Point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(1.0, 1.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      WGS84Point wGS84Point1 = boundingBox0.getNorthEastCorner();
      assertEquals(1.0, boundingBox0.getWestLongitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(1.0, boundingBox0.getSouthLatitude(), 0.01);
      assertTrue(wGS84Point1.equals((Object)wGS84Point0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(2.0311978232942596, 39.701368581, 2.0311978232942596, 39.701368581);
      double double0 = boundingBox0.getLatitudeSize();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(37.67017075770574, double0, 0.01);
      assertEquals(37.67017075770574, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point((-39.701368581), 2.857447532759896);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      double double0 = boundingBox0.getEastLongitude();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(2.857447532759896, double0, 0.01);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      double double0 = boundingBox0.getEastLongitude();
      assertEquals((-39.701368581), double0, 0.01);
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 90.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      boundingBox0.expandToInclude(boundingBox0);
      boundingBox0.getCenter();
      assertEquals(360.0, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-1.0), (-1.0), (-1.0), (-1.0));
      // Undeclared exception!
      try { 
        boundingBox0.intersects((BoundingBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      // Undeclared exception!
      try { 
        boundingBox0.expandToInclude((WGS84Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.1176330005730275), (-0.1176330005730275), (-0.1176330005730275), (-0.1176330005730275));
      // Undeclared exception!
      try { 
        boundingBox0.expandToInclude((BoundingBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(8.1, 8.1, 8.1, 8.1);
      // Undeclared exception!
      try { 
        boundingBox0.contains((WGS84Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox((WGS84Point) null, (WGS84Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point((-64.8255741719677), 17.123761457057622);
      WGS84Point wGS84Point1 = new WGS84Point(17.123761457057622, 17.123761457057622);
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox(wGS84Point1, wGS84Point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The southLatitude must not be greater than the northLatitude
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-17.737878622358437), (-0.0085376823255589));
      WGS84Point wGS84Point0 = boundingBox0.getNorthWestCorner();
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertEquals((-0.0085376823255589), wGS84Point0.getLatitude(), 0.01);
      assertEquals(17.729340940032877, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals((-17.737878622358437), wGS84Point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 17.04631967683567, 17.04631967683567, 0.0);
      WGS84Point wGS84Point0 = boundingBox0.getCenter();
      boundingBox0.expandToInclude(wGS84Point0);
      assertEquals(8.523159838417834, boundingBox0.getEastLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      WGS84Point wGS84Point0 = new WGS84Point((-39.701368581), 0.0);
      boolean boolean0 = boundingBox0.contains(wGS84Point0);
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getNorthLatitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(320.298631419, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      WGS84Point wGS84Point0 = new WGS84Point((-0.0085376823255589), 180.0);
      BoundingBox boundingBox1 = new BoundingBox(wGS84Point0, wGS84Point0);
      boundingBox0.expandToInclude(boundingBox1);
      assertEquals(179.99146231767443, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      BoundingBox boundingBox1 = new BoundingBox((-0.0085), 2.0, 2.0, 2.0);
      assertEquals(2.0, boundingBox1.getWestLongitude(), 0.01);
      
      boundingBox1.expandToInclude(boundingBox0);
      assertEquals((-0.0085), boundingBox1.getWestLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(7.712483759746703, 7.712483759746703, 7.712483759746703, 7.712483759746703);
      BoundingBox boundingBox1 = new BoundingBox(7.712483759746703, 7.712483759746703, 7.712483759746703, 90.0);
      boundingBox0.expandToInclude(boundingBox1);
      assertEquals(82.2875162402533, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-16.56124270321556), (-0.0085376823255589));
      BoundingBox boundingBox1 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      boundingBox0.expandToInclude(boundingBox1);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(16.55270502089, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-3.5965344), (-3.5965344), (-3.5965344), (-67.40895012737268));
      BoundingBox boundingBox1 = new BoundingBox((-67.40895012737268), (-3.5965344), (-67.40895012737268), (-67.40895012737268));
      boundingBox1.expandToInclude(boundingBox0);
      assertTrue(boundingBox1.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      BoundingBox boundingBox1 = new BoundingBox((-0.0085), 2.0, 2.0, 2.0);
      boundingBox0.expandToInclude(boundingBox1);
      assertEquals(2.0, boundingBox0.getNorthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-26.658543844458077), (-26.658543844458077), (-26.658543844458077), (-26.658543844458077));
      WGS84Point wGS84Point0 = new WGS84Point((-26.658543844458077), 180.0);
      boundingBox0.expandToInclude(wGS84Point0);
      assertEquals(153.34145615554192, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 0.0);
      boundingBox0.expandToInclude(wGS84Point0);
      assertEquals(0.0085376823255589, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      
      WGS84Point wGS84Point0 = new WGS84Point((-0.0085376823255589), (-0.0085376823255589));
      boundingBox0.expandToInclude(wGS84Point0);
      assertFalse(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.9550722888331376, 0.9550722888331376, 0.9550722888331376, 0.9550722888331376);
      BoundingBox boundingBox1 = new BoundingBox(0.9550722888331376, 0.9550722888331376, 1.0, (-1.0));
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertTrue(boundingBox1.intersects180Meridian());
      assertEquals(0.0, boundingBox1.getLatitudeSize(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-81.0882472), (-81.0882472), 180.0, 180.0);
      BoundingBox boundingBox1 = new BoundingBox((-81.0882472), (-81.0882472), 180.0, (-81.0882472));
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertTrue(boolean0);
      assertEquals(98.91175279999999, boundingBox1.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-1.6441195563990478), (-1.6441195563990478), (-1.6441195563990478), (-28.241617682120232));
      WGS84Point wGS84Point0 = boundingBox0.getCenter();
      BoundingBox boundingBox1 = new BoundingBox(wGS84Point0, wGS84Point0);
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertFalse(boolean0);
      assertEquals((-14.94286861925964), boundingBox1.getWestLongitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox1.getLatitudeSize(), 0.01);
      assertEquals((-1.6441195563990478), boundingBox1.getNorthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(77.68877869268846, 77.68877869268846, 77.68877869268846, 77.68877869268846);
      BoundingBox boundingBox1 = new BoundingBox(77.68877869268846, 77.68877869268846, 77.68877869268846, 2.0);
      boolean boolean0 = boundingBox1.intersects(boundingBox0);
      assertEquals(284.31122130731154, boundingBox1.getLongitudeSize(), 0.01);
      assertTrue(boolean0);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox1.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-1.6441195563990478), (-1.6441195563990478), (-1.6441195563990478), (-28.241617682120232));
      BoundingBox boundingBox1 = new BoundingBox((-28.241617682120232), (-1.6441195563990478), (-28.241617682120232), (-28.241617682120232));
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertTrue(boolean0);
      assertEquals((-1.6441195563990478), boundingBox0.getSouthLatitude(), 0.01);
      assertFalse(boundingBox1.intersects180Meridian());
      assertEquals(333.4025018742788, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      BoundingBox boundingBox1 = new BoundingBox((-0.0085), (-0.0085), 0.0, 0.0);
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox1.getEastLongitude(), 0.01);
      assertEquals(0.0, boundingBox1.getLatitudeSize(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(12.714256335558112, 12.714256335558112, 12.714256335558112, 12.714256335558112);
      BoundingBox boundingBox1 = new BoundingBox(0.0, 12.714256335558112, 0.0, 0.0);
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertFalse(boolean0);
      assertEquals(0.0, boundingBox1.getSouthLatitude(), 0.01);
      assertEquals(0.0, boundingBox1.getLongitudeSize(), 0.01);
      assertEquals(12.714256335558112, boundingBox1.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-2.2975571577875114), (-2.2975571577875114), (-2.2975571577875114), (-28.241617682120232));
      BoundingBox boundingBox1 = new BoundingBox((-28.241617682120232), (-2.2975571577875114), (-28.241617682120232), (-28.241617682120232));
      boolean boolean0 = boundingBox1.intersects(boundingBox0);
      assertTrue(boolean0);
      assertEquals(334.0559394756673, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox1.intersects180Meridian());
      assertEquals((-2.2975571577875114), boundingBox0.getSouthLatitude(), 0.01);
      assertEquals((-28.241617682120232), boundingBox1.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-1.6441195563990478), (-1.6441195563990478), (-1.6441195563990478), (-28.241617682120232));
      boolean boolean0 = boundingBox0.intersects(boundingBox0);
      assertTrue(boolean0);
      assertEquals(333.4025018742788, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-88.7339719776858), (-88.7339719776858), (-88.7339719776858), (-88.7339719776858));
      BoundingBox boundingBox1 = new BoundingBox(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = boundingBox1.intersects(boundingBox0);
      assertEquals(0.0, boundingBox1.getSouthLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      boolean boolean0 = boundingBox0.intersects(boundingBox0);
      assertEquals((-0.0085), boundingBox0.getEastLongitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      BoundingBox boundingBox1 = new BoundingBox(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = boundingBox0.intersects(boundingBox1);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertFalse(boolean0);
      assertEquals(0.0, boundingBox1.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      WGS84Point wGS84Point0 = new WGS84Point((-0.0085), 0.0);
      boolean boolean0 = boundingBox0.contains(wGS84Point0);
      assertEquals((-0.0085), boundingBox0.getWestLongitude(), 0.01);
      assertFalse(boolean0);
      assertEquals((-0.0085), boundingBox0.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.5324396454141253), (-0.5324396454141253), (-0.5324396454141253), (-0.5324396454141253));
      WGS84Point wGS84Point0 = boundingBox0.getSouthEastCorner();
      boolean boolean0 = boundingBox0.contains(wGS84Point0);
      assertEquals((-0.5324396454141253), wGS84Point0.getLongitude(), 0.01);
      assertTrue(boolean0);
      assertFalse(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 0.0);
      boolean boolean0 = boundingBox0.contains(wGS84Point0);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(9.989451952022531, 9.989451952022531, 9.989451952022531, 9.989451952022531);
      BoundingBox boundingBox1 = new BoundingBox(9.989451952022531, 9.989451952022531, 9.989451952022531, 2.0);
      boolean boolean0 = boundingBox1.equals(boundingBox0);
      assertFalse(boundingBox0.intersects180Meridian());
      assertFalse(boundingBox0.equals((Object)boundingBox1));
      assertEquals(0.0, boundingBox1.getLatitudeSize(), 0.01);
      assertFalse(boolean0);
      assertEquals(352.01054804797747, boundingBox1.getLongitudeSize(), 0.01);
      assertTrue(boundingBox1.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(2.0311978232942596, 2.0311978232942596, 2.0311978232942596, 2.0311978232942596);
      BoundingBox boundingBox1 = new BoundingBox(2.0311978232942596, 39.701368581, 2.0311978232942596, 39.701368581);
      boolean boolean0 = boundingBox1.equals(boundingBox0);
      assertFalse(boolean0);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(37.67017075770574, boundingBox1.getLatitudeSize(), 0.01);
      assertEquals(37.67017075770574, boundingBox1.getLongitudeSize(), 0.01);
      assertFalse(boundingBox1.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      BoundingBox boundingBox1 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      boundingBox0.expandToInclude(boundingBox1);
      boolean boolean0 = boundingBox0.equals(boundingBox1);
      assertEquals(180.0, boundingBox0.getEastLongitude(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(12.714256335558112, 12.714256335558112, 12.714256335558112, 12.714256335558112);
      BoundingBox boundingBox1 = new BoundingBox(0.0, 12.714256335558112, 0.0, 0.0);
      boolean boolean0 = boundingBox0.equals(boundingBox1);
      assertFalse(boundingBox1.intersects180Meridian());
      assertEquals(0.0, boundingBox1.getLongitudeSize(), 0.01);
      assertEquals(12.714256335558112, boundingBox1.getLatitudeSize(), 0.01);
      assertEquals(0.0, boundingBox1.getWestLongitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, boundingBox1.getSouthLatitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.7718040012715376, 0.7718040012715376, 0.7718040012715376, 0.7718040012715376);
      assertEquals(0.7718040012715376, boundingBox0.getNorthLatitude(), 0.01);
      
      BoundingBox boundingBox1 = new BoundingBox(boundingBox0);
      boolean boolean0 = boundingBox1.equals(boundingBox0);
      assertFalse(boundingBox1.intersects180Meridian());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-17.137697259903398), (-17.137697259903398), (-17.137697259903398), (-17.137697259903398));
      boolean boolean0 = boundingBox0.equals(boundingBox0);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-1.5611416910374465), (-1.5611416910374465), (-1.5611416910374465), (-1.5611416910374465));
      Object object0 = new Object();
      boolean boolean0 = boundingBox0.equals(object0);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boolean0);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      boundingBox0.expandToInclude(boundingBox0);
      double double0 = boundingBox0.getLongitudeSize();
      assertEquals(180.0, boundingBox0.getEastLongitude(), 0.01);
      assertEquals(360.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.5906739037418596, 0.5906739037418596, 0.5906739037418596, 180.0);
      double double0 = boundingBox0.getLongitudeSize();
      assertEquals(180.0, boundingBox0.getEastLongitude(), 0.01);
      assertEquals(179.40932609625813, double0, 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      double double0 = boundingBox0.getLongitudeSize();
      assertEquals((-0.0085376823255589), boundingBox0.getSouthLatitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, (-39.701368581));
      double double0 = boundingBox0.getLongitudeSize();
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(320.298631419, double0, 0.01);
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertTrue(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), 2620.049929777);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The supplied coordinates are out of range.
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox((-39.701368581), (-39.701368581), 1113.4690557454303, (-39.701368581));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The supplied coordinates are out of range.
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox(0.0, 1078.0, 0.0, 1078.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The supplied coordinates are out of range.
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox(3420.522368, 3420.522368, 3420.522368, 3420.522368);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The supplied coordinates are out of range.
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = boundingBox0.intersects180Meridian();
      assertFalse(boolean0);
      assertEquals(0.0, boundingBox0.getNorthLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      double double0 = boundingBox0.getSouthLatitude();
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals((-0.0085376823255589), double0, 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals((-0.0085376823255589), boundingBox0.getNorthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      WGS84Point wGS84Point0 = boundingBox0.getSouthWestCorner();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
      assertEquals((-0.0085376823255589), boundingBox0.getEastLongitude(), 0.01);
      assertEquals((-0.0085376823255589), wGS84Point0.getLongitude(), 0.01);
      assertEquals((-0.0085376823255589), wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(90.0, 90.0, 90.0, 90.0);
      double double0 = boundingBox0.getNorthLatitude();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertEquals(90.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(90.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      double double0 = boundingBox0.getLatitudeSize();
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085), (-0.0085), (-0.0085), (-0.0085));
      WGS84Point wGS84Point0 = boundingBox0.getNorthEastCorner();
      assertEquals((-0.0085), wGS84Point0.getLatitude(), 0.01);
      assertEquals((-0.0085), wGS84Point0.getLongitude(), 0.01);
      assertEquals((-0.0085), boundingBox0.getWestLongitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(1.0, 1.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      double double0 = boundingBox0.getWestLongitude();
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, boundingBox0.getEastLongitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 0.0, 0.0, 0.0);
      double double0 = boundingBox0.getEastLongitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, boundingBox0.getNorthLatitude(), 0.01);
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(0.0, boundingBox0.getSouthLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getWestLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox((-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589), (-0.0085376823255589));
      String string0 = boundingBox0.toString();
      assertEquals("(-0.0085376823255589,-0.0085376823255589) -> (-0.0085376823255589,-0.0085376823255589)", string0);
      assertFalse(boundingBox0.intersects180Meridian());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      BoundingBox boundingBox0 = null;
      try {
        boundingBox0 = new BoundingBox((BoundingBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.BoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      boundingBox0.hashCode();
      assertFalse(boundingBox0.intersects180Meridian());
      assertEquals(90.0, boundingBox0.getNorthLatitude(), 0.01);
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
  }
}
