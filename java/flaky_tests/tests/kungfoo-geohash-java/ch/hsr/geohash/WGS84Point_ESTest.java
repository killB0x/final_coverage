/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:34:34 GMT 2022
 */

package ch.hsr.geohash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.hsr.geohash.WGS84Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WGS84Point_ESTest extends WGS84Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point((-21.018412354382278), (-21.018412354382278));
      wGS84Point0.hashCode();
      assertEquals((-21.018412354382278), wGS84Point0.getLongitude(), 0.01);
      assertEquals((-21.018412354382278), wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point((-1.0), 1.0);
      wGS84Point0.hashCode();
      assertEquals(1.0, wGS84Point0.getLongitude(), 0.01);
      assertEquals((-1.0), wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 0.0);
      wGS84Point0.hashCode();
      assertEquals(0.0, wGS84Point0.getLongitude(), 0.01);
      assertEquals(90.0, wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      WGS84Point wGS84Point1 = new WGS84Point(90.0, (-1.0));
      boolean boolean0 = wGS84Point0.equals(wGS84Point1);
      assertEquals(90.0, wGS84Point0.getLongitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(90.0, wGS84Point1.getLatitude(), 0.01);
      assertFalse(wGS84Point1.equals((Object)wGS84Point0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 0.0);
      WGS84Point wGS84Point1 = new WGS84Point(0.0, 90.0);
      boolean boolean0 = wGS84Point0.equals(wGS84Point1);
      assertEquals(90.0, wGS84Point1.getLongitude(), 0.01);
      assertEquals(0.0, wGS84Point1.getLatitude(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 180.0);
      assertEquals(180.0, wGS84Point0.getLongitude(), 0.01);
      assertEquals(90.0, wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 0.0);
      double double0 = wGS84Point0.getLongitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(90.0, wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(89.7363699668437, (-1.0));
      double double0 = wGS84Point0.getLongitude();
      assertEquals(89.7363699668437, wGS84Point0.getLatitude(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(0.0, 1.0);
      double double0 = wGS84Point0.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.0, wGS84Point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point((-1.0), 1.0);
      double double0 = wGS84Point0.getLatitude();
      assertEquals(1.0, wGS84Point0.getLongitude(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WGS84Point wGS84Point0 = null;
      try {
        wGS84Point0 = new WGS84Point((WGS84Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.WGS84Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      String string0 = wGS84Point0.toString();
      assertEquals("(90.0,90.0)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      WGS84Point wGS84Point1 = new WGS84Point(90.0, 1.0);
      boolean boolean0 = wGS84Point1.equals(wGS84Point0);
      assertEquals(1.0, wGS84Point1.getLongitude(), 0.01);
      assertFalse(wGS84Point0.equals((Object)wGS84Point1));
      assertFalse(boolean0);
      assertEquals(90.0, wGS84Point1.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 0.0);
      WGS84Point wGS84Point1 = new WGS84Point(0.0, 90.0);
      boolean boolean0 = wGS84Point1.equals(wGS84Point0);
      assertEquals(0.0, wGS84Point1.getLatitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(90.0, wGS84Point1.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      boolean boolean0 = wGS84Point0.equals(wGS84Point0);
      assertTrue(boolean0);
      assertEquals(90.0, wGS84Point0.getLongitude(), 0.01);
      assertEquals(90.0, wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      Object object0 = new Object();
      boolean boolean0 = wGS84Point0.equals(object0);
      assertEquals(90.0, wGS84Point0.getLongitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(90.0, wGS84Point0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WGS84Point wGS84Point0 = null;
      try {
        wGS84Point0 = new WGS84Point(2568.3124879664, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The supplied coordinates (2568.3124879664,0.0) are out of range.
         //
         verifyException("ch.hsr.geohash.WGS84Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      WGS84Point wGS84Point1 = new WGS84Point(wGS84Point0);
      assertTrue(wGS84Point1.equals((Object)wGS84Point0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      double double0 = wGS84Point0.getLongitude();
      assertEquals(90.0, wGS84Point0.getLatitude(), 0.01);
      assertEquals(90.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(90.0, 90.0);
      double double0 = wGS84Point0.getLatitude();
      assertEquals(90.0, double0, 0.01);
      assertEquals(90.0, wGS84Point0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WGS84Point wGS84Point0 = null;
      try {
        wGS84Point0 = new WGS84Point(1.0, 339.14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The supplied coordinates (1.0,339.14) are out of range.
         //
         verifyException("ch.hsr.geohash.WGS84Point", e);
      }
  }
}
