/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:39:15 GMT 2022
 */

package ch.hsr.geohash.queries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.hsr.geohash.GeoHash;
import ch.hsr.geohash.WGS84Point;
import ch.hsr.geohash.queries.GeoHashCircleQuery;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GeoHashCircleQuery_ESTest extends GeoHashCircleQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(6.0, 6.0);
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1000.0);
      String string0 = geoHashCircleQuery0.toString();
      assertEquals("Cicle Query [center=(6.0,6.0), radius=1000.0m]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1227.19629674313);
      WGS84Point wGS84Point1 = new WGS84Point(64, 12.0);
      boolean boolean0 = geoHashCircleQuery0.contains(wGS84Point1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1227.19629674313);
      boolean boolean0 = geoHashCircleQuery0.contains(geoHash0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1227.19629674313);
      // Undeclared exception!
      try { 
        geoHashCircleQuery0.contains((WGS84Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.queries.GeoHashBoundingBoxQuery", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1227.19629674313);
      // Undeclared exception!
      try { 
        geoHashCircleQuery0.contains((GeoHash) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.queries.GeoHashBoundingBoxQuery", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GeoHashCircleQuery geoHashCircleQuery0 = null;
      try {
        geoHashCircleQuery0 = new GeoHashCircleQuery((WGS84Point) null, 1121.189754);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.util.VincentyGeodesy", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromGeohashString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = null;
      try {
        geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, (-9223372036854775808L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The supplied coordinates (2.461138878343364,2.783489954214045E11) are out of range.
         //
         verifyException("ch.hsr.geohash.WGS84Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 47.0);
      String string0 = geoHashCircleQuery0.toString();
      assertEquals("Cicle Query [center=(0.0,0.0), radius=47.0m]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1227.19629674313);
      List<GeoHash> list0 = geoHashCircleQuery0.getSearchHashes();
      assertEquals(4, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1227.19629674313);
      boolean boolean0 = geoHashCircleQuery0.contains(wGS84Point0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 1227.19629674313);
      String string0 = geoHashCircleQuery0.toString();
      assertEquals("Cicle Query [center=(0.0,0.0), radius=1.22719629674313km]", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WGS84Point wGS84Point0 = new WGS84Point(6.0, 6.0);
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 6.0);
      String string0 = geoHashCircleQuery0.getWktBox();
      assertEquals("BOX(5.999908447265625 5.999908447265625,6.000080108642578 6.000080108642578)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromOrd(355L, 29);
      WGS84Point wGS84Point0 = geoHash0.getOriginatingPoint();
      GeoHashCircleQuery geoHashCircleQuery0 = new GeoHashCircleQuery(wGS84Point0, 6.0);
      boolean boolean0 = geoHashCircleQuery0.contains(geoHash0);
      assertTrue(boolean0);
  }
}
