/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:37:27 GMT 2022
 */

package ch.hsr.geohash.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.hsr.geohash.BoundingBox;
import ch.hsr.geohash.util.GeoHashSizeTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GeoHashSizeTable_ESTest extends GeoHashSizeTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(0.0, 3.4332275390625E-4, (-180.0), 90.0);
      int int0 = GeoHashSizeTable.numberOfBitsForOverlappingGeoHash(boundingBox0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double double0 = GeoHashSizeTable.dLon(63);
      assertEquals(8.381903171539307E-8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double double0 = GeoHashSizeTable.dLat(3981);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeoHashSizeTable.numberOfBitsForOverlappingGeoHash((BoundingBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.util.GeoHashSizeTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(90.0, 90.0, 2, 2);
      boundingBox0.expandToInclude(boundingBox0);
      int int0 = GeoHashSizeTable.numberOfBitsForOverlappingGeoHash(boundingBox0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(42, 63, 1.0, 1.0);
      int int0 = GeoHashSizeTable.numberOfBitsForOverlappingGeoHash(boundingBox0);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double double0 = GeoHashSizeTable.dLat(2);
      assertEquals(90.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GeoHashSizeTable geoHashSizeTable0 = new GeoHashSizeTable();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      double double0 = GeoHashSizeTable.dLon(3536);
      assertEquals(0.0, double0, 0.01);
  }
}
