/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 21:40:01 GMT 2022
 */

package ch.hsr.geohash.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.hsr.geohash.BoundingBox;
import ch.hsr.geohash.GeoHash;
import ch.hsr.geohash.WGS84Point;
import ch.hsr.geohash.util.TwoGeoHashBoundingBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TwoGeoHashBoundingBox_ESTest extends TwoGeoHashBoundingBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      GeoHash geoHash1 = GeoHash.fromLongValue(64, 64);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = null;
      try {
        twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does it make sense to iterate between hashes that have different precisions?
         //
         verifyException("ch.hsr.geohash.util.TwoGeoHashBoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromLongValue(1574L, 10);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      String string0 = twoGeoHashBoundingBox0.toBase32();
      assertEquals("0000", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromGeohashString("");
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      String string0 = twoGeoHashBoundingBox0.toBase32();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromLongValue(1574L, 10);
      WGS84Point wGS84Point0 = geoHash0.getOriginatingPoint();
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = TwoGeoHashBoundingBox.withCharacterPrecision(boundingBox0, 10);
      GeoHash geoHash1 = twoGeoHashBoundingBox0.getSouthWestCorner();
      assertEquals(50, geoHash1.significantBits());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromGeohashString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = TwoGeoHashBoundingBox.withCharacterPrecision(boundingBox0, 12);
      GeoHash geoHash1 = twoGeoHashBoundingBox0.getSouthWestCorner();
      assertEquals(60, geoHash1.significantBits());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromGeohashString("");
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      GeoHash geoHash1 = twoGeoHashBoundingBox0.getNorthEastCorner();
      assertEquals(64, GeoHash.MAX_BIT_PRECISION);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromLongValue(221L, 60);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      GeoHash geoHash1 = twoGeoHashBoundingBox0.getNorthEastCorner();
      assertEquals(13L, geoHash1.ord());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromBinaryString("");
      BoundingBox boundingBox0 = geoHash0.getBoundingBox();
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = TwoGeoHashBoundingBox.withBitPrecision(boundingBox0, 64);
      GeoHash geoHash1 = twoGeoHashBoundingBox0.getNorthEastCorner();
      assertEquals((-1L), geoHash1.longValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BoundingBox boundingBox0 = new BoundingBox(1.0, 1.0, 1.0, 0.0);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = TwoGeoHashBoundingBox.withBitPrecision(boundingBox0, 25);
      BoundingBox boundingBox1 = twoGeoHashBoundingBox0.getBoundingBox();
      assertEquals(0.966796875, boundingBox1.getSouthLatitude(), 0.01);
      assertEquals(359.0771484375, boundingBox1.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromGeohashString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = TwoGeoHashBoundingBox.withCharacterPrecision(boundingBox0, 12);
      BoundingBox boundingBox1 = twoGeoHashBoundingBox0.getBoundingBox();
      assertEquals(1.6763806343078613E-7, boundingBox1.getNorthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromLongValue(1L, 42);
      GeoHash geoHash1 = geoHash0.getEasternNeighbour();
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash1, geoHash0);
      BoundingBox boundingBox0 = twoGeoHashBoundingBox0.getBoundingBox();
      assertEquals(0.0, boundingBox0.getLongitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromOrd((-27L), 20);
      GeoHash geoHash1 = geoHash0.getNorthernNeighbour();
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash1, geoHash0);
      BoundingBox boundingBox0 = twoGeoHashBoundingBox0.getBoundingBox();
      assertEquals(0.0, boundingBox0.getLatitudeSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromOrd(0L, 1);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      BoundingBox boundingBox0 = twoGeoHashBoundingBox0.getBoundingBox();
      assertEquals((-90.0), boundingBox0.getSouthLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        TwoGeoHashBoundingBox.withCharacterPrecision((BoundingBox) null, (-867));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.util.TwoGeoHashBoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromGeohashString("");
      WGS84Point wGS84Point0 = geoHash0.getBoundingBoxCenter();
      BoundingBox boundingBox0 = new BoundingBox(wGS84Point0, wGS84Point0);
      // Undeclared exception!
      try { 
        TwoGeoHashBoundingBox.withCharacterPrecision(boundingBox0, 64);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A geohash can only be 12 character long.
         //
         verifyException("ch.hsr.geohash.GeoHash", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        TwoGeoHashBoundingBox.withBitPrecision((BoundingBox) null, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.util.TwoGeoHashBoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromLongValue(221L, 60);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      BoundingBox boundingBox0 = twoGeoHashBoundingBox0.getBoundingBox();
      // Undeclared exception!
      try { 
        TwoGeoHashBoundingBox.withBitPrecision(boundingBox0, 1843);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A Geohash can only be 64 bits long!
         //
         verifyException("ch.hsr.geohash.GeoHash", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = null;
      try {
        twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox((GeoHash) null, (GeoHash) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.hsr.geohash.util.TwoGeoHashBoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromOrd((-27L), 20);
      GeoHash geoHash1 = GeoHash.fromGeohashString("");
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = null;
      try {
        twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does it make sense to iterate between hashes that have different precisions?
         //
         verifyException("ch.hsr.geohash.util.TwoGeoHashBoundingBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.withBitPrecision((-48.6), 0.0, 7);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      BoundingBox boundingBox0 = twoGeoHashBoundingBox0.getBoundingBox();
      TwoGeoHashBoundingBox twoGeoHashBoundingBox1 = TwoGeoHashBoundingBox.withBitPrecision(boundingBox0, 3);
      BoundingBox boundingBox1 = twoGeoHashBoundingBox1.getBoundingBox();
      assertEquals(90.0, boundingBox1.getEastLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromLongValue(0L, 49);
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      // Undeclared exception!
      try { 
        twoGeoHashBoundingBox0.toBase32();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot convert a geohash to base32 if the precision is not a multiple of 5.
         //
         verifyException("ch.hsr.geohash.GeoHash", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GeoHash geoHash0 = GeoHash.fromGeohashString("");
      TwoGeoHashBoundingBox twoGeoHashBoundingBox0 = new TwoGeoHashBoundingBox(geoHash0, geoHash0);
      GeoHash geoHash1 = twoGeoHashBoundingBox0.getSouthWestCorner();
      assertEquals(64, GeoHash.MAX_BIT_PRECISION);
  }
}
