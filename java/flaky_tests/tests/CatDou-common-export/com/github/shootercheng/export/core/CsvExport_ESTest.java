/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 10:28:10 GMT 2022
 */

package com.github.shootercheng.export.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.shootercheng.export.common.RowQuotationFormat;
import com.github.shootercheng.export.core.CsvExport;
import com.github.shootercheng.export.param.ExportParam;
import java.io.BufferedWriter;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CsvExport_ESTest extends CsvExport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CsvExport csvExport0 = new CsvExport("I%gs.>>`S.zO", exportParam0);
      csvExport0.close();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = new CsvExport((BufferedWriter) null, exportParam0);
      // Undeclared exception!
      try { 
        csvExport0.processRowData("\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = new CsvExport((BufferedWriter) null, exportParam0);
      // Undeclared exception!
      try { 
        csvExport0.processRowData("\r\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.shootercheng.export.core.CsvExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      exportParam0.setHeader("WCLZ'H[D%/3)l@");
      exportParam0.setPageSize((-3501));
      CsvExport csvExport0 = new CsvExport("WCLZ'H[D%/3)l@", exportParam0);
      // Undeclared exception!
      csvExport0.exportQueryPage((Function<Map<String, Object>, List<String>>) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      exportParam0.setHeader("\"");
      CsvExport csvExport0 = new CsvExport((BufferedWriter) null, exportParam0);
      // Undeclared exception!
      try { 
        csvExport0.exportQueryPage((Function<Map<String, Object>, List<String>>) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      ExportParam exportParam1 = exportParam0.setHeader("com.github.shootercheng.export.common.RowQuotationFormat");
      CsvExport csvExport0 = new CsvExport("com.github.shootercheng.export.common.RowQuotationFormat", exportParam1);
      // Undeclared exception!
      try { 
        csvExport0.exportQueryPage((Function<Map<String, Object>, List<String>>) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.github.shootercheng.export.common.ExportCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CsvExport csvExport0 = null;
      try {
        csvExport0 = new CsvExport("", (ExportParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.shootercheng.export.core.CsvExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CsvExport csvExport0 = null;
      try {
        csvExport0 = new CsvExport((BufferedWriter) null, (ExportParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.shootercheng.export.core.CsvExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = new CsvExport("VYEE=G`B", exportParam0);
      csvExport0.close();
      // Undeclared exception!
      try { 
        csvExport0.processRowData("VYEE=G`B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // write row data error
         //
         verifyException("com.github.shootercheng.export.core.CsvExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = new CsvExport("VYEE=G`B", exportParam0);
      csvExport0.processRowData("VYEE=G`B");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = null;
      try {
        csvExport0 = new CsvExport("", exportParam0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // init bufferwriter error
         //
         verifyException("com.github.shootercheng.export.core.CsvExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      exportParam0.setRowFormat(rowQuotationFormat0);
      CsvExport csvExport0 = new CsvExport("illegal access exception", exportParam0);
      csvExport0.processRowData("illegal access exception");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      exportParam0.setHeader("ee$o&C=L&jV:)o");
      CsvExport csvExport0 = new CsvExport("ee$o&C=L&jV:)o", exportParam0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      csvExport0.exportList((List<Object>) linkedList0);
      // Undeclared exception!
      try { 
        csvExport0.exportQueryPage((Function<Map<String, Object>, List<String>>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // write row data error
         //
         verifyException("com.github.shootercheng.export.core.CsvExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      exportParam0.setRecordSeparator("init bufferwriter error");
      CsvExport csvExport0 = new CsvExport("init bufferwriter error", exportParam0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      Charset charset0 = Charset.defaultCharset();
      exportParam0.setCharset(charset0);
      CsvExport csvExport0 = new CsvExport("=hN7tu(SdUoDv5a$io6", exportParam0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = new CsvExport((BufferedWriter) null, exportParam0);
      csvExport0.close();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      exportParam0.setRecordSeparator("#a0>]Db $n@N[^iEU8");
      CsvExport csvExport0 = new CsvExport((BufferedWriter) null, exportParam0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = new CsvExport("ee$o&C=L&jV:)o", exportParam0);
      // Undeclared exception!
      try { 
        csvExport0.exportQueryPage((Function<Map<String, Object>, List<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.shootercheng.export.common.RowQuotationFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      CsvExport csvExport0 = new CsvExport("ee$o&C=L&jV:)o", exportParam0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        csvExport0.exportList((List<Object>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.shootercheng.export.common.RowQuotationFormat", e);
      }
  }
}
