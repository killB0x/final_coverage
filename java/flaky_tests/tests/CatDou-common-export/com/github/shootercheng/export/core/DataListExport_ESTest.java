/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 10:29:11 GMT 2022
 */

package com.github.shootercheng.export.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.shootercheng.export.common.RowQuotationFormat;
import com.github.shootercheng.export.core.CsvExport;
import com.github.shootercheng.export.param.ExportParam;
import java.lang.reflect.Method;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataListExport_ESTest extends DataListExport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      LinkedList<Method> linkedList0 = new LinkedList<Method>();
      linkedList0.add((Method) null);
      exportParam0.setGetterMethod(linkedList0);
      CsvExport csvExport0 = new CsvExport("(", exportParam0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) rowQuotationFormat0);
      // Undeclared exception!
      try { 
        csvExport0.exportList((List<Object>) linkedList1, exportParam0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.shootercheng.export.core.DataListExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      LinkedList<Method> linkedList0 = new LinkedList<Method>();
      ExportParam exportParam1 = exportParam0.setGetterMethod(linkedList0);
      CsvExport csvExport0 = new CsvExport("(", exportParam1);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) exportParam0);
      csvExport0.close();
      // Undeclared exception!
      try { 
        csvExport0.exportList((List<Object>) linkedList1, exportParam0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // write row data error
         //
         verifyException("com.github.shootercheng.export.core.CsvExport", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExportParam exportParam0 = new ExportParam();
      LinkedList<Method> linkedList0 = new LinkedList<Method>();
      ExportParam exportParam1 = exportParam0.setGetterMethod(linkedList0);
      CsvExport csvExport0 = new CsvExport("(", exportParam1);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) "(");
      csvExport0.exportList((List<Object>) linkedList1, exportParam1);
      assertEquals(0, exportParam1.getSum());
  }
}
