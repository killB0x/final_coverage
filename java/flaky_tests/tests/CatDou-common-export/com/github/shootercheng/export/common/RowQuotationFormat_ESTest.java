/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 10:25:51 GMT 2022
 */

package com.github.shootercheng.export.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.shootercheng.export.common.RowQuotationFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RowQuotationFormat_ESTest extends RowQuotationFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow("\"%(+z,U]__J^IF1 ");
      assertEquals("%(+z;U]__J^IF1 ;", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow("\"Y[d+8H ,+6");
      assertEquals("Y[d+8H ;+6;", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow(" Nu");
      assertEquals(" Nu", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow(",");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      // Undeclared exception!
      try { 
        rowQuotationFormat0.formatRow((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.shootercheng.export.common.RowQuotationFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow("\"Y8OxR,,#");
      assertEquals("Y8OxR;;#;", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      // Undeclared exception!
      try { 
        rowQuotationFormat0.formatRow("\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow("8O;!+;#;");
      assertEquals("8O;!+;#;", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow("");
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RowQuotationFormat rowQuotationFormat0 = new RowQuotationFormat();
      String string0 = rowQuotationFormat0.formatRow("\"8O,!+,#");
      assertEquals("8O;!+;#;", string0);
  }
}
