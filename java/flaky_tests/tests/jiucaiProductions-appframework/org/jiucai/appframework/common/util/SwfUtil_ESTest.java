/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:58:21 GMT 2022
 */

package org.jiucai.appframework.common.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.jiucai.appframework.common.util.SwfInfo;
import org.jiucai.appframework.common.util.SwfUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SwfUtil_ESTest extends SwfUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-115);
      SwfUtil.BitReader swfUtil_BitReader0 = new SwfUtil.BitReader(byteArray0);
      int int0 = swfUtil_BitReader0.uI16();
      assertEquals(36096, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)16;
      SwfUtil.BitReader swfUtil_BitReader0 = new SwfUtil.BitReader(byteArray0);
      int int0 = swfUtil_BitReader0.uBits((byte)16);
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      SwfUtil.BitReader swfUtil_BitReader0 = new SwfUtil.BitReader(byteArray0, 1971);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("RPX");
      mockFile0.createNewFile();
      SwfInfo swfInfo0 = SwfUtil.getInfo("RPX");
      assertNull(swfInfo0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      MockFile mockFile1 = new MockFile(mockFile0, "yyyy-MM-dd");
      mockFile1.createNewFile();
      SwfInfo swfInfo0 = SwfUtil.getInfo((File) mockFile1);
      assertNull(swfInfo0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        SwfUtil.getInfo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        SwfUtil.getInfo((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiucai.appframework.common.util.SwfUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-752), 173);
      // Undeclared exception!
      try { 
        SwfUtil.getInfo((InputStream) byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        SwfUtil.getInfo((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        SwfUtil.getInfo((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SwfUtil.BitReader swfUtil_BitReader0 = new SwfUtil.BitReader((byte[]) null);
      swfUtil_BitReader0.sync();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-54);
      SwfUtil.BitReader swfUtil_BitReader0 = new SwfUtil.BitReader(byteArray0);
      int int0 = swfUtil_BitReader0.sBits(3);
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SwfUtil.getInfo((InputStream) byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        SwfUtil.getInfo("RPX");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/exception/ExceptionUtils
         //
         verifyException("org.jiucai.appframework.common.util.SwfUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      try { 
        SwfUtil.getInfo((File) mockFile0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/exception/ExceptionUtils
         //
         verifyException("org.jiucai.appframework.common.util.SwfUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      SwfUtil.BitReader swfUtil_BitReader0 = new SwfUtil.BitReader(byteArray0);
      swfUtil_BitReader0.sBits((byte)116);
      swfUtil_BitReader0.sync();
  }
}
