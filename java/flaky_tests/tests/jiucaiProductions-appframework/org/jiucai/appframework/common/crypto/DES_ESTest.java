/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 03:12:20 GMT 2022
 */

package org.jiucai.appframework.common.crypto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiucai.appframework.common.crypto.DES;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DES_ESTest extends DES_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = DES.encrypt((byte[]) null, "UTF-8");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = DES.encrypt(byteArray0, "%mB~*)Oft");
      byte[] byteArray2 = DES.decrypt(byteArray1, "%mB~*)Oft");
      assertNotNull(byteArray2);
      assertEquals(9, byteArray2.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = DES.decrypt(byteArray0, "7%\nO,8PTh:u");
      assertNotNull(byteArray1);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = DES.decode("3", "1234567890");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[5];
      DES.algorithmKey = "\u52A0\u5BC6\u540E\uFF1A";
      // Undeclared exception!
      try { 
        DES.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiucai.appframework.common.encrypt.AbstractEncryptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DES.encode((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiucai.appframework.common.crypto.DES", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DES.decode("UTF-8", "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"U\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DES.decode((String) null, "X1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiucai.appframework.common.encrypt.AbstractEncryptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = DES.decrypt(byteArray0, "%mB~*)Oft");
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = DES.encode("CEF3494629A9F8DBCC8F33CACF1CEA7BE387F8EB3C457EAC", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = DES.decode("CEF3494629A9F8DBCC8F33CACF1CEA7BE387F8EB3C457EAC", "UTF-8");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DES.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = DES.decode("CEF3494629A9F8DBCC8F33CACF1CEA7BE387F8EB3C457EAC", "_`g,iU~Si1myFR=)~");
      assertNotNull(string0);
      assertEquals("_`g,iU~Si1myFR=)~", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DES dES0 = new DES();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = DES.encode("_`g,iU~Si1myFR=)~", "_`g,iU~Si1myFR=)~");
      assertNotNull(string0);
      assertEquals("CEF3494629A9F8DBCC8F33CACF1CEA7BE387F8EB3C457EAC", string0);
  }
}
