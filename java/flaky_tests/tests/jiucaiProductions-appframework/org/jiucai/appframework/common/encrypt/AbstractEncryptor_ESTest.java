/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 03:05:42 GMT 2022
 */

package org.jiucai.appframework.common.encrypt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiucai.appframework.common.encrypt.AbstractEncryptor;
import org.jiucai.appframework.common.encrypt.EncryptUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractEncryptor_ESTest extends AbstractEncryptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = AbstractEncryptor.hex2Byte("1500005E00");
      assertArrayEquals(new byte[] {(byte)21, (byte)0, (byte)0, (byte)94, (byte)0}, byteArray0);
      assertEquals(5, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = AbstractEncryptor.hex2Byte("s");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = AbstractEncryptor.byte2Hex(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractEncryptor.hex2Byte("B2kh8Pwb");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"k\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractEncryptor.hex2Byte((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiucai.appframework.common.encrypt.AbstractEncryptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractEncryptor.byte2Hex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiucai.appframework.common.encrypt.AbstractEncryptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = AbstractEncryptor.hex2Byte("");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      String string0 = AbstractEncryptor.byte2Hex(byteArray0);
      assertEquals("00", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = AbstractEncryptor.hex2Byte("B0");
      assertNotNull(byteArray0);
      
      String string0 = AbstractEncryptor.byte2Hex(byteArray0);
      assertEquals("B0", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EncryptUtil encryptUtil0 = new EncryptUtil();
  }
}
