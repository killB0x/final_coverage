/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 03:00:13 GMT 2022
 */

package org.jiucai.appframework.common.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiucai.appframework.common.util.InvokeSpeedLimitUtil;
import org.junit.runner.RunWith;
import org.slf4j.Logger;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvokeSpeedLimitUtil_ESTest extends InvokeSpeedLimitUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InvokeSpeedLimitUtil.limitSpeed((-3021));
      InvokeSpeedLimitUtil.limitSpeed((-3021));
      InvokeSpeedLimitUtil.limitSpeed((-3021));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "`7^Z}";
      stringArray0[1] = "B(7&t*2%X";
      stringArray0[2] = "param can not be null.";
      stringArray0[3] = "F%QZ#+0*x.>a@{r3l";
      stringArray0[4] = "s";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      InvokeSpeedLimitUtil.main(stringArray0);
      InvokeSpeedLimitUtil.setLimit(537, 0, (-770));
      InvokeSpeedLimitUtil invokeSpeedLimitUtil0 = new InvokeSpeedLimitUtil();
      InvokeSpeedLimitUtil.speedLimitCount = 0;
      InvokeSpeedLimitUtil.sleepTimeInSeconds = (-2186);
      InvokeSpeedLimitUtil.limitSpeed(0);
      InvokeSpeedLimitUtil.main(stringArray0);
      InvokeSpeedLimitUtil.limitSpeed(10);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InvokeSpeedLimitUtil.limitSpeed(0);
      int int0 = 222;
      InvokeSpeedLimitUtil.setLimit(0, 222, (-1757));
      int int1 = (-2357);
      // Undeclared exception!
      try { 
        InvokeSpeedLimitUtil.setLimit(0, (-2357), 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // param can not be null.
         //
         verifyException("org.jiucai.appframework.common.util.InvokeSpeedLimitUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InvokeSpeedLimitUtil.limitSpeed(0);
      InvokeSpeedLimitUtil.setLimit(10, 111, 111);
      // Undeclared exception!
      try { 
        InvokeSpeedLimitUtil.setLimit(0, (-8), (-8));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // param can not be null.
         //
         verifyException("org.jiucai.appframework.common.util.InvokeSpeedLimitUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        InvokeSpeedLimitUtil.setLimit(0, (-27), (-2407));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // param can not be null.
         //
         verifyException("org.jiucai.appframework.common.util.InvokeSpeedLimitUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InvokeSpeedLimitUtil.limitSpeed(0);
      InvokeSpeedLimitUtil.setLimit(0, 50, (-1385));
      InvokeSpeedLimitUtil.setLimit(0, 50, 3924);
      InvokeSpeedLimitUtil invokeSpeedLimitUtil0 = new InvokeSpeedLimitUtil();
      InvokeSpeedLimitUtil.speedLimitInterval = 0L;
      InvokeSpeedLimitUtil.limitSpeed(0);
      InvokeSpeedLimitUtil.setLimit(0, 0, 968);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InvokeSpeedLimitUtil.setLimit(0, 0, 0);
      InvokeSpeedLimitUtil invokeSpeedLimitUtil0 = new InvokeSpeedLimitUtil();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "6}1";
      InvokeSpeedLimitUtil.main(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "pFq72CrlvN^kIr)1";
      InvokeSpeedLimitUtil.main(stringArray1);
      InvokeSpeedLimitUtil.limitSpeed(0);
      InvokeSpeedLimitUtil.limitSpeed(0);
      InvokeSpeedLimitUtil.limitSpeed(0);
      InvokeSpeedLimitUtil.main(stringArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InvokeSpeedLimitUtil.limitSpeed((-2214));
      InvokeSpeedLimitUtil invokeSpeedLimitUtil0 = new InvokeSpeedLimitUtil();
      InvokeSpeedLimitUtil.setLimit(1643, 2767, 1989);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InvokeSpeedLimitUtil invokeSpeedLimitUtil0 = new InvokeSpeedLimitUtil();
      InvokeSpeedLimitUtil.speedLimitCount = 1171;
      InvokeSpeedLimitUtil.speedLimitInterval = 0L;
      InvokeSpeedLimitUtil.main((String[]) null);
      InvokeSpeedLimitUtil.limitSpeed(100);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      InvokeSpeedLimitUtil.main(stringArray0);
      InvokeSpeedLimitUtil.main(stringArray0);
      InvokeSpeedLimitUtil.main(stringArray0);
      InvokeSpeedLimitUtil.limitSpeed(0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 0;
      InvokeSpeedLimitUtil.setLimit(389, 389, 0);
      InvokeSpeedLimitUtil invokeSpeedLimitUtil0 = new InvokeSpeedLimitUtil();
      InvokeSpeedLimitUtil.sleepTimeInSeconds = 0;
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      InvokeSpeedLimitUtil.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        InvokeSpeedLimitUtil.setLimit((-1217), 3942, (-1217));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // param can not be null.
         //
         verifyException("org.jiucai.appframework.common.util.InvokeSpeedLimitUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InvokeSpeedLimitUtil invokeSpeedLimitUtil0 = new InvokeSpeedLimitUtil();
      // Undeclared exception!
      try { 
        InvokeSpeedLimitUtil.setLimit((-1570), (-1570), 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // param can not be null.
         //
         verifyException("org.jiucai.appframework.common.util.InvokeSpeedLimitUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InvokeSpeedLimitUtil.limitSpeed((-3628));
  }
}
