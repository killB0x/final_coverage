/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 03:20:15 GMT 2022
 */

package org.jiucai.appframework.base.executor.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiucai.appframework.base.executor.impl.DefaultExecutorService;
import org.jiucai.appframework.base.executor.util.ExecutorServiceUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExecutorServiceUtil_ESTest extends ExecutorServiceUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExecutorServiceUtil.getExecutorService("MV06jb$", 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultExecutorService.setParam("V@%u#", 0);
      // Undeclared exception!
      try { 
        ExecutorServiceUtil.getExecutorService();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExecutorServiceUtil.shutdown();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExecutorService executorService0 = ExecutorServiceUtil.getExecutorService();
      assertNotNull(executorService0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExecutorService executorService0 = ExecutorServiceUtil.getExecutorService(",?", 444);
      assertNotNull(executorService0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExecutorServiceUtil executorServiceUtil0 = new ExecutorServiceUtil();
  }
}
