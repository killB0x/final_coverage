/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:50:01 GMT 2022
 */

package org.jiucai.appframework.base.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiucai.appframework.base.util.LocalIPUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalIPUtil_ESTest extends LocalIPUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = LocalIPUtil.isWindowsOS();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = LocalIPUtil.getLinuxIp();
      assertEquals("192.168.1.42", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InetAddress[] inetAddressArray0 = LocalIPUtil.getAllInetAddress();
      assertEquals(1, inetAddressArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalIPUtil.getIpByNetworkInterfaceName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockNetworkInterface", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = LocalIPUtil.getLocalIP();
      assertNotNull(string0);
      assertEquals("192.168.1.42", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = LocalIPUtil.getWindowsIp();
      assertEquals("192.168.1.42", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List<String> list0 = LocalIPUtil.getIPList(false);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List<String> list0 = LocalIPUtil.getIPList(true);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      List<String> list0 = LocalIPUtil.getIPv6();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      List<String> list0 = LocalIPUtil.getIPv4();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = LocalIPUtil.getIpByNetworkInterfaceName("192.168.1.42");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[8];
      LocalIPUtil.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalIPUtil localIPUtil0 = new LocalIPUtil();
  }
}
