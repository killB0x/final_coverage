/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 03:26:04 GMT 2022
 */

package org.jiucai.appframework.base.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiucai.appframework.base.domain.KeyValuePair;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KeyValuePair_ESTest extends KeyValuePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("?jQWAU+{HF", "?jQWAU+{HF");
      Integer integer0 = Integer.valueOf(1);
      keyValuePair0.setRowspan(integer0);
      String string0 = keyValuePair0.toString();
      assertEquals("KeyValuePair [code=?jQWAU+{HF, parentCode=null, calcCode=null, aliasCode=null, text=?jQWAU+{HF, colspan=null, rowspan=1, align=null, className=null, dataColumn=null, sequence=null]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      keyValuePair0.colspan = null;
      Integer integer0 = Integer.valueOf((-2903));
      keyValuePair0.colspan = integer0;
      String string0 = keyValuePair0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("?jQWAU+{HF", "?jQWAU+{HF");
      keyValuePair0.setAlign("?jQWAU+{HF");
      String string0 = keyValuePair0.toString();
      assertEquals("KeyValuePair [code=?jQWAU+{HF, parentCode=null, calcCode=null, aliasCode=null, text=?jQWAU+{HF, colspan=null, rowspan=null, align=?jQWAU+{HF, className=null, dataColumn=null, sequence=null]", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("?jQWAU+{HF", "?jQWAU+{HF");
      keyValuePair0.setSequence("D@AKM");
      String string0 = keyValuePair0.toString();
      assertEquals("KeyValuePair [code=?jQWAU+{HF, parentCode=null, calcCode=null, aliasCode=null, text=?jQWAU+{HF, colspan=null, rowspan=null, align=null, className=null, dataColumn=null, sequence=D@AKM]", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("?jQWAU+{HF", "?jQWAU+{HF");
      keyValuePair0.className = "{7k2W<:8o9_z]IY";
      String string0 = keyValuePair0.toString();
      assertEquals("KeyValuePair [code=?jQWAU+{HF, parentCode=null, calcCode=null, aliasCode=null, text=?jQWAU+{HF, colspan=null, rowspan=null, align=null, className={7k2W<:8o9_z]IY, dataColumn=null, sequence=null]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("?jQWAU+{HF", "?jQWAU+{HF");
      keyValuePair0.parentCode = "";
      String string0 = keyValuePair0.toString();
      assertEquals("KeyValuePair [code=?jQWAU+{HF, parentCode=, calcCode=null, aliasCode=null, text=?jQWAU+{HF, colspan=null, rowspan=null, align=null, className=null, dataColumn=null, sequence=null]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair((String) null, (String) null, "");
      String string0 = keyValuePair0.getText();
      assertNull(string0);
      assertEquals("", keyValuePair0.getSequence());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("", "", "2tQ0Hq#+[fCCn@eyT]?");
      String string0 = keyValuePair0.getText();
      assertEquals("", keyValuePair0.getCode());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("6L>h+^", "0^KU", "dEnH3m");
      assertEquals("dEnH3m", keyValuePair0.getSequence());
      
      keyValuePair0.sortable = null;
      keyValuePair0.getSequence();
      assertEquals("0^KU", keyValuePair0.getText());
      assertEquals("6L>h+^", keyValuePair0.getCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      keyValuePair0.setSequence("");
      String string0 = keyValuePair0.getSequence();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("olQkqQY1O}xW~", ", align=");
      Integer integer0 = Integer.valueOf("0");
      keyValuePair0.setRowspan(integer0);
      Integer integer1 = keyValuePair0.getRowspan();
      assertNotNull(integer1);
      assertEquals(", align=", keyValuePair0.getText());
      assertEquals("olQkqQY1O}xW~", keyValuePair0.getCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("?jQWAU+{HF", "?jQWAU+{HF");
      Integer integer0 = Integer.valueOf(1);
      keyValuePair0.setRowspan(integer0);
      Integer integer1 = keyValuePair0.getRowspan();
      assertNotNull(integer1);
      assertEquals("?jQWAU+{HF", keyValuePair0.getCode());
      assertEquals("?jQWAU+{HF", keyValuePair0.getText());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      Integer integer0 = Integer.valueOf((-780));
      keyValuePair0.rowspan = integer0;
      Integer integer1 = keyValuePair0.getRowspan();
      assertEquals((-780), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("c<j/kc", "c<j/kc", "'+'4Ggt!_j");
      keyValuePair0.parentCode = ", colspan=";
      String string0 = keyValuePair0.getParentCode();
      assertEquals("c<j/kc", keyValuePair0.getText());
      assertEquals(", colspan=", string0);
      assertNotNull(string0);
      assertEquals("c<j/kc", keyValuePair0.getCode());
      assertEquals("'+'4Ggt!_j", keyValuePair0.getSequence());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair((String) null, (String) null);
      keyValuePair0.setParentCode("");
      String string0 = keyValuePair0.getParentCode();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("", "");
      Integer integer0 = Integer.valueOf(0);
      keyValuePair0.dataColumn = integer0;
      Integer integer1 = keyValuePair0.getDataColumn();
      assertEquals("", keyValuePair0.getText());
      assertNotNull(integer1);
      assertEquals("", keyValuePair0.getCode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      Integer integer0 = Integer.getInteger("0", 3423);
      keyValuePair0.setDataColumn(integer0);
      Integer integer1 = keyValuePair0.getDataColumn();
      assertEquals(3423, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      keyValuePair0.colspan = null;
      Integer integer0 = Integer.valueOf((-2903));
      keyValuePair0.colspan = integer0;
      keyValuePair0.setDataColumn(keyValuePair0.colspan);
      Integer integer1 = keyValuePair0.getDataColumn();
      assertEquals((-2903), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      Integer integer0 = Integer.valueOf(0);
      keyValuePair0.setColspan(integer0);
      Integer integer1 = keyValuePair0.getColspan();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("", "");
      Integer integer0 = Integer.getInteger("", 2010);
      keyValuePair0.colspan = integer0;
      Integer integer1 = keyValuePair0.getColspan();
      assertEquals("", keyValuePair0.getCode());
      assertNotNull(integer1);
      assertEquals("", keyValuePair0.getText());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      keyValuePair0.colspan = null;
      Integer integer0 = Integer.valueOf((-2903));
      keyValuePair0.colspan = integer0;
      Integer integer1 = keyValuePair0.getColspan();
      assertEquals((-2903), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("2j*G~", "2j*G~");
      String string0 = keyValuePair0.getCode();
      assertEquals("2j*G~", keyValuePair0.getText());
      assertNotNull(string0);
      assertEquals("2j*G~", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("olQkqQY1O}xW~", ", align=");
      assertEquals("olQkqQY1O}xW~", keyValuePair0.getCode());
      
      keyValuePair0.setCode("");
      String string0 = keyValuePair0.getCode();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("0oJ2u*", ", text=", "0oJ2u*");
      keyValuePair0.setClassName(", text=");
      String string0 = keyValuePair0.getClassName();
      assertNotNull(string0);
      assertEquals("0oJ2u*", keyValuePair0.getSequence());
      assertEquals("0oJ2u*", keyValuePair0.getCode());
      assertEquals(", text=", keyValuePair0.getText());
      assertEquals(", text=", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair((String) null, "bV~waGd*y7", (String) null);
      keyValuePair0.className = "";
      String string0 = keyValuePair0.getClassName();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals("bV~waGd*y7", keyValuePair0.getText());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("2j*G~", "2j*G~");
      keyValuePair0.calcCode = "?X=6+;Y8aMYd@Amu\"";
      String string0 = keyValuePair0.getCalcCode();
      assertNotNull(string0);
      assertEquals("2j*G~", keyValuePair0.getText());
      assertEquals("?X=6+;Y8aMYd@Amu\"", string0);
      assertEquals("2j*G~", keyValuePair0.getCode());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      keyValuePair0.setCalcCode("");
      String string0 = keyValuePair0.getCalcCode();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      keyValuePair0.setAlign("k?R3]");
      String string0 = keyValuePair0.getAlign();
      assertNotNull(string0);
      assertEquals("k?R3]", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("olQkqQY1O}xW~", ", align=");
      keyValuePair0.align = "";
      String string0 = keyValuePair0.getAlign();
      assertEquals(", align=", keyValuePair0.getText());
      assertNotNull(string0);
      assertEquals("olQkqQY1O}xW~", keyValuePair0.getCode());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("0oJ2u*", ", text=", "0oJ2u*");
      keyValuePair0.aliasCode = "|v+~Zr\"b5&z{3W";
      String string0 = keyValuePair0.getAliasCode();
      assertEquals("|v+~Zr\"b5&z{3W", string0);
      assertEquals("0oJ2u*", keyValuePair0.getCode());
      assertNotNull(string0);
      assertEquals("0oJ2u*", keyValuePair0.getSequence());
      assertEquals(", text=", keyValuePair0.getText());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("L)PQ6!&xQf1@C", "", ", rowspan=");
      keyValuePair0.aliasCode = "";
      String string0 = keyValuePair0.getAliasCode();
      assertEquals("", keyValuePair0.getText());
      assertEquals("L)PQ6!&xQf1@C", keyValuePair0.getCode());
      assertEquals("", string0);
      assertEquals(", rowspan=", keyValuePair0.getSequence());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      keyValuePair0.setText(":");
      keyValuePair0.toString();
      assertEquals(":", keyValuePair0.getText());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      String string0 = keyValuePair0.getParentCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      String string0 = keyValuePair0.getAlign();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("0oJ2u*", ", text=", "0oJ2u*");
      String string0 = keyValuePair0.getClassName();
      assertEquals(", text=", keyValuePair0.getText());
      assertNull(string0);
      assertEquals("0oJ2u*", keyValuePair0.getSequence());
      assertEquals("0oJ2u*", keyValuePair0.getCode());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      Integer integer0 = keyValuePair0.getRowspan();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      String string0 = keyValuePair0.getCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      Integer integer0 = keyValuePair0.getColspan();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("olQkqQY1O}xW~", ", align=");
      String string0 = keyValuePair0.getText();
      assertEquals(", align=", string0);
      assertEquals("olQkqQY1O}xW~", keyValuePair0.getCode());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("&C", "&C", "&C");
      String string0 = keyValuePair0.getSequence();
      assertEquals("&C", keyValuePair0.getCode());
      assertNotNull(string0);
      assertEquals("&C", keyValuePair0.getText());
      assertEquals("&C", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      Integer integer0 = keyValuePair0.getDataColumn();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair();
      String string0 = keyValuePair0.getCalcCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair(".6f};JG;uiOx>\"zD@7", ".6f};JG;uiOx>\"zD@7");
      keyValuePair0.setCalcCode("0(YQ<l:WB.3sf");
      keyValuePair0.toString();
      assertEquals("0(YQ<l:WB.3sf", keyValuePair0.getCalcCode());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("", "");
      keyValuePair0.setAliasCode("");
      assertEquals("", keyValuePair0.getAliasCode());
      assertEquals("", keyValuePair0.getText());
      assertEquals("", keyValuePair0.getCode());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      KeyValuePair keyValuePair0 = new KeyValuePair("&C", "&C", "&C");
      String string0 = keyValuePair0.getAliasCode();
      assertEquals("&C", keyValuePair0.getSequence());
      assertNull(string0);
      assertEquals("&C", keyValuePair0.getCode());
      assertEquals("&C", keyValuePair0.getText());
  }
}
