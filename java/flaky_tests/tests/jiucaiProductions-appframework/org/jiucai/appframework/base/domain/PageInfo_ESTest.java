/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 03:16:21 GMT 2022
 */

package org.jiucai.appframework.base.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiucai.appframework.base.domain.PageInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PageInfo_ESTest extends PageInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long((-1943L));
      Long long1 = new Long((-234L));
      PageInfo pageInfo0 = new PageInfo(long0, (Long) null, long1, long0);
      assertEquals((-1943L), (long)pageInfo0.getPageSize());
      assertEquals((-1943L), (long)pageInfo0.getResultSize());
      assertEquals((-234L), (long)pageInfo0.getPageNo());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo();
      Long long0 = new Long(0L);
      pageInfo0.setResultSize(long0);
      Long long1 = pageInfo0.getResultSize();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long(778L);
      PageInfo pageInfo0 = new PageInfo(long0, long0, long0, long0);
      Long long1 = pageInfo0.getResultSize();
      assertEquals(778L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo((Long) null, (Long) null, (Long) null, (Long) null);
      Long long0 = pageInfo0.getResultSize();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long((-2932L));
      Long long1 = new Long(0L);
      PageInfo pageInfo0 = new PageInfo(long0, long0, long0, long1);
      Long long2 = pageInfo0.getPageSize();
      assertEquals((-2932L), (long)pageInfo0.getPageNo());
      assertEquals(0L, (long)long2);
      assertEquals((-2932L), (long)pageInfo0.getResultSize());
      assertEquals((-2932L), (long)pageInfo0.getPageCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo((Long) null, (Long) null, (Long) null, (Long) null);
      Long long0 = new Long(73L);
      pageInfo0.setPageSize(long0);
      Long long1 = pageInfo0.getPageSize();
      assertEquals(73L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1943L));
      PageInfo pageInfo0 = new PageInfo(long0, (Long) null, long0, long0);
      Long long1 = pageInfo0.getPageSize();
      assertEquals((-1943L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long((-740L));
      PageInfo pageInfo0 = new PageInfo(long0, long0, long0, long0);
      Long long1 = new Long(1L);
      pageInfo0.setPageNo(long1);
      Long long2 = pageInfo0.getPageNo();
      assertEquals(1L, (long)long2);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long((-740L));
      PageInfo pageInfo0 = new PageInfo(long0, long0, long0, long0);
      Long long1 = pageInfo0.getPageNo();
      assertEquals((-740L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo();
      Long long0 = new Long(0L);
      pageInfo0.setPageCount(long0);
      Long long1 = pageInfo0.getPageCount();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long((-740L));
      PageInfo pageInfo0 = new PageInfo(long0, long0, long0, long0);
      Long long1 = new Long(247L);
      pageInfo0.setPageCount(long1);
      Long long2 = pageInfo0.getPageCount();
      assertEquals(247L, (long)long2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo();
      Long long0 = pageInfo0.getPageCount();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long((-740L));
      PageInfo pageInfo0 = new PageInfo(long0, long0, long0, long0);
      Long long1 = pageInfo0.getResultSize();
      assertEquals((-740L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo();
      Long long0 = new Long(0L);
      pageInfo0.setPageNo(long0);
      Long long1 = pageInfo0.getPageNo();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo();
      Long long0 = pageInfo0.getPageSize();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long((-740L));
      PageInfo pageInfo0 = new PageInfo(long0, long0, long0, long0);
      Long long1 = pageInfo0.getPageCount();
      assertEquals((-740L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo();
      String string0 = pageInfo0.toString();
      assertEquals("PageInfo [resultSize=null, pageCount=null, pageNo=null, pageSize=null]", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PageInfo pageInfo0 = new PageInfo();
      Long long0 = pageInfo0.getPageNo();
      assertNull(long0);
  }
}
