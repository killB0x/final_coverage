/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 22:03:22 GMT 2022
 */

package ru.sbtqa.tag.qautils.managers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParseException;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import ru.sbtqa.tag.qautils.managers.DateManager;
import ru.sbtqa.tag.qautils.strategies.DateStrategy;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateManager_ESTest extends DateManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      try { 
        DateManager.convertTimezones("@-7s!3%L(", "", "yyyy-MM-dd HH:mm:ss");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable date: \"@-7s!3%L(\"
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        DateManager.parseDate("%#|QgVL{J3LubB", "");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable date: \"%#|QgVL{J3LubB\"
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.parseDate("1C7/#vKH^2", "Ki#^[l");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'i'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        DateManager.parseDate("f 0O>DVWK:/61y{x=cd", "", "");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable date: \"f 0O>DVWK:/61y{x=cd\"
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Date date0 = DateManager.getNowDate();
      String string0 = DateManager.toStringWithAlphabeticMonth(date0, "$12;1)7^0>");
      assertEquals("$12;1)7^0>", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Date date0 = DateManager.getNowDate();
      String string0 = DateManager.toStringWithAlphabeticMonth(date0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date date0 = DateManager.getNowDate();
      String string0 = DateManager.toString(date0, "$L;w)7^0>");
      assertEquals("$2;7)7^0>", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = DateManager.getNowDate();
      String string0 = DateManager.toString(date0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      long long0 = DateManager.toMills("02.01.1970", "02.01.1970");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      long long0 = DateManager.toMills("15.02.2014", "15.02.2014");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = DateManager.getCurrentTimestamp();
      String string0 = DateManager.parseTimestamp(long0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Date date0 = DateManager.parseDate("12.02.2014", "12.02.2014", "12.02.2014");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = DateManager.increaseCurrentDateByHours("", 9);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = DateManager.increaseCurrentDateByDays("", 2);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Long long0 = DateManager.getCurrentTimestamp();
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Long long0 = DateManager.getCurrentTimestamp();
      assertEquals((-1L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = DateManager.getCurrentDate("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.toStringWithAlphabeticMonth((Date) null, "2&kul)mNpU? b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'l'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Date date0 = DateManager.getNowDate();
      // Undeclared exception!
      try { 
        DateManager.toString(date0, "ATOMORROW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'A'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      try { 
        DateManager.toMills("", "");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable date: \"\"
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.toMills((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.toMills("Jl,:", "Jl,:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'J'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.parseTimestamp((Long) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ru.sbtqa.tag.qautils.managers.DateManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.parseDate("vuK,%8WSi!:8@Etmxj", "vuK,%8WSi!:8@Etmxj", "vuK,%8WSi!:8@Etmxj");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'v'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.parseDate((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.increaseCurrentDateByHours((String) null, 305);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.increaseCurrentDateByHours("TOMORROW", (-2760));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'T'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.increaseCurrentDateByDays((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.increaseCurrentDateByDays("kObxM6bxhOx^N-", (-1423));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'O'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DateStrategy dateStrategy0 = DateStrategy.TOMORROW;
      // Undeclared exception!
      try { 
        DateManager.getDate(dateStrategy0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.getDate((DateStrategy) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ru.sbtqa.tag.qautils.managers.DateManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.getCurrentDate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.getCurrentDate("pc657a<L2PGhMO:tHG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'p'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.convertTimezones((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DateStrategy dateStrategy0 = DateStrategy.TOMORROW;
      // Undeclared exception!
      try { 
        DateManager.getDate(dateStrategy0, "#QATWD1VLj^d");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'Q'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DateStrategy dateStrategy0 = DateStrategy.YESTERDAY;
      // Undeclared exception!
      try { 
        DateManager.getDate(dateStrategy0, "C>jfi");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'C'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DateStrategy dateStrategy0 = DateStrategy.ATOMORROW;
      String string0 = DateManager.getDate(dateStrategy0, "15.02.2014");
      assertEquals("15.02.2014", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Date date0 = DateManager.toDate(0L);
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", date0.toString());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DateStrategy dateStrategy0 = DateStrategy.ATOMORROW;
      String string0 = DateManager.getDate(dateStrategy0);
      assertEquals("16.02.2014", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DateStrategy dateStrategy0 = DateStrategy.TODAY;
      String string0 = DateManager.getDate(dateStrategy0, "16.02.2014");
      assertEquals("16.02.2014", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DateStrategy dateStrategy0 = DateStrategy.BYESTERDAY;
      String string0 = DateManager.getDate(dateStrategy0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = DateManager.increaseCurrentDateByHours("yyyy-MM-dd HH:mm:ss", (-3340));
      assertEquals("2013-09-28 16:21:21", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Date date0 = DateManager.getNowDate();
      // Undeclared exception!
      try { 
        DateManager.toString(date0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Long long0 = new Long(0L);
      String string0 = DateManager.parseTimestamp(long0, "16.02.2014");
      assertEquals("16.02.2014", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Long long0 = DateManager.getCurrentTimestamp();
      // Undeclared exception!
      try { 
        DateManager.parseTimestamp(long0, "TODAY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'T'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = DateManager.increaseCurrentDateByDays("16.02.2014", 0);
      assertEquals("16.02.2014", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateManager.parseDate((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Date date0 = DateManager.getNowDate();
      // Undeclared exception!
      try { 
        DateManager.toStringWithAlphabeticMonth(date0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Date date0 = DateManager.parseDate("14.02.2014", "14.02.2014");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = DateManager.getCurrentDate("15.02.2014");
      assertEquals("15.02.2014", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = DateManager.convertTimezones("2013-09-28 16:21:21", "2013-09-28 16:21:21", "yyyy-MM-dd HH:mm:ss");
      assertEquals("2014-02-14 20:21:21", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      long long0 = DateManager.toMills("02.01.1970", "02.01.1970");
      assertEquals(1392409281320L, long0);
  }
}
