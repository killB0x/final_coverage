/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:46:00 GMT 2022
 */

package org.opengis.cite.om20;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.HashMap;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.namespace.QName;
import javax.xml.transform.Source;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.sax.SAXSource;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Validator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;
import org.opengis.cite.om20.ETSAssert;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.xml.sax.InputSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ETSAssert_ESTest extends ETSAssert_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockURL.getHttpExample();
      StreamSource streamSource0 = new StreamSource();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("TW1)$jUyI,f_");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode1, iIOMetadataNode1);
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0);
      // Undeclared exception!
      try { 
        ETSAssert.assertXPath("sams", node0, hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        ETSAssert.assertXPath((String) null, iIOMetadataNode0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      QName qName0 = QName.valueOf("F[KF1E#MLw^)^T!");
      // Undeclared exception!
      try { 
        ETSAssert.assertQualifiedName(iIOMetadataNode0, qName0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/testng/Assert
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      String string0 = "";
      QName qName0 = QName.valueOf("");
      // Undeclared exception!
      try { 
        ETSAssert.assertQualifiedName(iIOMetadataNode0, qName0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/testng/Assert
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("XPathError", "XPathError");
      // Undeclared exception!
      try { 
        ETSAssert.assertXPath("XPathError", iIOMetadataNode0, hashMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/testng/Assert
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getAttributeNodeNS("~:il;", "~:il;");
      QName qName0 = QName.valueOf("");
      // Undeclared exception!
      try { 
        ETSAssert.assertQualifiedName((Node) null, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ETSAssert.assertQualifiedName((Node) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        ETSAssert.assertXPath("", (Node) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Context node is null.
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      DOMSource dOMSource0 = new DOMSource();
      // Undeclared exception!
      try { 
        ETSAssert.assertSchematronValid(uRL0, dOMSource0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/opengis/cite/validation/SchematronValidator
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "kSEp", uRLStreamHandler0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-126);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-108);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      StreamSource streamSource0 = new StreamSource(byteArrayInputStream0, "{=S?jW,$5uZs>5N");
      // Undeclared exception!
      try { 
        ETSAssert.assertSchematronValid(uRL1, streamSource0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/opengis/cite/validation/SchematronValidator
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getNextSibling();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        ETSAssert.assertXPath("", (Node) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Context node is null.
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        ETSAssert.assertXPath("</hcOv\"si'1C) !)P", iIOMetadataNode0, hashMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.cloneNode(true);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        ETSAssert.assertXPath("", node0, hashMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Validator validator0 = mock(Validator.class, new ViolatedAssumptionAnswer());
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getFirstChild();
      String string0 = "_pt";
      DOMSource dOMSource0 = new DOMSource((Node) null, "_pt");
      // Undeclared exception!
      try { 
        ETSAssert.assertSchemaValid(validator0, dOMSource0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/opengis/cite/validation/ValidationErrorHandler
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        ETSAssert.assertSchemaValid((Validator) null, (Source) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/opengis/cite/validation/ValidationErrorHandler
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getUserObject();
      iIOMetadataNode0.getOwnerDocument();
      QName qName0 = null;
      // Undeclared exception!
      try { 
        ETSAssert.assertDescendantElementCount((Document) null, (QName) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ETSAssert.assertDescendantElementCount((Document) null, (QName) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.om20.ETSAssert", e);
      }
  }
}
