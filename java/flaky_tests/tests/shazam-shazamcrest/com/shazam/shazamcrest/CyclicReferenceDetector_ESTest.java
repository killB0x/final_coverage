/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:44:05 GMT 2022
 */

package com.shazam.shazamcrest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.shazam.shazamcrest.CyclicReferenceDetector;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CyclicReferenceDetector_ESTest extends CyclicReferenceDetector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CyclicReferenceDetector cyclicReferenceDetector0 = new CyclicReferenceDetector();
      // Undeclared exception!
      try { 
        CyclicReferenceDetector.getClassesWithCircularReferences(cyclicReferenceDetector0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/ClassUtils
         //
         verifyException("com.shazam.shazamcrest.CyclicReferenceDetector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Set<Class<?>> set0 = CyclicReferenceDetector.getClassesWithCircularReferences((Object) null);
      assertTrue(set0.isEmpty());
  }
}
