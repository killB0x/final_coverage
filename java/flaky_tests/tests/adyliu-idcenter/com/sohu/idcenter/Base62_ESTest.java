/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 06:49:56 GMT 2022
 */

package com.sohu.idcenter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sohu.idcenter.Base62;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Base62_ESTest extends Base62_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long long0 = Base62.decode("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");
      assertEquals((-7578731524505099983L), long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base62.decode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sohu.idcenter.Base62", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base62.decode("1>@QF7ZylvTM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknow character for Base62: 1>@QF7ZylvTM
         //
         verifyException("com.sohu.idcenter.Base62", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base62.decode("N&0s):{uYq");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknow character for Base62: N&0s):{uYq
         //
         verifyException("com.sohu.idcenter.Base62", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = Base62.encode(0L);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base62.encode((-1441L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number(Base62) must be positive: -1441
         //
         verifyException("com.sohu.idcenter.Base62", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = Base62.encode(423L);
      assertEquals("6P", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      long long0 = Base62.decode("6P");
      assertEquals(423L, long0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long long0 = Base62.decode("");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Base62 base62_0 = new Base62();
  }
}
