/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:39:13 GMT 2022
 */

package io.mybatis.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.mybatis.config.defaults.EnvConfig;
import io.mybatis.config.defaults.SystemConfig;
import io.mybatis.config.spring.SpringConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Config_ESTest extends Config_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      String string0 = envConfig0.getStr("3LFbCp)iNs", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      int int0 = envConfig0.getOrder();
      assertEquals(300, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      Integer integer0 = new Integer(0);
      Integer integer1 = envConfig0.getInt("0:2mZ9rAGC{-&i:h", integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SpringConfig springConfig0 = new SpringConfig();
      Integer integer0 = new Integer(87);
      Integer integer1 = springConfig0.getInt("", integer0);
      assertEquals(87, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      Integer integer0 = Integer.getInteger("_", (-987));
      Integer integer1 = systemConfig0.getInt("(a'iDueu", integer0);
      assertEquals((-987), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SpringConfig springConfig0 = new SpringConfig();
      boolean boolean0 = springConfig0.getBoolean("_*[gLCB;", true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      boolean boolean0 = systemConfig0.getBoolean("\u6307\u5B9A\u7684\u7528\u6237\u914D\u7F6E\u6587\u4EF6: ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      // Undeclared exception!
      try { 
        envConfig0.getStr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      // Undeclared exception!
      try { 
        systemConfig0.getStr("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      // Undeclared exception!
      try { 
        envConfig0.getInt((String) null, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      Integer integer0 = systemConfig0.getInt("n(3B_O|Dnv:");
      // Undeclared exception!
      try { 
        systemConfig0.getInt("", integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      // Undeclared exception!
      try { 
        systemConfig0.getInt((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      // Undeclared exception!
      try { 
        systemConfig0.getInt("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      // Undeclared exception!
      try { 
        systemConfig0.getBoolean((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      // Undeclared exception!
      try { 
        systemConfig0.getBoolean("", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      // Undeclared exception!
      try { 
        systemConfig0.getBoolean((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      // Undeclared exception!
      try { 
        envConfig0.getInt("_");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"/usr/bin/java\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SpringConfig springConfig0 = new SpringConfig();
      boolean boolean0 = springConfig0.getBoolean("", false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      boolean boolean0 = envConfig0.getBoolean(".", false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SpringConfig springConfig0 = new SpringConfig();
      Integer integer0 = springConfig0.getInt("io.mybatis.config.spring.SpringConfig", (Integer) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      // Undeclared exception!
      try { 
        envConfig0.getInt(".", (Integer) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"/usr/bin/java\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SpringConfig springConfig0 = new SpringConfig();
      String string0 = springConfig0.getStr("io.mybatis.config.spring.SpringConfig", "");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EnvConfig envConfig0 = new EnvConfig();
      String string0 = envConfig0.getStr("_", "-(vd+.d+)");
      assertEquals("/usr/bin/java", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SystemConfig systemConfig0 = new SystemConfig();
      // Undeclared exception!
      try { 
        systemConfig0.getBoolean("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }
}
