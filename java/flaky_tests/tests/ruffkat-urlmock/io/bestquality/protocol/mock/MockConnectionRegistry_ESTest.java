/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 04:18:23 GMT 2022
 */

package io.bestquality.protocol.mock;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.bestquality.protocol.mock.MockConnectionRegistry;
import java.net.URL;
import java.net.URLConnection;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MockConnectionRegistry_ESTest extends MockConnectionRegistry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        MockConnectionRegistry.findMockConnection((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      MockConnectionRegistry.findMockConnection(uRL0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 0);
      URL uRL0 = MockURL.getHttpExample();
      URLConnection uRLConnection0 = MockURL.openConnection(uRL0);
      MockConnectionRegistry.registerMockConnection(pattern0, uRLConnection0);
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", uRLConnection0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockConnectionRegistry.clearMockConnections();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockConnectionRegistry.installProtocolHandlers();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockConnectionRegistry mockConnectionRegistry0 = new MockConnectionRegistry();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockConnectionRegistry.registerMockConnection((URLConnection) null);
  }
}
