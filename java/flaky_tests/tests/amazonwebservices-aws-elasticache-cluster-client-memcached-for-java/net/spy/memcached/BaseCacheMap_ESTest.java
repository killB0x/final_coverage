/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:09:56 GMT 2022
 */

package net.spy.memcached;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.Collection;
import java.util.Map;
import java.util.Set;
import net.spy.memcached.BaseCacheMap;
import net.spy.memcached.MemcachedClientIF;
import net.spy.memcached.transcoders.SerializingTranscoder;
import net.spy.memcached.transcoders.Transcoder;
import net.spy.memcached.transcoders.WhalinTranscoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseCacheMap_ESTest extends BaseCacheMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, (String) null, serializingTranscoder0);
      Object object0 = baseCacheMap0.remove((Object) serializingTranscoder0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      Transcoder<String> transcoder0 = (Transcoder<String>) mock(Transcoder.class, new ViolatedAssumptionAnswer());
      BaseCacheMap<String> baseCacheMap0 = new BaseCacheMap<String>((MemcachedClientIF) null, 1087, "8", transcoder0);
      String string0 = baseCacheMap0.get(map0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, "null", serializingTranscoder0);
      // Undeclared exception!
      try { 
        baseCacheMap0.containsKey("null");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.BaseCacheMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, " - SHUTTING DOWN (informed client)", serializingTranscoder0);
      // Undeclared exception!
      try { 
        baseCacheMap0.get((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.BaseCacheMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, "", serializingTranscoder0);
      Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)baseCacheMap0.entrySet();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      BaseCacheMap<String> baseCacheMap0 = new BaseCacheMap<String>((MemcachedClientIF) null, 0, "U n%cnKIUJD$", (Transcoder<String>) null);
      // Undeclared exception!
      try { 
        baseCacheMap0.putAll(map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.BaseCacheMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transcoder<String> transcoder0 = (Transcoder<String>) mock(Transcoder.class, new ViolatedAssumptionAnswer());
      BaseCacheMap<String> baseCacheMap0 = new BaseCacheMap<String>((MemcachedClientIF) null, 1232, "\r\n", transcoder0);
      WhalinTranscoder whalinTranscoder0 = new WhalinTranscoder();
      BaseCacheMap<Object> baseCacheMap1 = new BaseCacheMap<Object>((MemcachedClientIF) null, 1232, "kP$5R*t49rJ%3VX", whalinTranscoder0);
      boolean boolean0 = baseCacheMap1.containsKey(baseCacheMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, "", serializingTranscoder0);
      boolean boolean0 = baseCacheMap0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, "", serializingTranscoder0);
      Set<String> set0 = baseCacheMap0.keySet();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WhalinTranscoder whalinTranscoder0 = new WhalinTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 1232, "kP$5R*t49rJ%3VX", whalinTranscoder0);
      // Undeclared exception!
      try { 
        baseCacheMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.BaseCacheMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, (String) null, serializingTranscoder0);
      // Undeclared exception!
      try { 
        baseCacheMap0.remove((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.BaseCacheMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, "?", serializingTranscoder0);
      boolean boolean0 = baseCacheMap0.containsValue(serializingTranscoder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, (-696), "@qDRB[d\t!", (Transcoder<Object>) null);
      int int0 = baseCacheMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, (String) null, serializingTranscoder0);
      Collection<Object> collection0 = baseCacheMap0.values();
      assertFalse(collection0.contains(16384));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BaseCacheMap<String> baseCacheMap0 = new BaseCacheMap<String>((MemcachedClientIF) null, 1, "", (Transcoder<String>) null);
      baseCacheMap0.putAll(baseCacheMap0);
      assertFalse(baseCacheMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SerializingTranscoder serializingTranscoder0 = new SerializingTranscoder();
      BaseCacheMap<Object> baseCacheMap0 = new BaseCacheMap<Object>((MemcachedClientIF) null, 16384, "$J@X'wZv~D(tk\"4Fn{", serializingTranscoder0);
      // Undeclared exception!
      try { 
        baseCacheMap0.put("$J@X'wZv~D(tk\"4Fn{", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.BaseCacheMap", e);
      }
  }
}
