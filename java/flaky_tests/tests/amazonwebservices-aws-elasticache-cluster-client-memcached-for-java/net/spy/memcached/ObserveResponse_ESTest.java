/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 15:03:07 GMT 2022
 */

package net.spy.memcached;

import org.junit.Test;
import static org.junit.Assert.*;
import net.spy.memcached.ObserveResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObserveResponse_ESTest extends ObserveResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObserveResponse[] observeResponseArray0 = ObserveResponse.values();
      assertEquals(6, observeResponseArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.valueOf("FOUND_NOT_PERSISTED");
      assertEquals((byte)0, observeResponse0.getResponse());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.valueOf("FOUND_PERSISTED");
      assertEquals(ObserveResponse.FOUND_PERSISTED, observeResponse0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.valueOf("NOT_FOUND_PERSISTED");
      assertEquals(ObserveResponse.NOT_FOUND_PERSISTED, observeResponse0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.valueOf((byte)0);
      assertEquals(ObserveResponse.FOUND_NOT_PERSISTED, observeResponse0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.valueOf((byte)1);
      assertEquals((byte)1, observeResponse0.getResponse());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.valueOf((byte) (-127));
      assertEquals(ObserveResponse.NOT_FOUND_NOT_PERSISTED, observeResponse0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.FOUND_NOT_PERSISTED;
      byte byte0 = observeResponse0.getResponse();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.FOUND_PERSISTED;
      byte byte0 = observeResponse0.getResponse();
      assertEquals((byte)1, byte0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ObserveResponse observeResponse0 = ObserveResponse.NOT_FOUND_NOT_PERSISTED;
      byte byte0 = observeResponse0.getResponse();
      assertEquals((byte) (-127), byte0);
  }
}
