/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:45:04 GMT 2022
 */

package net.spy.memcached;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import net.spy.memcached.ClientMode;
import net.spy.memcached.DefaultConnectionFactory;
import net.spy.memcached.DefaultHashAlgorithm;
import net.spy.memcached.KetamaConnectionFactory;
import net.spy.memcached.KetamaNodeKeyFormatter;
import net.spy.memcached.MemcachedNode;
import net.spy.memcached.NodeLocator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KetamaConnectionFactory_ESTest extends KetamaConnectionFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClientMode clientMode0 = ClientMode.Static;
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory(clientMode0, 0, 0, 0L);
      assertFalse(ketamaConnectionFactory0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory();
      Map<InetSocketAddress, Integer> map0 = ketamaConnectionFactory0.getWeights();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultHashAlgorithm defaultHashAlgorithm0 = DefaultHashAlgorithm.FNV1_32_HASH;
      KetamaNodeKeyFormatter.Format ketamaNodeKeyFormatter_Format0 = KetamaNodeKeyFormatter.Format.LIBMEMCACHED;
      HashMap<InetSocketAddress, Integer> hashMap0 = new HashMap<InetSocketAddress, Integer>();
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory(0, 0, 2500L, defaultHashAlgorithm0, ketamaNodeKeyFormatter_Format0, hashMap0);
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved("", 0);
      hashMap0.put(inetSocketAddress0, (Integer) 16384);
      Map<InetSocketAddress, Integer> map0 = ketamaConnectionFactory0.getWeights();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory();
      LinkedList<MemcachedNode> linkedList0 = new LinkedList<MemcachedNode>();
      NodeLocator nodeLocator0 = ketamaConnectionFactory0.createLocator(linkedList0);
      assertNotNull(nodeLocator0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultHashAlgorithm defaultHashAlgorithm0 = DefaultHashAlgorithm.FNV1A_32_HASH;
      KetamaNodeKeyFormatter.Format ketamaNodeKeyFormatter_Format0 = KetamaNodeKeyFormatter.Format.SPYMEMCACHED;
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory(8, 0, 0L, defaultHashAlgorithm0, ketamaNodeKeyFormatter_Format0, (Map<InetSocketAddress, Integer>) null);
      KetamaNodeKeyFormatter.Format ketamaNodeKeyFormatter_Format1 = ketamaConnectionFactory0.getKetamaNodeKeyFormat();
      assertSame(ketamaNodeKeyFormatter_Format0, ketamaNodeKeyFormatter_Format1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory(611, 611, 611);
      assertEquals(1000L, DefaultConnectionFactory.DEFAULT_AUTH_WAIT_TIME);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory();
      // Undeclared exception!
      try { 
        ketamaConnectionFactory0.createLocator((List<MemcachedNode>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.KetamaNodeLocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultHashAlgorithm defaultHashAlgorithm0 = DefaultHashAlgorithm.FNV1A_32_HASH;
      KetamaNodeKeyFormatter.Format ketamaNodeKeyFormatter_Format0 = KetamaNodeKeyFormatter.Format.SPYMEMCACHED;
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory(8, 0, 0L, defaultHashAlgorithm0, ketamaNodeKeyFormatter_Format0, (Map<InetSocketAddress, Integer>) null);
      Map<InetSocketAddress, Integer> map0 = ketamaConnectionFactory0.getWeights();
      assertNull(map0);
  }
}
