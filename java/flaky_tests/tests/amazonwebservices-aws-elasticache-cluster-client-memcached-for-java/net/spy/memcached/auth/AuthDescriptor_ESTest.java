/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:01:46 GMT 2022
 */

package net.spy.memcached.auth;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.security.auth.callback.CallbackHandler;
import net.spy.memcached.auth.AuthDescriptor;
import net.spy.memcached.auth.PlainCallbackHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AuthDescriptor_ESTest extends AuthDescriptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AuthDescriptor authDescriptor0 = AuthDescriptor.typical((String) null, "I\"uHEzJy(6");
      assertNotNull(authDescriptor0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AuthDescriptor authDescriptor0 = AuthDescriptor.typical("", "");
      String[] stringArray0 = authDescriptor0.getMechs();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PlainCallbackHandler plainCallbackHandler0 = new PlainCallbackHandler("Qp84oo2%`^oFi5a}d6>", "");
      AuthDescriptor authDescriptor0 = new AuthDescriptor(stringArray0, plainCallbackHandler0);
      String[] stringArray1 = authDescriptor0.getMechs();
      assertEquals(0, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AuthDescriptor authDescriptor0 = AuthDescriptor.typical("", "");
      CallbackHandler callbackHandler0 = authDescriptor0.getCallback();
      assertNotNull(callbackHandler0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthDescriptor.typical((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.auth.PlainCallbackHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AuthDescriptor authDescriptor0 = new AuthDescriptor((String[]) null, (CallbackHandler) null);
      boolean boolean0 = authDescriptor0.authThresholdReached();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AuthDescriptor authDescriptor0 = new AuthDescriptor((String[]) null, (CallbackHandler) null);
      String[] stringArray0 = authDescriptor0.getMechs();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AuthDescriptor authDescriptor0 = new AuthDescriptor((String[]) null, (CallbackHandler) null);
      CallbackHandler callbackHandler0 = authDescriptor0.getCallback();
      assertNull(callbackHandler0);
  }
}
