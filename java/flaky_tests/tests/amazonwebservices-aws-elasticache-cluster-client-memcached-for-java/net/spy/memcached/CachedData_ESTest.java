/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:26:46 GMT 2022
 */

package net.spy.memcached;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.CachedData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CachedData_ESTest extends CachedData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      CachedData cachedData0 = null;
      try {
        cachedData0 = new CachedData(1, byteArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot cache data larger than 0 bytes (you tried to cache a 1 byte object)
         //
         verifyException("net.spy.memcached.CachedData", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      CachedData cachedData0 = new CachedData(0, byteArray0, 0);
      int int0 = cachedData0.getFlags();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      CachedData cachedData0 = new CachedData(1529, byteArray0, 1529);
      int int0 = cachedData0.getFlags();
      assertEquals(1529, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      CachedData cachedData0 = new CachedData(0, byteArray0, 0);
      cachedData0.getData();
      assertEquals(0, cachedData0.getFlags());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CachedData cachedData0 = null;
      try {
        cachedData0 = new CachedData((-48), (byte[]) null, (-48));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.CachedData", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      CachedData cachedData0 = new CachedData((-6083), byteArray0, (byte)1);
      int int0 = cachedData0.getFlags();
      assertEquals((-6083), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      CachedData cachedData0 = new CachedData((-6083), byteArray0, (byte)1);
      cachedData0.getData();
      assertEquals((-6083), cachedData0.getFlags());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      CachedData cachedData0 = new CachedData(445, byteArray0, 445);
      String string0 = cachedData0.toString();
      assertEquals("{CachedData flags=445 data=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}", string0);
  }
}
