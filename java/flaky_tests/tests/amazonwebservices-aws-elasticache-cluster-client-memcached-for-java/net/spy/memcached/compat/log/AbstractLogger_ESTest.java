/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 13:41:19 GMT 2022
 */

package net.spy.memcached.compat.log;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.MissingFormatArgumentException;
import java.util.UnknownFormatConversionException;
import net.spy.memcached.compat.log.DefaultLogger;
import net.spy.memcached.compat.log.Level;
import net.spy.memcached.compat.log.Log4JLogger;
import net.spy.memcached.compat.log.SLF4JLogger;
import net.spy.memcached.compat.log.SunLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractLogger_ESTest extends AbstractLogger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("wKi~ztL}LbDww");
      MockThrowable mockThrowable0 = new MockThrowable();
      defaultLogger0.warn((Object) mockThrowable0, (Throwable) mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable", mockThrowable0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      Object object0 = new Object();
      defaultLogger0.trace(object0, (Throwable) null);
      assertFalse(defaultLogger0.isTraceEnabled());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger("");
      Level level0 = Level.INFO;
      MockThrowable mockThrowable0 = new MockThrowable("");
      sLF4JLogger0.log(level0, (Object) level0, (Throwable) mockThrowable0);
      assertEquals("", sLF4JLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("Logger name may not be null.");
      MockThrowable mockThrowable0 = new MockThrowable("Logger name may not be null.");
      defaultLogger0.info((Object) mockThrowable0, (Throwable) mockThrowable0);
      assertEquals("Logger name may not be null.", defaultLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("wKi~ztL}LbDww");
      MockThrowable mockThrowable0 = new MockThrowable();
      defaultLogger0.fatal((Object) mockThrowable0, (Throwable) mockThrowable0);
      assertNull(mockThrowable0.getMessage());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("net.spy.memcached.compat.log.AbstractLogger");
      Object object0 = new Object();
      defaultLogger0.error(object0, (Throwable) null);
      assertEquals("net.spy.memcached.compat.log.AbstractLogger", defaultLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      Object[] objectArray0 = new Object[5];
      defaultLogger0.warn("", objectArray0);
      assertEquals("", defaultLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("Mh\"/2N9");
      defaultLogger0.info((Object) "Mh\"/2N9");
      assertFalse(defaultLogger0.isDebugEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      defaultLogger0.fatal("", objectArray0);
      assertFalse(defaultLogger0.isDebugEnabled());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger("net.spy.memcached.compat.log.AbstractLogger");
      sLF4JLogger0.error("net.spy.memcached.compat.log.AbstractLogger", objectArray0);
      assertEquals(3, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      defaultLogger0.error((Object) defaultLogger0);
      assertTrue(defaultLogger0.isInfoEnabled());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      boolean boolean0 = defaultLogger0.isInfoEnabled();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger("net.spy.memcached.compat.log.SunLogger");
      boolean boolean0 = sLF4JLogger0.isInfoEnabled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      boolean boolean0 = defaultLogger0.isDebugEnabled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("/l");
      String string0 = defaultLogger0.getName();
      assertEquals("/l", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      DefaultLogger defaultLogger0 = new DefaultLogger("%}");
      // Undeclared exception!
      try { 
        defaultLogger0.warn("%}", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '}'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      DefaultLogger defaultLogger0 = new DefaultLogger("%B}");
      // Undeclared exception!
      try { 
        defaultLogger0.warn("%B}", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%B'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("net.spy.memcached.compat.log.AbstractLogger");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) defaultLogger0;
      // Undeclared exception!
      try { 
        defaultLogger0.warn("R//3r@%x`DtDN6", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // x != net.spy.memcached.compat.log.DefaultLogger
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("g2Ih:c");
      // Undeclared exception!
      try { 
        defaultLogger0.warn("g2Ih:c", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.compat.log.AbstractLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("%[Vf}");
      // Undeclared exception!
      try { 
        sunLogger0.warn((Object) null, (Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.warn((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("net.spy.memcached.compat.log.SunLogger");
      // Undeclared exception!
      try { 
        sunLogger0.warn((Object) "net.spy.memcached.compat.log.SunLogger");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.trace((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      Level level0 = Level.FATAL;
      // Undeclared exception!
      try { 
        sunLogger0.log(level0, (Object) null, (Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("IkYp011H\"kajFC)33");
      Level level0 = Level.WARN;
      MockThrowable mockThrowable0 = new MockThrowable("IkYp011H\"kajFC)33");
      // Undeclared exception!
      try { 
        sunLogger0.log(level0, (Object) level0, (Throwable) mockThrowable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      Level level0 = Level.FATAL;
      // Undeclared exception!
      try { 
        sunLogger0.log(level0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      Level level0 = Level.WARN;
      // Undeclared exception!
      try { 
        sunLogger0.log(level0, (Object) level0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("xF{%");
      // Undeclared exception!
      try { 
        sunLogger0.info("xF{%", (Object[]) null);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '%'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      DefaultLogger defaultLogger0 = new DefaultLogger("%s %s %s:  %s\n");
      // Undeclared exception!
      try { 
        defaultLogger0.info("%s %s %s:  %s\n", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%s'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      // Undeclared exception!
      try { 
        sunLogger0.info("%c>e[_f9^l\"esCM", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // c != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger(">mi/\"Z7bMkD7|");
      // Undeclared exception!
      try { 
        sunLogger0.info(">mi/\"Z7bMkD7|", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.compat.log.AbstractLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        sunLogger0.info("", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.info((Object) "", (Throwable) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.info((Object) "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("DO?ILW!}^/");
      // Undeclared exception!
      try { 
        sunLogger0.getThrowable((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.compat.log.AbstractLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      DefaultLogger defaultLogger0 = new DefaultLogger("INFO");
      // Undeclared exception!
      try { 
        defaultLogger0.fatal(" o.H*viuNh@ic%lH", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'l'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      DefaultLogger defaultLogger0 = new DefaultLogger(" with log message: ");
      // Undeclared exception!
      try { 
        defaultLogger0.fatal("VM|k=PtVJ#k'CD%g;D", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%g'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("^m&GK7K%oWr!zTj|0Jd");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "^m&GK7K%oWr!zTj|0Jd";
      // Undeclared exception!
      try { 
        defaultLogger0.fatal("^m&GK7K%oWr!zTj|0Jd", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // o != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("g2Ih:c");
      // Undeclared exception!
      try { 
        defaultLogger0.fatal("g2Ih:c", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.compat.log.AbstractLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        sunLogger0.fatal((Object) null, (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("xF{%");
      // Undeclared exception!
      try { 
        sunLogger0.fatal((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.fatal((Object) "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("%6K{1/('{sU$*k,R");
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        defaultLogger0.error("%6K{1/('{sU$*k,R", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'K'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger("54dFePQ/F!$ep\u0005");
      // Undeclared exception!
      try { 
        sLF4JLogger0.error("Unhandled log level: %s for the following message", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%s'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("T%e");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "T%e";
      // Undeclared exception!
      try { 
        sunLogger0.error("T%e", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // e != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("PTFM,*SU");
      // Undeclared exception!
      try { 
        sunLogger0.error("PTFM,*SU", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.compat.log.AbstractLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.error("", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger("net.spy.memcached.compat.log.AbstractLogger");
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        sLF4JLogger0.error((Object) null, (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("~q#sZW%(sQ^");
      // Undeclared exception!
      try { 
        sunLogger0.error((Object) "~q#sZW%(sQ^");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("T%e");
      // Undeclared exception!
      try { 
        sunLogger0.debug((Object) null, (Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger(">j[#JAfN6Na\"L@[ L");
      // Undeclared exception!
      try { 
        sLF4JLogger0.debug((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      SunLogger sunLogger0 = new SunLogger("net.spy.memcached.compat.log.SunLogger");
      sunLogger0.trace("net.spy.memcached.compat.log.SunLogger", objectArray0);
      assertTrue(sunLogger0.isInfoEnabled());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      SunLogger sunLogger0 = new SunLogger(".");
      Throwable throwable0 = sunLogger0.getThrowable(objectArray0);
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger(">m}SxU=b");
      MockThrowable mockThrowable0 = new MockThrowable("");
      // Undeclared exception!
      try { 
        sunLogger0.warn((Object) ">m}SxU=b", (Throwable) mockThrowable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      String string0 = defaultLogger0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        sunLogger0.error((Object) "", (Throwable) mockThrowable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("5],g_2Ad;BB6");
      // Undeclared exception!
      try { 
        sunLogger0.trace((Object) null, (Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        sunLogger0.fatal((Object) "", (Throwable) mockThrowable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        sunLogger0.info((Object) null, (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("wKi~ztL}LbDww");
      Object[] objectArray0 = new Object[6];
      defaultLogger0.info("wKi~ztL}LbDww", objectArray0);
      assertEquals("wKi~ztL}LbDww", defaultLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger("net.spy.memcached.compat.log.AbstractLogger");
      sLF4JLogger0.info((String) null, objectArray0);
      assertEquals("net.spy.memcached.compat.log.AbstractLogger", sLF4JLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      DefaultLogger defaultLogger0 = new DefaultLogger("net.spy.memcached.compat.log.AbstractLogger");
      defaultLogger0.debug("", objectArray0);
      assertEquals("net.spy.memcached.compat.log.AbstractLogger", defaultLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("net.spy.memcached.compat.log.AbstractLogger");
      MockThrowable mockThrowable0 = new MockThrowable("", (Throwable) null);
      Object[] objectArray0 = new Object[4];
      objectArray0[3] = (Object) mockThrowable0;
      Throwable throwable0 = sunLogger0.getThrowable(objectArray0);
      assertSame(throwable0, mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      Object[] objectArray0 = new Object[0];
      Throwable throwable0 = sunLogger0.getThrowable(objectArray0);
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Log4JLogger log4JLogger0 = null;
      try {
        log4JLogger0 = new Log4JLogger((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Logger name may not be null.
         //
         verifyException("net.spy.memcached.compat.log.AbstractLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger(",B=M398");
      // Undeclared exception!
      try { 
        sLF4JLogger0.error("w~Jy'<% B16Tw!BA", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = b, Flags =  
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("wKi~ztL}LbDww");
      MockThrowable mockThrowable0 = new MockThrowable();
      defaultLogger0.fatal((Object) mockThrowable0);
      assertFalse(defaultLogger0.isDebugEnabled());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.fatal("", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("net.spy.memcached.compat.log.AbstractLogger");
      sunLogger0.debug((Object) "net.spy.memcached.compat.log.AbstractLogger");
      assertEquals("net.spy.memcached.compat.log.AbstractLogger", sunLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SLF4JLogger sLF4JLogger0 = new SLF4JLogger("Jh\"/xN9");
      // Undeclared exception!
      try { 
        sLF4JLogger0.info((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("net.spy.memcached.compat.log.AbstractLogger");
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        sunLogger0.warn("c8!))9h]H|Q", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("KE?Lf\u0001,u-QtD");
      MockThrowable mockThrowable0 = new MockThrowable("KE?Lf\u0001,u-QtD");
      defaultLogger0.debug((Object) mockThrowable0, (Throwable) mockThrowable0);
      assertFalse(defaultLogger0.isDebugEnabled());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("g2Ih:c");
      Level level0 = Level.TRACE;
      defaultLogger0.log(level0, (Object) level0);
      assertFalse(defaultLogger0.isTraceEnabled());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger(".");
      // Undeclared exception!
      try { 
        sunLogger0.error((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DefaultLogger defaultLogger0 = new DefaultLogger("");
      defaultLogger0.warn((Object) "");
      assertEquals("", defaultLogger0.getName());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("net.spy.memcached.compat.log.AbstractLogger");
      Object object0 = new Object();
      sunLogger0.trace(object0);
      assertEquals("net.spy.memcached.compat.log.AbstractLogger", sunLogger0.getName());
  }
}
