/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 13:00:39 GMT 2022
 */

package net.spy.memcached.compat.log;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.compat.log.Level;
import net.spy.memcached.compat.log.SunLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SunLogger_ESTest extends SunLogger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("127uj1[vgx>RBB");
      Level level0 = Level.DEBUG;
      MockThrowable mockThrowable0 = new MockThrowable();
      sunLogger0.log(level0, (Object) level0, (Throwable) mockThrowable0);
      assertFalse(sunLogger0.isDebugEnabled());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      Level level0 = Level.INFO;
      // Undeclared exception!
      try { 
        sunLogger0.log(level0, (Object) "", (Throwable) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SunLogger sunLogger0 = null;
      try {
        sunLogger0 = new SunLogger((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Logger name may not be null.
         //
         verifyException("net.spy.memcached.compat.log.AbstractLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("kX2qTF,oFYWfZ};>$");
      // Undeclared exception!
      try { 
        sunLogger0.error((Object) "kX2qTF,oFYWfZ};>$");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.fatal((Object) "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("KbRxTbo/");
      // Undeclared exception!
      try { 
        sunLogger0.warn((Object) "KbRxTbo/");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Level level0 = Level.INFO;
      SunLogger sunLogger0 = new SunLogger("");
      // Undeclared exception!
      try { 
        sunLogger0.log(level0, (Object) null, (Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("kX2qTF,oFYWfZ};>$");
      sunLogger0.trace((Object) "kX2qTF,oFYWfZ};>$");
      assertFalse(sunLogger0.isDebugEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      boolean boolean0 = sunLogger0.isDebugEnabled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("");
      boolean boolean0 = sunLogger0.isInfoEnabled();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SunLogger sunLogger0 = new SunLogger("net.spy.memcached.compat.log.SunLogger$1");
      boolean boolean0 = sunLogger0.isTraceEnabled();
      assertFalse(boolean0);
  }
}
