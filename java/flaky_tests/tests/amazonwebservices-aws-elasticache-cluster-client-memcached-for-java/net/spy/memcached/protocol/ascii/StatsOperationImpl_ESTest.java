/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 13:57:30 GMT 2022
 */

package net.spy.memcached.protocol.ascii;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.OperationState;
import net.spy.memcached.ops.StatsOperation;
import net.spy.memcached.protocol.ascii.StatsOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StatsOperationImpl_ESTest extends StatsOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("net.spy.memcached.protocol.binary.NoopOperationImpl", statsOperation_Callback0);
      statsOperationImpl0.handleLine("END");
      assertFalse(statsOperationImpl0.isTimedOut());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("NOA", (StatsOperation.Callback) null);
      // Undeclared exception!
      try { 
        statsOperationImpl0.wasCancelled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.StatsOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("O'aYNN|$~Xj)LK", statsOperation_Callback0);
      // Undeclared exception!
      try { 
        statsOperationImpl0.handleLine("=Vc");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("END", (StatsOperation.Callback) null);
      // Undeclared exception!
      try { 
        statsOperationImpl0.handleLine("END");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.StatsOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("O'aYNN|$~Xj)LK", statsOperation_Callback0);
      statsOperationImpl0.handleLine("Cmd: [115, 116, 97, 116, 115, 32, 79, 39, 97, 89, 78, 78, 124, 36, 126, 88, 106, 41, 76, 75, 13, 10]");
      assertEquals(OperationState.WRITE_QUEUED, statsOperationImpl0.getState());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl((String) null, (StatsOperation.Callback) null);
      assertFalse(statsOperationImpl0.isCancelled());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("O'aYNN|$~Xj)LK", statsOperation_Callback0);
      String string0 = statsOperationImpl0.toString();
      assertEquals("Cmd: [115, 116, 97, 116, 115, 32, 79, 39, 97, 89, 78, 78, 124, 36, 126, 88, 106, 41, 76, 75, 13, 10]", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("O'aYNN|$~Xj)LK", statsOperation_Callback0);
      statsOperationImpl0.initialize();
      assertFalse(statsOperationImpl0.isCancelled());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      StatsOperationImpl statsOperationImpl0 = new StatsOperationImpl("O'aYNN|$~Xj)LK", statsOperation_Callback0);
      statsOperationImpl0.wasCancelled();
      assertEquals(0, statsOperationImpl0.getCloneCount());
  }
}
