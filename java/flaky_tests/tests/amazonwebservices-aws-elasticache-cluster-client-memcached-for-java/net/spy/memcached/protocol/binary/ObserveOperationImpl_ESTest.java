/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:49:47 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.binary.ObserveOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObserveOperationImpl_ESTest extends ObserveOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl(".j27 Z,3g.Y7C", (-2895), 1, (OperationCallback) null);
      byte[] byteArray0 = new byte[23];
      byteArray0[6] = (byte)1;
      // Undeclared exception!
      try { 
        observeOperationImpl0.decodePayload(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.ObserveOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl(".j27 Z,3g.Y7C", (-2895), 1, (OperationCallback) null);
      byte[] byteArray0 = new byte[23];
      byteArray0[4] = (byte)103;
      // Undeclared exception!
      try { 
        observeOperationImpl0.decodePayload(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.ObserveOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 66);
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("", 0L, (-2869), multiGetOperationCallback0);
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)1;
      // Undeclared exception!
      try { 
        observeOperationImpl0.decodePayload(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 7 out of bounds for length 7
         //
         verifyException("net.spy.memcached.protocol.binary.OperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback((OperationCallback) null, 0);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 5);
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("", 5000L, 0, multiReplicaGetOperationCallback0);
      int int0 = observeOperationImpl0.getIndex();
      assertEquals(0, int0);
      assertEquals(5000L, observeOperationImpl0.getCasValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback((OperationCallback) null, 3);
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("hVVZHzkz*QxGPCSjnL", 0L, 3, multiGetsOperationCallback0);
      int int0 = observeOperationImpl0.getIndex();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 1642);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, (-4059));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 288);
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("", 0L, (-4059), multiReplicaGetOperationCallback0);
      observeOperationImpl0.getCasValue();
      assertEquals((-4059), observeOperationImpl0.getIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (-2895));
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 1747);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 13);
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("DELETED", 32767L, (-2895), multiReplicaGetOperationCallback0);
      long long0 = observeOperationImpl0.getCasValue();
      assertEquals((-2895), observeOperationImpl0.getIndex());
      assertEquals(32767L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback((OperationCallback) null, 1052);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 68);
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl((String) null, 0L, 68, multiReplicaGetOperationCallback0);
      // Undeclared exception!
      try { 
        observeOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.KeyUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback((OperationCallback) null, (-2895));
      byte[] byteArray0 = new byte[23];
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("UBzG2\"8}XKj", 988L, 1, multiGetsOperationCallback0);
      // Undeclared exception!
      try { 
        observeOperationImpl0.decodePayload(byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.spy.memcached.ops.MultiGetsOperationCallback cannot be cast to class net.spy.memcached.ops.ObserveOperation$Callback (net.spy.memcached.ops.MultiGetsOperationCallback and net.spy.memcached.ops.ObserveOperation$Callback are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @642ff92a)
         //
         verifyException("net.spy.memcached.protocol.binary.ObserveOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 66);
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("", 0L, (-2869), multiGetOperationCallback0);
      int int0 = observeOperationImpl0.getIndex();
      assertEquals((-2869), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl(".j27 Z,3g.Y7C", (-2895), 1, (OperationCallback) null);
      long long0 = observeOperationImpl0.getCasValue();
      assertEquals(1, observeOperationImpl0.getIndex());
      assertEquals((-2895L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("touch ", 74, 74, (OperationCallback) null);
      observeOperationImpl0.initialize();
      assertEquals(74, observeOperationImpl0.getIndex());
      assertEquals(74L, observeOperationImpl0.getCasValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObserveOperationImpl observeOperationImpl0 = new ObserveOperationImpl("]I%Jy", 1160, 1160, (OperationCallback) null);
      String string0 = observeOperationImpl0.toString();
      assertEquals("Cmd: -110 Opaque: 1 Key: ]I%Jy Cas: 1160", string0);
  }
}
