/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:25:08 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.spy.memcached.ops.OperationState;
import net.spy.memcached.ops.StatsOperation;
import net.spy.memcached.protocol.binary.KeyStatsOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KeyStatsOperationImpl_ESTest extends KeyStatsOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("(?OXOwXHq[;;?@p\"r", statsOperation_Callback0);
      byte[] byteArray0 = new byte[4];
      keyStatsOperationImpl0.errorCode = (-1228);
      keyStatsOperationImpl0.finishedPayload(byteArray0);
      assertEquals(OperationState.COMPLETE, keyStatsOperationImpl0.getState());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("lfA8kcNSN8TEbX", statsOperation_Callback0);
      byte[] byteArray0 = new byte[8];
      Object[] objectArray0 = new Object[6];
      keyStatsOperationImpl0.prepareBuffer("-VG7OhnQ", 0L, byteArray0, objectArray0);
      ByteBuffer byteBuffer0 = keyStatsOperationImpl0.getBuffer();
      keyStatsOperationImpl0.readFromBuffer(byteBuffer0);
      assertEquals(OperationState.WRITE_QUEUED, keyStatsOperationImpl0.getState());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("", statsOperation_Callback0);
      keyStatsOperationImpl0.keyLen = (-667);
      byte[] byteArray0 = new byte[1];
      keyStatsOperationImpl0.finishedPayload(byteArray0);
      assertFalse(keyStatsOperationImpl0.isCancelled());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("lfA8kcNSNLTEbX", statsOperation_Callback0);
      byte[] byteArray0 = new byte[4];
      keyStatsOperationImpl0.initialize();
      ByteBuffer byteBuffer0 = keyStatsOperationImpl0.getBuffer();
      keyStatsOperationImpl0.readFromBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        keyStatsOperationImpl0.finishedPayload(byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -16
         //
         verifyException("net.spy.memcached.protocol.binary.KeyStatsOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("lfA8kcNSN8TEbX", (StatsOperation.Callback) null);
      // Undeclared exception!
      try { 
        keyStatsOperationImpl0.finishedPayload((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.KeyStatsOperationImpl", e);
      }
  }
}
