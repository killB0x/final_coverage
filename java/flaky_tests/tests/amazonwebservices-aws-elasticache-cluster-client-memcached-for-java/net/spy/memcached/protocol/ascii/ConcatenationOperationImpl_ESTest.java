/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:33:20 GMT 2022
 */

package net.spy.memcached.protocol.ascii;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import net.spy.memcached.ops.ConcatenationType;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.ascii.ConcatenationOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConcatenationOperationImpl_ESTest extends ConcatenationOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConcatenationType concatenationType0 = ConcatenationType.prepend;
      byte[] byteArray0 = new byte[9];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (-1086));
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 1660);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, (byte)52);
      ConcatenationOperationImpl concatenationOperationImpl0 = new ConcatenationOperationImpl(concatenationType0, "Not enough room in buffer, need another ", byteArray0, multiReplicaGetOperationCallback0);
      ConcatenationType concatenationType1 = concatenationOperationImpl0.getStoreType();
      assertEquals(ConcatenationType.prepend, concatenationType1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ConcatenationType concatenationType0 = ConcatenationType.prepend;
      ConcatenationOperationImpl concatenationOperationImpl0 = new ConcatenationOperationImpl(concatenationType0, (String) null, byteArray0, (OperationCallback) null);
      long long0 = concatenationOperationImpl0.getCasValue();
      assertEquals(0L, long0);
  }
}
