/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 15:03:24 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.ReplicaGetsOperation;
import net.spy.memcached.protocol.binary.ReplicaGetsOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReplicaGetsOperationImpl_ESTest extends ReplicaGetsOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("Metric collection disabled.", 0, replicaGetsOperation_Callback0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)116;
      replicaGetsOperationImpl0.finishedPayload(byteArray0);
      assertEquals(0, replicaGetsOperationImpl0.getReplicaIndex());
      assertArrayEquals(new byte[] {(byte)116, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("Metric collection disabled.", 0, replicaGetsOperation_Callback0);
      byte[] byteArray0 = new byte[6];
      replicaGetsOperationImpl0.keyLen = 1;
      replicaGetsOperationImpl0.finishedPayload(byteArray0);
      assertEquals(0, replicaGetsOperationImpl0.getReplicaIndex());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("Metric collection disabled.", 0, replicaGetsOperation_Callback0);
      byte[] byteArray0 = new byte[6];
      replicaGetsOperationImpl0.decodePayload(byteArray0);
      assertEquals(0, replicaGetsOperationImpl0.getReplicaIndex());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("&!h6:ZQ", 0, replicaGetsOperation_Callback0);
      int int0 = replicaGetsOperationImpl0.getReplicaIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("net.spy.memcached.ops.MultiOperationCallback", (-1263), replicaGetsOperation_Callback0);
      int int0 = replicaGetsOperationImpl0.getReplicaIndex();
      assertEquals((-1263), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl((String) null, 255, replicaGetsOperation_Callback0);
      // Undeclared exception!
      try { 
        replicaGetsOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.KeyUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl(")(x9Ett}yNs3}", 821, (ReplicaGetsOperation.Callback) null);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        replicaGetsOperationImpl0.decodePayload(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.ReplicaGetsOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("Q/n1u7", 28, replicaGetsOperation_Callback0);
      int int0 = replicaGetsOperationImpl0.getReplicaIndex();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("Q/n1u7", 28, replicaGetsOperation_Callback0);
      replicaGetsOperationImpl0.initialize();
      assertEquals(28, replicaGetsOperationImpl0.getReplicaIndex());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ReplicaGetsOperationImpl replicaGetsOperationImpl0 = new ReplicaGetsOperationImpl("", (-1980), (ReplicaGetsOperation.Callback) null);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        replicaGetsOperationImpl0.decodePayload(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("net.spy.memcached.protocol.binary.OperationImpl", e);
      }
  }
}
