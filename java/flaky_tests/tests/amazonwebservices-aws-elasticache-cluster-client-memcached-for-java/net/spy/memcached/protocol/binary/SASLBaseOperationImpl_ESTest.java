/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:10:54 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.security.InvalidParameterException;
import java.util.HashMap;
import java.util.Map;
import javax.security.auth.callback.CallbackHandler;
import net.spy.memcached.auth.PlainCallbackHandler;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.binary.SASLAuthOperationImpl;
import net.spy.memcached.protocol.binary.SASLStepOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SASLBaseOperationImpl_ESTest extends SASLBaseOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[16];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl(stringArray0, (byte[]) null, "jbzrVs0DT\b+!g+u", hashMap0, (CallbackHandler) null, (OperationCallback) null);
      sASLStepOperationImpl0.errorCode = (-1758);
      // Undeclared exception!
      try { 
        sASLStepOperationImpl0.finishedPayload((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.OperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[9];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl(stringArray0, (byte[]) null, "net.spy.memcached.ops.ConcatenationType", hashMap0, (CallbackHandler) null, (OperationCallback) null);
      byte[] byteArray0 = new byte[7];
      sASLStepOperationImpl0.errorCode = (int) (byte)33;
      // Undeclared exception!
      try { 
        sASLStepOperationImpl0.finishedPayload(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.SASLBaseOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "3T0U\"u";
      stringArray0[1] = "Auth response:  %s";
      stringArray0[2] = "S^A6@wI4z$^?E8--";
      stringArray0[3] = ")e";
      stringArray0[4] = "memcached";
      stringArray0[5] = "";
      byte[] byteArray0 = new byte[5];
      PlainCallbackHandler plainCallbackHandler0 = new PlainCallbackHandler("Auth response:  %s", "");
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 0);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, (byte)116);
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl(stringArray0, byteArray0, "_`", (Map<String, ?>) null, plainCallbackHandler0, multiGetOperationCallback0);
      // Undeclared exception!
      try { 
        sASLStepOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.SASLStepOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[6];
      PlainCallbackHandler plainCallbackHandler0 = new PlainCallbackHandler("2MqqDlI}[&W`", "[CM./&/v");
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback((OperationCallback) null, (byte)33);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      byte[] byteArray0 = new byte[0];
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl(stringArray0, byteArray0, "[CM./&/v", hashMap0, plainCallbackHandler0, multiGetsOperationCallback0);
      sASLStepOperationImpl0.finishedPayload(byteArray0);
      assertEquals(0, sASLStepOperationImpl0.getCloneCount());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      PlainCallbackHandler plainCallbackHandler0 = new PlainCallbackHandler("", "");
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (byte)32);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 0);
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl((String[]) null, byteArray0, "", hashMap0, plainCallbackHandler0, multiGetOperationCallback0);
      String string0 = sASLStepOperationImpl0.toString();
      assertEquals("SASL steps operation", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ":?wBGfIQvv#M(+3";
      SASLAuthOperationImpl sASLAuthOperationImpl0 = new SASLAuthOperationImpl(stringArray0, ":?wBGfIQvv#M(+3", hashMap0, (CallbackHandler) null, (OperationCallback) null);
      // Undeclared exception!
      try { 
        sASLAuthOperationImpl0.initialize();
        fail("Expecting exception: InvalidParameterException");
      
      } catch(InvalidParameterException e) {
         //
         // Invalid filter
         //
         verifyException("java.security.Security", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[9];
      byte[] byteArray0 = new byte[2];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PlainCallbackHandler plainCallbackHandler0 = new PlainCallbackHandler("{<X", "");
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback((OperationCallback) null, (byte)40);
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl(stringArray0, byteArray0, "v)7", hashMap0, plainCallbackHandler0, multiGetsOperationCallback0);
      sASLStepOperationImpl0.errorCode = 65;
      try { 
        sASLStepOperationImpl0.finishedPayload(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // \u0000\u0000
         //
         verifyException("net.spy.memcached.protocol.BaseOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[5];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl(stringArray0, (byte[]) null, "1lm", hashMap0, (CallbackHandler) null, (OperationCallback) null);
      // Undeclared exception!
      try { 
        sASLStepOperationImpl0.decodePayload((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[16];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      SASLStepOperationImpl sASLStepOperationImpl0 = new SASLStepOperationImpl(stringArray0, (byte[]) null, "net.spy.memcached.ops.ConcatenationType", hashMap0, (CallbackHandler) null, (OperationCallback) null);
      byte[] byteArray0 = new byte[4];
      sASLStepOperationImpl0.errorCode = (int) (byte)53;
      // Undeclared exception!
      try { 
        sASLStepOperationImpl0.finishedPayload(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.BaseOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      String[] stringArray0 = new String[16];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      SASLAuthOperationImpl sASLAuthOperationImpl0 = new SASLAuthOperationImpl(stringArray0, "FJz", hashMap0, (CallbackHandler) null, (OperationCallback) null);
      byte[] byteArray0 = new byte[0];
      sASLAuthOperationImpl0.decodePayload(byteArray0);
      assertEquals(0L, sASLAuthOperationImpl0.getWriteCompleteTimestamp());
  }
}
