/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:09:00 GMT 2022
 */

package net.spy.memcached.protocol.ascii;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.ops.OperationState;
import net.spy.memcached.protocol.ascii.RefreshCertOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RefreshCertOperationImpl_ESTest extends RefreshCertOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 11211);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-2661));
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 11211);
      RefreshCertOperationImpl refreshCertOperationImpl0 = new RefreshCertOperationImpl(multiGetOperationCallback0);
      refreshCertOperationImpl0.writeComplete();
      refreshCertOperationImpl0.handleLine("'' when in ");
      assertEquals(OperationState.COMPLETE, refreshCertOperationImpl0.getState());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RefreshCertOperationImpl refreshCertOperationImpl0 = new RefreshCertOperationImpl((OperationCallback) null);
      refreshCertOperationImpl0.writeComplete();
      // Undeclared exception!
      try { 
        refreshCertOperationImpl0.handleLine("OK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.RefreshCertOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RefreshCertOperationImpl refreshCertOperationImpl0 = new RefreshCertOperationImpl((OperationCallback) null);
      // Undeclared exception!
      try { 
        refreshCertOperationImpl0.handleLine("Connection Status {");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Read ``Connection Status {'' when in WRITE_QUEUED state
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, (-1));
      RefreshCertOperationImpl refreshCertOperationImpl0 = new RefreshCertOperationImpl(multiGetOperationCallback0);
      String string0 = refreshCertOperationImpl0.toString();
      assertEquals("Cmd: refresh_certs\r\n", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RefreshCertOperationImpl refreshCertOperationImpl0 = new RefreshCertOperationImpl((OperationCallback) null);
      refreshCertOperationImpl0.initialize();
      assertEquals(0L, refreshCertOperationImpl0.getWriteCompleteTimestamp());
  }
}
