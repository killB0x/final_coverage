/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:54:57 GMT 2022
 */

package net.spy.memcached.protocol.ascii;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.ConfigurationType;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.ascii.DeleteConfigOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeleteConfigOperationImpl_ESTest extends DeleteConfigOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      DeleteConfigOperationImpl deleteConfigOperationImpl0 = new DeleteConfigOperationImpl(configurationType0, (OperationCallback) null);
      // Undeclared exception!
      try { 
        deleteConfigOperationImpl0.handleLine("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.DeleteConfigOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 0);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, (-727));
      DeleteConfigOperationImpl deleteConfigOperationImpl0 = new DeleteConfigOperationImpl(configurationType0, multiGetsOperationCallback0);
      ConfigurationType configurationType1 = deleteConfigOperationImpl0.getType();
      assertSame(configurationType0, configurationType1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      DeleteConfigOperationImpl deleteConfigOperationImpl0 = new DeleteConfigOperationImpl(configurationType0, (OperationCallback) null);
      deleteConfigOperationImpl0.initialize();
      assertEquals(0L, deleteConfigOperationImpl0.getWriteCompleteTimestamp());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 0);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, (-727));
      DeleteConfigOperationImpl deleteConfigOperationImpl0 = new DeleteConfigOperationImpl(configurationType0, multiGetsOperationCallback0);
      deleteConfigOperationImpl0.handleLine("}gA BDvOO(Hpab+\"C*S");
      assertEquals(0L, deleteConfigOperationImpl0.getWriteCompleteTimestamp());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      DeleteConfigOperationImpl deleteConfigOperationImpl0 = new DeleteConfigOperationImpl(configurationType0, (OperationCallback) null);
      String string0 = deleteConfigOperationImpl0.toString();
      assertEquals("Cmd: delete config type: CLUSTER", string0);
  }
}
