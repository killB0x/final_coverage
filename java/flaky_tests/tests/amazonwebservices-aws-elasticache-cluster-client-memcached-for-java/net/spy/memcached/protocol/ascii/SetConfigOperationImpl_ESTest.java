/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:00:47 GMT 2022
 */

package net.spy.memcached.protocol.ascii;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.ConfigurationType;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.ascii.SetConfigOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SetConfigOperationImpl_ESTest extends SetConfigOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[0];
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 1827);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 1827);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 0);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-1006), byteArray0, multiGetsOperationCallback0);
      setConfigOperationImpl0.wasCancelled();
      assertEquals((-1006), setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl((ConfigurationType) null, 159, byteArray0, (OperationCallback) null);
      setConfigOperationImpl0.getType();
      assertEquals(159, setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[4];
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, (byte)15);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (byte)15);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 0, byteArray0, multiGetsOperationCallback0);
      int int0 = setConfigOperationImpl0.getFlags();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[6];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 1);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, 0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 530);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 4, byteArray0, multiReplicaGetOperationCallback0);
      int int0 = setConfigOperationImpl0.getFlags();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 14, (byte[]) null, (OperationCallback) null);
      byte[] byteArray0 = setConfigOperationImpl0.getData();
      assertEquals(14, setConfigOperationImpl0.getFlags());
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (byte)0, byteArray0, (OperationCallback) null);
      byte[] byteArray1 = setConfigOperationImpl0.getData();
      assertEquals(0, setConfigOperationImpl0.getFlags());
      assertEquals(6, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 65280, byteArray0, (OperationCallback) null);
      // Undeclared exception!
      try { 
        setConfigOperationImpl0.wasCancelled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.SetConfigOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 0, (byte[]) null, (OperationCallback) null);
      // Undeclared exception!
      try { 
        setConfigOperationImpl0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.SetConfigOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-3445), (byte[]) null, (OperationCallback) null);
      // Undeclared exception!
      try { 
        setConfigOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.SetConfigOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[5];
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 2516, byteArray0, (OperationCallback) null);
      setConfigOperationImpl0.writeComplete();
      // Undeclared exception!
      try { 
        setConfigOperationImpl0.handleLine("]<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.SetConfigOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[6];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (-1329));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 6);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, (-3445));
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-3445), byteArray0, multiGetOperationCallback0);
      setConfigOperationImpl0.initialize();
      assertEquals((-3445), setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[6];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (-1329));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 6);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, (-3445));
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-3445), byteArray0, multiGetOperationCallback0);
      setConfigOperationImpl0.writeComplete();
      setConfigOperationImpl0.handleLine("4Yp*:cp#BZx,z=o[");
      assertEquals((-3445), setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[6];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (-1329));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 6);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, (-3445));
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-3445), byteArray0, multiGetOperationCallback0);
      // Undeclared exception!
      try { 
        setConfigOperationImpl0.handleLine("4Yp*:cp#BZx,z=o[");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Read ``4Yp*:cp#BZx,z=o['' when in WRITE_QUEUED state
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[0];
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 1827);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 1827);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 0);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-1006), byteArray0, multiGetsOperationCallback0);
      byte[] byteArray1 = setConfigOperationImpl0.getData();
      assertEquals((-1006), setConfigOperationImpl0.getFlags());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[0];
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 1827);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 1827);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 0);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-1006), byteArray0, multiGetsOperationCallback0);
      String string0 = setConfigOperationImpl0.toString();
      assertEquals("Cmd: config set Type: cluster Flags: -1006 Data Length: 0", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[0];
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 1827);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 1827);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 0);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-1006), byteArray0, multiGetsOperationCallback0);
      setConfigOperationImpl0.getType();
      assertEquals((-1006), setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[6];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (-1329));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 6);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, (-3445));
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-3445), byteArray0, multiGetOperationCallback0);
      int int0 = setConfigOperationImpl0.getFlags();
      assertEquals((-3445), int0);
  }
}
