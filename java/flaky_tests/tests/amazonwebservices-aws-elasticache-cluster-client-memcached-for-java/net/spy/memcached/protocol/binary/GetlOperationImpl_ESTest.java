/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:36:58 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.GetlOperation;
import net.spy.memcached.protocol.binary.GetlOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GetlOperationImpl_ESTest extends GetlOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("7Y!jG~(*zg[JM>!s0N", 1, getlOperation_Callback0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)48;
      getlOperationImpl0.decodePayload(byteArray0);
      assertEquals(1, getlOperationImpl0.getExpiration());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("net.spy.metrics.enable", 0, getlOperation_Callback0);
      byte[] byteArray0 = new byte[9];
      getlOperationImpl0.decodePayload(byteArray0);
      assertEquals(0, getlOperationImpl0.getExpiration());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("", 0, getlOperation_Callback0);
      int int0 = getlOperationImpl0.getExpiration();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("", 1195, getlOperation_Callback0);
      int int0 = getlOperationImpl0.getExpiration();
      assertEquals(1195, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl((String) null, 1, (GetlOperation.Callback) null);
      // Undeclared exception!
      try { 
        getlOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.KeyUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("", 1195, getlOperation_Callback0);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        getlOperationImpl0.decodePayload(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("net.spy.memcached.protocol.binary.OperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("", (-266), getlOperation_Callback0);
      int int0 = getlOperationImpl0.getExpiration();
      assertEquals((-266), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("", (-266), getlOperation_Callback0);
      // Undeclared exception!
      try { 
        getlOperationImpl0.decodePayload((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.OperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      GetlOperation.Callback getlOperation_Callback0 = mock(GetlOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("", (-266), getlOperation_Callback0);
      String string0 = getlOperationImpl0.toString();
      assertEquals("Cmd: -108 Opaque: 52 Key:  Exp: -266", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      GetlOperationImpl getlOperationImpl0 = new GetlOperationImpl("6Hc3zL P\"Htc>G", (-8), (GetlOperation.Callback) null);
      getlOperationImpl0.initialize();
      assertEquals((-8), getlOperationImpl0.getExpiration());
  }
}
