/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 15:00:09 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.binary.VersionOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VersionOperationImpl_ESTest extends VersionOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback((OperationCallback) null, 0);
      VersionOperationImpl versionOperationImpl0 = new VersionOperationImpl(multiReplicaGetOperationCallback0);
      byte[] byteArray0 = new byte[3];
      versionOperationImpl0.decodePayload(byteArray0);
      assertFalse(versionOperationImpl0.isCancelled());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback((OperationCallback) null, 0);
      VersionOperationImpl versionOperationImpl0 = new VersionOperationImpl(multiReplicaGetOperationCallback0);
      versionOperationImpl0.initialize();
      assertEquals(0, versionOperationImpl0.getCloneCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback((OperationCallback) null, (-472));
      VersionOperationImpl versionOperationImpl0 = new VersionOperationImpl(multiReplicaGetOperationCallback0);
      // Undeclared exception!
      try { 
        versionOperationImpl0.decodePayload((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
