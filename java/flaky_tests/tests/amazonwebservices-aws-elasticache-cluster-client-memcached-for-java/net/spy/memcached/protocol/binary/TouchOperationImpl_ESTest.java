/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:52:10 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.binary.TouchOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TouchOperationImpl_ESTest extends TouchOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, (-3207));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-3207));
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl("A8/", 916, multiGetsOperationCallback0);
      byte[] byteArray0 = new byte[8];
      touchOperationImpl0.decodePayload(byteArray0);
      assertEquals(916, touchOperationImpl0.getExpiration());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback((OperationCallback) null, 0);
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl("kXZ=R6\"vc:pMIQINN", 0, multiGetsOperationCallback0);
      int int0 = touchOperationImpl0.getExpiration();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl("", (-179), (OperationCallback) null);
      int int0 = touchOperationImpl0.getExpiration();
      assertEquals((-179), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl((String) null, 4943, (OperationCallback) null);
      // Undeclared exception!
      try { 
        touchOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.KeyUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, (-3207));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-3207));
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl("A8/", 916, multiGetsOperationCallback0);
      int int0 = touchOperationImpl0.getExpiration();
      assertEquals(916, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, (-3207));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-3207));
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl("A8/", 916, multiGetsOperationCallback0);
      touchOperationImpl0.initialize();
      assertEquals(916, touchOperationImpl0.getExpiration());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, (-3207));
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-3207));
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl("A8/", 916, multiGetsOperationCallback0);
      String string0 = touchOperationImpl0.toString();
      assertEquals("Cmd: 28 Opaque: 26 Key: A8/ Exp: 916", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TouchOperationImpl touchOperationImpl0 = new TouchOperationImpl("", 11211, (OperationCallback) null);
      // Undeclared exception!
      try { 
        touchOperationImpl0.decodePayload((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.TouchOperationImpl", e);
      }
  }
}
