/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:21:57 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.ops.OperationState;
import net.spy.memcached.protocol.binary.TapCustomOperationImpl;
import net.spy.memcached.tapmessage.RequestMessage;
import net.spy.memcached.tapmessage.TapMagic;
import net.spy.memcached.tapmessage.TapOpcode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TapCustomOperationImpl_ESTest extends TapCustomOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RequestMessage requestMessage0 = new RequestMessage();
      TapMagic tapMagic0 = TapMagic.PROTOCOL_BINARY_REQ;
      requestMessage0.setMagic(tapMagic0);
      TapCustomOperationImpl tapCustomOperationImpl0 = new TapCustomOperationImpl("oQyC2P{n8", requestMessage0, (OperationCallback) null);
      TapOpcode tapOpcode0 = TapOpcode.OPAQUE;
      requestMessage0.setOpcode(tapOpcode0);
      tapCustomOperationImpl0.initialize();
      assertEquals(13, requestMessage0.getTotalbody());
      assertEquals(37, requestMessage0.getMessageLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RequestMessage requestMessage0 = new RequestMessage();
      TapCustomOperationImpl tapCustomOperationImpl0 = new TapCustomOperationImpl("net.spy.memcached.ops.OperationErrorType", requestMessage0, (OperationCallback) null);
      OperationState operationState0 = OperationState.COMPLETE;
      // Undeclared exception!
      try { 
        tapCustomOperationImpl0.streamClosed(operationState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.BaseOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RequestMessage requestMessage0 = new RequestMessage();
      requestMessage0.setTotalbody((-394));
      TapCustomOperationImpl tapCustomOperationImpl0 = new TapCustomOperationImpl("Cmd: tap custom", requestMessage0, (OperationCallback) null);
      // Undeclared exception!
      try { 
        tapCustomOperationImpl0.initialize();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-387 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RequestMessage requestMessage0 = new RequestMessage();
      TapCustomOperationImpl tapCustomOperationImpl0 = new TapCustomOperationImpl("oQyC2P{n8", requestMessage0, (OperationCallback) null);
      // Undeclared exception!
      try { 
        tapCustomOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.tapmessage.RequestMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RequestMessage requestMessage0 = new RequestMessage();
      TapCustomOperationImpl tapCustomOperationImpl0 = new TapCustomOperationImpl((String) null, requestMessage0, (OperationCallback) null);
      // Undeclared exception!
      try { 
        tapCustomOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.tapmessage.RequestMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RequestMessage requestMessage0 = new RequestMessage();
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 24);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 24);
      TapCustomOperationImpl tapCustomOperationImpl0 = new TapCustomOperationImpl("", requestMessage0, multiGetsOperationCallback0);
      OperationState operationState0 = OperationState.COMPLETE;
      tapCustomOperationImpl0.streamClosed(operationState0);
      assertEquals(0, tapCustomOperationImpl0.getCloneCount());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RequestMessage requestMessage0 = new RequestMessage();
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 24);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 24);
      TapCustomOperationImpl tapCustomOperationImpl0 = new TapCustomOperationImpl("", requestMessage0, multiGetsOperationCallback0);
      String string0 = tapCustomOperationImpl0.toString();
      assertEquals("Cmd: tap custom", string0);
  }
}
