/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 15:01:32 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.ops.OperationState;
import net.spy.memcached.protocol.binary.TapAckOperationImpl;
import net.spy.memcached.tapmessage.TapOpcode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TapAckOperationImpl_ESTest extends TapAckOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TapOpcode tapOpcode0 = TapOpcode.SASLLIST;
      TapAckOperationImpl tapAckOperationImpl0 = new TapAckOperationImpl(tapOpcode0, (-2287), (OperationCallback) null);
      OperationState operationState0 = OperationState.COMPLETE;
      // Undeclared exception!
      try { 
        tapAckOperationImpl0.streamClosed(operationState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.BaseOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TapOpcode tapOpcode0 = TapOpcode.OPAQUE;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 2048);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 2048);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, 2048);
      TapAckOperationImpl tapAckOperationImpl0 = new TapAckOperationImpl(tapOpcode0, 2048, multiGetOperationCallback0);
      ByteBuffer byteBuffer0 = tapAckOperationImpl0.getBuffer();
      tapAckOperationImpl0.readFromBuffer(byteBuffer0);
      assertFalse(tapAckOperationImpl0.isTimedOutUnsent());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TapOpcode tapOpcode0 = TapOpcode.OPAQUE;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 2048);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 2048);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, 2048);
      TapAckOperationImpl tapAckOperationImpl0 = new TapAckOperationImpl(tapOpcode0, 2048, multiGetOperationCallback0);
      tapAckOperationImpl0.initialize();
      assertFalse(tapAckOperationImpl0.hasErrored());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TapOpcode tapOpcode0 = TapOpcode.OPAQUE;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 2048);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 2048);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, 2048);
      TapAckOperationImpl tapAckOperationImpl0 = new TapAckOperationImpl(tapOpcode0, 2048, multiGetOperationCallback0);
      String string0 = tapAckOperationImpl0.toString();
      assertEquals("Cmd: tap ack Opcode: OPAQUE Opaque: 2048", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TapOpcode tapOpcode0 = TapOpcode.VBUCKETSET;
      TapAckOperationImpl tapAckOperationImpl0 = new TapAckOperationImpl(tapOpcode0, 0, (OperationCallback) null);
      OperationState operationState0 = OperationState.WRITING;
      tapAckOperationImpl0.streamClosed(operationState0);
      assertEquals(0L, tapAckOperationImpl0.getWriteCompleteTimestamp());
  }
}
