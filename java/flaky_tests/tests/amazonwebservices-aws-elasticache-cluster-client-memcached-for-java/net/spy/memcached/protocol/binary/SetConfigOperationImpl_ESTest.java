/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:55:58 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.ConfigurationType;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.binary.SetConfigOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SetConfigOperationImpl_ESTest extends SetConfigOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[3];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (byte)0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, (byte)100);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, (byte)11);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 1671, byteArray0, multiGetOperationCallback0);
      setConfigOperationImpl0.initialize();
      assertEquals(1671, setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[3];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (byte)0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, (byte)100);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, (byte)11);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 1671, byteArray0, multiGetOperationCallback0);
      String string0 = setConfigOperationImpl0.toString();
      assertEquals("Cmd: 100 Opaque: 339 Type: CLUSTER Flags: 1671 Data Length: 3", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[9];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 132);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, (byte)31);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, (byte)117);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 0, byteArray0, multiReplicaGetOperationCallback0);
      int int0 = setConfigOperationImpl0.getFlags();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[3];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, (byte)0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, (byte)100);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, (byte)11);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 1671, byteArray0, multiGetOperationCallback0);
      int int0 = setConfigOperationImpl0.getFlags();
      assertEquals(1671, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 471);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 471);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 1964);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 0, (byte[]) null, multiGetOperationCallback0);
      byte[] byteArray0 = setConfigOperationImpl0.getData();
      assertEquals(0, setConfigOperationImpl0.getFlags());
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[4];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 2449);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, (byte)0);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (byte) (-52), byteArray0, multiReplicaGetOperationCallback0);
      byte[] byteArray1 = setConfigOperationImpl0.getData();
      assertEquals((-52), setConfigOperationImpl0.getFlags());
      assertEquals(4, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[0];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, (byte)0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, (byte)0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 0);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-604), byteArray0, multiReplicaGetOperationCallback0);
      byte[] byteArray1 = setConfigOperationImpl0.getData();
      assertSame(byteArray1, byteArray0);
      assertEquals((-604), setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      byte[] byteArray0 = new byte[0];
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, (byte)0);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, (byte)0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 0);
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, (-604), byteArray0, multiReplicaGetOperationCallback0);
      int int0 = setConfigOperationImpl0.getFlags();
      assertEquals((-604), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 0, (byte[]) null, (OperationCallback) null);
      setConfigOperationImpl0.getType();
      assertEquals(0, setConfigOperationImpl0.getFlags());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 1410, (byte[]) null, (OperationCallback) null);
      // Undeclared exception!
      try { 
        setConfigOperationImpl0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.SetConfigOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfigurationType configurationType0 = ConfigurationType.CLUSTER;
      SetConfigOperationImpl setConfigOperationImpl0 = new SetConfigOperationImpl(configurationType0, 0, (byte[]) null, (OperationCallback) null);
      // Undeclared exception!
      try { 
        setConfigOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.OperationImpl", e);
      }
  }
}
