/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:20:18 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.ops.OperationState;
import net.spy.memcached.protocol.binary.TapDumpOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TapDumpOperationImpl_ESTest extends TapDumpOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TapDumpOperationImpl tapDumpOperationImpl0 = new TapDumpOperationImpl("", (OperationCallback) null);
      OperationState operationState0 = OperationState.COMPLETE;
      // Undeclared exception!
      try { 
        tapDumpOperationImpl0.streamClosed(operationState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.BaseOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 1536);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, 0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, 0);
      TapDumpOperationImpl tapDumpOperationImpl0 = new TapDumpOperationImpl("", multiReplicaGetOperationCallback0);
      tapDumpOperationImpl0.initialize();
      assertEquals(OperationState.WRITE_QUEUED, tapDumpOperationImpl0.getState());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 1536);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, 0);
      TapDumpOperationImpl tapDumpOperationImpl0 = new TapDumpOperationImpl((String) null, multiGetsOperationCallback0);
      tapDumpOperationImpl0.initialize();
      assertEquals(0, tapDumpOperationImpl0.getCloneCount());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(operationCallback0, 1536);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiGetOperationCallback0, 0);
      TapDumpOperationImpl tapDumpOperationImpl0 = new TapDumpOperationImpl((String) null, multiGetsOperationCallback0);
      OperationState operationState0 = OperationState.WRITE_QUEUED;
      tapDumpOperationImpl0.streamClosed(operationState0);
      assertFalse(tapDumpOperationImpl0.hasErrored());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TapDumpOperationImpl tapDumpOperationImpl0 = new TapDumpOperationImpl("_w)b@$`JGfkr`_azh", (OperationCallback) null);
      String string0 = tapDumpOperationImpl0.toString();
      assertEquals("Cmd: tap dump Flags: dump,ack", string0);
  }
}
