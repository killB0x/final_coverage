/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:28:29 GMT 2022
 */

package net.spy.memcached.protocol.ascii;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.Mutator;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.protocol.ascii.MutatorOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MutatorOperationImpl_ESTest extends MutatorOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "#.1Y-6)Z?^XO'v}UBY!", 0L, (OperationCallback) null);
      mutatorOperationImpl0.initialize();
      assertEquals(0L, mutatorOperationImpl0.getWriteCompleteTimestamp());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "#.1Y-6)Z?^XO'v}UBY!", 0L, (OperationCallback) null);
      long long0 = mutatorOperationImpl0.getBy();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 914);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-1932735280));
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "9.oR8GS,u( Blgpi+)", (-1932735280), multiGetsOperationCallback0);
      long long0 = mutatorOperationImpl0.getBy();
      assertEquals((-1932735280L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mutator mutator0 = Mutator.decr;
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "", 16777611L, (OperationCallback) null);
      // Undeclared exception!
      try { 
        mutatorOperationImpl0.wasCancelled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.MutatorOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mutator mutator0 = Mutator.decr;
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "('N]{S", (-486L), (OperationCallback) null);
      // Undeclared exception!
      try { 
        mutatorOperationImpl0.handleLine("('N]{S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.ascii.MutatorOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 914);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-1932735280));
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 32);
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "9.oR8GS,u( Blgpi+)", 914, multiGetOperationCallback0);
      mutatorOperationImpl0.handleLine("NOT_FOUND");
      assertEquals(914L, mutatorOperationImpl0.getBy());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 914);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-1932735280));
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 32);
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "9.oR8GS,u( Blgpi+)", 914, multiGetOperationCallback0);
      long long0 = mutatorOperationImpl0.getBy();
      assertEquals(914L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "", 0L, (OperationCallback) null);
      Mutator mutator1 = mutatorOperationImpl0.getType();
      assertSame(mutator0, mutator1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mutator mutator0 = Mutator.decr;
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 438);
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, (String) null, (-1L), multiGetOperationCallback0);
      mutatorOperationImpl0.wasCancelled();
      assertEquals((-1L), mutatorOperationImpl0.getBy());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mutator mutator0 = Mutator.decr;
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "~w[f!omC{", 16777619L, (OperationCallback) null);
      String string0 = mutatorOperationImpl0.toString();
      assertEquals("Cmd: decr Key: ~w[f!omC{ Amount: 16777619", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 914);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, (-1932735280));
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 32);
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "9.oR8GS,u( Blgpi+)", 914, multiGetOperationCallback0);
      long long0 = mutatorOperationImpl0.getDefault();
      assertEquals(914L, mutatorOperationImpl0.getBy());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mutator mutator0 = Mutator.decr;
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, (String) null, 1791L, (OperationCallback) null);
      // Undeclared exception!
      try { 
        mutatorOperationImpl0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.KeyUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mutator mutator0 = Mutator.decr;
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 438);
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, (String) null, (-1L), multiGetOperationCallback0);
      mutatorOperationImpl0.getKeys();
      assertEquals((-1L), mutatorOperationImpl0.getBy());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mutator mutator0 = Mutator.decr;
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 438);
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, (String) null, (-1L), multiGetOperationCallback0);
      int int0 = mutatorOperationImpl0.getExpiration();
      assertEquals((-1L), mutatorOperationImpl0.getBy());
      assertEquals((-1), int0);
  }
}
