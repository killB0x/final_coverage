/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 13:58:35 GMT 2022
 */

package net.spy.memcached.protocol.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import net.spy.memcached.MemcachedNode;
import net.spy.memcached.ops.ConcatenationType;
import net.spy.memcached.ops.GetAndTouchOperation;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.Mutator;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.ops.OperationState;
import net.spy.memcached.ops.StatsOperation;
import net.spy.memcached.ops.StoreOperation;
import net.spy.memcached.ops.StoreType;
import net.spy.memcached.protocol.binary.ConcatenationOperationImpl;
import net.spy.memcached.protocol.binary.GetAndTouchOperationImpl;
import net.spy.memcached.protocol.binary.KeyStatsOperationImpl;
import net.spy.memcached.protocol.binary.MutatorOperationImpl;
import net.spy.memcached.protocol.binary.StoreOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SingleKeyOperationImpl_ESTest extends SingleKeyOperationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("E", (StatsOperation.Callback) null);
      String string0 = keyStatsOperationImpl0.toString();
      assertEquals("Cmd: 16 Opaque: 74 Key: E", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("n#oYX]>Om", statsOperation_Callback0);
      keyStatsOperationImpl0.vbucket = (short)877;
      short short0 = keyStatsOperationImpl0.getVBucket("n#oYX]>Om");
      assertEquals((short)877, short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("net.spy.memcached.protocol.binary.SingleKeyOperationImpl", statsOperation_Callback0);
      keyStatsOperationImpl0.vbucket = (short) (-1488);
      short short0 = keyStatsOperationImpl0.getVBucket("net.spy.memcached.protocol.binary.SingleKeyOperationImpl");
      assertEquals((short) (-1488), short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StoreType storeType0 = StoreType.replace;
      StoreOperation.Callback storeOperation_Callback0 = mock(StoreOperation.Callback.class, new ViolatedAssumptionAnswer());
      StoreOperationImpl storeOperationImpl0 = new StoreOperationImpl(storeType0, ")nmyX2,!8?R9Z0/O{", 700, 700, (byte[]) null, 0L, storeOperation_Callback0);
      // Undeclared exception!
      try { 
        storeOperationImpl0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.protocol.binary.StoreOperationImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl((String) null, (StatsOperation.Callback) null);
      // Undeclared exception!
      try { 
        keyStatsOperationImpl0.setVBucket((String) null, (short)4096);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl((String) null, (StatsOperation.Callback) null);
      // Undeclared exception!
      try { 
        keyStatsOperationImpl0.getVBucket((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("E", (StatsOperation.Callback) null);
      short short0 = keyStatsOperationImpl0.getVBucket("E");
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetAndTouchOperation.Callback getAndTouchOperation_Callback0 = mock(GetAndTouchOperation.Callback.class, new ViolatedAssumptionAnswer());
      GetAndTouchOperationImpl getAndTouchOperationImpl0 = new GetAndTouchOperationImpl("&M7/cS~YnycRmK", 1100, getAndTouchOperation_Callback0);
      // Undeclared exception!
      try { 
        getAndTouchOperationImpl0.getVBucket("Cmd: 29 Opaque: 36731 Key: &M7/cS~YnycRmK Exp: 1100");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Cmd: 29 Opaque: 36731 Key: &M7/cS~YnycRmK Exp: 1100 doesn't match the key &M7/cS~YnycRmK for this operation
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("E", (StatsOperation.Callback) null);
      keyStatsOperationImpl0.setVBucket("E", (short) (-383));
      assertEquals(OperationState.WRITE_QUEUED, keyStatsOperationImpl0.getState());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("E", (StatsOperation.Callback) null);
      // Undeclared exception!
      try { 
        keyStatsOperationImpl0.setVBucket("net.spy.memcached.protocol.binary.SingleKeyOperationImpl", (short)1467);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // net.spy.memcached.protocol.binary.SingleKeyOperationImpl doesn't match the key E for this operation
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConcatenationType concatenationType0 = ConcatenationType.append;
      ConcatenationOperationImpl concatenationOperationImpl0 = new ConcatenationOperationImpl(concatenationType0, "E", (byte[]) null, 2670L, (OperationCallback) null);
      LinkedList<MemcachedNode> linkedList0 = new LinkedList<MemcachedNode>();
      concatenationOperationImpl0.setNotMyVbucketNodes(linkedList0);
      assertEquals(ConcatenationType.append, concatenationOperationImpl0.getStoreType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mutator mutator0 = Mutator.incr;
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(operationCallback0, 1100);
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(multiReplicaGetOperationCallback0, 0);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 0);
      MutatorOperationImpl mutatorOperationImpl0 = new MutatorOperationImpl(mutator0, "&M7/cS~YnycRmK", 0L, (-117L), 12, multiGetOperationCallback0);
      mutatorOperationImpl0.addNotMyVbucketNode((MemcachedNode) null);
      assertFalse(mutatorOperationImpl0.isTimedOut());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("E", (StatsOperation.Callback) null);
      Collection<MemcachedNode> collection0 = keyStatsOperationImpl0.getNotMyVbucketNodes();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("E", (StatsOperation.Callback) null);
      Collection<String> collection0 = keyStatsOperationImpl0.getKeys();
      assertTrue(collection0.contains("E"));
  }
}
