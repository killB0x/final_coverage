/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 13:49:18 GMT 2022
 */

package net.spy.memcached.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.SocketAddress;
import java.nio.channels.SocketChannel;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import net.spy.memcached.KetamaConnectionFactory;
import net.spy.memcached.MemcachedNode;
import net.spy.memcached.MemcachedNodeROImpl;
import net.spy.memcached.internal.CheckedOperationTimeoutException;
import net.spy.memcached.ops.Operation;
import net.spy.memcached.ops.StatsOperation;
import net.spy.memcached.protocol.binary.KeyStatsOperationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CheckedOperationTimeoutException_ESTest extends CheckedOperationTimeoutException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StatsOperation.Callback statsOperation_Callback0 = mock(StatsOperation.Callback.class, new ViolatedAssumptionAnswer());
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("4~D9Q{", statsOperation_Callback0);
      MemcachedNodeROImpl memcachedNodeROImpl0 = new MemcachedNodeROImpl((MemcachedNode) null);
      keyStatsOperationImpl0.setHandlingNode(memcachedNodeROImpl0);
      CheckedOperationTimeoutException checkedOperationTimeoutException0 = null;
      try {
        checkedOperationTimeoutException0 = new CheckedOperationTimeoutException("4~D9Q{", keyStatsOperationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.MemcachedNodeROImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedHashSet<Operation> linkedHashSet0 = new LinkedHashSet<Operation>();
      CheckedOperationTimeoutException checkedOperationTimeoutException0 = null;
      try {
        checkedOperationTimeoutException0 = new CheckedOperationTimeoutException((String) null, linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("", (StatsOperation.Callback) null);
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory(8, 8, 8);
      SocketChannel socketChannel0 = SocketChannel.open();
      MemcachedNode memcachedNode0 = ketamaConnectionFactory0.createMemcachedNode((SocketAddress) null, socketChannel0, 3715);
      keyStatsOperationImpl0.setHandlingNode(memcachedNode0);
      CheckedOperationTimeoutException checkedOperationTimeoutException0 = new CheckedOperationTimeoutException("", keyStatsOperationImpl0);
      assertEquals("net.spy.memcached.internal.CheckedOperationTimeoutException:  - failing node: null", checkedOperationTimeoutException0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyStatsOperationImpl keyStatsOperationImpl0 = new KeyStatsOperationImpl("<cYR6a$y.yJ", (StatsOperation.Callback) null);
      CheckedOperationTimeoutException checkedOperationTimeoutException0 = new CheckedOperationTimeoutException("<cYR6a$y.yJ", keyStatsOperationImpl0);
      assertEquals("net.spy.memcached.internal.CheckedOperationTimeoutException: <cYR6a$y.yJ - failing node: <unknown>", checkedOperationTimeoutException0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<Operation> linkedList0 = new LinkedList<Operation>();
      linkedList0.add((Operation) null);
      linkedList0.add(1, (Operation) null);
      CheckedOperationTimeoutException checkedOperationTimeoutException0 = new CheckedOperationTimeoutException("[~Z", linkedList0);
      assertEquals("[~Z - failing nodes: <unknown>, <unknown>", checkedOperationTimeoutException0.getMessage());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedHashSet<Operation> linkedHashSet0 = new LinkedHashSet<Operation>();
      CheckedOperationTimeoutException checkedOperationTimeoutException0 = new CheckedOperationTimeoutException("mRgn s)-i+E", linkedHashSet0);
      checkedOperationTimeoutException0.getOperations();
      assertEquals("mRgn s)-i+E - failing nodes: ", checkedOperationTimeoutException0.getMessage());
  }
}
