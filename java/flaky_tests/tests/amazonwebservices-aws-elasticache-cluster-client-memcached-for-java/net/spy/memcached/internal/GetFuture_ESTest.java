/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:15:32 GMT 2022
 */

package net.spy.memcached.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import java.util.Collection;
import java.util.LinkedList;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Delayed;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import net.spy.memcached.BinaryConnectionFactory;
import net.spy.memcached.BroadcastOpFactory;
import net.spy.memcached.ClientMode;
import net.spy.memcached.ConnectionObserver;
import net.spy.memcached.KetamaConnectionFactory;
import net.spy.memcached.MemcachedConnection;
import net.spy.memcached.MemcachedNode;
import net.spy.memcached.internal.BasicThreadFactory;
import net.spy.memcached.internal.GetCompletionListener;
import net.spy.memcached.internal.GetFuture;
import net.spy.memcached.ops.ReplicaGetsOperation;
import net.spy.memcached.protocol.binary.BinaryOperationFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GetFuture_ESTest extends GetFuture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClientMode clientMode0 = ClientMode.Dynamic;
      KetamaConnectionFactory ketamaConnectionFactory0 = new KetamaConnectionFactory(clientMode0, 4022, 1949, 4022);
      LinkedList<InetSocketAddress> linkedList0 = new LinkedList<InetSocketAddress>();
      BinaryConnectionFactory binaryConnectionFactory0 = new BinaryConnectionFactory(ketamaConnectionFactory0.DEFAULT_CLIENT_MODE, 57, 21);
      Collection<ConnectionObserver> collection0 = binaryConnectionFactory0.getInitialObservers();
      BinaryOperationFactory binaryOperationFactory0 = new BinaryOperationFactory();
      MemcachedConnection memcachedConnection0 = new MemcachedConnection(4022, ketamaConnectionFactory0, linkedList0, collection0, binaryConnectionFactory0.DEFAULT_FAILURE_MODE, binaryOperationFactory0);
      BroadcastOpFactory broadcastOpFactory0 = mock(BroadcastOpFactory.class, new ViolatedAssumptionAnswer());
      LinkedBlockingQueue<MemcachedNode> linkedBlockingQueue0 = new LinkedBlockingQueue<MemcachedNode>();
      CountDownLatch countDownLatch0 = memcachedConnection0.broadcastOperation(broadcastOpFactory0, (Collection<MemcachedNode>) linkedBlockingQueue0);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      LinkedBlockingDeque<Runnable> linkedBlockingDeque0 = new LinkedBlockingDeque<Runnable>();
      BasicThreadFactory basicThreadFactory0 = new BasicThreadFactory("", false);
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(2544, 16384, 0L, timeUnit0, linkedBlockingDeque0, basicThreadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      GetFuture<Delayed> getFuture0 = new GetFuture<Delayed>(countDownLatch0, 1381L, "imbt$.s-OiyNLr", threadPoolExecutor0);
      GetCompletionListener getCompletionListener0 = mock(GetCompletionListener.class, new ViolatedAssumptionAnswer());
      GetFuture<Delayed> getFuture1 = getFuture0.removeListener(getCompletionListener0);
      assertSame(getFuture1, getFuture0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_CallerRunsPolicy0);
      GetFuture<Integer> getFuture0 = new GetFuture<Integer>((CountDownLatch) null, 0, "/dKF6w)1M`'g}*0", scheduledThreadPoolExecutor0);
      // Undeclared exception!
      try { 
        getFuture0.removeListener((GetCompletionListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The listener can't be null.
         //
         verifyException("net.spy.memcached.internal.AbstractListenableFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(8);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(980);
      GetFuture<ForkJoinTask<Integer>> getFuture0 = new GetFuture<ForkJoinTask<Integer>>(countDownLatch0, 0L, " rKk|5", scheduledThreadPoolExecutor0);
      // Undeclared exception!
      try { 
        getFuture0.get();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Timed out waiting for operation
         //
         verifyException("net.spy.memcached.internal.OperationFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(11211);
      LinkedList<InetSocketAddress> linkedList0 = new LinkedList<InetSocketAddress>();
      ClientMode clientMode0 = ClientMode.Static;
      BinaryConnectionFactory binaryConnectionFactory0 = new BinaryConnectionFactory(clientMode0);
      MemcachedConnection memcachedConnection0 = binaryConnectionFactory0.createConnection(linkedList0);
      SynchronousQueue<MemcachedNode> synchronousQueue0 = new SynchronousQueue<MemcachedNode>();
      CountDownLatch countDownLatch0 = memcachedConnection0.broadcastOperation((BroadcastOpFactory) null, (Collection<MemcachedNode>) synchronousQueue0);
      GetFuture<ForkJoinTask<Integer>> getFuture0 = new GetFuture<ForkJoinTask<Integer>>(countDownLatch0, (-519L), "/dKF6w)1M`'g}*0", forkJoinPool0);
      // Undeclared exception!
      try { 
        getFuture0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.internal.OperationFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(17);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(11211);
      GetFuture<Integer> getFuture0 = new GetFuture<Integer>(countDownLatch0, 17, "/dKF6w)1M`'g}*0", forkJoinPool0);
      GetCompletionListener getCompletionListener0 = mock(GetCompletionListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        getFuture0.addListener(getCompletionListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.internal.OperationFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(17);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(11211);
      GetFuture<ForkJoinTask<Integer>> getFuture0 = new GetFuture<ForkJoinTask<Integer>>(countDownLatch0, 11211, " not found while initializing net.spy.compat.log.LoggerFactory", forkJoinPool0);
      // Undeclared exception!
      try { 
        getFuture0.isDone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.internal.OperationFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(17);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(11211);
      GetFuture<ForkJoinTask<Integer>> getFuture0 = new GetFuture<ForkJoinTask<Integer>>(countDownLatch0, 11211, " not found while initializing net.spy.compat.log.LoggerFactory", forkJoinPool0);
      // Undeclared exception!
      try { 
        getFuture0.cancel(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.internal.OperationFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(8);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      LinkedBlockingDeque<Runnable> linkedBlockingDeque0 = new LinkedBlockingDeque<Runnable>();
      BasicThreadFactory basicThreadFactory0 = new BasicThreadFactory("Transitioned state from %s to %s", false);
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(980, 980, 0L, timeUnit0, linkedBlockingDeque0, basicThreadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      GetFuture<Delayed> getFuture0 = new GetFuture<Delayed>(countDownLatch0, 980, "net.spy.memcached.internal.GetFuture", threadPoolExecutor0);
      BinaryOperationFactory binaryOperationFactory0 = new BinaryOperationFactory();
      ReplicaGetsOperation.Callback replicaGetsOperation_Callback0 = mock(ReplicaGetsOperation.Callback.class, new ViolatedAssumptionAnswer());
      ReplicaGetsOperation replicaGetsOperation0 = binaryOperationFactory0.replicaGets("", 8, replicaGetsOperation_Callback0);
      getFuture0.setOperation(replicaGetsOperation0);
      assertFalse(replicaGetsOperation0.isTimedOutUnsent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(17);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(11211);
      GetFuture<Delayed> getFuture0 = new GetFuture<Delayed>(countDownLatch0, 1000L, "Expecting ", forkJoinPool0);
      // Undeclared exception!
      try { 
        getFuture0.addListener((GetCompletionListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The listener can't be null.
         //
         verifyException("net.spy.memcached.internal.AbstractListenableFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(17);
      GetFuture<ForkJoinTask<Integer>> getFuture0 = new GetFuture<ForkJoinTask<Integer>>(countDownLatch0, (-1075L), "/dKF6w)1M`'g}*0", (ExecutorService) null);
      // Undeclared exception!
      try { 
        getFuture0.isCancelled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.internal.OperationFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(17);
      BasicThreadFactory basicThreadFactory0 = new BasicThreadFactory("BP{Y\"U_A|}D::/U'", false);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, basicThreadFactory0);
      GetFuture<Integer> getFuture0 = new GetFuture<Integer>(countDownLatch0, 998, "BP{Y\"U_A|}D::/U'", scheduledThreadPoolExecutor0);
      GetCompletionListener getCompletionListener0 = mock(GetCompletionListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        getFuture0.removeListener(getCompletionListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.internal.OperationFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CountDownLatch countDownLatch0 = new CountDownLatch(17);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(11211);
      GetFuture<Integer> getFuture0 = new GetFuture<Integer>(countDownLatch0, 17, "/dKF6w)1M`'g}*0", forkJoinPool0);
      getFuture0.signalComplete();
  }
}
