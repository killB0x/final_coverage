/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 13:45:05 GMT 2022
 */

package net.spy.memcached.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import net.spy.memcached.config.NodeEndPoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NodeEndPoint_ESTest extends NodeEndPoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("7}Ss]", "^t]Tv~V9GM/.Cn", 1);
      int int0 = nodeEndPoint0.getPort();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, (String) null, (-2324));
      int int0 = nodeEndPoint0.getPort();
      assertEquals((-2324), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("", 0);
      nodeEndPoint0.getIpAddress();
      assertEquals(0, nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("", "", 0);
      nodeEndPoint0.getIpAddress();
      assertEquals(0, nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("7}Ss]", "^t]Tv~V9GM/.Cn", 1);
      InetSocketAddress inetSocketAddress0 = nodeEndPoint0.getInetSocketAddress(false);
      assertEquals("^t]Tv~V9GM/.Cn/200.42.42.0:1", inetSocketAddress0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("7}Ss]", "^t]Tv~V9GM/.Cn", 1);
      InetSocketAddress inetSocketAddress0 = nodeEndPoint0.getInetSocketAddress();
      assertEquals(1, nodeEndPoint0.getPort());
      assertEquals("^t]Tv~V9GM/.Cn/200.42.42.0:1", inetSocketAddress0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("7}Ss]", "^t]Tv~V9GM/.Cn", 1);
      nodeEndPoint0.getHostName();
      assertEquals(1, nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("", "", 0);
      nodeEndPoint0.getHostName();
      assertEquals(0, nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("7}Ss]", "^t]Tv~V9GM/.Cn", 1);
      NodeEndPoint.copy(nodeEndPoint0);
      assertEquals(1, nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, (String) null, (-2324));
      NodeEndPoint.copy(nodeEndPoint0);
      assertEquals((-2324), nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("/\"G}wr,M)}=_7", "/\"G}wr,M)}=_7", (-1));
      // Undeclared exception!
      try { 
        nodeEndPoint0.getInetSocketAddress(true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        NodeEndPoint.copy((NodeEndPoint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.config.NodeEndPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, "SB", 0);
      InetSocketAddress inetSocketAddress0 = nodeEndPoint0.getInetSocketAddress(false);
      assertEquals("SB/200.42.42.0:0", inetSocketAddress0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("", 0);
      InetSocketAddress inetSocketAddress0 = nodeEndPoint0.getInetSocketAddress(false);
      assertEquals("/127.0.0.1:0", inetSocketAddress0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("", "", 0);
      InetSocketAddress inetSocketAddress0 = nodeEndPoint0.getInetSocketAddress(false);
      assertEquals(0, inetSocketAddress0.getPort());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, "SB", 0);
      int int0 = nodeEndPoint0.getPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, "SB", 0);
      nodeEndPoint0.getIpAddress();
      assertEquals(0, nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, "SB", 0);
      nodeEndPoint0.getHostName();
      assertEquals(0, nodeEndPoint0.getPort());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint("", "", (-250));
      // Undeclared exception!
      try { 
        nodeEndPoint0.getInetSocketAddress();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-250
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, "SB", 0);
      String string0 = nodeEndPoint0.toString();
      assertEquals("NodeEndPoint - HostName:null IpAddress:SB Port:0", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, "SB", 0);
      InetSocketAddress inetSocketAddress0 = nodeEndPoint0.getInetSocketAddress();
      assertEquals(0, nodeEndPoint0.getPort());
      assertEquals("SB/200.42.42.0:0", inetSocketAddress0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NodeEndPoint nodeEndPoint0 = new NodeEndPoint((String) null, "SB", 0);
      NodeEndPoint nodeEndPoint1 = NodeEndPoint.copy(nodeEndPoint0);
      assertEquals(0, nodeEndPoint1.getPort());
  }
}
