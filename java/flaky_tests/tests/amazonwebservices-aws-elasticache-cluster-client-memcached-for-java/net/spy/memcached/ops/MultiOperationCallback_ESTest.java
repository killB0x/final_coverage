/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:15:45 GMT 2022
 */

package net.spy.memcached.ops;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import net.spy.memcached.ops.MultiGetOperationCallback;
import net.spy.memcached.ops.MultiGetsOperationCallback;
import net.spy.memcached.ops.MultiReplicaGetOperationCallback;
import net.spy.memcached.ops.OperationCallback;
import net.spy.memcached.ops.OperationStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiOperationCallback_ESTest extends MultiOperationCallback_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 131);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetsOperationCallback0, (-1327));
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiReplicaGetOperationCallback0, 1932);
      multiGetOperationCallback0.complete();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback((OperationCallback) null, 0);
      OperationStatus operationStatus0 = new OperationStatus(false, (String) null);
      multiGetOperationCallback0.receivedStatus(operationStatus0);
      assertFalse(operationStatus0.isSuccess());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 0);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 0);
      MultiReplicaGetOperationCallback multiReplicaGetOperationCallback0 = new MultiReplicaGetOperationCallback(multiGetOperationCallback0, 1);
      multiReplicaGetOperationCallback0.complete();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OperationCallback operationCallback0 = mock(OperationCallback.class, new ViolatedAssumptionAnswer());
      MultiGetsOperationCallback multiGetsOperationCallback0 = new MultiGetsOperationCallback(operationCallback0, 0);
      MultiGetOperationCallback multiGetOperationCallback0 = new MultiGetOperationCallback(multiGetsOperationCallback0, 0);
      multiGetOperationCallback0.complete();
  }
}
