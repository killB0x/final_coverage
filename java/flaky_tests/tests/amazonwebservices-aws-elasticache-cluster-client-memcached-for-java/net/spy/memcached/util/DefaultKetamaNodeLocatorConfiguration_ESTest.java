/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:39:17 GMT 2022
 */

package net.spy.memcached.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.KetamaNodeKeyFormatter;
import net.spy.memcached.MemcachedNode;
import net.spy.memcached.util.DefaultKetamaNodeLocatorConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultKetamaNodeLocatorConfiguration_ESTest extends DefaultKetamaNodeLocatorConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KetamaNodeKeyFormatter.Format ketamaNodeKeyFormatter_Format0 = KetamaNodeKeyFormatter.Format.SPYMEMCACHED;
      KetamaNodeKeyFormatter ketamaNodeKeyFormatter0 = new KetamaNodeKeyFormatter(ketamaNodeKeyFormatter_Format0);
      DefaultKetamaNodeLocatorConfiguration defaultKetamaNodeLocatorConfiguration0 = new DefaultKetamaNodeLocatorConfiguration(ketamaNodeKeyFormatter0);
      assertEquals(160, defaultKetamaNodeLocatorConfiguration0.getNodeRepetitions());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultKetamaNodeLocatorConfiguration defaultKetamaNodeLocatorConfiguration0 = new DefaultKetamaNodeLocatorConfiguration();
      // Undeclared exception!
      try { 
        defaultKetamaNodeLocatorConfiguration0.getKeyForNode((MemcachedNode) null, 160);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.spy.memcached.KetamaNodeKeyFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultKetamaNodeLocatorConfiguration defaultKetamaNodeLocatorConfiguration0 = new DefaultKetamaNodeLocatorConfiguration();
      int int0 = defaultKetamaNodeLocatorConfiguration0.getNodeRepetitions();
      assertEquals(160, int0);
  }
}
