/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:14:30 GMT 2022
 */

package net.spy.memcached.tapmessage;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.spy.memcached.tapmessage.TapMagic;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TapMagic_ESTest extends TapMagic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TapMagic[] tapMagicArray0 = TapMagic.values();
      assertEquals(2, tapMagicArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TapMagic tapMagic0 = TapMagic.valueOf("PROTOCOL_BINARY_RES");
      assertEquals(TapMagic.PROTOCOL_BINARY_RES, tapMagic0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        TapMagic.getMagicByByte((byte) (-122));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad magic value
         //
         verifyException("net.spy.memcached.tapmessage.TapMagic", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TapMagic tapMagic0 = TapMagic.getMagicByByte((byte) (-128));
      assertEquals(TapMagic.PROTOCOL_BINARY_REQ, tapMagic0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TapMagic tapMagic0 = TapMagic.getMagicByByte((byte) (-127));
      assertEquals(TapMagic.PROTOCOL_BINARY_RES, tapMagic0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TapMagic tapMagic0 = TapMagic.PROTOCOL_BINARY_RES;
      byte byte0 = tapMagic0.getMagic();
      assertEquals((byte) (-127), byte0);
  }
}
