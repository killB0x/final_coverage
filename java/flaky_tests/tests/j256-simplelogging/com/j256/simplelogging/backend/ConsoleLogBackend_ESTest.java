/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 22:59:51 GMT 2022
 */

package com.j256.simplelogging.backend;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplelogging.Level;
import com.j256.simplelogging.LogBackend;
import com.j256.simplelogging.backend.ConsoleLogBackend;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConsoleLogBackend_ESTest extends ConsoleLogBackend_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConsoleLogBackend consoleLogBackend0 = new ConsoleLogBackend("[5YlI{");
      Level level0 = Level.TRACE;
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.setOriginForDelegate((StackTraceElement) null);
      // Undeclared exception!
      try { 
        consoleLogBackend0.log(level0, "[5YlI{", (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockThrowable", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConsoleLogBackend consoleLogBackend0 = new ConsoleLogBackend("?>?zZ[2i @AH,bl$H#");
      Level level0 = Level.DEBUG;
      consoleLogBackend0.log(level0, "?>?zZ[2i @AH,bl$H#");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConsoleLogBackend consoleLogBackend0 = new ConsoleLogBackend((String) null);
      Level level0 = Level.WARNING;
      consoleLogBackend0.log(level0, "");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConsoleLogBackend.ConsoleLogBackendFactory consoleLogBackend_ConsoleLogBackendFactory0 = new ConsoleLogBackend.ConsoleLogBackendFactory();
      LogBackend logBackend0 = consoleLogBackend_ConsoleLogBackendFactory0.createLogBackend("");
      assertNotNull(logBackend0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConsoleLogBackend consoleLogBackend0 = new ConsoleLogBackend((String) null);
      Level level0 = Level.WARNING;
      boolean boolean0 = consoleLogBackend0.isLevelEnabled(level0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConsoleLogBackend consoleLogBackend0 = new ConsoleLogBackend("com.j256.simplelogging.backend.ConsoleLogBackend$ConsoleLog9ackendFactory");
      Level level0 = Level.OFF;
      MockThrowable mockThrowable0 = new MockThrowable();
      consoleLogBackend0.log(level0, "com.j256.simplelogging.backend.ConsoleLogBackend$ConsoleLog9ackendFactory", (Throwable) mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable", mockThrowable0.toString());
  }
}
