/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 22:57:21 GMT 2022
 */

package com.j256.simplelogging.backend;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplelogging.Level;
import com.j256.simplelogging.LogBackend;
import com.j256.simplelogging.backend.JavaUtilLogBackend;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaUtilLogBackend_ESTest extends JavaUtilLogBackend_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("");
      MockThrowable mockThrowable0 = new MockThrowable();
      Level level0 = Level.DEBUG;
      javaUtilLogBackend0.log(level0, "", (Throwable) mockThrowable0);
      assertNull(mockThrowable0.getMessage());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("OFF");
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        javaUtilLogBackend0.log((Level) null, "", (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplelogging.backend.JavaUtilLogBackend", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("2]|BG#h`f#Fr[5F^");
      // Undeclared exception!
      try { 
        javaUtilLogBackend0.log((Level) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplelogging.backend.JavaUtilLogBackend", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaUtilLogBackend.JavaUtilLogBackendFactory javaUtilLogBackend_JavaUtilLogBackendFactory0 = new JavaUtilLogBackend.JavaUtilLogBackendFactory();
      LogBackend logBackend0 = javaUtilLogBackend_JavaUtilLogBackendFactory0.createLogBackend("TRACE");
      Level level0 = Level.OFF;
      // Undeclared exception!
      try { 
        logBackend0.log(level0, "omi`O2kg.)FD5,");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("OFF");
      Level level0 = Level.FATAL;
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        javaUtilLogBackend0.log(level0, "", (Throwable) mockThrowable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("yw+~]p");
      Level level0 = Level.WARNING;
      boolean boolean0 = javaUtilLogBackend0.isLevelEnabled(level0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaUtilLogBackend.JavaUtilLogBackendFactory javaUtilLogBackend_JavaUtilLogBackendFactory0 = new JavaUtilLogBackend.JavaUtilLogBackendFactory();
      LogBackend logBackend0 = javaUtilLogBackend_JavaUtilLogBackendFactory0.createLogBackend("");
      Level level0 = Level.DEBUG;
      logBackend0.log(level0, "com.j256.simplelogging.backend.JavaUtilLogBackend$1");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavaUtilLogBackend.JavaUtilLogBackendFactory javaUtilLogBackend_JavaUtilLogBackendFactory0 = new JavaUtilLogBackend.JavaUtilLogBackendFactory();
      LogBackend logBackend0 = javaUtilLogBackend_JavaUtilLogBackendFactory0.createLogBackend("");
      Level level0 = Level.TRACE;
      boolean boolean0 = logBackend0.isLevelEnabled(level0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("OFF");
      Level level0 = Level.INFO;
      // Undeclared exception!
      try { 
        javaUtilLogBackend0.log(level0, "OFF");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("u%DXpqh!6QW");
      Level level0 = Level.ERROR;
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        javaUtilLogBackend0.log(level0, "u%DXpqh!6QW", (Throwable) mockThrowable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = new JavaUtilLogBackend("C0(iLrdmBZX");
      // Undeclared exception!
      try { 
        javaUtilLogBackend0.isLevelEnabled((Level) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplelogging.backend.JavaUtilLogBackend", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaUtilLogBackend javaUtilLogBackend0 = null;
      try {
        javaUtilLogBackend0 = new JavaUtilLogBackend((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
