/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:34:12 GMT 2022
 */

package org.opengis.cite.cdb10.util.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.xpath.XPathExpressionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opengis.cite.cdb10.util.reference.Validator;
import org.w3c.dom.NodeList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Validator_ESTest extends Validator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Validator validator0 = new Validator();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NodeList nodeList0 = validator0.compileAndEvaluate("ncRuOw", iIOMetadataNode0);
      assertNotNull(nodeList0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Validator validator0 = new Validator();
      try { 
        validator0.compileAndEvaluate("|9HP]!S", "|9HP]!S");
        fail("Expecting exception: XPathExpressionException");
      
      } catch(XPathExpressionException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Validator validator0 = new Validator();
      // Undeclared exception!
      try { 
        validator0.compileAndEvaluate((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Validator validator0 = new Validator();
      // Undeclared exception!
      try { 
        validator0.compileAndEvaluate("org.opengis.cite.cdb10.util.reference.Validator", "org.opengis.cite.cdb10.util.reference.Validator");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
      }
  }
}
