/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:16:25 GMT 2022
 */

package org.opengis.cite.cdb10.util.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.opengis.cite.cdb10.util.reference.DatasetsValidator;
import org.w3c.dom.Document;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DatasetsValidator_ESTest extends DatasetsValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatasetsValidator datasetsValidator0 = new DatasetsValidator((Document) null);
      Integer integer0 = new Integer(900);
      boolean boolean0 = datasetsValidator0.isValidCode(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatasetsValidator datasetsValidator0 = new DatasetsValidator((Document) null);
      Integer integer0 = new Integer((-1695));
      String string0 = datasetsValidator0.datasetNameForCode(integer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      doReturn(false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      datasetsValidator0.isValidName("");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      doReturn(false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      datasetsValidator0.isValidName((String) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(node0).getLocalName();
      doReturn((String) null).when(node0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0, (short)0).when(node0).getNodeType();
      doReturn((Document) null).when(node0).getOwnerDocument();
      doReturn((Node) null).when(node0).getParentNode();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((short)4638, (short)4638).when(document0).getNodeType();
      doReturn((Document) null).when(document0).getOwnerDocument();
      doReturn(node0, (Node) null).when(document0).getParentNode();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer((short)4638);
      // Undeclared exception!
      try { 
        datasetsValidator0.isValidCode(integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      doReturn(false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer((short)2);
      datasetsValidator0.isValidCode(integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      doReturn(false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer((short) (-508));
      datasetsValidator0.isValidCode(integer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatasetsValidator datasetsValidator0 = new DatasetsValidator((Document) null);
      // Undeclared exception!
      try { 
        datasetsValidator0.isExtendedCode((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.DatasetsValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer((short)981);
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      doReturn(false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      datasetsValidator0.datasetNameForCode(integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      doReturn(false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      datasetsValidator0.datasetNameForCode((Integer) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer(2592);
      boolean boolean0 = datasetsValidator0.isExtendedCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer(909);
      boolean boolean0 = datasetsValidator0.isExtendedCode(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer(0);
      boolean boolean0 = datasetsValidator0.isExtendedCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NamedNodeMap namedNodeMap0 = mock(NamedNodeMap.class, new ViolatedAssumptionAnswer());
      doReturn((int)(short)0, (int)(short)0, (int)(short)0).when(namedNodeMap0).getLength();
      doReturn((Node) null).when(namedNodeMap0).getNamedItem(anyString());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn(namedNodeMap0, namedNodeMap0, namedNodeMap0, namedNodeMap0).when(document0).getAttributes();
      doReturn((Node) null, (Node) null, (Node) null, (Node) null).when(document0).getFirstChild();
      doReturn("", "", "", "", "Dataset").when(document0).getLocalName();
      doReturn("", "", "", "Dataset", "").when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0, (short)0, (short)1).when(document0).getNodeType();
      doReturn((Node) null, (Node) null, (Node) null, (Node) null).when(document0).getParentNode();
      doReturn(true, true, true, true).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer((short)0);
      datasetsValidator0.isValidCode(integer0);
      datasetsValidator0.datasetNameForCode(integer0);
      datasetsValidator0.isValidName("Dataset");
      // Undeclared exception!
      try { 
        datasetsValidator0.datasetNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.DatasetsValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NamedNodeMap namedNodeMap0 = mock(NamedNodeMap.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((Node) null).when(document0).getFirstChild();
      doReturn("", "", (String) null, (String) null, (String) null).when(document0).getLocalName();
      doReturn("`]#m#Jd[-1X&O[", (String) null, (String) null, (String) null).when(document0).getNamespaceURI();
      doReturn((short)4656, (short)4656, (short)4656, (short)4656, (short)0).when(document0).getNodeType();
      doReturn((Node) null, (Node) null, (Node) null, (Node) null).when(document0).getParentNode();
      doReturn(true, false, false, false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer(0);
      datasetsValidator0.isValidCode(integer0);
      datasetsValidator0.isValidName((String) null);
      datasetsValidator0.datasetNameForCode(integer0);
      datasetsValidator0.isValidName("]Nz");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NamedNodeMap namedNodeMap0 = mock(NamedNodeMap.class, new ViolatedAssumptionAnswer());
      doReturn((int)(short)0).when(namedNodeMap0).getLength();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn(namedNodeMap0, (NamedNodeMap) null, (NamedNodeMap) null).when(document0).getAttributes();
      doReturn((Node) null, (Node) null).when(document0).getFirstChild();
      doReturn("", "", "", "", (String) null).when(document0).getLocalName();
      doReturn("", "", (String) null, (String) null).when(document0).getNamespaceURI();
      doReturn((String) null, (String) null).when(document0).getNodeName();
      doReturn((short)0, (short)0, (short)0, (short)0, (short)1).when(document0).getNodeType();
      doReturn((Node) null, (Node) null, (Node) null, (Node) null).when(document0).getParentNode();
      doReturn(true, true, false, false).when(document0).hasChildNodes();
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer((short)0);
      datasetsValidator0.isValidCode(integer0);
      datasetsValidator0.datasetNameForCode(integer0);
      datasetsValidator0.isValidName("Dataset");
      datasetsValidator0.isValidCode(integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatasetsValidator datasetsValidator0 = new DatasetsValidator((Document) null);
      Integer integer0 = new Integer(1016);
      boolean boolean0 = datasetsValidator0.isValidCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      DatasetsValidator datasetsValidator0 = new DatasetsValidator(document0);
      Integer integer0 = new Integer(999);
      boolean boolean0 = datasetsValidator0.isValidCode(integer0);
      assertTrue(boolean0);
  }
}
