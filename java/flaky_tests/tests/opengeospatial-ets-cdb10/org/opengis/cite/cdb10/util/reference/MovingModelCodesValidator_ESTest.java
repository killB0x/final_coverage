/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:18:31 GMT 2022
 */

package org.opengis.cite.cdb10.util.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MovingModelCodesValidator_ESTest extends MovingModelCodesValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.kindNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      boolean boolean0 = movingModelCodesValidator0.isValidKindName((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      Integer integer0 = new Integer((-1680));
      boolean boolean0 = movingModelCodesValidator0.isValidKindCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      boolean boolean0 = movingModelCodesValidator0.isValidDomainName("/Moving_Model_Codes/Kind/Domain/Category[@code = \"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      Integer integer0 = new Integer(1236);
      boolean boolean0 = movingModelCodesValidator0.isValidDomainCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      boolean boolean0 = movingModelCodesValidator0.isValidCategoryName("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      Integer integer0 = new Integer((-1));
      boolean boolean0 = movingModelCodesValidator0.isValidCategoryCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.categoryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      Integer integer0 = new Integer(1236);
      String string0 = movingModelCodesValidator0.domainNameForCode(integer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short)1930);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.kindNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(1472);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.kindNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      movingModelCodesValidator0.isValidKindName("org.opengis.cite.cdb10.util.reference.Validator");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((short)2).when(document0).getNodeType();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.isValidKindName("DGc");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      movingModelCodesValidator0.isValidKindName("3OLrF7yLJ<^hXb2v");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short) (-2709));
      movingModelCodesValidator0.isValidKindCode(integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.isValidKindCode((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(0);
      movingModelCodesValidator0.isValidKindCode(integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((-1));
      movingModelCodesValidator0.isValidKindCode(integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      movingModelCodesValidator0.isValidDomainName("");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      movingModelCodesValidator0.isValidDomainName("org.opengis.cite.cdb10.util.reference.Validator");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      movingModelCodesValidator0.isValidDomainName("");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short) (-40));
      movingModelCodesValidator0.isValidDomainCode(integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.isValidDomainCode((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short)0);
      movingModelCodesValidator0.isValidDomainCode(integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short)511);
      movingModelCodesValidator0.isValidDomainCode(integer0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      movingModelCodesValidator0.isValidCategoryName("~-m]o0");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      movingModelCodesValidator0.isValidCategoryName("");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short) (-1));
      movingModelCodesValidator0.isValidCategoryCode(integer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.isValidCategoryCode((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short)0);
      movingModelCodesValidator0.isValidCategoryCode(integer0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(1);
      movingModelCodesValidator0.isValidCategoryCode(integer0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.domainNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short)2);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.domainNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((short) (-3989));
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.domainNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((-267));
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.categoryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      Integer integer0 = new Integer((short)2);
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.categoryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short) (-3), (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      Integer integer0 = new Integer((short)0);
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.categoryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      boolean boolean0 = movingModelCodesValidator0.isValidKindName("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      boolean boolean0 = movingModelCodesValidator0.isValidDomainName((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      boolean boolean0 = movingModelCodesValidator0.isValidCategoryName("=mmbeY<tb,l/B8}>ZWv");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer((-1060));
      boolean boolean0 = movingModelCodesValidator0.isValidKindCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(0);
      boolean boolean0 = movingModelCodesValidator0.isValidDomainCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(0);
      boolean boolean0 = movingModelCodesValidator0.isValidCategoryCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      Integer integer0 = new Integer(1236);
      String string0 = movingModelCodesValidator0.categoryNameForCode(integer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator(document0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        movingModelCodesValidator0.domainNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.MovingModelCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MovingModelCodesValidator movingModelCodesValidator0 = new MovingModelCodesValidator((Document) null);
      Integer integer0 = new Integer(0);
      String string0 = movingModelCodesValidator0.kindNameForCode(integer0);
      assertNull(string0);
  }
}
