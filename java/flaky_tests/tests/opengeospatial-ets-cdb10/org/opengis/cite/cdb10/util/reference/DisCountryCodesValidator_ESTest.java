/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:26:45 GMT 2022
 */

package org.opengis.cite.cdb10.util.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.opengis.cite.cdb10.util.reference.DisCountryCodesValidator;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DisCountryCodesValidator_ESTest extends DisCountryCodesValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator((Document) null);
      boolean boolean0 = disCountryCodesValidator0.isValidCountryName((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator((Document) null);
      Integer integer0 = new Integer((-1133));
      boolean boolean0 = disCountryCodesValidator0.isValidCountryCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        disCountryCodesValidator0.countryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.DisCountryCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator((Document) null);
      Integer integer0 = new Integer((-1133));
      String string0 = disCountryCodesValidator0.countryNameForCode(integer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      disCountryCodesValidator0.isValidCountryName((String) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      disCountryCodesValidator0.isValidCountryName("3tV");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      disCountryCodesValidator0.isValidCountryName("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      Integer integer0 = new Integer((short)1046);
      disCountryCodesValidator0.isValidCountryCode(integer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator((Document) null);
      // Undeclared exception!
      try { 
        disCountryCodesValidator0.isValidCountryCode((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.DisCountryCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      Integer integer0 = new Integer((short)2);
      disCountryCodesValidator0.isValidCountryCode(integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      Integer integer0 = new Integer(0);
      boolean boolean0 = disCountryCodesValidator0.isValidCountryCode(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      Integer integer0 = new Integer(8);
      // Undeclared exception!
      try { 
        disCountryCodesValidator0.countryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.DisCountryCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      Integer integer0 = Integer.valueOf(0);
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      // Undeclared exception!
      try { 
        disCountryCodesValidator0.countryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.DisCountryCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      Integer integer0 = new Integer((short)2445);
      // Undeclared exception!
      try { 
        disCountryCodesValidator0.countryNameForCode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.cdb10.util.reference.DisCountryCodesValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).getLocalName();
      doReturn((String) null).when(document0).getNamespaceURI();
      doReturn((short)0, (short)0, (short)0).when(document0).getNodeType();
      doReturn((Node) null).when(document0).getParentNode();
      DisCountryCodesValidator disCountryCodesValidator0 = new DisCountryCodesValidator(document0);
      boolean boolean0 = disCountryCodesValidator0.isValidCountryName("oP2o8-]9]");
      assertFalse(boolean0);
  }
}
