/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 15:34:01 GMT 2022
 */

package pageunit.html;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pageunit.html.GenericHTMLComponent;
import pageunit.html.HTMLHTMLImpl;
import pageunit.html.HTMLIMGImpl;
import pageunit.html.HTMLMetaImpl;
import pageunit.html.HTMLPageImpl;
import pageunit.html.HTMLScriptImpl;
import pageunit.html.HTMLTitleImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HTMLComponentBase_ESTest extends HTMLComponentBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HTMLHTMLImpl hTMLHTMLImpl0 = new HTMLHTMLImpl("p/HH [DmRf<)|?c6.");
      hTMLHTMLImpl0.setBody("p/HH [DmRf<)|?c6.");
      assertEquals("p/HH [DmRf<)|?c6.", hTMLHTMLImpl0.getNodeName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HTMLPageImpl hTMLPageImpl0 = new HTMLPageImpl("");
      hTMLPageImpl0.setNodeValue("KW=# ~./Rr1+,");
      assertEquals("HTMLPageImpl0", hTMLPageImpl0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HTMLHTMLImpl hTMLHTMLImpl0 = new HTMLHTMLImpl("p/HH [DmRf<)|?c6.");
      hTMLHTMLImpl0.appendBody("p/HH [DmRf<)|?c6.");
      assertEquals("p/HH [DmRf<)|?c6.", hTMLHTMLImpl0.getNodeName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HTMLTitleImpl hTMLTitleImpl0 = new HTMLTitleImpl("J$");
      String string0 = hTMLTitleImpl0.getName();
      assertEquals("J$", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HTMLHTMLImpl hTMLHTMLImpl0 = new HTMLHTMLImpl("");
      hTMLHTMLImpl0.setName("");
      String string0 = hTMLHTMLImpl0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HTMLMetaImpl hTMLMetaImpl0 = new HTMLMetaImpl("Added to body of %s this vlue: %s (%s)%n", "<Added to body of %s this vlue: %s (%s)%n>", "<Added to body of %s this vlue: %s (%s)%n>");
      hTMLMetaImpl0.setBody("Set body of %s to this value: %s (%s)%n");
      hTMLMetaImpl0.getBody();
      assertEquals("Added to body of %s this vlue: %s (%s)%n", hTMLMetaImpl0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HTMLHTMLImpl hTMLHTMLImpl0 = new HTMLHTMLImpl((String) null);
      // Undeclared exception!
      try { 
        hTMLHTMLImpl0.setBody((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HTMLPageImpl hTMLPageImpl0 = new HTMLPageImpl("v,jsk@S1!ObWY");
      String string0 = hTMLPageImpl0.generateMissingName();
      assertEquals("HTMLPageImpl0", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HTMLPageImpl hTMLPageImpl0 = new HTMLPageImpl((String) null);
      hTMLPageImpl0.setName((String) null);
      String string0 = hTMLPageImpl0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HTMLMetaImpl hTMLMetaImpl0 = new HTMLMetaImpl("Added to body of %s this vlue: %s (%s)%n", "<Added to body of %s this vlue: %s (%s)%n>", "<Added to body of %s this vlue: %s (%s)%n>");
      hTMLMetaImpl0.getBody();
      assertEquals("Added to body of %s this vlue: %s (%s)%n", hTMLMetaImpl0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HTMLMetaImpl hTMLMetaImpl0 = new HTMLMetaImpl("Added to body of %s this vlue: %s (%s)%n", "<Added to body of %s this vlue: %s (%s)%n>", "<Added to body of %s this vlue: %s (%s)%n>");
      hTMLMetaImpl0.getNodeValue();
      assertEquals("Added to body of %s this vlue: %s (%s)%n", hTMLMetaImpl0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HTMLScriptImpl hTMLScriptImpl0 = new HTMLScriptImpl("p/H [DmRf<)|?c6.");
      String string0 = hTMLScriptImpl0.getNodeName();
      assertEquals("p/H [DmRf<)|?c6.", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GenericHTMLComponent genericHTMLComponent0 = new GenericHTMLComponent("Q", "Added to body of %s this vlue: %s (%s)%n");
      short short0 = genericHTMLComponent0.getNodeType();
      assertEquals((short)0, short0);
      assertEquals("Q", genericHTMLComponent0.getNodeName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HTMLIMGImpl hTMLIMGImpl0 = new HTMLIMGImpl("pv~tA=FL]io]ec8)JL", "pv~tA=FL]io]ec8)JL");
      String string0 = hTMLIMGImpl0.toString();
      assertEquals("<HTMLIMGImpl: Name pv~tA=FL]io]ec8)JL>", string0);
  }
}
