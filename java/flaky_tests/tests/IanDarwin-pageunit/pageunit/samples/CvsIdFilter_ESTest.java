/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 15:36:22 GMT 2022
 */

package pageunit.samples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pageunit.html.HTMLPage;
import pageunit.html.HTMLPageImpl;
import pageunit.http.WebResponse;
import pageunit.samples.CvsIdFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CvsIdFilter_ESTest extends CvsIdFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CvsIdFilter cvsIdFilter0 = new CvsIdFilter();
      try { 
        cvsIdFilter0.filterPage((HTMLPage) null, (WebResponse) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pageunit.samples.CvsIdFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CvsIdFilter cvsIdFilter0 = new CvsIdFilter();
      WebResponse webResponse0 = new WebResponse("1jg5", "%]|BzGW_v", (-1817));
      try { 
        cvsIdFilter0.filterPage((HTMLPage) null, webResponse0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ERROR: Page does not have any valid CVS Identifier
         //
         verifyException("pageunit.samples.CvsIdFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CvsIdFilter cvsIdFilter0 = new CvsIdFilter();
      HTMLPageImpl hTMLPageImpl0 = new HTMLPageImpl("$Source");
      WebResponse webResponse0 = new WebResponse("$Source", "$Source", (-2905));
      cvsIdFilter0.filterPage(hTMLPageImpl0, webResponse0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WebResponse webResponse0 = new WebResponse("$Id", "$Id", 1);
      CvsIdFilter cvsIdFilter0 = new CvsIdFilter();
      cvsIdFilter0.filterPage((HTMLPage) null, webResponse0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CvsIdFilter cvsIdFilter0 = new CvsIdFilter();
      WebResponse webResponse0 = new WebResponse("$Version", "1jg5", (-4485));
      cvsIdFilter0.filterPage((HTMLPage) null, webResponse0);
  }
}
