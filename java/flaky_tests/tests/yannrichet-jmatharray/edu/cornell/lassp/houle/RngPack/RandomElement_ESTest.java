/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 22:24:37 GMT 2022
 */

package edu.cornell.lassp.houle.RngPack;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.cornell.lassp.houle.RngPack.RanMT;
import edu.cornell.lassp.houle.RngPack.RandomJava;
import edu.cornell.lassp.houle.RngPack.Ranecu;
import edu.cornell.lassp.houle.RngPack.Ranlux;
import edu.cornell.lassp.houle.RngPack.Ranmar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomElement_ESTest extends RandomElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      boolean boolean0 = randomJava0.coin(0.0);
      assertTrue(boolean0);
      
      double double0 = randomJava0.gaussian();
      assertEquals((-0.8023560088723956), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar((-760));
      int int0 = ranmar0.choose((-760), (-760));
      assertEquals((-760), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Ranlux ranlux0 = new Ranlux(0, mockDate0);
      double double0 = ranlux0.uniform(0, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu(58, 1169);
      double double0 = ranecu0.uniform(415.75212, 0.0);
      assertEquals(8.760029636498814, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      double double0 = randomJava0.raw();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      double double0 = randomJava0.raw();
      double double1 = randomJava0.raw();
      assertNotEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar();
      ranmar0.raw();
      ranmar0.powlaw(0.45623308420181274, 1099L);
      ranmar0.cm = (double) 1099L;
      double double0 = ranmar0.raw();
      assertEquals((-1097.11702978611), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RanMT ranMT0 = new RanMT(0L);
      double double0 = ranMT0.powlaw(0L, 0L);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu(58, 1169);
      double double0 = ranecu0.gaussian(0.0);
      assertEquals(4060756476299227390L, ranecu0.getSeed());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      double double0 = ranMT0.gaussian((double) 1392409281320L);
      assertEquals(2.206034035419397E12, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux(0, 0);
      int int0 = ranlux0.choose(0, 1644);
      assertEquals(887, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu(0, 0);
      int int0 = ranecu0.choose(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar(952);
      int int0 = ranmar0.choose(899999963);
      assertEquals(103973200, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      // Undeclared exception!
      try { 
        ranMT0.raw((double[]) null, 3512);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      // Undeclared exception!
      try { 
        ranMT0.raw((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1709, 1709, 1709);
      Ranlux ranlux0 = new Ranlux(1709, mockDate0);
      ranlux0.seeds = null;
      // Undeclared exception!
      try { 
        ranlux0.raw();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar((-529));
      double[] doubleArray0 = new double[9];
      ranmar0.u = doubleArray0;
      // Undeclared exception!
      try { 
        ranmar0.raw();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 96 out of bounds for length 9
         //
         verifyException("edu.cornell.lassp.houle.RngPack.Ranmar", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux((-969L));
      ranlux0.i24 = 2437;
      // Undeclared exception!
      try { 
        ranlux0.powlaw((-969L), (-969L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux((-969L));
      int[] intArray0 = new int[4];
      ranlux0.next = intArray0;
      // Undeclared exception!
      try { 
        ranlux0.gaussian((double) (-969L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      Ranecu ranecu0 = new Ranecu(mockDate0);
      // Undeclared exception!
      ranecu0.gaussian();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux((-969L));
      ranlux0.i24 = 2437;
      // Undeclared exception!
      try { 
        ranlux0.gaussian();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux((-969L));
      ranlux0.j24 = (-1055);
      // Undeclared exception!
      try { 
        ranlux0.coin();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar();
      ranmar0.i97 = 3621;
      // Undeclared exception!
      try { 
        ranmar0.choose(3732, 3732);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3621 out of bounds for length 97
         //
         verifyException("edu.cornell.lassp.houle.RngPack.Ranmar", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      int int0 = ranMT0.choose(1459, (-2274));
      assertEquals((-2274), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        ranMT0.raw(doubleArray0, 669462894);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      double[] doubleArray0 = new double[9];
      randomJava0.raw(doubleArray0, (-1067));
      assertEquals(9, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      double double0 = randomJava0.uniform((-0.6343628990056639), (-403.88678546));
      assertEquals((-0.6343628990056639), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      double double0 = ranMT0.gaussian();
      assertEquals(1.5843287351030029, double0, 0.01);
      
      double double1 = ranMT0.gaussian();
      assertEquals(0.24406169383630635, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu(58, 1169);
      boolean boolean0 = ranecu0.coin(1134.746269541162);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      boolean boolean0 = randomJava0.coin((-4017.85984929764));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[4];
      RanMT ranMT0 = new RanMT(intArray0);
      boolean boolean0 = ranMT0.coin();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      boolean boolean0 = ranMT0.coin();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[4];
      RanMT ranMT0 = new RanMT(intArray0);
      int int0 = ranMT0.choose(0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux((-969L));
      double double0 = ranlux0.powlaw((-969L), (-969L));
      assertEquals((-969.5586840283146), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      Object object0 = randomJava0.clone();
      assertNotSame(randomJava0, object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      int int0 = ranMT0.choose((-2558));
      assertEquals((-2558), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      Ranlux ranlux0 = new Ranlux();
      ranlux0.raw(doubleArray0);
      assertArrayEquals(new double[] {0.5398181676864624, 0.7615504264831543, 0.06029939651489258, 0.7960026264190674, 0.3063122034072876, 0.0827760100364685, 0.665420413017273, 0.460751473903656, 0.9257408976554871}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux((-969L));
      double double0 = ranlux0.gaussian((double) (-969L));
      assertEquals((-1288.6290001396706), double0, 0.01);
  }
}
