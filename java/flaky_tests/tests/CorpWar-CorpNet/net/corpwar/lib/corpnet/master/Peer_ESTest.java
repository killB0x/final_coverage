/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 20:29:13 GMT 2022
 */

package net.corpwar.lib.corpnet.master;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.UUID;
import net.corpwar.lib.corpnet.master.Peer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Peer_ESTest extends Peer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      Peer peer0 = new Peer((-1), "net.corpwar.lib.corpnet.master.Peer", (-1), "", "net.corpwar.lib.corpnet.master.Peer", uUID0);
      peer0.hashCode();
      assertEquals((-1), peer0.externalPort);
      assertEquals((-1L), peer0.ping);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Peer peer0 = new Peer(0, "79}zJ[l");
      peer0.hashCode();
      assertEquals(0, peer0.externalPort);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Peer peer0 = new Peer((-8), "");
      UUID uUID0 = MockUUID.fromString((String) null);
      Peer peer1 = new Peer(3364, (String) null, (-3589L), "", "9nU", uUID0);
      boolean boolean0 = peer0.equals(peer1);
      assertFalse(boolean0);
      assertEquals(3364, peer1.externalPort);
      assertEquals((-3589L), peer1.ping);
      assertEquals((-8), peer0.externalPort);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Peer peer0 = new Peer(1, "`t}5Pc,AK", 1, "`t}5Pc,AK", "`t}5Pc,AK", uUID0);
      Peer peer1 = new Peer(1, "`t}5Pc,AK");
      boolean boolean0 = peer0.equals(peer1);
      assertEquals(1, peer0.externalPort);
      assertEquals(1L, peer0.ping);
      assertEquals(1, peer1.externalPort);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Peer peer0 = new Peer(2009, "zX~");
      boolean boolean0 = peer0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(2009, peer0.externalPort);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Peer peer0 = new Peer(931, "");
      boolean boolean0 = peer0.equals(peer0);
      assertTrue(boolean0);
      assertEquals(931, peer0.externalPort);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Peer peer0 = new Peer((-8), "");
      Peer peer1 = new Peer(3364, (String) null, (-3589L), "", "9nU", peer0.connectionID);
      boolean boolean0 = peer0.equals(peer1);
      assertEquals(3364, peer1.externalPort);
      assertEquals((-8), peer0.externalPort);
      assertTrue(boolean0);
      assertEquals((-3589L), peer1.ping);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Peer peer0 = new Peer(2004, "");
      boolean boolean0 = peer0.equals("");
      assertFalse(boolean0);
      assertEquals(2004, peer0.externalPort);
  }
}
