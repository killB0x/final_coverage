/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 20:33:02 GMT 2022
 */

package net.corpwar.lib.corpnet.util;

import org.junit.Test;
import static org.junit.Assert.*;
import net.corpwar.lib.corpnet.NetworkSendType;
import net.corpwar.lib.corpnet.util.SendDataQue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SendDataQue_ESTest extends SendDataQue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[2];
      NetworkSendType networkSendType0 = NetworkSendType.PEER_SPLIT_DATA;
      SendDataQue sendDataQue1 = sendDataQue0.setValues(byteArray0, networkSendType0);
      assertSame(sendDataQue1, sendDataQue0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[1];
      NetworkSendType networkSendType0 = NetworkSendType.ERROR;
      sendDataQue0.setValues(byteArray0, networkSendType0);
      byte[] byteArray1 = sendDataQue0.getaByte();
      assertEquals(1, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[0];
      NetworkSendType networkSendType0 = NetworkSendType.INITSIGNAL;
      SendDataQue sendDataQue1 = sendDataQue0.setValues(byteArray0, networkSendType0);
      byte[] byteArray1 = sendDataQue1.getaByte();
      assertSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[9];
      NetworkSendType networkSendType0 = NetworkSendType.ACK;
      SendDataQue sendDataQue1 = sendDataQue0.setValues(byteArray0, networkSendType0);
      NetworkSendType networkSendType1 = sendDataQue1.getNetworkSendType();
      assertEquals(NetworkSendType.ACK, networkSendType1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[1];
      NetworkSendType networkSendType0 = NetworkSendType.RELIABLE_GAME_DATA;
      sendDataQue0.setValues(byteArray0, networkSendType0);
      NetworkSendType networkSendType1 = sendDataQue0.getNetworkSendType();
      assertEquals(20, networkSendType1.getTypeCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[1];
      NetworkSendType networkSendType0 = NetworkSendType.ERROR;
      SendDataQue sendDataQue1 = sendDataQue0.setValues(byteArray0, networkSendType0);
      NetworkSendType networkSendType1 = sendDataQue1.getNetworkSendType();
      assertEquals((-1), networkSendType1.getTypeCode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[3];
      NetworkSendType networkSendType0 = NetworkSendType.PEER_SPLIT_DATA;
      System.setCurrentTimeMillis((-695L));
      sendDataQue0.setValues(byteArray0, networkSendType0);
      long long0 = sendDataQue0.getAddedTime();
      assertEquals((-695L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = sendDataQue0.getaByte();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      byte[] byteArray0 = new byte[3];
      NetworkSendType networkSendType0 = NetworkSendType.PEER_SPLIT_DATA;
      SendDataQue sendDataQue1 = sendDataQue0.setValues(byteArray0, networkSendType0);
      long long0 = sendDataQue1.getAddedTime();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      long long0 = sendDataQue0.getAddedTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SendDataQue sendDataQue0 = new SendDataQue();
      sendDataQue0.getNetworkSendType();
  }
}
