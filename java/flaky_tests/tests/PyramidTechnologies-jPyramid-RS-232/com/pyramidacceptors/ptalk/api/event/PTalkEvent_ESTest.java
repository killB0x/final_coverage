/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 19:36:33 GMT 2022
 */

package com.pyramidacceptors.ptalk.api.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pyramidacceptors.ptalk.api.event.Events;
import com.pyramidacceptors.ptalk.api.event.PTalkEvent;
import java.util.EnumSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PTalkEvent_ESTest extends PTalkEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      Events events0 = Events.Escrowed;
      PTalkEvent pTalkEvent0 = new PTalkEvent(object0, events0, (String) null);
      String string0 = pTalkEvent0.getPacketString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Events events0 = Events.Credit;
      PTalkEvent pTalkEvent0 = new PTalkEvent(object0, events0, "com.pyramidacceptors.ptalk.api.event.PTalkEvent");
      String string0 = pTalkEvent0.getPacketString();
      assertEquals("com.pyramidacceptors.ptalk.api.event.PTalkEvent", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      PTalkEvent pTalkEvent0 = null;
      try {
        pTalkEvent0 = new PTalkEvent(object0, (Events) null, "- 0~K-Uupu!Tf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.EnumSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Events events0 = Events.SerialData;
      PTalkEvent pTalkEvent0 = null;
      try {
        pTalkEvent0 = new PTalkEvent((Object) null, events0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      Events events0 = Events.PowerUp;
      PTalkEvent pTalkEvent0 = new PTalkEvent(object0, events0, "");
      Events events1 = pTalkEvent0.getId();
      assertSame(events0, events1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      Events events0 = Events.PowerUp;
      PTalkEvent pTalkEvent0 = new PTalkEvent(object0, events0, "");
      String string0 = pTalkEvent0.getPacketString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Events events0 = Events.Escrowed;
      PTalkEvent pTalkEvent0 = new PTalkEvent(events0, events0, (String) null);
      EnumSet<Events> enumSet0 = pTalkEvent0.getEventId();
      assertTrue(enumSet0.contains(events0));
  }
}
