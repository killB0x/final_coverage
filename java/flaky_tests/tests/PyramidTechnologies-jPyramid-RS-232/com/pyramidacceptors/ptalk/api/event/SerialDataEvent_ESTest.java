/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 19:37:14 GMT 2022
 */

package com.pyramidacceptors.ptalk.api.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pyramidacceptors.ptalk.api.MessageType;
import com.pyramidacceptors.ptalk.api.event.SerialDataEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SerialDataEvent_ESTest extends SerialDataEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        SerialDataEvent.newTxEvent((Object) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        SerialDataEvent.newRxEvent((Object) null, "ANg;Fli$^Q16P;cXb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MessageType messageType0 = MessageType.Master;
      SerialDataEvent serialDataEvent0 = null;
      try {
        serialDataEvent0 = new SerialDataEvent((Object) null, messageType0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      SerialDataEvent serialDataEvent0 = new SerialDataEvent(object0, (MessageType) null, "ANg;Fli$^Q16P;cXb");
      serialDataEvent0.getMessageType();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      SerialDataEvent serialDataEvent0 = SerialDataEvent.newTxEvent(object0, "com.pyramidacceptors.ptalk.api.event.SerialDataEvent");
      assertEquals("com.pyramidacceptors.ptalk.api.event.SerialDataEvent", serialDataEvent0.getPacketString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SerialDataEvent serialDataEvent0 = SerialDataEvent.newRxEvent("ANg;Fli$^Q16P;cXb", "ANg;Fli$^Q16P;cXb");
      MessageType messageType0 = serialDataEvent0.getMessageType();
      assertEquals(MessageType.Slave, messageType0);
  }
}
