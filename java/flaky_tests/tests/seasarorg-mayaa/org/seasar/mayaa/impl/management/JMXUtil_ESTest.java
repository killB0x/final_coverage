/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 02:24:48 GMT 2022
 */

package org.seasar.mayaa.impl.management;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.management.ObjectName;
import javax.management.RuntimeOperationsException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.management.JMXUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JMXUtil_ESTest extends JMXUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        JMXUtil.register((Object) null, (ObjectName) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.management.JMXUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      ObjectName objectName0 = ObjectName.WILDCARD;
      JMXUtil.register(object0, objectName0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JMXUtil jMXUtil0 = new JMXUtil();
      // Undeclared exception!
      try { 
        JMXUtil.register(jMXUtil0, (ObjectName) null);
        fail("Expecting exception: RuntimeOperationsException");
      
      } catch(RuntimeOperationsException e) {
      }
  }
}
