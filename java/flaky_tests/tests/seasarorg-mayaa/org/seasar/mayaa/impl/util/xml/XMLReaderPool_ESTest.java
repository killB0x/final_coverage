/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:57:10 GMT 2022
 */

package org.seasar.mayaa.impl.util.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.util.xml.XMLReaderPool;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XMLReaderPool_ESTest extends XMLReaderPool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderPool0.returnXMLReader(parserAdapter0);
      XMLReader xMLReader0 = xMLReaderPool0.borrowXMLReader(xMLReaderAdapter0, false, true, false);
      assertSame(xMLReader0, parserAdapter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderPool0.returnXMLReader(parserAdapter0);
      XMLReader xMLReader0 = xMLReaderPool0.borrowXMLReader(xMLReaderAdapter0, true, true, false);
      assertSame(xMLReader0, parserAdapter0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderPool0.setProperty(parserAdapter0, "T97GRz f!gMpXPL", xMLReaderAdapter0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderPool0.setFeature(parserAdapter0, "GAL/%ta>/", true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      boolean boolean0 = xMLReaderPool0.validateObject(xMLFilterImpl0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = new XMLReaderPool();
      Object object0 = new Object();
      boolean boolean0 = xMLReaderPool0.validateObject(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = new XMLReaderPool();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        xMLReaderPool0.setProperty(xMLFilterImpl0, "http://xml.org/sax/features/val#dation", "http://xml.org/sax/features/val#dation");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      // Undeclared exception!
      try { 
        xMLReaderPool0.setProperty((XMLReader) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.util.xml.XMLReaderPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = new XMLReaderPool();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        xMLReaderPool0.setFeature(xMLFilterImpl0, "", true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      // Undeclared exception!
      try { 
        xMLReaderPool0.setFeature(parserAdapter0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = new XMLReaderPool();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLReaderPool0.returnXMLReader(xMLFilterImpl0);
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        xMLReaderPool0.borrowXMLReader(xMLFilterImpl0, false, true, true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderPool xMLReaderPool0 = new XMLReaderPool();
      // Undeclared exception!
      try { 
        xMLReaderPool0.borrowXMLReader(xMLFilterImpl0, false, false, false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/seasar/mayaa/impl/util/xml/AdditionalSAXParser
         //
         verifyException("org.seasar.mayaa.impl.util.xml.XMLReaderPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = XMLReaderPool.getPool();
      // Undeclared exception!
      try { 
        xMLReaderPool0.createObject();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/seasar/mayaa/impl/util/xml/AdditionalSAXParser
         //
         verifyException("org.seasar.mayaa.impl.util.xml.XMLReaderPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLReaderPool xMLReaderPool0 = new XMLReaderPool();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLReaderPool0.returnXMLReader(xMLFilterImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReader xMLReader0 = xMLReaderPool0.borrowXMLReader(defaultHandler2_0, true, true, true);
      assertSame(xMLReader0, xMLFilterImpl0);
  }
}
