/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:25:00 GMT 2022
 */

package org.seasar.mayaa.impl.engine.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.engine.specification.URI;
import org.seasar.mayaa.impl.engine.specification.URIImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class URIImpl_ESTest extends URIImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("FjT$=aw0&.Yk");
      String string0 = uRIImpl0.toString();
      assertEquals("FjT$=aw0&.Yk", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URIImpl.NULL_NS_URI = null;
      URI uRI0 = URIImpl.getInstance("");
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("|");
      URIImpl uRIImpl1 = (URIImpl)URIImpl.NULL_NS_URI;
      int int0 = uRIImpl0.compareTo((URI) uRIImpl1);
      //  // Unstable assertion: assertNotSame(uRIImpl1, uRIImpl0);
      //  // Unstable assertion: assertEquals(0, int0);
      //  // Unstable assertion: assertTrue(uRIImpl1.equals((Object)uRIImpl0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URI uRI0 = URIImpl.getInstance("1");
      URIImpl uRIImpl0 = (URIImpl)URIImpl.NULL_NS_URI;
      int int0 = uRIImpl0.compareTo(uRI0);
      //  // Unstable assertion: assertEquals(75, int0);
      //  // Unstable assertion: assertFalse(uRIImpl0.equals((Object)uRI0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("s");
      URIImpl uRIImpl1 = (URIImpl)URIImpl.getInstance("org.seasar.mayaa.impl.util.ReferenceCache");
      boolean boolean0 = uRIImpl0.equals(uRIImpl1);
      assertEquals("s", uRIImpl0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("|");
      boolean boolean0 = uRIImpl0.equals(uRIImpl0);
      assertEquals("|", uRIImpl0.getValue());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("|");
      uRIImpl0.setValue("|");
      assertEquals("|", uRIImpl0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.NULL_NS_URI;
      int int0 = uRIImpl0.compareTo((URI) uRIImpl0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("|");
      int int0 = uRIImpl0.compareTo((URI) null);
      assertEquals("|", uRIImpl0.getValue());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("UTE");
      Object object0 = new Object();
      boolean boolean0 = uRIImpl0.equals(object0);
      assertFalse(boolean0);
      assertEquals("UTE", uRIImpl0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("|");
      uRIImpl0.setValue("");
      assertEquals("", uRIImpl0.getValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.NULL_NS_URI;
      // Undeclared exception!
      try { 
        uRIImpl0.setValue((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.URIImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URI uRI0 = URIImpl.getInstance((String) null);
      String string0 = uRI0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.getInstance("UTE");
      uRIImpl0.hashCode();
      assertEquals("UTE", uRIImpl0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URI uRI0 = URIImpl.getInstance("|");
      assertNotNull(uRI0);
      
      String string0 = uRI0.getValue();
      assertEquals("|", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URIImpl uRIImpl0 = (URIImpl)URIImpl.NULL_NS_URI;
      String string0 = uRIImpl0.toString();
      assertEquals("", string0);
  }
}
