/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:11:18 GMT 2022
 */

package org.seasar.mayaa.impl.engine.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.seasar.mayaa.FactoryFactory;
import org.seasar.mayaa.engine.Template;
import org.seasar.mayaa.engine.specification.NodeTreeWalker;
import org.seasar.mayaa.engine.specification.QName;
import org.seasar.mayaa.impl.CONST_IMPL;
import org.seasar.mayaa.impl.engine.PageImpl;
import org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NodeTreeWalkerImpl_ESTest extends NodeTreeWalkerImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      assertEquals(0, nodeTreeWalkerImpl0.getLineNumber());
      
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.setLineNumber(1318);
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      Object object0 = new Object();
      nodeTreeWalkerImpl1.equals(object0);
      nodeTreeWalkerImpl1.getParentNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      int int0 = 1103;
      PageImpl pageImpl0 = null;
      try {
        pageImpl0 = new PageImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      boolean boolean0 = nodeTreeWalkerImpl0.removeChildNode(nodeTreeWalkerImpl0);
      assertFalse(boolean0);
      
      nodeTreeWalkerImpl0.clearChildNodes();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl1.setLineNumber(503);
      nodeTreeWalkerImpl1.getLineNumber();
      nodeTreeWalkerImpl1.removeChildNode(nodeTreeWalkerImpl0);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl1.getChildNode((-2004));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.removeChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.clearChildNodes();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl1);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl1.equals(nodeTreeWalkerImpl0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setSystemID("}[JQB!PAkv");
      nodeTreeWalkerImpl0.getSystemID();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setSystemID("org.seasar.mayaa.impl.source.PageSourceDescriptor");
      FactoryFactory.release();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl2.equals(nodeTreeWalkerImpl1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.removeChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.clearChildNodes();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl1.removeChildNode(nodeTreeWalkerImpl0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setLineNumber((-979));
      nodeTreeWalkerImpl0.getLineNumber();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      assertTrue(nodeTreeWalkerImpl1.equals((Object)nodeTreeWalkerImpl0));
      
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.equals(nodeTreeWalkerImpl1);
      assertFalse(nodeTreeWalkerImpl1.equals((Object)nodeTreeWalkerImpl0));
      
      nodeTreeWalkerImpl0.hashCode();
      assertFalse(nodeTreeWalkerImpl0.equals((Object)nodeTreeWalkerImpl1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      FactoryFactory.release();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl1.getLineNumber();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.insertChildNode(2239, nodeTreeWalker0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl1.hashCode();
      Object object0 = new Object();
      Object object1 = new Object();
      nodeTreeWalkerImpl0.equals(object1);
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl2.addChildNode(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl2.getLineNumber();
      nodeTreeWalkerImpl0.getChildNodeSize();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl2.getChildNode(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl0);
      assertEquals(0, nodeTreeWalkerImpl0.getLineNumber());
      
      nodeTreeWalkerImpl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setLineNumber(5);
      nodeTreeWalkerImpl1.equals(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.hashCode();
      assertEquals(5, nodeTreeWalkerImpl0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory0);
      nodeTreeWalkerImpl0.setLineNumber(2228);
      nodeTreeWalkerImpl0.getChildNodeSize();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.equals(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl1.hashCode();
      nodeTreeWalkerImpl0.clearChildNodes();
      assertEquals(2228, nodeTreeWalkerImpl0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      nodeTreeWalkerImpl0.getChildNodeSize();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode((-3460));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl0);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode((-747));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl1.getLineNumber();
      int int0 = nodeTreeWalkerImpl1.getLineNumber();
      assertEquals(0, int0);
      
      nodeTreeWalker0.getChildNode(0);
      nodeTreeWalkerImpl0.clearChildNodes();
      assertEquals(0, nodeTreeWalkerImpl0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.getParentNode();
      nodeTreeWalkerImpl0.removeChildNode((NodeTreeWalker) null);
      nodeTreeWalkerImpl0.equals(object0);
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl0.getChildNodeSize();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.isOnTemplate();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl2.insertChildNode(0, nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl2.hashCode();
      nodeTreeWalkerImpl2.iterateChildNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl3 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl3.getChildNodeSize();
      nodeTreeWalkerImpl2.iterateChildNode();
      nodeTreeWalkerImpl2.getChildNode(0);
      nodeTreeWalkerImpl0.getLineNumber();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl3.getChildNode(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.removeChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.clearChildNodes();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl1.setOnTemplate(true);
      nodeTreeWalkerImpl0.getChildNodeSize();
      nodeTreeWalkerImpl0.removeChildNode(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl1.equals(nodeTreeWalkerImpl0);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.insertChildNode((-2725), nodeTreeWalkerImpl1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.setOnTemplate(true);
      nodeTreeWalkerImpl1.equals(object0);
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = (NodeTreeWalkerImpl)nodeTreeWalkerImpl1.getParentNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl3 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl3.getLineNumber();
      nodeTreeWalkerImpl3.isOnTemplate();
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl3.getChildNodeSize();
      nodeTreeWalkerImpl2.equals(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl2.hashCode();
      nodeTreeWalker0.clearChildNodes();
      assertEquals(0, nodeTreeWalker0.getChildNodeSize());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      int int0 = nodeTreeWalkerImpl0.getChildNodeSize();
      assertEquals(0, int0);
      
      boolean boolean0 = nodeTreeWalkerImpl0.equals(nodeTreeWalkerImpl0);
      assertTrue(boolean0);
      
      nodeTreeWalkerImpl0.hashCode();
      assertEquals(0, nodeTreeWalkerImpl0.getChildNodeSize());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl0);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode(1300);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory0);
      nodeTreeWalkerImpl0.getChildNodeSize();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      assertTrue(nodeTreeWalkerImpl1.equals((Object)nodeTreeWalkerImpl0));
      
      nodeTreeWalkerImpl0.setParentNode(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl1.equals(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl1.setSystemID("");
      nodeTreeWalkerImpl0.hashCode();
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl1.getSystemID();
      boolean boolean0 = nodeTreeWalkerImpl0.equals(nodeTreeWalkerImpl1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      assertTrue(nodeTreeWalkerImpl1.equals((Object)nodeTreeWalkerImpl0));
      
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      Object object0 = new Object();
      boolean boolean0 = nodeTreeWalkerImpl0.equals(nodeTreeWalkerImpl1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.insertChildNode((-293), nodeTreeWalkerImpl1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      Object object0 = new Object();
      nodeTreeWalkerImpl1.equals(object0);
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = (NodeTreeWalkerImpl)nodeTreeWalkerImpl1.getParentNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl3 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl3.getLineNumber();
      nodeTreeWalkerImpl3.isOnTemplate();
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl3.getChildNodeSize();
      nodeTreeWalkerImpl2.equals(nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl2.hashCode();
      nodeTreeWalker0.clearChildNodes();
      assertEquals(0, nodeTreeWalker0.getChildNodeSize());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      assertTrue(nodeTreeWalkerImpl1.equals((Object)nodeTreeWalkerImpl0));
      
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      boolean boolean0 = nodeTreeWalkerImpl1.equals(nodeTreeWalkerImpl0);
      assertFalse(boolean0);
      
      nodeTreeWalkerImpl0.hashCode();
      assertFalse(nodeTreeWalkerImpl0.equals((Object)nodeTreeWalkerImpl1));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      Object object0 = new Object();
      nodeTreeWalkerImpl1.equals(object0);
      NodeTreeWalker nodeTreeWalker1 = nodeTreeWalkerImpl1.getParentNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl2.getLineNumber();
      Object object1 = new Object();
      Object object2 = new Object();
      nodeTreeWalkerImpl1.equals(object2);
      nodeTreeWalkerImpl2.getParentNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl3 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl3.getLineNumber();
      nodeTreeWalkerImpl2.isOnTemplate();
      nodeTreeWalker1.getChildNodeSize();
      nodeTreeWalkerImpl2.iterateChildNode();
      QName qName0 = null;
      try {  
      qName0 = CONST_IMPL.QM_CACHE_CONTROL;
      } catch(NoClassDefFoundError e) {}
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl0);
      int int0 = nodeTreeWalkerImpl0.getChildNodeSize();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory0);
      int int0 = nodeTreeWalkerImpl0.getChildNodeSize();
      assertEquals(0, int0);
      
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      boolean boolean0 = nodeTreeWalkerImpl1.equals(nodeTreeWalkerImpl0);
      assertTrue(boolean0);
      
      nodeTreeWalkerImpl0.hashCode();
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl1.getSystemID();
      assertTrue(nodeTreeWalkerImpl1.equals((Object)nodeTreeWalkerImpl0));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory0);
      nodeTreeWalkerImpl0.equals(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.clearChildNodes();
      assertFalse(nodeTreeWalkerImpl0.isOnTemplate());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.getParentNode();
      nodeTreeWalkerImpl0.removeChildNode((NodeTreeWalker) null);
      nodeTreeWalkerImpl0.equals(object0);
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl0.getChildNodeSize();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.isOnTemplate();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl2.insertChildNode(0, nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl2.hashCode();
      nodeTreeWalkerImpl2.iterateChildNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl3 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl3.getChildNodeSize();
      nodeTreeWalkerImpl2.iterateChildNode();
      QName qName0 = null;
      try {  
      qName0 = CONST_IMPL.QM_CACHE_CONTROL;
      } catch(NoClassDefFoundError e) {}
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl0);
      Iterator<NodeTreeWalker> iterator0 = nodeTreeWalkerImpl0.iterateChildNode();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setParentNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.clearChildNodes();
      assertEquals(0, nodeTreeWalkerImpl0.getChildNodeSize());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl0.hashCode();
      Iterator<NodeTreeWalker> iterator0 = nodeTreeWalkerImpl0.iterateChildNode();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.equals(object0);
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl0.getChildNodeSize();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.isOnTemplate();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl2.hashCode();
      nodeTreeWalkerImpl2.iterateChildNode();
      Object object1 = new Object();
      FactoryFactory.setContext(object1);
      PageImpl pageImpl0 = null;
      try {
        pageImpl0 = new PageImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.insertChildNode(503, nodeTreeWalkerImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalker0.insertChildNode(0, nodeTreeWalkerImpl1);
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      Object object0 = new Object();
      nodeTreeWalkerImpl1.equals(object0);
      nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalker0.getChildNodeSize();
      assertFalse(nodeTreeWalkerImpl1.equals((Object)nodeTreeWalkerImpl0));
      
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl3 = new NodeTreeWalkerImpl();
      Object object1 = new Object();
      nodeTreeWalkerImpl3.equals(object1);
      nodeTreeWalkerImpl3.hashCode();
      nodeTreeWalkerImpl2.clearChildNodes();
      assertEquals(0, nodeTreeWalkerImpl2.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setLineNumber(6);
      int int0 = 5404;
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl1.insertChildNode(6, nodeTreeWalkerImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      boolean boolean0 = nodeTreeWalkerImpl0.removeChildNode((NodeTreeWalker) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.setSystemID((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      boolean boolean0 = nodeTreeWalkerImpl0.isOnTemplate();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setOnTemplate(true);
      Object object0 = new Object();
      nodeTreeWalkerImpl0.equals(object0);
      nodeTreeWalkerImpl0.isOnTemplate();
      nodeTreeWalkerImpl0.getSystemID();
      int int0 = 0;
      PageImpl pageImpl0 = null;
      try {
        pageImpl0 = new PageImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.getParentNode();
      NodeTreeWalker nodeTreeWalker0 = null;
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.setParentNode((NodeTreeWalker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.setParentNode((NodeTreeWalker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setSystemID("\"nn.@<XO/6rF");
      QName qName0 = null;
      try {  
      qName0 = CONST_IMPL.QM_INJECT;
      } catch(NoClassDefFoundError e) {}
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setSystemID("0!Qv$=!le>P40a{c");
      nodeTreeWalkerImpl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.getChildNodeSize();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setLineNumber(0);
      nodeTreeWalkerImpl0.setOnTemplate(true);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl1.getChildNode(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.insertChildNode((-2317), (NodeTreeWalker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.insertChildNode((-1746), nodeTreeWalkerImpl1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setLineNumber(318);
      int int0 = 5404;
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.insertChildNode((-948), (NodeTreeWalker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.addChildNode((NodeTreeWalker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      Object object0 = new Object();
      nodeTreeWalkerImpl1.equals(object0);
      nodeTreeWalkerImpl1.getParentNode();
      NodeTreeWalkerImpl nodeTreeWalkerImpl2 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl2.getLineNumber();
      nodeTreeWalkerImpl2.isOnTemplate();
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl2.getChildNodeSize();
      nodeTreeWalkerImpl0.isOnTemplate();
      nodeTreeWalkerImpl2.iterateChildNode();
      Object object1 = new Object();
      FactoryFactory.setContext(object1);
      PageImpl pageImpl0 = null;
      try {
        pageImpl0 = new PageImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setOnTemplate(false);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.findNodeResolver();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.engine.specification.SpecificationImpl
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.clearChildNodes();
      assertNull(nodeTreeWalkerImpl0.getSystemID());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl0.iterateChildNode();
      nodeTreeWalkerImpl0.setOnTemplate(false);
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory0);
      nodeTreeWalkerImpl0.equals(object0);
      nodeTreeWalkerImpl0.clearChildNodes();
      nodeTreeWalkerImpl0.getLineNumber();
      nodeTreeWalkerImpl0.clearChildNodes();
      PageImpl pageImpl0 = null;
      try {
        pageImpl0 = new PageImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      int int0 = nodeTreeWalkerImpl0.getLineNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl0.getParentNode();
      assertNull(nodeTreeWalker0);
      
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode((-646));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.equals(object0);
      nodeTreeWalkerImpl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      boolean boolean0 = nodeTreeWalkerImpl1.equals(nodeTreeWalkerImpl0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Iterator<NodeTreeWalker> iterator0 = nodeTreeWalkerImpl0.iterateChildNode();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      Object object0 = new Object();
      nodeTreeWalkerImpl0.equals(object0);
      FactoryFactory.release();
      nodeTreeWalkerImpl0.iterateChildNode();
      QName qName0 = null;
      try {  
      qName0 = CONST_IMPL.QM_CACHE_CONTROL;
      } catch(NoClassDefFoundError e) {}
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.getSystemID();
      Iterator<NodeTreeWalker> iterator0 = nodeTreeWalkerImpl0.iterateChildNode();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.setLineNumber(2);
      assertEquals(2, nodeTreeWalkerImpl0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory factoryFactory1 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory1);
      FactoryFactory.setInstance(factoryFactory0);
      nodeTreeWalkerImpl0.kill();
      FactoryFactory.setContext(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl0.hashCode();
      nodeTreeWalkerImpl0.setLineNumber(0);
      nodeTreeWalkerImpl0.getSystemID();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode(512);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.findNodeResolver();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.engine.specification.SpecificationImpl
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.addChildNode(nodeTreeWalkerImpl0);
      nodeTreeWalkerImpl1.setSystemID("%694:v -");
      nodeTreeWalkerImpl1.iterateChildNode();
      nodeTreeWalkerImpl1.removeChildNode(nodeTreeWalkerImpl0);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl1.getChildNode(2915);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl1.setParentNode(nodeTreeWalkerImpl0);
      NodeTreeWalker nodeTreeWalker0 = nodeTreeWalkerImpl1.getParentNode();
      nodeTreeWalkerImpl0.addChildNode(nodeTreeWalker0);
      nodeTreeWalkerImpl0.getLineNumber();
      nodeTreeWalkerImpl0.getChildNodeSize();
      // Undeclared exception!
      try { 
        nodeTreeWalker0.getChildNode(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      int int0 = 609;
      NodeTreeWalker nodeTreeWalker0 = null;
      nodeTreeWalkerImpl0.removeChildNode((NodeTreeWalker) null);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode(34);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      NodeTreeWalkerImpl nodeTreeWalkerImpl1 = new NodeTreeWalkerImpl();
      nodeTreeWalkerImpl0.removeChildNode(nodeTreeWalkerImpl1);
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode(2350);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      NodeTreeWalkerImpl nodeTreeWalkerImpl0 = new NodeTreeWalkerImpl();
      // Undeclared exception!
      try { 
        nodeTreeWalkerImpl0.getChildNode(2416);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.NodeTreeWalkerImpl", e);
      }
  }
}
