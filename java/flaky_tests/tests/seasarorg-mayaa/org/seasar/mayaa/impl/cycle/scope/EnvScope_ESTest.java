/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 02:09:33 GMT 2022
 */

package org.seasar.mayaa.impl.cycle.scope;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.cycle.scope.EnvScope;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EnvScope_ESTest extends EnvScope_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      // Undeclared exception!
      try { 
        envScope0.hasAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      // Undeclared exception!
      try { 
        envScope0.hasAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      // Undeclared exception!
      try { 
        envScope0.getAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      // Undeclared exception!
      try { 
        envScope0.getAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      Object object0 = envScope0.getAttribute("+kL_:=pLiJ%09<");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      boolean boolean0 = envScope0.hasAttribute("+kL_:=pLiJ%09<");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      Iterator<String> iterator0 = envScope0.iterateAttributeNames();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EnvScope envScope0 = new EnvScope();
      String string0 = envScope0.getScopeName();
      assertEquals("env", string0);
  }
}
