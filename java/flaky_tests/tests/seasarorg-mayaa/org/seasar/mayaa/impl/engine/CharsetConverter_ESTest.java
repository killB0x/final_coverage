/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:26:42 GMT 2022
 */

package org.seasar.mayaa.impl.engine;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.engine.CharsetConverter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharsetConverter_ESTest extends CharsetConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = CharsetConverter.encodingToCharset("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = CharsetConverter.charsetToEncoding((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharsetConverter.extractEncoding("obz{~");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.engine.CharsetConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharsetConverter.convertContentType("org.seasar.mayaa.impl.engine.CharsetConverter");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.engine.CharsetConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CharsetConverter.setEnabled(true);
      String string0 = CharsetConverter.encodingToCharset("Windows-31J");
      assertEquals("Shift_JIS", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CharsetConverter.setEnabled(true);
      String string0 = CharsetConverter.encodingToCharset((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharsetConverter.setEnabled(true);
      String string0 = CharsetConverter.charsetToEncoding("Shift_JIS");
      assertEquals("Windows-31J", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = CharsetConverter.charsetToEncoding("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CharsetConverter.setEnabled(true);
      String string0 = CharsetConverter.charsetToEncoding("lwg1p3q[y%T_L`=");
      assertEquals("lwg1p3q[y%T_L`=", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CharsetConverter charsetConverter0 = new CharsetConverter();
  }
}
