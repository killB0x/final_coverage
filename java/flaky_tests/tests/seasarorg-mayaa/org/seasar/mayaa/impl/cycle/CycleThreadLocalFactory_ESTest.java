/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:37:18 GMT 2022
 */

package org.seasar.mayaa.impl.cycle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory;
import org.seasar.mayaa.impl.cycle.DefaultCycleLocalInstantiator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CycleThreadLocalFactory_ESTest extends CycleThreadLocalFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      CycleThreadLocalFactory.set(defaultCycleLocalInstantiator0, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      Object object0 = new Object();
      CycleThreadLocalFactory.set(defaultCycleLocalInstantiator0, object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CycleThreadLocalFactory.InstanceKey cycleThreadLocalFactory_InstanceKey0 = new CycleThreadLocalFactory.InstanceKey("", (Object) null);
      cycleThreadLocalFactory_InstanceKey0.equals((Object) null);
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) cycleThreadLocalFactory_InstanceKey0;
      objectArray0[2] = object1;
      objectArray0[3] = null;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) cycleThreadLocalFactory_InstanceKey0;
      objectArray0[6] = object1;
      objectArray0[7] = object0;
      objectArray0[8] = object0;
      // Undeclared exception!
      try { 
        CycleThreadLocalFactory.get((Object) null, objectArray0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleThreadLocalFactory.cycleLocalFinalize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CycleThreadLocalFactory.getThreadLocalMap();
      CycleThreadLocalFactory.getThreadLocalMap();
      CycleThreadLocalFactory.getThreadLocalMap();
      CycleThreadLocalFactory.cycleLocalInitialize();
      String string0 = "";
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      Object[] objectArray0 = null;
      // Undeclared exception!
      try { 
        CycleThreadLocalFactory.get(defaultCycleLocalInstantiator0, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // inistantiator unknown. key = org.seasar.mayaa.impl.cycle.DefaultCycleLocalInstantiator@5
         //
         verifyException("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CycleThreadLocalFactory.InstanceKey cycleThreadLocalFactory_InstanceKey0 = new CycleThreadLocalFactory.InstanceKey("", (Object) null);
      Object[] objectArray0 = new Object[7];
      objectArray0[1] = (Object) cycleThreadLocalFactory_InstanceKey0;
      CycleThreadLocalFactory.InstanceKey cycleThreadLocalFactory_InstanceKey1 = new CycleThreadLocalFactory.InstanceKey("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory$1", objectArray0[1]);
      cycleThreadLocalFactory_InstanceKey1.equals(objectArray0[1]);
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator1 = new DefaultCycleLocalInstantiator();
      CycleThreadLocalFactory.set(defaultCycleLocalInstantiator0, defaultCycleLocalInstantiator1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      CycleThreadLocalFactory.InstanceKey cycleThreadLocalFactory_InstanceKey0 = new CycleThreadLocalFactory.InstanceKey("", defaultCycleLocalInstantiator0);
      String string0 = cycleThreadLocalFactory_InstanceKey0.getKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      CycleThreadLocalFactory.InstanceKey cycleThreadLocalFactory_InstanceKey0 = new CycleThreadLocalFactory.InstanceKey("", object0);
      Object object1 = cycleThreadLocalFactory_InstanceKey0.getOwner();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      CycleThreadLocalFactory.set(object0, object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      CycleThreadLocalFactory.InstanceKey cycleThreadLocalFactory_InstanceKey0 = new CycleThreadLocalFactory.InstanceKey("org.sea{ar.mayaa.immlcyc]].CyclKThreadLocalFactory", defaultCycleLocalInstantiator0);
      CycleThreadLocalFactory.InstanceKey cycleThreadLocalFactory_InstanceKey1 = new CycleThreadLocalFactory.InstanceKey("org.sea{ar.mayaa.immlcyc]].CyclKThreadLocalFactory", defaultCycleLocalInstantiator0);
      cycleThreadLocalFactory_InstanceKey0.equals(cycleThreadLocalFactory_InstanceKey1);
      CycleThreadLocalFactory.clearLocalVariable(defaultCycleLocalInstantiator0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      CycleThreadLocalFactory.registFactory("i/ (GF%&6?9k]ap", defaultCycleLocalInstantiator0);
  }
}
