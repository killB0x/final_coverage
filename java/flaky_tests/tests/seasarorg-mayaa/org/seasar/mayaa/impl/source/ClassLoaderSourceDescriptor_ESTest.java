/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:18:50 GMT 2022
 */

package org.seasar.mayaa.impl.source;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.ChronoLocalDate;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.seasar.mayaa.FactoryFactory;
import org.seasar.mayaa.impl.builder.library.scanner.SourceAlias;
import org.seasar.mayaa.impl.source.ClassLoaderSourceDescriptor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassLoaderSourceDescriptor_ESTest extends ClassLoaderSourceDescriptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      boolean boolean0 = classLoaderSourceDescriptor0.needPrepareURL();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      classLoaderSourceDescriptor0.setNeighborClass(class0);
      Class<?> class1 = classLoaderSourceDescriptor0.getNeighborClass();
      assertTrue(class1.isInterface());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.prepareURL();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      MockDate mockDate0 = new MockDate();
      classLoaderSourceDescriptor0.setTimestamp(mockDate0);
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.needPrepareURL();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.getInputStream();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory0);
      FactoryFactory.setContext(classLoaderSourceDescriptor0);
      MockDate mockDate0 = new MockDate();
      classLoaderSourceDescriptor0.setTimestamp(mockDate0);
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.provider.ProviderUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      Object object0 = new Object();
      FactoryFactory.setContext(object0);
      MockDate mockDate0 = new MockDate();
      classLoaderSourceDescriptor0.setTimestamp(mockDate0);
      FactoryFactory factoryFactory0 = mock(FactoryFactory.class, new ViolatedAssumptionAnswer());
      FactoryFactory.setInstance(factoryFactory0);
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.exists();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.provider.ProviderUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      MockDate mockDate0 = new MockDate();
      classLoaderSourceDescriptor0.setTimestamp(mockDate0);
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.exists();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.exists();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      String string0 = classLoaderSourceDescriptor0.getSystemID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      MockDate mockDate0 = new MockDate(0, 823, 1, 1, 1);
      classLoaderSourceDescriptor0.setTimestamp(mockDate0);
      Date date0 = classLoaderSourceDescriptor0.getTimestamp();
      assertEquals("Thu Aug 01 01:01:00 GMT 1968", date0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.setTimestamp((Date) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.source.ClassLoaderSourceDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      MockDate mockDate0 = new MockDate(0, 823, 1, 1, 1);
      classLoaderSourceDescriptor0.setTimestamp(mockDate0);
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.getInputStream();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.setSystemID("/META-INF");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.source.ForbiddenPathException
         //
         verifyException("org.seasar.mayaa.impl.source.ClassLoaderSourceDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.setSystemID("ly(7R{ZP\"(-Po^d{(");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.source.ClassLoaderSourceDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.setSystemID((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.source.ClassLoaderSourceDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      String string0 = classLoaderSourceDescriptor0.getRoot();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      classLoaderSourceDescriptor0.setAlias((SourceAlias) null);
      assertEquals("", classLoaderSourceDescriptor0.getRoot());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.setRoot("/META-INF");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.source.ClassLoaderSourceDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      Class<?> class0 = classLoaderSourceDescriptor0.getNeighborClass();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      // Undeclared exception!
      try { 
        classLoaderSourceDescriptor0.getTimestamp();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      Class<Object> class0 = Object.class;
      classLoaderSourceDescriptor0.setNeighborClass(class0);
      Class<?> class1 = classLoaderSourceDescriptor0.getNeighborClass();
      assertFalse(class1.isEnum());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassLoaderSourceDescriptor classLoaderSourceDescriptor0 = new ClassLoaderSourceDescriptor();
      SourceAlias sourceAlias0 = classLoaderSourceDescriptor0.getAlias();
      assertNull(sourceAlias0);
  }
}
