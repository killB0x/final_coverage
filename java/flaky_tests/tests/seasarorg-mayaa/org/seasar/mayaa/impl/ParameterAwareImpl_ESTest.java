/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:40:22 GMT 2022
 */

package org.seasar.mayaa.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.ParameterAwareImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParameterAwareImpl_ESTest extends ParameterAwareImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      parameterAwareImpl0.setLineNumber(0);
      assertEquals(0, parameterAwareImpl0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      // Undeclared exception!
      try { 
        parameterAwareImpl0.setParameter("n.8_#OF)<2@8C?P", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.ParameterAwareImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      // Undeclared exception!
      try { 
        parameterAwareImpl0.getParameter("<l/LE4%");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.ParameterAwareImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      parameterAwareImpl0.setLineNumber((-4689));
      assertEquals(0, parameterAwareImpl0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      parameterAwareImpl0.setLineNumber(3);
      int int0 = parameterAwareImpl0.getLineNumber();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      Iterator<String> iterator0 = parameterAwareImpl0.iterateParameterNames();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      boolean boolean0 = parameterAwareImpl0.isOnTemplate();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      // Undeclared exception!
      try { 
        parameterAwareImpl0.setSystemID((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.ParameterAwareImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      parameterAwareImpl0.setOnTemplate(true);
      boolean boolean0 = parameterAwareImpl0.isOnTemplate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      String string0 = parameterAwareImpl0.getSystemID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParameterAwareImpl parameterAwareImpl0 = new ParameterAwareImpl();
      int int0 = parameterAwareImpl0.getLineNumber();
      assertEquals(0, int0);
  }
}
