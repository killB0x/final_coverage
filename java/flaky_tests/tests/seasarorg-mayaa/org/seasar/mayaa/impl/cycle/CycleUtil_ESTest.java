/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 01:23:11 GMT 2022
 */

package org.seasar.mayaa.impl.cycle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.cycle.CycleUtil;
import org.seasar.mayaa.impl.cycle.DefaultCycleLocalInstantiator;
import org.seasar.mayaa.impl.cycle.StandardScope;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CycleUtil_ESTest extends CycleUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.setAttribute("I&Mt4*KcC}<", "I&Mt4*KcC}<", "I&Mt4*KcC}<");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.removeAttribute("_current_", "_current_");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.getServiceCycle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.findStandardAttributeScope("reportDuplicatedID");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.cycle.CycleUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.getFactory();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.getPageScope();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = CycleUtil.isDraftWriting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = CycleUtil.isInitialized();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.cycleFinalize();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.clearLocalVariable("Q:_P7q^@Qo?zy8WL", "Q:_P7q^@Qo?zy8WL");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.setLocalVariable("ReferenceCache Sweep Monitor", "ReferenceCache Sweep Monitor", "ReferenceCache Sweep Monitor");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        CycleUtil.getGlobalVariable("_e)y`e?\"D ;_`OAZ#", objectArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultCycleLocalInstantiator defaultCycleLocalInstantiator0 = new DefaultCycleLocalInstantiator();
      CycleUtil.registVariableFactory("", defaultCycleLocalInstantiator0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.clearGlobalVariable("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        CycleUtil.initialize(object0, object0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.getResponse();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.getCurrentPageScope();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.getRequestScope();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        CycleUtil.getLocalVariable("", "", objectArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CycleUtil.beginDraftWriting();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.getAttribute("org.seasar.mayaa.impl.cycle.web.ResponseImpl", "org.seasar.mayaa.impl.cycle.web.ResponseImpl");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.setGlobalVariable("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // instance is null
         //
         verifyException("org.seasar.mayaa.FactoryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CycleUtil.endDraftWriting();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        CycleUtil.addStandardScope("$");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.seasar.mayaa.impl.util.StringUtil
         //
         verifyException("org.seasar.mayaa.impl.cycle.StandardScope", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StandardScope standardScope0 = CycleUtil.getStandardScope();
      assertEquals(4, standardScope0.size());
  }
}
