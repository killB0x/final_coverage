/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 02:28:20 GMT 2022
 */

package org.seasar.mayaa.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.seasar.mayaa.impl.CycleLocalVariablesImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CycleLocalVariablesImpl_ESTest extends CycleLocalVariablesImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      cycleLocalVariablesImpl0.clearGlobalVariable("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      // Undeclared exception!
      try { 
        cycleLocalVariablesImpl0.setVariable((String) null, (Object) null, cycleLocalVariablesImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory$InstanceKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      cycleLocalVariablesImpl0.setGlobalVariable((String) null, (Object) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        cycleLocalVariablesImpl0.getVariable((String) null, (Object) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory$InstanceKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      // Undeclared exception!
      try { 
        cycleLocalVariablesImpl0.getVariable("-Ik++)%f:", "-Ik++)%f:", (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // inistantiator unknown. key = org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory$InstanceKey@1749a302
         //
         verifyException("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      // Undeclared exception!
      try { 
        cycleLocalVariablesImpl0.clearVariable((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory$InstanceKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      cycleLocalVariablesImpl0.setGlobalVariable("", "OdRT;KH$nC");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      Object object0 = new Object();
      cycleLocalVariablesImpl0.setVariable("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory", (Object) null, object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      cycleLocalVariablesImpl0.clearVariable(".CwWp", (Object) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      Object[] objectArray0 = new Object[7];
      cycleLocalVariablesImpl0.getVariable("org.seasar.mayaa.impl.cycle.CycleThreadLocalFactory", (Object) null, objectArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      cycleLocalVariablesImpl0.clearGlobalVariable((String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CycleLocalVariablesImpl cycleLocalVariablesImpl0 = new CycleLocalVariablesImpl();
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        cycleLocalVariablesImpl0.getGlobalVariable((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
