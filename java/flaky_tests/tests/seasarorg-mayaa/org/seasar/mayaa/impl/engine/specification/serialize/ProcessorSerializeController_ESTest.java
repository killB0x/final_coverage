/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 02:12:13 GMT 2022
 */

package org.seasar.mayaa.impl.engine.specification.serialize;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.seasar.mayaa.engine.processor.ProcessorTreeWalker;
import org.seasar.mayaa.engine.specification.serialize.ProcessorResolveListener;
import org.seasar.mayaa.impl.engine.specification.serialize.ProcessorSerializeController;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProcessorSerializeController_ESTest extends ProcessorSerializeController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProcessorResolveListener processorResolveListener0 = mock(ProcessorResolveListener.class, new ViolatedAssumptionAnswer());
      ProcessorSerializeController.ProcessorListener processorSerializeController_ProcessorListener0 = new ProcessorSerializeController.ProcessorListener("`\u0003o9|B6AI#:bf:&O,", processorResolveListener0);
      processorSerializeController_ProcessorListener0.release();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ProcessorSerializeController processorSerializeController0 = new ProcessorSerializeController();
      processorSerializeController0.registResolveProcessorListener("sqV6ZvOJ", (ProcessorResolveListener) null);
      // Undeclared exception!
      try { 
        processorSerializeController0.release();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.serialize.ProcessorSerializeController", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ProcessorSerializeController processorSerializeController0 = new ProcessorSerializeController();
      processorSerializeController0.registResolveProcessorListener("", (ProcessorResolveListener) null);
      // Undeclared exception!
      try { 
        processorSerializeController0.doNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.seasar.mayaa.impl.engine.specification.serialize.ProcessorSerializeController", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ProcessorSerializeController processorSerializeController0 = new ProcessorSerializeController();
      processorSerializeController0.doNotify();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ProcessorSerializeController processorSerializeController0 = new ProcessorSerializeController();
      ProcessorResolveListener processorResolveListener0 = mock(ProcessorResolveListener.class, new ViolatedAssumptionAnswer());
      processorSerializeController0.registResolveProcessorListener("U3~yhaEELSps7zu=", processorResolveListener0);
      processorSerializeController0.release();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ProcessorSerializeController processorSerializeController0 = new ProcessorSerializeController();
      processorSerializeController0.processorLoaded((String) null, (ProcessorTreeWalker) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ProcessorSerializeController processorSerializeController0 = new ProcessorSerializeController();
      processorSerializeController0.init();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ProcessorSerializeController processorSerializeController0 = new ProcessorSerializeController();
      ProcessorTreeWalker processorTreeWalker0 = processorSerializeController0.getProcessor("d{xuW4iO9P9");
      assertNull(processorTreeWalker0);
  }
}
