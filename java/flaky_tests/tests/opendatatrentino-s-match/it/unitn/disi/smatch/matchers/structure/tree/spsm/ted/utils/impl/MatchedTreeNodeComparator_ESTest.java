/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 08:59:45 GMT 2022
 */

package it.unitn.disi.smatch.matchers.structure.tree.spsm.ted.utils.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.unitn.disi.smatch.data.mappings.HashMapping;
import it.unitn.disi.smatch.data.mappings.IMapping;
import it.unitn.disi.smatch.data.mappings.IMappingElement;
import it.unitn.disi.smatch.data.mappings.ReversingMappingElement;
import it.unitn.disi.smatch.data.trees.Context;
import it.unitn.disi.smatch.data.trees.INode;
import it.unitn.disi.smatch.data.trees.Node;
import it.unitn.disi.smatch.matchers.structure.tree.spsm.ted.utils.impl.MatchedTreeNodeComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MatchedTreeNodeComparator_ESTest extends MatchedTreeNodeComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      Context context0 = new Context();
      INode iNode0 = context0.createRoot();
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(iNode0, iNode0, '\u001A');
      hashMapping0.add((IMappingElement<INode>) reversingMappingElement0);
      int int0 = matchedTreeNodeComparator0.compare(iNode0, iNode0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context context0 = new Context();
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      INode iNode0 = context0.createRoot();
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      INode iNode1 = context0.createNode("K");
      int int0 = matchedTreeNodeComparator0.compare(iNode1, iNode0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator((IMapping<INode>) null);
      Node node0 = new Node();
      // Undeclared exception!
      try { 
        matchedTreeNodeComparator0.compare((INode) node0, (INode) node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.smatch.matchers.structure.tree.spsm.ted.utils.impl.MatchedTreeNodeComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context context0 = new Context();
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      INode iNode0 = context0.createRoot();
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(iNode0, iNode0, '!');
      hashMapping0.add((IMappingElement<INode>) reversingMappingElement0);
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      int int0 = matchedTreeNodeComparator0.compare(iNode0, iNode0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      Node node0 = new Node();
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(node0, node0, '<');
      hashMapping0.add((IMappingElement<INode>) reversingMappingElement0);
      int int0 = matchedTreeNodeComparator0.compare((INode) node0, (INode) node0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Context context0 = new Context();
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      INode iNode0 = context0.createRoot();
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(iNode0, iNode0, '>');
      hashMapping0.add((IMappingElement<INode>) reversingMappingElement0);
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      int int0 = matchedTreeNodeComparator0.compare(iNode0, iNode0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      Context context0 = new Context();
      INode iNode0 = context0.createRoot();
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(iNode0, iNode0, '=');
      hashMapping0.add((IMappingElement<INode>) reversingMappingElement0);
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      int int0 = matchedTreeNodeComparator0.compare(iNode0, iNode0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Context context0 = new Context();
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      INode iNode0 = context0.createRoot();
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      // Undeclared exception!
      try { 
        matchedTreeNodeComparator0.compare((INode) null, iNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.smatch.matchers.structure.tree.spsm.ted.utils.impl.MatchedTreeNodeComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HashMapping<INode> hashMapping0 = new HashMapping<INode>();
      MatchedTreeNodeComparator matchedTreeNodeComparator0 = new MatchedTreeNodeComparator(hashMapping0);
      Node node0 = new Node();
      // Undeclared exception!
      try { 
        matchedTreeNodeComparator0.compare((INode) node0, (INode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.smatch.matchers.structure.tree.spsm.ted.utils.impl.MatchedTreeNodeComparator", e);
      }
  }
}
