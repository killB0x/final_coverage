/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 09:11:29 GMT 2022
 */

package it.unitn.disi.smatch.matchers.structure.tree.spsm.ted.utils.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import it.unitn.disi.smatch.matchers.structure.tree.spsm.ted.utils.impl.WorstCaseDistanceConversion;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WorstCaseDistanceConversion_ESTest extends WorstCaseDistanceConversion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WorstCaseDistanceConversion worstCaseDistanceConversion0 = new WorstCaseDistanceConversion();
      worstCaseDistanceConversion0.setWorstCaseDistance(1.0);
      double double0 = worstCaseDistanceConversion0.convert((-1114.0055199643));
      assertEquals(1.0, worstCaseDistanceConversion0.getWorstCaseDistance(), 0.01);
      assertEquals(1115.0055199643, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WorstCaseDistanceConversion worstCaseDistanceConversion0 = new WorstCaseDistanceConversion((-1.0));
      double double0 = worstCaseDistanceConversion0.getWorstCaseDistance();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WorstCaseDistanceConversion worstCaseDistanceConversion0 = new WorstCaseDistanceConversion();
      worstCaseDistanceConversion0.setWorstCaseDistance(2564.850154438);
      double double0 = worstCaseDistanceConversion0.convert(2564.850154438);
      assertEquals(2564.850154438, worstCaseDistanceConversion0.getWorstCaseDistance(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WorstCaseDistanceConversion worstCaseDistanceConversion0 = new WorstCaseDistanceConversion();
      double double0 = worstCaseDistanceConversion0.convert((-1114.0055199643));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WorstCaseDistanceConversion worstCaseDistanceConversion0 = new WorstCaseDistanceConversion();
      double double0 = worstCaseDistanceConversion0.convert(2564.850154438);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WorstCaseDistanceConversion worstCaseDistanceConversion0 = new WorstCaseDistanceConversion();
      worstCaseDistanceConversion0.setWorstCaseDistance(1.0);
      double double0 = worstCaseDistanceConversion0.getWorstCaseDistance();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WorstCaseDistanceConversion worstCaseDistanceConversion0 = new WorstCaseDistanceConversion();
      double double0 = worstCaseDistanceConversion0.getWorstCaseDistance();
      assertEquals(0.0, double0, 0.01);
  }
}
