/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 09:04:27 GMT 2022
 */

package it.unitn.disi.smatch.data.mappings;

import org.junit.Test;
import static org.junit.Assert.*;
import it.unitn.disi.smatch.data.mappings.ReversingMappingElement;
import it.unitn.disi.smatch.data.trees.Context;
import it.unitn.disi.smatch.data.trees.INode;
import it.unitn.disi.smatch.data.trees.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReversingMappingElement_ESTest extends ReversingMappingElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Node node0 = new Node("");
      Node node1 = (Node)node0.createChild("");
      node1.setSource(true);
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(node1, node0, 'S');
      assertEquals('S', reversingMappingElement0.getRelation());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Node node0 = new Node("");
      Node node1 = new Node();
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(node0, node1, 'X');
      assertEquals('X', reversingMappingElement0.getRelation());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = new Context();
      INode iNode0 = context0.createRoot("r+)f &Oieqw");
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(iNode0, iNode0, '>');
      assertEquals('<', reversingMappingElement0.getRelation());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Node node0 = new Node();
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement(node0, node0, '<');
      assertEquals('>', reversingMappingElement0.getRelation());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReversingMappingElement reversingMappingElement0 = new ReversingMappingElement((INode) null, (INode) null, '(');
      assertEquals('(', reversingMappingElement0.getRelation());
  }
}
