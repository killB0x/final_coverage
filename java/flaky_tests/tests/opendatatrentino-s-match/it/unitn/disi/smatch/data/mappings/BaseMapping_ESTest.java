/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 09:12:11 GMT 2022
 */

package it.unitn.disi.smatch.data.mappings;

import org.junit.Test;
import static org.junit.Assert.*;
import it.unitn.disi.smatch.data.mappings.HashMapping;
import it.unitn.disi.smatch.data.mappings.MappingElement;
import it.unitn.disi.smatch.data.mappings.ReversingMappingElement;
import it.unitn.disi.smatch.data.trees.Context;
import it.unitn.disi.smatch.data.trees.IContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseMapping_ESTest extends BaseMapping_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Context context0 = new Context();
      Context context1 = new Context();
      HashMapping<Object> hashMapping0 = new HashMapping<Object>(context0, context1);
      IContext iContext0 = hashMapping0.getTargetContext();
      assertNotSame(iContext0, context0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMapping<MappingElement<ReversingMappingElement>> hashMapping0 = new HashMapping<MappingElement<ReversingMappingElement>>();
      hashMapping0.setSimilarity(0.0);
      assertEquals(0.0, hashMapping0.getSimilarity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = new Context();
      context0.createRoot();
      HashMapping<Object> hashMapping0 = new HashMapping<Object>(context0, context0);
      IContext iContext0 = hashMapping0.getTargetContext();
      assertSame(context0, iContext0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context context0 = new Context();
      context0.createRoot();
      HashMapping<Object> hashMapping0 = new HashMapping<Object>(context0, context0);
      IContext iContext0 = hashMapping0.getSourceContext();
      assertSame(context0, iContext0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Context context0 = new Context();
      HashMapping<ReversingMappingElement> hashMapping0 = new HashMapping<ReversingMappingElement>(context0, (IContext) null);
      IContext iContext0 = hashMapping0.getSourceContext();
      assertSame(context0, iContext0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMapping<Object> hashMapping0 = new HashMapping<Object>();
      hashMapping0.similarity = (-1.0);
      double double0 = hashMapping0.getSimilarity();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMapping<Object> hashMapping0 = new HashMapping<Object>();
      hashMapping0.setSimilarity(1.0);
      assertEquals(1.0, hashMapping0.getSimilarity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashMapping<Object> hashMapping0 = new HashMapping<Object>();
      IContext iContext0 = hashMapping0.getTargetContext();
      assertNull(iContext0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HashMapping<Object> hashMapping0 = new HashMapping<Object>();
      IContext iContext0 = hashMapping0.getSourceContext();
      assertNull(iContext0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      HashMapping<Object> hashMapping0 = new HashMapping<Object>();
      double double0 = hashMapping0.getSimilarity();
      assertEquals(0.0, double0, 0.01);
  }
}
