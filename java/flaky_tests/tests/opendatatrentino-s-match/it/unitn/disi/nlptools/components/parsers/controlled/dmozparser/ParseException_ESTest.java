/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 08:52:46 GMT 2022
 */

package it.unitn.disi.nlptools.components.parsers.controlled.dmozparser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.ParseException;
import it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.Token;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseException_ESTest extends ParseException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[7][3];
      int[] intArray1 = new int[7];
      intArray0[6] = intArray1;
      String[] stringArray0 = new String[1];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ParseException.add_escapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseException.add_escapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Token token0 = new Token(0, "z");
      int[][] intArray0 = new int[4][8];
      int[] intArray1 = new int[4];
      intArray1[1] = 10;
      intArray0[1] = intArray1;
      String[] stringArray0 = new String[8];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 10 out of bounds for length 8
         //
         verifyException("it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = ParseException.add_escapes("Mr5y");
      assertEquals("Mr5y", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ParseException.add_escapes("gu/8~H:uBkI)0Lp");
      assertEquals("gu/8~H:uBkI\\u007f)0Lp", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseException.add_escapes("c; (: z'r ~N`1dy");
      assertEquals("c; (: z\\'r ~N`1dy", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ParseException.add_escapes("vA=ughj\"4");
      assertEquals("vA=ughj\\\"4", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ParseException.add_escapes("\r");
      assertEquals("\\r", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ParseException.add_escapes("\n");
      assertEquals("\\n", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = ParseException.add_escapes("\t");
      assertEquals("\\t", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ParseException.add_escapes("o\b39zBeO/;?|");
      assertEquals("o\\b39zBeO/;?|", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[7][3];
      token0.next = token0;
      String[] stringArray0 = new String[1];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[1][3];
      token0.image = "eV!";
      token0.next = token0;
      token0.kind = 4;
      String[] stringArray0 = new String[12];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Token token0 = new Token(1);
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[7];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseException parseException0 = new ParseException(":^tN");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParseException parseException0 = new ParseException();
  }
}
