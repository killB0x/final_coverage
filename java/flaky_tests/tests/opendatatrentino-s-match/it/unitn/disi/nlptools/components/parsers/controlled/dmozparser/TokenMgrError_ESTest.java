/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 08:54:43 GMT 2022
 */

package it.unitn.disi.nlptools.components.parsers.controlled.dmozparser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.TokenMgrError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_ESTest extends TokenMgrError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("'`)4f?m{B_", (-2174));
      String string0 = tokenMgrError0.getMessage();
      assertEquals("'`)4f?m{B_", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("", 1793);
      String string0 = tokenMgrError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalError(false, '\t', '\t', '\t', (String) null, '\t');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(true, (-2565), (-2565), (-2565), (String) null, '/', (-2565));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.unitn.disi.nlptools.components.parsers.controlled.dmozparser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, 1, 1, (-1), "91*Z&Dx9", '\u001E');
      assertEquals("Lexical error at line 1, column -1.  Encountered: \"\\u001e\" (30), after : \"91*Z&Dx9\"", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(true, 1389, (-498), (-1160), "Lexical error at line 4, column 0.  Encountered: <EOF> after : \"Lexical error at line -1, column 1735.  Encountered: <EOF> after : \"fz\\u007f\"\"", 'm');
      assertEquals("Lexical error at line -498, column -1160.  Encountered: <EOF> after : \"Lexical error at line 4, column 0.  Encountered: <EOF> after : \\\"Lexical error at line -1, column 1735.  Encountered: <EOF> after : \\\"fz\\\\u007f\\\"\\\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("i\"Yy >peS'D\"a");
      assertEquals("i\\\"Yy >peS\\'D\\\"a", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(true, 3416, 4, 0, "Lexical error at line -1, column 1735.  Encountered: <EOF> after : \"fz\"", 'm');
      assertEquals("Lexical error at line 4, column 0.  Encountered: <EOF> after : \"Lexical error at line -1, column 1735.  Encountered: <EOF> after : \\\"fz\\u007f\\\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, 15, 15, 15, "o?)", '\r');
      assertEquals("Lexical error at line 15, column 15.  Encountered: \"\\r\" (13), after : \"o?)\"", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, '\f', '\f', '\f', "$B", '\f');
      assertEquals("Lexical error at line 12, column 12.  Encountered: \"\\f\" (12), after : \"$B\"", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, '\n', '\n', '\n', "tRY?:zcrBn#SoTr4Z`#", '\n');
      assertEquals("Lexical error at line 10, column 10.  Encountered: \"\\n\" (10), after : \"tRY?:zcrBn#SoTr4Z`#\"", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, '\b', '\b', '\b', "-R@5yBW=S(1UH6M", '\b');
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, '\u0000', '\u0000', '\u0000', "oe^+lBA~)dX3kYi", '\u0000');
      assertEquals("Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"oe^+lBA~)dX3kYi\"", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, 0, (-1648), (-1), "", 'g', 0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError();
      String string0 = tokenMgrError0.getMessage();
      assertNull(string0);
  }
}
