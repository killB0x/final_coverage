/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 10:30:40 GMT 2022
 */

package org.bklab.wot.warmonger.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import org.bklab.wot.warmonger.entity.ModEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ModEntity_ESTest extends ModEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("$GgmN", "$GgmN", "mZrT?(?b({BH;I6", "$GgmN", ")fC;r|-uDE6VC`}", ">oB%}~$g<N", (String) null, (String) null, ":#|> hX<");
      assertEquals(")fC;r|-uDE6VC`}", modEntity0.getVersion());
      
      modEntity0.setVersion((String) null);
      modEntity0.getVersion();
      assertEquals("mZrT?(?b({BH;I6", modEntity0.getName());
      assertEquals("$GgmN", modEntity0.getId());
      assertEquals("$GgmN", modEntity0.getIndex());
      assertEquals(">oB%}~$g<N", modEntity0.getDescribe());
      assertEquals("$GgmN", modEntity0.getCompatibility());
      assertEquals(":#|> hX<", modEntity0.getType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", ", describe='", "", ", describe='", "", ", version='", ", describe='", "", "cee6dwUnvoo<119'g");
      String string0 = modEntity0.getVersion();
      assertEquals(", describe='", modEntity0.getCompatibility());
      assertEquals("", string0);
      assertEquals("cee6dwUnvoo<119'g", modEntity0.getType());
      assertEquals(", describe='", modEntity0.getIndex());
      assertEquals("", modEntity0.getId());
      assertEquals("", modEntity0.getFileNames());
      assertEquals(", describe='", modEntity0.getPictureNames());
      assertEquals("", modEntity0.getName());
      assertEquals(", version='", modEntity0.getDescribe());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("?)Gw)Dpf~Qp0z", "?)Gw)Dpf~Qp0z", "m43,X\"8$/bO", "?)Gw)Dpf~Qp0z", "m43,X\"8$/bO", "?)Gw)Dpf~Qp0z", "m43,X\"8$/bO", (String) null, (String) null);
      String string0 = modEntity0.getType();
      assertNull(string0);
      assertEquals("?)Gw)Dpf~Qp0z", modEntity0.getDescribe());
      assertEquals("?)Gw)Dpf~Qp0z", modEntity0.getCompatibility());
      assertEquals("m43,X\"8$/bO", modEntity0.getVersion());
      assertEquals("?)Gw)Dpf~Qp0z", modEntity0.getIndex());
      assertEquals("m43,X\"8$/bO", modEntity0.getPictureNames());
      assertEquals("m43,X\"8$/bO", modEntity0.getName());
      assertEquals("?)Gw)Dpf~Qp0z", modEntity0.getId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity((String) null, (String) null, (String) null, "", "", (String) null, "", "", (String) null);
      modEntity0.setType("");
      String string0 = modEntity0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", "", "", "x1", "ZCT]J6Y6j1?q>nk5h!", "%xb7G3w;3<L& ", "%xb7G3w;3<L& ", "]PkYvt%mm=VDGmXBC4", "");
      String string0 = modEntity0.getPictureNames();
      assertEquals("%xb7G3w;3<L& ", string0);
      assertEquals("", modEntity0.getId());
      assertEquals("%xb7G3w;3<L& ", modEntity0.getDescribe());
      assertEquals("", modEntity0.getType());
      assertEquals("]PkYvt%mm=VDGmXBC4", modEntity0.getFileNames());
      assertEquals("", modEntity0.getName());
      assertEquals("", modEntity0.getIndex());
      assertEquals("ZCT]J6Y6j1?q>nk5h!", modEntity0.getVersion());
      assertEquals("x1", modEntity0.getCompatibility());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("$GgmN", "$GgmN", "mZrT?(?b({BH;I6", "$GgmN", ")fC;r|-uDE6VC`}", ">oB%}~$g<N", (String) null, (String) null, ":#|> hX<");
      modEntity0.setPictureNames("");
      modEntity0.getPictureNames();
      assertEquals(":#|> hX<", modEntity0.getType());
      assertEquals(")fC;r|-uDE6VC`}", modEntity0.getVersion());
      assertEquals("$GgmN", modEntity0.getCompatibility());
      assertEquals("$GgmN", modEntity0.getIndex());
      assertEquals(">oB%}~$g<N", modEntity0.getDescribe());
      assertEquals("mZrT?(?b({BH;I6", modEntity0.getName());
      assertEquals("$GgmN", modEntity0.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("$GgmN", "$GgmN", "mZrT?(?b({BH;I6", "$GgmN", ")fC;r|-uDE6VC`}", ">oB%}~$g<N", (String) null, (String) null, ":#|> hX<");
      assertEquals("mZrT?(?b({BH;I6", modEntity0.getName());
      
      modEntity0.setName((String) null);
      modEntity0.getName();
      assertEquals("$GgmN", modEntity0.getIndex());
      assertEquals("$GgmN", modEntity0.getCompatibility());
      assertEquals("$GgmN", modEntity0.getId());
      assertEquals(">oB%}~$g<N", modEntity0.getDescribe());
      assertEquals(":#|> hX<", modEntity0.getType());
      assertEquals(")fC;r|-uDE6VC`}", modEntity0.getVersion());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity((String) null, (String) null, (String) null, "", "", (String) null, "", "", (String) null);
      modEntity0.setName("");
      String string0 = modEntity0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("r", "r", "r", "r", "r", "r", "r", (String) null, "r");
      String string0 = modEntity0.getIndex();
      assertEquals("r", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("!T03@8%,}x`JMeS+", "M^7)JXQFo_N|wvZA7&s", "", "", "(BRYF\"hCP3Q1Q=9XG%", "T2X%", "Rj7L/x;NA63k=Os1y", "M^7)JXQFo_N|wvZA7&s", "ModEntity{id='");
      assertEquals("M^7)JXQFo_N|wvZA7&s", modEntity0.getIndex());
      
      modEntity0.setIndex("");
      modEntity0.getIndex();
      assertEquals("(BRYF\"hCP3Q1Q=9XG%", modEntity0.getVersion());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("i**:3,f5", "i**:3,f5", "", "", "i**:3,f5", "4", "", ", describe='", "");
      String string0 = modEntity0.getId();
      assertEquals("", modEntity0.getType());
      assertEquals(", describe='", modEntity0.getFileNames());
      assertEquals("i**:3,f5", modEntity0.getVersion());
      assertEquals("i**:3,f5", modEntity0.getIndex());
      assertEquals("4", modEntity0.getDescribe());
      assertEquals("", modEntity0.getPictureNames());
      assertEquals("i**:3,f5", string0);
      assertEquals("", modEntity0.getCompatibility());
      assertEquals("", modEntity0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("ZFLskWzb?tli.", "Os*5%H;#bH7vq]", "ZFLskWzb?tli.", "%T0rT6n>3.# $HA", "%T0rT6n>3.# $HA", "ZFLskWzb?tli.", "%T0rT6n>3.# $HA", "", "ZFLskWzb?tli.");
      String string0 = modEntity0.getFileNames();
      assertEquals("Os*5%H;#bH7vq]", modEntity0.getIndex());
      assertEquals("ZFLskWzb?tli.", modEntity0.getName());
      assertEquals("%T0rT6n>3.# $HA", modEntity0.getVersion());
      assertEquals("%T0rT6n>3.# $HA", modEntity0.getCompatibility());
      assertEquals("%T0rT6n>3.# $HA", modEntity0.getPictureNames());
      assertEquals("ZFLskWzb?tli.", modEntity0.getType());
      assertEquals("ZFLskWzb?tli.", modEntity0.getDescribe());
      assertEquals("", string0);
      assertEquals("ZFLskWzb?tli.", modEntity0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("i**:3,f5", "i**:3,f5", "", "", "i**:3,f5", "4", "", ", describe='", "");
      assertEquals("4", modEntity0.getDescribe());
      
      modEntity0.setDescribe((String) null);
      modEntity0.getDescribe();
      assertEquals("", modEntity0.getCompatibility());
      assertEquals("i**:3,f5", modEntity0.getVersion());
      assertEquals("", modEntity0.getType());
      assertEquals(", describe='", modEntity0.getFileNames());
      assertEquals("i**:3,f5", modEntity0.getId());
      assertEquals("", modEntity0.getName());
      assertEquals("", modEntity0.getPictureNames());
      assertEquals("i**:3,f5", modEntity0.getIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("i**:3,f5", "i**:3,f5", "", "", "i**:3,f5", "4", "", ", describe='", "");
      String string0 = modEntity0.getDescribe();
      assertEquals("", modEntity0.getPictureNames());
      assertEquals("", modEntity0.getName());
      assertEquals("i**:3,f5", modEntity0.getIndex());
      assertEquals("4", string0);
      assertEquals("", modEntity0.getCompatibility());
      assertEquals("i**:3,f5", modEntity0.getVersion());
      assertEquals("", modEntity0.getType());
      assertEquals(", describe='", modEntity0.getFileNames());
      assertEquals("i**:3,f5", modEntity0.getId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("1D:pr1*[6[.3|", "h]qaiL8I", "1D:pr1*[6[.3|", "1D:pr1*[6[.3|", (String) null, (String) null, "loE~6e", (String) null, "=CZJx zwD0<e");
      assertEquals("1D:pr1*[6[.3|", modEntity0.getCompatibility());
      
      ModEntity modEntity1 = modEntity0.setCompatibility((String) null);
      modEntity1.getCompatibility();
      assertEquals("1D:pr1*[6[.3|", modEntity1.getName());
      assertEquals("loE~6e", modEntity1.getPictureNames());
      assertEquals("1D:pr1*[6[.3|", modEntity1.getId());
      assertEquals("=CZJx zwD0<e", modEntity1.getType());
      assertEquals("h]qaiL8I", modEntity1.getIndex());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("i**:3,f5", "i**:3,f5", "", "", "i**:3,f5", "4", "", ", describe='", "");
      assertEquals("", modEntity0.getCompatibility());
      
      ModEntity modEntity1 = modEntity0.setCompatibility("i**:3,f5");
      modEntity1.getCompatibility();
      assertEquals("i**:3,f5", modEntity0.getVersion());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("$GgmN", "$GgmN", "mZrT?(?b({BH;I6", "$GgmN", ")fC;r|-uDE6VC`}", ">oB%}~$g<N", (String) null, (String) null, ":#|> hX<");
      String string0 = modEntity0.getVersion();
      assertEquals(":#|> hX<", modEntity0.getType());
      assertEquals(")fC;r|-uDE6VC`}", string0);
      assertEquals("mZrT?(?b({BH;I6", modEntity0.getName());
      assertEquals(">oB%}~$g<N", modEntity0.getDescribe());
      assertEquals("$GgmN", modEntity0.getCompatibility());
      assertEquals("$GgmN", modEntity0.getIndex());
      assertEquals("$GgmN", modEntity0.getId());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", ", name='", "c=Z>FFcn \"l|Z", "SR*HgPRR%4[u*", "", "", "c=Z>FFcn \"l|Z", " ^&-x", ", name='");
      String string0 = modEntity0.getFileNames();
      assertEquals(" ^&-x", string0);
      assertEquals("SR*HgPRR%4[u*", modEntity0.getCompatibility());
      assertEquals("", modEntity0.getVersion());
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getName());
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getPictureNames());
      assertEquals(", name='", modEntity0.getType());
      assertEquals(", name='", modEntity0.getIndex());
      assertEquals("", modEntity0.getId());
      assertEquals("", modEntity0.getDescribe());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", ", name='", "c=Z>FFcn \"l|Z", "SR*HgPRR%4[u*", "", "", "c=Z>FFcn \"l|Z", " ^&-x", ", name='");
      String string0 = modEntity0.getType();
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getPictureNames());
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getName());
      assertEquals(", name='", modEntity0.getIndex());
      assertEquals("", modEntity0.getDescribe());
      assertEquals(", name='", string0);
      assertEquals("", modEntity0.getVersion());
      assertEquals(" ^&-x", modEntity0.getFileNames());
      assertEquals("", modEntity0.getId());
      assertEquals("SR*HgPRR%4[u*", modEntity0.getCompatibility());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("i**:3,f5", "i**:3,f5", "", "", "i**:3,f5", "4", "", ", describe='", "");
      String string0 = modEntity0.getCompatibility();
      assertEquals("4", modEntity0.getDescribe());
      assertEquals("i**:3,f5", modEntity0.getIndex());
      assertEquals("i**:3,f5", modEntity0.getId());
      assertEquals("", string0);
      assertEquals("i**:3,f5", modEntity0.getVersion());
      assertEquals("", modEntity0.getType());
      assertEquals(", describe='", modEntity0.getFileNames());
      assertEquals("", modEntity0.getName());
      assertEquals("", modEntity0.getPictureNames());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("$GgmN", "$GgmN", "mZrT?(?b({BH;I6", "$GgmN", ")fC;r|-uDE6VC`}", ">oB%}~$g<N", (String) null, (String) null, ":#|> hX<");
      String string0 = modEntity0.getPictureNames();
      assertEquals("$GgmN", modEntity0.getIndex());
      assertEquals(">oB%}~$g<N", modEntity0.getDescribe());
      assertEquals("mZrT?(?b({BH;I6", modEntity0.getName());
      assertNull(string0);
      assertEquals(")fC;r|-uDE6VC`}", modEntity0.getVersion());
      assertEquals("$GgmN", modEntity0.getCompatibility());
      assertEquals(":#|> hX<", modEntity0.getType());
      assertEquals("$GgmN", modEntity0.getId());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("&gclL=E9Ei", "&gclL=E9Ei", "&gclL=E9Ei", "&gclL=E9Ei", "", "", "&gclL=E9Ei", "", "");
      String string0 = modEntity0.getName();
      assertEquals("", modEntity0.getVersion());
      assertEquals("", modEntity0.getType());
      assertEquals("&gclL=E9Ei", modEntity0.getCompatibility());
      assertEquals("", modEntity0.getFileNames());
      assertEquals("&gclL=E9Ei", modEntity0.getIndex());
      assertEquals("", modEntity0.getDescribe());
      assertEquals("&gclL=E9Ei", modEntity0.getPictureNames());
      assertEquals("&gclL=E9Ei", string0);
      assertEquals("&gclL=E9Ei", modEntity0.getId());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", ", name='", "c=Z>FFcn \"l|Z", "SR*HgPRR%4[u*", "", "", "c=Z>FFcn \"l|Z", " ^&-x", ", name='");
      assertEquals("", modEntity0.getId());
      
      modEntity0.setId((String) null);
      modEntity0.getId();
      assertEquals(", name='", modEntity0.getType());
      assertEquals("", modEntity0.getDescribe());
      assertEquals("SR*HgPRR%4[u*", modEntity0.getCompatibility());
      assertEquals("", modEntity0.getVersion());
      assertEquals(" ^&-x", modEntity0.getFileNames());
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getPictureNames());
      assertEquals(", name='", modEntity0.getIndex());
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getName());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", (String) null, "", (String) null, "", "", "", "", "");
      String string0 = modEntity0.getIndex();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", ", name='", "c=Z>FFcn \"l|Z", "SR*HgPRR%4[u*", "", "", "c=Z>FFcn \"l|Z", " ^&-x", ", name='");
      String string0 = modEntity0.getId();
      assertEquals("SR*HgPRR%4[u*", modEntity0.getCompatibility());
      assertEquals("", modEntity0.getVersion());
      assertEquals("", string0);
      assertEquals("", modEntity0.getDescribe());
      assertEquals(", name='", modEntity0.getType());
      assertEquals(" ^&-x", modEntity0.getFileNames());
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getPictureNames());
      assertEquals(", name='", modEntity0.getIndex());
      assertEquals("c=Z>FFcn \"l|Z", modEntity0.getName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("", ", name='", "c=Z>FFcn \"l|Z", "SR*HgPRR%4[u*", "", "", "c=Z>FFcn \"l|Z", " ^&-x", ", name='");
      assertEquals(" ^&-x", modEntity0.getFileNames());
      
      ModEntity modEntity1 = modEntity0.setFileNames((String) null);
      modEntity1.getFileNames();
      assertEquals(", name='", modEntity1.getIndex());
      assertEquals(", name='", modEntity1.getType());
      assertEquals("c=Z>FFcn \"l|Z", modEntity1.getPictureNames());
      assertEquals("c=Z>FFcn \"l|Z", modEntity1.getName());
      assertEquals("", modEntity1.getVersion());
      assertEquals("SR*HgPRR%4[u*", modEntity1.getCompatibility());
      assertEquals("", modEntity1.getId());
      assertEquals("", modEntity1.getDescribe());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("?G_>3^V,~K", "?G_>3^V,~K", "?G_>3^V,~K", "?G_>3^V,~K", "?G_>3^V,~K", "", "?G_>3^V,~K", "?G_>3^V,~K", "");
      String string0 = modEntity0.getDescribe();
      assertEquals("?G_>3^V,~K", modEntity0.getPictureNames());
      assertEquals("?G_>3^V,~K", modEntity0.getName());
      assertEquals("?G_>3^V,~K", modEntity0.getCompatibility());
      assertEquals("?G_>3^V,~K", modEntity0.getIndex());
      assertEquals("", string0);
      assertEquals("?G_>3^V,~K", modEntity0.getFileNames());
      assertEquals("?G_>3^V,~K", modEntity0.getId());
      assertEquals("", modEntity0.getType());
      assertEquals("?G_>3^V,~K", modEntity0.getVersion());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ModEntity modEntity0 = new ModEntity("^F$", "^F$", "^F$", "^F$", "^F$", "^F$", "^F$", "^F$", "^F$");
      String string0 = modEntity0.toString();
      assertEquals("ModEntity{id='^F$', index='^F$', name='^F$', compatibility='^F$', version='^F$', describe='^F$', pictureNames='^F$', fileNames='^F$', type='^F$'}", string0);
  }
}
