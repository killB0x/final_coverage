/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 20:10:35 GMT 2022
 */

package io.fabric8.zjsonpatch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.fabric8.zjsonpatch.Operation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Operation_ESTest extends Operation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Operation operation0 = Operation.fromRfcName("test");
      assertEquals("test", operation0.rfcName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Operation[] operationArray0 = Operation.values();
      assertEquals(6, operationArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Operation operation0 = Operation.valueOf("ADD");
      assertEquals("add", operation0.rfcName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Operation.fromRfcName("io.fabric8.zjsonpatch.JsonPatchApplicationException");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unknown / unsupported operation io.fabric8.zjsonpatch.JsonPatchApplicationException
         //
         verifyException("io.fabric8.zjsonpatch.Operation", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        Operation.fromRfcName((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // rfcName cannot be null
         //
         verifyException("io.fabric8.zjsonpatch.Operation", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Operation operation0 = Operation.fromRfcName("add");
      assertEquals("add", operation0.rfcName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Operation operation0 = Operation.REMOVE;
      String string0 = operation0.rfcName();
      assertEquals("remove", string0);
  }
}
