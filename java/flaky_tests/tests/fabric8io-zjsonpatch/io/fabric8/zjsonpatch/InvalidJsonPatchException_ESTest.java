/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 20:15:46 GMT 2022
 */

package io.fabric8.zjsonpatch;

import org.junit.Test;
import static org.junit.Assert.*;
import io.fabric8.zjsonpatch.InvalidJsonPatchException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvalidJsonPatchException_ESTest extends InvalidJsonPatchException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InvalidJsonPatchException invalidJsonPatchException0 = new InvalidJsonPatchException("");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InvalidJsonPatchException invalidJsonPatchException0 = new InvalidJsonPatchException("", (Throwable) null);
      InvalidJsonPatchException invalidJsonPatchException1 = new InvalidJsonPatchException(invalidJsonPatchException0);
      assertFalse(invalidJsonPatchException1.equals((Object)invalidJsonPatchException0));
  }
}
