/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 12:44:58 GMT 2022
 */

package com.insightml.data.features.stats;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.data.features.stats.AbstractClassificationStatistic;
import com.insightml.data.features.stats.ChiSquare;
import com.insightml.data.features.stats.FeatureStatistics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractClassificationStatistic_ESTest extends AbstractClassificationStatistic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(200);
      abstractClassificationStatistic_ClassFeatureMatrix0.addPair(0, 0);
      double double0 = abstractClassificationStatistic_ClassFeatureMatrix0.classProb(0);
      assertEquals(1, abstractClassificationStatistic_ClassFeatureMatrix0.getN());
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(500);
      ChiSquare chiSquare0 = new ChiSquare(500);
      abstractClassificationStatistic_ClassFeatureMatrix0.addPair(0, 0);
      double double0 = chiSquare0.pointWise(abstractClassificationStatistic_ClassFeatureMatrix0, 0, 0);
      assertEquals(1, abstractClassificationStatistic_ClassFeatureMatrix0.getN());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(2);
      ChiSquare chiSquare0 = new ChiSquare(2);
      double double0 = chiSquare0.pointWise(abstractClassificationStatistic_ClassFeatureMatrix0, 1, 0);
      assertEquals(0, abstractClassificationStatistic_ClassFeatureMatrix0.getN());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(2632);
      abstractClassificationStatistic_ClassFeatureMatrix0.addPair(1, 50);
      double double0 = abstractClassificationStatistic_ClassFeatureMatrix0.featureProb(50);
      assertEquals(1, abstractClassificationStatistic_ClassFeatureMatrix0.getN());
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(500);
      double double0 = abstractClassificationStatistic_ClassFeatureMatrix0.prob(0, 0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(2632);
      double double0 = abstractClassificationStatistic_ClassFeatureMatrix0.featureProb(50);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(200);
      double double0 = abstractClassificationStatistic_ClassFeatureMatrix0.classProb(0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(1991);
      int int0 = abstractClassificationStatistic_ClassFeatureMatrix0.getN();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(2);
      // Undeclared exception!
      try { 
        abstractClassificationStatistic_ClassFeatureMatrix0.featureCount(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("com.insightml.data.features.stats.AbstractClassificationStatistic$ClassFeatureMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(61);
      // Undeclared exception!
      try { 
        abstractClassificationStatistic_ClassFeatureMatrix0.counts((-268), 61);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -268 out of bounds for length 2
         //
         verifyException("com.insightml.data.features.stats.AbstractClassificationStatistic$ClassFeatureMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(200);
      int int0 = abstractClassificationStatistic_ClassFeatureMatrix0.classCount(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChiSquare chiSquare0 = new ChiSquare(1770);
      // Undeclared exception!
      try { 
        chiSquare0.compute((FeatureStatistics) null, 1770, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.data.features.stats.AbstractClassificationStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbstractClassificationStatistic.ClassFeatureMatrix abstractClassificationStatistic_ClassFeatureMatrix0 = new AbstractClassificationStatistic.ClassFeatureMatrix(2632);
      int int0 = abstractClassificationStatistic_ClassFeatureMatrix0.numBins();
      assertEquals(2632, int0);
  }
}
