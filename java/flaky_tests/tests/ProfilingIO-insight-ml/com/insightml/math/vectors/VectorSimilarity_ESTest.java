/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 12:32:07 GMT 2022
 */

package com.insightml.math.vectors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.math.vectors.IVectorSimilarity;
import com.insightml.math.vectors.VectorSimilarity;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VectorSimilarity_ESTest extends VectorSimilarity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer(347);
      Integer integer1 = new Integer(54);
      hashMap0.put(integer1, integer0);
      hashMap0.put(integer0, integer0);
      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();
      hashMap1.put(integer0, integer0);
      IVectorSimilarity<Integer> iVectorSimilarity0 = (IVectorSimilarity<Integer>) mock(IVectorSimilarity.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(iVectorSimilarity0).similarity(any(double[].class) , any(double[].class));
      double double0 = VectorSimilarity.similarity((Map<? extends Integer, ? extends Number>) hashMap0, (Map<? extends Integer, ? extends Number>) hashMap1, iVectorSimilarity0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      IVectorSimilarity<Object> iVectorSimilarity0 = (IVectorSimilarity<Object>) mock(IVectorSimilarity.class, new ViolatedAssumptionAnswer());
      doReturn(1.0).when(iVectorSimilarity0).similarity(any(double[].class) , any(double[].class));
      Integer integer0 = new Integer(0);
      hashMap0.put(integer0, integer0);
      double double0 = VectorSimilarity.similarity((Map<?, ? extends Number>) hashMap0, (Map<?, ? extends Number>) hashMap0, iVectorSimilarity0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      IVectorSimilarity<Object> iVectorSimilarity0 = (IVectorSimilarity<Object>) mock(IVectorSimilarity.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        VectorSimilarity.similarity((Map<?, ? extends Number>) hashMap0, (Map<?, ? extends Number>) hashMap0, iVectorSimilarity0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.String@0000000001                        (null:-1 : VectorSimilarity.java:30)
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer(78);
      hashMap0.put((Integer) null, integer0);
      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();
      hashMap1.put((Integer) null, (Integer) null);
      // Undeclared exception!
      try { 
        VectorSimilarity.similarity((Map<? extends Integer, ? extends Number>) hashMap0, (Map<? extends Integer, ? extends Number>) hashMap1, (IVectorSimilarity<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.math.vectors.VectorSimilarity", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      hashMap0.put((Integer) null, (Integer) null);
      Integer integer0 = new Integer(78);
      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();
      hashMap1.put(integer0, integer0);
      double double0 = VectorSimilarity.similarity((Map<? extends Integer, ? extends Number>) hashMap0, (Map<? extends Integer, ? extends Number>) hashMap1, (IVectorSimilarity<Integer>) null);
      assertEquals(1, hashMap0.size());
      assertEquals(0.0, double0, 0.01);
  }
}
