/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:14:32 GMT 2022
 */

package com.insightml.math.distributions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.math.distributions.GaussianDistribution;
import com.insightml.math.distributions.IContDistribution;
import com.insightml.math.distributions.Mixture;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Mixture_ESTest extends Mixture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[5];
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      iContDistributionArray0[0] = (IContDistribution) gaussianDistribution0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2222.98939029;
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      // Undeclared exception!
      try { 
        mixture0.incompleteLogLikelihood(doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.math.distributions.Mixture", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[0];
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = new double[0];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double double0 = mixture0.incompleteLogLikelihood(doubleArray1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[5];
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      iContDistributionArray0[0] = (IContDistribution) gaussianDistribution0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2222.98939029;
      iContDistributionArray0[1] = (IContDistribution) gaussianDistribution0;
      iContDistributionArray0[2] = (IContDistribution) gaussianDistribution0;
      iContDistributionArray0[3] = (IContDistribution) gaussianDistribution0;
      iContDistributionArray0[4] = (IContDistribution) gaussianDistribution0;
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double[] doubleArray1 = new double[1];
      double double0 = mixture0.incompleteLogLikelihood(doubleArray1);
      assertEquals(7.706608141253752, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[0];
      double[] doubleArray0 = new double[5];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double double0 = mixture0.getWeight(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[1];
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 2.0;
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double double0 = mixture0.getWeight(0);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[8];
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1.999999999E9);
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double double0 = mixture0.getWeight(0);
      assertEquals((-1.999999999E9), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[6];
      double[] doubleArray0 = new double[0];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double double0 = mixture0.bic(doubleArray0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[0];
      double[] doubleArray0 = new double[14];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double double0 = mixture0.bic(doubleArray0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[1];
      double[] doubleArray0 = new double[10];
      double[] doubleArray1 = new double[0];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray1);
      // Undeclared exception!
      try { 
        mixture0.incompleteLogLikelihood(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.insightml.math.distributions.Mixture", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[0];
      Mixture mixture0 = new Mixture(iContDistributionArray0, (double[]) null);
      // Undeclared exception!
      try { 
        mixture0.getWeight((-18));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.math.distributions.Mixture", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[1];
      double[] doubleArray0 = new double[10];
      double[] doubleArray1 = new double[0];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray1);
      // Undeclared exception!
      try { 
        mixture0.bic(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.insightml.math.distributions.Mixture", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[0];
      double[] doubleArray0 = new double[3];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      double double0 = mixture0.incompleteLogLikelihood(doubleArray0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[0];
      double[] doubleArray0 = new double[3];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      // Undeclared exception!
      try { 
        mixture0.getWeight((-2849));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2849 out of bounds for length 3
         //
         verifyException("com.insightml.math.distributions.Mixture", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[1];
      double[] doubleArray0 = new double[10];
      Mixture mixture0 = new Mixture(iContDistributionArray0, doubleArray0);
      // Undeclared exception!
      try { 
        mixture0.bic(doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.math.distributions.Mixture", e);
      }
  }
}
