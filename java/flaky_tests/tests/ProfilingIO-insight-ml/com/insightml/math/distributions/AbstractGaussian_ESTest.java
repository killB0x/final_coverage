/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:03:06 GMT 2022
 */

package com.insightml.math.distributions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.math.distributions.AbstractGaussian;
import com.insightml.math.distributions.GaussianDistribution;
import com.insightml.math.distributions.IContDistribution;
import com.insightml.math.distributions.IGaussian;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractGaussian_ESTest extends AbstractGaussian_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution((-1533.4476502), 0.01);
      // Undeclared exception!
      try { 
        gaussianDistribution0.toStringInterval(1760);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.insightml.math.types.Interval", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(doubleArray0, false);
      // Undeclared exception!
      try { 
        gaussianDistribution0.position(446.96124502, 0.0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.insightml.math.types.Interval", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      double double0 = gaussianDistribution0.significance(0.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(2.0, 2.0);
      // Undeclared exception!
      try { 
        gaussianDistribution0.bhattacharyyaDistance(gaussianDistribution0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/math3/util/FastMath
         //
         verifyException("com.insightml.math.distributions.AbstractGaussian", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(2.0, 2.0);
      double[] doubleArray0 = new double[5];
      GaussianDistribution gaussianDistribution1 = new GaussianDistribution(doubleArray0, true);
      // Undeclared exception!
      try { 
        gaussianDistribution0.bhattacharyyaDistance(gaussianDistribution1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/math3/util/FastMath
         //
         verifyException("com.insightml.math.distributions.AbstractGaussian", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(26.5219528939, Double.POSITIVE_INFINITY);
      double double0 = gaussianDistribution0.significance(26.5219528939);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(365.15, 365.15);
      // Undeclared exception!
      AbstractGaussian.toStringInterval((IContDistribution) gaussianDistribution0, 384.2038073, 384.2038073, 2146502931, 782375774);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      // Undeclared exception!
      AbstractGaussian.toStringInterval((IContDistribution) gaussianDistribution0, (-1179.205148), (-1179.205148), 2146579020, 2146579020);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractGaussian.toStringInterval((IContDistribution) null, 420.46025372376, 420.46025372376, 1715, 1715);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.math.distributions.AbstractGaussian", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(doubleArray0, false);
      // Undeclared exception!
      try { 
        AbstractGaussian.toStringInterval((IContDistribution) gaussianDistribution0, 1732.583, 0.0, 0, (-2530));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2530
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      // Undeclared exception!
      gaussianDistribution0.toStringInterval(415641997);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      // Undeclared exception!
      gaussianDistribution0.toStringInterval(2141621383);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      // Undeclared exception!
      try { 
        gaussianDistribution0.toStringInterval((-3444));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3444
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      // Undeclared exception!
      try { 
        gaussianDistribution0.bhattacharyyaDistance((IGaussian) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.math.distributions.AbstractGaussian", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1472.17;
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(doubleArray0);
      // Undeclared exception!
      try { 
        AbstractGaussian.toStringInterval((IContDistribution) gaussianDistribution0, 1472.17, 566.5785, (-2146342631), 57);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.insightml.math.types.Interval", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      String string0 = AbstractGaussian.toStringInterval((IContDistribution) gaussianDistribution0, 425.8399024604375, 2345.5, 0, 0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[4] = Double.POSITIVE_INFINITY;
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(doubleArray0, false);
      String string0 = AbstractGaussian.toStringInterval((IContDistribution) gaussianDistribution0, (-516.366120703239), Double.POSITIVE_INFINITY, 0, 0);
      assertEquals("\u221E", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      String string0 = gaussianDistribution0.toStringInterval(54);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      double double0 = gaussianDistribution0.significance(4253.6459776132);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      double double0 = gaussianDistribution0.significance((-1.0));
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution();
      // Undeclared exception!
      try { 
        gaussianDistribution0.bhattacharyyaDistance(gaussianDistribution0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/math3/util/FastMath
         //
         verifyException("com.insightml.math.distributions.AbstractGaussian", e);
      }
  }
}
