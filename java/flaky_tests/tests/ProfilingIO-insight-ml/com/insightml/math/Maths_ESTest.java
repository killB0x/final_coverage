/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 12:43:24 GMT 2022
 */

package com.insightml.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.math.Maths;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Maths_ESTest extends Maths_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = Maths.fScore((-424.151422989816), (-2916.908447), 0.0);
      assertEquals((-424.15142298981607), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boolean boolean0 = Maths.sample(0.0, mockRandom0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = Maths.pow(0.0, (-1));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = Maths.pow(0.0, 139);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = Maths.fScore((-424.151422989816), (-424.151422989816), (-424.151422989816));
      assertEquals((-424.151422989816), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Maths.sample((-1012.0), (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.math.Maths", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      Maths.pow(2979, 1073741824);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = Maths.pow((-2916.908447), 1);
      assertEquals((-2916.908447), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = Maths.pow(0.0, 0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = Maths.fScore(1387.1599379572, 0.0, (-697.71446971));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = Maths.fScore(1387.1599379572, 1387.1599379572, 2080.3);
      assertEquals(1387.1599379572, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = Maths.fScore(0L, (-697.71446971), 1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      boolean boolean0 = Maths.sample(301.0, mockRandom0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      boolean boolean0 = Maths.sample((-4388.786397425053), mockRandom0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = Maths.pow((-1), (-1));
      assertEquals((-1.0), double0, 0.01);
  }
}
