/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:36:54 GMT 2022
 */

package com.insightml.evaluation.simulation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.data.FeaturesConfig;
import com.insightml.data.samples.SimpleSample;
import com.insightml.evaluation.functions.Accuracy;
import com.insightml.evaluation.functions.ObjectiveFunction;
import com.insightml.evaluation.simulation.SimulationSetupImpl;
import com.insightml.models.ILearnerPipeline;
import com.insightml.utils.jobs.ThreadedClient;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimulationSetupImpl_ESTest extends SimulationSetupImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer((-3529));
      ThreadedClient threadedClient0 = new ThreadedClient();
      ObjectiveFunction<Accuracy.TrueNegatives, Accuracy.TrueNegatives>[] objectiveFunctionArray0 = (ObjectiveFunction<Accuracy.TrueNegatives, Accuracy.TrueNegatives>[]) Array.newInstance(ObjectiveFunction.class, 3);
      SimulationSetupImpl<SimpleSample, Accuracy.TrueNegatives, Accuracy.TrueNegatives> simulationSetupImpl0 = null;
      try {
        simulationSetupImpl0 = new SimulationSetupImpl<SimpleSample, Accuracy.TrueNegatives, Accuracy.TrueNegatives>("8", (FeaturesConfig<SimpleSample, Accuracy.TrueNegatives>) null, integer0, (ILearnerPipeline<SimpleSample, Accuracy.TrueNegatives>[]) null, threadedClient0, false, objectiveFunctionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-3529));
      ILearnerPipeline<SimpleSample, Accuracy.TrueNegatives>[] iLearnerPipelineArray0 = (ILearnerPipeline<SimpleSample, Accuracy.TrueNegatives>[]) Array.newInstance(ILearnerPipeline.class, 0);
      ThreadedClient threadedClient0 = new ThreadedClient();
      ObjectiveFunction<Accuracy.TrueNegatives, Accuracy.TrueNegatives>[] objectiveFunctionArray0 = (ObjectiveFunction<Accuracy.TrueNegatives, Accuracy.TrueNegatives>[]) Array.newInstance(ObjectiveFunction.class, 0);
      SimulationSetupImpl<SimpleSample, Accuracy.TrueNegatives, Accuracy.TrueNegatives> simulationSetupImpl0 = null;
      try {
        simulationSetupImpl0 = new SimulationSetupImpl<SimpleSample, Accuracy.TrueNegatives, Accuracy.TrueNegatives>("8", (FeaturesConfig<SimpleSample, Accuracy.TrueNegatives>) null, integer0, iLearnerPipelineArray0, threadedClient0, false, objectiveFunctionArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.String@0000000003                        (null:-1 : SimulationSetupImpl.java:46)
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-3517));
      ILearnerPipeline<SimpleSample, Accuracy.TrueNegatives>[] iLearnerPipelineArray0 = (ILearnerPipeline<SimpleSample, Accuracy.TrueNegatives>[]) Array.newInstance(ILearnerPipeline.class, 1);
      ThreadedClient threadedClient0 = new ThreadedClient();
      ObjectiveFunction<Accuracy.TrueNegatives, Accuracy.TrueNegatives>[] objectiveFunctionArray0 = (ObjectiveFunction<Accuracy.TrueNegatives, Accuracy.TrueNegatives>[]) Array.newInstance(ObjectiveFunction.class, 3);
      SimulationSetupImpl<SimpleSample, Accuracy.TrueNegatives, Accuracy.TrueNegatives> simulationSetupImpl0 = null;
      try {
        simulationSetupImpl0 = new SimulationSetupImpl<SimpleSample, Accuracy.TrueNegatives, Accuracy.TrueNegatives>("8", (FeaturesConfig<SimpleSample, Accuracy.TrueNegatives>) null, integer0, iLearnerPipelineArray0, threadedClient0, true, objectiveFunctionArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.insightml.evaluation.simulation.SimulationSetupImpl", e);
      }
  }
}
