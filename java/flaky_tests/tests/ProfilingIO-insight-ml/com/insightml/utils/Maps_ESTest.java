/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:05:25 GMT 2022
 */

package com.insightml.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.utils.Maps;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Maps_ESTest extends Maps_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      // Undeclared exception!
      try { 
        Maps.firstValueAvailable((Map<Integer, Integer>) hashMap0, (Integer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Maps", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Maps.create(Integer.MAX_VALUE);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state observed
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Maps.create((-2378));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -3170
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer((-773));
      hashMap0.put((Integer) null, integer0);
      Integer[] integerArray0 = new Integer[2];
      Integer integer1 = Maps.firstValueAvailable((Map<Integer, Integer>) hashMap0, integerArray0);
      assertEquals((-773), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedHashMap<Integer, Integer> linkedHashMap0 = Maps.create(0);
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = Maps.firstValueAvailable((Map<Integer, Integer>) linkedHashMap0, integerArray0);
      assertNull(integer0);
  }
}
