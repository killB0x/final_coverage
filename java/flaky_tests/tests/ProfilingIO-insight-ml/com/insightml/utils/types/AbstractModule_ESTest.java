/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:16:53 GMT 2022
 */

package com.insightml.utils.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.utils.types.AbstractModule;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractModule_ESTest extends AbstractModule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractModule abstractModule0 = null;
      try {
        abstractModule0 = new AbstractModule((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AbstractModule abstractModule0 = new AbstractModule();
      String string0 = abstractModule0.getName();
      assertEquals("AbstractModule", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AbstractModule abstractModule0 = new AbstractModule(";ZL! O}W}r!Z_:fga|c");
      String string0 = abstractModule0.getName();
      assertEquals(";ZL! O}W}r!Z_:fga|c", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AbstractModule abstractModule0 = null;
      try {
        abstractModule0 = new AbstractModule("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.String@0000000002                        (null:-1 : AbstractModule.java:28)
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AbstractModule abstractModule0 = new AbstractModule();
      String string0 = abstractModule0.getDescription();
      assertEquals("-", string0);
  }
}
