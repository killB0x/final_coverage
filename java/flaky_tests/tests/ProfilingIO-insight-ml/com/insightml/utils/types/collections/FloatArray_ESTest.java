/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:45:28 GMT 2022
 */

package com.insightml.utils.types.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.utils.types.collections.FloatArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatArray_ESTest extends FloatArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(20);
      floatArray0.add(20);
      floatArray0.add(1845.0725F);
      assertEquals(2, floatArray0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(562);
      floatArray0.add((-801.0F));
      floatArray0.toArray();
      assertEquals(1, floatArray0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(20);
      floatArray0.add(20);
      int int0 = floatArray0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FloatArray floatArray0 = null;
      try {
        floatArray0 = new FloatArray((-4613));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -4613
         //
         verifyException("com.insightml.utils.types.collections.FloatArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(20);
      int int0 = floatArray0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(0);
      floatArray0.toArray();
      assertEquals(0, floatArray0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FloatArray floatArray0 = new FloatArray(0);
      // Undeclared exception!
      try { 
        floatArray0.add(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.insightml.utils.types.collections.FloatArray", e);
      }
  }
}
