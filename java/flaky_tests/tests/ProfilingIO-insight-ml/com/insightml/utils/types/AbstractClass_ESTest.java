/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:32:01 GMT 2022
 */

package com.insightml.utils.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.utils.types.AbstractModule;
import com.insightml.utils.types.DoublePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractClass_ESTest extends AbstractClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoublePair<Integer> doublePair0 = new DoublePair<Integer>();
      doublePair0.hashCode();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DoublePair<Object> doublePair0 = new DoublePair<Object>();
      String string0 = doublePair0.toString();
      assertEquals("(null, 0.0)", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AbstractModule abstractModule0 = new AbstractModule();
      // Undeclared exception!
      try { 
        abstractModule0.hashCode();
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // com.insightml.utils.types.AbstractModule
         //
         verifyException("com.insightml.utils.types.AbstractClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AbstractModule abstractModule0 = new AbstractModule();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        abstractModule0.equals(object0);
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // com.insightml.utils.types.AbstractModule
         //
         verifyException("com.insightml.utils.types.AbstractClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AbstractModule abstractModule0 = new AbstractModule();
      // Undeclared exception!
      try { 
        abstractModule0.toString();
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // com.insightml.utils.types.AbstractModule
         //
         verifyException("com.insightml.utils.types.AbstractClass", e);
      }
  }
}
