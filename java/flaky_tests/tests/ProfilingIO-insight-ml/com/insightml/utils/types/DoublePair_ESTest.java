/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:20:59 GMT 2022
 */

package com.insightml.utils.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.utils.types.DoublePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoublePair_ESTest extends DoublePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(1199);
      DoublePair<Object> doublePair0 = new DoublePair<Object>(integer0, 1199);
      double double0 = doublePair0.getValue();
      assertEquals(1199.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      DoublePair<Object> doublePair0 = new DoublePair<Object>(object0, (-2.472748992514));
      double double0 = doublePair0.getValue();
      assertEquals((-2.472748992514), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      DoublePair<Object> doublePair0 = new DoublePair<Object>(object0, 2924.135406662397);
      doublePair0.getKey();
      assertEquals(2924.135406662397, doublePair0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DoublePair<Object> doublePair0 = new DoublePair<Object>();
      Integer integer0 = new Integer(1199);
      DoublePair<Integer> doublePair1 = new DoublePair<Integer>(integer0, (-1));
      int int0 = doublePair0.compareDouble(doublePair1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DoublePair<Integer> doublePair0 = new DoublePair<Integer>();
      DoublePair<Object> doublePair1 = new DoublePair<Object>(doublePair0, 1381.9157157);
      int int0 = doublePair0.compareDouble(doublePair1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DoublePair<Integer> doublePair0 = new DoublePair<Integer>();
      // Undeclared exception!
      try { 
        doublePair0.compareDouble((DoublePair<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.types.DoublePair", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DoublePair<Object> doublePair0 = new DoublePair<Object>();
      String string0 = doublePair0.toString();
      assertEquals("(null, 0.0)", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DoublePair<Object> doublePair0 = new DoublePair<Object>();
      Object object0 = doublePair0.getKey();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DoublePair<Integer> doublePair0 = new DoublePair<Integer>();
      double double0 = doublePair0.getValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DoublePair<Object> doublePair0 = new DoublePair<Object>();
      DoublePair<Integer> doublePair1 = new DoublePair<Integer>();
      int int0 = doublePair0.compareDouble(doublePair1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DoublePair<Object> doublePair0 = new DoublePair<Object>();
      doublePair0.hashCode();
  }
}
