/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 12:06:08 GMT 2022
 */

package com.insightml.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.utils.Arguments;
import com.insightml.utils.IArguments;
import java.io.Serializable;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Arguments_ESTest extends Arguments_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      String string0 = arguments0.toString(">yM9E", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Arguments arguments0 = new Arguments(stringArray0);
      String string0 = arguments0.toString((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "bh'2";
      Arguments arguments0 = new Arguments(stringArray0);
      String string0 = arguments0.toString("");
      assertEquals("bh'2", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("", (Serializable) "", true);
      String string0 = arguments1.toString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Integer integer0 = Integer.valueOf(0);
      Integer integer1 = arguments0.toInt("9mPko", integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Integer integer0 = new Integer(2);
      Integer integer1 = arguments0.toInt("text", integer0);
      assertEquals(2, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-360));
      Arguments arguments0 = new Arguments();
      Integer integer1 = arguments0.toInt("", integer0);
      assertEquals((-360), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Double double0 = Double.valueOf(0.0);
      arguments0.set("qe]kON~Oj#4ZDfZ>KB7", (Serializable) double0, true);
      int int0 = arguments0.toInt("qe]kON~Oj#4ZDfZ>KB7");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Byte byte0 = Byte.valueOf((byte)95);
      Arguments arguments1 = arguments0.set((String) null, (Serializable) byte0, true);
      int int0 = arguments1.toInt((String) null);
      assertEquals(95, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Double double0 = new Double(0.0);
      Double double1 = arguments0.toDouble("com.insightml.utils.Arguments", double0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Double double0 = new Double(742);
      Double double1 = arguments0.toDouble("PQ?4/+%Pk!K6aPp&.I[", double0);
      assertEquals(742.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Double double0 = arguments0.toDouble("text", (Double) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      arguments0.set("Y+fBLB<aPh7FG;?Q", (Serializable) "Y+fBLB<aPh7FG;?Q");
      String string0 = arguments0.get("Y+fBLB<aPh7FG;?Q");
      assertEquals("Y+fBLB<aPh7FG;?Q", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Arguments arguments0 = new Arguments(stringArray0);
      boolean boolean0 = arguments0.bool("", false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Arguments arguments0 = new Arguments((Serializable[]) stringArray0);
      Arguments arguments1 = arguments0.set(",", (Serializable) arguments0);
      // Undeclared exception!
      try { 
        arguments1.toString(",", ",");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.insightml.utils.Arguments cannot be cast to class java.lang.String (com.insightml.utils.Arguments is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @23ea9b42; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("cA0*cX.M.G_t~^eAs", (Serializable) arguments0);
      // Undeclared exception!
      try { 
        arguments1.toString("cA0*cX.M.G_t~^eAs");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.insightml.utils.Arguments cannot be cast to class java.lang.String (com.insightml.utils.Arguments is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @23ea9b42; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("com.insightml.utils.Arguments", (Serializable) "com.insightml.utils.Arguments");
      // Undeclared exception!
      try { 
        arguments1.toDouble("com.insightml.utils.Arguments");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Arguments arguments0 = new Arguments(stringArray0);
      Arguments arguments1 = arguments0.set("*}~jgX{t)v*6?cd-a", (Serializable) "*}~jgX{t)v*6?cd-a", false);
      // Undeclared exception!
      try { 
        arguments1.set("*}~jgX{t)v*6?cd-a", (Serializable) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("d", (Serializable) "d");
      // Undeclared exception!
      try { 
        arguments1.set("d", (Serializable) arguments0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class com.insightml.utils.Arguments (java.lang.String is in module java.base of loader 'bootstrap'; com.insightml.utils.Arguments is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @23ea9b42)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      arguments0.set((String) null, (Serializable) arguments0);
      // Undeclared exception!
      try { 
        arguments0.set((String) null, (Serializable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("&G*GBnw@JIC4{zB", (Serializable) arguments0);
      // Undeclared exception!
      try { 
        arguments1.set("&G*GBnw@JIC4{zB", (Serializable) "&G*GBnw@JIC4{zB");
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // Overwrote &G*GBnw@JIC4{zB from java.util.LinkedHashMap@0000000002 to &G*GBnw@JIC4{zB
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("", (Serializable) "");
      // Undeclared exception!
      try { 
        arguments1.set("", (Serializable) arguments0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class com.insightml.utils.Arguments (java.lang.String is in module java.base of loader 'bootstrap'; com.insightml.utils.Arguments is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @23ea9b42)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      // Undeclared exception!
      try { 
        arguments0.get("/*MMS`+8J/");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // /*MMS`+8J/ is not set.
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      // Undeclared exception!
      try { 
        arguments0.equals((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        arguments0.equals(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class com.insightml.utils.Arguments (java.lang.Object is in module java.base of loader 'bootstrap'; com.insightml.utils.Arguments is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @23ea9b42)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Arguments.copy((IArguments) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "HN<(ep}tD;QY_";
      stringArray0[3] = "+k<Mldj2-";
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(stringArray0);
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // Overwrote null from HN<(ep}tD;QY_ to +k<Mldj2-
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      // Undeclared exception!
      try { 
        arguments0.bool("illegal state observed");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal state observed is not set or neither Boolean nor String.
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      // Undeclared exception!
      try { 
        arguments0.toDouble("java.util.LinkedHashMap@0000000002");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.util.LinkedHashMap@0000000002 is not set or neither Number nor String.
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      // Undeclared exception!
      try { 
        arguments0.toInt("c^3G{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // c^3G{ is not set or neither Number nor String.
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("`\nlQ", (Serializable) "`\nlQ", false);
      Class<Byte> class0 = Byte.TYPE;
      // Undeclared exception!
      try { 
        arguments1.set("`\nlQ", (Serializable) class0, false);
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // Overwrote `
         // lQ from `
         // lQ to byte
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      boolean boolean0 = arguments0.containsKey("illegal state observed");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Arguments arguments0 = new Arguments(stringArray0);
      String string0 = arguments0.get((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      boolean boolean0 = arguments0.equals(arguments0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = Arguments.copy((IArguments) arguments0);
      boolean boolean0 = arguments1.equals(arguments0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      String string0 = arguments0.toString("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "{d |*<u2S^";
      stringArray0[1] = " to ";
      Arguments arguments0 = new Arguments(stringArray0);
      String string0 = arguments0.toString("{d |*<u2S^", "{d |*<u2S^");
      assertEquals(" to ", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set(";eZkr$", (Serializable) ";eZkr$");
      boolean boolean0 = arguments1.bool(";eZkr$");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Boolean boolean0 = Boolean.valueOf("CCwi E@:");
      Arguments arguments1 = arguments0.set("CCwi E@:", (Serializable) boolean0, false);
      boolean boolean1 = arguments1.bool("CCwi E@:");
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.set("2", (Serializable) "2");
      double double0 = arguments1.toDouble("2");
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[0];
      Arguments arguments0 = new Arguments(serializableArray0);
      Float float0 = Float.valueOf((-1269.5851F));
      arguments0.set("nq9JM|;", (Serializable) float0);
      double double0 = arguments0.toDouble("nq9JM|;");
      assertEquals((-1269.5850830078125), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "{d |*<u2S^";
      stringArray0[1] = " to ";
      Arguments arguments0 = new Arguments(stringArray0);
      // Undeclared exception!
      try { 
        arguments0.toInt("{d |*<u2S^");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" to \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[0];
      Arguments arguments0 = new Arguments(serializableArray0);
      Float float0 = Float.valueOf((-1269.5851F));
      arguments0.set("nq9JM|;", (Serializable) float0);
      int int0 = arguments0.toInt("nq9JM|;");
      assertEquals((-1269), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[4];
      serializableArray0[0] = (Serializable) " is not set or neither Number nor String.";
      Class<Boolean> class0 = Boolean.TYPE;
      serializableArray0[1] = (Serializable) class0;
      serializableArray0[2] = (Serializable) " is not set or neither Number nor String.";
      serializableArray0[3] = (Serializable) " is not set or neither Number nor String.";
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(serializableArray0);
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // Overwrote  is not set or neither Number nor String. from boolean to  is not set or neither Number nor String.
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "><A;5x}Z\"P4X";
      stringArray0[1] = "><A;5x}Z\"P4X";
      Arguments arguments0 = new Arguments(stringArray0);
      Arguments arguments1 = arguments0.set("><A;5x}Z\"P4X", (Serializable) "><A;5x}Z\"P4X", false);
      assertSame(arguments0, arguments1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[4];
      serializableArray0[0] = (Serializable) " is not set or neither Number nor String.";
      Class<Boolean> class0 = Boolean.TYPE;
      serializableArray0[1] = (Serializable) class0;
      serializableArray0[2] = (Serializable) " is not set or neither Number nor String.";
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(serializableArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[0];
      Arguments arguments0 = new Arguments(serializableArray0);
      arguments0.set("nq9JM|;", (Serializable) null, true);
      boolean boolean0 = arguments0.containsKey("nq9JM|;");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[8];
      Arguments arguments0 = new Arguments(serializableArray0);
      serializableArray0[6] = (Serializable) arguments0;
      Arguments arguments1 = null;
      try {
        arguments1 = new Arguments(serializableArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.insightml.utils.Arguments cannot be cast to class java.lang.String (com.insightml.utils.Arguments is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @23ea9b42; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("com.insightml.utils.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[1];
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(serializableArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state observed
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state observed
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      arguments0.hashCode();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[0];
      Arguments arguments0 = new Arguments(serializableArray0);
      boolean boolean0 = arguments0.bool("com.insightml.utils.Check", true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Arguments arguments1 = arguments0.copy();
      Arguments arguments2 = arguments1.set("hEChk;M=Zn{jyU} ]q", (Serializable) arguments0);
      boolean boolean0 = arguments2.equals(arguments0);
      assertFalse(boolean0);
      assertFalse(arguments1.equals((Object)arguments0));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Double double0 = Double.valueOf((-1.0));
      Double double1 = arguments0.toDouble(" is not set or neither Number nor String.", double0);
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[0];
      Arguments arguments0 = new Arguments(serializableArray0);
      Integer integer0 = arguments0.toInt("eI]F:s#}*", (Integer) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Arguments arguments0 = new Arguments(stringArray0);
      String string0 = arguments0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      // Undeclared exception!
      try { 
        arguments0.toString((String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // null is not set.
         //
         verifyException("com.insightml.utils.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Arguments arguments0 = new Arguments();
      Set<Map.Entry<String, Serializable>> set0 = (Set<Map.Entry<String, Serializable>>)arguments0.entrySet();
      assertTrue(set0.isEmpty());
  }
}
