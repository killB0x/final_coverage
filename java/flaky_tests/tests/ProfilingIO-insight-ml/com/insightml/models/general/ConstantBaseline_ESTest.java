/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 13:31:02 GMT 2022
 */

package com.insightml.models.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.data.samples.ISamples;
import com.insightml.data.samples.Sample;
import com.insightml.data.samples.SelectionSample;
import com.insightml.data.samples.SimpleSample;
import com.insightml.models.IModel;
import com.insightml.models.LearnerInput;
import com.insightml.models.general.ConstantBaseline;
import com.insightml.models.general.ConstantModel;
import java.nio.file.LinkOption;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConstantBaseline_ESTest extends ConstantBaseline_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConstantBaseline<Object> constantBaseline0 = new ConstantBaseline<Object>((Object) null);
      IModel<Sample, Object> iModel0 = constantBaseline0.run((ISamples<Sample, Object>) null, 194);
      SelectionSample<Object, Object> selectionSample0 = new SelectionSample<Object, Object>(194, iModel0, "Const{null}", 194, 521.0F);
      ConstantBaseline<SelectionSample<Object, Object>> constantBaseline1 = new ConstantBaseline<SelectionSample<Object, Object>>(selectionSample0);
      // Undeclared exception!
      try { 
        constantBaseline1.getName();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/MoreObjects
         //
         verifyException("com.insightml.models.general.ConstantModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConstantBaseline<SimpleSample> constantBaseline0 = new ConstantBaseline<SimpleSample>((SimpleSample) null);
      ConstantBaseline<Object> constantBaseline1 = new ConstantBaseline<Object>(constantBaseline0);
      // Undeclared exception!
      try { 
        constantBaseline1.getName();
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // com.insightml.models.general.ConstantBaseline
         //
         verifyException("com.insightml.utils.types.AbstractClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConstantBaseline<Object> constantBaseline0 = new ConstantBaseline<Object>((Object) null);
      String string0 = constantBaseline0.getName();
      assertEquals("Const{null}", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkOption linkOption0 = LinkOption.NOFOLLOW_LINKS;
      ConstantBaseline<LinkOption> constantBaseline0 = new ConstantBaseline<LinkOption>(linkOption0);
      ConstantModel<LinkOption> constantModel0 = constantBaseline0.run((LearnerInput<? extends Sample, ?>) null);
      assertEquals("-", constantModel0.getDescription());
  }
}
