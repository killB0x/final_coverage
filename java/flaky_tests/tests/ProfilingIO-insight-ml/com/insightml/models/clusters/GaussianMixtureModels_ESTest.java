/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 12:27:46 GMT 2022
 */

package com.insightml.models.clusters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.insightml.math.distributions.GaussianDistribution;
import com.insightml.math.distributions.IContDistribution;
import com.insightml.models.clusters.ExpectationMaximization;
import com.insightml.models.clusters.GaussianMixtureModels;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GaussianMixtureModels_ESTest extends GaussianMixtureModels_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GaussianDistribution[] gaussianDistributionArray0 = new GaussianDistribution[5];
      double[][] doubleArray0 = new double[4][7];
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(doubleArray0[0]);
      gaussianDistributionArray0[0] = gaussianDistribution0;
      gaussianDistributionArray0[1] = gaussianDistribution0;
      gaussianDistributionArray0[2] = gaussianDistribution0;
      gaussianDistributionArray0[3] = gaussianDistribution0;
      gaussianDistributionArray0[4] = gaussianDistributionArray0[0];
      ExpectationMaximization.ExpectationMaximizationResult<GaussianDistribution> expectationMaximization_ExpectationMaximizationResult0 = new ExpectationMaximization.ExpectationMaximizationResult<GaussianDistribution>(gaussianDistributionArray0, doubleArray0[2], doubleArray0);
      GaussianMixtureModels.Components gaussianMixtureModels_Components0 = GaussianMixtureModels.Components.of(expectationMaximization_ExpectationMaximizationResult0);
      String string0 = gaussianMixtureModels_Components0.toString();
      assertEquals("N(0.0,0.0),0.0,N(0.0,0.0),0.0,N(0.0,0.0),0.0,N(0.0,0.0),0.0,N(0.0,0.0),0.0", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      GaussianMixtureModels.Point[] gaussianMixtureModels_PointArray0 = new GaussianMixtureModels.Point[5];
      GaussianMixtureModels.Point gaussianMixtureModels_Point0 = new GaussianMixtureModels.Point((-1709.49594588906));
      gaussianMixtureModels_PointArray0[0] = gaussianMixtureModels_Point0;
      double[][] doubleArray0 = new double[2][4];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2059.656729279);
      doubleArray0[0] = doubleArray1;
      GaussianDistribution gaussianDistribution0 = gaussianMixtureModels0.maximization(gaussianMixtureModels_PointArray0, doubleArray0, 0);
      assertEquals((-1709.49594588906), gaussianDistribution0.maxLikelihood(), 0.01);
      assertEquals(0.0, gaussianDistribution0.standardDeviation(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      GaussianMixtureModels.Point gaussianMixtureModels_Point0 = new GaussianMixtureModels.Point((-1.0));
      GaussianMixtureModels.Point[] gaussianMixtureModels_PointArray0 = new GaussianMixtureModels.Point[3];
      gaussianMixtureModels_PointArray0[0] = gaussianMixtureModels_Point0;
      gaussianMixtureModels_PointArray0[1] = gaussianMixtureModels_Point0;
      double[][] doubleArray0 = new double[2][6];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (-1.0);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = 1.0;
      doubleArray0[1] = doubleArray2;
      GaussianDistribution gaussianDistribution0 = gaussianMixtureModels0.maximization(gaussianMixtureModels_PointArray0, doubleArray0, 0);
      double double0 = gaussianMixtureModels0.likelihood(gaussianMixtureModels_Point0, gaussianDistribution0);
      assertEquals(0.0, gaussianDistribution0.expectedValue(), 0.01);
      assertEquals(0.0, gaussianDistribution0.standardDeviation(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 2076.0;
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      GaussianMixtureModels.Point gaussianMixtureModels_Point0 = new GaussianMixtureModels.Point(1707.198);
      GaussianDistribution gaussianDistribution0 = new GaussianDistribution(doubleArray0, false);
      double double0 = gaussianMixtureModels0.likelihood(gaussianMixtureModels_Point0, gaussianDistribution0);
      assertEquals(5.9181826642993275E-5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GaussianMixtureModels.Point[] gaussianMixtureModels_PointArray0 = new GaussianMixtureModels.Point[10];
      double[][] doubleArray0 = new double[5][6];
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      // Undeclared exception!
      try { 
        gaussianMixtureModels0.maximization(gaussianMixtureModels_PointArray0, doubleArray0, 2196);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2196 out of bounds for length 6
         //
         verifyException("com.insightml.models.clusters.GaussianMixtureModels", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      // Undeclared exception!
      try { 
        gaussianMixtureModels0.init((GaussianMixtureModels.Point[]) null, 18);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/insightml/math/statistics/Stats
         //
         verifyException("com.insightml.models.clusters.GaussianMixtureModels", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GaussianMixtureModels.Point[] gaussianMixtureModels_PointArray0 = new GaussianMixtureModels.Point[0];
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      // Undeclared exception!
      try { 
        gaussianMixtureModels0.init(gaussianMixtureModels_PointArray0, (-3420));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3420
         //
         verifyException("com.insightml.models.clusters.GaussianMixtureModels", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IContDistribution[] iContDistributionArray0 = new IContDistribution[0];
      double[] doubleArray0 = new double[1];
      GaussianMixtureModels.Components gaussianMixtureModels_Components0 = new GaussianMixtureModels.Components(iContDistributionArray0, doubleArray0);
      // Undeclared exception!
      try { 
        gaussianMixtureModels_Components0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start 1, end 0, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      GaussianMixtureModels.Point[] gaussianMixtureModels_PointArray0 = new GaussianMixtureModels.Point[8];
      GaussianMixtureModels.Point gaussianMixtureModels_Point0 = new GaussianMixtureModels.Point(376.763272853997);
      gaussianMixtureModels_PointArray0[0] = gaussianMixtureModels_Point0;
      gaussianMixtureModels_PointArray0[1] = gaussianMixtureModels_PointArray0[0];
      GaussianMixtureModels.Point gaussianMixtureModels_Point1 = new GaussianMixtureModels.Point(778.06697443856);
      gaussianMixtureModels_PointArray0[2] = gaussianMixtureModels_Point1;
      double[][] doubleArray0 = new double[3][0];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-2280.462693679854);
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray0[0];
      doubleArray0[2] = doubleArray0[0];
      GaussianDistribution gaussianDistribution0 = gaussianMixtureModels0.maximization(gaussianMixtureModels_PointArray0, doubleArray0, 0);
      assertEquals(189.1763791371381, gaussianDistribution0.standardDeviation(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      GaussianMixtureModels.Point[] gaussianMixtureModels_PointArray0 = new GaussianMixtureModels.Point[8];
      double[][] doubleArray0 = new double[3][0];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-2280.462693679854);
      doubleArray0[0] = doubleArray1;
      // Undeclared exception!
      try { 
        gaussianMixtureModels0.maximization(gaussianMixtureModels_PointArray0, doubleArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.models.clusters.GaussianMixtureModels", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GaussianMixtureModels gaussianMixtureModels0 = new GaussianMixtureModels();
      GaussianMixtureModels.Point[] gaussianMixtureModels_PointArray0 = new GaussianMixtureModels.Point[8];
      double[][] doubleArray0 = new double[3][0];
      double[] doubleArray1 = new double[2];
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray0[0];
      doubleArray0[2] = doubleArray0[0];
      GaussianDistribution gaussianDistribution0 = gaussianMixtureModels0.maximization(gaussianMixtureModels_PointArray0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        gaussianMixtureModels0.likelihood(gaussianMixtureModels_PointArray0[1], gaussianDistribution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.insightml.models.clusters.GaussianMixtureModels", e);
      }
  }
}
