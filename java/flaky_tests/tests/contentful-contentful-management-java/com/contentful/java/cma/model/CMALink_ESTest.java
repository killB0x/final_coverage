/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:55:03 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMASystem;
import com.contentful.java.cma.model.CMAType;
import com.contentful.java.cma.model.CMAVisibility;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMALink_ESTest extends CMALink_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMAType cMAType0 = CMAType.Environment;
      CMALink cMALink0 = new CMALink(cMAType0);
      Integer integer0 = new Integer((-570));
      String string0 = "com.contentful.java.cma.model.CMAType";
      cMALink0.setSpaceId("com.contentful.java.cma.model.CMAType");
      CMALink cMALink1 = cMALink0.setVersion(integer0);
      cMALink1.setId("com.contentful.java.cma.model.CMAType");
      Integer integer1 = new Integer((-570));
      CMALink cMALink2 = cMALink1.setVersion(integer1);
      cMALink2.setSystem((CMASystem) null);
      CMALink cMALink3 = null;
      try {
        cMALink3 = new CMALink(cMALink0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMALink", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAType cMAType0 = CMAType.Snapshot;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = cMALink0.setSpaceId("");
      CMALink cMALink2 = new CMALink(cMALink1);
      cMALink0.toString();
      CMASystem cMASystem0 = new CMASystem();
      String string0 = "jU5y:s\\L3C<+o|?#je";
      CMALink cMALink3 = cMALink1.setSpaceId("");
      cMALink0.setSystem((CMASystem) null);
      cMALink1.toString();
      // Undeclared exception!
      try { 
        cMALink3.setId("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      assertNull(cMALink0.getId());
      
      CMALink cMALink1 = cMALink0.setSpaceId("ContentType");
      CMALink cMALink2 = cMALink0.setSpaceId("publishedAt");
      CMALink cMALink3 = cMALink2.setSpaceId("");
      CMAVisibility cMAVisibility0 = CMAVisibility.privateVisibility;
      cMALink3.setVisibility(cMAVisibility0);
      Integer integer0 = new Integer(3483);
      cMALink2.setVersion(integer0);
      CMALink cMALink4 = cMALink2.setSystem((CMASystem) null);
      cMALink4.setSystem((CMASystem) null);
      CMALink cMALink5 = cMALink1.setSystem((CMASystem) null);
      Integer integer1 = new Integer(3483);
      // Undeclared exception!
      try { 
        cMALink5.setVersion(integer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSpaceId(" }");
      CMASystem cMASystem0 = null;
      CMALink cMALink2 = cMALink1.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMALink2.setSpaceId("CMALink { ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMASystem cMASystem0 = new CMASystem();
      CMASystem cMASystem1 = cMASystem0.setId("CMALink { ");
      Integer integer0 = new Integer((-47));
      CMASystem cMASystem2 = cMASystem1.setVersion(integer0);
      CMAType cMAType0 = CMAType.PersonalAccessToken;
      CMASystem cMASystem3 = cMASystem2.setType(cMAType0);
      cMASystem3.publishedVersion = integer0;
      Integer integer1 = new Integer((-47));
      CMALink cMALink1 = cMALink0.setVersion(integer1);
      cMASystem3.setVersion(integer0);
      CMASystem cMASystem4 = cMASystem3.setSpace(cMALink1);
      cMALink0.system = cMASystem4;
      // Undeclared exception!
      cMALink0.toString();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSpaceId("~W?kF-K;[*CK!");
      CMASystem cMASystem0 = new CMASystem();
      CMAType cMAType0 = CMAType.EditorInterface;
      CMASystem cMASystem1 = cMASystem0.setType(cMAType0);
      CMAType cMAType1 = CMAType.Locale;
      CMASystem cMASystem2 = cMASystem1.setLinkType(cMAType1);
      CMASystem cMASystem3 = cMASystem2.setSpace(cMALink1);
      CMASystem cMASystem4 = cMASystem3.setId("~W?kF-K;[*CK!");
      cMALink1.setSystem(cMASystem4);
      // Undeclared exception!
      cMALink0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMASystem cMASystem0 = new CMASystem();
      cMALink0.setSystem(cMASystem0);
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      assertFalse(cMALink1.isArchived());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      String string0 = cMALink0.toString();
      assertEquals("CMALink { CMAResource { system = CMASystem { type = Link } } }", string0);
      
      CMALink cMALink1 = cMALink0.setVersion((Integer) null);
      String string1 = "`'khP&~}pT|";
      CMALink cMALink2 = cMALink0.setId("`'khP&~}pT|");
      CMALink cMALink3 = cMALink0.setId((String) null);
      cMALink2.setSpaceId("`'khP&~}pT|");
      cMALink0.setId("CMALink { CMAResource { system = CMASystem { type = Link } } }");
      CMASystem cMASystem0 = new CMASystem();
      CMAType cMAType0 = CMAType.ApiKey;
      CMASystem cMASystem1 = cMASystem0.setType(cMAType0);
      CMASystem cMASystem2 = cMASystem1.setLinkType(cMAType0);
      CMASystem cMASystem3 = cMASystem2.setSpace(cMALink3);
      CMASystem cMASystem4 = cMASystem3.setId("CMALink { CMAResource { system = CMASystem { type = Link } } }");
      CMAType cMAType1 = CMAType.Asset;
      cMASystem2.environmentStatus = cMALink2;
      cMASystem3.setType(cMAType1);
      CMALink cMALink4 = cMALink1.setSystem(cMASystem4);
      cMASystem1.version = null;
      CMAVisibility cMAVisibility0 = CMAVisibility.publicVisibility;
      cMALink4.setVisibility(cMAVisibility0);
      // Undeclared exception!
      cMALink3.toString();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      Integer integer0 = new Integer(0);
      CMALink cMALink1 = cMALink0.setVersion(integer0);
      assertSame(cMALink0, cMALink1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSpaceId("SeV,Gcnwt|# ");
      assertFalse(cMALink1.isPublished());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAType cMAType0 = CMAType.Entry;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = cMALink0.setSpaceId("");
      CMALink cMALink2 = new CMALink(cMALink1);
      assertNull(cMALink2.getSpaceId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMAType cMAType0 = CMAType.WebhookDefinition;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = new CMALink(cMALink0);
      cMALink1.setId("pn}ER=k");
      Integer.getInteger("");
      CMALink cMALink2 = cMALink1.setVersion((Integer) null);
      String string0 = cMALink2.toString();
      assertEquals("CMALink { CMAResource { system = CMASystem { type = Link, linkType = Link, id = pn}ER=k } } }", string0);
  }
}
