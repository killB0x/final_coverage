/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:42:53 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMASpace;
import com.contentful.java.cma.model.CMASystem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMASpace_ESTest extends CMASpace_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      CMASpace cMASpace1 = cMASpace0.setId("");
      assertEquals("master", cMASpace1.getEnvironmentId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      CMASpace cMASpace1 = cMASpace0.setSpaceId("9!vs)lA5O/{O");
      String string0 = cMASpace1.getSpaceId();
      assertEquals("9!vs)lA5O/{O", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      CMASpace cMASpace1 = cMASpace0.setName("F1:t9vBY!p^p");
      String string0 = cMASpace1.getName();
      assertEquals("F1:t9vBY!p^p", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      CMASpace cMASpace1 = cMASpace0.setDefaultLocale("");
      cMASpace1.name = "";
      String string0 = cMASpace0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      cMASpace0.defaultLocale = " defaultLocale = ";
      String string0 = cMASpace0.getDefaultLocale();
      assertEquals(" defaultLocale = ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      cMASpace0.setDefaultLocale("");
      String string0 = cMASpace0.getDefaultLocale();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      CMASystem cMASystem0 = new CMASystem();
      CMALink cMALink0 = new CMALink(cMASpace0);
      cMALink0.setSystem(cMASystem0);
      cMASystem0.setSpace(cMALink0);
      cMASpace0.setSystem(cMASystem0);
      // Undeclared exception!
      try { 
        cMASpace0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      CMASystem cMASystem0 = new CMASystem();
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      CMASystem cMASystem1 = cMASystem0.setContentType(cMALink1);
      cMASystem1.publishedBy = cMALink1;
      cMASpace0.system = cMASystem0;
      // Undeclared exception!
      try { 
        cMASpace0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      CMASpace cMASpace1 = cMASpace0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMASpace1.setVersion((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      cMASpace0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMASpace0.setSpaceId(" }");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      cMASpace0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMASpace0.setId((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      cMASpace0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMASpace0.getSpaceId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      String string0 = cMASpace0.getDefaultLocale();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      String string0 = cMASpace0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      Integer integer0 = new Integer(787);
      CMASpace cMASpace1 = cMASpace0.setVersion(integer0);
      assertFalse(cMASpace1.isPublished());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      cMASpace0.setSpaceId("");
      String string0 = cMASpace0.getSpaceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      String string0 = cMASpace0.getSpaceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CMASpace cMASpace0 = new CMASpace();
      String string0 = cMASpace0.toString();
      assertEquals("CMASpace { CMAResource { system = CMASystem { type = Space } } defaultLocale = null, name = null }", string0);
  }
}
