/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:39:19 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.model.CMAApiKey;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMASystem;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAApiKey_ESTest extends CMAApiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMAApiKey cMAApiKey1 = cMAApiKey0.setName("XBj@|pSuTn{i");
      String string0 = cMAApiKey1.getName();
      assertEquals("XBj@|pSuTn{i", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      cMAApiKey0.setName("");
      String string0 = cMAApiKey0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      cMAApiKey0.addEnvironment((String) null);
      List<CMALink> list0 = cMAApiKey0.getEnvironments();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMAApiKey cMAApiKey1 = cMAApiKey0.setDescription("(");
      String string0 = cMAApiKey1.getDescription();
      assertEquals("(", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMAApiKey cMAApiKey1 = cMAApiKey0.setAccessToken(", description = ");
      String string0 = cMAApiKey1.getAccessToken();
      assertEquals(", description = ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMALink cMALink0 = new CMALink(cMAApiKey0);
      CMASystem cMASystem0 = new CMASystem();
      CMASystem cMASystem1 = cMASystem0.setContentType(cMALink0);
      CMALink cMALink1 = cMALink0.setSystem(cMASystem1);
      cMAApiKey0.setPreviewApiKey(cMALink1);
      // Undeclared exception!
      cMAApiKey0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      List<CMALink> list0 = cMAApiKey0.getEnvironments();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMALink cMALink0 = cMAApiKey0.getPreviewApiKey();
      assertNull(cMALink0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      String string0 = cMAApiKey0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      String string0 = cMAApiKey0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      String string0 = cMAApiKey0.getAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMALink cMALink0 = new CMALink(cMAApiKey0);
      cMAApiKey0.setPreviewApiKey(cMALink0);
      CMALink cMALink1 = cMAApiKey0.getPreviewApiKey();
      assertNull(cMALink1.getSpaceId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMAApiKey cMAApiKey1 = cMAApiKey0.setAccessToken("");
      String string0 = cMAApiKey1.getAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      CMAApiKey cMAApiKey1 = cMAApiKey0.setDescription("");
      String string0 = cMAApiKey1.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CMAApiKey cMAApiKey0 = new CMAApiKey();
      String string0 = cMAApiKey0.toString();
      assertEquals("CMAApiKey { CMAResource { system = CMASystem { type = ApiKey } } accessToken = null, description = null, name = null, environments = [], previewApiKey = null }", string0);
  }
}
