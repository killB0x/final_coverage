/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:50:22 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMAOrganization;
import com.contentful.java.cma.model.CMASystem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAOrganization_ESTest extends CMAOrganization_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CMAOrganization cMAOrganization0 = new CMAOrganization();
      cMAOrganization0.setName("archivedVersion");
      String string0 = cMAOrganization0.getName();
      assertEquals("archivedVersion", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CMAOrganization cMAOrganization0 = new CMAOrganization();
      CMASystem cMASystem0 = cMAOrganization0.system;
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      cMASystem0.setContentType(cMALink1);
      // Undeclared exception!
      cMAOrganization0.toString();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CMAOrganization cMAOrganization0 = new CMAOrganization();
      CMASystem cMASystem0 = new CMASystem();
      CMALink cMALink0 = new CMALink(cMAOrganization0);
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      CMASystem cMASystem1 = cMASystem0.setContentType(cMALink1);
      cMASystem1.updatedBy = cMALink1;
      cMAOrganization0.system = cMASystem1;
      // Undeclared exception!
      try { 
        cMAOrganization0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CMAOrganization cMAOrganization0 = new CMAOrganization();
      String string0 = cMAOrganization0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CMAOrganization cMAOrganization0 = new CMAOrganization();
      CMAOrganization cMAOrganization1 = cMAOrganization0.setName("");
      String string0 = cMAOrganization1.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CMAOrganization cMAOrganization0 = new CMAOrganization();
      String string0 = cMAOrganization0.toString();
      assertEquals("CMAOrganizations { CMAResource { system = CMASystem { type = Organization } } name = null }", string0);
  }
}
