/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:43:35 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMASystem;
import com.contentful.java.cma.model.CMAType;
import com.contentful.java.cma.model.CMAVisibility;
import com.contentful.java.cma.model.CMAWebhookCallDetail;
import com.contentful.java.cma.model.CMAWebhookRequest;
import com.contentful.java.cma.model.CMAWebhookResponse;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAWebhookCallDetail_ESTest extends CMAWebhookCallDetail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAVisibility cMAVisibility0 = CMAVisibility.publicVisibility;
      CMAWebhookCallDetail cMAWebhookCallDetail1 = cMAWebhookCallDetail0.setVisibility(cMAVisibility0);
      cMAWebhookCallDetail1.url = "CMAWebhookCallDetail { CMAResource { system = CMASystem { type = WebhookCallOverview } } errors = null, eventType = null, request = null, requestAt = null, response = null, responseAt = null, statusCode = null, url = null }";
      String string0 = cMAWebhookCallDetail0.getUrl();
      assertEquals("CMAWebhookCallDetail { CMAResource { system = CMASystem { type = WebhookCallOverview } } errors = null, eventType = null, request = null, requestAt = null, response = null, responseAt = null, statusCode = null, url = null }", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAWebhookCallDetail cMAWebhookCallDetail1 = cMAWebhookCallDetail0.setEnvironmentId("15A!F9u-.aC(As5.");
      cMAWebhookCallDetail1.url = "";
      String string0 = cMAWebhookCallDetail0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      Integer integer0 = Integer.getInteger(".:qHeuI5QhSWl#R, b", 0);
      cMAWebhookCallDetail0.statusCode = integer0;
      Integer integer1 = cMAWebhookCallDetail0.getStatusCode();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      Integer integer0 = Integer.getInteger("", 574);
      cMAWebhookCallDetail0.statusCode = integer0;
      Integer integer1 = cMAWebhookCallDetail0.getStatusCode();
      assertEquals(574, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      Integer integer0 = Integer.getInteger("' .H@{1JzL+8@", (-2629));
      cMAWebhookCallDetail0.statusCode = integer0;
      Integer integer1 = cMAWebhookCallDetail0.getStatusCode();
      assertEquals((-2629), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAWebhookCallDetail cMAWebhookCallDetail1 = cMAWebhookCallDetail0.setVersion((Integer) null);
      cMAWebhookCallDetail1.responseAt = ", response = ";
      String string0 = cMAWebhookCallDetail0.getResponseAt();
      assertEquals(", response = ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      cMAWebhookCallDetail0.responseAt = "";
      String string0 = cMAWebhookCallDetail0.getResponseAt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAWebhookResponse cMAWebhookResponse0 = new CMAWebhookResponse();
      cMAWebhookCallDetail0.response = cMAWebhookResponse0;
      CMAWebhookResponse cMAWebhookResponse1 = cMAWebhookCallDetail0.getResponse();
      assertNull(cMAWebhookResponse1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAWebhookCallDetail cMAWebhookCallDetail1 = cMAWebhookCallDetail0.setEnvironmentId("m;#");
      cMAWebhookCallDetail1.requestAt = "h!!^\"@";
      String string0 = cMAWebhookCallDetail0.getRequestAt();
      assertEquals("h!!^\"@", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAWebhookCallDetail cMAWebhookCallDetail1 = cMAWebhookCallDetail0.setId("a}]6u)7");
      cMAWebhookCallDetail1.requestAt = "";
      String string0 = cMAWebhookCallDetail0.getRequestAt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAVisibility cMAVisibility0 = CMAVisibility.publicVisibility;
      CMAWebhookCallDetail cMAWebhookCallDetail1 = cMAWebhookCallDetail0.setVisibility(cMAVisibility0);
      CMAWebhookRequest cMAWebhookRequest0 = new CMAWebhookRequest();
      cMAWebhookCallDetail1.request = cMAWebhookRequest0;
      CMAWebhookRequest cMAWebhookRequest1 = cMAWebhookCallDetail0.getRequest();
      assertNull(cMAWebhookRequest1.getMethod());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      cMAWebhookCallDetail0.eventType = "mug";
      String string0 = cMAWebhookCallDetail0.getEventType();
      assertEquals("mug", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      cMAWebhookCallDetail0.eventType = "";
      String string0 = cMAWebhookCallDetail0.getEventType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      cMAWebhookCallDetail0.errors = (List<String>) linkedList0;
      List<String> list0 = cMAWebhookCallDetail0.getErrors();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("}=RBr.r2sp");
      cMAWebhookCallDetail0.errors = (List<String>) linkedList0;
      List<String> list0 = cMAWebhookCallDetail0.getErrors();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMASystem cMASystem0 = cMAWebhookCallDetail0.getSystem();
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      cMASystem0.setContentType(cMALink1);
      // Undeclared exception!
      cMAWebhookCallDetail0.toString();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMASystem cMASystem0 = cMAWebhookCallDetail0.getSystem();
      CMASystem cMASystem1 = cMASystem0.setId("O`");
      CMAType cMAType0 = CMAType.PersonalAccessToken;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      cMASystem1.updatedBy = cMALink1;
      // Undeclared exception!
      try { 
        cMAWebhookCallDetail0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAWebhookRequest cMAWebhookRequest0 = cMAWebhookCallDetail0.getRequest();
      assertNull(cMAWebhookRequest0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      String string0 = cMAWebhookCallDetail0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      Integer integer0 = cMAWebhookCallDetail0.getStatusCode();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      String string0 = cMAWebhookCallDetail0.getEventType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      String string0 = cMAWebhookCallDetail0.getRequestAt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      CMAWebhookResponse cMAWebhookResponse0 = cMAWebhookCallDetail0.getResponse();
      assertNull(cMAWebhookResponse0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      String string0 = cMAWebhookCallDetail0.getResponseAt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      List<String> list0 = cMAWebhookCallDetail0.getErrors();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CMAWebhookCallDetail cMAWebhookCallDetail0 = new CMAWebhookCallDetail();
      String string0 = cMAWebhookCallDetail0.toString();
      assertEquals("CMAWebhookCallDetail { CMAResource { system = CMASystem { type = WebhookCallOverview } } errors = null, eventType = null, request = null, requestAt = null, response = null, responseAt = null, statusCode = null, url = null }", string0);
  }
}
