/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:03:02 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMAResource;
import com.contentful.java.cma.model.CMASystem;
import com.contentful.java.cma.model.CMAType;
import com.contentful.java.cma.model.CMAVisibility;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAResource_ESTest extends CMAResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMAType cMAType0 = CMAType.Array;
      CMAResource cMAResource0 = new CMAResource(cMAType0);
      assertNull(cMAResource0.getSpaceId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMASystem cMASystem0 = new CMASystem();
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      assertNull(cMALink1.getSpaceId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSpaceId("CMAResource { system = ");
      assertFalse(cMALink1.isPublished());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMAVisibility cMAVisibility0 = CMAVisibility.publicVisibility;
      cMALink0.setVisibility(cMAVisibility0);
      CMAVisibility cMAVisibility1 = cMALink0.getVisibility();
      assertEquals(CMAVisibility.publicVisibility, cMAVisibility1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      Integer integer0 = new Integer(0);
      CMALink cMALink1 = cMALink0.setVersion(integer0);
      Integer integer1 = cMALink1.getVersion();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      Integer integer0 = new Integer(265);
      cMALink0.setVersion(integer0);
      Integer integer1 = cMALink0.getVersion();
      assertEquals(265, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAType cMAType0 = CMAType.EditorInterface;
      CMALink cMALink0 = new CMALink(cMAType0);
      Integer integer0 = new Integer((-1220));
      CMALink cMALink1 = cMALink0.setVersion(integer0);
      Integer integer1 = cMALink1.getVersion();
      assertEquals((-1220), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.setSystem((CMASystem) null);
      CMASystem cMASystem0 = cMALink0.getSystem();
      assertNull(cMASystem0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMASystem cMASystem0 = cMALink0.getSystem();
      assertNull(cMASystem0.getArchivedVersion());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSpaceId("");
      String string0 = cMALink1.getSpaceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      String string0 = cMALink0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMAType cMAType0 = CMAType.Link;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = cMALink0.setId("f&DV");
      String string0 = cMALink1.getId();
      assertEquals("f&DV", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAType cMAType0 = CMAType.PersonalAccessToken;
      CMALink cMALink0 = new CMALink(cMAType0);
      cMALink0.setId("");
      String string0 = cMALink0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMAVisibility cMAVisibility0 = CMAVisibility.publicVisibility;
      cMALink0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMALink0.setVisibility(cMAVisibility0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CMAType cMAType0 = CMAType.SpacePeriodicUsage;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = cMALink0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMALink1.setVersion((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.system = null;
      // Undeclared exception!
      try { 
        cMALink0.setSpaceId("4g-4'I5J a");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CMAType cMAType0 = CMAType.Tag;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = cMALink0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMALink1.setId("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMALink0.setEnvironmentId("vs{lHZ2b>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.setSystem((CMASystem) null);
      // Undeclared exception!
      try { 
        cMALink0.getEnvironmentId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMASystem cMASystem0 = new CMASystem();
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      Integer integer0 = new Integer(0);
      cMASystem0.publishedVersion = integer0;
      Boolean boolean0 = cMALink1.isPublished();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      Boolean boolean0 = cMALink0.isPublished();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.setSystem((CMASystem) null);
      Boolean boolean0 = cMALink0.isPublished();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMASystem cMASystem0 = new CMASystem();
      CMAType cMAType0 = CMAType.PersonalAccessToken;
      CMASystem cMASystem1 = cMASystem0.setLinkType(cMAType0);
      cMALink0.system = cMASystem1;
      Integer integer0 = new Integer(14);
      cMASystem1.archivedVersion = integer0;
      Boolean boolean0 = cMALink0.isArchived();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      Boolean boolean0 = cMALink0.isArchived();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.setEnvironmentId("contentType");
      CMALink cMALink1 = cMALink0.setEnvironmentId("_");
      assertNull(cMALink1.getSpaceId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setEnvironmentId("");
      String string0 = cMALink1.getEnvironmentId();
      assertEquals("master", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setEnvironmentId((String) null);
      String string0 = cMALink1.getEnvironmentId();
      assertEquals("master", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.setEnvironmentId("contentType");
      cMALink0.getEnvironmentId();
      assertEquals("contentType", cMALink0.getEnvironmentId());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      String string0 = cMALink0.getEnvironmentId();
      assertEquals("master", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSpaceId("master");
      CMALink cMALink2 = cMALink1.setSpaceId("master");
      assertEquals("master", cMALink2.getSpaceId());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CMAType cMAType0 = CMAType.Link;
      CMALink cMALink0 = new CMALink(cMAType0);
      cMALink0.setSpaceId("f&DV");
      String string0 = cMALink0.getSpaceId();
      assertEquals("f&DV", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CMAType cMAType0 = CMAType.EditorInterface;
      CMALink cMALink0 = new CMALink(cMAType0);
      String string0 = cMALink0.getSpaceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.setSystem((CMASystem) null);
      Boolean boolean0 = cMALink0.isArchived();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CMAType cMAType0 = CMAType.EditorInterface;
      CMALink cMALink0 = new CMALink(cMAType0);
      Integer integer0 = cMALink0.getVersion();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      String string0 = cMALink0.toString();
      assertEquals("CMALink { CMAResource { system = CMASystem { type = Link } } }", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CMALink cMALink0 = new CMALink();
      cMALink0.getVisibility();
  }
}
