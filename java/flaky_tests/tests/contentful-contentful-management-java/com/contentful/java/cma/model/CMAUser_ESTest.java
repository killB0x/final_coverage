/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:44:17 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMASystem;
import com.contentful.java.cma.model.CMAUser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAUser_ESTest extends CMAUser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Boolean boolean0 = Boolean.valueOf(true);
      cMAUser0.confirmed = boolean0;
      Boolean boolean1 = cMAUser0.isConfirmed();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.confirmed = null;
      Boolean boolean0 = Boolean.valueOf("");
      cMAUser0.confirmed = boolean0;
      Boolean boolean1 = cMAUser0.isConfirmed();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Boolean boolean0 = Boolean.valueOf(true);
      cMAUser0.activated = boolean0;
      Boolean boolean1 = cMAUser0.isActivated();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Boolean boolean0 = cMAUser0.isPublished();
      cMAUser0.activated = boolean0;
      Boolean boolean1 = cMAUser0.isActivated();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Integer integer0 = Integer.valueOf(0);
      cMAUser0.signInCount = integer0;
      Integer integer1 = cMAUser0.getSignInCount();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Integer integer0 = Integer.valueOf(1);
      cMAUser0.signInCount = integer0;
      Integer integer1 = cMAUser0.getSignInCount();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Integer integer0 = Integer.valueOf((-914));
      cMAUser0.signInCount = integer0;
      Integer integer1 = cMAUser0.getSignInCount();
      assertEquals((-914), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.lastName = "Jv9LDf6.5aib:*U?";
      String string0 = cMAUser0.getLastName();
      assertEquals("Jv9LDf6.5aib:*U?", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.lastName = "";
      String string0 = cMAUser0.getLastName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.firstName = "urn";
      String string0 = cMAUser0.getFirstName();
      assertEquals("urn", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.firstName = "";
      String string0 = cMAUser0.getFirstName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.email = "KtKI<v<=";
      String string0 = cMAUser0.getEmail();
      assertEquals("KtKI<v<=", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.email = "";
      String string0 = cMAUser0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.avatarUrl = "";
      cMAUser0.avatarUrl = "urn";
      String string0 = cMAUser0.getAvatarUrl();
      assertEquals("urn", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      cMAUser0.avatarUrl = "";
      String string0 = cMAUser0.getAvatarUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      CMASystem cMASystem0 = new CMASystem();
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      CMASystem cMASystem1 = cMASystem0.setSpace(cMALink1);
      cMAUser0.setSystem(cMASystem1);
      // Undeclared exception!
      try { 
        cMAUser0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      CMASystem cMASystem0 = cMAUser0.system;
      CMALink cMALink0 = new CMALink();
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      cMASystem0.publishedBy = cMALink1;
      // Undeclared exception!
      try { 
        cMAUser0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Boolean boolean0 = cMAUser0.isActivated();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Boolean boolean0 = cMAUser0.isConfirmed();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      String string0 = cMAUser0.getFirstName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      Integer integer0 = cMAUser0.getSignInCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      String string0 = cMAUser0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      String string0 = cMAUser0.getAvatarUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      String string0 = cMAUser0.getLastName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CMAUser cMAUser0 = new CMAUser();
      String string0 = cMAUser0.toString();
      assertEquals("CMAUser { CMAResource { system = CMASystem { type = User } } activated = null, avatarUrl = null, confirmed = null, email = null, firstName = null, lastName = null, signInCount = null }", string0);
  }
}
