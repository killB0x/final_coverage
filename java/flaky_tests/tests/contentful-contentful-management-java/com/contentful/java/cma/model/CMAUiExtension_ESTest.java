/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:37:55 GMT 2022
 */

package com.contentful.java.cma.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cma.Constants;
import com.contentful.java.cma.model.CMALink;
import com.contentful.java.cma.model.CMASystem;
import com.contentful.java.cma.model.CMAType;
import com.contentful.java.cma.model.CMAUiExtension;
import com.contentful.java.cma.model.CMAUiExtensionParameter;
import com.contentful.java.cma.model.CMAUiExtensionParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAUiExtension_ESTest extends CMAUiExtension_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CMAUiExtension.Extension cMAUiExtension_Extension0 = new CMAUiExtension.Extension();
      cMAUiExtension_Extension0.setIsOnSidebar(true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      cMAUiExtension0.setId(" extension = ");
      CMAUiExtension.Extension cMAUiExtension_Extension0 = cMAUiExtension0.extension;
      cMAUiExtension_Extension0.getParameters();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMAUiExtension.Extension cMAUiExtension_Extension0 = new CMAUiExtension.Extension();
      cMAUiExtension_Extension0.toString();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMAUiExtension.Extension cMAUiExtension_Extension0 = new CMAUiExtension.Extension();
      cMAUiExtension_Extension0.getSourceUrl();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CMAUiExtension.Extension cMAUiExtension_Extension0 = new CMAUiExtension.Extension();
      cMAUiExtension_Extension0.getName();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      cMAUiExtension0.setId(" extension = ");
      CMAUiExtension.Extension cMAUiExtension_Extension0 = cMAUiExtension0.extension;
      CMAUiExtension.Extension cMAUiExtension_Extension1 = cMAUiExtension_Extension0.setSourceContent("RichText");
      cMAUiExtension_Extension1.onSidebar = true;
      cMAUiExtension0.getExtension();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      CMASystem cMASystem0 = cMAUiExtension0.system;
      CMAType cMAType0 = CMAType.UiExtension;
      CMALink cMALink0 = new CMALink(cMAType0);
      CMALink cMALink1 = cMALink0.setSystem(cMASystem0);
      cMASystem0.setContentType(cMALink1);
      // Undeclared exception!
      cMAUiExtension0.toString();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      CMASystem cMASystem0 = new CMASystem();
      CMAUiExtension cMAUiExtension1 = cMAUiExtension0.setId("El2uin =PzFFM");
      CMALink cMALink0 = new CMALink();
      cMALink0.system = cMASystem0;
      cMASystem0.updatedBy = cMALink0;
      cMAUiExtension1.system = cMASystem0;
      // Undeclared exception!
      try { 
        cMAUiExtension0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      cMAUiExtension0.system = null;
      // Undeclared exception!
      try { 
        cMAUiExtension0.setId("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cma.model.CMAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      cMAUiExtension0.setId(" extension = ");
      cMAUiExtension0.getExtension();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      CMASystem cMASystem0 = cMAUiExtension0.system;
      CMAUiExtension.Extension cMAUiExtension_Extension0 = cMAUiExtension0.getExtension();
      cMASystem0.createdAt = "CMAUiExtension { CMAResource { system = CMASystem { type = UiExtension, environment = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Environment, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType, contentType = CMALink { CMAResource { system = CMASystem { type = Link, space = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Space, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage } } } } } extension = Extension { fieldTypes = null, name = null, onSidebar = false, sourceContent = null, sourceUrl = null, parameters = null } }";
      CMAUiExtensionParameters cMAUiExtensionParameters0 = new CMAUiExtensionParameters();
      CMAUiExtensionParameter cMAUiExtensionParameter0 = new CMAUiExtensionParameter();
      CMAUiExtensionParameter cMAUiExtensionParameter1 = cMAUiExtensionParameter0.addLabel((String) null, "CMAUiExtension { CMAResource { system = CMASystem { type = UiExtension, environment = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Environment, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType, contentType = CMALink { CMAResource { system = CMASystem { type = Link, space = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Space, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage } } } } } extension = Extension { fieldTypes = null, name = null, onSidebar = false, sourceContent = null, sourceUrl = null, parameters = null } }");
      CMAUiExtensionParameters cMAUiExtensionParameters1 = cMAUiExtensionParameters0.addInstallationParameters(cMAUiExtensionParameter1);
      cMAUiExtensionParameter0.defaultValue = "CMAUiExtension { CMAResource { system = CMASystem { type = UiExtension, environment = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Environment, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType, contentType = CMALink { CMAResource { system = CMASystem { type = Link, space = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Space, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage } } } } } extension = Extension { fieldTypes = null, name = null, onSidebar = false, sourceContent = null, sourceUrl = null, parameters = null } }";
      cMAUiExtensionParameters1.addInstanceParameters(cMAUiExtensionParameter0);
      cMAUiExtensionParameters0.addInstallationParameters(cMAUiExtensionParameter0);
      CMAUiExtensionParameters cMAUiExtensionParameters2 = cMAUiExtensionParameters1.addInstanceParameters(cMAUiExtensionParameter1);
      CMAUiExtensionParameters cMAUiExtensionParameters3 = cMAUiExtensionParameters2.addInstanceParameters(cMAUiExtensionParameter0);
      cMAUiExtensionParameters0.addInstallationParameters(cMAUiExtensionParameter0);
      CMAUiExtension.Extension cMAUiExtension_Extension1 = cMAUiExtension_Extension0.setParameters(cMAUiExtensionParameters0);
      cMAUiExtensionParameters2.addInstallationParameters(cMAUiExtensionParameter0);
      cMAUiExtensionParameters1.addInstallationParameters(cMAUiExtensionParameter1);
      cMAUiExtensionParameter0.name = "CMAUiExtension { CMAResource { system = CMASystem { type = UiExtension, environment = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Environment, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType, contentType = CMALink { CMAResource { system = CMASystem { type = Link, space = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Space, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage } } } } } extension = Extension { fieldTypes = null, name = null, onSidebar = false, sourceContent = null, sourceUrl = null, parameters = null } }";
      cMAUiExtensionParameters3.addInstanceParameters(cMAUiExtensionParameter1);
      cMAUiExtensionParameters3.addInstallationParameters(cMAUiExtensionParameter1);
      String string0 = cMAUiExtension0.toString();
      cMAUiExtension_Extension0.setSourceContent(string0);
      cMAUiExtension0.setSpaceId(string0);
      CMAUiExtension cMAUiExtension1 = cMAUiExtension0.setId(cMAUiExtension_Extension0.sourceContent);
      String string1 = cMAUiExtension1.toString();
      cMAUiExtension_Extension0.setSourceUrl(string1);
      String string2 = cMAUiExtension0.toString();
      // Undeclared exception!
      try { 
        cMAUiExtension_Extension1.setSourceContent(string2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Source content to big. Please provide less then 200kb of source code or use sourceUrl.
         //
         verifyException("com.contentful.java.cma.model.CMAUiExtension$Extension", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMAUiExtension.Extension cMAUiExtension_Extension0 = new CMAUiExtension.Extension();
      Constants.CMAFieldType constants_CMAFieldType0 = Constants.CMAFieldType.Array;
      cMAUiExtension_Extension0.addFieldType(constants_CMAFieldType0);
      CMAUiExtension.Extension cMAUiExtension_Extension1 = cMAUiExtension_Extension0.addFieldType(constants_CMAFieldType0);
      assertNull(cMAUiExtension_Extension1.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAUiExtension.Extension.FieldType cMAUiExtension_Extension_FieldType0 = new CMAUiExtension.Extension.FieldType();
      String string0 = cMAUiExtension_Extension_FieldType0.toString();
      assertEquals("FieldType { type = null }", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CMAUiExtension cMAUiExtension0 = new CMAUiExtension();
      CMAUiExtension.Extension cMAUiExtension_Extension0 = cMAUiExtension0.getExtension();
      CMAUiExtension.Extension cMAUiExtension_Extension1 = cMAUiExtension_Extension0.setName("CMAUiExtension { CMAResource { system = CMASystem { type = UiExtension, environment = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Environment, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType, contentType = CMALink { CMAResource { system = CMASystem { type = Link, space = CMALink { CMAResource { system = CMASystem { type = Link, linkType = Space, id = comcontentful.java.cma.model.CMAUiExtension$Extension$FieldType } } }, linkType = OrganizationPeriodicUsage } } } } } extension = Extension { fieldTypes = null, name = null, onSidebar = false, sourceContent = null, sourceUrl = null, parameters = null } }");
      assertNull(cMAUiExtension_Extension1.getSourceContent());
  }
}
