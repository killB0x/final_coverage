/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 18:29:58 GMT 2022
 */

package io.github.zulkar.translit.schemas;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.zulkar.translit.schemas.Gost7792000SystemB;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Gost7792000SystemB_ESTest extends Gost7792000SystemB_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      char[] charArray0 = new char[6];
      charArray0[0] = '\u0426';
      charArray0[1] = '\u0426';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("CzCz\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\u044F';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("ya", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      char[] charArray0 = new char[9];
      charArray0[0] = '\u042F';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("Ya\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      char[] charArray0 = new char[10];
      charArray0[0] = '\u0410';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = new Gost7792000SystemB();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = new Gost7792000SystemB();
      CharBuffer charBuffer0 = CharBuffer.allocate(3471);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      gost7792000SystemB0.translit(string0);
      // Undeclared exception!
      gost7792000SystemB0.translit(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = new Gost7792000SystemB();
      // Undeclared exception!
      try { 
        gost7792000SystemB0.translit((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.zulkar.translit.schemas.Gost7792000SystemB", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.append((CharSequence) "\u0000\u0000\u0000\u0000\u0000\u0000");
      // Undeclared exception!
      try { 
        gost7792000SystemB0.translit(charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      char[] charArray0 = new char[8];
      charArray0[0] = '\u0401';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("Yo\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\u0446';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Gost7792000SystemB gost7792000SystemB0 = new Gost7792000SystemB();
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("cz", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = new Gost7792000SystemB();
      char[] charArray0 = new char[4];
      charArray0[0] = '\u0446';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("cz\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '\u0453';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("\u0000\u0453", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      char[] charArray0 = new char[6];
      charArray0[5] = '\u0426';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000Cz", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '\u0436';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Gost7792000SystemB gost7792000SystemB0 = Gost7792000SystemB.INSTANCE;
      String string0 = gost7792000SystemB0.translit(charBuffer0);
      assertEquals("zh\u0000\u0000\u0000\u0000\u0000", string0);
  }
}
