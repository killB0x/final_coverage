/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 11:17:49 GMT 2022
 */

package io.github.repir.Strategy.Tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.repir.Strategy.Tools.ProximityOccurrence;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProximityOccurrence_ESTest extends ProximityOccurrence_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProximityOccurrence proximityOccurrence0 = new ProximityOccurrence(0, 0);
      int int0 = proximityOccurrence0.compareTo(proximityOccurrence0);
      assertEquals(0, proximityOccurrence0.span);
      assertEquals(0, int0);
      assertEquals(0, proximityOccurrence0.pos);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ProximityOccurrence proximityOccurrence0 = new ProximityOccurrence(0, 0);
      // Undeclared exception!
      try { 
        proximityOccurrence0.compareTo((ProximityOccurrence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.repir.Strategy.Tools.ProximityOccurrence", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ProximityOccurrence proximityOccurrence0 = new ProximityOccurrence(1220, 1220);
      ProximityOccurrence proximityOccurrence1 = new ProximityOccurrence(1220, (-5481));
      int int0 = proximityOccurrence0.compareTo(proximityOccurrence1);
      assertEquals(1, int0);
      assertEquals(1220, proximityOccurrence1.pos);
      assertEquals((-5481), proximityOccurrence1.span);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ProximityOccurrence proximityOccurrence0 = new ProximityOccurrence(738, 0);
      ProximityOccurrence proximityOccurrence1 = new ProximityOccurrence(738, 738);
      int int0 = proximityOccurrence0.compareTo(proximityOccurrence1);
      assertEquals(0, proximityOccurrence0.span);
      assertEquals(738, proximityOccurrence1.pos);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ProximityOccurrence proximityOccurrence0 = new ProximityOccurrence(0, 0);
      String string0 = proximityOccurrence0.toString();
      assertEquals("(0,0)", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ProximityOccurrence proximityOccurrence0 = new ProximityOccurrence(6, 6);
      int int0 = proximityOccurrence0.compareTo(proximityOccurrence0);
      assertEquals(6, proximityOccurrence0.pos);
      assertEquals(6, proximityOccurrence0.span);
      assertEquals(0, int0);
  }
}
