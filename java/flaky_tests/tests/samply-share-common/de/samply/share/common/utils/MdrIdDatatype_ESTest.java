/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 06:11:05 GMT 2022
 */

package de.samply.share.common.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.samply.share.common.utils.MdrIdDatatype;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MdrIdDatatype_ESTest extends MdrIdDatatype_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setVersion("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.hashCode();
      assertEquals("urnur<wZolgh:Vr:j$:}", mdrIdDatatype0.getVersion());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<wZolh:Vr:j$:}");
      mdrIdDatatype0.setVersion((String) null);
      String string0 = mdrIdDatatype0.getVersion();
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
      assertNull(string0);
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertEquals("}", mdrIdDatatype0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnkrnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setVersion("B");
      mdrIdDatatype0.getVersion();
      assertEquals("B", mdrIdDatatype0.getVersion());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
      
      mdrIdDatatype0.setNamespace((String) null);
      mdrIdDatatype0.getNamespace();
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("j$", mdrIdDatatype0.getDatatype());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnuanur<wZolh:Vr:j$:}");
      mdrIdDatatype0.setNamespace("");
      mdrIdDatatype0.getNamespace();
      assertEquals("", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      assertEquals("}", mdrIdDatatype0.getId());
      
      mdrIdDatatype0.setId((String) null);
      mdrIdDatatype0.getId();
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setId("");
      mdrIdDatatype0.getId();
      assertEquals("", mdrIdDatatype0.getId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnkrnur<wZolgh:Vr:j$:}");
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      
      mdrIdDatatype0.setDatatype((String) null);
      mdrIdDatatype0.getDatatype();
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZogh:Vr:$:}");
      mdrIdDatatype0.setId((String) null);
      // Undeclared exception!
      try { 
        mdrIdDatatype0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.samply.share.common.utils.MdrIdDatatype", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnuanurdwZlh:Vr:j$:}");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnuanurdwZlh:Vr:j$:}");
      mdrIdDatatype1.setNamespace((String) null);
      // Undeclared exception!
      try { 
        mdrIdDatatype1.equalsIgnoreVersion(mdrIdDatatype0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setDatatype((String) null);
      // Undeclared exception!
      try { 
        mdrIdDatatype0.equals(mdrIdDatatype1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = null;
      try {
        mdrIdDatatype0 = new MdrIdDatatype((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<wZolh:Vr:j$:}");
      mdrIdDatatype0.setVersion((String) null);
      mdrIdDatatype0.hashCode();
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
      assertEquals("j$", mdrIdDatatype0.getDatatype());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      
      mdrIdDatatype0.setDatatype((String) null);
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype1.equalsIgnoreVersion(mdrIdDatatype0);
      assertFalse(boolean0);
      assertEquals("}", mdrIdDatatype1.getId());
      assertEquals("Vr", mdrIdDatatype1.getNamespace());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setNamespace("aA;}_R(KTG3:&c");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype1.equalsIgnoreVersion(mdrIdDatatype0);
      assertEquals("aA;}_R(KTG3:&c", mdrIdDatatype0.getNamespace());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype0.equalsIgnoreVersion("urnur<wZolgh:Vr:j$:}");
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
      assertFalse(boolean0);
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("j$", mdrIdDatatype0.getDatatype());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnuanur<wZolh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype0.equalsIgnoreVersion((Object) null);
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertFalse(boolean0);
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype0.equalsIgnoreVersion(mdrIdDatatype0);
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertEquals("}", mdrIdDatatype0.getId());
      assertTrue(boolean0);
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      boolean boolean0 = mdrIdDatatype1.equalsIgnoreVersion(mdrIdDatatype0);
      assertEquals("", mdrIdDatatype1.getDatatype());
      assertEquals("r", mdrIdDatatype1.getNamespace());
      assertEquals(">", mdrIdDatatype1.getId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      mdrIdDatatype0.setVersion((String) null);
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      mdrIdDatatype1.setVersion((String) null);
      boolean boolean0 = mdrIdDatatype0.equals(mdrIdDatatype1);
      assertTrue(mdrIdDatatype1.equals((Object)mdrIdDatatype0));
      assertEquals(">", mdrIdDatatype1.getId());
      assertEquals("r", mdrIdDatatype1.getNamespace());
      assertEquals("", mdrIdDatatype1.getDatatype());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype1.setId("*");
      boolean boolean0 = mdrIdDatatype0.equals(mdrIdDatatype1);
      assertEquals("*", mdrIdDatatype1.getId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setDatatype(":");
      boolean boolean0 = mdrIdDatatype0.equals(mdrIdDatatype1);
      assertEquals(":", mdrIdDatatype0.getDatatype());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype0.equals("urnur<wZolgh:Vr:j$:}");
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertEquals("}", mdrIdDatatype0.getId());
      assertFalse(boolean0);
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnu<w;olgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype0.equals((Object) null);
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertFalse(boolean0);
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype0.equals(mdrIdDatatype0);
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
      assertTrue(boolean0);
      assertEquals("}", mdrIdDatatype0.getId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      boolean boolean0 = mdrIdDatatype0.equals(mdrIdDatatype1);
      assertEquals(">", mdrIdDatatype1.getId());
      assertEquals("", mdrIdDatatype1.getDatatype());
      assertTrue(boolean0);
      assertEquals("r", mdrIdDatatype1.getNamespace());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urn:Vr:j$:}:*");
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
      assertEquals("*", mdrIdDatatype0.getVersion());
      assertEquals("j$", mdrIdDatatype0.getDatatype());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = null;
      try {
        mdrIdDatatype0 = new MdrIdDatatype("urn:D~`Y&5h%ff/no-\u0003H:urn:D~`Y&5h%ff/no-\u0003H:j$:}:*:}:*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid amount of tokens: urn:D~`Y&5h%ff/no-\u0003H:urn:D~`Y&5h%ff/no-\u0003H:j$:}:*:}:*
         //
         verifyException("de.samply.share.common.utils.MdrIdDatatype", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = null;
      try {
        mdrIdDatatype0 = new MdrIdDatatype("urn$^t +");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid amount of tokens: urn$^t +
         //
         verifyException("de.samply.share.common.utils.MdrIdDatatype", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = null;
      try {
        mdrIdDatatype0 = new MdrIdDatatype("kM:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong prefix: kM:
         //
         verifyException("de.samply.share.common.utils.MdrIdDatatype", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnkrnur<wZolgh:Vr:j$:}");
      String string0 = mdrIdDatatype0.getVersion();
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
      assertEquals("", string0);
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("j$", mdrIdDatatype0.getDatatype());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      String string0 = mdrIdDatatype0.getLatestCentraxx();
      assertEquals("urn:r::>:*", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      String string0 = mdrIdDatatype0.getMajor();
      assertEquals("urn:r::>", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      mdrIdDatatype0.setVersion((String) null);
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      boolean boolean0 = mdrIdDatatype0.equals(mdrIdDatatype1);
      //  // Unstable assertion: assertTrue(mdrIdDatatype1.equals((Object)mdrIdDatatype0));
      //  // Unstable assertion: assertEquals("", mdrIdDatatype1.getDatatype());
      //  // Unstable assertion: assertEquals("r", mdrIdDatatype1.getNamespace());
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertEquals(">", mdrIdDatatype1.getId());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      String string0 = mdrIdDatatype0.getDatatype();
      assertEquals("j$", string0);
      assertEquals("}", mdrIdDatatype0.getId());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setNamespace("aA;}_R(KTG3:&c");
      MdrIdDatatype mdrIdDatatype1 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      boolean boolean0 = mdrIdDatatype1.equals(mdrIdDatatype0);
      assertEquals("aA;}_R(KTG3:&c", mdrIdDatatype0.getNamespace());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      mdrIdDatatype0.setDatatype("");
      mdrIdDatatype0.getDatatype();
      assertEquals("", mdrIdDatatype0.getDatatype());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnkrnur<wZolgh:Vr:j$:}");
      String string0 = mdrIdDatatype0.getId();
      assertEquals("}", string0);
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertEquals("Vr", mdrIdDatatype0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnurnur<;wZogh:r::>");
      String string0 = mdrIdDatatype0.getLatestMdr();
      assertEquals("urn:r::>:latest", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnkrnur<wZolgh:Vr:j$:}");
      String string0 = mdrIdDatatype0.toString();
      assertEquals("urn:Vr:j$:}:", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MdrIdDatatype mdrIdDatatype0 = new MdrIdDatatype("urnur<wZolgh:Vr:j$:}");
      String string0 = mdrIdDatatype0.getNamespace();
      assertEquals("j$", mdrIdDatatype0.getDatatype());
      assertEquals("Vr", string0);
      assertEquals("}", mdrIdDatatype0.getId());
  }
}
