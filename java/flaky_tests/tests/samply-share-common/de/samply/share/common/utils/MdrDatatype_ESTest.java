/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 06:13:48 GMT 2022
 */

package de.samply.share.common.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.samply.share.common.utils.MdrDatatype;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MdrDatatype_ESTest extends MdrDatatype_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MdrDatatype mdrDatatype0 = MdrDatatype.get("FLOAT");
      assertEquals(MdrDatatype.FLOAT, mdrDatatype0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MdrDatatype[] mdrDatatypeArray0 = MdrDatatype.values();
      assertEquals(9, mdrDatatypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MdrDatatype mdrDatatype0 = MdrDatatype.valueOf("FLOAT");
      assertEquals("FLOAT", mdrDatatype0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MdrDatatype mdrDatatype0 = MdrDatatype.get("enumerated");
      assertEquals(MdrDatatype.ENUMERATED, mdrDatatype0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        MdrDatatype.get((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value not found: null
         //
         verifyException("de.samply.share.common.utils.MdrDatatype", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MdrDatatype mdrDatatype0 = MdrDatatype.ENUMERATED;
      String string0 = mdrDatatype0.toString();
      assertEquals("enumerated", string0);
  }
}
