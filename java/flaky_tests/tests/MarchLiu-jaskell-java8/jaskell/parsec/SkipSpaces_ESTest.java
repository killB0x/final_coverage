/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 11:52:31 GMT 2022
 */

package jaskell.parsec;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jaskell.parsec.SkipSpaces;
import jaskell.parsec.State;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SkipSpaces_ESTest extends SkipSpaces_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SkipSpaces<Character, Character> skipSpaces0 = new SkipSpaces<Character, Character>();
      State<Character, Character, Character> state0 = (State<Character, Character, Character>) mock(State.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(state0).begin();
      doReturn((Object) null).when(state0).next();
      Character character0 = skipSpaces0.parse(state0);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SkipSpaces<Character, Character> skipSpaces0 = new SkipSpaces<Character, Character>();
      // Undeclared exception!
      try { 
        skipSpaces0.parse((State<Character, Character, Character>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.Skip", e);
      }
  }
}
