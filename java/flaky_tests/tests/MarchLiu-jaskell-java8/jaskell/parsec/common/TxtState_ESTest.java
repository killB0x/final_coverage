/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 09:30:31 GMT 2022
 */

package jaskell.parsec.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jaskell.parsec.Neighborhood;
import jaskell.parsec.common.TxtState;
import java.io.EOFException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TxtState_ESTest extends TxtState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TxtState txtState0 = new TxtState("^G", "^G");
      int int0 = txtState0.lineOfIndex(2);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TxtState txtState0 = new TxtState("jaskell.parsec.common.TxtState", "jaskell.parsec.common.TxtState");
      int int0 = txtState0.lineOfIndex(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TxtState txtState0 = new TxtState("g/4g9)IQN;");
      Integer integer0 = new Integer((-189));
      txtState0.commit(integer0);
      assertEquals(0, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TxtState txtState0 = new TxtState("");
      Integer integer0 = new Integer((-945));
      Integer integer1 = txtState0.begin(integer0);
      assertEquals((-945), (int)integer1);
      
      Integer integer2 = txtState0.begin();
      assertEquals(0, (int)integer2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TxtState txtState0 = new TxtState("");
      Integer integer0 = new Integer(1);
      txtState0.rollback(integer0);
      try { 
        txtState0.next();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.common.TxtState", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TxtState txtState0 = new TxtState("jJjazk19%~O");
      Integer integer0 = new Integer(10);
      txtState0.rollback(integer0);
      txtState0.status();
      assertEquals(10, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TxtState txtState0 = new TxtState("^G", "^G");
      Integer integer0 = new Integer(1);
      Integer integer1 = txtState0.begin(integer0);
      txtState0.rollback(integer1);
      txtState0.status();
      assertEquals((-1), (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TxtState txtState0 = new TxtState("CTjc+X");
      txtState0.next();
      assertEquals(1, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TxtState txtState0 = new TxtState("", "vZt@h_,v{^JK}");
      Neighborhood neighborhood0 = txtState0.neighborhood((-1));
      assertEquals(0, neighborhood0.getBottom());
      assertEquals(0, neighborhood0.getTop());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TxtState txtState0 = new TxtState("qZr5T#ewzs15IId9Ug<", "qZr5T#ewzs15IId9Ug<");
      Neighborhood neighborhood0 = txtState0.neighborhood(22);
      assertEquals(19, neighborhood0.getTop());
      assertEquals(12, neighborhood0.getBottom());
      assertEquals("IId9Ug<", neighborhood0.getContent());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TxtState txtState0 = new TxtState("", "vZt@h_,v{^JK}");
      Neighborhood neighborhood0 = txtState0.neighborhood();
      assertEquals(0, neighborhood0.getTop());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TxtState txtState0 = new TxtState("jJjazk19%~O");
      Integer integer0 = new Integer(10);
      txtState0.rollback(integer0);
      txtState0.next();
      txtState0.neighborhood();
      assertEquals(11, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TxtState txtState0 = new TxtState("QUYl0@f{JMS&T7&YPx", "Y");
      int int0 = txtState0.lineOfIndex(12);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TxtState txtState0 = new TxtState("jaskell.parsec.common.TxtState", "jaskell.parsec.common.TxtState");
      assertEquals(0, (int)txtState0.status());
      
      txtState0.next();
      Integer integer0 = txtState0.begin();
      txtState0.begin(integer0);
      assertEquals(1, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TxtState txtState0 = new TxtState("sYG", "sYG");
      assertEquals(0, (int)txtState0.status());
      
      Integer integer0 = new Integer((-762));
      txtState0.rollback(integer0);
      Integer integer1 = txtState0.begin();
      assertEquals((-762), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TxtState txtState0 = new TxtState("Expect %c at %d but %c");
      // Undeclared exception!
      try { 
        txtState0.rollback((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.common.TxtState", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TxtState txtState0 = new TxtState("9-Z:JCuA,389TKjDC<");
      Integer integer0 = new Integer((-1));
      txtState0.rollback(integer0);
      // Undeclared exception!
      try { 
        txtState0.next();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TxtState txtState0 = new TxtState("jaskell.parsec.common.TxtState", "jaskell.parsec.common.TxtState");
      // Undeclared exception!
      try { 
        txtState0.neighborhood((-481));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TxtState txtState0 = new TxtState("^G");
      Integer integer0 = new Integer((-424));
      txtState0.rollback(integer0);
      // Undeclared exception!
      try { 
        txtState0.neighborhood();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TxtState txtState0 = new TxtState("qZr5T#ewzs15IId9Ug<", "qZr5T#ewzs15IId9Ug<");
      // Undeclared exception!
      try { 
        txtState0.commit((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.common.TxtState", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TxtState txtState0 = new TxtState("Expect %c at %d but %c", "Expect %c at %d but %c");
      // Undeclared exception!
      try { 
        txtState0.begin((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.common.TxtState", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TxtState txtState0 = new TxtState("", "");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TxtState txtState0 = null;
      try {
        txtState0 = new TxtState((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TxtState txtState0 = null;
      try {
        txtState0 = new TxtState((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TxtState txtState0 = new TxtState("sYb", "sYb");
      int int0 = txtState0.lineOfIndex((-1));
      assertEquals((-1), int0);
      assertEquals(0, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TxtState txtState0 = new TxtState("sYb", "sYb");
      Integer integer0 = txtState0.begin();
      assertEquals(0, (int)integer0);
      
      txtState0.commit(integer0);
      assertEquals(0, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TxtState txtState0 = new TxtState("sYb", "sYb");
      Integer integer0 = new Integer(1);
      txtState0.commit(integer0);
      assertEquals(0, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TxtState txtState0 = new TxtState("sYb", "sYb");
      Integer integer0 = txtState0.begin();
      assertEquals(0, (int)integer0);
      
      Integer integer1 = txtState0.begin(integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TxtState txtState0 = new TxtState("sYb", "sYb");
      txtState0.begin();
      Integer integer0 = txtState0.begin();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TxtState txtState0 = new TxtState("jaskell.parsec.common.TxtState", "jaskell.parsec.common.TxtState");
      txtState0.next();
      try { 
        txtState0.next();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.common.TxtState", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TxtState txtState0 = new TxtState("9-Z:JCuA,389TKjDC<");
      txtState0.next();
      assertEquals(1, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TxtState txtState0 = new TxtState("sYb", "sYb");
      txtState0.trap("]65VU");
      assertEquals(0, (int)txtState0.status());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TxtState txtState0 = new TxtState("qZr5T#ewzs15IId9Ug<", "qZr5T#ewzs15IId9Ug<");
      Integer integer0 = txtState0.status();
      assertEquals(0, (int)integer0);
  }
}
