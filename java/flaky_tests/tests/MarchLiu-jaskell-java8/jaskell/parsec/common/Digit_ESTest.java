/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 11:09:33 GMT 2022
 */

package jaskell.parsec.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jaskell.parsec.common.Digit;
import jaskell.parsec.common.SimpleState;
import jaskell.parsec.common.State;
import jaskell.parsec.common.TxtState;
import java.io.EOFException;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Digit_ESTest extends Digit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Digit digit0 = new Digit();
      // Undeclared exception!
      try { 
        digit0.parse((State<Character>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.common.Digit", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Digit digit0 = new Digit();
      LinkedList<Character> linkedList0 = new LinkedList<Character>();
      SimpleState<Character> simpleState0 = new SimpleState<Character>(linkedList0);
      Integer integer0 = new Integer((-244));
      simpleState0.rollback(integer0);
      // Undeclared exception!
      try { 
        digit0.parse((State<Character>) simpleState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -244, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Digit digit0 = new Digit();
      TxtState txtState0 = new TxtState("");
      try { 
        digit0.parse((State<Character>) txtState0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.parsec.common.TxtState", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Digit digit0 = new Digit();
      TxtState txtState0 = new TxtState("6Mc|s=c1<()vwir");
      digit0.parse((State<Character>) txtState0);
      try { 
        digit0.parse((State<Character>) txtState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expect M is digit.
         //
         verifyException("jaskell.parsec.common.TxtState", e);
      }
  }
}
