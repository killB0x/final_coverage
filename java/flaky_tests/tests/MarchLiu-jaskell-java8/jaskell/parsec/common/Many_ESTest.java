/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 11:25:39 GMT 2022
 */

package jaskell.parsec.common;

import org.junit.Test;
import static org.junit.Assert.*;
import jaskell.parsec.common.Ahead;
import jaskell.parsec.common.Many;
import jaskell.parsec.common.Ne;
import jaskell.parsec.common.Return;
import jaskell.parsec.common.SimpleState;
import jaskell.parsec.common.State;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Many_ESTest extends Many_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Ne<LinkedList<Object>> ne0 = new Ne<LinkedList<Object>>(linkedList0);
      Ahead<LinkedList<Object>, LinkedList<Object>> ahead0 = new Ahead<LinkedList<Object>, LinkedList<Object>>(ne0);
      Many<LinkedList<Object>, LinkedList<Object>> many0 = new Many<LinkedList<Object>, LinkedList<Object>>(ahead0);
      LinkedList<LinkedList<Object>> linkedList1 = new LinkedList<LinkedList<Object>>();
      SimpleState<LinkedList<Object>> simpleState0 = new SimpleState<LinkedList<Object>>(linkedList1);
      List<LinkedList<Object>> list0 = many0.parse((State<LinkedList<Object>>) simpleState0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Return<Object, LinkedList<Object>> return0 = new Return<Object, LinkedList<Object>>(linkedList0);
      Many<Object, LinkedList<Object>> many0 = new Many<Object, LinkedList<Object>>(return0);
      SimpleState<Object> simpleState0 = new SimpleState<Object>(linkedList0);
      List<LinkedList<Object>> list0 = many0.parse((State<Object>) simpleState0);
      assertEquals(9999, list0.size());
  }
}
