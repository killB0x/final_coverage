/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 11:51:09 GMT 2022
 */

package jaskell.expression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jaskell.expression.Add;
import jaskell.expression.Env;
import jaskell.expression.Expression;
import jaskell.expression.Number;
import jaskell.expression.Parameter;
import jaskell.expression.Product;
import jaskell.expression.Quote;
import jaskell.expression.Sub;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Sub_ESTest extends Sub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Double double0 = new Double(1.0);
      Number number0 = new Number(double0);
      Sub sub0 = new Sub(number0, number0);
      double double1 = sub0.eval((Env) null);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Env env0 = new Env();
      Double double0 = new Double(3138.0);
      Number number0 = new Number(double0);
      Add add0 = new Add(number0, number0);
      Quote quote0 = new Quote(number0);
      Product product0 = new Product(add0, quote0);
      Sub sub0 = new Sub(product0, quote0);
      double double1 = sub0.eval(env0);
      assertEquals(1.969095E7, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Double double0 = new Double(1.0);
      Number number0 = new Number(double0);
      Sub sub0 = new Sub(number0, number0);
      Sub sub1 = new Sub(sub0, number0);
      double double1 = sub1.eval((Env) null);
      assertEquals((-1.0), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Parameter parameter0 = new Parameter("p2!u%<mHZ");
      Sub sub0 = new Sub(parameter0, parameter0);
      Env env0 = new Env();
      env0.put("p2!u%<mHZ", (Expression) parameter0);
      // Undeclared exception!
      sub0.eval(env0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Double double0 = new Double(3138.0);
      Number number0 = new Number(double0);
      Add add0 = new Add(number0, number0);
      Quote quote0 = new Quote(number0);
      Product product0 = new Product(add0, quote0);
      Sub sub0 = new Sub(product0, quote0);
      int int0 = sub0.getPriority();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Env env0 = new Env();
      Sub sub0 = new Sub((Expression) null, (Expression) null);
      // Undeclared exception!
      try { 
        sub0.eval(env0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.expression.Sub", e);
      }
  }
}
