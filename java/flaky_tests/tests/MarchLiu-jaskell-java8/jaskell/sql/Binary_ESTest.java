/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 12:22:36 GMT 2022
 */

package jaskell.sql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jaskell.sql.Binary;
import jaskell.sql.Less;
import jaskell.sql.Like;
import jaskell.sql.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Binary_ESTest extends Binary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Less less0 = new Less();
      Class<Integer> class0 = Integer.class;
      Predicate predicate0 = less0.lt((Object) class0);
      // Undeclared exception!
      try { 
        ((Binary) predicate0).parameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.sql.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Like like0 = new Like();
      Predicate predicate0 = like0.or((Integer) null);
      Predicate predicate1 = like0.and(predicate0);
      // Undeclared exception!
      try { 
        ((Binary) predicate1).script();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.sql.Binary", e);
      }
  }
}
