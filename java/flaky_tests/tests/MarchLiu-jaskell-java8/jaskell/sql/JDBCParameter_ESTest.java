/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 12:32:30 GMT 2022
 */

package jaskell.sql;

import org.junit.Test;
import static org.junit.Assert.*;
import jaskell.sql.JDBCParameter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDBCParameter_ESTest extends JDBCParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(2749);
      Class<Integer> class0 = Integer.class;
      JDBCParameter<Integer> jDBCParameter0 = new JDBCParameter<Integer>("", integer0, class0);
      assertEquals(0, jDBCParameter0.order());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(0);
      JDBCParameter<Integer> jDBCParameter0 = new JDBCParameter<Integer>("", integer0);
      assertFalse(jDBCParameter0.confirmed());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(2749);
      JDBCParameter<Integer> jDBCParameter0 = new JDBCParameter<Integer>(integer0);
      assertEquals("?", jDBCParameter0.script());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      Class<Integer> class0 = Integer.class;
      JDBCParameter<Integer> jDBCParameter0 = new JDBCParameter<Integer>(object0, class0);
      assertEquals(0, jDBCParameter0.order());
  }
}
