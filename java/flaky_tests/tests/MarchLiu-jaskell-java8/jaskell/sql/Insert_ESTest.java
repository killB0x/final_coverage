/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 12:25:30 GMT 2022
 */

package jaskell.sql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jaskell.script.Directive;
import jaskell.script.Parameter;
import jaskell.sql.Insert;
import jaskell.sql.Into;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Insert_ESTest extends Insert_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Insert insert0 = new Insert();
      Into into0 = insert0.into("SZmTh", "{M`R.efqDe!&Dr");
      assertNotNull(into0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Insert insert0 = new Insert();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        insert0.into("a@-}Q", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$3$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Insert insert0 = new Insert();
      // Undeclared exception!
      try { 
        insert0.into("jaskell.sql.Predicate$2", (Directive[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Insert insert0 = new Insert();
      // Undeclared exception!
      try { 
        insert0.into((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.sql.Into", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Insert insert0 = new Insert();
      List<Parameter<?>> list0 = insert0.parameters();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Insert insert0 = new Insert();
      Directive[] directiveArray0 = new Directive[9];
      Into into0 = insert0.into("", directiveArray0);
      assertNotNull(into0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Insert insert0 = new Insert();
      Into into0 = insert0.into("f~U!cFY1U)");
      assertNotNull(into0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Insert insert0 = new Insert();
      String[] stringArray0 = new String[0];
      Into into0 = insert0.into("", stringArray0);
      assertNotNull(into0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Insert insert0 = new Insert();
      String string0 = insert0.script();
      assertEquals("INSERT", string0);
  }
}
