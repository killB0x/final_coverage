/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 10:56:58 GMT 2022
 */

package jaskell.sql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jaskell.script.Parameter;
import jaskell.sql.Name;
import jaskell.sql.Quot;
import jaskell.sql.Sum;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Sum_ESTest extends Sum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Sum sum0 = new Sum("%s CROSS");
      List<Parameter<?>> list0 = sum0.parameters();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Quot quot0 = new Quot((String) null);
      Sum sum0 = new Sum(quot0);
      // Undeclared exception!
      try { 
        sum0.script();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.sql.Name", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Name name0 = new Name();
      Sum sum0 = new Sum(name0);
      String string0 = sum0.script();
      assertEquals("SUM(null)", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Sum sum0 = new Sum();
      String string0 = sum0.script();
      assertEquals("SUM(*)", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Sum sum0 = new Sum();
      // Undeclared exception!
      try { 
        sum0.parameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jaskell.sql.Sum", e);
      }
  }
}
