/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 16:25:00 GMT 2022
 */

package io.github.xy.model.response;

import org.junit.Test;
import static org.junit.Assert.*;
import io.github.xy.model.response.UploadResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UploadResponse_ESTest extends UploadResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UploadResponse uploadResponse0 = new UploadResponse();
      uploadResponse0.setRet("io.github.xy.model.response.UploadResponse$Data");
      String string0 = uploadResponse0.getRet();
      assertEquals("io.github.xy.model.response.UploadResponse$Data", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UploadResponse uploadResponse0 = new UploadResponse();
      UploadResponse.Data uploadResponse_Data0 = new UploadResponse.Data();
      uploadResponse0.setData(uploadResponse_Data0);
      UploadResponse.Data uploadResponse_Data1 = uploadResponse0.getData();
      assertNull(uploadResponse_Data1.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UploadResponse uploadResponse0 = new UploadResponse();
      uploadResponse0.setRet("");
      String string0 = uploadResponse0.getRet();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UploadResponse uploadResponse0 = new UploadResponse();
      UploadResponse.Data uploadResponse_Data0 = uploadResponse0.getData();
      assertNull(uploadResponse_Data0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UploadResponse uploadResponse0 = new UploadResponse();
      String string0 = uploadResponse0.getRet();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UploadResponse.Data uploadResponse_Data0 = new UploadResponse.Data();
      String string0 = uploadResponse_Data0.getFileId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UploadResponse.Data uploadResponse_Data0 = new UploadResponse.Data();
      uploadResponse_Data0.setFileId("");
      assertNull(uploadResponse_Data0.getErrorCode());
  }
}
