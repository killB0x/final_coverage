/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 16:17:28 GMT 2022
 */

package io.github.xy.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.xy.client.ClientConfiguration;
import io.github.xy.client.PushClient;
import io.github.xy.model.request.CancelRequest;
import io.github.xy.model.request.CommonRequest;
import io.github.xy.model.request.TagCommonRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PushClient_ESTest extends PushClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PushClient pushClient0 = PushClient.getInstance("y#U9_AmyuSt", "/upload");
      assertEquals("y#U9_AmyuSt", pushClient0.getAppKey());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PushClient pushClient0 = new PushClient("", "");
      ClientConfiguration clientConfiguration0 = pushClient0.getConfig();
      assertNull(clientConfiguration0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration((-3050), (-3544L), (-3544L), 29L);
      PushClient pushClient0 = PushClient.getInstance("<n z", "receipt_type", clientConfiguration0);
      pushClient0.setConfig(clientConfiguration0);
      clientConfiguration0.setWriteTimeout((-3544L));
      ClientConfiguration clientConfiguration1 = pushClient0.getConfig();
      assertEquals((-3544L), clientConfiguration1.getWriteTimeout());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      PushClient pushClient0 = PushClient.getInstance("gD|]3gm{aTf#5", "", clientConfiguration0);
      String string0 = pushClient0.getAppMasterSecret();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PushClient pushClient0 = new PushClient((String) null, "do}b6,EA~D|{4C86W");
      String string0 = pushClient0.getAppKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      PushClient pushClient0 = PushClient.getInstance("", "", clientConfiguration0);
      String string0 = pushClient0.getAppKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PushClient pushClient0 = PushClient.getInstance("", "");
      // Undeclared exception!
      try { 
        pushClient0.setNecessaryParams((CommonRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.xy.client.PushClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        PushClient.getInstance((String) null, (String) null, (ClientConfiguration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        PushClient.getInstance((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PushClient pushClient0 = PushClient.getInstance("7!F0", "7!F0");
      String string0 = pushClient0.getAppKey();
      assertEquals("7!F0", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      PushClient pushClient0 = new PushClient("E=", "#!ZqCB,uP", clientConfiguration0);
      pushClient0.setConfig(clientConfiguration0);
      assertEquals("E=", pushClient0.getAppKey());
      assertEquals("#!ZqCB,uP", pushClient0.getAppMasterSecret());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PushClient pushClient0 = PushClient.getInstance("Xxa/}8Ad#2N=7pcwIll", "Xxa/}8Ad#2N=7pcwIll", (ClientConfiguration) null);
      assertEquals("Xxa/}8Ad#2N=7pcwIll", pushClient0.getAppKey());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PushClient pushClient0 = PushClient.getInstance("E=", "#!ZqCB,uP");
      String string0 = pushClient0.getAppMasterSecret();
      assertEquals("#!ZqCB,uP", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      PushClient pushClient0 = new PushClient("E=", "#!ZqCB,uP", clientConfiguration0);
      // Undeclared exception!
      try { 
        pushClient0.getWholeUrl("OOzgb}YR~Sg^&YM!)#", (String) null, ",io*j@j-u`>s%bk~{/");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/codec/digest/DigestUtils
         //
         verifyException("io.github.xy.util.SignUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      PushClient pushClient0 = new PushClient("E=", "#!ZqCB,uP", clientConfiguration0);
      String string0 = pushClient0.getAppMasterSecret();
      assertEquals("#!ZqCB,uP", string0);
      assertEquals("E=", pushClient0.getAppKey());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      PushClient pushClient0 = new PushClient("E=", "#!ZqCB,uP", clientConfiguration0);
      TagCommonRequest tagCommonRequest0 = new TagCommonRequest();
      pushClient0.setNecessaryParams(tagCommonRequest0);
      CancelRequest cancelRequest0 = new CancelRequest();
      cancelRequest0.setTaskId("E=");
      cancelRequest0.setTimestamp("#!ZqCB,uP");
      pushClient0.setNecessaryParams(cancelRequest0);
      PushClient.getInstance("E=", "#!ZqCB,uP", clientConfiguration0);
      ClientConfiguration clientConfiguration1 = new ClientConfiguration((-1561), 10000L, 10000L, 10000L);
      assertEquals(10000L, clientConfiguration1.getWriteTimeout());
  }
}
