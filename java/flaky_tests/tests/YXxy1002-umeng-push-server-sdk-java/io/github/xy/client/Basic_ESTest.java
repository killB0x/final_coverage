/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 16:18:58 GMT 2022
 */

package io.github.xy.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.xy.client.Basic;
import io.github.xy.client.ClientConfiguration;
import io.github.xy.client.PushClient;
import io.github.xy.model.request.CancelRequest;
import io.github.xy.model.request.StatusRequest;
import io.github.xy.model.request.TaskStatRequest;
import io.github.xy.model.request.UploadRequest;
import io.github.xy.model.request.send.UmengNotification;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Basic_ESTest extends Basic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Basic basic0 = new Basic((PushClient) null);
      // Undeclared exception!
      try { 
        basic0.upload((UploadRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PushClient pushClient0 = new PushClient("", "");
      TaskStatRequest taskStatRequest0 = new TaskStatRequest();
      // Undeclared exception!
      try { 
        pushClient0.basic.taskStat(taskStatRequest0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.github.xy.util.GsonUtil
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Basic basic0 = new Basic((PushClient) null);
      StatusRequest statusRequest0 = new StatusRequest();
      // Undeclared exception!
      try { 
        basic0.status(statusRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Basic basic0 = new Basic((PushClient) null);
      CancelRequest cancelRequest0 = new CancelRequest();
      // Undeclared exception!
      try { 
        basic0.cancel(cancelRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PushClient pushClient0 = new PushClient("NM#. D$", "NM#. D$");
      UploadRequest uploadRequest0 = new UploadRequest();
      // Undeclared exception!
      try { 
        pushClient0.basic.upload(uploadRequest0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.github.xy.util.GsonUtil
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Basic basic0 = new Basic((PushClient) null);
      TaskStatRequest taskStatRequest0 = new TaskStatRequest();
      // Undeclared exception!
      try { 
        basic0.taskStat(taskStatRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PushClient pushClient0 = new PushClient("", "");
      StatusRequest statusRequest0 = new StatusRequest();
      // Undeclared exception!
      try { 
        pushClient0.basic.status(statusRequest0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.github.xy.util.GsonUtil
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      PushClient pushClient0 = PushClient.getInstance("/api/tag/list", "/api/tag/list", clientConfiguration0);
      CancelRequest cancelRequest0 = new CancelRequest();
      // Undeclared exception!
      try { 
        pushClient0.basic.cancel(cancelRequest0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.github.xy.util.GsonUtil
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Basic basic0 = new Basic((PushClient) null);
      // Undeclared exception!
      try { 
        basic0.send((UmengNotification) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.xy.client.Basic", e);
      }
  }
}
