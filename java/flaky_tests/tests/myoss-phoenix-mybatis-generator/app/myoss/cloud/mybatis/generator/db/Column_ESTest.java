/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 06:07:06 GMT 2022
 */

package app.myoss.cloud.mybatis.generator.db;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import app.myoss.cloud.mybatis.generator.db.Column;
import app.myoss.cloud.mybatis.generator.db.IndexInfo;
import app.myoss.cloud.mybatis.generator.types.impl.FullyQualifiedJavaType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Column_ESTest extends Column_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      column0.setJdbcType(3381);
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertEquals(3381, column0.getJdbcType());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertFalse(boolean0);
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertEquals(3381, column0.getJdbcType());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNotNull(column0);
      
      column0.setJdbcType((-1911307121));
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isPrimaryKey());
      assertEquals((-1911307121), column0.getJdbcType());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertFalse(boolean0);
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isPrimaryKey());
      assertEquals((-1911307121), column0.getJdbcType());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertNotNull(column0);
      
      column0.setScale((-1846100702));
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertEquals((-1846100702), column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      
      column0.hashCode();
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertEquals((-1846100702), column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNotNull(column0);
      
      column0.setLength(246);
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(246, column0.getLength());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      
      column0.hashCode();
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(246, column0.getLength());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      column0.setJdbcType(59);
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getTableAlias());
      assertEquals(59, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      
      column0.hashCode();
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getTableAlias());
      assertEquals(59, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertNotNull(column0);
      
      Column column1 = new Column();
      assertTrue(column1.equals((Object)column0));
      assertNull(column1.getRemarks());
      assertEquals(0, column1.getLength());
      assertFalse(column1.isGeneratedColumn());
      assertFalse(column1.isNullable());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isPrimaryKey());
      assertFalse(column1.isSuperClassField());
      assertEquals(0, column1.getScale());
      assertFalse(column1.isGeneratedAlways());
      assertNull(column1.getJdbcTypeName());
      assertEquals(0, column1.getJdbcType());
      assertFalse(column1.isColumnNameDelimited());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isAutoIncrement());
      assertNull(column1.getEscapedColumnName());
      assertFalse(column1.isBLOBColumn());
      assertFalse(column1.isIdentity());
      assertNull(column1.getDefaultValue());
      assertFalse(column1.isSequenceColumn());
      assertNull(column1.getColumnName());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getTypeHandler());
      assertFalse(column1.isJdbcCharacterColumn());
      assertNotNull(column1);
      
      column1.setScale((-1912147403));
      assertNotSame(column1, column0);
      assertFalse(column1.equals((Object)column0));
      assertNull(column1.getRemarks());
      assertEquals(0, column1.getLength());
      assertFalse(column1.isGeneratedColumn());
      assertFalse(column1.isNullable());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isPrimaryKey());
      assertFalse(column1.isSuperClassField());
      assertFalse(column1.isGeneratedAlways());
      assertEquals((-1912147403), column1.getScale());
      assertNull(column1.getJdbcTypeName());
      assertEquals(0, column1.getJdbcType());
      assertFalse(column1.isColumnNameDelimited());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isAutoIncrement());
      assertNull(column1.getEscapedColumnName());
      assertFalse(column1.isBLOBColumn());
      assertFalse(column1.isIdentity());
      assertNull(column1.getDefaultValue());
      assertFalse(column1.isSequenceColumn());
      assertNull(column1.getColumnName());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getTypeHandler());
      assertFalse(column1.isJdbcCharacterColumn());
      
      boolean boolean0 = column0.equals(column1);
      assertNotSame(column0, column1);
      assertNotSame(column1, column0);
      assertFalse(boolean0);
      assertFalse(column0.equals((Object)column1));
      assertFalse(column1.equals((Object)column0));
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertNull(column1.getRemarks());
      assertEquals(0, column1.getLength());
      assertFalse(column1.isGeneratedColumn());
      assertFalse(column1.isNullable());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isPrimaryKey());
      assertFalse(column1.isSuperClassField());
      assertFalse(column1.isGeneratedAlways());
      assertEquals((-1912147403), column1.getScale());
      assertNull(column1.getJdbcTypeName());
      assertEquals(0, column1.getJdbcType());
      assertFalse(column1.isColumnNameDelimited());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isAutoIncrement());
      assertNull(column1.getEscapedColumnName());
      assertFalse(column1.isBLOBColumn());
      assertFalse(column1.isIdentity());
      assertNull(column1.getDefaultValue());
      assertFalse(column1.isSequenceColumn());
      assertNull(column1.getColumnName());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getTypeHandler());
      assertFalse(column1.isJdbcCharacterColumn());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      Column column1 = new Column();
      assertTrue(column1.equals((Object)column0));
      assertNull(column1.getTypeHandler());
      assertEquals(0, column1.getScale());
      assertFalse(column1.isAutoIncrement());
      assertFalse(column1.isGeneratedColumn());
      assertFalse(column1.isNullable());
      assertEquals(0, column1.getJdbcType());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isPrimaryKey());
      assertNull(column1.getEscapedColumnName());
      assertFalse(column1.isGeneratedAlways());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isSuperClassField());
      assertFalse(column1.isBLOBColumn());
      assertEquals(0, column1.getLength());
      assertFalse(column1.isColumnNameDelimited());
      assertNull(column1.getJdbcTypeName());
      assertFalse(column1.isSequenceColumn());
      assertNull(column1.getRemarks());
      assertFalse(column1.isIdentity());
      assertFalse(column1.isJdbcCharacterColumn());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getColumnName());
      assertNull(column1.getDefaultValue());
      assertNotNull(column1);
      
      column1.setLength((-1940));
      assertNotSame(column1, column0);
      assertFalse(column1.equals((Object)column0));
      assertNull(column1.getTypeHandler());
      assertEquals(0, column1.getScale());
      assertFalse(column1.isAutoIncrement());
      assertFalse(column1.isGeneratedColumn());
      assertFalse(column1.isNullable());
      assertEquals((-1940), column1.getLength());
      assertEquals(0, column1.getJdbcType());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isPrimaryKey());
      assertNull(column1.getEscapedColumnName());
      assertFalse(column1.isGeneratedAlways());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isSuperClassField());
      assertFalse(column1.isBLOBColumn());
      assertFalse(column1.isColumnNameDelimited());
      assertNull(column1.getJdbcTypeName());
      assertFalse(column1.isSequenceColumn());
      assertNull(column1.getRemarks());
      assertFalse(column1.isIdentity());
      assertFalse(column1.isJdbcCharacterColumn());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getColumnName());
      assertNull(column1.getDefaultValue());
      
      boolean boolean0 = column1.equals(column0);
      assertNotSame(column0, column1);
      assertNotSame(column1, column0);
      assertFalse(boolean0);
      assertFalse(column0.equals((Object)column1));
      assertFalse(column1.equals((Object)column0));
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNull(column1.getTypeHandler());
      assertEquals(0, column1.getScale());
      assertFalse(column1.isAutoIncrement());
      assertFalse(column1.isGeneratedColumn());
      assertFalse(column1.isNullable());
      assertEquals((-1940), column1.getLength());
      assertEquals(0, column1.getJdbcType());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isPrimaryKey());
      assertNull(column1.getEscapedColumnName());
      assertFalse(column1.isGeneratedAlways());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isSuperClassField());
      assertFalse(column1.isBLOBColumn());
      assertFalse(column1.isColumnNameDelimited());
      assertNull(column1.getJdbcTypeName());
      assertFalse(column1.isSequenceColumn());
      assertNull(column1.getRemarks());
      assertFalse(column1.isIdentity());
      assertFalse(column1.isJdbcCharacterColumn());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getColumnName());
      assertNull(column1.getDefaultValue());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertNotNull(column0);
      
      column0.setJdbcType(2123);
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertEquals(2123, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      assertFalse(column1.isSequenceColumn());
      assertFalse(column1.isColumnNameDelimited());
      assertFalse(column1.isAutoIncrement());
      assertNull(column1.getJdbcTypeName());
      assertNull(column1.getTypeHandler());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getEscapedColumnName());
      assertNull(column1.getRemarks());
      assertNull(column1.getDefaultValue());
      assertNull(column1.getColumnName());
      assertEquals(0, column1.getLength());
      assertFalse(column1.isIdentity());
      assertFalse(column1.isSuperClassField());
      assertFalse(column1.isJdbcCharacterColumn());
      assertFalse(column1.isBLOBColumn());
      assertFalse(column1.isPrimaryKey());
      assertFalse(column1.isGeneratedColumn());
      assertEquals(0, column1.getScale());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isNullable());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isGeneratedAlways());
      assertEquals(0, column1.getJdbcType());
      assertNotNull(column1);
      
      boolean boolean0 = column1.equals(column0);
      assertNotSame(column0, column1);
      assertNotSame(column1, column0);
      assertFalse(boolean0);
      assertFalse(column0.equals((Object)column1));
      assertFalse(column1.equals((Object)column0));
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertEquals(2123, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column1.isSequenceColumn());
      assertFalse(column1.isColumnNameDelimited());
      assertFalse(column1.isAutoIncrement());
      assertNull(column1.getJdbcTypeName());
      assertNull(column1.getTypeHandler());
      assertFalse(column1.isIndexColumn());
      assertNull(column1.getEscapedColumnName());
      assertNull(column1.getRemarks());
      assertNull(column1.getDefaultValue());
      assertNull(column1.getColumnName());
      assertEquals(0, column1.getLength());
      assertFalse(column1.isIdentity());
      assertFalse(column1.isSuperClassField());
      assertFalse(column1.isJdbcCharacterColumn());
      assertFalse(column1.isBLOBColumn());
      assertFalse(column1.isPrimaryKey());
      assertFalse(column1.isGeneratedColumn());
      assertEquals(0, column1.getScale());
      assertNull(column1.getJavaProperty());
      assertFalse(column1.isNullable());
      assertNull(column1.getTableAlias());
      assertFalse(column1.isGeneratedAlways());
      assertEquals(0, column1.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      column0.setSuperClassField(true);
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertTrue(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      
      boolean boolean0 = column0.isSuperClassField();
      assertTrue(boolean0);
      assertNull(column0.getTableAlias());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertTrue(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getStringInstance();
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertEquals("java.lang", fullyQualifiedJavaType0.getPackageName());
      assertEquals("String", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("java.lang.String", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertNotNull(fullyQualifiedJavaType0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertEquals("java.lang", fullyQualifiedJavaType0.getPackageName());
      assertEquals("String", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("java.lang.String", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      
      boolean boolean0 = column0.isStringColumn();
      assertTrue(boolean0);
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getNewListInstance();
      assertEquals("List", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.List", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertNotNull(fullyQualifiedJavaType0);
      
      Column column0 = new Column();
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNotNull(column0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertEquals("List", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.List", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      
      boolean boolean0 = column0.isStringColumn();
      assertFalse(boolean0);
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNotNull(column0);
      
      column0.setSequenceColumn(true);
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertTrue(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      
      boolean boolean0 = column0.isSequenceColumn();
      assertTrue(boolean0);
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertTrue(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getLength());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNotNull(column0);
      
      column0.setPrimaryKey(true);
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertTrue(column0.isPrimaryKey());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getLength());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      
      boolean boolean0 = column0.isPrimaryKey();
      assertTrue(boolean0);
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertTrue(column0.isPrimaryKey());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getLength());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertNotNull(column0);
      
      column0.setNullable(true);
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertTrue(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      
      boolean boolean0 = column0.isNullable();
      assertTrue(boolean0);
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertTrue(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertNotNull(column0);
      
      column0.setIndexColumn(true);
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIdentity());
      assertTrue(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      
      boolean boolean0 = column0.isIndexColumn();
      assertTrue(boolean0);
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIdentity());
      assertTrue(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNotNull(column0);
      
      column0.setIdentity(true);
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedColumn());
      assertTrue(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      
      boolean boolean0 = column0.isIdentity();
      assertTrue(boolean0);
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedColumn());
      assertTrue(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertNotNull(column0);
      
      column0.setGeneratedColumn(true);
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertTrue(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      
      boolean boolean0 = column0.isGeneratedColumn();
      assertTrue(boolean0);
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertTrue(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      column0.setGeneratedAlways(true);
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertTrue(column0.isGeneratedAlways());
      
      boolean boolean0 = column0.isGeneratedAlways();
      assertTrue(boolean0);
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertTrue(column0.isGeneratedAlways());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNotNull(column0);
      
      column0.setColumnNameDelimited(true);
      assertNull(column0.getTableAlias());
      assertTrue(column0.isColumnNameDelimited());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      
      boolean boolean0 = column0.isColumnNameDelimited();
      assertTrue(boolean0);
      assertNull(column0.getTableAlias());
      assertTrue(column0.isColumnNameDelimited());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertNotNull(column0);
      
      column0.setAutoIncrement(true);
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isPrimaryKey());
      assertTrue(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      
      boolean boolean0 = column0.isAutoIncrement();
      assertTrue(boolean0);
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isPrimaryKey());
      assertTrue(column0.isAutoIncrement());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNotNull(column0);
      
      column0.setTypeHandler("%BEQqSFMl|T|");
      assertEquals("%BEQqSFMl|T|", column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      
      String string0 = column0.getTypeHandler();
      assertEquals("%BEQqSFMl|T|", string0);
      assertEquals("%BEQqSFMl|T|", column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertNotNull(column0);
      
      column0.setTableAlias("LONGVARBINARY");
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertEquals("LONGVARBINARY", column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      
      String string0 = column0.getTableAlias();
      assertEquals("LONGVARBINARY", string0);
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertEquals("LONGVARBINARY", column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      assertNotNull(column0);
      
      column0.setTableAlias("");
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertEquals("", column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      
      String string0 = column0.getTableAlias();
      assertEquals("", string0);
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertEquals("", column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertNotNull(column0);
      
      column0.setScale(2495);
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(2495, column0.getScale());
      
      int int0 = column0.getScale();
      assertEquals(2495, int0);
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(2495, column0.getScale());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isBLOBColumn());
      assertNotNull(column0);
      
      column0.setScale((-1846100702));
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertEquals((-1846100702), column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isBLOBColumn());
      
      int int0 = column0.getScale();
      assertEquals((-1846100702), int0);
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertEquals((-1846100702), column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isBLOBColumn());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      column0.setRemarks("7m5hN)hMjFt}$");
      assertEquals("7m5hN)hMjFt}$", column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      
      String string0 = column0.getRemarks();
      assertEquals("7m5hN)hMjFt}$", string0);
      assertEquals("7m5hN)hMjFt}$", column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNotNull(column0);
      
      column0.setRemarks("");
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertEquals("", column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      
      String string0 = column0.getRemarks();
      assertEquals("", string0);
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertEquals("", column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      column0.setLength(63);
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(63, column0.getLength());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      
      int int0 = column0.getLength();
      assertEquals(63, int0);
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(63, column0.getLength());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      column0.setLength((-346));
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals((-346), column0.getLength());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      
      int int0 = column0.getLength();
      assertEquals((-346), int0);
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals((-346), column0.getLength());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getJavaProperty());
      assertNotNull(column0);
      
      column0.setJdbcTypeName("java.lang.Boolean");
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getJavaProperty());
      assertEquals("java.lang.Boolean", column0.getJdbcTypeName());
      
      String string0 = column0.getJdbcTypeName();
      assertEquals("java.lang.Boolean", string0);
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getJavaProperty());
      assertEquals("java.lang.Boolean", column0.getJdbcTypeName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertNotNull(column0);
      
      column0.setJdbcTypeName("");
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals("", column0.getJdbcTypeName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      
      String string0 = column0.getJdbcTypeName();
      assertEquals("", string0);
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals("", column0.getJdbcTypeName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertNotNull(column0);
      
      column0.setJdbcType(1);
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertEquals(1, column0.getJdbcType());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertTrue(column0.isJdbcCharacterColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      
      int int0 = column0.getJdbcType();
      assertEquals(1, int0);
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertEquals(1, column0.getJdbcType());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertTrue(column0.isJdbcCharacterColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      column0.setJdbcType((-1391));
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals((-1391), column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      
      int int0 = column0.getJdbcType();
      assertEquals((-1391), int0);
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals((-1391), column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertNotNull(column0);
      
      column0.setJavaProperty("java.util.Date");
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertEquals("java.util.Date", column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      
      String string0 = column0.getJavaProperty();
      assertEquals("java.util.Date", string0);
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertEquals("java.util.Date", column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNotNull(column0);
      
      column0.setJavaProperty("");
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertEquals("", column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      
      String string0 = column0.getJavaProperty();
      assertEquals("", string0);
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertEquals("", column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      IndexInfo indexInfo0 = new IndexInfo();
      assertNull(indexInfo0.getIndexName());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getNonUnique());
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      assertNotNull(indexInfo0);
      
      indexInfo0.setType(1733);
      assertNull(indexInfo0.getIndexName());
      assertEquals(1733, indexInfo0.getType());
      assertNull(indexInfo0.getNonUnique());
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      
      column0.setIndexInfo(indexInfo0);
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNull(indexInfo0.getIndexName());
      assertEquals(1733, indexInfo0.getType());
      assertNull(indexInfo0.getNonUnique());
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      
      IndexInfo indexInfo1 = column0.getIndexInfo();
      assertSame(indexInfo1, indexInfo0);
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNull(indexInfo1.getColumnName());
      assertEquals(0, indexInfo1.getOrdinalPosition());
      assertEquals(1733, indexInfo1.getType());
      assertNull(indexInfo1.getNonUnique());
      assertNull(indexInfo1.getIndexName());
      assertNull(indexInfo1.getAscOrDesc());
      assertNotNull(indexInfo1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTypeHandler());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSequenceColumn());
      assertNotNull(column0);
      
      IndexInfo indexInfo0 = new IndexInfo();
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getIndexName());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      assertNull(indexInfo0.getNonUnique());
      assertNotNull(indexInfo0);
      
      indexInfo0.setType((-1456017094));
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertEquals((-1456017094), indexInfo0.getType());
      assertNull(indexInfo0.getIndexName());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      assertNull(indexInfo0.getNonUnique());
      
      column0.setIndexInfo(indexInfo0);
      assertNull(column0.getTypeHandler());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertEquals((-1456017094), indexInfo0.getType());
      assertNull(indexInfo0.getIndexName());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      assertNull(indexInfo0.getNonUnique());
      
      IndexInfo indexInfo1 = column0.getIndexInfo();
      assertSame(indexInfo1, indexInfo0);
      assertNull(column0.getTypeHandler());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getRemarks());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(indexInfo1.getColumnName());
      assertNull(indexInfo1.getAscOrDesc());
      assertNull(indexInfo1.getIndexName());
      assertEquals((-1456017094), indexInfo1.getType());
      assertNull(indexInfo1.getNonUnique());
      assertEquals(0, indexInfo1.getOrdinalPosition());
      assertNotNull(indexInfo1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNotNull(column0);
      
      IndexInfo indexInfo0 = new IndexInfo();
      assertNull(indexInfo0.getNonUnique());
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getIndexName());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      assertEquals(0, indexInfo0.getType());
      assertNotNull(indexInfo0);
      
      column0.setIndexInfo(indexInfo0);
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(indexInfo0.getNonUnique());
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getIndexName());
      assertNull(indexInfo0.getColumnName());
      assertNull(indexInfo0.getAscOrDesc());
      assertEquals(0, indexInfo0.getType());
      
      IndexInfo indexInfo1 = column0.getIndexInfo();
      assertSame(indexInfo1, indexInfo0);
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, indexInfo1.getType());
      assertEquals(0, indexInfo1.getOrdinalPosition());
      assertNull(indexInfo1.getIndexName());
      assertNull(indexInfo1.getColumnName());
      assertNull(indexInfo1.getAscOrDesc());
      assertNull(indexInfo1.getNonUnique());
      assertNotNull(indexInfo1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNotNull(column0);
      
      IndexInfo indexInfo0 = new IndexInfo();
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getColumnName());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getAscOrDesc());
      assertNull(indexInfo0.getIndexName());
      assertNull(indexInfo0.getNonUnique());
      assertNotNull(indexInfo0);
      
      indexInfo0.setOrdinalPosition(1446);
      assertNull(indexInfo0.getColumnName());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getAscOrDesc());
      assertNull(indexInfo0.getIndexName());
      assertEquals(1446, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getNonUnique());
      
      column0.setIndexInfo(indexInfo0);
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(indexInfo0.getColumnName());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getAscOrDesc());
      assertNull(indexInfo0.getIndexName());
      assertEquals(1446, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getNonUnique());
      
      IndexInfo indexInfo1 = column0.getIndexInfo();
      assertSame(indexInfo1, indexInfo0);
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertEquals(1446, indexInfo1.getOrdinalPosition());
      assertEquals(0, indexInfo1.getType());
      assertNull(indexInfo1.getNonUnique());
      assertNull(indexInfo1.getColumnName());
      assertNull(indexInfo1.getAscOrDesc());
      assertNull(indexInfo1.getIndexName());
      assertNotNull(indexInfo1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNotNull(column0);
      
      IndexInfo indexInfo0 = new IndexInfo();
      assertNull(indexInfo0.getNonUnique());
      assertEquals(0, indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getIndexName());
      assertNull(indexInfo0.getAscOrDesc());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getColumnName());
      assertNotNull(indexInfo0);
      
      indexInfo0.setOrdinalPosition((-1792649472));
      assertNull(indexInfo0.getNonUnique());
      assertNull(indexInfo0.getIndexName());
      assertEquals((-1792649472), indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getAscOrDesc());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getColumnName());
      
      column0.setIndexInfo(indexInfo0);
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(indexInfo0.getNonUnique());
      assertNull(indexInfo0.getIndexName());
      assertEquals((-1792649472), indexInfo0.getOrdinalPosition());
      assertNull(indexInfo0.getAscOrDesc());
      assertEquals(0, indexInfo0.getType());
      assertNull(indexInfo0.getColumnName());
      
      IndexInfo indexInfo1 = column0.getIndexInfo();
      assertSame(indexInfo1, indexInfo0);
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTableAlias());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertEquals((-1792649472), indexInfo1.getOrdinalPosition());
      assertNull(indexInfo1.getAscOrDesc());
      assertNull(indexInfo1.getIndexName());
      assertNull(indexInfo1.getNonUnique());
      assertNull(indexInfo1.getColumnName());
      assertEquals(0, indexInfo1.getType());
      assertNotNull(indexInfo1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getBooleanPrimitiveInstance();
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("boolean", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isPrimitive());
      assertEquals("boolean", fullyQualifiedJavaType0.getBaseShortName());
      assertNotNull(fullyQualifiedJavaType0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("boolean", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isPrimitive());
      assertEquals("boolean", fullyQualifiedJavaType0.getBaseShortName());
      
      FullyQualifiedJavaType fullyQualifiedJavaType1 = column0.getFullyQualifiedJavaType();
      assertSame(fullyQualifiedJavaType1, fullyQualifiedJavaType0);
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertTrue(fullyQualifiedJavaType1.isPrimitive());
      assertFalse(fullyQualifiedJavaType1.isArray());
      assertFalse(fullyQualifiedJavaType1.isBoundedWildcard());
      assertEquals("boolean", fullyQualifiedJavaType1.getBaseShortName());
      assertFalse(fullyQualifiedJavaType1.isWildcardType());
      assertFalse(fullyQualifiedJavaType1.isExtendsBoundedWildcard());
      assertEquals("", fullyQualifiedJavaType1.getPackageName());
      assertEquals("boolean", fullyQualifiedJavaType1.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType1.isExplicitlyImported());
      assertNotNull(fullyQualifiedJavaType1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getDateInstance();
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertNotNull(fullyQualifiedJavaType0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      
      FullyQualifiedJavaType fullyQualifiedJavaType1 = column0.getFullyQualifiedJavaType();
      assertSame(fullyQualifiedJavaType1, fullyQualifiedJavaType0);
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(fullyQualifiedJavaType1.isArray());
      assertEquals("Date", fullyQualifiedJavaType1.getBaseShortName());
      assertTrue(fullyQualifiedJavaType1.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType1.isWildcardType());
      assertFalse(fullyQualifiedJavaType1.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType1.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType1.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType1.isPrimitive());
      assertEquals("java.util", fullyQualifiedJavaType1.getPackageName());
      assertNotNull(fullyQualifiedJavaType1);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      column0.setEscapedColumnName("List");
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertEquals("List", column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      
      String string0 = column0.getEscapedColumnName();
      assertEquals("List", string0);
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertEquals("List", column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertNotNull(column0);
      
      column0.setEscapedColumnName("");
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertEquals("", column0.getEscapedColumnName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      
      String string0 = column0.getEscapedColumnName();
      assertEquals("", string0);
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertEquals("", column0.getEscapedColumnName());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNotNull(column0);
      
      column0.setDefaultValue("LONGNVARCHAR");
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertEquals("LONGNVARCHAR", column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      
      String string0 = column0.getDefaultValue();
      assertEquals("LONGNVARCHAR", string0);
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertEquals("LONGNVARCHAR", column0.getDefaultValue());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      column0.setDefaultValue("");
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertEquals("", column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      
      String string0 = column0.getDefaultValue();
      assertEquals("", string0);
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertEquals("", column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNotNull(column0);
      
      boolean boolean0 = column0.canEqual(column0);
      assertTrue(boolean0);
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNotNull(column0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = column0.canEqual(object0);
      assertFalse(boolean0);
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = new FullyQualifiedJavaType("X");
      assertEquals("X", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertEquals("X", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertEquals("", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertNotNull(fullyQualifiedJavaType0);
      
      fullyQualifiedJavaType0.addTypeArgument(fullyQualifiedJavaType0);
      assertEquals("X", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertEquals("X", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertEquals("", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isArray());
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertEquals("X", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertEquals("X", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertEquals("", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isArray());
      
      // Undeclared exception!
      try { 
        column0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getDateInstance();
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertNotNull(fullyQualifiedJavaType0);
      
      fullyQualifiedJavaType0.addTypeArgument((FullyQualifiedJavaType) null);
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      
      // Undeclared exception!
      try { 
        column0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("app.myoss.cloud.mybatis.generator.types.impl.FullyQualifiedJavaType", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getNewHashMapInstance();
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.HashMap", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertEquals("HashMap", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertNotNull(fullyQualifiedJavaType0);
      
      fullyQualifiedJavaType0.addTypeArgument(fullyQualifiedJavaType0);
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.HashMap", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertEquals("HashMap", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.HashMap", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertEquals("HashMap", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      
      // Undeclared exception!
      try { 
        column0.isJDBCTimeColumn();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      // Undeclared exception!
      try { 
        column0.isJDBCTimeColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("app.myoss.cloud.mybatis.generator.db.Column", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getObjectInstance();
      assertEquals("java.lang", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.lang.Object", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Object", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertNotNull(fullyQualifiedJavaType0);
      
      fullyQualifiedJavaType0.addTypeArgument(fullyQualifiedJavaType0);
      assertEquals("java.lang", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.lang.Object", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Object", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertEquals("java.lang", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.lang.Object", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Object", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      
      // Undeclared exception!
      try { 
        column0.isJDBCDateColumn();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getTableAlias());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      // Undeclared exception!
      try { 
        column0.isJDBCDateColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("app.myoss.cloud.mybatis.generator.db.Column", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isColumnNameDelimited();
      assertFalse(boolean0);
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNotNull(column0);
      
      String string0 = column0.getTypeHandler();
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      String string0 = column0.getRemarks();
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertNotNull(column0);
      
      int int0 = column0.getLength();
      assertEquals(0, int0);
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNotNull(column0);
      
      String string0 = column0.getJavaProperty();
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isIdentity());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = column0.getFullyQualifiedJavaType();
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertNull(fullyQualifiedJavaType0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isAutoIncrement();
      assertFalse(boolean0);
      assertNull(column0.getDefaultValue());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getRemarks());
      assertFalse(column0.isNullable());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNotNull(column0);
      
      IndexInfo indexInfo0 = column0.getIndexInfo();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(indexInfo0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNotNull(column0);
      
      int int0 = column0.getJdbcType();
      assertEquals(0, int0);
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNotNull(column0);
      
      String string0 = column0.getEscapedColumnName();
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isNullable();
      assertFalse(boolean0);
      assertNull(column0.getTableAlias());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isPrimaryKey();
      assertFalse(boolean0);
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isIdentity();
      assertFalse(boolean0);
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isGeneratedColumn();
      assertFalse(boolean0);
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isNullable());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isGeneratedAlways();
      assertFalse(boolean0);
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      String string0 = column0.getColumnName();
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isIndexColumn();
      assertFalse(boolean0);
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTableAlias());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertNotNull(column0);
      
      String string0 = column0.getDefaultValue();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isSuperClassField();
      assertFalse(boolean0);
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isGeneratedColumn());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertNotNull(column0);
      
      String string0 = column0.getTableAlias();
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getTableAlias());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getRemarks());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
      assertNotNull(column0);
      
      int int0 = column0.getScale();
      assertEquals(0, int0);
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isSequenceColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isNullable());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getRemarks());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isGeneratedAlways());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getScale());
      assertNull(column0.getJavaProperty());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      boolean boolean0 = column0.isSequenceColumn();
      assertFalse(boolean0);
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIdentity());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getDefaultValue());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNotNull(column0);
      
      String string0 = column0.getJdbcTypeName();
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isSuperClassField());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isGeneratedColumn());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      column0.setJdbcTypeName("time");
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals("time", column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getDateInstance();
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertNotNull(fullyQualifiedJavaType0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals("time", column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      
      boolean boolean0 = column0.isJDBCTimeColumn();
      assertTrue(boolean0);
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals("time", column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Column column0 = new Column();
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getDateInstance();
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertNotNull(fullyQualifiedJavaType0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      
      boolean boolean0 = column0.isJDBCTimeColumn();
      assertFalse(boolean0);
      assertEquals(0, column0.getScale());
      assertFalse(column0.isNullable());
      assertNull(column0.getTypeHandler());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isAutoIncrement());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isIndexColumn());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getJdbcTypeName());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertNotNull(column0);
      
      column0.setJdbcTypeName("date");
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertEquals("date", column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getDateInstance();
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertNotNull(fullyQualifiedJavaType0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertEquals("date", column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      
      boolean boolean0 = column0.isJDBCDateColumn();
      assertTrue(boolean0);
      assertFalse(column0.isGeneratedColumn());
      assertEquals(0, column0.getLength());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getEscapedColumnName());
      assertFalse(column0.isIdentity());
      assertNull(column0.getColumnName());
      assertFalse(column0.isJdbcCharacterColumn());
      assertFalse(column0.isPrimaryKey());
      assertFalse(column0.isColumnNameDelimited());
      assertEquals(0, column0.getJdbcType());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isSequenceColumn());
      assertEquals("date", column0.getJdbcTypeName());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isNullable());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Column column0 = new Column();
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertNotNull(column0);
      
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getDateInstance();
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      assertNotNull(fullyQualifiedJavaType0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertEquals("java.util.Date", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertEquals("Date", fullyQualifiedJavaType0.getBaseShortName());
      
      boolean boolean0 = column0.isJDBCDateColumn();
      assertFalse(boolean0);
      assertNull(column0.getDefaultValue());
      assertNull(column0.getColumnName());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isColumnNameDelimited());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isNullable());
      assertNull(column0.getRemarks());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isIdentity());
      assertFalse(column0.isBLOBColumn());
      assertFalse(column0.isJdbcCharacterColumn());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedAlways());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getNewListInstance();
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertEquals("List", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.List", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertNotNull(fullyQualifiedJavaType0);
      
      Column column0 = new Column();
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getEscapedColumnName());
      assertNotNull(column0);
      
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      assertEquals("java.util", fullyQualifiedJavaType0.getPackageName());
      assertEquals("List", fullyQualifiedJavaType0.getBaseShortName());
      assertFalse(fullyQualifiedJavaType0.isExtendsBoundedWildcard());
      assertTrue(fullyQualifiedJavaType0.isExplicitlyImported());
      assertFalse(fullyQualifiedJavaType0.isWildcardType());
      assertFalse(fullyQualifiedJavaType0.isBoundedWildcard());
      assertEquals("java.util.List", fullyQualifiedJavaType0.getBaseQualifiedName());
      assertFalse(fullyQualifiedJavaType0.isArray());
      assertFalse(fullyQualifiedJavaType0.isPrimitive());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getEscapedColumnName());
      
      boolean boolean0 = column0.isJDBCDateColumn();
      assertFalse(boolean0);
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isAutoIncrement());
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getDefaultValue());
      assertNull(column0.getJdbcTypeName());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isNullable());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isIdentity());
      assertNull(column0.getRemarks());
      assertFalse(column0.isBLOBColumn());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getJavaProperty());
      assertNull(column0.getEscapedColumnName());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertEquals(0, column0.getJdbcType());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertFalse(column0.isJdbcCharacterColumn());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIdentity());
      assertNotNull(column0);
      
      column0.setJdbcType((-9));
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertEquals((-9), column0.getJdbcType());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIdentity());
      assertTrue(column0.isJdbcCharacterColumn());
      
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertTrue(boolean0);
      assertFalse(column0.isColumnNameDelimited());
      assertNull(column0.getJdbcTypeName());
      assertFalse(column0.isAutoIncrement());
      assertNull(column0.getColumnName());
      assertFalse(column0.isIndexColumn());
      assertNull(column0.getJavaProperty());
      assertFalse(column0.isSequenceColumn());
      assertFalse(column0.isGeneratedAlways());
      assertFalse(column0.isBLOBColumn());
      assertNull(column0.getTableAlias());
      assertFalse(column0.isNullable());
      assertEquals((-9), column0.getJdbcType());
      assertEquals(0, column0.getLength());
      assertFalse(column0.isGeneratedColumn());
      assertFalse(column0.isSuperClassField());
      assertEquals(0, column0.getScale());
      assertNull(column0.getRemarks());
      assertNull(column0.getTypeHandler());
      assertFalse(column0.isPrimaryKey());
      assertNull(column0.getEscapedColumnName());
      assertNull(column0.getDefaultValue());
      assertFalse(column0.isIdentity());
      assertTrue(column0.isJdbcCharacterColumn());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType((-15));
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertEquals((-15), column0.getJdbcType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType((-16));
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertEquals((-16), column0.getJdbcType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType(12);
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertEquals(12, column0.getJdbcType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType((-1));
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertEquals((-1), column0.getJdbcType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType(2005);
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertEquals(2005, column0.getJdbcType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType(1);
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertEquals(1, column0.getJdbcType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("VARBINARY");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("NCLOB");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("LONGVARCHAR");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("LONGVARBINARY");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("LONGNVARCHAR");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("CLOB");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("BLOB");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Column column0 = new Column();
      boolean boolean0 = column0.isBLOBColumn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Column column0 = new Column();
      assertFalse(column0.isBLOBColumn());
      
      column0.setJdbcTypeName("BINARY");
      boolean boolean0 = column0.isBLOBColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Column column0 = new Column();
      IndexInfo indexInfo0 = new IndexInfo();
      column0.setIndexInfo(indexInfo0);
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setIndexInfo(indexInfo0);
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Column column0 = new Column();
      IndexInfo indexInfo0 = new IndexInfo();
      column0.setIndexInfo(indexInfo0);
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getScale());
      assertEquals(0, column1.getJdbcType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Column column0 = new Column();
      IndexInfo indexInfo0 = new IndexInfo();
      column0.setIndexInfo(indexInfo0);
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Column column0 = new Column();
      column0.setDefaultValue("BLOB");
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setDefaultValue("BLOB");
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      assertTrue(column1.equals((Object)column0));
      
      column1.setDefaultValue(", generatedAlways=");
      boolean boolean0 = column0.equals(column1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Column column0 = new Column();
      column0.setRemarks("double");
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertFalse(boolean0);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getScale());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      assertTrue(column1.equals((Object)column0));
      
      column1.setRemarks("C_|d");
      boolean boolean0 = column1.equals(column0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Column column0 = new Column();
      column0.setTypeHandler("GKO)");
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setTypeHandler("GKO)");
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Column column0 = new Column();
      column0.setTypeHandler("nJaI1 BIWCUy+bAK0<i");
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertEquals(0, column1.getScale());
      assertFalse(boolean0);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Column column0 = new Column();
      column0.setTableAlias("xU':TbdPJ");
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setTableAlias("xU':TbdPJ");
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Column column0 = new Column();
      column0.setTableAlias("xU':TbdPJ");
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getScale());
      assertFalse(boolean0);
      assertEquals(0, column1.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getNewArrayListInstance();
      Column column0 = new Column();
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getNewListInstance();
      Column column0 = new Column();
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertEquals(0, column1.getJdbcType());
      assertFalse(boolean0);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getScale());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getNewArrayListInstance();
      Column column0 = new Column();
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertFalse(boolean0);
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getScale());
      assertEquals(0, column1.getLength());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Column column0 = new Column();
      column0.setJavaProperty("!6`lajL:\"dZxr");
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setJavaProperty("!6`lajL:\"dZxr");
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Column column0 = new Column();
      column0.setJavaProperty("java.lang.Short");
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Column column0 = new Column();
      column0.setJavaProperty("!6`lajL:\"dZxr");
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getScale());
      assertEquals(0, column1.getLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcTypeName("I@S(d;+r&)%D-!,4|");
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertEquals(0, column1.getScale());
      assertFalse(boolean0);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      assertTrue(column1.equals((Object)column0));
      
      column1.setJdbcTypeName("DL0HTE");
      boolean boolean0 = column1.equals(column0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Column column0 = new Column();
      column0.setEscapedColumnName("jOU,N?@!<}mB5y)");
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertEquals(0, column1.getLength());
      assertFalse(boolean0);
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getScale());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      assertTrue(column1.equals((Object)column0));
      
      column1.setEscapedColumnName("?-8c-HO2");
      boolean boolean0 = column1.equals(column0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Column column0 = new Column();
      column0.setIndexColumn(true);
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertTrue(column0.isIndexColumn());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Column column0 = new Column();
      column0.setSuperClassField(true);
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertTrue(column0.isSuperClassField());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      column1.setPrimaryKey(true);
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.isPrimaryKey());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      column0.setGeneratedAlways(true);
      boolean boolean0 = column0.equals(column1);
      assertTrue(column0.isGeneratedAlways());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      column1.setGeneratedColumn(true);
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.isGeneratedColumn());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Column column0 = new Column();
      column0.setAutoIncrement(true);
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertTrue(column0.isAutoIncrement());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      column1.setColumnNameDelimited(true);
      boolean boolean0 = column0.equals(column1);
      assertTrue(column1.isColumnNameDelimited());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Column column0 = new Column();
      column0.setSequenceColumn(true);
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertTrue(column0.isSequenceColumn());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Column column0 = new Column();
      column0.setIdentity(true);
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertTrue(column0.isIdentity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      column1.setScale((-15));
      boolean boolean0 = column1.equals(column0);
      assertEquals((-15), column1.getScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      column0.setLength(246);
      boolean boolean0 = column0.equals(column1);
      assertEquals(246, column0.getLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Column column0 = new Column();
      column0.setNullable(true);
      Column column1 = new Column();
      boolean boolean0 = column1.equals(column0);
      assertTrue(column0.isNullable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType(2095);
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertEquals(2095, column0.getJdbcType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Column column0 = new Column();
      Column column1 = new Column();
      assertTrue(column1.equals((Object)column0));
      
      column1.addProperty("7xY=QU;Plt?+]L", column0);
      boolean boolean0 = column0.equals(column1);
      assertFalse(column1.equals((Object)column0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Column column0 = new Column();
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getStringInstance();
      boolean boolean0 = column0.equals(fullyQualifiedJavaType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Column column0 = new Column();
      boolean boolean0 = column0.equals(column0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Column column0 = new Column();
      column0.setDefaultValue("DL0HTE");
      column0.hashCode();
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Column column0 = new Column();
      column0.setRemarks("");
      column0.hashCode();
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Column column0 = new Column();
      column0.setTypeHandler("c(3ifAHD4");
      column0.hashCode();
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Column column0 = new Column();
      column0.setTableAlias("ltc@gs");
      column0.hashCode();
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getNewArrayListInstance();
      Column column0 = new Column();
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      column0.hashCode();
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getLength());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Column column0 = new Column();
      column0.setJavaProperty("W>eLM78!S");
      column0.hashCode();
      assertEquals(0, column0.getScale());
      assertEquals(0, column0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcTypeName(":oF@ u:I[54/");
      column0.hashCode();
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getLength());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Column column0 = new Column();
      column0.setEscapedColumnName(", indexName=");
      column0.hashCode();
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getScale());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Column column0 = new Column();
      column0.setNullable(true);
      column0.hashCode();
      assertTrue(column0.isNullable());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Column column0 = new Column();
      column0.setDefaultValue("BLOB");
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertEquals(0, column1.getScale());
      assertFalse(boolean0);
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getLength());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Column column0 = new Column();
      // Undeclared exception!
      try { 
        column0.isStringColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("app.myoss.cloud.mybatis.generator.db.Column", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Column column0 = new Column();
      column0.setColumnNameDelimited(true);
      column0.hashCode();
      assertTrue(column0.isColumnNameDelimited());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Column column0 = new Column();
      column0.setTypeHandler("GKO)");
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertFalse(boolean0);
      assertEquals(0, column1.getJdbcType());
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getScale());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Column column0 = new Column();
      // Undeclared exception!
      try { 
        column0.setColumnName("!6`lajL:\"dZxr");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("app.myoss.cloud.mybatis.generator.db.Column", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Column column0 = new Column();
      column0.setTableAlias("xU':TbdPJ");
      Column column1 = new Column();
      boolean boolean0 = column0.equals(column1);
      assertEquals(0, column1.getLength());
      assertEquals(0, column1.getScale());
      assertFalse(boolean0);
      assertEquals(0, column1.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Column column0 = new Column();
      column0.setGeneratedColumn(true);
      column0.hashCode();
      assertTrue(column0.isGeneratedColumn());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Column column0 = new Column();
      column0.setEscapedColumnName("?-8c-HO2");
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setEscapedColumnName("?-8c-HO2");
      boolean boolean0 = column1.equals(column0);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Column column0 = new Column();
      column0.setSuperClassField(true);
      column0.hashCode();
      assertEquals(0, column0.getScale());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Column column0 = new Column();
      column0.setSequenceColumn(true);
      column0.hashCode();
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Column column0 = new Column();
      column0.setRemarks("C_|d");
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setRemarks("C_|d");
      boolean boolean0 = column1.equals(column0);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Column column0 = new Column();
      column0.setPrimaryKey(true);
      column0.hashCode();
      assertTrue(column0.isPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Column column0 = new Column();
      FullyQualifiedJavaType fullyQualifiedJavaType0 = FullyQualifiedJavaType.getStringInstance();
      column0.setFullyQualifiedJavaType(fullyQualifiedJavaType0);
      boolean boolean0 = column0.isJDBCTimeColumn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Column column0 = new Column();
      column0.setIdentity(true);
      column0.hashCode();
      assertTrue(column0.isIdentity());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Column column0 = new Column();
      column0.setGeneratedAlways(true);
      column0.hashCode();
      assertTrue(column0.isGeneratedAlways());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Column column0 = new Column();
      String string0 = column0.toString();
      assertEquals("Column(columnName=null, escapedColumnName=null, jdbcType=0, jdbcTypeName=null, nullable=false, length=0, scale=0, identity=false, sequenceColumn=false, javaProperty=null, fullyQualifiedJavaType=null, tableAlias=null, typeHandler=null, columnNameDelimited=false, remarks=null, defaultValue=null, autoIncrement=false, generatedColumn=false, generatedAlways=false, primaryKey=false, superClassField=false, indexColumn=false, indexInfo=null)", string0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcType(2011);
      boolean boolean0 = column0.isJdbcCharacterColumn();
      assertEquals(2011, column0.getJdbcType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Column column0 = new Column();
      column0.setIndexColumn(true);
      column0.hashCode();
      assertTrue(column0.isIndexColumn());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Column column0 = new Column();
      IndexInfo indexInfo0 = new IndexInfo();
      column0.setIndexInfo(indexInfo0);
      column0.hashCode();
      assertEquals(0, column0.getJdbcType());
      assertEquals(0, column0.getLength());
      assertEquals(0, column0.getScale());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Column column0 = new Column();
      column0.setJdbcTypeName("DL0HTE");
      Column column1 = new Column();
      assertFalse(column1.equals((Object)column0));
      
      column1.setJdbcTypeName("DL0HTE");
      boolean boolean0 = column1.equals(column0);
      assertTrue(column1.equals((Object)column0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Column column0 = new Column();
      column0.setAutoIncrement(true);
      column0.hashCode();
      assertTrue(column0.isAutoIncrement());
  }
}
