/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 10:58:33 GMT 2022
 */

package org.ubercraft.statsd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.ubercraft.statsd.StatsdLogger;
import org.ubercraft.statsd.StatsdLoggerFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StatsdLoggerFactory_ESTest extends StatsdLoggerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        StatsdLoggerFactory.getLogger((Logger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ubercraft.statsd.StatsdLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        StatsdLoggerFactory.getLogger((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name argument cannot be null
         //
         verifyException("ch.qos.logback.classic.LoggerContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      doReturn("s};QCjerjQ8|.= ").when(logger0).getName();
      StatsdLogger statsdLogger0 = StatsdLoggerFactory.getLogger(logger0);
      assertNotNull(statsdLogger0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      doReturn("7s};QWj'rjQ8|.= ", (String) null, (String) null).when(logger0).getName();
      StatsdLogger statsdLogger0 = StatsdLoggerFactory.getLogger(logger0);
      assertNotNull(statsdLogger0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StatsdLoggerFactory statsdLoggerFactory0 = new StatsdLoggerFactory();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StatsdLogger statsdLogger0 = StatsdLoggerFactory.getLogger("dko[6H#3XS");
      assertNotNull(statsdLogger0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      StatsdLogger statsdLogger0 = StatsdLoggerFactory.getLogger(class0);
      assertNotNull(statsdLogger0);
  }
}
