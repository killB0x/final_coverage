/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 13:52:59 GMT 2022
 */

package lzma.streams;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.OutputStream;
import lzma.sdk.lzma.Encoder;
import lzma.streams.LzmaEncoderWrapper;
import lzma.streams.LzmaOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LzmaOutputStream_ESTest extends LzmaOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      Encoder encoder0 = new Encoder();
      LzmaEncoderWrapper lzmaEncoderWrapper0 = new LzmaEncoderWrapper(encoder0);
      LzmaOutputStream lzmaOutputStream0 = new LzmaOutputStream(mockPrintStream0, lzmaEncoderWrapper0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("xM2tP2SZEWf1");
      Encoder encoder0 = new Encoder();
      LzmaOutputStream lzmaOutputStream0 = new LzmaOutputStream(mockFileOutputStream0, encoder0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("xM2tP2SZEWf1");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockFileOutputStream0);
      LzmaOutputStream lzmaOutputStream0 = lzmaOutputStream_Builder0.build();
      assertNotNull(lzmaOutputStream0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockPrintStream0);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useMinimalDictionarySize();
      assertSame(lzmaOutputStream_Builder1, lzmaOutputStream_Builder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockPrintStream0);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useMediumDictionarySize();
      assertSame(lzmaOutputStream_Builder1, lzmaOutputStream_Builder0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockPrintStream0);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useMediumFastBytes();
      assertSame(lzmaOutputStream_Builder1, lzmaOutputStream_Builder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockPrintStream0);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useMinimalFastBytes();
      assertSame(lzmaOutputStream_Builder1, lzmaOutputStream_Builder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockPrintStream0);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useBT2MatchFinder();
      assertSame(lzmaOutputStream_Builder1, lzmaOutputStream_Builder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockPrintStream0);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useEndMarkerMode(false);
      assertSame(lzmaOutputStream_Builder0, lzmaOutputStream_Builder1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.cservenak.streams.CoderOutputStream");
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder(mockPrintStream0);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useBT4MatchFinder();
      assertSame(lzmaOutputStream_Builder0, lzmaOutputStream_Builder1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder((OutputStream) null);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useMaximalFastBytes();
      assertSame(lzmaOutputStream_Builder1, lzmaOutputStream_Builder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LzmaOutputStream.Builder lzmaOutputStream_Builder0 = new LzmaOutputStream.Builder((OutputStream) null);
      LzmaOutputStream.Builder lzmaOutputStream_Builder1 = lzmaOutputStream_Builder0.useMaximalDictionarySize();
      assertSame(lzmaOutputStream_Builder0, lzmaOutputStream_Builder1);
  }
}
