/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 13:39:36 GMT 2022
 */

package lzma.sdk.lz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import lzma.sdk.lz.InWindow;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InWindow_ESTest extends InWindow_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0._streamPos = (-1445);
      inWindow0.reduceOffsets((-1295));
      assertEquals((-1445), inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0._pos = 2458;
      inWindow0.reduceOffsets((-1690));
      assertEquals((-2458), inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.reduceOffsets(1471);
      inWindow0.reduceOffsets(0);
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      inWindow0.setStream(sequenceInputStream0);
      inWindow0.create(1457, 2116, (-1450));
      inWindow0.movePos();
      int int0 = inWindow0.getMatchLen((-1), 941, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0._streamPos = (-1);
      // Undeclared exception!
      try { 
        inWindow0.getIndexByte(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lzma.sdk.lz.InWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.create((byte)1, (byte)100, (byte)0);
      inWindow0.create((byte)0, 0, (byte)1);
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1106);
      inWindow0.setStream(byteArrayInputStream0);
      inWindow0.create(376, (byte)1, 1116);
      inWindow0.movePos();
      assertEquals(2, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      inWindow0.setStream(sequenceInputStream0);
      inWindow0._bufferOffset = 4284;
      inWindow0.readBlock();
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      inWindow0.setStream(sequenceInputStream0);
      inWindow0.create(1, 1, (-1));
      inWindow0.movePos();
      assertEquals((-1), inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1106);
      inWindow0.setStream(byteArrayInputStream0);
      inWindow0.create((byte)0, 0, (byte)1);
      inWindow0.movePos();
      inWindow0.movePos();
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[7];
      inWindow0._bufferBase = byteArray0;
      inWindow0.moveBlock();
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.free();
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0._streamPos = 3656;
      int int0 = inWindow0.getNumAvailableBytes();
      assertEquals(3656, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.create(0, 0, 0);
      inWindow0.movePos();
      int int0 = inWindow0.getNumAvailableBytes();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[2];
      inWindow0._bufferBase = byteArray0;
      byte byte0 = inWindow0.getIndexByte(0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)1;
      inWindow0._bufferBase = byteArray0;
      byte byte0 = inWindow0.getIndexByte(1);
      assertEquals((byte)1, byte0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-111);
      inWindow0._bufferBase = byteArray0;
      inWindow0.movePos();
      byte byte0 = inWindow0.getIndexByte(0);
      assertEquals((-1), inWindow0.getNumAvailableBytes());
      assertEquals((byte) (-111), byte0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0._bufferOffset = 4284;
      // Undeclared exception!
      try { 
        inWindow0.readBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lzma.sdk.lz.InWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      inWindow0.setStream(mockFileInputStream0);
      inWindow0.create(3447, 1, 1);
      try { 
        inWindow0.readBlock();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[6];
      inWindow0._bufferBase = byteArray0;
      inWindow0.movePos();
      // Undeclared exception!
      try { 
        inWindow0.movePos();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      inWindow0.setStream(pipedInputStream0);
      inWindow0.create(1, 1065, 1065);
      try { 
        inWindow0.movePos();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      // Undeclared exception!
      try { 
        inWindow0.moveBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.create(2, 2151, (-1));
      // Undeclared exception!
      try { 
        inWindow0.moveBlock();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.create(1, 1, 2536);
      // Undeclared exception!
      try { 
        inWindow0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lzma.sdk.lz.InWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[4];
      inWindow0._bufferBase = byteArray0;
      // Undeclared exception!
      try { 
        inWindow0.getMatchLen(0, 0, 12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 4
         //
         verifyException("lzma.sdk.lz.InWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[2];
      inWindow0._bufferBase = byteArray0;
      // Undeclared exception!
      try { 
        inWindow0.getIndexByte((-884));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -884 out of bounds for length 2
         //
         verifyException("lzma.sdk.lz.InWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      // Undeclared exception!
      try { 
        inWindow0.create((-770), (-770), (-770));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2310
         //
         verifyException("lzma.sdk.lz.InWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1106);
      inWindow0.setStream(byteArrayInputStream0);
      inWindow0.create((byte)1, (byte)100, (byte)0);
      inWindow0.movePos();
      inWindow0.movePos();
      int int0 = inWindow0.getMatchLen((-1), 0, 1865);
      assertEquals(1, inWindow0.getNumAvailableBytes());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      // Undeclared exception!
      try { 
        inWindow0.getMatchLen((-1), 0, 1865);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lzma.sdk.lz.InWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[2];
      inWindow0._bufferBase = byteArray0;
      inWindow0.movePos();
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      inWindow0.setStream(sequenceInputStream0);
      inWindow0.create(2, 2151, (-8));
      inWindow0.movePos();
      int int0 = inWindow0.getMatchLen(0, (-1450), (-1550));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[6];
      inWindow0._bufferBase = byteArray0;
      inWindow0.create(0, 0, 0);
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1106);
      inWindow0.setStream(byteArrayInputStream0);
      inWindow0.create((byte)0, 0, 1116);
      inWindow0.movePos();
      inWindow0.movePos();
      assertEquals(1, inWindow0.getNumAvailableBytes());
      
      inWindow0.movePos();
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      // Undeclared exception!
      try { 
        inWindow0.movePos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.reduceOffsets(730);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      inWindow0.setStream(sequenceInputStream0);
      inWindow0.create(3673, 3444, (-3211));
      inWindow0.movePos();
      assertEquals((-1), inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.releaseStream();
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      inWindow0.init();
      assertEquals(0, inWindow0.getNumAvailableBytes());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InWindow inWindow0 = new InWindow();
      int int0 = inWindow0.getNumAvailableBytes();
      assertEquals(0, int0);
  }
}
