/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 00:00:57 GMT 2022
 */

package org.lombrozo.bunny.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.lombrozo.bunny.client.MapResponseSource;
import org.lombrozo.bunny.message.Message;
import org.lombrozo.bunny.message.MessagePipeline;
import org.lombrozo.bunny.message.RabbitMessagePipeline;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapResponseSource_ESTest extends MapResponseSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, MessagePipeline> hashMap0 = new HashMap<String, MessagePipeline>();
      MapResponseSource mapResponseSource0 = new MapResponseSource(hashMap0);
      mapResponseSource0.checkIsEmpty("TIo_yXGl3");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MapResponseSource mapResponseSource0 = new MapResponseSource();
      // Undeclared exception!
      try { 
        mapResponseSource0.save("org.lombrozo.bunny.client.MapResponseSource", (MessagePipeline) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MapResponseSource mapResponseSource0 = new MapResponseSource();
      Message.Fake message_Fake0 = new Message.Fake();
      // Undeclared exception!
      try { 
        mapResponseSource0.runCallback(message_Fake0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lombrozo.bunny.message.properties.PropertyKey
         //
         verifyException("org.lombrozo.bunny.client.MapResponseSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MapResponseSource mapResponseSource0 = new MapResponseSource();
      RabbitMessagePipeline rabbitMessagePipeline0 = new RabbitMessagePipeline();
      try { 
        mapResponseSource0.save("", rabbitMessagePipeline0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.client.MapResponseSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MapResponseSource mapResponseSource0 = new MapResponseSource();
      try { 
        mapResponseSource0.checkIsEmpty((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.client.MapResponseSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MapResponseSource mapResponseSource0 = new MapResponseSource();
      // Undeclared exception!
      try { 
        mapResponseSource0.runCallback((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.client.MapResponseSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MapResponseSource mapResponseSource0 = new MapResponseSource();
      RabbitMessagePipeline rabbitMessagePipeline0 = new RabbitMessagePipeline();
      mapResponseSource0.save("d}_J*(OVRMEk0'Ru|[", rabbitMessagePipeline0);
  }
}
