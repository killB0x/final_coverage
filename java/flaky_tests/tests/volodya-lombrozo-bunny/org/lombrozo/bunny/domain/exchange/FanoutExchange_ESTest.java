/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 00:30:08 GMT 2022
 */

package org.lombrozo.bunny.domain.exchange;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.lombrozo.bunny.connection.Connection;
import org.lombrozo.bunny.connection.TestConnection;
import org.lombrozo.bunny.domain.exchange.AutoDelete;
import org.lombrozo.bunny.domain.exchange.DirectExchange;
import org.lombrozo.bunny.domain.exchange.Durable;
import org.lombrozo.bunny.domain.exchange.Exchange;
import org.lombrozo.bunny.domain.exchange.ExchangeDescription;
import org.lombrozo.bunny.domain.exchange.ExchangeType;
import org.lombrozo.bunny.domain.exchange.FanoutExchange;
import org.lombrozo.bunny.domain.exchange.Internal;
import org.lombrozo.bunny.domain.exchange.TopicExchange;
import org.lombrozo.bunny.message.Message;
import org.lombrozo.bunny.message.RabbitMessage;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FanoutExchange_ESTest extends FanoutExchange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      Internal internal0 = new Internal();
      FanoutExchange fanoutExchange0 = new FanoutExchange(connection_Fake0, "*hr", internal0);
      fanoutExchange0.declare();
      assertEquals("*hr", fanoutExchange0.name());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      TopicExchange topicExchange0 = new TopicExchange(connection_Fake0, (String) null);
      FanoutExchange fanoutExchange0 = new FanoutExchange(topicExchange0);
      String string0 = fanoutExchange0.name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      Internal internal0 = new Internal();
      FanoutExchange fanoutExchange0 = new FanoutExchange(connection_Fake0, "*hr", internal0);
      String string0 = fanoutExchange0.name();
      assertEquals("*hr", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      DirectExchange directExchange0 = new DirectExchange(connection_Fake0, ",e8C@mcUSFt+h5", (ExchangeDescription) null);
      TopicExchange topicExchange0 = new TopicExchange(directExchange0);
      FanoutExchange fanoutExchange0 = new FanoutExchange(topicExchange0);
      ExchangeDescription exchangeDescription0 = fanoutExchange0.description();
      assertNull(exchangeDescription0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      Internal internal0 = new Internal();
      FanoutExchange fanoutExchange0 = new FanoutExchange(connection_Fake0, "*hr", internal0);
      ExchangeDescription exchangeDescription0 = fanoutExchange0.description();
      assertFalse(exchangeDescription0.autoDelete());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      FanoutExchange fanoutExchange0 = new FanoutExchange(connection_Fake0, "");
      ExchangeDescription exchangeDescription0 = fanoutExchange0.description();
      assertFalse(exchangeDescription0.autoDelete());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      ExchangeDescription.Default exchangeDescription_Default0 = new ExchangeDescription.Default();
      AutoDelete autoDelete0 = new AutoDelete(exchangeDescription_Default0);
      FanoutExchange fanoutExchange0 = new FanoutExchange(connection_Fake0, (String) null, autoDelete0);
      // Undeclared exception!
      try { 
        fanoutExchange0.send((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.domain.exchange.NamedExchange", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FanoutExchange fanoutExchange0 = new FanoutExchange((Exchange) null);
      // Undeclared exception!
      try { 
        fanoutExchange0.description();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.domain.exchange.FanoutExchange", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TestConnection testConnection0 = new TestConnection();
      AutoDelete autoDelete0 = new AutoDelete();
      Durable durable0 = new Durable(autoDelete0);
      FanoutExchange fanoutExchange0 = new FanoutExchange(testConnection0, "WC]", durable0);
      ExchangeType exchangeType0 = fanoutExchange0.type();
      assertEquals(ExchangeType.FANOUT, exchangeType0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      FanoutExchange fanoutExchange0 = new FanoutExchange(connection_Fake0, "");
      String string0 = fanoutExchange0.name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Connection.Fake connection_Fake0 = new Connection.Fake();
      FanoutExchange fanoutExchange0 = new FanoutExchange(connection_Fake0, "");
      RabbitMessage rabbitMessage0 = new RabbitMessage("org.lombrozo.bunny.domain.exchange.FanoutExchange");
      fanoutExchange0.send(rabbitMessage0);
      assertEquals(ExchangeType.FANOUT, fanoutExchange0.type());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TestConnection testConnection0 = new TestConnection();
      AutoDelete autoDelete0 = new AutoDelete();
      Durable durable0 = new Durable(autoDelete0);
      FanoutExchange fanoutExchange0 = new FanoutExchange(testConnection0, "WC]", durable0);
      ExchangeDescription exchangeDescription0 = fanoutExchange0.description();
      assertTrue(exchangeDescription0.autoDelete());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FanoutExchange fanoutExchange0 = new FanoutExchange((Connection) null, "");
      // Undeclared exception!
      try { 
        fanoutExchange0.declare();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.domain.exchange.NamedExchange", e);
      }
  }
}
