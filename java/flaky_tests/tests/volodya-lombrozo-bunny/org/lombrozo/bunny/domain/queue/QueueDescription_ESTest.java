/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 00:38:41 GMT 2022
 */

package org.lombrozo.bunny.domain.queue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.lombrozo.bunny.domain.queue.AutoDelete;
import org.lombrozo.bunny.domain.queue.Durable;
import org.lombrozo.bunny.domain.queue.Exclusive;
import org.lombrozo.bunny.domain.queue.Parameterized;
import org.lombrozo.bunny.domain.queue.QueueDescription;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QueueDescription_ESTest extends QueueDescription_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QueueDescription.Default queueDescription_Default0 = new QueueDescription.Default();
      Durable durable0 = new Durable(queueDescription_Default0);
      Parameterized parameterized0 = new Parameterized(durable0);
      Map<String, Object> map0 = parameterized0.params();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Exclusive exclusive0 = new Exclusive();
      Parameterized parameterized0 = new Parameterized(exclusive0);
      Parameterized parameterized1 = parameterized0.add(">r.C=9`", "+j#P@Lj[++a6");
      Map<String, Object> map0 = parameterized1.params();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Exclusive exclusive0 = new Exclusive();
      Parameterized parameterized0 = new Parameterized(exclusive0);
      boolean boolean0 = parameterized0.exclusive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Durable durable0 = new Durable();
      Parameterized parameterized0 = new Parameterized(durable0);
      boolean boolean0 = parameterized0.durable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Parameterized parameterized0 = new Parameterized();
      boolean boolean0 = parameterized0.durable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AutoDelete autoDelete0 = new AutoDelete();
      boolean boolean0 = autoDelete0.autoDelete();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Exclusive exclusive0 = new Exclusive();
      boolean boolean0 = exclusive0.autoDelete();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parameterized parameterized0 = new Parameterized((QueueDescription) null);
      // Undeclared exception!
      try { 
        parameterized0.exclusive();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.domain.queue.Parameterized", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Exclusive exclusive0 = new Exclusive((QueueDescription) null);
      // Undeclared exception!
      try { 
        exclusive0.durable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.domain.queue.Exclusive", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Exclusive exclusive0 = new Exclusive((QueueDescription) null);
      // Undeclared exception!
      try { 
        exclusive0.autoDelete();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.domain.queue.Exclusive", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QueueDescription.Default queueDescription_Default0 = new QueueDescription.Default();
      Map<String, Object> map0 = queueDescription_Default0.params();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QueueDescription.Default queueDescription_Default0 = new QueueDescription.Default();
      Durable durable0 = new Durable(queueDescription_Default0);
      boolean boolean0 = durable0.exclusive();
      assertFalse(boolean0);
  }
}
