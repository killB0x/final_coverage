/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 25 00:28:15 GMT 2022
 */

package org.lombrozo.bunny.function;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class IgnoreWork_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.lombrozo.bunny.function.IgnoreWork"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IgnoreWork_ESTest_scaffolding.class.getClassLoader() ,
      "org.lombrozo.bunny.function.Work",
      "org.lombrozo.bunny.function.IgnoreWork",
      "org.lombrozo.bunny.util.exceptions.RabbitException",
      "org.lombrozo.bunny.message.Message"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IgnoreWork_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.lombrozo.bunny.function.IgnoreWork",
      "org.lombrozo.bunny.message.body.ByteBody",
      "org.lombrozo.bunny.message.properties.Properties$Fake",
      "org.lombrozo.bunny.message.routing.StringRoutingKey",
      "org.lombrozo.bunny.message.RabbitMessage",
      "org.lombrozo.bunny.message.header.EmptyHeaders",
      "org.lombrozo.bunny.message.delivery.Persistent",
      "org.lombrozo.bunny.message.properties.EmptyProperties",
      "org.lombrozo.bunny.message.routing.RoutingKey$Fake",
      "org.lombrozo.bunny.util.RandomString",
      "org.lombrozo.bunny.message.body.StringBody",
      "org.lombrozo.bunny.function.LatchWork",
      "org.lombrozo.bunny.message.routing.EmptyRoutingKey",
      "org.lombrozo.bunny.message.header.Headers$Fake",
      "org.lombrozo.bunny.message.delivery.DeliveryMode$Fake",
      "org.lombrozo.bunny.message.Message$Fake",
      "org.lombrozo.bunny.message.body.Body$Fake",
      "org.lombrozo.bunny.message.properties.PropertiesSet",
      "org.lombrozo.bunny.message.header.SpringTypeId",
      "org.lombrozo.bunny.message.header.To",
      "org.lombrozo.bunny.message.header.Description",
      "org.lombrozo.bunny.message.header.From",
      "org.lombrozo.bunny.message.header.StringHeader",
      "org.lombrozo.bunny.message.header.HeadersMap",
      "org.lombrozo.bunny.message.properties.ReplyTo",
      "org.lombrozo.bunny.domain.destination.reply.DotReplyInfo",
      "org.lombrozo.bunny.message.properties.ContentEncoding",
      "org.lombrozo.bunny.message.properties.PropertyKey",
      "org.lombrozo.bunny.message.properties.CorrelationId",
      "org.lombrozo.bunny.message.properties.UnknownProperty",
      "org.lombrozo.bunny.message.properties.Property$Empty",
      "org.lombrozo.bunny.message.properties.Timestamp",
      "org.lombrozo.bunny.message.properties.Type",
      "org.lombrozo.bunny.connection.TestConnection",
      "org.lombrozo.bunny.connection.TestChannel",
      "org.lombrozo.bunny.domain.queue.NamedQueue",
      "org.lombrozo.bunny.domain.queue.QueueDescription$Default",
      "org.lombrozo.bunny.domain.destination.QueueDestination",
      "org.lombrozo.bunny.message.properties.ContentType",
      "org.lombrozo.bunny.domain.queue.AutoDelete",
      "org.lombrozo.bunny.message.RPCMessage",
      "org.lombrozo.bunny.message.properties.Priority",
      "org.lombrozo.bunny.util.IntString",
      "org.lombrozo.bunny.message.properties.ClusterId",
      "org.lombrozo.bunny.message.header.Header$Fake",
      "org.lombrozo.bunny.message.properties.ApplicationJson",
      "org.lombrozo.bunny.util.IsNotEmpty",
      "org.lombrozo.bunny.domain.exchange.AutoDelete",
      "org.lombrozo.bunny.domain.exchange.ExchangeDescription$Default",
      "org.lombrozo.bunny.domain.exchange.TopicExchange",
      "org.lombrozo.bunny.domain.exchange.NamedExchange",
      "org.lombrozo.bunny.domain.exchange.ExchangeType",
      "org.lombrozo.bunny.domain.destination.ExchangeDestination",
      "org.lombrozo.bunny.message.properties.UserId",
      "org.lombrozo.bunny.message.properties.AppId",
      "org.lombrozo.bunny.message.properties.MessageId",
      "org.lombrozo.bunny.message.properties.Expiration",
      "org.lombrozo.bunny.domain.queue.Queue$Fake",
      "org.lombrozo.bunny.domain.queue.Exclusive",
      "org.lombrozo.bunny.domain.queue.Parameterized",
      "org.lombrozo.bunny.domain.queue.Durable"
    );
  }
}
