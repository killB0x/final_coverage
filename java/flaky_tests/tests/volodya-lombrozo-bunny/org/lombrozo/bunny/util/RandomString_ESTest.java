/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 23:43:46 GMT 2022
 */

package org.lombrozo.bunny.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;
import org.lombrozo.bunny.util.RandomString;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomString_ESTest extends RandomString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Random.setNextRandom(3016);
      RandomString randomString0 = new RandomString(65);
      assertEquals("hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh", randomString0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Random.setNextRandom(1423);
      RandomString randomString0 = new RandomString();
      assertEquals("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", randomString0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Random.setNextRandom(1119);
      RandomString randomString0 = new RandomString();
      assertEquals("999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999", randomString0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Random.setNextRandom(860);
      RandomString randomString0 = new RandomString(105);
      String string0 = randomString0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RandomString randomString0 = null;
      try {
        randomString0 = new RandomString((-2531));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size must be non-negative
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Random.setNextRandom(49);
      RandomString randomString0 = new RandomString(65);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", randomString0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Random.setNextRandom(3563);
      RandomString randomString0 = new RandomString();
      assertEquals("", randomString0.toString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Random.setNextRandom(560);
      RandomString randomString0 = new RandomString(560);
      assertEqualsrandomString0.toString());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RandomString randomString0 = new RandomString();
      assertEquals("000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", randomString0.toString());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RandomString randomString0 = new RandomString(560);
      String string0 = randomString0.toString();
      assertEqualsstring0);
  }
}
