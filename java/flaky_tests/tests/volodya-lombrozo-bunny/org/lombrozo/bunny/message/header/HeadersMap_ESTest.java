/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 23:57:42 GMT 2022
 */

package org.lombrozo.bunny.message.header;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.lombrozo.bunny.message.header.EmptyHeaders;
import org.lombrozo.bunny.message.header.Header;
import org.lombrozo.bunny.message.header.Headers;
import org.lombrozo.bunny.message.header.HeadersMap;
import org.lombrozo.bunny.message.header.SpringTypeId;
import org.lombrozo.bunny.message.header.StringHeader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HeadersMap_ESTest extends HeadersMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HeadersMap headersMap0 = new HeadersMap();
      SpringTypeId springTypeId0 = new SpringTypeId("");
      headersMap0.add((Header) springTypeId0);
      Map<String, Object> map0 = headersMap0.toMap();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HeadersMap headersMap0 = new HeadersMap((Map<String, Object>) null);
      // Undeclared exception!
      try { 
        headersMap0.toMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HeadersMap headersMap0 = new HeadersMap((Map<String, Object>) null);
      // Undeclared exception!
      try { 
        headersMap0.header("y,|P=+`@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HeadersMap headersMap0 = new HeadersMap();
      // Undeclared exception!
      try { 
        headersMap0.add((Headers) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.message.header.HeadersMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HeadersMap headersMap0 = new HeadersMap();
      // Undeclared exception!
      try { 
        headersMap0.add((Header) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.message.header.HeadersMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Header[] headerArray0 = new Header[2];
      SpringTypeId springTypeId0 = new SpringTypeId();
      headerArray0[0] = (Header) springTypeId0;
      headerArray0[1] = (Header) springTypeId0;
      HeadersMap headersMap0 = null;
      try {
        headersMap0 = new HeadersMap(headerArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Duplicate key __TypeId__ (attempted merging values  and )
         //
         verifyException("java.util.stream.Collectors", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Header[] headerArray0 = new Header[0];
      HeadersMap headersMap0 = new HeadersMap(headerArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EmptyHeaders emptyHeaders0 = new EmptyHeaders();
      Map<String, Object> map0 = emptyHeaders0.toMap();
      HeadersMap headersMap0 = new HeadersMap(map0);
      StringHeader stringHeader0 = new StringHeader("org.lombrozo.bunny.message.header.From", "]HwsP:rg>6yLshGT+!");
      headersMap0.add((Header) stringHeader0);
      Optional<Header> optional0 = headersMap0.header("org.lombrozo.bunny.message.header.From");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EmptyHeaders emptyHeaders0 = new EmptyHeaders();
      Map<String, Object> map0 = emptyHeaders0.toMap();
      HeadersMap headersMap0 = new HeadersMap(map0);
      Optional<Header> optional0 = headersMap0.header("org.lombrozo.bunny.message.header.HeadersMap");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EmptyHeaders emptyHeaders0 = new EmptyHeaders();
      Map<String, Object> map0 = emptyHeaders0.toMap();
      HeadersMap headersMap0 = new HeadersMap(map0);
      Headers headers0 = headersMap0.add((Headers) emptyHeaders0);
      assertSame(headers0, headersMap0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EmptyHeaders emptyHeaders0 = new EmptyHeaders();
      Map<String, Object> map0 = emptyHeaders0.toMap();
      HeadersMap headersMap0 = new HeadersMap(map0);
      Map<String, Object> map1 = headersMap0.toMap();
      assertTrue(map1.equals((Object)map0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HeadersMap headersMap0 = null;
      try {
        headersMap0 = new HeadersMap((Header[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
}
