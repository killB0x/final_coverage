/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 00:13:32 GMT 2022
 */

package org.lombrozo.bunny.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.lombrozo.bunny.message.Message;
import org.lombrozo.bunny.message.RPCMessage;
import org.lombrozo.bunny.message.body.Body;
import org.lombrozo.bunny.message.body.ByteBody;
import org.lombrozo.bunny.message.body.StringBody;
import org.lombrozo.bunny.message.delivery.DeliveryMode;
import org.lombrozo.bunny.message.delivery.Persistent;
import org.lombrozo.bunny.message.header.EmptyHeaders;
import org.lombrozo.bunny.message.header.Headers;
import org.lombrozo.bunny.message.header.HeadersMap;
import org.lombrozo.bunny.message.properties.ApplicationJson;
import org.lombrozo.bunny.message.properties.EmptyProperties;
import org.lombrozo.bunny.message.properties.Properties;
import org.lombrozo.bunny.message.properties.PropertiesSet;
import org.lombrozo.bunny.message.properties.Property;
import org.lombrozo.bunny.message.routing.RoutingKey;
import org.lombrozo.bunny.message.routing.StringRoutingKey;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RPCMessage_ESTest extends RPCMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteBody byteBody0 = new ByteBody();
      EmptyProperties emptyProperties0 = new EmptyProperties();
      DeliveryMode.Fake deliveryMode_Fake0 = new DeliveryMode.Fake();
      RPCMessage rPCMessage0 = new RPCMessage(byteBody0, emptyProperties0, (Headers) null, deliveryMode_Fake0, (RoutingKey) null);
      RoutingKey routingKey0 = rPCMessage0.routingKey();
      assertNull(routingKey0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Message.Fake message_Fake0 = new Message.Fake();
      Properties properties0 = message_Fake0.properties();
      EmptyHeaders emptyHeaders0 = new EmptyHeaders();
      Map<String, Object> map0 = emptyHeaders0.toMap();
      HeadersMap headersMap0 = new HeadersMap(map0);
      StringRoutingKey stringRoutingKey0 = new StringRoutingKey("");
      RPCMessage rPCMessage0 = new RPCMessage((Body) null, properties0, headersMap0, (DeliveryMode) null, stringRoutingKey0);
      Headers headers0 = rPCMessage0.headers();
      assertSame(headers0, headersMap0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Body.Fake body_Fake0 = new Body.Fake();
      Message.Fake message_Fake0 = new Message.Fake();
      Properties properties0 = message_Fake0.properties();
      Headers.Fake headers_Fake0 = new Headers.Fake();
      RPCMessage rPCMessage0 = new RPCMessage(body_Fake0, properties0, headers_Fake0, (DeliveryMode) null);
      DeliveryMode deliveryMode0 = rPCMessage0.deliveryMode();
      assertNull(deliveryMode0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Body.Fake body_Fake0 = new Body.Fake();
      Property[] propertyArray0 = new Property[0];
      RPCMessage rPCMessage0 = new RPCMessage(body_Fake0, propertyArray0);
      Persistent persistent0 = (Persistent)rPCMessage0.deliveryMode();
      assertEquals("Persistent{}", persistent0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Message.Fake message_Fake0 = new Message.Fake();
      Properties properties0 = message_Fake0.properties();
      Headers.Fake headers_Fake0 = new Headers.Fake();
      DeliveryMode deliveryMode0 = message_Fake0.deliveryMode();
      RPCMessage rPCMessage0 = new RPCMessage((Body) null, properties0, headers_Fake0, deliveryMode0);
      Body body0 = rPCMessage0.body();
      assertNull(body0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RPCMessage rPCMessage0 = new RPCMessage((Message) null);
      // Undeclared exception!
      try { 
        rPCMessage0.properties();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.message.RPCMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Message.Fake message_Fake0 = new Message.Fake();
      RPCMessage rPCMessage0 = new RPCMessage(message_Fake0);
      // Undeclared exception!
      try { 
        rPCMessage0.properties();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lombrozo.bunny.message.properties.PropertyKey
         //
         verifyException("org.lombrozo.bunny.message.RPCMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RPCMessage rPCMessage0 = new RPCMessage((Message) null);
      // Undeclared exception!
      try { 
        rPCMessage0.deliveryMode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.lombrozo.bunny.message.RPCMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteBody byteBody0 = new ByteBody();
      RPCMessage rPCMessage0 = null;
      try {
        rPCMessage0 = new RPCMessage(byteBody0, (Property[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBody stringBody0 = new StringBody();
      Property[] propertyArray0 = new Property[1];
      Property.Empty property_Empty0 = new Property.Empty();
      propertyArray0[0] = (Property) property_Empty0;
      RPCMessage rPCMessage0 = null;
      try {
        rPCMessage0 = new RPCMessage(stringBody0, propertyArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lombrozo.bunny.message.properties.PropertyKey
         //
         verifyException("org.lombrozo.bunny.message.properties.Property$Empty", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RPCMessage rPCMessage0 = null;
      try {
        rPCMessage0 = new RPCMessage("timestamp", (Property[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Property[] propertyArray0 = new Property[1];
      ApplicationJson applicationJson0 = new ApplicationJson();
      propertyArray0[0] = (Property) applicationJson0;
      RPCMessage rPCMessage0 = null;
      try {
        rPCMessage0 = new RPCMessage("", propertyArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lombrozo.bunny.message.properties.PropertyKey
         //
         verifyException("org.lombrozo.bunny.message.properties.ContentType", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Message.Fake message_Fake0 = new Message.Fake();
      Body body0 = message_Fake0.body();
      LinkedList<Property> linkedList0 = new LinkedList<Property>();
      PropertiesSet propertiesSet0 = new PropertiesSet(linkedList0);
      DeliveryMode deliveryMode0 = message_Fake0.deliveryMode();
      RoutingKey routingKey0 = message_Fake0.routingKey();
      RPCMessage rPCMessage0 = new RPCMessage(body0, propertiesSet0, (Headers) null, deliveryMode0, routingKey0);
      Headers headers0 = rPCMessage0.headers();
      assertNull(headers0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Message.Fake message_Fake0 = new Message.Fake();
      Body body0 = message_Fake0.body();
      LinkedList<Property> linkedList0 = new LinkedList<Property>();
      PropertiesSet propertiesSet0 = new PropertiesSet(linkedList0);
      DeliveryMode deliveryMode0 = message_Fake0.deliveryMode();
      RoutingKey routingKey0 = message_Fake0.routingKey();
      RPCMessage rPCMessage0 = new RPCMessage(body0, propertiesSet0, (Headers) null, deliveryMode0, routingKey0);
      RoutingKey routingKey1 = rPCMessage0.routingKey();
      assertSame(routingKey0, routingKey1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Property[] propertyArray0 = new Property[0];
      RPCMessage rPCMessage0 = new RPCMessage("Q:\"jwV4`sz5 oIQ", propertyArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Message.Fake message_Fake0 = new Message.Fake();
      Body body0 = message_Fake0.body();
      LinkedList<Property> linkedList0 = new LinkedList<Property>();
      PropertiesSet propertiesSet0 = new PropertiesSet(linkedList0);
      DeliveryMode deliveryMode0 = message_Fake0.deliveryMode();
      RoutingKey routingKey0 = message_Fake0.routingKey();
      RPCMessage rPCMessage0 = new RPCMessage(body0, propertiesSet0, (Headers) null, deliveryMode0, routingKey0);
      DeliveryMode.Fake deliveryMode_Fake0 = (DeliveryMode.Fake)rPCMessage0.deliveryMode();
      assertEquals("FakeDeliveryMode{}", deliveryMode_Fake0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteBody byteBody0 = new ByteBody();
      Properties.Fake properties_Fake0 = new Properties.Fake();
      Message.Fake message_Fake0 = new Message.Fake();
      Headers headers0 = message_Fake0.headers();
      Persistent persistent0 = new Persistent();
      RPCMessage rPCMessage0 = new RPCMessage(byteBody0, properties_Fake0, headers0, persistent0);
      Body body0 = rPCMessage0.body();
      assertSame(body0, byteBody0);
  }
}
