/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:31:10 GMT 2022
 */

package org.joni;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joni.CaptureTreeNode;
import org.joni.Region;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Region_ESTest extends Region_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Region region0 = new Region(2878, 2878);
      CaptureTreeNode captureTreeNode0 = new CaptureTreeNode();
      region0.historyRoot = captureTreeNode0;
      CaptureTreeNode captureTreeNode1 = region0.getCaptureTree();
      assertSame(captureTreeNode1, captureTreeNode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Region region0 = new Region(0, 0);
      CaptureTreeNode captureTreeNode0 = new CaptureTreeNode();
      region0.historyRoot = captureTreeNode0;
      region0.historyRoot.addChild(captureTreeNode0);
      // Undeclared exception!
      try { 
        region0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Region region0 = new Region(0, 1);
      CaptureTreeNode captureTreeNode0 = new CaptureTreeNode();
      captureTreeNode0.numChildren = 1;
      region0.historyRoot = captureTreeNode0;
      // Undeclared exception!
      try { 
        region0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.CaptureTreeNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Region region0 = new Region(6349);
      region0.clear();
      // Undeclared exception!
      region0.clear();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Region region0 = null;
      try {
        region0 = new Region((-972));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -972
         //
         verifyException("org.joni.Region", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Region region0 = new Region(2878, 2878);
      String string0 = region0.toString();
      assertEquals("Region: \n 0: (2878-2878)", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Region region0 = new Region(2878, 2878);
      CaptureTreeNode captureTreeNode0 = new CaptureTreeNode();
      region0.historyRoot = captureTreeNode0;
      Region region1 = region0.clone();
      assertEquals(1, region1.numRegs);
      assertNotSame(region1, region0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Region region0 = new Region(2878, 2878);
      assertEquals(1, region0.numRegs);
      
      Region region1 = region0.clone();
      assertNotSame(region1, region0);
      assertEquals(1, region1.numRegs);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Region region0 = new Region(2878, 2878);
      region0.getCaptureTree();
      assertEquals(1, region0.numRegs);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Region region0 = new Region(6309);
      region0.toString();
      // Undeclared exception!
      region0.toString();
  }
}
