/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:20:48 GMT 2022
 */

package org.joni;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joni.NameEntry;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NameEntry_ESTest extends NameEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      NameEntry nameEntry0 = new NameEntry(byteArray0, (byte)0, (byte)0);
      nameEntry0.backNum = (-1);
      String string0 = nameEntry0.toString();
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 0, 0);
      nameEntry0.addBackref(0);
      nameEntry0.addBackref(0);
      int[] intArray0 = new int[2];
      nameEntry0.backRefs = intArray0;
      nameEntry0.addBackref(0);
      nameEntry0.addBackref(0);
      assertEquals(0, nameEntry0.nameEnd);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 4, 4);
      NameEntry nameEntry1 = new NameEntry(nameEntry0.name, (-703), (-4117));
      // Undeclared exception!
      try { 
        nameEntry1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 5, 5);
      nameEntry0.backNum = 5;
      // Undeclared exception!
      try { 
        nameEntry0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.NameEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 8, 8);
      nameEntry0.backNum = 8;
      // Undeclared exception!
      try { 
        nameEntry0.getBackRefs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NameEntry nameEntry0 = new NameEntry((byte[]) null, (-1485), (-1485));
      nameEntry0.backNum = (-1485);
      // Undeclared exception!
      try { 
        nameEntry0.getBackRefs();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1485
         //
         verifyException("org.joni.NameEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 630, 630);
      int[] intArray0 = new int[1];
      nameEntry0.backRefs = intArray0;
      nameEntry0.backNum = 630;
      // Undeclared exception!
      try { 
        nameEntry0.getBackRefs();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 20, 20);
      nameEntry0.backNum = 20;
      // Undeclared exception!
      try { 
        nameEntry0.addBackref(20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.NameEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 25, 25);
      nameEntry0.addBackref(25);
      nameEntry0.addBackref(25);
      nameEntry0.backNum = 25;
      // Undeclared exception!
      try { 
        nameEntry0.addBackref(25);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 25 out of bounds for length 16
         //
         verifyException("org.joni.NameEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 4, 4);
      nameEntry0.addBackref(45);
      nameEntry0.addBackref(2438);
      String string0 = nameEntry0.toString();
      assertEquals(" 45, 2438", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      NameEntry nameEntry0 = new NameEntry(byteArray0, (byte)0, (byte)0);
      assertEquals(0, nameEntry0.nameP);
      
      String string0 = nameEntry0.toString();
      assertEquals(" -", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 4, 4);
      nameEntry0.addBackref(45);
      String string0 = nameEntry0.toString();
      assertEquals(" 45", string0);
      assertEquals(4, nameEntry0.nameEnd);
      assertEquals(4, nameEntry0.nameP);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 4, 4);
      nameEntry0.addBackref(45);
      nameEntry0.addBackref(2438);
      nameEntry0.addBackref((-2559));
      assertEquals(4, nameEntry0.nameEnd);
      assertEquals(4, nameEntry0.nameP);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 4, 4);
      nameEntry0.addBackref(45);
      nameEntry0.addBackref(2438);
      int[] intArray0 = nameEntry0.getBackRefs();
      assertEquals(2, intArray0.length);
      assertEquals(4, nameEntry0.nameP);
      assertArrayEquals(new int[] {45, 2438}, intArray0);
      assertEquals(4, nameEntry0.nameEnd);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 4, 4);
      nameEntry0.addBackref(45);
      int[] intArray0 = nameEntry0.getBackRefs();
      assertArrayEquals(new int[] {45}, intArray0);
      assertEquals(4, nameEntry0.nameEnd);
      assertEquals(4, nameEntry0.nameP);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      NameEntry nameEntry0 = new NameEntry(byteArray0, (byte)0, (byte)0);
      int[] intArray0 = nameEntry0.getBackRefs();
      assertEquals(0, nameEntry0.nameEnd);
      assertEquals(0, intArray0.length);
      assertEquals(0, nameEntry0.nameP);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      NameEntry nameEntry0 = new NameEntry(byteArray0, 5, 5);
      int[] intArray0 = new int[0];
      nameEntry0.backRefs = intArray0;
      nameEntry0.backNum = 5;
      // Undeclared exception!
      try { 
        nameEntry0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.joni.NameEntry", e);
      }
  }
}
