/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:15:59 GMT 2022
 */

package org.joni.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joni.ast.AnchorNode;
import org.joni.ast.CTypeNode;
import org.joni.ast.Node;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AnchorNode_ESTest extends AnchorNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      Node.newTop(anchorNode0);
      anchorNode0.toString();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      anchorNode0.getName();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      Node.TopNode node_TopNode0 = Node.newTop(anchorNode0);
      anchorNode0.target = (Node) node_TopNode0;
      anchorNode0.getChild();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      // Undeclared exception!
      try { 
        anchorNode0.setTarget((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.ast.AnchorNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode((-1624));
      String string0 = anchorNode0.typeToString();
      assertEquals((-1), anchorNode0.charLength);
      assertFalse(anchorNode0.asciiRange);
      assertEquals("END_BUF END_LINE NOT_WORD_BOUND WORD_BEGIN PREC_READ_NOT LOOK_BEHIND LOOK_BEHIND_NOT ANYCHAR_STAR ANYCHAR_STAR_ML ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      String string0 = anchorNode0.typeToString();
      assertEquals("", string0);
      assertEquals((-1), anchorNode0.charLength);
      assertFalse(anchorNode0.asciiRange);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode((-3265));
      String string0 = anchorNode0.toString((-1));
      assertEquals("\n  type: BEGIN_BUF BEGIN_LINE BEGIN_POSITION END_BUF SEMI_END_BUF END_LINE WORD_BEGIN WORD_END LOOK_BEHIND LOOK_BEHIND_NOT ANYCHAR_STAR ANYCHAR_STAR_ML , ascii: false\n  target: NULL", string0);
      assertEquals((-1), anchorNode0.charLength);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(90615, true);
      String string0 = anchorNode0.typeToString();
      assertEquals("BEGIN_BUF BEGIN_LINE BEGIN_POSITION SEMI_END_BUF END_LINE WORD_BOUND NOT_WORD_BOUND WORD_BEGIN LOOK_BEHIND_NOT ANYCHAR_STAR ", string0);
      assertTrue(anchorNode0.asciiRange);
      assertEquals((-1), anchorNode0.charLength);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(3853);
      String string0 = anchorNode0.typeToString();
      assertEquals("BEGIN_BUF BEGIN_POSITION END_BUF WORD_BEGIN WORD_END PREC_READ PREC_READ_NOT ", string0);
      assertEquals((-1), anchorNode0.charLength);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      CTypeNode cTypeNode0 = new CTypeNode(128, false, false);
      anchorNode0.setTarget(cTypeNode0);
      Node node0 = anchorNode0.getChild();
      assertEquals(0, anchorNode0.type);
      assertFalse(anchorNode0.asciiRange);
      assertEquals((-1), anchorNode0.charLength);
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      anchorNode0.getChild();
      assertFalse(anchorNode0.asciiRange);
      assertEquals((-1), anchorNode0.charLength);
      assertEquals(0, anchorNode0.type);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AnchorNode anchorNode0 = new AnchorNode(0);
      CTypeNode cTypeNode0 = new CTypeNode(128, false, false);
      anchorNode0.setChild(cTypeNode0);
      assertEquals((-1), anchorNode0.charLength);
      assertFalse(anchorNode0.asciiRange);
      assertEquals(0, anchorNode0.type);
  }
}
