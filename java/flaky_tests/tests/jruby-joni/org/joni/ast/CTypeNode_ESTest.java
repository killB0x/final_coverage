/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:33:15 GMT 2022
 */

package org.joni.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joni.ast.CTypeNode;
import org.joni.ast.Node;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CTypeNode_ESTest extends CTypeNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CTypeNode cTypeNode0 = new CTypeNode(19, true, true);
      cTypeNode0.getName();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CTypeNode cTypeNode0 = new CTypeNode(0, true, false);
      Node.pad(cTypeNode0, 0);
      cTypeNode0.getAddressName();
      int int0 = 989;
      cTypeNode0.getAddressName();
      Node.newTop(cTypeNode0);
      cTypeNode0.toString(989);
      cTypeNode0.toString();
      cTypeNode0.getName();
      int int1 = 1832;
      Object object0 = new Object();
      // Undeclared exception!
      Node.pad(object0, 989);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CTypeNode cTypeNode0 = new CTypeNode(19, false, false);
      assertEquals(19, cTypeNode0.ctype);
      assertFalse(cTypeNode0.not);
      assertFalse(cTypeNode0.asciiRange);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CTypeNode cTypeNode0 = new CTypeNode(19, true, true);
      String string0 = cTypeNode0.toString(19);
      assertEquals("\n  ctype: 19, not: true, ascii: true", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CTypeNode cTypeNode0 = new CTypeNode((-4083), false, true);
      String string0 = cTypeNode0.toString((-4083));
      assertEquals("\n  ctype: -4083, not: false, ascii: true", string0);
  }
}
