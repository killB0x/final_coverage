/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:30:09 GMT 2022
 */

package org.joni.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joni.ScanEnvironment;
import org.joni.ast.AnchorNode;
import org.joni.ast.AnyCharNode;
import org.joni.ast.BackRefNode;
import org.joni.ast.CTypeNode;
import org.joni.ast.CallNode;
import org.joni.ast.EncloseNode;
import org.joni.ast.ListNode;
import org.joni.ast.Node;
import org.joni.ast.QuantifierNode;
import org.joni.ast.StringNode;
import org.joni.constants.internal.StringType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode((-1785), (-1785), false);
      Node.newTop(quantifierNode0);
      quantifierNode0.toString(2428);
      CTypeNode cTypeNode0 = new CTypeNode((-1), false, true);
      quantifierNode0.setChild(cTypeNode0);
      quantifierNode0.isSimple();
      quantifierNode0.getChild();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      Node.TopNode node_TopNode0 = Node.newTop(stringNode0);
      node_TopNode0.getType();
      AnchorNode anchorNode0 = new AnchorNode((-1));
      anchorNode0.getName();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      Node.newTop(stringNode0);
      Node.newTop(stringNode0);
      stringNode0.getChild();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 0;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)96;
      byteArray0[6] = (byte) (-29);
      byteArray0[7] = (byte) (-69);
      CallNode callNode0 = new CallNode(byteArray0, 92471302, (byte)79, (byte)79);
      // Undeclared exception!
      try { 
        callNode0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      Node.newTop(stringNode0);
      stringNode0.getType();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      // Undeclared exception!
      try { 
        stringNode0.parent.setChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.ast.Node$TopNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      stringNode0.end = stringNode0.end;
      stringNode0.parent.toString();
      QuantifierNode quantifierNode0 = new QuantifierNode(0, 0, false);
      stringNode0.toString();
      Node.newTop(stringNode0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode((-301), (-301), false);
      quantifierNode0.getName();
      Node.TopNode node_TopNode0 = new Node.TopNode(quantifierNode0);
      node_TopNode0.setChild(quantifierNode0);
      node_TopNode0.toString();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode((-1785), (-1785), false);
      quantifierNode0.isSimple();
      EncloseNode encloseNode0 = new EncloseNode((-1785));
      Node.TopNode node_TopNode0 = Node.newTop(encloseNode0);
      node_TopNode0.getRoot();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode((-1785), (-1785), false);
      Node.TopNode node_TopNode0 = Node.newTop(quantifierNode0);
      quantifierNode0.toString(2428);
      quantifierNode0.isSimple();
      quantifierNode0.getChild();
      node_TopNode0.getRoot();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      stringNode0.end = 0;
      stringNode0.toString();
      int int0 = StringType.NSTR_AMBIG;
      EncloseNode encloseNode0 = new EncloseNode(1808);
      AnchorNode anchorNode0 = new AnchorNode(6);
      QuantifierNode quantifierNode0 = new QuantifierNode(256, (-661), true);
      Node.newTop(quantifierNode0);
      quantifierNode0.parent.toString();
      anchorNode0.toString(16);
      quantifierNode0.toString(0);
      ScanEnvironment scanEnvironment0 = mock(ScanEnvironment.class, new ViolatedAssumptionAnswer());
      quantifierNode0.setQuantifier(stringNode0, true, scanEnvironment0, (byte[]) null, 16, 0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      stringNode0.toString();
      AnyCharNode anyCharNode0 = new AnyCharNode();
      anyCharNode0.toString((-2352));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-9);
      intArray0[1] = (-916);
      intArray0[2] = (-9);
      intArray0[3] = (-9);
      StringNode stringNode0 = StringNode.EMPTY;
      QuantifierNode quantifierNode0 = new QuantifierNode(682, (-9), false);
      Node node0 = quantifierNode0.nextHeadExact;
      stringNode0.setChild((Node) null);
      ListNode listNode0 = ListNode.newList(quantifierNode0, (ListNode) null);
      listNode0.getAddressName();
      listNode0.toListNode();
      Node.TopNode node_TopNode0 = Node.newTop(quantifierNode0);
      // Undeclared exception!
      node_TopNode0.toString(682);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      // Undeclared exception!
      try { 
        stringNode0.replaceWith((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.ast.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode((-1785), (-1785), false);
      quantifierNode0.getAddressName();
      quantifierNode0.toString(2428);
      quantifierNode0.isSimple();
      quantifierNode0.getChild();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringNode stringNode0 = new StringNode();
      Node.TopNode node_TopNode0 = new Node.TopNode(stringNode0);
      node_TopNode0.isSimple();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-153);
      intArray0[1] = (-1007);
      intArray0[2] = (-1007);
      intArray0[3] = (-1007);
      intArray0[4] = (-1007);
      ScanEnvironment scanEnvironment0 = mock(ScanEnvironment.class, new ViolatedAssumptionAnswer());
      BackRefNode backRefNode0 = new BackRefNode((-1007), intArray0, true, true, (-1007), scanEnvironment0);
      Node.TopNode node_TopNode0 = Node.newTop(backRefNode0);
      node_TopNode0.getChild();
      backRefNode0.getType2Bit();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      CallNode callNode0 = new CallNode(byteArray0, (byte)0, (-908), (byte)0);
      EncloseNode encloseNode0 = new EncloseNode(0);
      callNode0.setTarget(encloseNode0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      Node.TopNode node_TopNode0 = Node.newTop(stringNode0);
      QuantifierNode quantifierNode0 = new QuantifierNode(1614, 1808, false);
      quantifierNode0.setTarget(node_TopNode0);
      node_TopNode0.getChild();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AnyCharNode anyCharNode0 = new AnyCharNode();
      Node.newTop(anyCharNode0);
      anyCharNode0.isSimple();
      EncloseNode.newMemory((-1570030630), true);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringNode stringNode0 = new StringNode();
      EncloseNode encloseNode0 = new EncloseNode(0);
      Node node0 = encloseNode0.target;
      ListNode listNode0 = ListNode.newList((Node) null, (ListNode) null);
      ListNode listNode1 = ListNode.newAlt(stringNode0, listNode0);
      listNode1.toListNode();
      stringNode0.isSimple();
      encloseNode0.getName();
      QuantifierNode quantifierNode0 = new QuantifierNode(0, (-5644), true);
      QuantifierNode quantifierNode1 = new QuantifierNode(0, (-117), true);
      // Undeclared exception!
      try { 
        quantifierNode0.copy(quantifierNode1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.ast.QuantifierNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      stringNode0.end = 0;
      stringNode0.parent.toString();
      stringNode0.getType2Bit();
      EncloseNode encloseNode0 = new EncloseNode((-1454));
      encloseNode0.isMemory();
      AnchorNode anchorNode0 = new AnchorNode(0);
      QuantifierNode quantifierNode0 = new QuantifierNode((-2352), (-1454), false);
      Node node0 = quantifierNode0.headExact;
      // Undeclared exception!
      try { 
        Node.newTop((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.ast.Node$TopNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newTop((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joni.ast.Node$TopNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringNode stringNode0 = new StringNode(1029);
      stringNode0.getAddressName();
      QuantifierNode quantifierNode0 = new QuantifierNode(0, 4331, true);
      Node node0 = quantifierNode0.headExact;
      stringNode0.setChild((Node) null);
      ListNode listNode0 = ListNode.newList(quantifierNode0, (ListNode) null);
      listNode0.getAddressName();
      listNode0.toListNode();
      Node.TopNode node_TopNode0 = Node.newTop(stringNode0);
      node_TopNode0.toString(0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      Node.TopNode node_TopNode0 = Node.newTop(stringNode0);
      node_TopNode0.getType2Bit();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      AnchorNode anchorNode0 = new AnchorNode((-2352));
      stringNode0.setChild(anchorNode0);
      Node.newTop(stringNode0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode((-17), (-2090), true);
      AnyCharNode anyCharNode0 = new AnyCharNode();
      Object object0 = new Object();
      Node.pad(object0, (-17));
      anyCharNode0.setChild(quantifierNode0);
      anyCharNode0.toString((-17));
      Node.pad(anyCharNode0, (-2090));
      EncloseNode encloseNode0 = EncloseNode.newMemory(0, false);
      Node.pad(encloseNode0, 0);
      encloseNode0.setTarget(anyCharNode0);
      anyCharNode0.getType();
      AnchorNode anchorNode0 = new AnchorNode(0);
      anchorNode0.typeToString();
      encloseNode0.isOption();
      QuantifierNode.isRepeatInfinite(0);
      quantifierNode0.toString(0);
      encloseNode0.target.parent = (Node) quantifierNode0;
      CTypeNode cTypeNode0 = new CTypeNode(0, true, true);
      cTypeNode0.toString((-17));
      encloseNode0.isMemory();
      StringNode stringNode0 = new StringNode();
      quantifierNode0.setChild(stringNode0);
      encloseNode0.isOption();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      stringNode0.replaceWith(stringNode0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ListNode listNode0 = ListNode.listAdd((ListNode) null, (Node) null);
      ListNode listNode1 = ListNode.newAlt((Node) null, listNode0);
      ListNode listNode2 = listNode1.tail;
      listNode2.toString(849);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode((-1817), (-1817), true);
      quantifierNode0.toString();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode(31, 31, false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte) (-103);
      CallNode callNode0 = new CallNode(byteArray0, 0, (byte)0, 31);
      EncloseNode encloseNode0 = callNode0.target;
      quantifierNode0.setChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      Node.pad(object0, 661);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CTypeNode cTypeNode0 = new CTypeNode(1628, false, false);
      int int0 = 134217728;
      EncloseNode encloseNode0 = EncloseNode.newOption(134217728);
      cTypeNode0.parent = (Node) encloseNode0;
      Object object0 = new Object();
      Node.pad(object0, 2);
      cTypeNode0.parent.getName();
      cTypeNode0.toString(0);
      ListNode listNode0 = ListNode.newList(cTypeNode0, (ListNode) null);
      ListNode listNode1 = ListNode.listAdd(listNode0, listNode0);
      cTypeNode0.parent.replaceWith(listNode1);
      listNode1.value.replaceWith(encloseNode0);
      // Undeclared exception!
      Node.pad(object0, 1628);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringNode stringNode0 = StringNode.EMPTY;
      Node.pad(stringNode0, 0);
      Node.newTop(stringNode0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuantifierNode quantifierNode0 = new QuantifierNode(682, (-2151), false);
      // Undeclared exception!
      Node.pad(quantifierNode0, 682);
  }
}
