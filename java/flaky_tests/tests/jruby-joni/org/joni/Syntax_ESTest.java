/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:27:23 GMT 2022
 */

package org.joni;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joni.Syntax;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Syntax_ESTest extends Syntax_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable(2146948438, 2146948438, 221191, 2146948438, 221191, (-2976));
      Syntax syntax0 = new Syntax((String) null, 2146948438, 2146948438, 2146948438, 8192, (-2976), syntax_MetaCharTable0);
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkBarBranchReset();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable((-3369), (-2938), (-2938), 1073206614, 1350, (-3369));
      Syntax syntax0 = new Syntax("-Wk[>eXPpY", (-3369), (-3369), (-3369), (-2938), 1350, syntax_MetaCharTable0);
      syntax0.op2QMarkCapitalPNamedGroup();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable((-3411), (-4335), 87, 33554432, 394, 394);
      Syntax syntax0 = new Syntax("org.joni.Syntax$MetaCharTable", 33554432, (-4335), 1464, (-3411), 33554432, syntax_MetaCharTable0);
      syntax0.op2EscGBraceBackref();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable((-118), 33543186, 33543186, 1275, 33543186, (-118));
      Syntax syntax0 = new Syntax("YdhX1m!g$[", (-118), 1275, (-118), (-118), (-118), syntax_MetaCharTable0);
      syntax0.isOp3(33543186);
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.isOp3((-1740));
      syntax0.isOp3((-118));
      syntax0.op2EscGBraceBackref();
      syntax0.isOp3((-3210));
      syntax0.isOp3(4338);
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.opEscOBraceOctal();
      syntax0.isOp3(65536);
      syntax0.isOp3((-118));
      syntax0.opEscOBraceOctal();
      syntax0.op2QMarkSubexpCall();
      syntax0.opEscAsteriskZeroInf();
      syntax0.isOp(1172);
      syntax0.op2EscGBraceBackref();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2EscGBraceBackref();
      syntax0.op2AtMarkCaptureHistory();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Syntax syntax0 = Syntax.Grep;
      syntax0.op2PlusPossessiveRepeat();
      syntax0.op2EscGnuBufAnchor();
      syntax0.opPlusOneInf();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.allowIntervalLowAbbrev();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.opDotAnyChar();
      syntax0.opQMarkNonGreedy();
      syntax0.allowMultiplexDefinitionName();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.opQMarkNonGreedy();
      syntax0.op2OptionPerl();
      Syntax syntax1 = new Syntax("", 27208358, 435, 435, 0, 1085, syntax0.metaCharTable);
      syntax1.op2EscPBraceCircumflexNot();
      syntax1.warnCCOpNotEscaped();
      syntax1.op3OptionJava();
      syntax0.strictCheckBackref();
      syntax1.opEscVBarAlt();
      syntax0.op2EscCapitalKKeep();
      syntax0.captureOnlyNamedGroup();
      syntax0.opEscBWordBound();
      syntax1.opAsteriskZeroInf();
      syntax1.op2CClassSetOp();
      syntax0.allowMultiplexDefinitionName();
      syntax1.warnReduntantNestedRepeat();
      syntax0.fixedIntervalIsGreedyOnly();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.allowIntervalLowAbbrev();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Syntax syntax0 = Syntax.Grep;
      syntax0.isOp(16777216);
      syntax0.op2QMarkSubexpCall();
      syntax0.isOp3(703);
      syntax0.isOp3(703);
      syntax0.op2EscGBraceBackref();
      syntax0.op2QMarkBarBranchReset();
      syntax0.notNewlineInNegativeCC();
      syntax0.notNewlineInNegativeCC();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.opEscPlusOneInf();
      syntax0.op2EscGBraceBackref();
      syntax0.opEscOBraceOctal();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2EscGBraceBackref();
      syntax0.opEscOBraceOctal();
      syntax0.op2EscGBraceBackref();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.op2EscGBraceBackref();
      syntax0.opEscOBraceOctal();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.isOp(16777216);
      syntax0.op3OptionJava();
      syntax0.opEscAsteriskZeroInf();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.opEscOBraceOctal();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.op2EscGBraceBackref();
      syntax0.op3OptionJava();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.op2EscGBraceBackref();
      syntax0.opEscPlusOneInf();
      syntax0.isOp3(3708);
      syntax0.op3OptionJava();
      syntax0.op2IneffectiveEscape();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op3OptionJava();
      syntax0.opEscPlusOneInf();
      syntax0.isOp(3708);
      syntax0.op2QMarkBarBranchReset();
      syntax0.isOp3(3708);
      syntax0.isOp(4);
      syntax0.op2IneffectiveEscape();
      syntax0.isOp3((-4097));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable(8388608, 8388608, 8388608, 2214, 32768, (-48));
      Syntax syntax0 = new Syntax("Java", 32768, 32768, 78, 2214, 78, syntax_MetaCharTable0);
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.strictCheckBackref();
      syntax0.isOp(8192);
      syntax0.opBracketCC();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.op2OptionRuby();
      syntax0.op3OptionJava();
      syntax0.op2OptionRuby();
      syntax0.opEscOBraceOctal();
      syntax0.op3OptionJava();
      syntax0.isOp(1062);
      syntax0.strictCheckBackref();
      syntax0.notNewlineInNegativeCC();
      syntax0.op2QMarkSubexpCall();
      syntax0.op2OptionRuby();
      syntax0.op2EscGBraceBackref();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Syntax syntax0 = Syntax.Perl;
      syntax0.opLineAnchor();
      syntax0.op2EscPBraceCharProperty();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.isOp3(536870912);
      syntax0.opEscLtGtWordBeginEnd();
      syntax0.opEscOBraceOctal();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.opEscOBraceOctal();
      syntax0.captureOnlyNamedGroup();
      syntax0.allowIntervalLowAbbrev();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Syntax syntax0 = new Syntax("5Y4@:(-K1o9", 765, (-1162), 8192, (-1162), 765, (Syntax.MetaCharTable) null);
      syntax0.opEscOBraceOctal();
      syntax0.isBehavior((-63));
      syntax0.op2EscCapitalXExtendedGraphemeCluster();
      syntax0.opEscQMarkZeroOne();
      syntax0.warnCCOpNotEscaped();
      syntax0.opVariableMetaCharacters();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.allowEmptyRangeInCC();
      syntax0.opEscOBraceOctal();
      syntax0.op2QMarkLParenCondition();
      syntax0.opEscQMarkZeroOne();
      syntax0.opEscLtGtWordBeginEnd();
      syntax0.op2EscHXDigit();
      syntax0.isBehavior(67108864);
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.captureOnlyNamedGroup();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.isOp3((-1162));
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixBasic;
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.backSlashEscapeInCC();
      syntax0.opPlusOneInf();
      boolean boolean0 = syntax0.opBraceInterval();
      assertFalse(boolean0);
      
      syntax0.notNewlineInNegativeCC();
      syntax0.opEscSWhiteSpace();
      syntax0.op2QMarkGroupEffect();
      syntax0.op2QMarkLParenCondition();
      syntax0.warnCCDup();
      syntax0.isOp2(1982);
      syntax0.opEscVBarAlt();
      syntax0.op2EscUHex4();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.opAsteriskZeroInf();
      boolean boolean1 = syntax0.op2QMarkBarBranchReset();
      boolean boolean2 = syntax0.opEscDDigit();
      syntax0.opEscBraceInterval();
      syntax0.opEscPlusOneInf();
      boolean boolean3 = syntax0.opDotAnyChar();
      assertTrue(boolean3);
      assertFalse(boolean3 == boolean2);
      
      syntax0.warnCCDup();
      syntax0.allowInvalidInterval();
      syntax0.opLParenSubexp();
      syntax0.op2IneffectiveEscape();
      syntax0.isOp3(0);
      boolean boolean4 = syntax0.allowEmptyRangeInCC();
      assertTrue(boolean4 == boolean1);
      
      syntax0.isBehavior(8192);
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.allowMultiplexDefinitionName();
      syntax0.isBehavior(8192);
      syntax0.opEscOctal3();
      syntax0.op2EscPBraceCharProperty();
      assertFalse(syntax0.op2QMarkSubexpCall());
      assertFalse(syntax0.op2CClassSetOp());
      assertFalse(syntax0.op2EscCapitalQQuote());
      
      syntax0.allowDoubleRangeOpInCC();
      syntax0.opEscAsteriskZeroInf();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.op2PlusPossessiveRepeat();
      syntax0.op2EscGnuBufAnchor();
      syntax0.opPlusOneInf();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.allowIntervalLowAbbrev();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.opDotAnyChar();
      syntax0.opEscAsteriskZeroInf();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.warnCCOpNotEscaped();
      syntax0.op2EscCapitalCBarControl();
      syntax0.opPosixBracket();
      syntax0.opEscBWordBound();
      syntax0.opEscVBarAlt();
      syntax0.differentLengthAltLookBehind();
      Syntax syntax1 = Syntax.TEST;
      syntax1.op3OptionECMAScript();
      syntax0.opQMarkNonGreedy();
      syntax0.opDecimalBackref();
      syntax0.opAsteriskZeroInf();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.opEscQMarkZeroOne();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Syntax syntax0 = Syntax.DEFAULT;
      syntax0.opAsteriskZeroInf();
      syntax0.opEscControlChars();
      syntax0.opEscOctal3();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.opEscControlChars();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.op2PlusPossessiveRepeat();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.op2EscCapitalKKeep();
      syntax0.opEscBWordBound();
      syntax0.isOp((-1292));
      syntax0.op2CClassSetOp();
      syntax0.warnReduntantNestedRepeat();
      syntax0.allowMultiplexDefinitionName();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.op2QMarkLtNamedGroup();
      syntax0.op2EscGnuBufAnchor();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.op3OptionECMAScript();
      syntax0.opDotAnyChar();
      syntax0.isOp3(566);
      syntax0.op2EscCapitalMBarMeta();
      syntax0.op2IneffectiveEscape();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.opEscBraceInterval();
      syntax0.op2EscCapitalCBarControl();
      syntax0.allowMultiplexDefinitionName();
      syntax0.op2QMarkTildeAbsent();
      syntax0.opEscLtGtWordBeginEnd();
      syntax0.opEscDDigit();
      syntax0.opEscVBarAlt();
      syntax0.isOp(566);
      syntax0.op2EscKNamedBackref();
      syntax0.contextIndepRepeatOps();
      syntax0.opPlusOneInf();
      syntax0.opDecimalBackref();
      syntax0.op2EscCapitalCBarControl();
      syntax0.opLParenSubexp();
      syntax0.opEscWWord();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.op2EscGSubexpCall();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.isOp2(3339);
      syntax0.allowUnmatchedCloseSubexp();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.op3OptionECMAScript();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.opLParenSubexp();
      syntax0.allowDoubleRangeOpInCC();
      syntax0.op2QMarkBarBranchReset();
      syntax0.opEscDDigit();
      syntax0.op2PlusPossessiveInterval();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.opLParenSubexp();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.warnCCDup();
      syntax0.notNewlineInNegativeCC();
      syntax0.opEscVBarAlt();
      syntax0.op2PlusPossessiveRepeat();
      syntax0.warnCCOpNotEscaped();
      syntax0.op2EscCapitalXExtendedGraphemeCluster();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.op2OptionPerl();
      syntax0.opEscPlusOneInf();
      syntax0.notNewlineInNegativeCC();
      syntax0.op2EscGBraceBackref();
      syntax0.op2EscCapitalQQuote();
      syntax0.isBehavior(0);
      syntax0.opVBarAlt();
      syntax0.op2EscGBraceBackref();
      syntax0.backSlashEscapeInCC();
      syntax0.opVBarAlt();
      syntax0.op2EscUHex4();
      syntax0.opVBarAlt();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.opEscDDigit();
      syntax0.allowInvalidInterval();
      syntax0.op2CClassSetOp();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.opLParenSubexp();
      syntax0.op2EscGBraceBackref();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.opVBarAlt();
      syntax0.opBracketCC();
      syntax0.opEscDDigit();
      syntax0.opEscDDigit();
      syntax0.op3OptionECMAScript();
      syntax0.opEscSWhiteSpace();
      syntax0.opEscVBarAlt();
      syntax0.isBehavior(5301);
      syntax0.isOp2(5301);
      syntax0.isOp3(493);
      syntax0.opLParenSubexp();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.opEscBraceInterval();
      syntax0.isOp2(0);
      syntax0.warnCCDup();
      syntax0.warnCCDup();
      syntax0.opDotAnyChar();
      syntax0.op2QMarkSubexpCall();
      syntax0.allowInvalidInterval();
      syntax0.opEscOctal3();
      syntax0.opBraceInterval();
      syntax0.fixedIntervalIsGreedyOnly();
      syntax0.op2EscVVtab();
      syntax0.op2AtMarkCaptureHistory();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable(0, 3049, 1764, 7682, 131072, 131072);
      Syntax syntax0 = new Syntax("", 0, 0, 0, 0, 0, syntax_MetaCharTable0);
      syntax0.op2CClassSetOp();
      syntax0.allowInvalidInterval();
      syntax0.op2IneffectiveEscape();
      syntax0.opVBarAlt();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.opLParenSubexp();
      syntax0.opDotAnyChar();
      syntax0.opEscPlusOneInf();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opLineAnchor();
      syntax0.opBraceInterval();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable((-1719), (-1719), 1024, (-1719), 1024, 1024);
      Syntax syntax0 = new Syntax("", 512, 512, 512, (-1719), (-1719), syntax_MetaCharTable0);
      syntax0.opBraceInterval();
      syntax0.isOp(512);
      syntax0.allowInvalidInterval();
      syntax0.opQMarkZeroOne();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.op3OptionECMAScript();
      syntax0.opEscLParenSubexp();
      syntax0.opEscXHex2();
      syntax0.op2QMarkLParenCondition();
      syntax0.opLineAnchor();
      syntax0.op3OptionECMAScript();
      syntax0.opQMarkNonGreedy();
      syntax0.opEscWWord();
      syntax0.opEscLtGtWordBeginEnd();
      syntax0.isBehavior(0);
      syntax0.op2OptionPerl();
      syntax0.opEscWWord();
      syntax0.op2EscGBraceBackref();
      syntax0.opDecimalBackref();
      syntax0.opEscDDigit();
      syntax0.op2EscHXDigit();
      syntax0.op2EscGnuBufAnchor();
      syntax0.op2QMarkLParenCondition();
      syntax0.contextInvalidRepeatOps();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.allowMultiplexDefinitionName();
      syntax0.warnCCOpNotEscaped();
      syntax0.op2CClassSetOp();
      syntax0.op2QMarkLtNamedGroup();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.op2OptionRuby();
      syntax0.opVariableMetaCharacters();
      syntax0.opEscCControl();
      syntax0.op2EscVVtab();
      syntax0.differentLengthAltLookBehind();
      syntax0.warnCCOpNotEscaped();
      syntax0.backSlashEscapeInCC();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Syntax syntax0 = Syntax.Perl;
      syntax0.op2QMarkTildeAbsent();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixBasic;
      syntax0.allowMultiplexDefinitionName();
      syntax0.op2QMarkTildeAbsent();
      syntax0.allowIntervalLowAbbrev();
      syntax0.opEscCControl();
      syntax0.isBehavior((-834));
      syntax0.opEscVBarAlt();
      syntax0.fixedIntervalIsGreedyOnly();
      syntax0.op2QMarkTildeAbsent();
      syntax0.opEscBraceInterval();
      syntax0.op2PlusPossessiveInterval();
      syntax0.warnCCOpNotEscaped();
      syntax0.op2EscHXDigit();
      syntax0.isBehavior((-834));
      syntax0.op2EscVVtab();
      syntax0.strictCheckBackref();
      syntax0.op2EscVVtab();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.op2QMarkLParenCondition();
      syntax0.op2OptionPerl();
      syntax0.opEscControlChars();
      syntax0.opDecimalBackref();
      syntax0.opEscQMarkZeroOne();
      syntax0.allowEmptyRangeInCC();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.allowDoubleRangeOpInCC();
      syntax0.op2EscVVtab();
      syntax0.op2EscGSubexpCall();
      syntax0.op2EscCapitalQQuote();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.opEscXBraceHex8();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.opVBarAlt();
      syntax0.opEscCControl();
      syntax0.fixedIntervalIsGreedyOnly();
      syntax0.opEscBraceInterval();
      syntax0.opEscAZBufAnchor();
      syntax0.opDotAnyChar();
      syntax0.op2EscKNamedBackref();
      syntax0.opEscPlusOneInf();
      syntax0.opLParenSubexp();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.backSlashEscapeInCC();
      syntax0.op2EscGnuBufAnchor();
      syntax0.warnCCDup();
      syntax0.op2EscCapitalQQuote();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.isOp(4927);
      syntax0.op2OptionRuby();
      syntax0.isBehavior(4927);
      syntax0.op3OptionECMAScript();
      syntax0.opPlusOneInf();
      syntax0.opEscXBraceHex8();
      syntax0.op2EscCapitalXExtendedGraphemeCluster();
      syntax0.opEscControlChars();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.opPlusOneInf();
      syntax0.op2EscCapitalQQuote();
      syntax0.opVariableMetaCharacters();
      syntax0.opEscWWord();
      syntax0.op2PlusPossessiveRepeat();
      syntax0.allowInvalidInterval();
      syntax0.opEscAZBufAnchor();
      syntax0.op2EscGBraceBackref();
      syntax0.op2QMarkLParenCondition();
      syntax0.op2EscGSubexpCall();
      syntax0.allowDoubleRangeOpInCC();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.opQMarkZeroOne();
      syntax0.opDecimalBackref();
      syntax0.allowDoubleRangeOpInCC();
      syntax0.opEscSWhiteSpace();
      syntax0.opDecimalBackref();
      syntax0.opEscLtGtWordBeginEnd();
      syntax0.opEscWWord();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.opEscControlChars();
      syntax0.op2QMarkLtNamedGroup();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.differentLengthAltLookBehind();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.opEscLtGtWordBeginEnd();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opEscBWordBound();
      syntax0.opEscQMarkZeroOne();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.captureOnlyNamedGroup();
      syntax0.op2OptionPerl();
      syntax0.opEscWWord();
      syntax0.opEscVBarAlt();
      syntax0.opEscLtGtWordBeginEnd();
      syntax0.op2EscCapitalXExtendedGraphemeCluster();
      syntax0.isOp((-1203));
      syntax0.notNewlineInNegativeCC();
      syntax0.allowInvalidInterval();
      syntax0.op2IneffectiveEscape();
      syntax0.warnCCOpNotEscaped();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.op2EscGnuBufAnchor();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.allowDoubleRangeOpInCC();
      syntax0.op2EscGSubexpCall();
      syntax0.op2IneffectiveEscape();
      syntax0.opPosixBracket();
      syntax0.op2QMarkBarBranchReset();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.opLineAnchor();
      syntax0.opQMarkZeroOne();
      syntax0.op2QMarkGroupEffect();
      syntax0.op2QMarkBarBranchReset();
      syntax0.op2QMarkCapitalPNamedGroup();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      Syntax syntax1 = new Syntax("Java", 90615, 0, 16392, (-2136997813), 16392, syntax0.metaCharTable);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable((-261), 1327, 1073741824, (-499), (-261), 181);
      Syntax syntax0 = new Syntax("$)zx)g2", 181, (-2699), (-2699), (-499), (-2699), syntax_MetaCharTable0);
      syntax0.opAsteriskZeroInf();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Syntax.MetaCharTable syntax_MetaCharTable0 = new Syntax.MetaCharTable((-3369), (-3369), (-3369), 1073206614, (-3369), (-3369));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.op2QMarkLParenCondition();
      syntax0.backSlashEscapeInCC();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.opLineAnchor();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.op2QMarkBarBranchReset();
      syntax0.contextIndepRepeatOps();
      syntax0.op2IneffectiveEscape();
      syntax0.isOp2(0);
      syntax0.differentLengthAltLookBehind();
      syntax0.opEscAsteriskZeroInf();
      syntax0.opEscLParenSubexp();
      syntax0.opEscSWhiteSpace();
      syntax0.opPosixBracket();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.isOp2(0);
      syntax0.opVBarAlt();
      syntax0.warnCCDup();
      syntax0.opQMarkNonGreedy();
      syntax0.allowMultiplexDefinitionName();
      syntax0.op2EscHHorizontalWhiteSpace();
      syntax0.opQMarkNonGreedy();
      syntax0.op2OptionPerl();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.warnCCOpNotEscaped();
      syntax0.op3OptionJava();
      syntax0.strictCheckBackref();
      syntax0.opEscVBarAlt();
      syntax0.op2EscCapitalKKeep();
      syntax0.captureOnlyNamedGroup();
      syntax0.opEscBWordBound();
      syntax0.opAsteriskZeroInf();
      syntax0.op2CClassSetOp();
      syntax0.allowMultiplexDefinitionName();
      syntax0.warnReduntantNestedRepeat();
      syntax0.fixedIntervalIsGreedyOnly();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.allowIntervalLowAbbrev();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.op2CClassSetOp();
      syntax0.op2EscHXDigit();
      syntax0.backSlashEscapeInCC();
      syntax0.opEscAZBufAnchor();
      syntax0.opEscBWordBound();
      syntax0.op2OptionRuby();
      syntax0.opEscAsteriskZeroInf();
      syntax0.warnReduntantNestedRepeat();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.fixedIntervalIsGreedyOnly();
      syntax0.allowInvalidInterval();
      syntax0.warnReduntantNestedRepeat();
      syntax0.isOp(0);
      syntax0.op2EscGnuBufAnchor();
      syntax0.opVBarAlt();
      syntax0.isBehavior(0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.op2EscCapitalKKeep();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.contextInvalidRepeatOps();
      syntax0.opEscAZBufAnchor();
      syntax0.op2EscCapitalKKeep();
      syntax0.opEscPlusOneInf();
      syntax0.opVBarAlt();
      syntax0.op2EscCapitalCBarControl();
      syntax0.opQMarkZeroOne();
      syntax0.opLParenSubexp();
      syntax0.op2EscVVtab();
      syntax0.warnCCDup();
      syntax0.warnReduntantNestedRepeat();
      syntax0.op2PlusPossessiveRepeat();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.opEscBWordBound();
      syntax0.opEscAZBufAnchor();
      syntax0.opEscOBraceOctal();
      syntax0.captureOnlyNamedGroup();
      syntax0.allowMultiplexDefinitionName();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.opEscAsteriskZeroInf();
      syntax0.opDotAnyChar();
      syntax0.contextIndepRepeatOps();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.op2EscVVtab();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opQMarkZeroOne();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Syntax syntax0 = Syntax.PerlNG;
      syntax0.fixedIntervalIsGreedyOnly();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.op2QMarkLtNamedGroup();
      syntax0.opDecimalBackref();
      syntax0.op2QMarkLParenCondition();
      syntax0.op2EscCapitalCBarControl();
      syntax0.opEscBWordBound();
      syntax0.opEscVBarAlt();
      syntax0.op2QMarkLParenCondition();
      syntax0.isBehavior(790);
      syntax0.opLineAnchor();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.contextIndepRepeatOps();
      syntax0.isOp2(0);
      syntax0.op2AtMarkCaptureHistory();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.opEscOctal3();
      syntax0.opEscXHex2();
      syntax0.opEscControlChars();
      syntax0.opQMarkZeroOne();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.op2QMarkBarBranchReset();
      syntax0.isOp2(0);
      syntax0.isBehavior(1206);
      syntax0.op3OptionJava();
      syntax0.opEscVBarAlt();
      syntax0.opEscLParenSubexp();
      syntax0.opEscDDigit();
      syntax0.opQMarkNonGreedy();
      syntax0.fixedIntervalIsGreedyOnly();
      syntax0.opEscWWord();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.opEscLParenSubexp();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.opDotAnyChar();
      syntax0.op2EscCapitalQQuote();
      syntax0.op2EscKNamedBackref();
      syntax0.opEscDDigit();
      syntax0.isOp2((-10));
      syntax0.opEscDDigit();
      syntax0.isOp(0);
      syntax0.opEscXBraceHex8();
      syntax0.opEscOctal3();
      syntax0.op2QMarkLtNamedGroup();
      syntax0.op3OptionJava();
      syntax0.op2EscCapitalRLinebreak();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Syntax syntax0 = Syntax.DEFAULT;
      syntax0.op2OptionPerl();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.warnCCDup();
      syntax0.op2OptionPerl();
      syntax0.allowUnmatchedCloseSubexp();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.op2QMarkBarBranchReset();
      syntax0.opEscLParenSubexp();
      syntax0.opEscLParenSubexp();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.opEscLParenSubexp();
      syntax0.opEscXHex2();
      syntax0.opEscControlChars();
      syntax0.warnCCDup();
      syntax0.differentLengthAltLookBehind();
      syntax0.opEscSWhiteSpace();
      syntax0.opAsteriskZeroInf();
      syntax0.opEscSWhiteSpace();
      syntax0.op2EscGnuBufAnchor();
      syntax0.opEscBWordBound();
      syntax0.opEscControlChars();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.op3OptionJava();
      syntax0.opEscAsteriskZeroInf();
      syntax0.opEscBraceInterval();
      syntax0.op3OptionECMAScript();
      syntax0.opVBarAlt();
      syntax0.opEscVBarAlt();
      syntax0.warnReduntantNestedRepeat();
      syntax0.opLParenSubexp();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.contextIndepRepeatOps();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.op2EscHXDigit();
      syntax0.opEscBWordBound();
      syntax0.opEscXHex2();
      syntax0.op2PlusPossessiveRepeat();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.opVariableMetaCharacters();
      syntax0.op2EscGnuBufAnchor();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.opEscDDigit();
      syntax0.opVariableMetaCharacters();
      syntax0.contextIndepRepeatOps();
      syntax0.op2QMarkLParenCondition();
      syntax0.opEscBWordBound();
      syntax0.op2EscUHex4();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.opVBarAlt();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Syntax syntax0 = Syntax.Grep;
      syntax0.opEscXHex2();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.contextInvalidRepeatOps();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.opEscXBraceHex8();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.warnReduntantNestedRepeat();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Syntax syntax0 = Syntax.PerlNG;
      syntax0.op2EscCapitalRLinebreak();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opEscAZBufAnchor();
      syntax0.opEscControlChars();
      syntax0.contextInvalidRepeatOps();
      syntax0.opVBarAlt();
      syntax0.op2EscGBraceBackref();
      syntax0.op3OptionJava();
      syntax0.opEscWWord();
      syntax0.opEscXBraceHex8();
      syntax0.opEscBWordBound();
      syntax0.allowInvalidInterval();
      syntax0.opEscDDigit();
      syntax0.op2QMarkGroupEffect();
      syntax0.opDecimalBackref();
      syntax0.op2QMarkSubexpCall();
      syntax0.allowMultiplexDefinitionName();
      syntax0.opEscWWord();
      syntax0.op2EscCapitalCBarControl();
      syntax0.opEscCControl();
      syntax0.allowIntervalLowAbbrev();
      syntax0.opEscWWord();
      syntax0.op2EscKNamedBackref();
      syntax0.opEscBWordBound();
      syntax0.opLParenSubexp();
      syntax0.strictCheckBackref();
      syntax0.opPlusOneInf();
      syntax0.opVariableMetaCharacters();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.opEscBraceInterval();
      syntax0.opPosixBracket();
      syntax0.opEscAsteriskZeroInf();
      syntax0.op2PlusPossessiveInterval();
      syntax0.op2PlusPossessiveRepeat();
      syntax0.opEscBraceInterval();
      syntax0.warnReduntantNestedRepeat();
      syntax0.op3OptionECMAScript();
      syntax0.opEscXHex2();
      syntax0.op2EscCapitalRLinebreak();
      syntax0.op2IneffectiveEscape();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.op2QMarkLtNamedGroup();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Syntax syntax0 = Syntax.PerlNG;
      syntax0.op2EscHXDigit();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.opEscLParenSubexp();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.captureOnlyNamedGroup();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixBasic;
      syntax0.opEscControlChars();
      syntax0.backSlashEscapeInCC();
      syntax0.isOp(1683);
      syntax0.op2QMarkLtNamedGroup();
      syntax0.allowInvalidInterval();
      syntax0.op2EscCapitalXExtendedGraphemeCluster();
      syntax0.opDecimalBackref();
      syntax0.opEscAsteriskZeroInf();
      syntax0.op2EscHXDigit();
      syntax0.isOp2(1683);
      syntax0.captureOnlyNamedGroup();
      syntax0.opEscLParenSubexp();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Syntax syntax0 = Syntax.Grep;
      syntax0.op2EscCapitalXExtendedGraphemeCluster();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.op2OptionRuby();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.op2EscGSubexpCall();
      syntax0.differentLengthAltLookBehind();
      syntax0.allowEmptyRangeInCC();
      syntax0.isBehavior(3459);
      syntax0.op2OptionRuby();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.op2QMarkBarBranchReset();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opQMarkNonGreedy();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.differentLengthAltLookBehind();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.op2EscGnuBufAnchor();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixBasic;
      syntax0.op2PlusPossessiveRepeat();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.allowIntervalLowAbbrev();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.op2EscCapitalCBarControl();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.allowUnmatchedCloseSubexp();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.opDecimalBackref();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Syntax syntax0 = Syntax.Grep;
      syntax0.op2PlusPossessiveRepeat();
      syntax0.op2EscGnuBufAnchor();
      syntax0.opPlusOneInf();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.op2EscCapitalMBarMeta();
      syntax0.allowIntervalLowAbbrev();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.opDotAnyChar();
      syntax0.opEscAsteriskZeroInf();
      syntax0.allowUnmatchedCloseSubexp();
      syntax0.warnCCOpNotEscaped();
      syntax0.op2EscCapitalCBarControl();
      syntax0.opPosixBracket();
      syntax0.opEscBWordBound();
      syntax0.opEscVBarAlt();
      syntax0.differentLengthAltLookBehind();
      syntax0.op3OptionECMAScript();
      syntax0.opQMarkNonGreedy();
      syntax0.opDecimalBackref();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.isOp3(221191);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.opBracketCC();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Syntax syntax0 = Syntax.DEFAULT;
      syntax0.opEscCapitalGBeginAnchor();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opEscControlChars();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.warnCCOpNotEscaped();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.opEscCControl();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Syntax syntax0 = Syntax.Grep;
      syntax0.allowDoubleRangeOpInCC();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.op2QMarkSubexpCall();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.op2EscGBraceBackref();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.op3OptionECMAScript();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.opLineAnchor();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.opEscOBraceOctal();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.opEscWWord();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.op2PlusPossessiveInterval();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opEscSWhiteSpace();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.op2QMarkSubexpCall();
      syntax0.opBracketCC();
      syntax0.op2QMarkSubexpCall();
      syntax0.allowMultiplexDefinitionName();
      syntax0.opEscControlChars();
      syntax0.op2EscGBraceBackref();
      syntax0.warnCCDup();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.opEscDDigit();
      syntax0.op2CClassSetOp();
      syntax0.opEscCapitalGBeginAnchor();
      syntax0.op2CClassSetOp();
      syntax0.op2AtMarkCaptureHistory();
      syntax0.op3OptionECMAScript();
      syntax0.opEscBWordBound();
      syntax0.opEscCControl();
      syntax0.opDotAnyChar();
      syntax0.opLParenSubexp();
      syntax0.opAsteriskZeroInf();
      syntax0.opBracketCC();
      syntax0.allowEmptyRangeInCC();
      syntax0.opEscOBraceOctal();
      syntax0.op2PlusPossessiveInterval();
      syntax0.warnCCDup();
      syntax0.op3OptionECMAScript();
      syntax0.opEscWWord();
      syntax0.allowDoubleRangeOpInCC();
      syntax0.isBehavior(3247);
      syntax0.op2EscCapitalQQuote();
      syntax0.op2EscGBraceBackref();
      syntax0.warnCCOpNotEscaped();
      syntax0.opLineAnchor();
      syntax0.op2EscGBraceBackref();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.op2EscPBraceCircumflexNot();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opVariableMetaCharacters();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Syntax syntax0 = Syntax.DEFAULT;
      syntax0.op2EscKNamedBackref();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Syntax syntax0 = Syntax.Perl;
      syntax0.op2CClassSetOp();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.op2EscCapitalQQuote();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixBasic;
      syntax0.opEscAsteriskZeroInf();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opEscQMarkZeroOne();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.opEscAZBufAnchor();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.opPosixBracket();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.isOp3(0);
      syntax0.opEscPlusOneInf();
      syntax0.op2CClassSetOp();
      syntax0.strictCheckBackref();
      syntax0.opEscQMarkZeroOne();
      syntax0.isOp2(1048576);
      syntax0.opPosixBracket();
      syntax0.isBehavior(2236);
      syntax0.op2EscCapitalQQuote();
      syntax0.opEscAsteriskZeroInf();
      syntax0.opVariableMetaCharacters();
      syntax0.op2IneffectiveEscape();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.op2EscPBraceCircumflexNot();
      syntax0.op2EscPBraceCharProperty();
      syntax0.isOp(64);
      syntax0.op2EscCapitalMBarMeta();
      syntax0.opEscAZBufAnchor();
      syntax0.op2EscGSubexpCall();
      syntax0.isOp3(75704918);
      syntax0.opEscBWordBound();
      syntax0.op2QMarkCapitalPNamedGroup();
      syntax0.opPosixBracket();
      syntax0.op2QMarkLParenCondition();
      syntax0.op2EscVVerticalWhiteSpace();
      syntax0.op2EscKNamedBackref();
      syntax0.opEscBWordBound();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Syntax syntax0 = Syntax.Emacs;
      syntax0.op2EscCapitalMBarMeta();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.op3OptionJava();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Syntax syntax0 = Syntax.Grep;
      syntax0.op2IneffectiveEscape();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.allowInvalidInterval();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.op2AtMarkCaptureHistory();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.allowMultiplexDefinitionName();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Syntax syntax0 = Syntax.PerlNG;
      syntax0.backSlashEscapeInCC();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.op2QMarkGroupEffect();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.opEscSWhiteSpace();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.opEscDDigit();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.opEscOctal3();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.strictCheckBackref();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixExtended;
      syntax0.op2EscHHorizontalWhiteSpace();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Syntax syntax0 = Syntax.Perl;
      syntax0.op2EscGSubexpCall();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.allowEmptyRangeInCC();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Syntax syntax0 = Syntax.RUBY;
      syntax0.warnCCDup();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Syntax syntax0 = Syntax.DEFAULT;
      syntax0.opBraceInterval();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Syntax syntax0 = Syntax.ASIS;
      syntax0.opEscBWordBound();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.opEscBWordBound();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Syntax syntax0 = Syntax.PerlNG;
      syntax0.op2QMarkLParenCondition();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Syntax syntax0 = Syntax.PerlNG;
      syntax0.notNewlineInNegativeCC();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixBasic;
      syntax0.op2EscVVerticalWhiteSpace();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Syntax syntax0 = Syntax.GnuRegex;
      syntax0.op2EscUHex4();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.op2EscPBraceCharProperty();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.opEscVBarAlt();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Syntax syntax0 = Syntax.PerlNG;
      syntax0.opAsteriskZeroInf();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Syntax syntax0 = Syntax.PosixBasic;
      syntax0.opDotAnyChar();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.op2QMarkCapitalPNamedGroup();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opLParenSubexp();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Syntax syntax0 = Syntax.DEFAULT;
      syntax0.opEscBraceInterval();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Syntax syntax0 = Syntax.Java;
      syntax0.opEscPlusOneInf();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Syntax syntax0 = Syntax.ECMAScript;
      syntax0.opPlusOneInf();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Syntax syntax0 = Syntax.TEST;
      syntax0.op2QMarkBarBranchReset();
  }
}
