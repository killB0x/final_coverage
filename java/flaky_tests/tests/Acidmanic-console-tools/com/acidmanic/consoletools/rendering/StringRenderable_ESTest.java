/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:12:27 GMT 2022
 */

package com.acidmanic.consoletools.rendering;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.Size;
import com.acidmanic.consoletools.rendering.RenderingContext;
import com.acidmanic.consoletools.rendering.StringRenderable;
import com.acidmanic.consoletools.textualcontent.StringModifierManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringRenderable_ESTest extends StringRenderable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("ox^s4P");
      stringRenderable0.setContent("");
      Size size0 = stringRenderable0.measure();
      assertEquals(1, size0.getLines());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("com.acidmanic.consoletools.rendering.BufferedStringRenderingContext");
      stringRenderable0.setContent((String) null);
      String string0 = stringRenderable0.getContent();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("p>QD9Vao)z4'i%7Ew2p");
      // Undeclared exception!
      try { 
        stringRenderable0.render((RenderingContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.rendering.StringRenderable", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable((String) null);
      // Undeclared exception!
      try { 
        stringRenderable0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.string.StringExtensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("ox^s4P");
      StringModifierManager stringModifierManager0 = stringRenderable0.getModifierManager();
      assertNotNull(stringModifierManager0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("ox^s4P");
      Size size0 = stringRenderable0.measure();
      assertEquals(6, size0.getColumns());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("ox^s4P");
      stringRenderable0.setContent("");
      String string0 = stringRenderable0.getContent();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("ox^s4P");
      RenderingContext<Object, Integer> renderingContext0 = (RenderingContext<Object, Integer>) mock(RenderingContext.class, new ViolatedAssumptionAnswer());
      stringRenderable0.render(renderingContext0);
      assertEquals("ox^s4P", stringRenderable0.getContent());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StringRenderable stringRenderable0 = new StringRenderable("n JUxJ0E");
      String string0 = stringRenderable0.getContent();
      assertEquals("n JUxJ0E", string0);
  }
}
