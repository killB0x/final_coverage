/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:10:49 GMT 2022
 */

package com.acidmanic.consoletools.rendering.sizing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.Scale;
import com.acidmanic.consoletools.drawing.Size;
import com.acidmanic.consoletools.rendering.sizing.SizeMatchStrategySolution;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SizeMatchStrategySolution_ESTest extends SizeMatchStrategySolution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Size size0 = new Size((-664), (-664));
      Scale scale0 = new Scale((-664), (-664));
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      float float0 = sizeMatchStrategySolution0.resolveVertical((-660));
      assertEquals(437576.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Size size0 = new Size();
      Scale scale0 = new Scale(1151.0563F, 1151.0563F);
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      float float0 = sizeMatchStrategySolution0.resolveVertical((-1));
      assertEquals((-1151.0563F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Size size0 = new Size();
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      float float0 = sizeMatchStrategySolution0.resolveHorizontal(0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Size size0 = new Size((-753), (-753));
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      scale0.setHorizontal(2462.953F);
      float float0 = sizeMatchStrategySolution0.resolveHorizontal(940);
      assertEquals(2314422.8F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SizeMatchStrategySolution sizeMatchStrategySolution0 = SizeMatchStrategySolution.DEFAULT;
      Size size0 = sizeMatchStrategySolution0.getTranslate();
      assertEquals(0, size0.getLines());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Size size0 = new Size();
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      Size size1 = sizeMatchStrategySolution0.getTranslate();
      assertEquals(0, size1.getColumns());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SizeMatchStrategySolution sizeMatchStrategySolution0 = SizeMatchStrategySolution.DEFAULT;
      Size size0 = new Size();
      sizeMatchStrategySolution0.setTranslate(size0);
      size0.setColumns(594);
      Size size1 = sizeMatchStrategySolution0.getTranslate();
      assertEquals(594, size1.getColumns());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution((Size) null, (Scale) null);
      Scale scale0 = sizeMatchStrategySolution0.getScale();
      assertNull(scale0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Size size0 = new Size();
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      scale0.setVertical(3438.602F);
      Scale scale1 = sizeMatchStrategySolution0.getScale();
      assertEquals(3438.602F, scale1.getVertical(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Size size0 = new Size((-753), (-753));
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      scale0.setVertical((-1.0F));
      Scale scale1 = sizeMatchStrategySolution0.getScale();
      assertSame(scale0, scale1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Size size0 = new Size((-753), (-753));
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      scale0.setHorizontal(2462.953F);
      Scale scale1 = sizeMatchStrategySolution0.getScale();
      assertEquals(2462.953F, scale1.getHorizontal(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Size size0 = new Size();
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      scale0.setHorizontal((-3380.54F));
      Scale scale1 = sizeMatchStrategySolution0.getScale();
      assertSame(scale1, scale0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Size size0 = new Size();
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      float float0 = sizeMatchStrategySolution0.resolveVertical(0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Size size0 = new Size((-753), (-753));
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      sizeMatchStrategySolution0.DEFAULT.setScale(scale0);
      assertEquals(0.0F, scale0.getVertical(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution();
      // Undeclared exception!
      try { 
        sizeMatchStrategySolution0.resolveVertical(3190);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.rendering.sizing.SizeMatchStrategySolution", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Size size0 = new Size((-753), (-753));
      Scale scale0 = new Scale();
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution(size0, scale0);
      float float0 = sizeMatchStrategySolution0.resolveHorizontal(940);
      assertEquals((-753.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SizeMatchStrategySolution sizeMatchStrategySolution0 = new SizeMatchStrategySolution((Size) null, (Scale) null);
      Size size0 = sizeMatchStrategySolution0.getTranslate();
      assertNull(size0);
  }
}
