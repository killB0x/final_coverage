/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:38:12 GMT 2022
 */

package com.acidmanic.consoletools.rendering;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.Position;
import com.acidmanic.consoletools.drawing.Size;
import com.acidmanic.consoletools.rendering.BufferedStringRenderingContext;
import com.acidmanic.consoletools.rendering.sizing.SizeMatchStrategy;
import com.acidmanic.consoletools.rendering.sizing.SizeMatchStrategySolution;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BufferedStringRenderingContext_ESTest extends BufferedStringRenderingContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Position position0 = new Position();
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
      position0.setLines((-1));
      position0.setColumns(2);
      bufferedStringRenderingContext0.put("s");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Position position0 = new Position();
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
      position0.setColumns((-299));
      bufferedStringRenderingContext0.put("&");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Size size0 = new Size(2, 2);
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(size0);
      SizeMatchStrategySolution sizeMatchStrategySolution0 = mock(SizeMatchStrategySolution.class, new ViolatedAssumptionAnswer());
      doReturn(0.0F, 0.0F, 0.0F, 0.0F).when(sizeMatchStrategySolution0).resolveHorizontal(anyInt());
      doReturn(0.0F, 0.0F).when(sizeMatchStrategySolution0).resolveVertical(anyInt());
      SizeMatchStrategy sizeMatchStrategy0 = mock(SizeMatchStrategy.class, new ViolatedAssumptionAnswer());
      doReturn(sizeMatchStrategySolution0).when(sizeMatchStrategy0).solve(any(com.acidmanic.consoletools.drawing.Size.class) , any(com.acidmanic.consoletools.drawing.Size.class));
      bufferedStringRenderingContext0.put("  \n  \n", sizeMatchStrategy0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Position position0 = new Position((-2966), (-570));
      position0.setColumns(32);
      position0.setLines(1);
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
      bufferedStringRenderingContext0.currentPosition = position0;
      bufferedStringRenderingContext0.put("1");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Position position0 = new Position(86, 86);
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
      bufferedStringRenderingContext0.represent();
      // Undeclared exception!
      bufferedStringRenderingContext0.represent();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Size size0 = new Size(1664, 6);
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(size0);
      String string0 = bufferedStringRenderingContext0.represent();
      // Undeclared exception!
      bufferedStringRenderingContext0.put(string0, (SizeMatchStrategy) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Position position0 = new Position();
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
      // Undeclared exception!
      try { 
        bufferedStringRenderingContext0.put((String) null, (SizeMatchStrategy) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.string.StringExtensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Position position0 = new Position(806, 806);
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BufferedStringRenderingContext bufferedStringRenderingContext0 = null;
      try {
        bufferedStringRenderingContext0 = new BufferedStringRenderingContext((Size) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.drawing.Clip", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Position position0 = new Position((-36), (-36));
      BufferedStringRenderingContext bufferedStringRenderingContext0 = null;
      try {
        bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -36
         //
         verifyException("com.acidmanic.consoletools.rendering.BufferedStringRenderingContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Position position0 = new Position(77, 77);
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
      // Undeclared exception!
      bufferedStringRenderingContext0.clear();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Size size0 = new Size();
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(size0);
      bufferedStringRenderingContext0.clear();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Position position0 = new Position();
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(position0);
      position0.setColumns(2);
      bufferedStringRenderingContext0.put("s");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Size size0 = new Size(2, 2);
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(size0);
      bufferedStringRenderingContext0.put("  \n  \n");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Size size0 = new Size();
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(size0);
      bufferedStringRenderingContext0.put("  \n  \n");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Size size0 = new Size();
      BufferedStringRenderingContext bufferedStringRenderingContext0 = new BufferedStringRenderingContext(size0);
      String string0 = bufferedStringRenderingContext0.represent();
      assertEquals("", string0);
  }
}
