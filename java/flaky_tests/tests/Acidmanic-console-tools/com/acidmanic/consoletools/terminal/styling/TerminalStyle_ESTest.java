/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:58:12 GMT 2022
 */

package com.acidmanic.consoletools.terminal.styling;

import org.junit.Test;
import static org.junit.Assert.*;
import com.acidmanic.consoletools.terminal.styling.TerminalStyle;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TerminalStyle_ESTest extends TerminalStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 0, 1706);
      terminalStyle0.setBrightness(1706);
      assertEquals(1706, terminalStyle0.getBrightness());
      assertEquals(0, terminalStyle0.getForegroundColor());
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2474), 0);
      List<Integer> list0 = terminalStyle0.getAll();
      assertEquals((-2474), terminalStyle0.getForegroundColor());
      assertEquals(3, list0.size());
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(2866, (-1046), 2);
      assertEquals((-1046), terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals(2, terminalStyle0.getBrightness());
      assertEquals(2866, terminalStyle0.getForegroundColor());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2474), 0);
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      
      terminalStyle0.setAlternativeFontUsing(true);
      boolean boolean0 = terminalStyle0.isAlternativeFontUsing();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 0, 1706);
      int int0 = terminalStyle0.getForegroundColor();
      assertEquals(0, int0);
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals(1706, terminalStyle0.getBrightness());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(2349, 2349);
      int int0 = terminalStyle0.getForegroundColor();
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals((-1), terminalStyle0.getBrightness());
      assertEquals(2349, int0);
      assertEquals(2349, terminalStyle0.getBackgroundColor());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 0, 1706);
      int int0 = terminalStyle0.getBrightness();
      assertEquals(0, terminalStyle0.getForegroundColor());
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals(1706, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2474), 0);
      int int0 = terminalStyle0.getBrightness();
      assertEquals((-2474), terminalStyle0.getForegroundColor());
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0);
      assertEquals((-1), terminalStyle0.getBackgroundColor());
      
      terminalStyle0.setBackgroundColor(0);
      int int0 = terminalStyle0.getBackgroundColor();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2202));
      terminalStyle0.setBackgroundColor(3518);
      int int0 = terminalStyle0.getBackgroundColor();
      assertEquals(3518, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2202));
      terminalStyle0.setBrightness(2);
      assertEquals(2, terminalStyle0.getBrightness());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2474), 0);
      terminalStyle0.setBrightness((-2474));
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals((-2474), terminalStyle0.getForegroundColor());
      assertEquals((-1), terminalStyle0.getBrightness());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle();
      assertEquals((-1), terminalStyle0.getBrightness());
      
      terminalStyle0.setBrightness(1);
      assertEquals(1, terminalStyle0.getBrightness());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2202));
      int int0 = terminalStyle0.getBackgroundColor();
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals((-1), int0);
      assertEquals((-2202), terminalStyle0.getForegroundColor());
      assertEquals((-1), terminalStyle0.getBrightness());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 0, 0);
      terminalStyle0.setForegroundColor(453);
      assertEquals(453, terminalStyle0.getForegroundColor());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 0, 0);
      List<Integer> list0 = terminalStyle0.getAll();
      assertEquals(0, terminalStyle0.getForegroundColor());
      assertEquals(4, list0.size());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals(0, terminalStyle0.getBrightness());
      assertEquals(0, terminalStyle0.getBackgroundColor());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2202));
      terminalStyle0.unsetBrightness();
      assertEquals((-2202), terminalStyle0.getForegroundColor());
      assertEquals((-1), terminalStyle0.getBrightness());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals((-1), terminalStyle0.getBackgroundColor());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2202));
      terminalStyle0.unsetBackground();
      assertEquals((-1), terminalStyle0.getBackgroundColor());
      assertEquals((-1), terminalStyle0.getBrightness());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals((-2202), terminalStyle0.getForegroundColor());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2474), 0);
      int int0 = terminalStyle0.getForegroundColor();
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
      assertEquals((-2474), int0);
      assertEquals((-1), terminalStyle0.getBrightness());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 0, 0);
      assertEquals(0, terminalStyle0.getForegroundColor());
      
      terminalStyle0.unsetForeground();
      terminalStyle0.getAll();
      assertEquals((-1), terminalStyle0.getForegroundColor());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2202));
      terminalStyle0.addAttributes(3781);
      assertEquals((-2202), terminalStyle0.getForegroundColor());
      assertEquals((-1), terminalStyle0.getBackgroundColor());
      assertEquals((-1), terminalStyle0.getBrightness());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 0, 0);
      int int0 = terminalStyle0.getBrightness();
      assertEquals(0, terminalStyle0.getForegroundColor());
      assertEquals(0, int0);
      assertEquals(0, terminalStyle0.getBackgroundColor());
      assertFalse(terminalStyle0.isAlternativeFontUsing());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TerminalStyle terminalStyle0 = new TerminalStyle((-2202));
      boolean boolean0 = terminalStyle0.isAlternativeFontUsing();
      assertEquals((-1), terminalStyle0.getBackgroundColor());
      assertEquals((-1), terminalStyle0.getBrightness());
      assertFalse(boolean0);
      assertEquals((-2202), terminalStyle0.getForegroundColor());
  }
}
