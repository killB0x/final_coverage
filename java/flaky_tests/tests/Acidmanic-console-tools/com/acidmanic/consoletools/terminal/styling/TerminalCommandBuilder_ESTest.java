/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:04:21 GMT 2022
 */

package com.acidmanic.consoletools.terminal.styling;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.terminal.styling.TerminalCommandBuilder;
import com.acidmanic.consoletools.terminal.styling.TerminalStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TerminalCommandBuilder_ESTest extends TerminalCommandBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.setScreenColors((-439), 951, (-1387));
      assertEquals("\u001B[-439;951;-1387m", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.setScreenColors((-2968), (-1));
      assertEquals("\u001B[-2968;-1m", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      // Undeclared exception!
      try { 
        terminalCommandBuilder0.setFont((TerminalStyle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.terminal.styling.TerminalCommandBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      // Undeclared exception!
      try { 
        terminalCommandBuilder0.createAttributesCommand((TerminalStyle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.terminal.styling.TerminalCommandBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      TerminalStyle terminalStyle0 = new TerminalStyle();
      terminalStyle0.setAlternativeFontUsing(true);
      String string0 = terminalCommandBuilder0.setFont(terminalStyle0);
      assertEquals("\u001B(", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      TerminalStyle terminalStyle0 = new TerminalStyle();
      String string0 = terminalCommandBuilder0.setFont(terminalStyle0);
      assertEquals("\u001B)", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      TerminalStyle terminalStyle0 = new TerminalStyle();
      String string0 = terminalCommandBuilder0.createAttributesCommand(terminalStyle0);
      assertEquals("\u001B[0m", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.moveCursorRight(0);
      assertEquals("\u001B[0C", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.queryCursorPosition();
      assertEquals("\u001B[6n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.moveCursorUp(1);
      assertEquals("\u001B[1A", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.resetScreenAttributes();
      assertEquals("\u001B[0m", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.moveCursorLeft((-1));
      assertEquals("\u001B[-1D", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TerminalCommandBuilder terminalCommandBuilder0 = new TerminalCommandBuilder();
      String string0 = terminalCommandBuilder0.moveCursorDown(1662);
      assertEquals("\u001B[1662B", string0);
  }
}
