/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:55:27 GMT 2022
 */

package com.acidmanic.consoletools.terminal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.Size;
import com.acidmanic.consoletools.terminal.Terminal;
import com.acidmanic.consoletools.terminal.styling.TerminalControlEscapeSequences;
import com.acidmanic.consoletools.terminal.styling.TerminalStyle;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Terminal_ESTest extends Terminal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      Size size0 = terminal0.queryCursorPosition();
      size0.setColumns(1);
      terminal0.moveCursor(size0);
      assertEquals(1, size0.getColumns());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      Size size0 = new Size((-868), 35);
      terminal0.moveCursor(size0);
      assertEquals(35, size0.getLines());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Terminal terminal0 = new Terminal((PrintStream) null);
      terminal0.setScreenAttributes(0, (-1984));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      // Undeclared exception!
      try { 
        terminal0.moveCursor((Size) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.terminal.Terminal", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      Size size0 = new Size((-3157), (-3157));
      terminal0.moveCursor(size0);
      assertEquals((-3157), size0.getLines());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      Size size0 = new Size();
      size0.setLines((-1));
      terminal0.moveCursor(size0);
      assertEquals((-1), size0.getLines());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      Terminal.Constants terminal_Constants0 = terminal0.new Constants();
      assertEquals(45, TerminalControlEscapeSequences.BACKGROUND_MAGENTA);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      TerminalStyle terminalStyle0 = new TerminalStyle(0, 30, 43);
      terminal0.setScreenAttributes(terminalStyle0);
      assertEquals((-1), TerminalStyle.VALUE_UNSET);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Terminal terminal0 = new Terminal();
      terminal0.resetScreenAttributes();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Terminal terminal0 = new Terminal((PrintStream) null);
      // Undeclared exception!
      try { 
        terminal0.setScreenAttributes((TerminalStyle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.terminal.styling.TerminalCommandBuilder", e);
      }
  }
}
