/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:47:28 GMT 2022
 */

package com.acidmanic.consoletools.table.builders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.AsciiBorder;
import com.acidmanic.consoletools.drawing.Padding;
import com.acidmanic.consoletools.rendering.Box;
import com.acidmanic.consoletools.rendering.componentfeatures.Renderable;
import com.acidmanic.consoletools.table.Cell;
import com.acidmanic.consoletools.table.Row;
import com.acidmanic.consoletools.table.builders.CellBuilder;
import com.acidmanic.consoletools.table.builders.RowBuilder;
import com.acidmanic.consoletools.table.builders.TableBuilderConsumer;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RowBuilder_ESTest extends RowBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.padding((-2113), 0);
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      Cell cell0 = new Cell("Je*KFQ<MH%d{\"");
      RowBuilder rowBuilder1 = rowBuilder0.cell((Box) cell0);
      Consumer<CellBuilder> consumer0 = (Consumer<CellBuilder>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      rowBuilder1.cell(consumer0);
      AsciiBorder asciiBorder0 = new AsciiBorder();
      RowBuilder rowBuilder2 = rowBuilder0.outline(asciiBorder0);
      assertSame(rowBuilder2, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      TableBuilderConsumer tableBuilderConsumer0 = mock(TableBuilderConsumer.class, new ViolatedAssumptionAnswer());
      RowBuilder rowBuilder1 = rowBuilder0.cell(tableBuilderConsumer0);
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      // Undeclared exception!
      try { 
        rowBuilder0.padding((Padding) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.rendering.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.cell((Box) null);
      // Undeclared exception!
      try { 
        rowBuilder1.padding((-10), (-10));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      rowBuilder0.cell((Box) null);
      // Undeclared exception!
      try { 
        rowBuilder0.padding(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.cell((Box) null);
      // Undeclared exception!
      try { 
        rowBuilder1.outline((AsciiBorder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      rowBuilder0.cell((Box) null);
      // Undeclared exception!
      try { 
        rowBuilder0.outline();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      // Undeclared exception!
      try { 
        rowBuilder0.margins((Padding) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.rendering.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.cell((Box) null);
      // Undeclared exception!
      try { 
        rowBuilder1.margins(3312, 3312);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      rowBuilder0.cell((Box) null);
      // Undeclared exception!
      try { 
        rowBuilder0.margins(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      // Undeclared exception!
      try { 
        rowBuilder0.cell((Consumer<CellBuilder>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.cell((Box) null);
      AsciiBorder asciiBorder0 = new AsciiBorder();
      // Undeclared exception!
      try { 
        rowBuilder1.border(asciiBorder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      rowBuilder0.cell((Box) null);
      // Undeclared exception!
      try { 
        rowBuilder0.border();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.maximumWidth((-7));
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      rowBuilder0.cell((Box) null);
      RowBuilder rowBuilder1 = rowBuilder0.maximumWidth((-1943));
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.text("L#");
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      Cell cell0 = new Cell("");
      Box box0 = new Box(cell0);
      RowBuilder rowBuilder1 = rowBuilder0.cell(box0);
      RowBuilder rowBuilder2 = rowBuilder1.text("5B`S");
      assertSame(rowBuilder2, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.outline();
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.cell("");
      assertSame(rowBuilder1, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.border();
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      AsciiBorder asciiBorder0 = new AsciiBorder();
      RowBuilder rowBuilder1 = rowBuilder0.border(asciiBorder0);
      assertSame(rowBuilder1, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      Cell cell0 = new Cell();
      RowBuilder rowBuilder1 = rowBuilder0.cell((Renderable) cell0);
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.padding(0);
      assertSame(rowBuilder0, rowBuilder1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.margins(32);
      assertSame(rowBuilder1, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      Cell cell0 = new Cell("");
      Padding padding0 = cell0.getMargins();
      RowBuilder rowBuilder1 = rowBuilder0.padding(padding0);
      assertSame(rowBuilder1, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.cell();
      assertSame(rowBuilder1, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      Padding padding0 = new Padding((-2113), (-398), (-398), 32);
      RowBuilder rowBuilder1 = rowBuilder0.margins(padding0);
      assertSame(rowBuilder1, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      Row row0 = rowBuilder0.build();
      assertNotNull(row0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      RowBuilder rowBuilder1 = rowBuilder0.margins((-2113), 32);
      assertSame(rowBuilder1, rowBuilder0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RowBuilder rowBuilder0 = new RowBuilder();
      // Undeclared exception!
      try { 
        rowBuilder0.cell((TableBuilderConsumer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.table.builders.RowBuilder", e);
      }
  }
}
