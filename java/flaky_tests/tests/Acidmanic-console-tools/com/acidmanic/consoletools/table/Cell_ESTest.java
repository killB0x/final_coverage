/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:06:21 GMT 2022
 */

package com.acidmanic.consoletools.table;

import org.junit.Test;
import static org.junit.Assert.*;
import com.acidmanic.consoletools.table.Cell;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cell_ESTest extends Cell_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Cell cell0 = new Cell();
      cell0.setMaximumWidth((-3747));
      assertEquals((-3747), cell0.getMaximumWidth());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Cell cell0 = new Cell((String) null);
      cell0.getText();
      assertEquals((-1), cell0.getMaximumWidth());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Cell cell0 = new Cell("com.acidmanic.consoletools.drawing.Clip");
      cell0.getText();
      assertEquals((-1), cell0.getMaximumWidth());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Cell cell0 = new Cell("com.acidmanic.consoletools.drawing.Clip");
      assertEquals((-1), cell0.getMaximumWidth());
      
      cell0.setMaximumWidth(0);
      int int0 = cell0.getMaximumWidth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Cell cell0 = new Cell("H");
      cell0.setMaximumWidth(35);
      int int0 = cell0.getMaximumWidth();
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Cell cell0 = new Cell();
      cell0.setText("com.acidmanic.Lonsoletools.table.Cell");
      assertEquals((-1), cell0.getMaximumWidth());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Cell cell0 = new Cell((String) null);
      int int0 = cell0.getMaximumWidth();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Cell cell0 = new Cell("");
      cell0.getText();
      assertEquals((-1), cell0.getMaximumWidth());
  }
}
