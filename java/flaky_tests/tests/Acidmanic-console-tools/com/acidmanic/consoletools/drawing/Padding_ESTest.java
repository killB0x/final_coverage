/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:07:37 GMT 2022
 */

package com.acidmanic.consoletools.drawing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.Padding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Padding_ESTest extends Padding_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Padding padding0 = new Padding((-824), 0);
      assertEquals((-824), padding0.getRight());
      assertEquals((-824), padding0.getLeft());
      assertEquals(0, padding0.getBottom());
      assertEquals(0, padding0.getTop());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Padding padding0 = new Padding(1, 1209, 0, (-41));
      assertEquals(1, padding0.getTop());
      
      padding0.setTop(0);
      int int0 = padding0.getTop();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Padding padding0 = new Padding(2121);
      int int0 = padding0.getTop();
      assertEquals(2121, padding0.getRight());
      assertEquals(2121, int0);
      assertEquals(2121, padding0.getBottom());
      assertEquals(2121, padding0.getLeft());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Padding padding0 = new Padding((-1413), (-1413));
      padding0.setRight(829);
      int int0 = padding0.getRight();
      assertEquals(829, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Padding padding0 = new Padding(1, 1, 1, 0);
      padding0.setRight((-1810));
      int int0 = padding0.getRight();
      assertEquals((-1810), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Padding padding0 = new Padding(1, 1, 1, 0);
      int int0 = padding0.getLeft();
      assertEquals(0, padding0.getRight());
      assertEquals(1, padding0.getTop());
      assertEquals(1, padding0.getBottom());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Padding padding0 = new Padding(1, 1209, 0, (-41));
      assertEquals(0, padding0.getLeft());
      
      padding0.setLeft((-1));
      int int0 = padding0.getLeft();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Padding padding0 = new Padding();
      int int0 = padding0.getBottom();
      assertEquals(0, padding0.getLeft());
      assertEquals(0, padding0.getRight());
      assertEquals(0, int0);
      assertEquals(0, padding0.getTop());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Padding padding0 = new Padding(1, 1, 1, 0);
      padding0.setBottom((-2281));
      int int0 = padding0.getBottom();
      assertEquals((-2281), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Padding padding0 = null;
      try {
        padding0 = new Padding((Padding) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.drawing.Padding", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Padding padding0 = new Padding((-1413), (-1413));
      int int0 = padding0.getTop();
      assertEquals((-1413), padding0.getRight());
      assertEquals((-1413), int0);
      assertEquals((-1413), padding0.getLeft());
      assertEquals((-1413), padding0.getBottom());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Padding padding0 = new Padding();
      int int0 = padding0.getLeft();
      assertEquals(0, padding0.getRight());
      assertEquals(0, int0);
      assertEquals(0, padding0.getTop());
      assertEquals(0, padding0.getBottom());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Padding padding0 = new Padding((-3310), (-3310), (-1), 0);
      int int0 = padding0.getRight();
      assertEquals((-1), padding0.getLeft());
      assertEquals((-3310), padding0.getBottom());
      assertEquals(0, int0);
      assertEquals((-3310), padding0.getTop());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Padding padding0 = new Padding(1673);
      int int0 = padding0.getBottom();
      assertEquals(1673, padding0.getRight());
      assertEquals(1673, padding0.getTop());
      assertEquals(1673, int0);
      assertEquals(1673, padding0.getLeft());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Padding padding0 = new Padding();
      Padding padding1 = new Padding(padding0);
      assertEquals(0, padding1.getBottom());
      assertEquals(0, padding1.getLeft());
      assertEquals(0, padding1.getTop());
      assertEquals(0, padding1.getRight());
  }
}
