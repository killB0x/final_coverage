/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:11:46 GMT 2022
 */

package com.acidmanic.consoletools.drawing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.Size;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Size_ESTest extends Size_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Size size0 = new Size((-1147), 1);
      int int0 = size0.getLines();
      assertEquals(1, int0);
      assertEquals((-1147), size0.getColumns());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Size size0 = new Size();
      size0.setLines((-643));
      int int0 = size0.getLines();
      assertEquals((-643), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Size size0 = new Size(1, (-467));
      int int0 = size0.getColumns();
      assertEquals(1, int0);
      assertEquals((-467), size0.getLines());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Size size0 = new Size((-1147), 1);
      int int0 = size0.getColumns();
      assertEquals((-1147), int0);
      assertEquals(1, size0.getLines());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Size size0 = new Size();
      size0.setLines((-1280));
      size0.add(size0);
      assertEquals((-1280), size0.getLines());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Size size0 = new Size();
      Size size1 = new Size((-1147), 1);
      Size size2 = size0.add(size1);
      assertEquals(1, size1.getLines());
      assertEquals((-1147), size2.getColumns());
      assertEquals((-1147), size1.getColumns());
      assertEquals(1, size2.getLines());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Size size0 = new Size();
      // Undeclared exception!
      try { 
        size0.add((Size) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.drawing.Size", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Size size0 = new Size();
      int int0 = size0.getColumns();
      assertEquals(0, int0);
      assertEquals(0, size0.getLines());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Size size0 = new Size();
      assertEquals(0, size0.getColumns());
      
      size0.setColumns(1);
      size0.add(size0);
      assertEquals(1, size0.getColumns());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Size size0 = new Size(0, 0);
      int int0 = size0.getLines();
      assertEquals(0, int0);
      assertEquals(0, size0.getColumns());
  }
}
