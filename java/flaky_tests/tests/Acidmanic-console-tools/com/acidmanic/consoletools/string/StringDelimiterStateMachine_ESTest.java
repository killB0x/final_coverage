/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:40:41 GMT 2022
 */

package com.acidmanic.consoletools.string;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.string.StringDelimiterStateMachine;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringDelimiterStateMachine_ESTest extends StringDelimiterStateMachine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      stringDelimiterStateMachine0.open("com.acidmanic.consoletools.string.StringDelimiterStateMachine");
      stringDelimiterStateMachine0.pass('c');
      stringDelimiterStateMachine0.pass('c');
      stringDelimiterStateMachine0.pass('c');
      stringDelimiterStateMachine0.pass('q');
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      stringDelimiterStateMachine0.open("com.acidmanic.consoletools.string.StringDelimiterStateMachine");
      stringDelimiterStateMachine0.pass('Q');
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      // Undeclared exception!
      try { 
        stringDelimiterStateMachine0.pass('`');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.string.StringDelimiterStateMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      stringDelimiterStateMachine0.open("");
      // Undeclared exception!
      try { 
        stringDelimiterStateMachine0.pass(',');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.acidmanic.consoletools.string.StringDelimiterStateMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      // Undeclared exception!
      try { 
        stringDelimiterStateMachine0.open((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.string.StringDelimiterStateMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      stringDelimiterStateMachine0.open(",2");
      stringDelimiterStateMachine0.pass(',');
      stringDelimiterStateMachine0.close();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      stringDelimiterStateMachine0.open(",2");
      stringDelimiterStateMachine0.pass('A');
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stringDelimiterStateMachine0.onSegment(consumer0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      stringDelimiterStateMachine0.open(",2");
      stringDelimiterStateMachine0.pass(',');
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stringDelimiterStateMachine0.onSegment(consumer0);
      stringDelimiterStateMachine0.pass('2');
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      StringDelimiterStateMachine stringDelimiterStateMachine0 = new StringDelimiterStateMachine();
      stringDelimiterStateMachine0.close();
  }
}
