/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:05:25 GMT 2022
 */

package com.acidmanic.consoletools.string;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.drawing.Padding;
import com.acidmanic.consoletools.drawing.Size;
import com.acidmanic.consoletools.string.StringMeasurer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringMeasurer_ESTest extends StringMeasurer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      Padding padding0 = new Padding();
      padding0.setBottom((-1));
      Size size0 = stringMeasurer0.getSize("", padding0);
      assertEquals(0, size0.getColumns());
      assertEquals(0, size0.getLines());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      Padding padding0 = new Padding();
      Size size0 = stringMeasurer0.getSize("", padding0);
      assertEquals(0, size0.getColumns());
      assertEquals(1, size0.getLines());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      Padding padding0 = new Padding();
      Size size0 = stringMeasurer0.getSize("5TUvkv.(\"M9RW|(` ", padding0);
      assertEquals(1, size0.getLines());
      assertEquals(18, size0.getColumns());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      Size size0 = stringMeasurer0.getSize("");
      assertEquals(0, size0.getColumns());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      // Undeclared exception!
      try { 
        stringMeasurer0.getSize("vdL%NQ=R>/h m!FN", (Padding) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.string.StringMeasurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      // Undeclared exception!
      try { 
        stringMeasurer0.getSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.string.StringExtensions", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      Size size0 = stringMeasurer0.getSize("C,\n");
      assertEquals(2, size0.getColumns());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringMeasurer stringMeasurer0 = new StringMeasurer();
      Padding padding0 = new Padding((-1));
      Size size0 = stringMeasurer0.getSize("", padding0);
      assertEquals((-1), size0.getLines());
      assertEquals((-2), size0.getColumns());
  }
}
