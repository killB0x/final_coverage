/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:09:17 GMT 2022
 */

package com.acidmanic.consoletools.interaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acidmanic.consoletools.interaction.StyledTextInput;
import com.acidmanic.consoletools.terminal.styling.TerminalStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StyledTextInput_ESTest extends StyledTextInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput("8`I5*", "");
      styledTextInput0.setValueStyle((TerminalStyle) null);
      TerminalStyle terminalStyle0 = styledTextInput0.getValueStyle();
      assertNull(terminalStyle0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput();
      styledTextInput0.setLabelStyle((TerminalStyle) null);
      TerminalStyle terminalStyle0 = styledTextInput0.getLabelStyle();
      assertNull(terminalStyle0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput((String) null, "gzMrl+lRJ^");
      TerminalStyle terminalStyle0 = new TerminalStyle((-296));
      styledTextInput0.setLabelStyle(terminalStyle0);
      TerminalStyle terminalStyle1 = styledTextInput0.getLabelStyle();
      assertEquals((-296), terminalStyle1.getForegroundColor());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput("", "");
      String string0 = styledTextInput0.askInput();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput();
      styledTextInput0.setLabelStyle((TerminalStyle) null);
      // Undeclared exception!
      try { 
        styledTextInput0.askInput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acidmanic.consoletools.terminal.styling.TerminalCommandBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput();
      TerminalStyle terminalStyle0 = styledTextInput0.getLabelStyle();
      assertEquals((-1), TerminalStyle.VALUE_UNSET);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput();
      TerminalStyle terminalStyle0 = new TerminalStyle((-2268), (-1), 0);
      styledTextInput0.setValueStyle(terminalStyle0);
      TerminalStyle terminalStyle1 = styledTextInput0.getValueStyle();
      assertFalse(terminalStyle1.isAlternativeFontUsing());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput("com.acidmanic.consoletools.interaction.TextInput", "");
      TerminalStyle terminalStyle0 = new TerminalStyle(1, 1, 0);
      styledTextInput0.setLabelStyle(terminalStyle0);
      TerminalStyle terminalStyle1 = styledTextInput0.getLabelStyle();
      assertEquals((-1), TerminalStyle.VALUE_UNSET);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput();
      String string0 = styledTextInput0.askInput();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput("");
      TerminalStyle terminalStyle0 = new TerminalStyle(0);
      styledTextInput0.setValueStyle(terminalStyle0);
      TerminalStyle terminalStyle1 = styledTextInput0.getValueStyle();
      assertEquals((-1), terminalStyle1.getBrightness());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StyledTextInput styledTextInput0 = new StyledTextInput();
      TerminalStyle terminalStyle0 = styledTextInput0.getValueStyle();
      assertFalse(terminalStyle0.isAlternativeFontUsing());
  }
}
