/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 19:41:17 GMT 2022
 */

package com.zoi7.mysql.config;

import org.junit.Test;
import static org.junit.Assert.*;
import com.zoi7.mysql.config.DataConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataConfig_ESTest extends DataConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "EkgmkDE)YI&^VjQ", "", "gHbNR|WK<C.y", false, "gHbNR|WK<C.y", false, true);
      String string0 = dataConfig0.toString();
      assertEquals("DataConfig{driver='gHbNR|WK<C.y', url='', username='EkgmkDE)YI&^VjQ', password=****, packages=[], type='gHbNR|WK<C.y', showSql=false, scanJar=false, uppercase=true}", string0);
      assertEquals("", dataConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, ", type='", "DataConfig{driver='", ", uppercase=", ", uppercase=", false, "DataConfig{driver='", false);
      assertEquals("DataConfig{driver='", dataConfig0.getDriver());
      assertEquals("DataConfig{driver='", dataConfig0.getUsername());
      assertFalse(dataConfig0.isUppercase());
      assertFalse(dataConfig0.isScanJar());
      assertFalse(dataConfig0.isShowSql());
      assertEquals(", type='", dataConfig0.getUrl());
      assertEquals(", uppercase=", dataConfig0.getPassword());
      assertEquals(", uppercase=", dataConfig0.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "EkgmkDE)YI&^VjQ", "", "gHbNR|WK<C.y", false, "gHbNR|WK<C.y", false, true);
      boolean boolean0 = dataConfig0.isUppercase();
      assertFalse(dataConfig0.isShowSql());
      assertEquals("", dataConfig0.getUrl());
      assertEquals("", dataConfig0.getPassword());
      assertEquals("EkgmkDE)YI&^VjQ", dataConfig0.getUsername());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getDriver());
      assertFalse(dataConfig0.isScanJar());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, ", uppercase=", ", uppercase=", "");
      assertTrue(dataConfig0.isShowSql());
      
      dataConfig0.setShowSql(false);
      boolean boolean0 = dataConfig0.isShowSql();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, ", uppercase=", ", uppercase=", "");
      assertTrue(dataConfig0.isScanJar());
      
      dataConfig0.setScanJar(false);
      boolean boolean0 = dataConfig0.isScanJar();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "G", "", "G", false);
      assertEquals("", dataConfig0.getUsername());
      
      dataConfig0.setUsername((String) null);
      dataConfig0.getUsername();
      assertEquals("G", dataConfig0.getPassword());
      assertEquals("update", dataConfig0.getType());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertEquals("G", dataConfig0.getUrl());
      assertFalse(dataConfig0.isUppercase());
      assertFalse(dataConfig0.isShowSql());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DataConfig dataConfig0 = new DataConfig(stringArray0, ", uppercase=", "", "", ", password=****, packages=", false, "&ZMY|pXh-", true, true);
      String string0 = dataConfig0.getUsername();
      assertEquals(", password=****, packages=", dataConfig0.getType());
      assertTrue(dataConfig0.isScanJar());
      assertEquals(", uppercase=", dataConfig0.getUrl());
      assertTrue(dataConfig0.isUppercase());
      assertEquals("", string0);
      assertFalse(dataConfig0.isShowSql());
      assertEquals("&ZMY|pXh-", dataConfig0.getDriver());
      assertEquals("", dataConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "v\"K(e|c:H5!&Gf", "g}[98gA", "", "KV|tdlN/", false, "", false, false);
      String string0 = dataConfig0.getUrl();
      assertEquals("v\"K(e|c:H5!&Gf", string0);
      assertEquals("KV|tdlN/", dataConfig0.getType());
      assertFalse(dataConfig0.isUppercase());
      assertEquals("g}[98gA", dataConfig0.getUsername());
      assertFalse(dataConfig0.isScanJar());
      assertFalse(dataConfig0.isShowSql());
      assertEquals("", dataConfig0.getPassword());
      assertEquals("", dataConfig0.getDriver());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "", "Jtx$Nat!_>Bp");
      String string0 = dataConfig0.getUrl();
      assertFalse(dataConfig0.isUppercase());
      assertEquals("Jtx$Nat!_>Bp", dataConfig0.getPassword());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertEquals("", string0);
      assertEquals("update", dataConfig0.getType());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("", dataConfig0.getUsername());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "}FSh3uU]El~x&L", "2 o\"CJp}j`", "mW@gKd[ PO@[p", true, "");
      assertEquals("mW@gKd[ PO@[p", dataConfig0.getType());
      
      dataConfig0.setType((String) null);
      dataConfig0.getType();
      assertEquals("", dataConfig0.getDriver());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("", dataConfig0.getUrl());
      assertEquals("2 o\"CJp}j`", dataConfig0.getPassword());
      assertEquals("}FSh3uU]El~x&L", dataConfig0.getUsername());
      assertFalse(dataConfig0.isUppercase());
      assertTrue(dataConfig0.isScanJar());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, ", uppercase=", ", uppercase=", "");
      assertEquals("update", dataConfig0.getType());
      
      dataConfig0.setType("");
      dataConfig0.getType();
      assertEquals("", dataConfig0.getType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DataConfig dataConfig0 = new DataConfig(stringArray0, (String) null, "Fj=qjT7", (String) null, "Fj=qjT7", true, (String) null, true, true);
      String string0 = dataConfig0.getPassword();
      assertEquals("Fj=qjT7", dataConfig0.getUsername());
      assertTrue(dataConfig0.isUppercase());
      assertTrue(dataConfig0.isShowSql());
      assertTrue(dataConfig0.isScanJar());
      assertNull(string0);
      assertEquals("Fj=qjT7", dataConfig0.getType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", true);
      String string0 = dataConfig0.getPassword();
      assertFalse(dataConfig0.isUppercase());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUsername());
      assertEquals("gHbNR|WK<C.y", string0);
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUrl());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getType());
      assertTrue(dataConfig0.isShowSql());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "v\"K(e|c:H5!&Gf", "g}[98gA", "", "KV|tdlN/", false, "", false, false);
      dataConfig0.getPackages();
      assertEquals("", dataConfig0.getDriver());
      assertEquals("g}[98gA", dataConfig0.getUsername());
      assertEquals("", dataConfig0.getPassword());
      assertFalse(dataConfig0.isShowSql());
      assertFalse(dataConfig0.isScanJar());
      assertEquals("v\"K(e|c:H5!&Gf", dataConfig0.getUrl());
      assertEquals("KV|tdlN/", dataConfig0.getType());
      assertFalse(dataConfig0.isUppercase());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", true);
      dataConfig0.getPackages();
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertFalse(dataConfig0.isUppercase());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getType());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getPassword());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUrl());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUsername());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DataConfig dataConfig0 = new DataConfig(stringArray0, (String) null, "Fj=qjT7", (String) null, "Fj=qjT7", true, (String) null, true, true);
      String string0 = dataConfig0.getDriver();
      assertTrue(dataConfig0.isShowSql());
      assertNull(string0);
      assertEquals("Fj=qjT7", dataConfig0.getType());
      assertTrue(dataConfig0.isUppercase());
      assertEquals("Fj=qjT7", dataConfig0.getUsername());
      assertTrue(dataConfig0.isScanJar());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "}FSh3uU]El~x&L", "2 o\"CJp}j`", "mW@gKd[ PO@[p", true, "");
      String string0 = dataConfig0.getDriver();
      assertEquals("mW@gKd[ PO@[p", dataConfig0.getType());
      assertEquals("2 o\"CJp}j`", dataConfig0.getPassword());
      assertEquals("}FSh3uU]El~x&L", dataConfig0.getUsername());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("", dataConfig0.getUrl());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("", string0);
      assertFalse(dataConfig0.isUppercase());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, "Cv m1", "", "nMOKRZkJnH", "");
      dataConfig0.setScanJar(true);
      assertFalse(dataConfig0.isUppercase());
      assertEquals("Cv m1", dataConfig0.getUrl());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("", dataConfig0.getUsername());
      assertEquals("", dataConfig0.getType());
      assertEquals("nMOKRZkJnH", dataConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, "Cv m1", "", "nMOKRZkJnH", "");
      String string0 = dataConfig0.toString();
      assertEquals("nMOKRZkJnH", dataConfig0.getPassword());
      assertEquals("DataConfig{driver='com.mysql.cj.jdbc.Driver', url='Cv m1', username='', password=****, packages=null, type='', showSql=true, scanJar=true, uppercase=false}", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, ", uppercase=", ", uppercase=", "");
      String string0 = dataConfig0.getUsername();
      assertEquals(", uppercase=", string0);
      assertEquals(", uppercase=", dataConfig0.getUrl());
      assertEquals("", dataConfig0.getPassword());
      assertTrue(dataConfig0.isScanJar());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("update", dataConfig0.getType());
      assertFalse(dataConfig0.isUppercase());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, ", uppercase=", ", uppercase=", "");
      dataConfig0.getPackages();
      assertFalse(dataConfig0.isUppercase());
      assertEquals("", dataConfig0.getPassword());
      assertEquals(", uppercase=", dataConfig0.getUsername());
      assertEquals(", uppercase=", dataConfig0.getUrl());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("update", dataConfig0.getType());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertTrue(dataConfig0.isScanJar());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "EkgmkDE)YI&^VjQ", "", "gHbNR|WK<C.y", false, "gHbNR|WK<C.y", false, true);
      assertEquals("", dataConfig0.getUrl());
      
      dataConfig0.setUrl("EkgmkDE)YI&^VjQ");
      assertTrue(dataConfig0.isUppercase());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, ", uppercase=", ", uppercase=", "");
      String string0 = dataConfig0.getPassword();
      assertEquals(", uppercase=", dataConfig0.getUsername());
      assertEquals(", uppercase=", dataConfig0.getUrl());
      assertEquals("update", dataConfig0.getType());
      assertEquals("", string0);
      assertTrue(dataConfig0.isShowSql());
      assertFalse(dataConfig0.isUppercase());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertTrue(dataConfig0.isScanJar());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DataConfig dataConfig0 = new DataConfig((String[]) null, "Cv m1", "", "nMOKRZkJnH", "");
      boolean boolean0 = dataConfig0.isScanJar();
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertFalse(dataConfig0.isUppercase());
      assertTrue(boolean0);
      assertEquals("", dataConfig0.getType());
      assertEquals("nMOKRZkJnH", dataConfig0.getPassword());
      assertEquals("", dataConfig0.getUsername());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("Cv m1", dataConfig0.getUrl());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "EkgmkDE)YI&^VjQ", "", "gHbNR|WK<C.y", false, "gHbNR|WK<C.y", false, true);
      dataConfig0.setPassword(")/ts1");
      assertEquals(")/ts1", dataConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", false);
      dataConfig0.setUppercase(false);
      assertTrue(dataConfig0.isScanJar());
      assertFalse(dataConfig0.isUppercase());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getType());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUsername());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUrl());
      assertFalse(dataConfig0.isShowSql());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DataConfig dataConfig0 = new DataConfig(stringArray0, (String) null, "", "uWms", false);
      String string0 = dataConfig0.getUrl();
      assertFalse(dataConfig0.isUppercase());
      assertNull(string0);
      assertEquals("update", dataConfig0.getType());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("", dataConfig0.getUsername());
      assertEquals("uWms", dataConfig0.getPassword());
      assertFalse(dataConfig0.isShowSql());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "", "");
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      
      dataConfig0.setDriver("");
      assertEquals("", dataConfig0.getDriver());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, (String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = dataConfig0.isShowSql();
      assertTrue(dataConfig0.isScanJar());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertFalse(dataConfig0.isUppercase());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "KC`a9d#/)Q6A3>X", "KC`a9d#/)Q6A3>X", "KC`a9d#/)Q6A3>X", "KC`a9d#/)Q6A3>X");
      dataConfig0.setPackages(stringArray0);
      assertEquals("KC`a9d#/)Q6A3>X", dataConfig0.getUrl());
      assertTrue(dataConfig0.isShowSql());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertEquals("KC`a9d#/)Q6A3>X", dataConfig0.getPassword());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("KC`a9d#/)Q6A3>X", dataConfig0.getType());
      assertFalse(dataConfig0.isUppercase());
      assertEquals("KC`a9d#/)Q6A3>X", dataConfig0.getUsername());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", false);
      boolean boolean0 = dataConfig0.isUppercase();
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertFalse(boolean0);
      assertFalse(dataConfig0.isShowSql());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUrl());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getPassword());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUsername());
      assertEquals("update", dataConfig0.getType());
      assertTrue(dataConfig0.isScanJar());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "", "", "");
      String string0 = dataConfig0.getDriver();
      assertFalse(dataConfig0.isUppercase());
      assertEquals("com.mysql.cj.jdbc.Driver", string0);
      assertEquals("", dataConfig0.getUrl());
      assertEquals("update", dataConfig0.getType());
      assertTrue(dataConfig0.isShowSql());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("", dataConfig0.getUsername());
      assertEquals("", dataConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[7];
      DataConfig dataConfig0 = new DataConfig(stringArray0, "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y", "gHbNR|WK<C.y");
      String string0 = dataConfig0.getType();
      assertEquals("gHbNR|WK<C.y", string0);
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUsername());
      assertTrue(dataConfig0.isScanJar());
      assertEquals("com.mysql.cj.jdbc.Driver", dataConfig0.getDriver());
      assertTrue(dataConfig0.isShowSql());
      assertFalse(dataConfig0.isUppercase());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getUrl());
      assertEquals("gHbNR|WK<C.y", dataConfig0.getPassword());
  }
}
