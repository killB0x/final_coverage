/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 11:02:39 GMT 2022
 */

package org.opengis.cite.ogcapiedr10.conformance;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opengis.cite.ogcapiedr10.conformance.RequirementClass;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RequirementClass_ESTest extends RequirementClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RequirementClass[] requirementClassArray0 = RequirementClass.values();
      assertEquals(1, requirementClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RequirementClass requirementClass0 = RequirementClass.valueOf("CORE");
      assertNull(requirementClass0.getMediaTypeFeaturesAndCollections());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RequirementClass requirementClass0 = RequirementClass.byConformanceClass("http://www.opengis.net/spec/ogcapi-edr-1/1.0/conf/core");
      assertEquals(RequirementClass.CORE, requirementClass0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RequirementClass.byConformanceClass("D*kP7LCzg");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RequirementClass requirementClass0 = RequirementClass.CORE;
      boolean boolean0 = requirementClass0.hasMediaTypeForOtherResources();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RequirementClass requirementClass0 = RequirementClass.CORE;
      boolean boolean0 = requirementClass0.hasMediaTypeForFeaturesAndCollections();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RequirementClass requirementClass0 = RequirementClass.CORE;
      String string0 = requirementClass0.getMediaTypeOtherResources();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RequirementClass requirementClass0 = RequirementClass.CORE;
      String string0 = requirementClass0.getMediaTypeFeaturesAndCollections();
      assertNull(string0);
  }
}
