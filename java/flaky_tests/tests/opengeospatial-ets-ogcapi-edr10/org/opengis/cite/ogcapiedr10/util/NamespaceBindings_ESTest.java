/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 11:05:31 GMT 2022
 */

package org.opengis.cite.ogcapiedr10.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opengis.cite.ogcapiedr10.util.NamespaceBindings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NamespaceBindings_ESTest extends NamespaceBindings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = new NamespaceBindings();
      namespaceBindings0.addNamespaceBinding("u{47\"ty5Wj2Xj_:(", "u{47\"ty5Wj2Xj_:(");
      String string0 = namespaceBindings0.getPrefix("u{47\"ty5Wj2Xj_:(");
      assertEquals("u{47\"ty5Wj2Xj_:(", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = new NamespaceBindings();
      namespaceBindings0.addNamespaceBinding("", "");
      String string0 = namespaceBindings0.getPrefix("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      namespaceBindings0.addNamespaceBinding("", "");
      String string0 = namespaceBindings0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = new NamespaceBindings();
      namespaceBindings0.addNamespaceBinding((String) null, (String) null);
      // Undeclared exception!
      try { 
        namespaceBindings0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = new NamespaceBindings();
      String string0 = namespaceBindings0.getPrefix((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      namespaceBindings0.addAllBindings(hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      namespaceBindings0.addAllBindings((Map<String, String>) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      String string0 = namespaceBindings0.getNamespaceURI("gml");
      assertEquals("http://www.opengis.net/gml/3.2", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      String string0 = namespaceBindings0.getNamespaceURI("NamespaceBindings:\n{http://www.opengis.net/ows/1.1=ows, http://www.w3.org/1999/xlink=xlink, http://www.opengis.net/gml/3.2=gml}");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      String string0 = namespaceBindings0.toString();
      assertEquals("NamespaceBindings:\n{http://www.opengis.net/ows/1.1=ows, http://www.w3.org/1999/xlink=xlink, http://www.opengis.net/gml/3.2=gml}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      Iterator<String> iterator0 = namespaceBindings0.getPrefixes("NamespaceBindings:\n{http://www.opengis.net/ows/1.1=ows, http://www.w3.org/1999/xlink=xlink, http://www.opengis.net/gml/3.2=gml}");
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NamespaceBindings namespaceBindings0 = NamespaceBindings.withStandardBindings();
      Map<String, String> map0 = namespaceBindings0.getAllBindings();
      assertFalse(map0.isEmpty());
  }
}
