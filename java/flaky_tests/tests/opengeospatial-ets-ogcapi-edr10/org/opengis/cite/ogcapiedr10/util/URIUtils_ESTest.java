/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 10:57:36 GMT 2022
 */

package org.opengis.cite.ogcapiedr10.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.opengis.cite.ogcapiedr10.util.URIUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class URIUtils_ESTest extends URIUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      URI uRI0 = MockURI.aFileURI;
      File file0 = URIUtils.dereferenceURI(uRI0);
      assertTrue(file0.canExecute());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.resolve(uRI0, ".xml");
      File file0 = URIUtils.dereferenceURI(uRI1);
      assertFalse(file0.canWrite());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.resolve(uRI0, "");
      File file0 = URIUtils.dereferenceURI(uRI1);
      assertTrue(file0.exists());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URI uRI0 = MockURI.URI("file", "file", "file");
      // Undeclared exception!
      try { 
        URIUtils.dereferenceURI(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not hierarchical
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      URI uRI0 = MockURI.URI("org.opengis.cite.ogcapiedr10.util.URIUtils", "eo9xAy#T", "org.opengis.cite.ogcapiedr10.util.URIUtils");
      // Undeclared exception!
      try { 
        URIUtils.dereferenceURI(uRI0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/sun/jersey/api/client/Client
         //
         verifyException("org.opengis.cite.ogcapiedr10.util.URIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      URI uRI0 = MockURI.URI("Hj!mh9j/:");
      // Undeclared exception!
      try { 
        URIUtils.dereferenceURI(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Absolute URI is required, but received Hj!mh9j/:
         //
         verifyException("org.opengis.cite.ogcapiedr10.util.URIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        URIUtils.dereferenceURI((URI) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Absolute URI is required, but received null
         //
         verifyException("org.opengis.cite.ogcapiedr10.util.URIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      URIUtils uRIUtils0 = new URIUtils();
  }
}
