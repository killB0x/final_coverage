/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 11:08:59 GMT 2022
 */

package org.opengis.cite.ogcapiedr10.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opengis.cite.ogcapiedr10.util.Link;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Link_ESTest extends Link_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Link link0 = new Link((String) null, (String) null, (String) null);
      String string0 = link0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Link link0 = new Link("", "", "");
      String string0 = link0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Link link0 = new Link("", "org.opengis.cite.ogcapiedr10.util.Link", "");
      String string0 = link0.getRel();
      assertEquals("org.opengis.cite.ogcapiedr10.util.Link", string0);
      assertEquals("", link0.getType());
      assertEquals("", link0.getHref());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Link link0 = new Link("", "qdt", "");
      assertEquals("qdt", link0.getRel());
      
      link0.setRel("");
      link0.getRel();
      assertEquals("", link0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Link link0 = new Link((String) null, (String) null, (String) null);
      String string0 = link0.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Link link0 = new Link("", "", "");
      link0.setHref("org.opengis.cite.ogcapiedr10.util.Link");
      String string0 = link0.getHref();
      assertEquals("org.opengis.cite.ogcapiedr10.util.Link", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Link link0 = new Link("", (String) null, "org.opengis.cite.ogcapiedr10.util.Link");
      String string0 = link0.getType();
      assertEquals("org.opengis.cite.ogcapiedr10.util.Link", string0);
      assertNotNull(string0);
      assertEquals("", link0.getHref());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Link link0 = new Link("", (String) null, "org.opengis.cite.ogcapiedr10.util.Link");
      String string0 = link0.getRel();
      assertNull(string0);
      assertEquals("", link0.getHref());
      assertEquals("org.opengis.cite.ogcapiedr10.util.Link", link0.getType());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Link link0 = new Link("", (String) null, "org.opengis.cite.ogcapiedr10.util.Link");
      String string0 = link0.getHref();
      assertEquals("", string0);
      assertEquals("org.opengis.cite.ogcapiedr10.util.Link", link0.getType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Link link0 = new Link("", (String) null, "org.opengis.cite.ogcapiedr10.util.Link");
      assertEquals("org.opengis.cite.ogcapiedr10.util.Link", link0.getType());
      
      link0.setType("-~VA");
      assertEquals("", link0.getHref());
  }
}
