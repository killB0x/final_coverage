/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:39:11 GMT 2022
 */

package org.jiuwo.fastel.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiuwo.fastel.contract.enums.ExpressionEnum;
import org.jiuwo.fastel.exception.FastElException;
import org.jiuwo.fastel.impl.ExpressionNode;
import org.jiuwo.fastel.parser.ExpressionParser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExpressionParser_ESTest extends ExpressionParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("/)H%eb7/");
      expressionParser0.skipComment();
      assertEquals(2, expressionParser0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(")7/-xW?KO#g=AD0T Hl");
      expressionParser0.setCurrentIndex(1041);
      expressionParser0.skipComment();
      assertEquals(")7/-xW?KO#g=AD0T Hl", expressionParser0.getElValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(")7/-xW?KO#g=AD0T Hl");
      int int0 = expressionParser0.findRegExp("VePmu", 1041);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(":!=\"");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u5B57\u7B26\u4E32
         // :!=\"@4
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("={*Y;?/jnz_");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u4E0D\u652F\u6301\u8D4B\u503C\u64CD\u4F5C:
         // @0
         // ={*Y;?/jnz_
         // ----
         // ={*Y;?/jnz_
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("<<Dk^y)D");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u62EC\u5F27\u5F02\u5E38
         // @7
         // D
         // ----
         // <<Dk^y)D
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(")lx'C\"4)H>W\"T m");
      expressionParser0.currentIndex = 1034;
      boolean boolean0 = expressionParser0.isEqualsChar(124);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("OP_BIT_NOT");
      boolean boolean0 = expressionParser0.isEqualsChar(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("XW<Nc0%G(&zmOU");
      expressionParser0.currentIndex = 117;
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("\"So`ID>OkKLAxt~{O");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u5B57\u7B26\u4E32
         // \"So`ID>OkKLAxt~{O@17
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("p9x\"M`&|/fmiWU");
      boolean boolean0 = expressionParser0.isEqualsChar(112);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("';sDFMImE@' i");
      expressionParser0.findString();
      assertEquals(11, expressionParser0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("8 EM{}h");
      FastElException fastElException0 = expressionParser0.buildError("Fk");
      assertNotNull(fastElException0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("/*U';>T27-NT3\"\"\"'B");
      // Undeclared exception!
      try { 
        expressionParser0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u6CE8\u91CA
         // /*U';>T27-NT3\"\"\"'B@2
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("/S/");
      // Undeclared exception!
      try { 
        expressionParser0.skipComment();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("w$W/");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(" EM.S.");
      expressionParser0.expressionNodeArrayList = null;
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("V");
      expressionParser0.setCurrentIndex((-1259));
      // Undeclared exception!
      try { 
        expressionParser0.isEqualsChar(183);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(",\"");
      // Undeclared exception!
      try { 
        expressionParser0.findString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u5B57\u7B26\u4E32
         // ,\"@2
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("");
      // Undeclared exception!
      try { 
        expressionParser0.findString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("8 EM{}h");
      // Undeclared exception!
      try { 
        expressionParser0.findRegExp("8 EM{}h", (-1021));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("zv");
      // Undeclared exception!
      try { 
        expressionParser0.findRegExp((String) null, 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("");
      // Undeclared exception!
      try { 
        expressionParser0.findNumber();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(" EM{}.");
      // Undeclared exception!
      try { 
        expressionParser0.findNumber();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("");
      // Undeclared exception!
      try { 
        expressionParser0.findId();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ExpressionParser expressionParser0 = null;
      try {
        expressionParser0 = new ExpressionParser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.AbstractParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(")lx'C\"4)H>W\"T m");
      int int0 = expressionParser0.findRegExp(")lx'C\"4)H>W\"T m", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("GA.vz L}UG*oE`J,%`");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u62EC\u5F27\u5F02\u5E38
         // @8
         // UG*oE`J,%`
         // ----
         // GA.vz L}UG*oE`J,%`
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "1}5^\\u_y@7%V";
      ExpressionParser expressionParser0 = new ExpressionParser(string0);
      // Undeclared exception!
      try { 
        expressionParser0.findString();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"_y@7\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(")7/-xW?KO#g=AD0T Hl");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u62EC\u5F27\u5F02\u5E38
         // @1
         // 7/-xW?KO#g=AD0T Hl
         // ----
         // )7/-xW?KO#g=AD0T Hl
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("M[?3(DPTfw6Z@}");
      expressionParser0.findId();
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @5
         // DPTfw6Z@}
         // ----
         // M[?3(DPTfw6Z@}
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("i{");
      expressionParser0.findNumber();
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u62EC\u5F27\u4E0D\u5339\u914D
         // @2
         // 
         // ----
         // i{
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(")7/-xW?KO#g=AD0T Hl");
      expressionParser0.skipComment();
      assertEquals(0, expressionParser0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("TGy/s&p_],");
      int int0 = expressionParser0.findRegExp("f;l/m+,[s]\"H", 1);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("/)Hh%eb7/");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u62EC\u5F27\u5F02\u5E38
         // @2
         // Hh%eb7/
         // ----
         // /)Hh%eb7/
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(",/vpp;X,mHLmZasH*");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @5
         // ;X,mHLmZasH*
         // ----
         // ,/vpp;X,mHLmZasH*
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("/*U';>T27-NT3\"\"\"'B");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u6CE8\u91CA
         // /*U';>T27-NT3\"\"\"'B@2
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("+!<Lx&}IIPRf 3)i= u<");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u62EC\u5F27\u5F02\u5E38
         // @7
         // IIPRf 3)i= u<
         // ----
         // +!<Lx&}IIPRf 3)i= u<
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("!==");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u4E0D\u652F\u6301=== \u548C!==\u64CD\u4F5C\u7B26\uFF0C\u8BF7\u4F7F\u7528==,!=
         // @0
         // !==
         // ----
         // !==
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("!=");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u9006\u6CE2\u5170\u5F0F\u6811\u578B\u5316\u5F02\u5E38
         // @2
         // 
         // ----
         // !=
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("&-6YmSza!RC#a");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @11
         // #a
         // ----
         // &-6YmSza!RC#a
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("\u4E0D\u652F\u6301=== \u548C!==\u64CD\u4F5C\u7B26\uFF0C\u8BF7\u4F7F\u7528==,!=");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u4E0D\u652F\u6301\u8D4B\u503C\u64CD\u4F5C:
         // @5
         // = \u548C!==\u64CD\u4F5C\u7B26\uFF0C\u8BF7\u4F7F\u7528==,!=
         // ----
         // \u4E0D\u652F\u6301=== \u548C!==\u64CD\u4F5C\u7B26\uFF0C\u8BF7\u4F7F\u7528==,!=
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("<<<");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26\uFF1A<<<
         //
         verifyException("org.jiuwo.fastel.impl.ExpressionNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("<<");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u9006\u6CE2\u5170\u5F0F\u6811\u578B\u5316\u5F02\u5E38
         // @2
         // 
         // ----
         // <<
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("M[l?(DPTfw6Z@}");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @5
         // DPTfw6Z@}
         // ----
         // M[l?(DPTfw6Z@}
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("(D-02(sUmp^:Q}WM");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u62EC\u5F27\u4E0D\u5339\u914D
         // @16
         // 
         // ----
         // (D-02(sUmp^:Q}WM
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("Lp|/&:ng`D8[X<[T");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @9
         // `D8[X<[T
         // ----
         // Lp|/&:ng`D8[X<[T
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("\u8BED\u6CD5\u9519\u8BEF:%s%n%s@%s");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @11
         // @%s
         // ----
         // \u8BED\u6CD5\u9519\u8BEF:%s%n%s@%s
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("hhKn>=3q^gq");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u8BED\u6CD5\u9519\u8BEF
         // @11
         // 
         // ----
         // hhKn>=3q^gq
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("Ek*?/7;YaM05h'](Y");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @6
         // ;YaM05h'](Y
         // ----
         // Ek*?/7;YaM05h'](Y
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("4+eFdvO");
      ExpressionNode expressionNode0 = expressionParser0.parseEL();
      assertEquals(ExpressionEnum.Token.OP_ADD, expressionNode0.getToken());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("X7/-xW?KO#g=AD0| Hl");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         // @9
         // #g=AD0| Hl
         // ----
         // X7/-xW?KO#g=AD0| Hl
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("!=M=");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u4E0D\u652F\u6301\u8D4B\u503C\u64CD\u4F5C:
         // @3
         // =
         // ----
         // !=M=
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("XAK3xk_;/K`)^Xo");
      expressionParser0.findId();
      // Undeclared exception!
      try { 
        expressionParser0.findId();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u65E0\u6548id
         // XAK3xk_;/K`)^Xo@7
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("8EQM{");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("LCX<4.,w*nC");
      ExpressionNode expressionNode0 = expressionParser0.parseEL();
      assertEquals(ExpressionEnum.Token.OP_JOIN, expressionNode0.getToken());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(")7/-xW?KO#g=AD0T Hl");
      expressionParser0.findNumber();
      expressionParser0.skipComment();
      assertEquals(4, expressionParser0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("SL~*Mb/9");
      ExpressionNode expressionNode0 = expressionParser0.parseEL();
      assertEquals(ExpressionEnum.Token.OP_DIV, expressionNode0.getToken());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("-]f.DpC}+;$");
      expressionParser0.findNumber();
      assertEquals(2, expressionParser0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("+!7L}IIPRf a)i= u<");
      expressionParser0.findNumber();
      assertEquals(3, expressionParser0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("|g^C&&S%5<_.B[u");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u62EC\u5F27\u4E0D\u5339\u914D
         // @15
         // 
         // ----
         // |g^C&&S%5<_.B[u
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("false");
      ExpressionNode expressionNode0 = expressionParser0.parseEL();
      assertEquals(ExpressionEnum.Token.VALUE_CONSTANTS, expressionNode0.getToken());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("true");
      ExpressionNode expressionNode0 = expressionParser0.parseEL();
      assertEquals(ExpressionEnum.Token.VALUE_CONSTANTS, expressionNode0.getToken());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("\u672A\u77E5\u64CD\u4F5C\u7B26:null");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u9006\u6CE2\u5170\u5F0F\u6811\u578B\u5316\u5F02\u5E38
         // @10
         // 
         // ----
         // \u672A\u77E5\u64CD\u4F5C\u7B26:null
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("M[?3(DPTfw6Z@}");
      boolean boolean0 = expressionParser0.isEqualsChar((-5022));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("LP\"\"pKcG&vY2]b<2:M8");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u62EC\u5F27\u5F02\u5E38
         // @13
         // b<2:M8
         // ----
         // LP\"\"pKcG&vY2]b<2:M8
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("66:fLdDBd\"r'UhS");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u5B57\u7B26\u4E32
         // 66:fLdDBd\"r'UhS@15
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("/)[G?/");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u62EC\u5F27\u5F02\u5E38
         // @2
         // [G?/
         // ----
         // /)[G?/
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("[]JM");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u8BED\u6CD5\u9519\u8BEF
         // @4
         // 
         // ----
         // []JM
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("in");
      ExpressionNode expressionNode0 = expressionParser0.parseEL();
      assertEquals(ExpressionEnum.Token.VALUE_VAR, expressionNode0.getToken());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("8in");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u9006\u6CE2\u5170\u5F0F\u6811\u578B\u5316\u5F02\u5E38
         // @3
         // 
         // ----
         // 8in
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("HQ|Xz:^/z/\"8[9%R");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u5B57\u7B26\u4E32
         // HQ|Xz:^/z/\"8[9%R@16
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("\u672A{T\u77E5\u64CD\u7B26:{ull");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u62EC\u5F27\u4E0D\u5339\u914D
         // @11
         // 
         // ----
         // \u672A{T\u77E5\u64CD\u7B26:{ull
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("X7//0xI?KOhAd09 Hl");
      ExpressionNode expressionNode0 = expressionParser0.parseEL();
      assertEquals(ExpressionEnum.Token.VALUE_VAR, expressionNode0.getToken());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("6lx&'C\"4)YW\"T.m");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u5B57\u7B26\u4E32
         // 6lx&'C\"4)YW\"T.m@15
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser(" ");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u8BED\u6CD5\u9519\u8BEF
         // @1
         // 
         // ----
         //  
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("*B9, 0{&c,");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u62EC\u5F27\u4E0D\u5339\u914D
         // @10
         // 
         // ----
         // *B9, 0{&c,
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("V<<\"");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8BED\u6CD5\u9519\u8BEF:\u672A\u7ED3\u675F\u5B57\u7B26\u4E32
         // V<<\"@4
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ExpressionParser expressionParser0 = new ExpressionParser("~3Bz()?SwT*Bp9");
      // Undeclared exception!
      try { 
        expressionParser0.parseEL();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u8BED\u6CD5\u9519\u8BEF
         // @14
         // 
         // ----
         // ~3Bz()?SwT*Bp9
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }
}
