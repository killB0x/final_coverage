/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:11:01 GMT 2022
 */

package org.jiuwo.fastel.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiuwo.fastel.contract.CharConsumerParam;
import org.jiuwo.fastel.parser.CharConsumer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharConsumer_ESTest extends CharConsumer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder();
      CharConsumerParam charConsumerParam0 = new CharConsumerParam("CCHAR_X", stringBuilder0, '@', '@', 0);
      charConsumer0.appendX(charConsumerParam0);
      assertEquals(2, charConsumerParam0.getCurrentIndex());
      assertEquals("\u00CC", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder("");
      CharConsumerParam charConsumerParam0 = new CharConsumerParam("", stringBuilder0, 'F', 'F', 0);
      charConsumer0.appendTwoQuotation(charConsumerParam0);
      assertEquals("", charConsumerParam0.getElValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder();
      CharConsumerParam charConsumerParam0 = new CharConsumerParam((String) null, stringBuilder0, '{', 'w', 116);
      charConsumer0.appendTwoBacksSlash(charConsumerParam0);
      assertEquals('w', charConsumerParam0.getCNext());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder("org.jiuwo.fastel.parser.CharConsumer");
      CharConsumerParam charConsumerParam0 = new CharConsumerParam((String) null, stringBuilder0, 'S', 'S', 1);
      charConsumer0.appendSlash(charConsumerParam0);
      assertNull(charConsumerParam0.getElValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder("OPERATOR");
      CharConsumerParam charConsumerParam0 = new CharConsumerParam(".$", stringBuilder0, 'V', 'V', (-2048));
      charConsumer0.appendQuotation(charConsumerParam0);
      assertEquals('V', charConsumerParam0.getC());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder();
      CharConsumerParam charConsumerParam0 = new CharConsumerParam((String) null, stringBuilder0, '{', 'w', 116);
      charConsumer0.appendEscape(charConsumerParam0);
      assertEquals(116, charConsumerParam0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder();
      CharConsumerParam charConsumerParam0 = new CharConsumerParam((String) null, stringBuilder0, '{', 'w', 116);
      charConsumer0.appendEmpty(charConsumerParam0);
      assertEquals(116, charConsumerParam0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder();
      CharConsumerParam charConsumerParam0 = new CharConsumerParam((String) null, stringBuilder0, '{', 'w', 116);
      charConsumer0.appendDefault(charConsumerParam0);
      assertEquals(116, charConsumerParam0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder("");
      CharConsumerParam charConsumerParam0 = new CharConsumerParam("", stringBuilder0, 'F', 'F', 0);
      // Undeclared exception!
      try { 
        charConsumer0.appendX(charConsumerParam0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendX((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "org.jiuwo.fastel.contract.CharConsumerParam");
      CharConsumerParam charConsumerParam0 = new CharConsumerParam("org.jiuwo.fastel.contract.CharConsumerParam", stringBuilder0, '|', '|', 0);
      // Undeclared exception!
      try { 
        charConsumer0.appendU(charConsumerParam0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"org.\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendDefault((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendTwoBacksSlash((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendTwoQuotation((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendSlash((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendQuotation((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      CharConsumerParam charConsumerParam0 = new CharConsumerParam("", (StringBuilder) null, '/', '/', '/');
      // Undeclared exception!
      try { 
        charConsumer0.appendU(charConsumerParam0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendEscape((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      // Undeclared exception!
      try { 
        charConsumer0.appendEmpty((CharConsumerParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.CharConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharConsumer charConsumer0 = new CharConsumer();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "[my_^");
      CharConsumerParam charConsumerParam0 = new CharConsumerParam("[my_^", stringBuilder0, ' ', ' ', 0);
      // Undeclared exception!
      try { 
        charConsumer0.appendX(charConsumerParam0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"[m\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
