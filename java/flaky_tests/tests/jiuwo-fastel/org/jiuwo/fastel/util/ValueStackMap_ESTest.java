/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:56:23 GMT 2022
 */

package org.jiuwo.fastel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import java.util.function.Function;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jiuwo.fastel.util.ValueStackMap;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValueStackMap_ESTest extends ValueStackMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object object1 = valueStackMap0.get(object0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) valueStackMap0;
      ValueStackMap valueStackMap1 = new ValueStackMap(objectArray1);
      BiFunction<String, Object, Object> biFunction0 = (BiFunction<String, Object, Object>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        valueStackMap1.computeIfPresent("", biFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object object0 = valueStackMap0.fallback((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      // Undeclared exception!
      try { 
        valueStackMap0.put("%7K o+!X2e`", (Object) "%7K o+!X2e`");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.jiuwo.fastel.util.ReflectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValueStackMap valueStackMap0 = new ValueStackMap((Object[]) null);
      // Undeclared exception!
      try { 
        valueStackMap0.put("zt)5@;>1-K{{", (Object) "zt)5@;>1-K{{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.ValueStackMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      // Undeclared exception!
      try { 
        valueStackMap0.put("", (Object) "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("org.jiuwo.fastel.util.ValueStackMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) valueStackMap0;
      ValueStackMap valueStackMap1 = new ValueStackMap(objectArray1);
      // Undeclared exception!
      try { 
        valueStackMap1.put((Object) valueStackMap0, objectArray1[0], 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassCastException: class org.jiuwo.fastel.util.ValueStackMap cannot be cast to class java.lang.String (org.jiuwo.fastel.util.ValueStackMap is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @218567a5; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.ReflectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValueStackMap valueStackMap0 = new ValueStackMap((Object[]) null);
      // Undeclared exception!
      try { 
        valueStackMap0.put((Object) "org.jiuwo.fastel.util.ValueStackMap", (Object) "org.jiuwo.fastel.util.ValueStackMap", 1266);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.ValueStackMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      objectArray0[4] = (Object) "";
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      // Undeclared exception!
      try { 
        valueStackMap0.get(objectArray0[4]);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"\"
         //
         verifyException("org.jiuwo.fastel.util.ReflectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      // Undeclared exception!
      try { 
        valueStackMap0.put((Object) null, (Object) null, (-195));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -187 out of bounds for length 8
         //
         verifyException("org.jiuwo.fastel.util.ValueStackMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Set<String> set0 = valueStackMap0.keySet();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      valueStackMap0.put((Object) null, (Object) null, 0);
      assertFalse(valueStackMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      objectArray0[2] = (Object) "";
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Function<String, String> function0 = Function.identity();
      Object object0 = valueStackMap0.computeIfAbsent("length", function0);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      objectArray0[2] = (Object) "";
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object object0 = valueStackMap0.get(objectArray0[1]);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Collection<Object> collection0 = valueStackMap0.values();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      boolean boolean0 = valueStackMap0.containsKey((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      int int0 = valueStackMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      valueStackMap0.putAll(hashMap0);
      assertEquals(0, valueStackMap0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object object0 = valueStackMap0.remove((Object) valueStackMap0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object object0 = valueStackMap0.put("@s1z", (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      boolean boolean0 = valueStackMap0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      boolean boolean0 = valueStackMap0.containsValue(valueStackMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      valueStackMap0.clear();
      assertFalse(valueStackMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) valueStackMap0;
      ValueStackMap valueStackMap1 = new ValueStackMap(objectArray1);
      // Undeclared exception!
      try { 
        valueStackMap1.get(objectArray1[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ValueStackMap valueStackMap0 = new ValueStackMap(objectArray0);
      Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)valueStackMap0.entrySet();
      assertNull(set0);
  }
}
