/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:59:10 GMT 2022
 */

package org.jiuwo.fastel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiuwo.fastel.util.MethodExecutable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodExecutable_ESTest extends MethodExecutable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Method[] methodArray0 = new Method[4];
      MethodExecutable methodExecutable0 = new MethodExecutable();
      methodExecutable0.methods = methodArray0;
      try { 
        methodExecutable0.invoke(methodExecutable0, methodArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.MethodExecutable", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MethodExecutable methodExecutable0 = new MethodExecutable();
      Method[] methodArray0 = new Method[0];
      methodExecutable0.methods = methodArray0;
      Object object0 = methodExecutable0.invoke(methodExecutable0, methodExecutable0.methods);
      assertNull(object0);
  }
}
