/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:53:58 GMT 2022
 */

package org.jiuwo.fastel.util.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiuwo.fastel.contract.enums.ExpressionEnum;
import org.jiuwo.fastel.impl.ExpressionNode;
import org.jiuwo.fastel.impl.OperationStrategyImpl;
import org.jiuwo.fastel.util.function.OperationStrategyFunction;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OperationStrategyFunction_ESTest extends OperationStrategyFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Character.valueOf('^');
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_POS;
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      expressionNode1.setLeft(expressionNode0);
      expressionNode1.setLeft(expressionNode0);
      ExpressionEnum.Token expressionEnum_Token2 = ExpressionEnum.Token.OP_AND;
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode1, hashMap1, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jiuwo.fastel.contract.enums.ExpressionEnum$Token cannot be cast to class [Ljava.lang.Object; (org.jiuwo.fastel.contract.enums.ExpressionEnum$Token is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @59b8fadd; [Ljava.lang.Object; is in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, "org.jiuwo.fastel.util.fuwction.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      expressionNode0.setLeft(expressionNode0);
      expressionNode0.setLeft(expressionNode0);
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpQuestion();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNeg();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character.valueOf('2');
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.VALUE_VAR;
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token1, "{");
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpOr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionEnum.Token expressionEnum_Token2 = ExpressionEnum.Token.BRACKET_END;
      Character character0 = Character.valueOf('<');
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token2, character0);
      expressionNode1.setLeft(expressionNode0);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode1, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpMul();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf(')');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.VALUE_CONSTANTS;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      expressionNode0.setRight(expressionNode1);
      operationStrategyFunction0.evaluateOpAdd();
      operationStrategyFunction0.evaluateOpOr();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpDefault();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u4E0D\u652F\u6301\u7684\u64CD\u4F5C\u7B26VALUE_CONSTANTS
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      expressionNode0.setLeft(expressionNode0);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpOr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpNeStrict();
      operationStrategyFunction0.evaluateOpOr();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpDefault();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u4E0D\u652F\u6301\u7684\u64CD\u4F5C\u7B26OP_INVOKE_WITH_STATIC_PARAM
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpOr();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpDefault();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u4E0D\u652F\u6301\u7684\u64CD\u4F5C\u7B26OP_INVOKE_WITH_STATIC_PARAM
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      expressionNode1.setLeft(expressionNode0);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpEqStrict();
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode1, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction1.evaluateOpAnd();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateOpEqStrict();
      assertEquals(false, object0);
      
      Object object1 = operationStrategyFunction0.evaluateOpSub();
      assertEquals(Double.NaN, object1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Character character0 = Character.valueOf(')');
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, character0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.VALUE_MAP;
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token1, "q;l|Yk`Y");
      expressionNode1.setLeft(expressionNode0);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode1, hashMap0, operationStrategyImpl1);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpAdd();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Character cannot be cast to class [Ljava.lang.Object; (java.lang.Character and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      expressionNode0.setLeft(expressionNode0);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNeStrict();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      expressionNode0.setRight(expressionNode1);
      expressionNode1.setLeft(expressionNode0);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpEqStrict();
      LinkedHashMap linkedHashMap0 = (LinkedHashMap)operationStrategyFunction0.evaluateOpAnd();
      assertTrue(linkedHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf(')');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpQuestionSelect();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.LinkedHashMap cannot be cast to class org.jiuwo.fastel.impl.ExpressionNode (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; org.jiuwo.fastel.impl.ExpressionNode is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @59b8fadd)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf(')');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpAdd();
      operationStrategyFunction0.evaluateOpOr();
      operationStrategyFunction0.evaluateOpGetStatic();
      operationStrategyFunction0.evaluateOpNot();
      operationStrategyFunction0.evaluateOpDiv();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpQuestionSelect();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.LinkedHashMap cannot be cast to class org.jiuwo.fastel.impl.ExpressionNode (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; org.jiuwo.fastel.impl.ExpressionNode is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @59b8fadd)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_GET_STATIC;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpNeStrict();
      operationStrategyFunction0.evaluateOpOr();
      operationStrategyImpl0.evaluate(expressionNode1, hashMap0);
      operationStrategyFunction0.evaluateOpGetStatic();
      operationStrategyFunction0.evaluateValueList();
      Object object0 = operationStrategyFunction0.evaluateOpMod();
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateOpNeStrict();
      assertEquals(true, object0);
      
      operationStrategyFunction0.evaluateOpOr();
      operationStrategyFunction0.evaluateOpGetStatic();
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object1 = operationStrategyFunction1.evaluateOpNe();
      assertEquals(true, object1);
      
      Object object2 = operationStrategyFunction0.evaluateOpGlteq();
      assertFalse(object2.equals((Object)object1));
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode1.setLeft(expressionNode0);
      expressionNode0.setLeft(expressionNode1);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode1, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpMod();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf(')');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpAdd();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpQuestionSelect();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.LinkedHashMap cannot be cast to class org.jiuwo.fastel.impl.ExpressionNode (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; org.jiuwo.fastel.impl.ExpressionNode is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @59b8fadd)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      expressionNode1.setLeft(expressionNode0);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateOpNot();
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateOpAdd();
      assertEquals("{}null", object0);
      
      operationStrategyFunction0.evaluateOpOr();
      operationStrategyFunction0.evaluateOpGetStatic();
      Object object1 = operationStrategyFunction0.evaluateOpNot();
      assertEquals(false, object1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl1);
      LinkedHashMap linkedHashMap0 = (LinkedHashMap)operationStrategyFunction0.evaluateOpPut();
      assertEquals(1, linkedHashMap0.size());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf(')');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpGetStatic();
      Object object0 = operationStrategyFunction0.evaluateOpNe();
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode1.setRight(expressionNode0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpNeStrict();
      operationStrategyImpl0.evaluate(expressionNode1, hashMap0);
      operationStrategyFunction0.evaluateOpOr();
      operationStrategyFunction0.evaluateOpGetStatic();
      operationStrategyFunction0.evaluateValueList();
      Object object0 = operationStrategyFunction0.evaluateOpNeg();
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpNeStrict();
      operationStrategyFunction0.evaluateOpOr();
      operationStrategyFunction0.evaluateOpGetStatic();
      ArrayList arrayList0 = (ArrayList)operationStrategyFunction0.evaluateValueList();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpNeStrict();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpJoin();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpOr();
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode0, (Map<String, Object>) null, operationStrategyImpl0);
      operationStrategyFunction1.evaluateOpMul();
      // Undeclared exception!
      try { 
        operationStrategyFunction1.evaluateOpGet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.fu,ction.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode0, (Map<String, Object>) null, operationStrategyImpl1);
      operationStrategyFunction1.evaluateOpEq();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpJoin();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpEqStrict();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpJoin();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      expressionNode0.setLeft(expressionNode0);
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpEqStrict();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      operationStrategyImpl0.evaluate(expressionNode1, hashMap0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpEqStrict();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpAnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpOr();
      Object object0 = operationStrategyFunction0.evaluateOpGetStatic();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_INVOKE_WITH_STATIC_PARAM;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token1, "org.jiuwo.fastel.util.function.OperationStrategyFunction$1");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, character0);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpEqStrict();
      operationStrategyFunction0.evaluateOpOr();
      Object object0 = operationStrategyFunction0.evaluateOpGetStatic();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('T');
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, character0);
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap1, operationStrategyImpl0);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl1);
      operationStrategyFunction1.evaluateOpPos();
      // Undeclared exception!
      try { 
        operationStrategyFunction1.evaluateOpDiv();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('2');
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, character0);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpEqStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Character character0 = Character.valueOf('H');
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, character0);
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap1, operationStrategyImpl0);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      expressionNode0.setLeft(expressionNode1);
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl1);
      // Undeclared exception!
      try { 
        operationStrategyFunction1.evaluateOpEq();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      // Undeclared exception!
      try { 
        operationStrategyImpl0.evaluate(expressionNode0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_INVOKE;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, hashMap0);
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_IN;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl1);
      operationStrategyFunction0.evaluateValueConstants();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpGet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateValueMap();
      ArrayList arrayList0 = (ArrayList)operationStrategyFunction0.evaluateValueList();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      ArrayList arrayList0 = (ArrayList)operationStrategyFunction0.evaluateValueList();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateValueConstants();
      hashMap0.remove((Object) expressionEnum_Token0, object0);
      // Undeclared exception!
      try { 
        operationStrategyImpl0.evaluate(expressionNode0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap2 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap1, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpOr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      LinkedHashMap linkedHashMap0 = (LinkedHashMap)operationStrategyFunction0.evaluateValueMap();
      assertTrue(linkedHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap1, operationStrategyImpl0);
      operationStrategyFunction0.evaluateValueMap();
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpOr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpDefault();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpDefault();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpQuestionSelect();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpQuestionSelect();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_GTEQ;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpJoin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpJoin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNeg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNeg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpSub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpSub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpEqStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      Character.valueOf('E');
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpEqStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpAdd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_LTEQ;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String string0 = "org.jiuwo.fastel.util.function.OperationStrategyFunction";
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpAdd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpDiv();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ExpressionNode expressionNode0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpDiv();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_IN;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("duQm,", "duQm,");
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      ExpressionEnum.Token expressionEnum_Token1 = ExpressionEnum.Token.OP_NEG;
      Character character0 = Character.valueOf('Z');
      ExpressionNode expressionNode1 = new ExpressionNode(expressionEnum_Token1, character0);
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode1, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpGlteq();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpGlteq();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      Character character0 = Character.valueOf('1');
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, character0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateOpQuestion();
      hashMap0.put("", object0);
      hashMap0.put("", character0);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction1 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl1);
      // Undeclared exception!
      try { 
        operationStrategyFunction1.evaluateOpIn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpPut();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpPut();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_IN;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      // Undeclared exception!
      try { 
        operationStrategyImpl0.evaluate(expressionNode0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpIn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_GTEQ;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpAnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpAnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, (OperationStrategyImpl) null);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_GET_STATIC;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl1);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_NEG;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jiuwo.fastel.contract.enums.ExpressionEnum$Token cannot be cast to class [Ljava.lang.Object; (org.jiuwo.fastel.contract.enums.ExpressionEnum$Token is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @59b8fadd; [Ljava.lang.Object; is in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_GET_STATIC;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_IN;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("duQm,", "duQm,");
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpInvoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNeStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_NE_STRICT;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      expressionNode0.getLeft();
      expressionNode0.setLeft((ExpressionNode) null);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpNeStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_GTEQ;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateValueVar();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateValueVar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpEq();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ExpressionNode expressionNode0 = new ExpressionNode("[]");
      expressionNode0.getRight();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      expressionNode0.setParam("[]");
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateValueConstants();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateValueConstants();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpMul();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_LT;
      Character character0 = Character.valueOf('`');
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, character0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      operationStrategyFunction0.evaluateOpQuestion();
      expressionNode0.getLeft();
      expressionNode0.setRight((ExpressionNode) null);
      String string0 = null;
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpMul();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ExpressionNode expressionNode0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpGetStatic();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpGetStatic();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_ADD;
      Object object0 = new Object();
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, object0);
      expressionNode0.getRight();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      expressionNode0.setParam((Object) null);
      OperationStrategyImpl operationStrategyImpl0 = null;
      expressionNode0.setLeft((ExpressionNode) null);
      String string0 = "z\\";
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, (OperationStrategyImpl) null);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpPos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpPos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpGet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_QUESTION;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      expressionNode0.getLeft();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.put("_KNh`x^78aZS*S", object0);
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      String string0 = "_T";
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpGet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_EQ;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, expressionEnum_Token0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyImpl0.evaluate(expressionNode0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpEq();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpQuestion();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction((ExpressionNode) null, hashMap0, operationStrategyImpl0);
      // Undeclared exception!
      try { 
        operationStrategyFunction0.evaluateOpMod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_OR;
      Character character0 = Character.valueOf('1');
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, character0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      OperationStrategyFunction operationStrategyFunction0 = new OperationStrategyFunction(expressionNode0, hashMap0, operationStrategyImpl0);
      Object object0 = operationStrategyFunction0.evaluateOpQuestion();
      hashMap0.put("", object0);
      hashMap0.put("", character0);
      OperationStrategyImpl operationStrategyImpl1 = new OperationStrategyImpl();
      // Undeclared exception!
      try { 
        operationStrategyImpl1.evaluate(expressionNode0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ExpressionNode expressionNode0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      OperationStrategyImpl operationStrategyImpl0 = new OperationStrategyImpl();
      // Undeclared exception!
      try { 
        operationStrategyImpl0.evaluate((ExpressionNode) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.OperationStrategyImpl", e);
      }
  }
}
