/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:09:39 GMT 2022
 */

package org.jiuwo.fastel.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiuwo.fastel.contract.enums.ExpressionEnum;
import org.jiuwo.fastel.impl.OptimizeJsExpressionImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptimizeJsExpressionImpl_ESTest extends OptimizeJsExpressionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExpressionEnum.JsToken expressionEnum_JsToken0 = ExpressionEnum.JsToken.ENCODE_URI;
      OptimizeJsExpressionImpl optimizeJsExpressionImpl0 = new OptimizeJsExpressionImpl(expressionEnum_JsToken0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[1];
      Object object1 = optimizeJsExpressionImpl0.invoke(object0, objectArray0);
      assertEquals("null", object1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExpressionEnum.JsToken expressionEnum_JsToken0 = ExpressionEnum.JsToken.PARSE_INT;
      OptimizeJsExpressionImpl optimizeJsExpressionImpl0 = new OptimizeJsExpressionImpl(expressionEnum_JsToken0);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        optimizeJsExpressionImpl0.invoke(expressionEnum_JsToken0, objectArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"java.lang.Double@0000000003\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExpressionEnum.JsToken expressionEnum_JsToken0 = ExpressionEnum.JsToken.JSON_STRINGIFY;
      OptimizeJsExpressionImpl optimizeJsExpressionImpl0 = new OptimizeJsExpressionImpl(expressionEnum_JsToken0);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        optimizeJsExpressionImpl0.invoke(expressionEnum_JsToken0, objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/alibaba/fastjson/JSON
         //
         verifyException("org.jiuwo.fastel.util.function.JsExpressionFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExpressionEnum.JsToken expressionEnum_JsToken0 = ExpressionEnum.JsToken.MATH_LN10;
      OptimizeJsExpressionImpl optimizeJsExpressionImpl0 = new OptimizeJsExpressionImpl(expressionEnum_JsToken0);
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        optimizeJsExpressionImpl0.invoke(expressionEnum_JsToken0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8FD8\u672A\u8BC6\u522B\u7684\u51FD\u6570:{}
         // {}
         //
         verifyException("org.jiuwo.fastel.impl.OptimizeJsExpressionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExpressionEnum.JsToken expressionEnum_JsToken0 = ExpressionEnum.JsToken.MATH_LN2;
      OptimizeJsExpressionImpl optimizeJsExpressionImpl0 = new OptimizeJsExpressionImpl(expressionEnum_JsToken0);
      // Undeclared exception!
      try { 
        optimizeJsExpressionImpl0.invoke(expressionEnum_JsToken0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.util.ObjectUtil", e);
      }
  }
}
