/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:00:02 GMT 2022
 */

package org.jiuwo.fastel.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jiuwo.fastel.contract.enums.ExpressionEnum;
import org.jiuwo.fastel.impl.ExpressionImpl;
import org.jiuwo.fastel.impl.ExpressionNode;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExpressionImpl_ESTest extends ExpressionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl("\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570";
      objectArray0[1] = (Object) "\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570";
      Object object0 = expressionImpl0.evaluate(objectArray0);
      assertEquals("\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570", object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl("\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570");
      Object object0 = expressionImpl0.evaluate((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      expressionImpl0.parseExpression("OP_POS");
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.VALUE_MAP;
      Object object0 = expressionImpl0.evaluate((Object) expressionEnum_Token0);
      assertEquals(ExpressionEnum.Token.OP_POS, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      // Undeclared exception!
      try { 
        expressionImpl0.parseExpression("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u8BED\u6CD5\u9519\u8BEF
         // @0
         // 
         // ----
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      // Undeclared exception!
      try { 
        expressionImpl0.parseExpression("/");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      // Undeclared exception!
      try { 
        expressionImpl0.parseExpression("vp!9Em-bhD:<");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      // Undeclared exception!
      try { 
        expressionImpl0.parseExpression((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.AbstractParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl("OP_POS");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) expressionImpl0;
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"OP_POS\"
         //
         verifyException("org.jiuwo.fastel.util.ReflectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      ExpressionImpl expressionImpl1 = expressionImpl0.parseExpression("\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570");
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_MOD;
      Object[] objectArray0 = new Object[2];
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      expressionImpl1.expressionNode = expressionNode0;
      expressionNode0.setLeft(expressionImpl1.expressionNode);
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate(objectArray0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      ExpressionImpl expressionImpl0 = new ExpressionImpl(">qGqc{X/%N$),A");
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate(objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Boolean cannot be cast to class java.util.List (java.lang.Boolean and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570";
      ExpressionImpl expressionImpl0 = new ExpressionImpl("\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570");
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate((Object) string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570\"
         //
         verifyException("org.jiuwo.fastel.util.ReflectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl("~8c,");
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate((Object) expressionImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Long cannot be cast to class java.util.List (java.lang.Long and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("org.jiuwo.fastel.util.function.OperationStrategyFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExpressionImpl expressionImpl0 = null;
      try {
        expressionImpl0 = new ExpressionImpl("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u8868\u8FBE\u5F0F\u8BED\u6CD5\u9519\u8BEF
         // @0
         // 
         // ----
         //
         verifyException("org.jiuwo.fastel.parser.ExpressionParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExpressionImpl expressionImpl0 = null;
      try {
        expressionImpl0 = new ExpressionImpl("vp!9Em-bhD:<");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExpressionImpl expressionImpl0 = null;
      try {
        expressionImpl0 = new ExpressionImpl((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.parser.AbstractParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate((Object) expressionImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.ExpressionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate(objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // \u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570
         //
         verifyException("org.jiuwo.fastel.impl.ExpressionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl("OP_POS");
      Object[] objectArray0 = new Object[1];
      Object object0 = expressionImpl0.evaluate(objectArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.ExpressionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jiuwo.fastel.impl.ExpressionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl("OP6a_CO%g");
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        expressionImpl0.evaluate(objectArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.jiuwo.fastel.util.NumberUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExpressionImpl expressionImpl0 = new ExpressionImpl();
      ExpressionImpl expressionImpl1 = expressionImpl0.parseExpression("\u53C2\u6570\u5FC5\u987B\u662F\u5076\u6570\u4E2A\u6570");
      ExpressionEnum.Token expressionEnum_Token0 = ExpressionEnum.Token.OP_MOD;
      ExpressionNode expressionNode0 = new ExpressionNode(expressionEnum_Token0, (Object) null);
      expressionImpl1.expressionNode = expressionNode0;
      expressionNode0.setLeft(expressionImpl1.expressionNode);
      // Undeclared exception!
      try { 
        expressionImpl1.evaluate((Object) expressionImpl1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }
}
