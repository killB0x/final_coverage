/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 15:39:45 GMT 2022
 */

package com.apruve;

import org.junit.Test;
import static org.junit.Assert.*;
import com.apruve.ApruveResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApruveResponse_ESTest extends ApruveResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ApruveResponse<Integer> apruveResponse0 = new ApruveResponse<Integer>((-3414), (Integer) null);
      ApruveResponse<Object> apruveResponse1 = new ApruveResponse<Object>((-3414), apruveResponse0);
      ApruveResponse apruveResponse2 = (ApruveResponse)apruveResponse1.getResponseObject();
      assertEquals((-3414), apruveResponse2.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ApruveResponse<Integer> apruveResponse0 = new ApruveResponse<Integer>(0, integer0);
      int int0 = apruveResponse0.getResponseCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(2712);
      ApruveResponse<Integer> apruveResponse0 = new ApruveResponse<Integer>(2712, integer0, "");
      int int0 = apruveResponse0.getResponseCode();
      assertEquals(2712, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-86));
      ApruveResponse<Integer> apruveResponse0 = new ApruveResponse<Integer>(0, integer0, ";ezhNB0Lcta\"9");
      apruveResponse0.getErrorResponse();
      assertEquals(0, apruveResponse0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      ApruveResponse<Object> apruveResponse0 = new ApruveResponse<Object>((-1648), object0, "");
      apruveResponse0.getErrorResponse();
      assertEquals((-1648), apruveResponse0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ApruveResponse<Integer> apruveResponse0 = new ApruveResponse<Integer>((-3414), (Integer) null);
      ApruveResponse<Object> apruveResponse1 = new ApruveResponse<Object>((-3414), apruveResponse0);
      boolean boolean0 = apruveResponse1.success();
      assertEquals((-3414), apruveResponse1.getResponseCode());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object object0 = new Object();
      ApruveResponse<Object> apruveResponse0 = new ApruveResponse<Object>((-1648), object0, "");
      boolean boolean0 = apruveResponse0.success();
      assertEquals((-1648), apruveResponse0.getResponseCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ApruveResponse<Integer> apruveResponse0 = new ApruveResponse<Integer>((-3414), (Integer) null);
      int int0 = apruveResponse0.getResponseCode();
      assertEquals((-3414), int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ApruveResponse<Integer> apruveResponse0 = new ApruveResponse<Integer>((-3414), (Integer) null);
      apruveResponse0.getResponseObject();
      assertEquals((-3414), apruveResponse0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Object object0 = new Object();
      ApruveResponse<Object> apruveResponse0 = new ApruveResponse<Object>(1, object0);
      apruveResponse0.getErrorResponse();
      assertEquals(1, apruveResponse0.getResponseCode());
  }
}
