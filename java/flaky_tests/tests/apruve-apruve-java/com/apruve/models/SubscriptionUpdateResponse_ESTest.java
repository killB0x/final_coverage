/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 15:44:08 GMT 2022
 */

package com.apruve.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.apruve.models.SubscriptionUpdateResponse;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubscriptionUpdateResponse_ESTest extends SubscriptionUpdateResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("]=A.Nt3F'oq#c32cLx", "", 4099, "", uRLStreamHandler0);
      subscriptionUpdateResponse0.setSubscriptionApiUrl(uRL0);
      URL uRL1 = subscriptionUpdateResponse0.getSubscriptionApiUrl();
      assertEquals(0, uRL1.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("@$XHAF)>-", "", 0, "", uRLStreamHandler0);
      subscriptionUpdateResponse0.setSubscriptionApiUrl(uRL0);
      URL uRL1 = subscriptionUpdateResponse0.getSubscriptionApiUrl();
      assertNull(uRL1.getQuery());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      URL uRL0 = MockURL.getFtpExample();
      subscriptionUpdateResponse0.setSubscriptionApiUrl(uRL0);
      URL uRL1 = subscriptionUpdateResponse0.getSubscriptionApiUrl();
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL1.toExternalForm());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      subscriptionUpdateResponse0.setId("com.apruve.models");
      String string0 = subscriptionUpdateResponse0.getId();
      assertEquals("com.apruve.models", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      subscriptionUpdateResponse0.setId("");
      String string0 = subscriptionUpdateResponse0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      // Undeclared exception!
      try { 
        subscriptionUpdateResponse0.toJson();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      String string0 = subscriptionUpdateResponse0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      // Undeclared exception!
      try { 
        subscriptionUpdateResponse0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SubscriptionUpdateResponse subscriptionUpdateResponse0 = new SubscriptionUpdateResponse();
      URL uRL0 = subscriptionUpdateResponse0.getSubscriptionApiUrl();
      assertNull(uRL0);
  }
}
