/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 15:42:33 GMT 2022
 */

package com.apruve.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.apruve.models.PaymentRequest;
import com.apruve.models.PaymentRequestUpdateResponse;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaymentRequestUpdateResponse_ESTest extends PaymentRequestUpdateResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("/payment_requests/", "/payment_requests/", 3801, "", uRLStreamHandler0);
      paymentRequestUpdateResponse0.setViewUrl(uRL0);
      URL uRL1 = paymentRequestUpdateResponse0.getViewUrl();
      assertEquals("", uRL1.getPath());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("04Oj{", "04Oj{", 0, "04Oj{", uRLStreamHandler0);
      paymentRequestUpdateResponse0.setViewUrl(uRL0);
      URL uRL1 = paymentRequestUpdateResponse0.getViewUrl();
      assertNull(uRL1.getRef());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URL uRL0 = MockURL.getFileExample();
      paymentRequestUpdateResponse0.setViewUrl(uRL0);
      URL uRL1 = paymentRequestUpdateResponse0.getViewUrl();
      assertEquals("file", uRL1.getProtocol());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      PaymentRequest.PaymentRequestStatus paymentRequest_PaymentRequestStatus0 = PaymentRequest.PaymentRequestStatus.CANCELED;
      paymentRequestUpdateResponse0.setStatus(paymentRequest_PaymentRequestStatus0);
      PaymentRequest.PaymentRequestStatus paymentRequest_PaymentRequestStatus1 = paymentRequestUpdateResponse0.getStatus();
      assertSame(paymentRequest_PaymentRequestStatus1, paymentRequest_PaymentRequestStatus0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      paymentRequestUpdateResponse0.setId("`#");
      String string0 = paymentRequestUpdateResponse0.getId();
      assertEquals("`#", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 0, "", uRLStreamHandler0);
      paymentRequestUpdateResponse0.setApiUrl(uRL0);
      URL uRL1 = paymentRequestUpdateResponse0.getApiUrl();
      assertEquals(0, uRL1.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("!FwuZ+N", "!FwuZ+N", 2178, "com.apruve.models.PaymentRequestUpdateResponse", uRLStreamHandler0);
      paymentRequestUpdateResponse0.setApiUrl(uRL0);
      URL uRL1 = paymentRequestUpdateResponse0.getApiUrl();
      assertEquals(0, uRL1.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URL uRL0 = MockURL.getFileExample();
      paymentRequestUpdateResponse0.setApiUrl(uRL0);
      URL uRL1 = paymentRequestUpdateResponse0.getApiUrl();
      assertNull(uRL1.getRef());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      // Undeclared exception!
      try { 
        paymentRequestUpdateResponse0.toJson();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URL uRL0 = paymentRequestUpdateResponse0.getApiUrl();
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      String string0 = paymentRequestUpdateResponse0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      URL uRL0 = paymentRequestUpdateResponse0.getViewUrl();
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      // Undeclared exception!
      try { 
        paymentRequestUpdateResponse0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      paymentRequestUpdateResponse0.getStatus();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PaymentRequestUpdateResponse paymentRequestUpdateResponse0 = new PaymentRequestUpdateResponse();
      paymentRequestUpdateResponse0.setId("");
      String string0 = paymentRequestUpdateResponse0.getId();
      assertEquals("", string0);
  }
}
