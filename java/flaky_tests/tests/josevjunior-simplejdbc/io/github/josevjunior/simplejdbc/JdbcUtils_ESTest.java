/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 21:48:15 GMT 2022
 */

package io.github.josevjunior.simplejdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import io.github.josevjunior.simplejdbc.JdbcUtils;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JdbcUtils_ESTest extends JdbcUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      JdbcUtils.close(resultSet0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JdbcUtils.close((ResultSet) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      JdbcUtils.close(statement0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JdbcUtils.close((Statement) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JdbcUtils.close(connection0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JdbcUtils.close((Connection) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JdbcUtils jdbcUtils0 = new JdbcUtils();
  }
}
