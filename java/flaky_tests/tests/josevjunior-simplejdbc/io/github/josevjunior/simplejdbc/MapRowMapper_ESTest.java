/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 21:51:08 GMT 2022
 */

package io.github.josevjunior.simplejdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.josevjunior.simplejdbc.MapRowMapper;
import java.sql.ResultSet;
import java.util.Map;
import javax.sql.rowset.RowSetMetaDataImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapRowMapper_ESTest extends MapRowMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MapRowMapper mapRowMapper0 = new MapRowMapper();
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      rowSetMetaDataImpl0.setColumnCount(1);
      // Undeclared exception!
      try { 
        mapRowMapper0.map((ResultSet) null, rowSetMetaDataImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.josevjunior.simplejdbc.MapRowMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MapRowMapper mapRowMapper0 = new MapRowMapper();
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(resultSet0).getObject(anyInt());
      rowSetMetaDataImpl0.setColumnCount(1);
      Map<String, Object> map0 = mapRowMapper0.map(resultSet0, rowSetMetaDataImpl0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MapRowMapper mapRowMapper0 = new MapRowMapper();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      Map<String, Object> map0 = mapRowMapper0.map(resultSet0, rowSetMetaDataImpl0);
      assertEquals(0, map0.size());
  }
}
