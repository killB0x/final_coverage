/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 13:08:53 GMT 2022
 */

package io.openliberty.tools.ant.install;

import org.junit.Test;
import static org.junit.Assert.*;
import io.openliberty.tools.ant.install.UnixPermissions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnixPermissions_ESTest extends UnixPermissions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isOwnerWrite();
      assertTrue(unixPermissions0.isOwnerRead());
      assertFalse(unixPermissions0.isOtherExecute());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1466));
      boolean boolean0 = unixPermissions0.isOwnerRead();
      assertTrue(unixPermissions0.isOtherWrite());
      assertFalse(unixPermissions0.isOtherExecute());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isOwnerExecute();
      assertFalse(boolean0);
      assertTrue(unixPermissions0.isOwnerRead());
      assertFalse(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isOtherWrite();
      assertFalse(boolean0);
      assertFalse(unixPermissions0.isOtherExecute());
      assertTrue(unixPermissions0.isOwnerRead());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isOtherRead();
      assertFalse(boolean0);
      assertTrue(unixPermissions0.isOwnerRead());
      assertFalse(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isOtherExecute();
      assertFalse(boolean0);
      assertTrue(unixPermissions0.isOwnerRead());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isGroupRead();
      assertFalse(boolean0);
      assertTrue(unixPermissions0.isOwnerRead());
      assertFalse(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isGroupExecute();
      assertFalse(unixPermissions0.isOtherExecute());
      assertTrue(unixPermissions0.isOwnerRead());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions(256);
      boolean boolean0 = unixPermissions0.isGroupWrite();
      assertTrue(unixPermissions0.isOwnerRead());
      assertFalse(boolean0);
      assertFalse(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isOtherRead();
      assertTrue(boolean0);
      assertTrue(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isGroupRead();
      assertTrue(boolean0);
      assertTrue(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isGroupWrite();
      assertTrue(boolean0);
      assertTrue(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isOtherExecute();
      assertTrue(boolean0);
      assertTrue(unixPermissions0.isOtherWrite());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isGroupExecute();
      assertTrue(unixPermissions0.isOtherExecute());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isOwnerExecute();
      assertTrue(unixPermissions0.isOtherExecute());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isOwnerRead();
      assertTrue(unixPermissions0.isOtherExecute());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isOtherWrite();
      assertTrue(boolean0);
      assertTrue(unixPermissions0.isOtherExecute());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UnixPermissions unixPermissions0 = new UnixPermissions((-1));
      boolean boolean0 = unixPermissions0.isOwnerWrite();
      assertTrue(boolean0);
      assertTrue(unixPermissions0.isOtherExecute());
  }
}
