/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 13:09:35 GMT 2022
 */

package io.openliberty.tools.ant.install;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.openliberty.tools.ant.install.LibertyInfo;
import io.openliberty.tools.ant.install.Version;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LibertyInfo_ESTest extends LibertyInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LibertyInfo libertyInfo0 = new LibertyInfo("0", hashMap0);
      Version version0 = libertyInfo0.getVersion();
      assertNull(version0.getQualifier());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LibertyInfo libertyInfo0 = new LibertyInfo("9", (Map<String, String>) null);
      Version version0 = libertyInfo0.getVersion();
      assertNull(version0.getQualifier());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("uri", "uri");
      LibertyInfo libertyInfo0 = new LibertyInfo("", hashMap0);
      String string0 = libertyInfo0.getUri();
      assertEquals("uri", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("uri", "");
      LibertyInfo libertyInfo0 = new LibertyInfo(".?kw!{(~2", hashMap0);
      String string0 = libertyInfo0.getUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LibertyInfo libertyInfo0 = new LibertyInfo("sT?rD81no90N", hashMap0);
      String string0 = libertyInfo0.getProperty("acE");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("5dJ1UU.=", "5dJ1UU.=");
      LibertyInfo libertyInfo0 = new LibertyInfo("5dJ1UU.=", hashMap0);
      String string0 = libertyInfo0.getProperty("5dJ1UU.=");
      assertEquals("5dJ1UU.=", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      LibertyInfo libertyInfo0 = new LibertyInfo("-m';)I&CA[-\"20X^cV", hashMap0);
      String string0 = libertyInfo0.getProperty("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("license", "");
      hashMap0.replace("license", "u7");
      LibertyInfo libertyInfo0 = new LibertyInfo("", hashMap0);
      String string0 = libertyInfo0.getLicenseUri();
      assertEquals("u7", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("license", "");
      LibertyInfo libertyInfo0 = new LibertyInfo("", hashMap0);
      String string0 = libertyInfo0.getLicenseUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LibertyInfo libertyInfo0 = new LibertyInfo((String) null, hashMap0);
      // Undeclared exception!
      try { 
        libertyInfo0.getVersion();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LibertyInfo libertyInfo0 = new LibertyInfo("", (Map<String, String>) null);
      // Undeclared exception!
      try { 
        libertyInfo0.getUri();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.openliberty.tools.ant.install.LibertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LibertyInfo libertyInfo0 = new LibertyInfo("9", (Map<String, String>) null);
      // Undeclared exception!
      try { 
        libertyInfo0.getLicenseUri();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.openliberty.tools.ant.install.LibertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LibertyInfo libertyInfo0 = new LibertyInfo(".?kw!{(~2", hashMap0);
      String string0 = libertyInfo0.getUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LibertyInfo libertyInfo0 = new LibertyInfo("", hashMap0);
      String string0 = libertyInfo0.toString();
      assertEquals("LibertyInfo[: {}]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LibertyInfo libertyInfo0 = new LibertyInfo("", hashMap0);
      String string0 = libertyInfo0.getLicenseUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LibertyInfo libertyInfo0 = new LibertyInfo((String) null, (Map<String, String>) null);
      // Undeclared exception!
      try { 
        libertyInfo0.getProperty("]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.openliberty.tools.ant.install.LibertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LibertyInfo libertyInfo0 = new LibertyInfo("", hashMap0);
      // Undeclared exception!
      try { 
        libertyInfo0.getVersion();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid version: 
         //
         verifyException("io.openliberty.tools.ant.install.Version", e);
      }
  }
}
