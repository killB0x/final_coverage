/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 15:55:53 GMT 2022
 */

package org.sqlite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sqlite.Function;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Function_ESTest extends Function_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        Function.destroy((Connection) null, "u", 0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // connection must be to an SQLite db
         //
         verifyException("org.sqlite.Function", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      try { 
        Function.create((Connection) null, "inval#d arg Crovided: ", (Function) null, (-481), (-481));
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // connection must be to an SQLite db
         //
         verifyException("org.sqlite.Function", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      try { 
        Function.create((Connection) null, "", (Function) null, 1743);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // connection must be to an SQLite db
         //
         verifyException("org.sqlite.Function", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      try { 
        Function.create((Connection) null, (String) null, (Function) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // connection must be to an SQLite db
         //
         verifyException("org.sqlite.Function", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      try { 
        Function.destroy((Connection) null, "connection must be to an SQLite db");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // connection must be to an SQLite db
         //
         verifyException("org.sqlite.Function", e);
      }
  }
}
