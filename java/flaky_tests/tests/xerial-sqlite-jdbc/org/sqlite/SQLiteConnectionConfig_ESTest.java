/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 16:13:42 GMT 2022
 */

package org.sqlite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sqlite.SQLiteConfig;
import org.sqlite.SQLiteConnectionConfig;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLiteConnectionConfig_ESTest extends SQLiteConnectionConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable((Properties) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLiteConfig.DateClass sQLiteConfig_DateClass0 = SQLiteConfig.DateClass.REAL;
      SQLiteConfig.DatePrecision sQLiteConfig_DatePrecision0 = SQLiteConfig.DatePrecision.SECONDS;
      SQLiteConfig.TransactionMode sQLiteConfig_TransactionMode0 = SQLiteConfig.TransactionMode.EXCLUSIVE;
      SQLiteConnectionConfig sQLiteConnectionConfig0 = null;
      try {
        sQLiteConnectionConfig0 = new SQLiteConnectionConfig(sQLiteConfig_DateClass0, sQLiteConfig_DatePrecision0, "", 0, sQLiteConfig_TransactionMode0, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLiteConfig.DateClass sQLiteConfig_DateClass0 = SQLiteConfig.DateClass.INTEGER;
      SQLiteConfig.DatePrecision sQLiteConfig_DatePrecision0 = SQLiteConfig.DatePrecision.MILLISECONDS;
      SQLiteConfig.TransactionMode sQLiteConfig_TransactionMode0 = SQLiteConfig.TransactionMode.EXCLUSIVE;
      SQLiteConnectionConfig sQLiteConnectionConfig0 = null;
      try {
        sQLiteConnectionConfig0 = new SQLiteConnectionConfig(sQLiteConfig_DateClass0, sQLiteConfig_DatePrecision0, (String) null, 7, sQLiteConfig_TransactionMode0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pattern must not be null
         //
         verifyException("org.sqlite.date.FormatCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SQLiteConfig.DateClass sQLiteConfig_DateClass0 = SQLiteConfig.DateClass.INTEGER;
      SQLiteConfig.DatePrecision sQLiteConfig_DatePrecision0 = SQLiteConfig.DatePrecision.MILLISECONDS;
      SQLiteConfig.TransactionMode sQLiteConfig_TransactionMode0 = SQLiteConfig.TransactionMode.EXCLUSIVE;
      SQLiteConnectionConfig sQLiteConnectionConfig0 = null;
      try {
        sQLiteConnectionConfig0 = new SQLiteConnectionConfig(sQLiteConfig_DateClass0, sQLiteConfig_DatePrecision0, "Nuy", 36, sQLiteConfig_TransactionMode0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern component: N
         //
         verifyException("org.sqlite.date.FastDatePrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SQLiteConfig.DateClass sQLiteConfig_DateClass0 = SQLiteConfig.DateClass.TEXT;
      SQLiteConfig.DatePrecision sQLiteConfig_DatePrecision0 = SQLiteConfig.DatePrecision.SECONDS;
      SQLiteConfig.TransactionMode sQLiteConfig_TransactionMode0 = SQLiteConfig.TransactionMode.DEFERRED;
      SQLiteConnectionConfig sQLiteConnectionConfig0 = new SQLiteConnectionConfig(sQLiteConfig_DateClass0, sQLiteConfig_DatePrecision0, "yyyy-MM-dd HH:mm:ss.SSS", 0, sQLiteConfig_TransactionMode0, true);
      assertTrue(sQLiteConnectionConfig0.isAutoCommit());
      assertEquals(0, sQLiteConnectionConfig0.getTransactionIsolation());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        SQLiteConnectionConfig.fromPragmaTable(properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.sqlite.SQLiteConfig$Pragma
         //
         verifyException("org.sqlite.SQLiteConnectionConfig", e);
      }
  }
}
