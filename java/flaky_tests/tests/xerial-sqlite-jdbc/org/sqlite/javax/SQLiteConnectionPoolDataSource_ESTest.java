/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 16:22:29 GMT 2022
 */

package org.sqlite.javax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sqlite.SQLiteConfig;
import org.sqlite.javax.SQLiteConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLiteConnectionPoolDataSource_ESTest extends SQLiteConnectionPoolDataSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SQLiteConnectionPoolDataSource sQLiteConnectionPoolDataSource0 = new SQLiteConnectionPoolDataSource((SQLiteConfig) null);
      // Undeclared exception!
      try { 
        sQLiteConnectionPoolDataSource0.getPooledConnection("mHrzVCb^OZ*<7ddv", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sqlite.SQLiteDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SQLiteConnectionPoolDataSource sQLiteConnectionPoolDataSource0 = new SQLiteConnectionPoolDataSource((SQLiteConfig) null);
      // Undeclared exception!
      try { 
        sQLiteConnectionPoolDataSource0.getPooledConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sqlite.SQLiteDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SQLiteConnectionPoolDataSource sQLiteConnectionPoolDataSource0 = new SQLiteConnectionPoolDataSource();
      assertEquals("", sQLiteConnectionPoolDataSource0.getDatabaseName());
  }
}
