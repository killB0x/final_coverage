/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 16:18:25 GMT 2022
 */

package org.sqlite.date;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.sqlite.date.ExceptionUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExceptionUtils_ESTest extends ExceptionUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      // Undeclared exception!
      try { 
        ExceptionUtils.rethrow((Throwable) mockThrowable0);
        fail("Expecting exception: Throwable");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExceptionUtils exceptionUtils0 = new ExceptionUtils();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExceptionUtils.rethrow((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sqlite.date.ExceptionUtils", e);
      }
  }
}
