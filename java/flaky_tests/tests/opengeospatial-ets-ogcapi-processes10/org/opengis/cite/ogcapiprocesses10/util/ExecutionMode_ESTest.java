/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 22:17:29 GMT 2022
 */

package org.opengis.cite.ogcapiprocesses10.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opengis.cite.ogcapiprocesses10.util.ExecutionMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExecutionMode_ESTest extends ExecutionMode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExecutionMode executionMode0 = ExecutionMode.fromString("async");
      assertEquals(ExecutionMode.ASYNC, executionMode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExecutionMode[] executionModeArray0 = ExecutionMode.values();
      assertEquals(3, executionModeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExecutionMode executionMode0 = ExecutionMode.valueOf("ASYNC");
      assertEquals(ExecutionMode.ASYNC, executionMode0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExecutionMode.toString((ExecutionMode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.ogcapiprocesses10.util.ExecutionMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExecutionMode executionMode0 = ExecutionMode.fromString("sync");
      assertEquals(ExecutionMode.SYNC, executionMode0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExecutionMode.fromString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.ogcapiprocesses10.util.ExecutionMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ExecutionMode executionMode0 = ExecutionMode.SYNC;
      String string0 = executionMode0.getStringRepresentation();
      assertEquals("sync", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ExecutionMode executionMode0 = ExecutionMode.SYNC;
      String string0 = executionMode0.toString();
      assertEquals("sync", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ExecutionMode executionMode0 = ExecutionMode.SYNC;
      String string0 = ExecutionMode.toString(executionMode0);
      assertEquals("sync", string0);
  }
}
