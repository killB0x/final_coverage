/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 22:06:49 GMT 2022
 */

package org.opengis.cite.ogcapiprocesses10.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opengis.cite.ogcapiprocesses10.util.BBox;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BBox_ESTest extends BBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      BBox bBox1 = new BBox(0.0, 0.0, 0.0, (-5350.038283417611));
      boolean boolean0 = bBox1.equals(bBox0);
      assertFalse(bBox0.equals((Object)bBox1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      BBox bBox1 = new BBox(0.0, 0.0, 3611.0, 3611.0);
      boolean boolean0 = bBox0.equals(bBox1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BBox bBox0 = new BBox(1722.2, 1722.2, 1202.221764928, 1722.2);
      BBox bBox1 = new BBox(1722.2, 1202.221764928, 1722.2, 0.0);
      boolean boolean0 = bBox0.equals(bBox1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BBox bBox0 = new BBox(4776.74499, 0.0, (-1.0), (-1.0));
      BBox bBox1 = new BBox((-1.0), (-1.0), 0.0, 0.0);
      boolean boolean0 = bBox0.equals(bBox1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      String string0 = bBox0.asQueryParameter();
      assertEquals(".0000000,.0000000,.0000000,.0000000", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      BBox bBox1 = new BBox(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = bBox1.equals(bBox0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      BBox bBox1 = new BBox(0.0, 0.0, 0.0, 1399.78);
      boolean boolean0 = bBox1.equals(bBox0);
      assertFalse(bBox0.equals((Object)bBox1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BBox bBox0 = new BBox(21.485268358925225, 21.485268358925225, 21.485268358925225, 21.485268358925225);
      BBox bBox1 = new BBox(21.485268358925225, 0.0, 0.0, 21.485268358925225);
      boolean boolean0 = bBox1.equals(bBox0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      BBox bBox1 = new BBox(4824.23984775, 0.0, 1.0, 1.0);
      boolean boolean0 = bBox0.equals(bBox1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      Object object0 = new Object();
      boolean boolean0 = bBox0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = bBox0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = bBox0.equals(bBox0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, (-1.0), (-1.0), (-1.0));
      BBox bBox1 = new BBox(0.0, (-1.0), 0.0, 0.0);
      boolean boolean0 = bBox1.equals(bBox0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      bBox0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BBox bBox0 = new BBox(0.0, 0.0, 0.0, 0.0);
      String string0 = bBox0.toString();
      assertEquals(".0000000,.0000000,.0000000,.0000000", string0);
  }
}
