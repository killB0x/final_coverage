/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 22:13:26 GMT 2022
 */

package org.opengis.cite.ogcapiprocesses10;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.opengis.cite.ogcapiprocesses10.CommandLineArguments;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CommandLineArguments_ESTest extends CommandLineArguments_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CommandLineArguments commandLineArguments0 = new CommandLineArguments();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("test-run-props.xml");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = commandLineArguments0.getPropertiesFile();
      assertEquals("test-run-props.xml", file0.getName());
      assertFalse(commandLineArguments0.doDeleteSubjectOnFinish());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("test-run-props.xml");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "?u o):pSDs:-?J#");
      CommandLineArguments commandLineArguments0 = new CommandLineArguments();
      File file0 = commandLineArguments0.getPropertiesFile();
      assertFalse(commandLineArguments0.doDeleteSubjectOnFinish());
      assertTrue(file0.isFile());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CommandLineArguments commandLineArguments0 = new CommandLineArguments();
      String string0 = commandLineArguments0.getOutputDir();
      assertNotNull(string0);
      assertFalse(commandLineArguments0.doDeleteSubjectOnFinish());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CommandLineArguments commandLineArguments0 = new CommandLineArguments();
      File file0 = commandLineArguments0.getPropertiesFile();
      assertFalse(commandLineArguments0.doDeleteSubjectOnFinish());
      assertFalse(file0.canExecute());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CommandLineArguments commandLineArguments0 = new CommandLineArguments();
      boolean boolean0 = commandLineArguments0.doDeleteSubjectOnFinish();
      assertFalse(boolean0);
  }
}
