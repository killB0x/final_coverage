/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 08:21:02 GMT 2022
 */

package org.math.array.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.cornell.lassp.houle.RngPack.RandomSeedable;
import edu.cornell.lassp.houle.RngPack.Ranmar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.math.array.util.Function;
import org.math.array.util.Random;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Random_ESTest extends Random_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      Random.uniform(2106.84438143, 0.58039790391922);
      Random.dirac(doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 1712.1060649606904;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (-1321.617);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.58039790391922;
      Random.dirac(doubleArray0, doubleArray1);
      Random.triangular(1.4765587933829423, (-1321.617), 1700.290472125);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Random.triangular(1323.908189046, (-1.0), 1.0);
      Random.triangular((-2.0), (-999.1649832051835), (-2.0));
      double double0 = (-1223.3071715);
      Random.cauchy((-1223.3071715), (-1511.4280596854785));
      Random.cauchy((-2.0), (-1223.3071715));
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-999.1649832051835);
      doubleArray0[1] = (-1223.3071715);
      doubleArray0[2] = (-15528.210546835626);
      doubleArray0[3] = (-999.1649832051835);
      doubleArray0[4] = 2363.7079609343646;
      Random.dirac(doubleArray0, doubleArray0);
      // Undeclared exception!
      Random.chi2(12345);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Random.logNormal(1.0, (-1.0));
      Random.triangular(1323.908189046, (-1.0), 1.0);
      Random.triangular((-2.0), (-999.1649832051835), (-2.0));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 3.8016218268177857;
      doubleArray0[1] = 3.8016218268177857;
      doubleArray0[2] = 1323.908189046;
      doubleArray0[3] = (-1.0);
      doubleArray0[4] = 2393.3941992561377;
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = (-1223.3071715);
      doubleArray0[7] = (-2.0);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (-1511.5);
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = (-2.0);
      doubleArray1[3] = (-2.0);
      doubleArray1[4] = (-1223.3071715);
      doubleArray1[5] = 1.0993813669505255;
      doubleArray1[6] = 3.8016218268177857;
      doubleArray1[7] = 3.8016218268177857;
      doubleArray1[8] = (-999.1649832051835);
      Random.dirac(doubleArray0, doubleArray1);
      Random.dirac(doubleArray0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Random.weibull(0.0, 0.0);
      Random.beta(Double.POSITIVE_INFINITY, 0.0);
      Random.logNormal(1676.5335245594, 0.0);
      Random.triangular(1676.5335245594, 4.656613E-10, 0.5);
      Random.triangular(Double.POSITIVE_INFINITY, (-1.0), 1.7535160342624931);
      Random.cauchy(0.021602869033813477, 1.9900329301292534);
      Random.cauchy(0.0, (-1380.0));
      Random.randInt(169, 876998948);
      Random.triangular(1676.5335245594, 727.0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Random.triangular(0.0, 0.0, 0.0);
      Random.triangular(2.0, 2837.110347395607, 0.0);
      Random.raw();
      double[] doubleArray0 = new double[8];
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-52.57902790696489);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 2.0;
      Random.dirac(doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 1.0;
      doubleArray1[2] = 2.0;
      doubleArray1[3] = 0.3699412941932678;
      doubleArray1[4] = 1.0;
      Random.dirac(doubleArray1, doubleArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Random.beta(0.0, 2.0);
      // Undeclared exception!
      try { 
        Random.rejection((Function) null, 0.0, 0.0, 1176.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Random.randInt(0, (-2451));
      Random.normal((-2451), 1.0);
      Random.beta(628.5412, 1.0);
      Random.exponential(0.0);
      Random.triangular(0.0, 0.0);
      Random.raw();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 0.9977452202781857;
      Random.dirac(doubleArray0, doubleArray0);
      Random.beta(0.8206126093864441, 0.0);
      Random.raw();
      Random.exponential(Double.POSITIVE_INFINITY);
      Random.normal((-3396.7696), (-2450.7592659522775));
      Random.triangular(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Random.uniform(0.0, 0.0);
      Random.logNormal((-1728.512), (-1889.813734724));
      double double0 = 2532.588848;
      Random.logNormal(0.0, 2532.588848);
      Random.triangular((-2125.3850609), 714.9018730762945);
      Random.triangular((-1728.512), (-3233.43586896), (-1889.813734724));
      Random.triangular((-1889.813734724), (-1872.750986887642));
      Random.chi2((-1234));
      Random.uniform(0.0, 0.0);
      double double1 = 1027.0;
      Random.weibull(1027.0, 1027.0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        Random.dirac(doubleArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Random.triangular((-3579.8371060423065), (-3579.8371060423065), (-271.795));
      Random.logNormal((-2334.391435072212), (-2645.1));
      Random.uniform(0.0, (-2645.1));
      Random.weibull(0.0, 0.0);
      Random.exponential(0.0);
      Random.weibull(0.0, (-2645.1));
      Random.weibull(1972.71338219, 0.0);
      Random.raw();
      Random.exponential(0.0);
      // Undeclared exception!
      try { 
        Random.dirac((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(function0).f(anyDouble());
      Random.rejection(function0, 0.0, 1354.4787676373, 2.0);
      Random.logNormal(554.796726506, 1912.21839);
      Random random0 = new Random();
      Random.exponential(1354.4787676373);
      Random.raw();
      Random.logNormal(9.007199254740992E15, 554.796726506);
      Random.uniform(0.0, (-1064.98105547));
      Random.cauchy(1354.4787676373, (-23.864548968374848));
      Random.randInt(0, 377);
      Random.normal(0.0, 0.0);
      Random.logNormal((-1388.4347659326), 640.4611336313);
      Random.weibull((-1064.98105547), (-75.9192));
      Random.triangular(1912.21839, 4.656613E-10, (-1442.5943521778427));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      Random.chi2(12211);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Random random0 = new Random();
      Random.randInt((-1366), 52774);
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(function0).f(anyDouble());
      Random.rejection(function0, (-4777.537209806), (-4777.537209806), (-4777.537209806));
      Random.normal(1.0, (-2971.9));
      Random.triangular((-1941.362), (-1941.362), (-1941.362));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2162.37);
      doubleArray0[2] = (-2250.5624172499074);
      doubleArray0[3] = (-5041.0);
      doubleArray0[4] = 4235.647808143346;
      doubleArray0[5] = (-2175.01867);
      Random.dirac(doubleArray0, doubleArray0);
      Random.uniform(0.0, (-1768.51));
      Function function1 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(function1).f(anyDouble());
      Random.rejection(function1, (-5041.0), 0.0, 0.0);
      Random.triangular((-2835.4807), (-2175.01867));
      // Undeclared exception!
      Random.chi2(5476);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Random.raw();
      Random.beta(0.769393801689148, 0.769393801689148);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Random.randInt(948, 2);
      Random.exponential(319.204585827239);
      Random.raw();
      Random random0 = new Random();
      Random.normal(912, 948);
      Random.triangular((-1265.20833), 0.0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2496.07330664;
      double double0 = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-717.52002387572);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 2496.07330664;
      doubleArray1[1] = 0.0;
      // Undeclared exception!
      try { 
        Random.dirac(doubleArray0, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Random.triangular((-927.60958222508), (-1092.18));
      Random.cauchy((-1060.691836947223), (-1092.18));
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(function0).f(anyDouble());
      Random.rejection(function0, (-1060.691836947223), (-1092.18), 20111.524857681958);
      Random.logNormal(20111.524857681958, 4650.3585);
      Random.exponential(4650.3585);
      Random.triangular(4.1549194256020495E-4, (-2456.0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Random.triangular((-2624.655921), (-2624.655921));
      Random.uniform(0.0, (-2624.655921));
      Random.raw();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.06515127420425415;
      doubleArray0[1] = 0.06515127420425415;
      doubleArray0[2] = (-2624.655921);
      doubleArray0[3] = (-1490.9066119156619);
      Random.dirac(doubleArray0, doubleArray0);
      Random.triangular(9.007199254740992E15, (-2624.655921));
      Random.uniform(466.0, 0.06515127420425415);
      Random.exponential(3.092309344254277E15);
      Random.triangular(0.0, 4905.487107087929);
      Random.chi2(0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((-664.7342), 0.0, 0.0, 0.0, 0.0).when(function0).f(anyDouble());
      // Undeclared exception!
      Random.rejection(function0, 0.0, 0.0, 2376.321);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = 84.2847;
      double double1 = 2562.49941775423;
      Random.weibull(84.2847, 2562.49941775423);
      Random random0 = new Random();
      MockDate mockDate0 = new MockDate();
      Ranmar ranmar0 = new Ranmar(mockDate0);
      Random.RandEngine = (RandomSeedable) ranmar0;
      Random.cauchy((-1766.604), 0.0);
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(function0).f(anyDouble());
      // Undeclared exception!
      Random.rejection(function0, 2.0, 0.01185945024920074, 2342.9797102);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = 0.0;
      Random.normal(0.0, 0.0);
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(function0).f(anyDouble());
      Random.rejection(function0, 0.0, 0.0, 0.0);
      Function function1 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(function1).f(anyDouble());
      // Undeclared exception!
      Random.rejection(function1, 0.45623308420181274, 0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Random.dirac((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Random.logNormal((-369.1404300516618), (-369.1404300516618));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Random.cauchy(0.0, 0.0);
      double double0 = (-2165.626679);
      Random.triangular((-2165.626679), 609.37152561, (-2165.626679));
      Random.chi2(169);
      Random.exponential(0.0);
      Random.triangular((-2.0), 0.0);
      Random.logNormal((-1.6517393589019775), (-1230.2547407));
      Random.cauchy((-2.0), (-2425.369271));
      Random.uniform((-2425.369271), Double.POSITIVE_INFINITY);
      Random.uniform(1.1131418388362348E-284, 0.0);
      Random.uniform((-277.342697591), 0.0);
      Random.randInt((-600), 169);
      Random.cauchy((-600), (-2165.626679));
      Random.randInt((-21), 1633);
      double double1 = (-2655.2);
      Random.normal((-2655.2), (-600));
      Random.cauchy(6231.942946126457, 6231.942946126457);
      Random.weibull(0.0, 2023.6629064);
      // Undeclared exception!
      try { 
        Random.dirac((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Random.raw();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.8787662982940674;
      doubleArray0[1] = 4001.385948139935;
      Random.dirac(doubleArray0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Random.triangular(0.45623308420181274, 6.283185307179586, 0.45623308420181274);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0;
      Random.dirac(doubleArray0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Random.triangular(3627.64954163, 3627.64954163, (-2162.26035284));
      Random.normal((-2162.26035284), (-4223.342614751129));
      Random.triangular(0.0, (-3447.576564224), (-4249.211545081315));
      Random random0 = new Random();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3627.64954163;
      doubleArray0[1] = (-2162.26035284);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-3447.576564224);
      doubleArray0[4] = (-4223.342614751129);
      doubleArray0[5] = (-4249.211545081315);
      doubleArray0[6] = 3627.64954163;
      doubleArray0[7] = 3627.64954163;
      doubleArray0[8] = 2998.988236706846;
      Random.dirac(doubleArray0, doubleArray0);
      Random.exponential((-4223.342614751129));
      // Undeclared exception!
      Random.beta((-741.39964), 0.0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 1;
      int int1 = (-1);
      Random.randInt(1, (-1));
      double double0 = (-1992.79217211211);
      // Undeclared exception!
      Random.beta((-1992.79217211211), 1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Random.triangular((-179.0), (-179.0));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 0;
      Random.chi2(0);
      Random.triangular(0.0, (double) 0);
      Random.raw();
      double double0 = (-2.0);
      Random.exponential((-2.0));
      double double1 = (-1.0);
      Random.weibull((-1.0), 0.5869019031524658);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        Random.dirac(doubleArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        Random.dirac(doubleArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = (-3073);
      Random.randInt((-3073), (-3073));
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(function0).f(anyDouble());
      Random.rejection(function0, (-3073), (-3073), (-3073));
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        Random.dirac(doubleArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.math.array.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Random.weibull((-2757.814049), (-2757.814049));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Random.weibull((-1.0), (-1.0));
      Random random0 = new Random();
      Random.raw();
      Random.randInt(3, 32);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Random random0 = new Random();
      Random.raw();
      Random.randInt(3, 32);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Random.triangular((-179.0), (-179.0), (-179.0));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      Random.dirac(doubleArray0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Random.cauchy((-1449.94943707), 0.0);
      Random.cauchy(0.0, 2837.110347395607);
      Random.triangular(2.0, 2837.110347395607, 0.0);
      Random.raw();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1449.94943707);
      doubleArray0[1] = (-1449.94943707);
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-64.36207061977814);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 2.0;
      doubleArray0[7] = (-1449.94943707);
      Random.dirac(doubleArray0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Function function0 = mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(function0).f(anyDouble());
      Random.rejection(function0, 0.0, 0.0, 2376.321);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      Random.beta((-179.0), (-179.0));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Random.triangular(0.0, 0.9999998211860657, 1318.96);
      Random.beta(0.0, 3719.732379035236);
      Random.logNormal(3719.732379035236, 4.656613E-10);
      Random.randInt(2799, 2799);
      Random.cauchy((-3602.6309), 454.7530143340184);
      Random.logNormal(1383.435299921, (-27.20638));
      Random.uniform(2940.094, 1509.42144);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Random.cauchy((-369.1404300516618), (-369.1404300516618));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Random.chi2(365);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Random.uniform((-369.1404300516618), (-369.1404300516618));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Random.exponential(3.141592653589793);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Random.raw();
      Random.beta(0.8579042553901672, 0.8579042553901672);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double double0 = 0.0;
      Random.exponential(0.0);
      Random.cauchy(0.0, (-97.155));
      Random.cauchy(4.656613E-10, 4.656613E-10);
      Random.uniform((-48.75472919798157), 4.656613E-10);
      Random.raw();
      Random.exponential((-1.0));
      Random.normal((-1721.53), (-1721.53));
      double double1 = 4.656613E-10;
      // Undeclared exception!
      Random.beta(4.656613E-10, (-48.75472919798157));
  }
}
