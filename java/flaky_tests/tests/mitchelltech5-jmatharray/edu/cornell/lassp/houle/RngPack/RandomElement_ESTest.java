/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 08:22:59 GMT 2022
 */

package edu.cornell.lassp.houle.RngPack;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.cornell.lassp.houle.RngPack.RanMT;
import edu.cornell.lassp.houle.RngPack.RandomElement;
import edu.cornell.lassp.houle.RngPack.RandomJava;
import edu.cornell.lassp.houle.RngPack.RandomShuffle;
import edu.cornell.lassp.houle.RngPack.Ranecu;
import edu.cornell.lassp.houle.RngPack.Ranlux;
import edu.cornell.lassp.houle.RngPack.Ranmar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomElement_ESTest extends RandomElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      assertEquals(26510685690105L, ranecu0.getSeed());
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertNotNull(ranecu0);
      
      boolean boolean0 = ranecu0.coin((double) 12345);
      assertEquals(1060798575102407491L, ranecu0.getSeed());
      assertTrue(boolean0);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar(0L);
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertEquals(54217137, Ranmar.DEFSEED);
      assertNotNull(ranmar0);
      
      double double0 = ranmar0.uniform(0L, 0L);
      assertEquals(0.0, double0, 0.01);
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertEquals(54217137, Ranmar.DEFSEED);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu(40692, 40692);
      assertEquals(87385404604416L, ranecu0.getSeed());
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertNotNull(ranecu0);
      
      double double0 = ranecu0.uniform((-1.0), (-2112.18733097));
      assertEquals(3496639579868691000L, ranecu0.getSeed());
      assertEquals((-2085.0644336787923), double0, 0.01);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      assertEquals(26510685690105L, ranecu0.getSeed());
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertNotNull(ranecu0);
      
      double double0 = ranecu0.raw();
      assertEquals(1060798575102407491L, ranecu0.getSeed());
      assertEquals(0.9435973904241444, double0, 0.01);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      assertNotNull(randomJava0);
      
      double double0 = randomJava0.powlaw(0.07237017154693604, 0.07237017154693604);
      assertEquals(0.0, double0, 0.01);
      
      double double1 = randomJava0.gaussian(0.06006272960880499);
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-0.04819169201090263), double1, 0.01);
      
      boolean boolean0 = randomJava0.coin();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux(16777216, 18);
      assertEquals(3, Ranlux.lxdflt);
      assertEquals(4, Ranlux.maxlev);
      assertNotNull(ranlux0);
      
      double double0 = ranlux0.powlaw(425.507177038574, (-336.41));
      assertEquals((-333.54698997291075), double0, 0.01);
      assertEquals(3, Ranlux.lxdflt);
      assertEquals(4, Ranlux.maxlev);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux(631L);
      assertEquals(3, Ranlux.lxdflt);
      assertEquals(4, Ranlux.maxlev);
      assertNotNull(ranlux0);
      
      double double0 = ranlux0.gaussian(0.0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(3, Ranlux.lxdflt);
      assertEquals(4, Ranlux.maxlev);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      assertNotNull(randomJava0);
      
      double double0 = randomJava0.gaussian(0.06006272960880499);
      assertEquals((-0.038101567276834857), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      assertNotNull(randomJava0);
      
      double[] doubleArray0 = new double[1];
      int int0 = randomJava0.choose(0, (-737399432));
      assertEquals((-737399432), int0);
      
      randomJava0.raw(doubleArray0);
      assertEquals(1, doubleArray0.length);
      assertArrayEquals(new double[] {0.1}, doubleArray0, 0.01);
      
      double double0 = randomJava0.gaussian();
      assertEquals((-0.6343628990056639), double0, 0.01);
      
      double double1 = randomJava0.gaussian();
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-0.9515443485084957), double1, 0.01);
      
      double double2 = randomJava0.gaussian();
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(0.0, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu((-168L));
      assertEquals((-168L), ranecu0.getSeed());
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertNotNull(ranecu0);
      
      int int0 = ranecu0.choose(0, 0);
      assertEquals(2140647143L, ranecu0.getSeed());
      assertEquals(0, int0);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      assertEquals(26510685690105L, ranecu0.getSeed());
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertNotNull(ranecu0);
      
      int int0 = ranecu0.choose(3, 4);
      assertEquals(1060798575102407491L, ranecu0.getSeed());
      assertEquals(3, int0);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar(1242);
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertEquals(54217137, Ranmar.DEFSEED);
      assertNotNull(ranmar0);
      
      int int0 = ranmar0.choose(1242, (-1294));
      assertEquals((-1294), int0);
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertEquals(54217137, Ranmar.DEFSEED);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu(40692, 40692);
      assertEquals(87385404604416L, ranecu0.getSeed());
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertNotNull(ranecu0);
      
      int int0 = ranecu0.choose(0);
      assertEquals(3496639579868691000L, ranecu0.getSeed());
      assertEquals(0, int0);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar(1L);
      assertEquals(54217137, Ranmar.DEFSEED);
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertNotNull(ranmar0);
      
      int int0 = ranmar0.choose(1115);
      assertEquals(956, int0);
      assertEquals(54217137, Ranmar.DEFSEED);
      assertEquals(899999963, Ranmar.BIG_PRIME);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar();
      assertEquals(54217137, Ranmar.DEFSEED);
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertNotNull(ranmar0);
      
      double[] doubleArray0 = new double[8];
      ranmar0.u = doubleArray0;
      // Undeclared exception!
      try { 
        ranmar0.uniform(24, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 96 out of bounds for length 8
         //
         verifyException("edu.cornell.lassp.houle.RngPack.Ranmar", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      assertNotNull(ranMT0);
      
      // Undeclared exception!
      try { 
        ranMT0.raw((double[]) null, 396);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      assertEquals(26510685690105L, ranecu0.getSeed());
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertNotNull(ranecu0);
      
      // Undeclared exception!
      try { 
        ranecu0.raw((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux(0);
      assertEquals(4, Ranlux.maxlev);
      assertEquals(3, Ranlux.lxdflt);
      assertNotNull(ranlux0);
      
      RandomShuffle randomShuffle0 = new RandomShuffle(ranlux0, ranlux0, 0);
      assertEquals(4, Ranlux.maxlev);
      assertEquals(3, Ranlux.lxdflt);
      assertNotNull(randomShuffle0);
      
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        randomShuffle0.raw(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomShuffle", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar(3647L);
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertEquals(54217137, Ranmar.DEFSEED);
      assertNotNull(ranmar0);
      
      ranmar0.j97 = (-603);
      // Undeclared exception!
      try { 
        ranmar0.raw();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -603 out of bounds for length 97
         //
         verifyException("edu.cornell.lassp.houle.RngPack.Ranmar", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      assertEquals(26510685690105L, ranecu0.getSeed());
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertNotNull(ranecu0);
      
      RandomShuffle randomShuffle0 = new RandomShuffle(ranecu0, (RandomElement) null, 356);
      assertEquals(1738097084049413283L, ranecu0.getSeed());
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertNotNull(randomShuffle0);
      
      // Undeclared exception!
      try { 
        randomShuffle0.powlaw(12345, 356);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomShuffle", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      assertEquals(26510685690105L, ranecu0.getSeed());
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertNotNull(ranecu0);
      
      RandomShuffle randomShuffle0 = new RandomShuffle(ranecu0, ranecu0, 0);
      assertEquals(26510685690105L, ranecu0.getSeed());
      assertEquals(12345, Ranecu.DEFSEED1);
      assertEquals(67890, Ranecu.DEFSEED2);
      assertNotNull(randomShuffle0);
      
      // Undeclared exception!
      try { 
        randomShuffle0.powlaw(12345, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomShuffle", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu(0);
      assertEquals(0L, ranecu0.getSeed());
      assertEquals(67890, Ranecu.DEFSEED2);
      assertEquals(12345, Ranecu.DEFSEED1);
      assertNotNull(ranecu0);
      
      // Undeclared exception!
      ranecu0.gaussian(3125.1671217741);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar();
      assertEquals(899999963, Ranmar.BIG_PRIME);
      assertEquals(54217137, Ranmar.DEFSEED);
      assertNotNull(ranmar0);
      
      ranmar0.i97 = 3;
      ranmar0.i97 = 674058191;
      // Undeclared exception!
      try { 
        ranmar0.gaussian((-4523.71442253));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar(19650218L);
      ranmar0.cm = (double) 19650218L;
      // Undeclared exception!
      ranmar0.gaussian();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockDate mockDate0 = new MockDate(901, 205, (-595395056));
      Ranmar ranmar0 = new Ranmar(mockDate0);
      ranmar0.j97 = (-2428);
      // Undeclared exception!
      try { 
        ranmar0.gaussian();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux(0);
      float[] floatArray0 = new float[3];
      ranlux0.seeds = floatArray0;
      // Undeclared exception!
      try { 
        ranlux0.coin(3369.1062095877905);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 10 out of bounds for length 3
         //
         verifyException("edu.cornell.lassp.houle.RngPack.Ranlux", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      RandomShuffle randomShuffle0 = new RandomShuffle(ranecu0, ranecu0, 0);
      // Undeclared exception!
      try { 
        randomShuffle0.coin();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomShuffle", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux(601);
      ranlux0.i24 = 601;
      // Undeclared exception!
      try { 
        ranlux0.choose((-187), 601);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 601 out of bounds for length 25
         //
         verifyException("edu.cornell.lassp.houle.RngPack.Ranlux", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar(19650218L);
      ranmar0.j97 = 1830;
      // Undeclared exception!
      try { 
        ranmar0.choose(232);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1830 out of bounds for length 97
         //
         verifyException("edu.cornell.lassp.houle.RngPack.Ranmar", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        ranMT0.raw(doubleArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("edu.cornell.lassp.houle.RngPack.RandomElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      double[] doubleArray0 = new double[3];
      ranMT0.raw(doubleArray0, (-1565));
      assertEquals(3, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar();
      double double0 = ranmar0.uniform(24, 0.0);
      assertEquals(21.20661449432373, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      double double0 = ranMT0.gaussian();
      assertEquals(1.5843287351030029, double0, 0.01);
      
      double double1 = ranMT0.gaussian();
      assertEquals(0.24406169383630635, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Ranlux ranlux0 = new Ranlux(0);
      boolean boolean0 = ranlux0.coin((double) 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomJava randomJava0 = new RandomJava();
      boolean boolean0 = randomJava0.coin();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RanMT ranMT0 = new RanMT();
      boolean boolean0 = ranMT0.coin(0.9997417504028957);
      assertTrue(boolean0);
      
      double double0 = ranMT0.gaussian();
      assertEquals((-0.945379331377785), double0, 0.01);
      
      boolean boolean1 = ranMT0.coin();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      double double0 = ranecu0.powlaw(0.5226899981498718, 0.5226899981498718);
      assertEquals(0.5031364913592963, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      Ranecu ranecu1 = (Ranecu)ranecu0.clone();
      assertEquals(12345, Ranecu.DEFSEED1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Ranecu ranecu0 = new Ranecu();
      int int0 = ranecu0.choose((-393));
      assertEquals((-393), int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Ranmar ranmar0 = new Ranmar();
      double double0 = ranmar0.gaussian((-4523.71442253));
      assertEquals(911.3875973468653, double0, 0.01);
  }
}
