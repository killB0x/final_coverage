/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:25:59 GMT 2022
 */

package com.contentful.java.cda;

import org.junit.Test;
import static org.junit.Assert.*;
import com.contentful.java.cda.QueryOperation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QueryOperation_ESTest extends QueryOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QueryOperation.BoundingCircle queryOperation_BoundingCircle0 = new QueryOperation.BoundingCircle((-682.9722283891), 134.45458011, 1.0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QueryOperation.BoundingBox queryOperation_BoundingBox0 = new QueryOperation.BoundingBox(0.0, 0.0, 1539.084, (-129.3648));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QueryOperation.Location queryOperation_Location0 = new QueryOperation.Location(1527.5784, 1.0);
      QueryOperation.Location queryOperation_Location1 = new QueryOperation.Location(0.0, 1.0);
      QueryOperation.BoundingBox queryOperation_BoundingBox0 = new QueryOperation.BoundingBox(queryOperation_Location0, queryOperation_Location1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QueryOperation.Location queryOperation_Location0 = new QueryOperation.Location(2099.85, (-682.9722283891));
      String string0 = queryOperation_Location0.toString();
      assertEquals("2099.850000,-682.972228", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      QueryOperation<Object> queryOperation0 = new QueryOperation<Object>("0.000000,0.000000,0.000000", object0);
      boolean boolean0 = queryOperation0.hasDefaultValue();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QueryOperation<Integer> queryOperation0 = QueryOperation.IsLessThanOrEqualTo;
      boolean boolean0 = queryOperation0.hasDefaultValue();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QueryOperation.BoundingBox queryOperation_BoundingBox0 = new QueryOperation.BoundingBox(1.0, 134.45458011, 134.45458011, 1.0);
      String string0 = queryOperation_BoundingBox0.toString();
      assertEquals("1.000000,134.454580,134.454580,1.000000", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      QueryOperation.BoundingCircle queryOperation_BoundingCircle0 = new QueryOperation.BoundingCircle(0.0, 0.0, 0.0);
      String string0 = queryOperation_BoundingCircle0.toString();
      assertEquals("0.000000,0.000000,0.000000", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      QueryOperation.Location queryOperation_Location0 = new QueryOperation.Location(2843.717532110657, 2843.717532110657);
      QueryOperation.BoundingCircle queryOperation_BoundingCircle0 = new QueryOperation.BoundingCircle(queryOperation_Location0, 2843.717532110657);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      QueryOperation<Object> queryOperation0 = new QueryOperation<Object>("T\"'|+J[i{t}/=");
  }
}
