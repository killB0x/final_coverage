/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:22:33 GMT 2022
 */

package com.contentful.java.cda;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cda.CDAAsset;
import com.contentful.java.cda.CDAMetadata;
import com.contentful.java.cda.image.ImageOption;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CDAAsset_ESTest extends CDAAsset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImageOption[] imageOptionArray0 = new ImageOption[23];
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.attrs = (Map<String, Object>) hashMap0;
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith(imageOptionArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Asset does not have an image mime type.
         //
         verifyException("com.contentful.java.cda.CDAAsset", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImageOption[] imageOptionArray0 = new ImageOption[1];
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      cDAAsset0.fallbackLocaleMap = (Map<String, String>) hashMap1;
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith(imageOptionArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Asset does not have an image mime type.
         //
         verifyException("com.contentful.java.cda.CDAAsset", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImageOption[] imageOptionArray0 = new ImageOption[17];
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.rawFields = (Map<String, Object>) hashMap0;
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith(imageOptionArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Asset does not have an image mime type.
         //
         verifyException("com.contentful.java.cda.CDAAsset", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImageOption[] imageOptionArray0 = new ImageOption[17];
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.defaultLocale = "|*Z";
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith(imageOptionArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Asset does not have an image mime type.
         //
         verifyException("com.contentful.java.cda.CDAAsset", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      String string0 = cDAAsset0.url();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      String string0 = cDAAsset0.title();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      String string0 = cDAAsset0.mimeType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImageOption[] imageOptionArray0 = new ImageOption[1];
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("file", cDAAsset0);
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith(imageOptionArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.contentful.java.cda.CDAAsset cannot be cast to class java.util.Map (com.contentful.java.cda.CDAAsset is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @304e87ca; java.util.Map is in module java.base of loader 'bootstrap')
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("file", "file");
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.url();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.util.Map (java.lang.String and java.util.Map are in module java.base of loader 'bootstrap')
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("title", cDAAsset0);
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.title();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.contentful.java.cda.CDAAsset cannot be cast to class java.util.Map (com.contentful.java.cda.CDAAsset is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @304e87ca; java.util.Map is in module java.base of loader 'bootstrap')
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("file", cDAAsset0);
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.mimeType();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.contentful.java.cda.CDAAsset cannot be cast to class java.util.Map (com.contentful.java.cda.CDAAsset is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @304e87ca; java.util.Map is in module java.base of loader 'bootstrap')
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      // Undeclared exception!
      try { 
        cDAAsset0.fileField("+AF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      String string0 = cDAAsset0.fileField("jpg");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      // Undeclared exception!
      try { 
        cDAAsset0.mimeType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      CDAMetadata cDAMetadata0 = cDAAsset0.metadata();
      assertNull(cDAMetadata0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      // Undeclared exception!
      try { 
        cDAAsset0.title();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      ImageOption[] imageOptionArray0 = new ImageOption[0];
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith(imageOptionArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Do not use empty options argument. If you want to manipulate the url by hand, please use `CDAAsset.url()` instead.
         //
         verifyException("com.contentful.java.cda.CDAAsset", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith((ImageOption[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Do not use empty options argument. If you want to manipulate the url by hand, please use `CDAAsset.url()` instead.
         //
         verifyException("com.contentful.java.cda.CDAAsset", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImageOption[] imageOptionArray0 = new ImageOption[1];
      CDAAsset cDAAsset0 = new CDAAsset();
      // Undeclared exception!
      try { 
        cDAAsset0.urlForImageWith(imageOptionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      cDAAsset0.fields = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.attrs = (Map<String, Object>) hashMap0;
      cDAAsset0.fields = (Map<String, Object>) hashMap0;
      String string0 = cDAAsset0.toString();
      assertEquals("CDAAsset{id='null', title='null', metadata='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      // Undeclared exception!
      try { 
        cDAAsset0.url();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CDAAsset cDAAsset0 = new CDAAsset();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAAsset0.attrs = (Map<String, Object>) hashMap0;
      // Undeclared exception!
      try { 
        cDAAsset0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.LocalizedResource$Localizer", e);
      }
  }
}
