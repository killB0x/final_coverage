/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:20:29 GMT 2022
 */

package com.contentful.java.cda.image;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cda.image.ImageOption;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImageOption_ESTest extends ImageOption_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.backgroundColorOf(1, 4, 1);
      assertEquals("bg", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.backgroundColorOf(100, 100, 0);
      assertEquals("bg", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf(255, 255, 2192);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blue component out of range: 2192
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf(0, 3292, 1672);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Green component out of range: 3292
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.roundedCornerRadiusOf(0.0F);
      assertEquals("r", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.heightOf(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Height has to be positive.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.widthOf(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width has to be positive.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.jpegQualityOf(3);
      assertEquals("q", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImageOption.Focus imageOption_Focus0 = ImageOption.Focus.face;
      ImageOption imageOption0 = ImageOption.focusOn(imageOption_Focus0);
      assertEquals("f", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImageOption.Resize imageOption_Resize0 = ImageOption.Resize.thumb;
      ImageOption imageOption0 = ImageOption.fitOf(imageOption_Resize0);
      assertEquals("fit", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.https();
      String string0 = imageOption0.apply("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.formatOf((ImageOption.Format) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.http();
      // Undeclared exception!
      try { 
        imageOption0.apply((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.backgroundColorOf(16777215);
      assertEquals("bg", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImageOption.Format imageOption_Format0 = ImageOption.Format.png;
      String string0 = imageOption_Format0.toUrlParameter();
      assertEquals("png", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImageOption.Format imageOption_Format0 = ImageOption.Format.png8;
      String string0 = imageOption_Format0.toUrlParameter();
      assertEquals("png&fl=png8", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.https();
      String string0 = imageOption0.apply("////*ekf--|i{RD|x");
      assertEquals("https:////*ekf--|i{RD|x", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.http();
      String string0 = imageOption0.apply("//i\"nR%>");
      assertEquals("http://i\"nR%>", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.backgroundColorOf(1, 1, 255);
      assertEquals("bg", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf(182, (-1095), 182);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Green component out of range: -1095
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf((-79242939), (-1), 617);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Red component out of range: -79242939
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf(255, 0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blue component out of range: -1
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf(5581, 5581, 5581);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Red component out of range: 5581
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf(2146340840);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Color must be in rgb hex range of 0x0 to 0xFFFFFF.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.backgroundColorOf((-1638));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Color must be in rgb hex range of 0x0 to 0xFFFFFF.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.roundedCornerRadiusOf((-306.314F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Radius is negative.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.roundedCornerRadiusOf(204.636F);
      assertEquals("r", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.heightOf((-2130));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Height has to be positive.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.heightOf(1539);
      assertEquals("h", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.widthOf((-852));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width has to be positive.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.widthOf(2146340840);
      assertEquals("w", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.jpegQualityOf(100);
      String string0 = imageOption0.apply("");
      assertEquals("?q=100", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.jpegQualityOf(362);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Quality has to be in the range from 1 to 100.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.jpegQualityOf((-2549));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Quality has to be in the range from 1 to 100.
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImageOption.Format imageOption_Format0 = ImageOption.Format.png8;
      ImageOption imageOption0 = ImageOption.formatOf(imageOption_Format0);
      assertEquals("fm", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.fitOf((ImageOption.Resize) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageOption.focusOn((ImageOption.Focus) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.image.ImageOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.blackBackgroundColor();
      imageOption0.apply(")_NX0%B[E9?L@0z");
      assertEquals("bg", imageOption0.getOperation());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.http();
      String string0 = imageOption0.apply("(%");
      assertEquals("(%", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ImageOption imageOption0 = ImageOption.https();
      String string0 = imageOption0.getOperation();
      assertEquals("https", string0);
  }
}
