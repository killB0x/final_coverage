/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:38:25 GMT 2022
 */

package com.contentful.java.cda;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contentful.java.cda.CDAContentType;
import com.contentful.java.cda.CDAField;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CDAContentType_ESTest extends CDAContentType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      cDAContentType0.displayField = "";
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAContentType0.attrs = (Map<String, Object>) hashMap0;
      String string0 = cDAContentType0.toString();
      assertEquals("CDAContentType{id='null', name='null', description='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      cDAContentType0.attrs = (Map<String, Object>) hashMap0;
      cDAContentType0.name = "H$U?BSvVpkhba8";
      String string0 = cDAContentType0.toString();
      assertEquals("CDAContentType{id='null', name='H$U?BSvVpkhba8', description='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      cDAContentType0.name = "H$U?BSvVpkhba8";
      String string0 = cDAContentType0.name();
      assertEquals("H$U?BSvVpkhba8", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      cDAContentType0.name = "";
      String string0 = cDAContentType0.name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      LinkedList<CDAField> linkedList0 = new LinkedList<CDAField>();
      cDAContentType0.fields = (List<CDAField>) linkedList0;
      List<CDAField> list0 = cDAContentType0.fields();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      LinkedList<CDAField> linkedList0 = new LinkedList<CDAField>();
      CDAField cDAField0 = new CDAField();
      linkedList0.add(cDAField0);
      cDAContentType0.fields = (List<CDAField>) linkedList0;
      List<CDAField> list0 = cDAContentType0.fields();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      cDAContentType0.displayField = "";
      cDAContentType0.displayField = "~O";
      String string0 = cDAContentType0.displayField();
      assertEquals("~O", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      cDAContentType0.displayField = "";
      String string0 = cDAContentType0.displayField();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      cDAContentType0.description = "K";
      String string0 = cDAContentType0.description();
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      cDAContentType0.description = "K";
      cDAContentType0.description = "K";
      cDAContentType0.description = "BBm";
      cDAContentType0.description = "";
      String string0 = cDAContentType0.description();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      String string0 = cDAContentType0.name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      // Undeclared exception!
      try { 
        cDAContentType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contentful.java.cda.CDAResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      String string0 = cDAContentType0.displayField();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      List<CDAField> list0 = cDAContentType0.fields();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CDAContentType cDAContentType0 = new CDAContentType();
      String string0 = cDAContentType0.description();
      assertNull(string0);
  }
}
