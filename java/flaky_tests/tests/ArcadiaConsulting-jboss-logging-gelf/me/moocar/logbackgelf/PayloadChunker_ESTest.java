/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 12:45:43 GMT 2022
 */

package me.moocar.logbackgelf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import me.moocar.logbackgelf.ChunkFactory;
import me.moocar.logbackgelf.MessageIdProvider;
import me.moocar.logbackgelf.PayloadChunker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PayloadChunker_ESTest extends PayloadChunker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ChunkFactory chunkFactory0 = new ChunkFactory(byteArray0, true);
      PayloadChunker payloadChunker0 = new PayloadChunker((-2967), 0, (MessageIdProvider) null, chunkFactory0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PayloadChunker payloadChunker0 = new PayloadChunker((-173), (-173), (MessageIdProvider) null, (ChunkFactory) null);
      // Undeclared exception!
      try { 
        payloadChunker0.chunkIt((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("me.moocar.logbackgelf.PayloadChunker", e);
      }
  }
}
