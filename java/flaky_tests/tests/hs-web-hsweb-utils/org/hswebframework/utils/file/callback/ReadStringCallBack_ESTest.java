/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 18:50:40 GMT 2022
 */

package org.hswebframework.utils.file.callback;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hswebframework.utils.file.callback.ReadStringCallBack;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReadStringCallBack_ESTest extends ReadStringCallBack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReadStringCallBack readStringCallBack0 = new ReadStringCallBack();
      readStringCallBack0.builder = null;
      // Undeclared exception!
      try { 
        readStringCallBack0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hswebframework.utils.file.callback.ReadStringCallBack", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReadStringCallBack readStringCallBack0 = new ReadStringCallBack();
      readStringCallBack0.builder = null;
      // Undeclared exception!
      try { 
        readStringCallBack0.readLine(0, "qN'B'W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hswebframework.utils.file.callback.ReadStringCallBack", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReadStringCallBack readStringCallBack0 = new ReadStringCallBack();
      readStringCallBack0.readLine(537, "}_E}~<sX`_A6[");
      String string0 = readStringCallBack0.toString();
      assertEquals("}_E}~<sX`_A6[\n", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReadStringCallBack readStringCallBack0 = new ReadStringCallBack();
      String string0 = readStringCallBack0.toString();
      assertEquals("", string0);
  }
}
