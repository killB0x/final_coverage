/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:23:52 GMT 2022
 */

package org.gatein.api.site;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EnumSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gatein.api.common.Filter;
import org.gatein.api.common.Pagination;
import org.gatein.api.common.Sorting;
import org.gatein.api.site.Site;
import org.gatein.api.site.SiteQuery;
import org.gatein.api.site.SiteType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SiteQuery_ESTest extends SiteQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPagination(599, (-5));
      SiteQuery siteQuery0 = siteQuery_Builder1.build();
      SiteQuery siteQuery1 = siteQuery0.nextPage();
      assertFalse(siteQuery0.isIncludeEmptySites());
      assertFalse(siteQuery1.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteType siteType0 = SiteType.SPACE;
      SiteType[] siteTypeArray0 = new SiteType[6];
      // Undeclared exception!
      try { 
        siteQuery_Builder0.withSiteTypes(siteType0, siteTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.EnumSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteType[] siteTypeArray0 = new SiteType[0];
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withSiteTypes(siteQuery_Builder0.DEFAULT_SITE_TYPE, siteTypeArray0);
      assertSame(siteQuery_Builder0, siteQuery_Builder1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      siteQuery_Builder0.includeEmptySites(true);
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery0.previousPage();
      assertTrue(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      siteQuery_Builder0.includeEmptySites(true);
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery0.nextPage();
      assertTrue(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      siteQuery_Builder0.includeEmptySites(true);
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      boolean boolean0 = siteQuery0.isIncludeEmptySites();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPagination((Pagination) null);
      SiteQuery siteQuery0 = siteQuery_Builder1.build();
      Pagination pagination0 = siteQuery0.getPagination();
      assertFalse(siteQuery0.isIncludeEmptySites());
      assertNull(pagination0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPagination((-3585), (-3585));
      SiteQuery siteQuery0 = siteQuery_Builder1.build();
      Pagination pagination0 = siteQuery0.getPagination();
      assertEquals(2, pagination0.getPageNumber());
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPagination(599, (-5));
      SiteQuery siteQuery0 = siteQuery_Builder1.build();
      Pagination pagination0 = siteQuery0.getPagination();
      assertEquals((-118), pagination0.getPageNumber());
      assertEquals(599, pagination0.getOffset());
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPreviousPage();
      assertEquals(15, SiteQuery.Builder.DEFAULT_LIMIT);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withNextPage();
      assertEquals(15, SiteQuery.Builder.DEFAULT_LIMIT);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery0.getFilter();
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      Sorting.Order sorting_Order0 = Sorting.Order.descending;
      Sorting<Site> sorting0 = new Sorting<Site>(sorting_Order0);
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withSorting(sorting0);
      assertEquals(15, SiteQuery.Builder.DEFAULT_LIMIT);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery0.getSiteTypes();
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery0.getSorting();
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery_Builder0.from(siteQuery0);
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      boolean boolean0 = siteQuery0.isIncludeEmptySites();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery0.getPagination();
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withFilter((Filter<Site>) null);
      assertEquals(15, SiteQuery.Builder.DEFAULT_LIMIT);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      Class<SiteType> class0 = SiteType.class;
      EnumSet<SiteType> enumSet0 = EnumSet.noneOf(class0);
      siteQuery_Builder0.withSiteTypes(enumSet0);
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      siteQuery_Builder0.withPagination((Pagination) null);
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPreviousPage();
      assertEquals(15, SiteQuery.Builder.DEFAULT_LIMIT);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPagination((Pagination) null);
      SiteQuery.Builder siteQuery_Builder2 = siteQuery_Builder1.withNextPage();
      assertSame(siteQuery_Builder2, siteQuery_Builder0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      SiteQuery siteQuery1 = siteQuery0.previousPage();
      assertFalse(siteQuery1.isIncludeEmptySites());
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      siteQuery_Builder0.descending();
      SiteQuery siteQuery0 = siteQuery_Builder0.build();
      siteQuery0.getSorting();
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withPagination(1, (-1262));
      siteQuery_Builder0.withPreviousPage();
      SiteQuery siteQuery0 = siteQuery_Builder1.build();
      Pagination pagination0 = siteQuery0.getPagination();
      assertEquals(1263, pagination0.getOffset());
      assertFalse(siteQuery0.isIncludeEmptySites());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.ascending();
      assertSame(siteQuery_Builder0, siteQuery_Builder1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SiteQuery.Builder siteQuery_Builder0 = new SiteQuery.Builder();
      SiteQuery.Builder siteQuery_Builder1 = siteQuery_Builder0.withAllSiteTypes();
      assertSame(siteQuery_Builder1, siteQuery_Builder0);
  }
}
