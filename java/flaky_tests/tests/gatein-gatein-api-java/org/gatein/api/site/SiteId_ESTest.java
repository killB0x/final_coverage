/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:06:24 GMT 2022
 */

package org.gatein.api.site;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Formatter;
import java.util.FormatterClosedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gatein.api.page.PageId;
import org.gatein.api.security.Group;
import org.gatein.api.security.User;
import org.gatein.api.site.SiteId;
import org.gatein.api.site.SiteType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SiteId_ESTest extends SiteId_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SiteId siteId0 = new SiteId("type=0000, name=");
      Formatter formatter0 = new Formatter();
      siteId0.formatTo(formatter0, 2147483615, 2147483615, 2147483615);
      assertEquals("site.type=0000, name=", formatter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SiteId siteId0 = new SiteId("");
      String string0 = siteId0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SiteId siteId0 = new SiteId("Site.Id[type=Nr(Xf9)8KMS");
      // Undeclared exception!
      try { 
        siteId0.page((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // pageName cannot be null
         //
         verifyException("org.gatein.api.internal.Parameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        SiteId.fromString("Site.Id[type=");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SiteId siteId0 = new SiteId("type=0000, name=");
      Formatter formatter0 = new Formatter();
      formatter0.close();
      // Undeclared exception!
      try { 
        siteId0.formatTo(formatter0, 2147483591, 2147483591, 2147483591);
        fail("Expecting exception: FormatterClosedException");
      
      } catch(FormatterClosedException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SiteId siteId0 = new SiteId("F_^xy$l6S");
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Formatter formatter0 = new Formatter(charBuffer0);
      // Undeclared exception!
      try { 
        siteId0.formatTo(formatter0, 1415, 1415, 1415);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SiteType siteType0 = SiteType.DASHBOARD;
      SiteId siteId0 = null;
      try {
        siteId0 = new SiteId(siteType0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("org.gatein.api.internal.Parameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = User.anonymous();
      SiteId siteId0 = null;
      try {
        siteId0 = new SiteId(user0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("org.gatein.api.internal.Parameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Group group0 = new Group(stringArray0);
      SiteId siteId0 = null;
      try {
        siteId0 = new SiteId(group0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("org.gatein.api.internal.Parameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SiteId siteId0 = null;
      try {
        siteId0 = new SiteId((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("org.gatein.api.internal.Parameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SiteId siteId0 = new SiteId("type=0000, naOme=");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "type=0000, naOme=");
      Formatter formatter0 = new Formatter(charBuffer0);
      // Undeclared exception!
      try { 
        siteId0.formatTo(formatter0, 2, 2, 2);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Group group0 = new Group("Site.Id[type=Site.Id[type=ynG3VI");
      SiteId siteId0 = new SiteId(group0);
      assertEquals(SiteType.SPACE, siteId0.getType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User("type=0000, name=");
      SiteId siteId0 = new SiteId(user0);
      assertEquals("type=0000, name=", siteId0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        SiteId.fromString("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown syntax for id string 
         //
         verifyException("org.gatein.api.site.SiteId", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SiteId siteId0 = SiteId.fromString("Site.Id[type=space, name=>H|<^J]");
      assertEquals(">H|<^J", siteId0.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SiteId siteId0 = new SiteId("Sire.Id[type=");
      // Undeclared exception!
      try { 
        siteId0.formatTo((Formatter) null, (-1), (-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gatein.api.site.SiteId", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SiteId siteId0 = new SiteId("Sire.Id[type=");
      SiteType siteType0 = SiteType.SPACE;
      SiteId siteId1 = new SiteId(siteType0, "Sire.Id[type=");
      boolean boolean0 = siteId0.equals(siteId1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SiteId siteId0 = new SiteId("Sire.Idltype=");
      SiteId siteId1 = new SiteId("Sire.Idltype=");
      boolean boolean0 = siteId0.equals(siteId1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SiteId siteId0 = new SiteId("type");
      SiteId siteId1 = new SiteId("Site.Id[type=site, name=type]");
      boolean boolean0 = siteId0.equals(siteId1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SiteType siteType0 = SiteType.SPACE;
      SiteId siteId0 = new SiteId(siteType0, "u6~8c43nr||");
      Object object0 = new Object();
      boolean boolean0 = siteId0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SiteId siteId0 = new SiteId("Uire.Id[O6type9");
      boolean boolean0 = siteId0.equals(siteId0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SiteType siteType0 = SiteType.SPACE;
      SiteId siteId0 = new SiteId(siteType0, "u6~8c43nr||");
      boolean boolean0 = siteId0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SiteId siteId0 = new SiteId("oVf4");
      String string0 = siteId0.getName();
      assertEquals("oVf4", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SiteId siteId0 = null;
      try {
        siteId0 = new SiteId((Group) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gatein.api.site.SiteId", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SiteType siteType0 = SiteType.SPACE;
      SiteId siteId0 = new SiteId(siteType0, ">H|<^J");
      PageId pageId0 = siteId0.page("q> G");
      assertEquals("q> G", pageId0.getPageName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SiteId siteId0 = null;
      try {
        siteId0 = new SiteId((User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gatein.api.site.SiteId", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SiteType siteType0 = SiteType.SPACE;
      SiteId siteId0 = new SiteId(siteType0, ">H|<^J");
      siteId0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SiteId siteId0 = new SiteId("org.gatein.a%p");
      SiteType siteType0 = siteId0.getType();
      assertEquals("site", siteType0.getName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SiteType siteType0 = SiteType.SPACE;
      SiteId siteId0 = new SiteId(siteType0, ">H|<^J");
      String string0 = siteId0.toString();
      assertEquals("Site.Id[type=space, name=>H|<^J]", string0);
  }
}
