/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:26:06 GMT 2022
 */

package org.gatein.api.page;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gatein.api.common.Filter;
import org.gatein.api.common.Pagination;
import org.gatein.api.page.Page;
import org.gatein.api.page.PageQuery;
import org.gatein.api.site.SiteId;
import org.gatein.api.site.SiteType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PageQuery_ESTest extends PageQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withPagination(886, 886);
      PageQuery.Builder pageQuery_Builder2 = pageQuery_Builder1.withNextPage();
      assertSame(pageQuery_Builder1, pageQuery_Builder2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      SiteType siteType0 = SiteType.SPACE;
      pageQuery_Builder0.withSiteType(siteType0);
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      SiteType siteType1 = pageQuery0.getSiteType();
      assertEquals("space", siteType1.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      pageQuery_Builder0.withSiteName("filter");
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      String string0 = pageQuery0.getSiteName();
      assertEquals("filter", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      pageQuery_Builder0.withSiteName("");
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      String string0 = pageQuery0.getSiteName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withPagination((-1), (-1));
      PageQuery pageQuery0 = pageQuery_Builder1.build();
      PageQuery pageQuery1 = pageQuery0.previousPage();
      PageQuery pageQuery2 = pageQuery1.previousPage();
      Pagination pagination0 = pageQuery2.getPagination();
      assertEquals(1, pagination0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      pageQuery_Builder0.withPagination(15, (-924));
      pageQuery_Builder0.withPreviousPage();
      pageQuery_Builder0.withPreviousPage();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      Pagination pagination0 = pageQuery0.getPagination();
      assertEquals(1863, pagination0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withPagination((-1), (-1));
      PageQuery pageQuery0 = pageQuery_Builder1.build();
      Pagination pagination0 = pageQuery0.getPagination();
      assertEquals(2, pagination0.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withDisplayName("t<JF!^[vTCM:4'8p<~");
      PageQuery pageQuery0 = pageQuery_Builder1.build();
      String string0 = pageQuery0.getDisplayName();
      assertEquals("t<JF!^[vTCM:4'8p<~", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      pageQuery_Builder0.withNextPage();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      Pagination pagination0 = pageQuery0.getPagination();
      assertEquals(2, pagination0.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      pageQuery0.getSiteType();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withFilter((Filter<Page>) null);
      assertSame(pageQuery_Builder1, pageQuery_Builder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      String string0 = pageQuery0.getSiteName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      Filter<Page> filter0 = pageQuery0.getFilter();
      assertNull(filter0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.from(pageQuery0);
      assertEquals(15, PageQuery.Builder.DEFAULT_LIMIT);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      String string0 = pageQuery0.getDisplayName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      Pagination pagination0 = pageQuery0.getPagination();
      assertEquals(1, pagination0.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      pageQuery_Builder0.withPagination((Pagination) null);
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withPreviousPage();
      assertEquals(15, PageQuery.Builder.DEFAULT_LIMIT);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withPagination((Pagination) null);
      PageQuery.Builder pageQuery_Builder2 = pageQuery_Builder0.withNextPage();
      assertSame(pageQuery_Builder2, pageQuery_Builder1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      String string0 = pageQuery0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery pageQuery0 = pageQuery_Builder0.build();
      PageQuery pageQuery1 = pageQuery0.nextPage();
      assertNull(pageQuery1.getDisplayName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withDisplayName("");
      PageQuery pageQuery0 = pageQuery_Builder1.build();
      String string0 = pageQuery0.getDisplayName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PageQuery.Builder pageQuery_Builder0 = new PageQuery.Builder();
      SiteType siteType0 = SiteType.SITE;
      SiteId siteId0 = new SiteId(siteType0, "");
      PageQuery.Builder pageQuery_Builder1 = pageQuery_Builder0.withSiteId(siteId0);
      assertEquals(15, PageQuery.Builder.DEFAULT_LIMIT);
  }
}
