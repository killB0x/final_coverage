/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:11:08 GMT 2022
 */

package org.gatein.api.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gatein.api.common.Pagination;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pagination_ESTest extends Pagination_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Pagination pagination0 = new Pagination((-5156), (-5156));
      Pagination pagination1 = pagination0.getPrevious();
      boolean boolean0 = pagination1.equals(pagination0);
      assertEquals((-5156), pagination0.getLimit());
      assertFalse(boolean0);
      assertFalse(pagination0.equals((Object)pagination1));
      assertEquals(0, pagination1.getOffset());
      assertEquals((-5156), pagination1.getLimit());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Pagination pagination0 = new Pagination(1384, 1384);
      Pagination pagination1 = new Pagination(1384, (-806));
      boolean boolean0 = pagination1.equals(pagination0);
      assertEquals(1384, pagination1.getOffset());
      assertEquals((-806), pagination1.getLimit());
      assertFalse(boolean0);
      assertFalse(pagination0.equals((Object)pagination1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pagination pagination0 = new Pagination((-261), 446);
      Pagination pagination1 = pagination0.getPrevious();
      Pagination pagination2 = pagination1.getNext();
      int int0 = pagination2.getPageNumber();
      assertEquals(1, pagination1.getPageNumber());
      assertEquals(446, pagination2.getLimit());
      assertEquals(2, int0);
      assertEquals(446, pagination2.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pagination pagination0 = new Pagination((-242), (-242));
      Pagination pagination1 = pagination0.getPrevious();
      Pagination pagination2 = pagination1.getPrevious();
      int int0 = pagination2.getPageNumber();
      assertEquals(0, int0);
      assertEquals(242, pagination2.getOffset());
      assertEquals(2, pagination0.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Pagination pagination0 = new Pagination((-242), (-242));
      Pagination pagination1 = pagination0.getPrevious();
      Pagination pagination2 = pagination1.getPrevious();
      Pagination pagination3 = pagination2.getPrevious();
      int int0 = pagination3.getPageNumber();
      assertEquals(2, pagination0.getPageNumber());
      assertEquals(484, pagination3.getOffset());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Pagination pagination0 = new Pagination((-261), 446);
      Pagination pagination1 = pagination0.getPrevious();
      int int0 = pagination1.getOffset();
      assertEquals(0, int0);
      assertEquals((-261), pagination0.getOffset());
      assertEquals(446, pagination1.getLimit());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pagination pagination0 = new Pagination((-1), (-1));
      Pagination pagination1 = pagination0.getPrevious();
      Pagination pagination2 = pagination1.getPrevious();
      int int0 = pagination2.getOffset();
      assertEquals(1, int0);
      assertEquals((-1), pagination2.getLimit());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pagination pagination0 = new Pagination(0, (-1751));
      Pagination pagination1 = pagination0.getPrevious();
      Pagination pagination2 = pagination1.getPrevious();
      Pagination pagination3 = pagination2.getNext();
      assertTrue(pagination3.equals((Object)pagination1));
      assertEquals(0, pagination3.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pagination pagination0 = new Pagination((-1), (-1));
      Pagination pagination1 = pagination0.getPrevious();
      Pagination pagination2 = pagination1.getPrevious();
      Pagination pagination3 = pagination2.getNext();
      assertTrue(pagination3.equals((Object)pagination1));
      assertEquals(1, pagination2.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pagination pagination0 = new Pagination((-261), 446);
      int int0 = pagination0.getLimit();
      assertEquals(446, int0);
      assertEquals((-261), pagination0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pagination pagination0 = new Pagination((-1), (-1));
      Pagination pagination1 = pagination0.getNext();
      int int0 = pagination1.getPageNumber();
      assertEquals(1, int0);
      assertEquals(2, pagination0.getPageNumber());
      assertEquals((-2), pagination1.getOffset());
      assertEquals((-1), pagination1.getLimit());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Pagination pagination0 = new Pagination((-242), (-242));
      int int0 = pagination0.getOffset();
      assertEquals((-242), int0);
      assertEquals((-242), pagination0.getLimit());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Pagination pagination0 = new Pagination((-242), (-242));
      int int0 = pagination0.getLimit();
      assertEquals((-242), pagination0.getOffset());
      assertEquals((-242), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Pagination pagination0 = new Pagination((-1885), (-1885));
      Pagination pagination1 = pagination0.getPrevious();
      Pagination pagination2 = pagination1.getNext();
      boolean boolean0 = pagination2.equals(pagination0);
      assertFalse(pagination1.equals((Object)pagination0));
      assertEquals((-1885), pagination2.getLimit());
      assertTrue(boolean0);
      assertFalse(pagination2.equals((Object)pagination1));
      assertEquals((-1885), pagination1.getLimit());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Pagination pagination0 = new Pagination((-261), 446);
      Pagination pagination1 = new Pagination(0, (-261));
      boolean boolean0 = pagination0.equals(pagination1);
      assertEquals((-261), pagination0.getOffset());
      assertFalse(boolean0);
      assertEquals((-261), pagination1.getLimit());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Pagination pagination0 = new Pagination(969, 1);
      boolean boolean0 = pagination0.equals(pagination0);
      assertEquals(970, pagination0.getPageNumber());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Pagination pagination0 = new Pagination(1384, (-1));
      Object object0 = new Object();
      boolean boolean0 = pagination0.equals(object0);
      assertFalse(boolean0);
      assertEquals((-1383), pagination0.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Pagination pagination0 = new Pagination((-242), (-242));
      Pagination pagination1 = pagination0.getPrevious();
      boolean boolean0 = pagination0.equals(pagination1);
      assertEquals(0, pagination1.getOffset());
      assertEquals(2, pagination0.getPageNumber());
      assertFalse(pagination1.equals((Object)pagination0));
      assertFalse(boolean0);
      assertEquals((-242), pagination1.getLimit());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Pagination pagination0 = new Pagination((-242), (-242));
      Pagination pagination1 = pagination0.getNext();
      pagination1.toString();
      assertEquals((-484), pagination1.getOffset());
      assertEquals(2, pagination0.getPageNumber());
      assertEquals((-242), pagination1.getLimit());
      assertEquals(1, pagination1.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Pagination pagination0 = null;
      try {
        pagination0 = new Pagination(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // limit cannot be 0 for pagination.
         //
         verifyException("org.gatein.api.common.Pagination", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Pagination pagination0 = new Pagination(1384, (-1));
      Pagination pagination1 = pagination0.getNext();
      assertEquals((-1382), pagination1.getPageNumber());
      assertEquals((-1), pagination0.getLimit());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Pagination pagination0 = new Pagination(969, 1);
      pagination0.hashCode();
      assertEquals(970, pagination0.getPageNumber());
  }
}
