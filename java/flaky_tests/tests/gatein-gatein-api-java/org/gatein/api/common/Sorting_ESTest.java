/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:24:33 GMT 2022
 */

package org.gatein.api.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gatein.api.common.Sorting;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Sorting_ESTest extends Sorting_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Sorting.Order sorting_Order0 = Sorting.Order.ascending;
      Sorting<Integer> sorting0 = new Sorting<Integer>(sorting_Order0);
      Sorting.Order sorting_Order1 = sorting0.getOrder();
      assertSame(sorting_Order1, sorting_Order0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      Sorting<Object> sorting0 = new Sorting<Object>(comparator0);
      Comparator<Object> comparator1 = sorting0.getComparator();
      assertSame(comparator1, comparator0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Sorting<Object> sorting0 = new Sorting<Object>(comparator0);
      sorting0.getOrder();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Sorting.Order sorting_Order0 = Sorting.Order.descending;
      Sorting<Integer> sorting0 = new Sorting<Integer>(sorting_Order0);
      Comparator<Integer> comparator0 = sorting0.getComparator();
      assertNull(comparator0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Sorting<Integer> sorting0 = new Sorting<Integer>((Comparator<Integer>) null);
      String string0 = sorting0.toString();
      assertEquals("[order=null, comparator=null]", string0);
  }
}
