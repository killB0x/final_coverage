/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 19:21:18 GMT 2022
 */

package org.gatein.api.common.i18n;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gatein.api.common.i18n.LocalizedString;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizedString_ESTest extends LocalizedString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalizedString localizedString0 = new LocalizedString((Locale) null, "ZYEH+g,=C#\",X9>0u,");
      LocalizedString localizedString1 = localizedString0.setLocalizedValue((Locale) null, (String) null);
      assertFalse(localizedString1.isLocalized());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalizedString localizedString0 = new LocalizedString("");
      localizedString0.setValue("Bu@$Q9E&D1;-xBG");
      String string0 = localizedString0.getValue();
      assertEquals("Bu@$Q9E&D1;-xBG", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      LocalizedString localizedString0 = new LocalizedString(locale0, "H\"44F0,mcrI F:");
      Locale locale1 = new Locale("H\"44F0,mcrI F:");
      LocalizedString localizedString1 = localizedString0.setLocalizedValue(locale1, "H\"44F0,mcrI F:");
      // Undeclared exception!
      try { 
        localizedString1.setValue("H\"44F0,mcrI F:");
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalizedString localizedString0 = null;
      try {
        localizedString0 = new LocalizedString((LocalizedString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gatein.api.common.i18n.Localized", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalizedString localizedString0 = null;
      try {
        localizedString0 = new LocalizedString((Map<Locale, String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // valueMap cannot be null
         //
         verifyException("org.gatein.api.internal.Parameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = new Locale("org.gatein.api.common.i18n.LocalizedString");
      LocalizedString localizedString0 = null;
      try {
        localizedString0 = new LocalizedString(locale0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // valueMap contains a null value for key locale org.gatein.api.common.i18n.localizedstring
         //
         verifyException("org.gatein.api.common.i18n.Localized", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalizedString localizedString0 = null;
      try {
        localizedString0 = new LocalizedString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // valueMap contains a null value for key locale null
         //
         verifyException("org.gatein.api.common.i18n.Localized", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalizedString localizedString0 = new LocalizedString("");
      assertFalse(localizedString0.isLocalized());
      
      Locale locale0 = Locale.CHINA;
      localizedString0.setLocalizedValue(locale0, "");
      boolean boolean0 = localizedString0.isLocalized();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalizedString localizedString0 = new LocalizedString("");
      boolean boolean0 = localizedString0.isLocalized();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalizedString localizedString0 = new LocalizedString("");
      LocalizedString localizedString1 = localizedString0.setValue((String) null);
      String string0 = localizedString1.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<Locale, String> hashMap0 = new HashMap<Locale, String>();
      LocalizedString localizedString0 = new LocalizedString(hashMap0);
      assertTrue(localizedString0.isLocalized());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalizedString localizedString0 = new LocalizedString("");
      String string0 = localizedString0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalizedString localizedString0 = new LocalizedString("*,B&$KWta[+OBE06");
      LocalizedString localizedString1 = new LocalizedString(localizedString0);
      assertFalse(localizedString1.isLocalized());
  }
}
