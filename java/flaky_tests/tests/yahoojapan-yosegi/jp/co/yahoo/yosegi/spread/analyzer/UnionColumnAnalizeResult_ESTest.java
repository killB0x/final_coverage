/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:47:27 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.analyzer;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import jp.co.yahoo.yosegi.spread.analyzer.IColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.StringColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnionColumnAnalizeResult_ESTest extends UnionColumnAnalizeResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("", 0, 1, (List<IColumnAnalizeResult>) null);
      int int0 = unionColumnAnalizeResult0.getUniqCount();
      assertEquals(1, unionColumnAnalizeResult0.getNullCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("x+tHz9uUw", (-987), true, (-242), (-875), (-875), (-875), (-875), 3750, (-15), (-875), 977, 269, (-987), (-1192), (-875), ",qu", "", (-1192), 1, 723);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("0dvt3{UWSh\"W.|z", (-875), (-875), list0);
      int int0 = unionColumnAnalizeResult0.getUniqCount();
      assertEquals((-875), unionColumnAnalizeResult0.getNullCount());
      assertEquals((-875), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("Z*Q]9=tp{k$xM'oE", 1, 4102, linkedList0);
      int int0 = unionColumnAnalizeResult0.getRowEnd();
      assertEquals(0, int0);
      assertEquals(4102, unionColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("B$;x\"lzxgD6XM", 1952, 1952, linkedList0);
      int int0 = unionColumnAnalizeResult0.getRowEnd();
      assertEquals(1952, unionColumnAnalizeResult0.getNullCount());
      assertEquals(1951, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("SHORT", 1829, true, 1829, 1829, 1829, (-46), 1829, 1829, 1829, (-557), 0, 1550, 0, (-46), 0, "SHORT", "M^+>DZ<K#c?~Jz", (-557), 13, 0);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("M^+>DZ<K#c?~Jz", 1829, 1829, list0);
      int int0 = unionColumnAnalizeResult0.getRowCount();
      assertEquals(1829, unionColumnAnalizeResult0.getNullCount());
      assertEquals(1829, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("x+tHz9uUw", (-987), true, (-242), (-875), (-875), (-875), (-875), 3750, (-15), (-875), 977, 269, (-987), (-1192), (-875), ",qu", "", (-1192), 1, 723);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("0dvt3{UWSh\"W.|z", (-875), (-875), list0);
      int int0 = unionColumnAnalizeResult0.getRowCount();
      assertEquals((-875), unionColumnAnalizeResult0.getNullCount());
      assertEquals((-875), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("X&", 0, true, 0, 431, 431, 431, 0, 927, 13, (-706), (-706), 927, 0, (-2455), 13, "", "X&", 0, 0, 13);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("", 0, 0, list0);
      int int0 = unionColumnAnalizeResult0.getNullCount();
      assertEquals(0, unionColumnAnalizeResult0.getUniqCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("SHORT", 1829, true, 1829, 1829, 1829, (-46), 1829, 1829, 1829, (-557), 0, 1550, 0, (-46), 0, "SHORT", "M^+>DZ<K#c?~Jz", (-557), 13, 0);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("M^+>DZ<K#c?~Jz", 1829, 1829, list0);
      int int0 = unionColumnAnalizeResult0.getNullCount();
      assertEquals(1829, int0);
      assertEquals(1829, unionColumnAnalizeResult0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("SHORT", 1829, true, 1829, 1829, 1829, (-46), 1829, 1829, 1829, (-557), 0, 1550, 0, (-46), 0, "SHORT", "M^+>DZ<K#c?~Jz", (-557), 13, 0);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("M^+>DZ<K#c?~Jz", 1829, 1829, list0);
      int int0 = unionColumnAnalizeResult0.getColumnSize();
      assertEquals(1829, unionColumnAnalizeResult0.getNullCount());
      assertEquals(1829, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("otSi)OTt$+2Cm", (-418), 1497, (List<IColumnAnalizeResult>) null);
      int int0 = unionColumnAnalizeResult0.getColumnSize();
      assertEquals(1497, unionColumnAnalizeResult0.getNullCount());
      assertEquals((-418), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult", 0, true, 0, 0, (-307), 421, 973, 0, 791, (-2349), (-307), 1, (-1), 2093, (-1), (String) null, (String) null, (-307), (-2298), 2);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult((String) null, 0, (-547), list0);
      unionColumnAnalizeResult0.getColumnName();
      assertEquals((-547), unionColumnAnalizeResult0.getNullCount());
      assertEquals(0, unionColumnAnalizeResult0.getUniqCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("SHORT", 1829, true, 1829, 1829, 1829, (-46), 1829, 1829, 1829, (-557), 0, 1550, 0, (-46), 0, "SHORT", "M^+>DZ<K#c?~Jz", (-557), 13, 0);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("M^+>DZ<K#c?~Jz", 1829, 1829, list0);
      unionColumnAnalizeResult0.getColumnName();
      assertEquals(1829, unionColumnAnalizeResult0.getNullCount());
      assertEquals(1829, unionColumnAnalizeResult0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("", 0, 1, (List<IColumnAnalizeResult>) null);
      unionColumnAnalizeResult0.getChild();
      assertEquals((-1), unionColumnAnalizeResult0.getRowEnd());
      assertEquals(1, unionColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("r[S$ tW!r@n`EA]_9", 10, 10, linkedList0);
      linkedList0.add((IColumnAnalizeResult) unionColumnAnalizeResult0);
      unionColumnAnalizeResult0.getChild();
      assertEquals(10, unionColumnAnalizeResult0.getNullCount());
      assertEquals(10, unionColumnAnalizeResult0.getColumnSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult", 0, true, 0, 0, (-307), 421, 973, 0, 791, (-2349), (-307), 1, (-1), 2093, (-1), (String) null, (String) null, (-307), (-2298), 2);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult((String) null, 0, (-547), list0);
      unionColumnAnalizeResult0.getChild();
      assertEquals((-547), unionColumnAnalizeResult0.getNullCount());
      assertEquals((-1), unionColumnAnalizeResult0.getRowEnd());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult", 0, true, 0, 0, (-307), 421, 973, 0, 791, (-2349), (-307), 1, (-1), 2093, (-1), (String) null, (String) null, (-307), (-2298), 2);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult((String) null, 0, (-547), list0);
      boolean boolean0 = unionColumnAnalizeResult0.maybeSorted();
      assertFalse(boolean0);
      assertEquals((-547), unionColumnAnalizeResult0.getNullCount());
      assertEquals((-1), unionColumnAnalizeResult0.getRowEnd());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult", 0, true, 0, 0, (-307), 421, 973, 0, 791, (-2349), (-307), 1, (-1), 2093, (-1), (String) null, (String) null, (-307), (-2298), 2);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult((String) null, 0, (-547), list0);
      int int0 = unionColumnAnalizeResult0.getRowCount();
      assertEquals(0, int0);
      assertEquals((-547), unionColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult", 0, true, 0, 0, (-307), 421, 973, 0, 791, (-2349), (-307), 1, (-1), 2093, (-1), (String) null, (String) null, (-307), (-2298), 2);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult((String) null, 0, (-547), list0);
      int int0 = unionColumnAnalizeResult0.getRowEnd();
      assertEquals((-1), int0);
      assertEquals((-547), unionColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("r[S$ tW!r@n`EA]_9", 10, 10, linkedList0);
      int int0 = unionColumnAnalizeResult0.getRowStart();
      assertEquals(0, int0);
      assertEquals(10, unionColumnAnalizeResult0.getUniqCount());
      assertEquals(10, unionColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("B$;x\"lzxgD6XM", 1952, 1952, linkedList0);
      int int0 = unionColumnAnalizeResult0.getLogicalDataSize();
      assertEquals(1952, unionColumnAnalizeResult0.getNullCount());
      assertEquals(1952, unionColumnAnalizeResult0.getRowCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult", 0, true, 0, 0, (-307), 421, 973, 0, 791, (-2349), (-307), 1, (-1), 2093, (-1), (String) null, (String) null, (-307), (-2298), 2);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult((String) null, 0, (-547), list0);
      int int0 = unionColumnAnalizeResult0.getColumnSize();
      assertEquals((-547), unionColumnAnalizeResult0.getNullCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("r[S$ tW!r@n`EA]_9", 10, 10, linkedList0);
      int int0 = unionColumnAnalizeResult0.getUniqCount();
      assertEquals(10, unionColumnAnalizeResult0.getNullCount());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult", 0, true, 0, 0, (-307), 421, 973, 0, 791, (-2349), (-307), 1, (-1), 2093, (-1), (String) null, (String) null, (-307), (-2298), 2);
      List<IColumnAnalizeResult> list0 = stringColumnAnalizeResult0.getChild();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult((String) null, 0, (-547), list0);
      int int0 = unionColumnAnalizeResult0.getNullCount();
      assertEquals((-547), int0);
      assertEquals(0, unionColumnAnalizeResult0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("FzTOAT", 0, 0, linkedList0);
      unionColumnAnalizeResult0.getColumnType();
      assertEquals(0, unionColumnAnalizeResult0.getNullCount());
      assertEquals(0, unionColumnAnalizeResult0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("", 0, 0, linkedList0);
      unionColumnAnalizeResult0.getColumnName();
      assertEquals(0, unionColumnAnalizeResult0.getNullCount());
      assertEquals(0, unionColumnAnalizeResult0.getRowCount());
  }
}
