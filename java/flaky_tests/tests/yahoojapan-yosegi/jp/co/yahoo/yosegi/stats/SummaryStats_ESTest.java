/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:40:07 GMT 2022
 */

package jp.co.yahoo.yosegi.stats;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import jp.co.yahoo.yosegi.stats.SummaryStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SummaryStats_ESTest extends SummaryStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      SummaryStats summaryStats1 = new SummaryStats((-1763L), (-1763L), (-1L), 1L, 1);
      summaryStats0.merge(summaryStats1);
      assertEquals(1L, summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(0L, (-4126L), 92L, (-4126L), 0);
      int int0 = summaryStats0.getStatsCount();
      assertEquals((-4126L), summaryStats0.getLogicalDataSize());
      assertEquals((-0.022297624818225885), summaryStats0.getCompressLate(), 0.01);
      assertEquals(0L, summaryStats0.getCardinality());
      assertEquals(1, int0);
      assertEquals(0L, summaryStats0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      long long0 = summaryStats0.getRowCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-289L), (-289L), (-289L), 227L, 504);
      long long0 = summaryStats0.getRowCount();
      assertEquals(504.0, summaryStats0.getAverageCardinality(), 0.01);
      assertEquals((-289L), long0);
      assertEquals(1.0, summaryStats0.getAverageFieldRealSize(), 0.01);
      assertEquals((-289L), summaryStats0.getRawDataSize());
      assertEquals(227L, summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      long long0 = summaryStats0.getRealDataSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(658L, 658L, 658L, 658L, 0);
      long long0 = summaryStats0.getRealDataSize();
      assertEquals(658L, summaryStats0.getLogicalDataSize());
      assertEquals(0.0, summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(1.0, summaryStats0.getAverageFieldSize(), 0.01);
      assertEquals(658L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(1L, 1L, 1L, 1L, (-1761));
      long long0 = summaryStats0.getRawDataSize();
      assertEquals((-1761.0), summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(1L, summaryStats0.getLogicalDataSize());
      assertEquals(1L, long0);
      assertEquals(1.0, summaryStats0.getAverageFieldRealSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-14L), (-255L), (-1L), (-14L), 1303);
      long long0 = summaryStats0.getRawDataSize();
      assertEquals((-14.0), summaryStats0.getAverageRowCount(), 0.01);
      assertEquals(1303L, summaryStats0.getCardinality());
      assertEquals((-255L), long0);
      assertEquals(0.00392156862745098, summaryStats0.getCompressLate(), 0.01);
      assertEquals((-14L), summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1L), (-1L), 1L, 1L, 0);
      long long0 = summaryStats0.getLogicalDataSize();
      assertEquals((-1.0), summaryStats0.getCompressLate(), 0.01);
      assertEquals(0L, summaryStats0.getCardinality());
      assertEquals(1L, long0);
      assertEquals((-1.0), summaryStats0.getAverageRowCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(0L, 0L, 0L, (-1L), 1058);
      long long0 = summaryStats0.getLogicalDataSize();
      assertEquals(1058.0, summaryStats0.getAverageCardinality(), 0.01);
      assertEquals((-1L), long0);
      assertEquals(Double.NaN, summaryStats0.getCompressLate(), 0.01);
      assertEquals(0L, summaryStats0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1), 842L, 0L, 842L, (-1));
      double double0 = summaryStats0.getCompressLate();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1L), summaryStats0.getCardinality());
      assertEquals(842L, summaryStats0.getLogicalDataSize());
      assertEquals((-1.0), summaryStats0.getAverageRowCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(1L, 1L, 1L, 1L, (-1761));
      double double0 = summaryStats0.getCompressLate();
      assertEquals((-1761.0), summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(1L, summaryStats0.getLogicalDataSize());
      assertEquals(1L, summaryStats0.getRowCount());
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      SummaryStats summaryStats1 = new SummaryStats((-1989L), 0L, (-1989L), 0L, (-266));
      summaryStats0.merge(summaryStats1);
      double double0 = summaryStats0.getCompressLate();
      assertEquals(1, summaryStats0.getStatsCount());
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(0L, 0L, 0L, (-1L), 1058);
      long long0 = summaryStats0.getCardinality();
      assertEquals(1058L, long0);
      assertEquals(1, summaryStats0.getStatsCount());
      assertEquals(Double.NaN, summaryStats0.getAverageFieldSize(), 0.01);
      assertEquals(Double.NaN, summaryStats0.getAverageFieldRealSize(), 0.01);
      assertEquals((-1L), summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1015L), (-1L), (-1015L), (-1L), (-1604));
      long long0 = summaryStats0.getCardinality();
      assertEquals(1.0, summaryStats0.getAverageFieldRealSize(), 0.01);
      assertEquals((-1604L), long0);
      assertEquals((-1L), summaryStats0.getRawDataSize());
      assertEquals(1, summaryStats0.getStatsCount());
      assertEquals((-1L), summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(0L, 0L, 0L, (-1L), 1058);
      double double0 = summaryStats0.getAverageRowCount();
      assertEquals(Double.NaN, summaryStats0.getCompressLate(), 0.01);
      assertEquals((-1L), summaryStats0.getLogicalDataSize());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1058L, summaryStats0.getCardinality());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(0L, 3846L, 3846L, 0L, (-3256));
      SummaryStats summaryStats1 = new SummaryStats(130L, 454L, 0L, 0L, (-3256));
      summaryStats0.merge(summaryStats1);
      double double0 = summaryStats0.getAverageRowCount();
      assertEquals(2, summaryStats0.getStatsCount());
      assertEquals(65.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1104L), (-1104L), (-1104L), (-1104L), (-1668));
      double double0 = summaryStats0.getAverageRowCount();
      assertEquals((-1104.0), double0, 0.01);
      assertEquals((-1668L), summaryStats0.getCardinality());
      assertEquals((-1104L), summaryStats0.getLogicalDataSize());
      assertEquals(1.0, summaryStats0.getCompressLate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1989L), 0L, (-1989L), 0L, (-266));
      double double0 = summaryStats0.getAverageFieldSize();
      assertEquals(0L, summaryStats0.getLogicalDataSize());
      assertEquals(-0.0, double0, 0.01);
      assertEquals((-266.0), summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, summaryStats0.getCompressLate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1015L), (-1L), (-1015L), (-1L), (-1604));
      double double0 = summaryStats0.getAverageFieldSize();
      assertEquals((-1015L), summaryStats0.getRealDataSize());
      assertEquals((-1L), summaryStats0.getLogicalDataSize());
      assertEquals(9.852216748768472E-4, double0, 0.01);
      assertEquals((-1604.0), summaryStats0.getAverageCardinality(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1), 842L, 0L, 842L, (-1));
      double double0 = summaryStats0.getAverageFieldSize();
      assertEquals(842L, summaryStats0.getLogicalDataSize());
      assertEquals(0L, summaryStats0.getRealDataSize());
      assertEquals((-1.0), summaryStats0.getAverageCardinality(), 0.01);
      assertEquals((-842.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-3587L), (-918L), 0L, 1L, 1);
      double double0 = summaryStats0.getAverageFieldRealSize();
      assertEquals(0.2559241706161137, summaryStats0.getAverageFieldSize(), 0.01);
      assertEquals(1.0, summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(-0.0, double0, 0.01);
      assertEquals(1L, summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(658L, 658L, 658L, 658L, 0);
      double double0 = summaryStats0.getAverageFieldRealSize();
      assertEquals(658L, summaryStats0.getLogicalDataSize());
      assertEquals(0.0, summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, summaryStats0.getCompressLate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1L), (-1L), 1L, 1L, 0);
      double double0 = summaryStats0.getAverageFieldRealSize();
      assertEquals(0.0, summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(1L, summaryStats0.getLogicalDataSize());
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1L), summaryStats0.getRawDataSize());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(2969L, 2969L, (-2781L), 2969L, 0);
      double double0 = summaryStats0.getAverageCardinality();
      assertEquals(2969L, summaryStats0.getLogicalDataSize());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-0.9366790165038733), summaryStats0.getAverageFieldRealSize(), 0.01);
      assertEquals((-0.9366790165038733), summaryStats0.getCompressLate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-14L), (-255L), (-1L), (-14L), 1303);
      double double0 = summaryStats0.getAverageCardinality();
      assertEquals(1303.0, double0, 0.01);
      assertEquals(0.00392156862745098, summaryStats0.getCompressLate(), 0.01);
      assertEquals((-14L), summaryStats0.getRowCount());
      assertEquals((-14L), summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      // Undeclared exception!
      try { 
        summaryStats0.merge((SummaryStats) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.stats.SummaryStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      long long0 = summaryStats0.getRawDataSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(0L, 3846L, 3846L, 0L, (-3256));
      double double0 = summaryStats0.getAverageCardinality();
      assertEquals(0L, summaryStats0.getLogicalDataSize());
      assertEquals((-3256.0), double0, 0.01);
      assertEquals(1.0, summaryStats0.getCompressLate(), 0.01);
      assertEquals(0L, summaryStats0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      long long0 = summaryStats0.getCardinality();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(2969L, 2969L, (-2781L), 2969L, 0);
      long long0 = summaryStats0.getRowCount();
      assertEquals(2969L, summaryStats0.getLogicalDataSize());
      assertEquals(0.0, summaryStats0.getAverageCardinality(), 0.01);
      assertEquals(2969L, long0);
      assertEquals((-0.9366790165038733), summaryStats0.getCompressLate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-1104L), (-1104L), (-1104L), (-1104L), (-1668));
      long long0 = summaryStats0.getRealDataSize();
      assertEquals(1.0, summaryStats0.getAverageFieldSize(), 0.01);
      assertEquals((-1104L), long0);
      assertEquals((-1668.0), summaryStats0.getAverageCardinality(), 0.01);
      assertEquals((-1104L), summaryStats0.getLogicalDataSize());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      long long0 = summaryStats0.getLogicalDataSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      summaryStats0.clear();
      assertEquals(Double.NaN, summaryStats0.getAverageFieldRealSize(), 0.01);
      assertEquals(Double.NaN, summaryStats0.getCompressLate(), 0.01);
      assertEquals(0L, summaryStats0.getLogicalDataSize());
      assertEquals(0L, summaryStats0.getCardinality());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      Map<Object, Object> map0 = summaryStats0.toJavaObject();
      assertEquals(6, map0.size());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      String string0 = summaryStats0.toString();
      assertEquals("Field count=0 , Raw data size=0 , Real data size=0 , Logical data size=0 , cardinality=0 , stats report count=0 , Average field size=NaN , Average field real size=NaN , Compress late=NaN , Average row count per stats report count=NaN , Average cardinality=NaN", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      int int0 = summaryStats0.getStatsCount();
      assertEquals(0, int0);
  }
}
