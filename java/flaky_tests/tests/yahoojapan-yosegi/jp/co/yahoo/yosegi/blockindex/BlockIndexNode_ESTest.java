/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:02:09 GMT 2022
 */

package jp.co.yahoo.yosegi.blockindex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.util.HashMap;
import java.util.Map;
import jp.co.yahoo.yosegi.blockindex.BlockIndexNode;
import jp.co.yahoo.yosegi.blockindex.BlockIndexType;
import jp.co.yahoo.yosegi.blockindex.ByteRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.DoubleRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.FloatRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.FullRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.IBlockIndex;
import jp.co.yahoo.yosegi.blockindex.IntegerRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.LongRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.ShortRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.StringRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.UnsupportedBlockIndex;
import jp.co.yahoo.yosegi.spread.column.filter.RegexpMatchStringFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BlockIndexNode_ESTest extends BlockIndexNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.putChildNode("UTF-8", (BlockIndexNode) null);
      blockIndexNode0.deleteChildNode("B.R_a1[_ N?");
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("UTF-8");
      assertNull(blockIndexNode1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.childContainer = null;
      blockIndexNode0.childContainer = null;
      // Undeclared exception!
      try { 
        blockIndexNode0.deleteChildNode("UTF-8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.childContainer = null;
      // Undeclared exception!
      try { 
        blockIndexNode0.containsKey("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.childContainer = null;
      // Undeclared exception!
      try { 
        blockIndexNode0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.BlockIndexNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.childContainer = null;
      // Undeclared exception!
      try { 
        blockIndexNode0.getChildNode("OUYA/x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode(")zWQ1[Q/M4?bgGg2\"");
      blockIndexNode1.childContainer = null;
      // Undeclared exception!
      try { 
        blockIndexNode1.disable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.BlockIndexNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("j!)18jVS6EFnU~)kT");
      blockIndexNode1.putChildNode("j!)18jVS6EFnU~)kT", blockIndexNode0);
      // Undeclared exception!
      try { 
        blockIndexNode1.getBinarySize();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("R4");
      blockIndexNode1.childContainer = null;
      // Undeclared exception!
      try { 
        blockIndexNode1.putChildNode("mg) ip]o@S)#mm|", blockIndexNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.BlockIndexNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte)14;
      byteArray0[2] = (byte)14;
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.setBlockIndex(stringRangeBlockIndex0);
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, 1);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("j!)18jVS6EFnU~)kv");
      blockIndexNode1.disable();
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("j!)18jVS6EFnU~)kT");
      blockIndexNode1.disable();
      int int0 = blockIndexNode0.getBinarySize();
      assertEquals(8, int0);
      
      BlockIndexNode blockIndexNode2 = blockIndexNode0.clone();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-16);
      // Undeclared exception!
      try { 
        blockIndexNode2.toBinary(byteArray0, (byte)1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      LongRangeBlockIndex longRangeBlockIndex0 = new LongRangeBlockIndex((byte)0, 0L);
      blockIndexNode0.setBlockIndex(longRangeBlockIndex0);
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      blockIndexNode1.setBlockIndex(stringRangeBlockIndex0);
      blockIndexNode0.deleteChildNode("");
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex();
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex();
      blockIndexNode0.setBlockIndex(shortRangeBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode0.childContainer;
      RegexpMatchStringFilter regexpMatchStringFilter0 = new RegexpMatchStringFilter("4aQpYJp.^O");
      int int0 = blockIndexNode1.toBinary(byteArray0, (byte)0);
      assertEquals(0, int0);
      
      blockIndexNode0.clear();
      assertNotSame(blockIndexNode0, blockIndexNode1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.getChildNode("");
      blockIndexNode0.disable();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      blockIndexNode0.clear();
      blockIndexNode1.getBinarySize();
      blockIndexNode1.deleteChildNode("");
      blockIndexNode0.clear();
      blockIndexNode1.containsKey("");
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, 18);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.disable();
      int int0 = blockIndexNode0.getBinarySize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex();
      IBlockIndex iBlockIndex0 = shortRangeBlockIndex0.clone();
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      blockIndexNode0.deleteChildNode("4aQpYJp.^O");
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex();
      ShortRangeBlockIndex shortRangeBlockIndex1 = new ShortRangeBlockIndex();
      blockIndexNode0.setBlockIndex(shortRangeBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode0.childContainer;
      RegexpMatchStringFilter regexpMatchStringFilter0 = new RegexpMatchStringFilter("LT");
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.getChildNode("");
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      BlockIndexNode blockIndexNode2 = blockIndexNode0.getChildNode("");
      blockIndexNode2.setBlockIndex((IBlockIndex) null);
      blockIndexNode1.deleteChildNode("");
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex();
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex();
      blockIndexNode1.setBlockIndex(stringRangeBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode2.childContainer;
      RegexpMatchStringFilter regexpMatchStringFilter0 = new RegexpMatchStringFilter("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte) (-50);
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode(",BS");
      assertNotSame(blockIndexNode0, blockIndexNode1);
      
      blockIndexNode0.deleteChildNode(",BS");
      assertNotSame(blockIndexNode0, blockIndexNode1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)85;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      UnsupportedBlockIndex unsupportedBlockIndex0 = new UnsupportedBlockIndex();
      blockIndexNode0.blockIndex = (IBlockIndex) unsupportedBlockIndex0;
      IBlockIndex iBlockIndex0 = unsupportedBlockIndex0.clone();
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      boolean boolean0 = blockIndexNode0.containsKey("LF:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      IBlockIndex iBlockIndex0 = blockIndexNode0.getBlockIndex();
      assertEquals(BlockIndexType.UNSUPPORTED, iBlockIndex0.getBlockIndexType());
      
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      IBlockIndex iBlockIndex1 = blockIndexNode0.getBlockIndex();
      assertEquals(0, iBlockIndex1.getBinarySize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      blockIndexNode1.setBlockIndex(stringRangeBlockIndex0);
      String string0 = "";
      BlockIndexNode blockIndexNode2 = blockIndexNode1.getChildNode("");
      blockIndexNode2.getChildNode("");
      // Undeclared exception!
      try { 
        blockIndexNode1.getBinarySize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.StringRangeBlockIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.getChildNode("");
      boolean boolean0 = blockIndexNode0.containsKey("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("UTF-8");
      blockIndexNode1.putChildNode("UTF-8", blockIndexNode0);
      blockIndexNode1.clone();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      blockIndexNode1.setBlockIndex(stringRangeBlockIndex0);
      blockIndexNode0.deleteChildNode("");
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex();
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex();
      blockIndexNode0.setBlockIndex(shortRangeBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode0.childContainer;
      RegexpMatchStringFilter regexpMatchStringFilter0 = new RegexpMatchStringFilter("4aQpYJp.^O");
      // Undeclared exception!
      try { 
        blockIndexNode1.toBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("\"gC;~,-BRbIY");
      BlockIndexNode blockIndexNode2 = blockIndexNode0.getChildNode("\"gC;~,-BRbIY");
      assertSame(blockIndexNode2, blockIndexNode1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.getChildNode("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("");
      blockIndexNode1.getChildNode("");
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)55;
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("jp.co.yahoo.yosegi.blockindex.BlockIndexNode");
      short short0 = (short) (-990);
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex((short) (-990), (short)1780);
      FloatRangeBlockIndex floatRangeBlockIndex0 = new FloatRangeBlockIndex();
      blockIndexNode1.setBlockIndex(floatRangeBlockIndex0);
      BlockIndexNode blockIndexNode2 = blockIndexNode0.clone();
      blockIndexNode2.getBlockIndex();
      blockIndexNode2.clone();
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, 11);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode(",2BUcKc6pD<j");
      blockIndexNode1.getChildNode("PERFECT");
      blockIndexNode1.getBinarySize();
      // Undeclared exception!
      try { 
        blockIndexNode1.toBinary(byteArray0, (byte)1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.getChildNode("j!)18jVS6EFnU~)kv");
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex((byte) (-44), (byte) (-44));
      blockIndexNode0.setBlockIndex(byteRangeBlockIndex0);
      blockIndexNode0.deleteChildNode("J5y-d<h,P@(66-n~$m4");
      IBlockIndex iBlockIndex0 = byteRangeBlockIndex0.clone();
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode0.childContainer;
      blockIndexNode0.childContainer = map0;
      RegexpMatchStringFilter regexpMatchStringFilter0 = new RegexpMatchStringFilter("e}3<t@~s");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, 3151);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      blockIndexNode0.blockIndex = (IBlockIndex) stringRangeBlockIndex0;
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      assertNotSame(blockIndexNode1, blockIndexNode0);
      
      BlockIndexNode blockIndexNode2 = blockIndexNode0.getChildNode("!}hq}");
      BlockIndexNode blockIndexNode3 = blockIndexNode2.getChildNode("!}hq}");
      FullRangeBlockIndex fullRangeBlockIndex0 = new FullRangeBlockIndex();
      blockIndexNode3.blockIndex = (IBlockIndex) fullRangeBlockIndex0;
      blockIndexNode2.getBinarySize();
      // Undeclared exception!
      try { 
        blockIndexNode2.toBinary((byte[]) null, (-6158));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.setBlockIndex(stringRangeBlockIndex0);
      // Undeclared exception!
      try { 
        blockIndexNode0.getBinarySize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.StringRangeBlockIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-57);
      byteArray0[0] = (byte) (-57);
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)0;
      byte byte1 = (byte) (-1);
      IntegerRangeBlockIndex integerRangeBlockIndex0 = new IntegerRangeBlockIndex();
      IBlockIndex iBlockIndex0 = integerRangeBlockIndex0.clone();
      blockIndexNode0.blockIndex = iBlockIndex0;
      blockIndexNode1.disable();
      byteArray0[4] = (byte) (-1);
      blockIndexNode1.toBinary(byteArray0, (byte)118);
      blockIndexNode1.clear();
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (byte) (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.disable();
      int int0 = blockIndexNode0.toBinary(byteArray0, (-937));
      assertEquals((-937), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-82);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      blockIndexNode0.toBinary(byteArray0, 1);
      blockIndexNode0.clear();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      HashMap<String, BlockIndexNode> hashMap0 = new HashMap<String, BlockIndexNode>();
      blockIndexNode0.clear();
      blockIndexNode0.isDisable = true;
      blockIndexNode0.childContainer = (Map<String, BlockIndexNode>) hashMap0;
      blockIndexNode0.isDisable = false;
      blockIndexNode0.disable();
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex((short)0, (short)0);
      LongRangeBlockIndex longRangeBlockIndex0 = new LongRangeBlockIndex(0L, (-1792L));
      shortRangeBlockIndex0.merge(longRangeBlockIndex0);
      IBlockIndex iBlockIndex0 = shortRangeBlockIndex0.clone();
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      blockIndexNode0.containsKey("");
      blockIndexNode0.clear();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.disable();
      blockIndexNode0.setBlockIndex(doubleRangeBlockIndex0);
      int int0 = blockIndexNode0.getBinarySize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BlockIndexNode blockIndexNode0 = BlockIndexNode.createFromBinary(byteArray0, (byte)0);
      assertNotNull(blockIndexNode0);
      
      LongRangeBlockIndex longRangeBlockIndex0 = new LongRangeBlockIndex();
      blockIndexNode0.setBlockIndex(longRangeBlockIndex0);
      blockIndexNode0.setBlockIndex(longRangeBlockIndex0);
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (byte)0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-81);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-16);
      BlockIndexNode blockIndexNode0 = BlockIndexNode.createFromBinary(byteArray0, 0);
      IntegerRangeBlockIndex integerRangeBlockIndex0 = new IntegerRangeBlockIndex();
      integerRangeBlockIndex0.toBinary();
      blockIndexNode0.deleteChildNode("");
      IBlockIndex iBlockIndex0 = integerRangeBlockIndex0.clone();
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      assertEquals(BlockIndexType.RANGE_INTEGER, iBlockIndex0.getBlockIndexType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("");
      blockIndexNode1.deleteChildNode("");
      BlockIndexNode blockIndexNode2 = blockIndexNode1.clone();
      BlockIndexNode blockIndexNode3 = blockIndexNode2.getChildNode(",2BUcKc6pD<j");
      blockIndexNode3.isDisable = false;
      blockIndexNode2.getBinarySize();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-52);
      // Undeclared exception!
      try { 
        blockIndexNode3.toBinary(byteArray0, (byte) (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.getChildNode("OUYA/x");
      int int0 = blockIndexNode0.getBinarySize();
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode(",2BUcKc6pD<j");
      blockIndexNode0.deleteChildNode("STRUCT");
      blockIndexNode1.clear();
      blockIndexNode0.containsKey(",2BUcKc6pD<j");
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (-1342242576));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      String string0 = "";
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("");
      blockIndexNode0.clear();
      blockIndexNode1.containsKey("");
      blockIndexNode1.disable();
      blockIndexNode0.putChildNode("", blockIndexNode1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)15;
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (-1187));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      boolean boolean0 = blockIndexNode0.containsKey("B.R_a1[_ N?");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary((byte[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.deleteChildNode("QJ*di0K*fhG");
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (-32768));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      int int0 = blockIndexNode0.getBinarySize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      byte[] byteArray0 = new byte[9];
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode((String) null);
      blockIndexNode1.disable();
      blockIndexNode1.getBinarySize();
      blockIndexNode1.toBinary(byteArray0, 0);
      blockIndexNode0.getBinarySize();
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary(byteArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.BlockIndexNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.clone();
      byte[] byteArray0 = null;
      blockIndexNode0.clear();
      blockIndexNode0.getBinarySize();
      // Undeclared exception!
      try { 
        blockIndexNode0.toBinary((byte[]) null, (-831));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte)14;
      byteArray0[23] = (byte)14;
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (byte)0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      byteArray0[5] = (byte)14;
      byteArray0[2] = (byte)14;
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (byte)0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      blockIndexNode0.blockIndex = (IBlockIndex) stringRangeBlockIndex0;
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      assertNotSame(blockIndexNode1, blockIndexNode0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary((byte[]) null, (byte)17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex((byte) (-44), (byte) (-44));
      blockIndexNode0.setBlockIndex(byteRangeBlockIndex0);
      blockIndexNode0.deleteChildNode("J5y-d<h,P@(66-n~$m4");
      IBlockIndex iBlockIndex0 = byteRangeBlockIndex0.clone();
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode0.childContainer;
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex();
      blockIndexNode0.setBlockIndex(shortRangeBlockIndex0);
      Map<String, BlockIndexNode> map1 = blockIndexNode0.childContainer;
      RegexpMatchStringFilter regexpMatchStringFilter0 = new RegexpMatchStringFilter((String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      blockIndexNode0.toBinary(byteArray0, (byte) (-44));
      blockIndexNode0.clear();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.blockIndex = (IBlockIndex) stringRangeBlockIndex0;
      // Undeclared exception!
      try { 
        blockIndexNode0.setBlockIndex(stringRangeBlockIndex0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.StringRangeBlockIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      blockIndexNode0.setBlockIndex(stringRangeBlockIndex0);
      assertEquals(BlockIndexType.RANGE_STRING, stringRangeBlockIndex0.getBlockIndexType());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.clone();
      StringRangeBlockIndex stringRangeBlockIndex0 = new StringRangeBlockIndex();
      blockIndexNode1.setBlockIndex(stringRangeBlockIndex0);
      blockIndexNode0.deleteChildNode("");
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex();
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex();
      blockIndexNode0.setBlockIndex(shortRangeBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode0.childContainer;
      BlockIndexNode blockIndexNode2 = blockIndexNode0.getChildNode("");
      blockIndexNode2.clone();
      blockIndexNode1.getBlockIndex();
      assertNotSame(blockIndexNode1, blockIndexNode0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      byte byte0 = (byte) (-44);
      ByteRangeBlockIndex byteRangeBlockIndex0 = new ByteRangeBlockIndex((byte) (-44), (byte) (-44));
      blockIndexNode0.setBlockIndex(byteRangeBlockIndex0);
      blockIndexNode0.deleteChildNode("J5y-d<h,P@(66-n~$m4");
      IBlockIndex iBlockIndex0 = byteRangeBlockIndex0.clone();
      blockIndexNode0.setBlockIndex(iBlockIndex0);
      Map<String, BlockIndexNode> map0 = blockIndexNode0.childContainer;
      blockIndexNode0.childContainer = map0;
      RegexpMatchStringFilter regexpMatchStringFilter0 = new RegexpMatchStringFilter("");
      byteRangeBlockIndex0.getBlockSpreadIndex(regexpMatchStringFilter0);
      blockIndexNode0.clear();
      blockIndexNode0.getBlockIndex();
      byte[] byteArray0 = null;
      int int0 = (-906);
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary((byte[]) null, (-906));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.clear();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.deleteChildNode("B.R_a1[_ N?");
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      blockIndexNode0.childContainer = null;
      // Undeclared exception!
      try { 
        blockIndexNode0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.BlockIndexNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("TUC^}X6eDOk1!u");
      assertNotNull(blockIndexNode1);
      
      BlockIndexNode blockIndexNode2 = blockIndexNode1.clone();
      IntegerRangeBlockIndex integerRangeBlockIndex0 = new IntegerRangeBlockIndex();
      blockIndexNode2.setBlockIndex(integerRangeBlockIndex0);
      BlockIndexNode blockIndexNode3 = blockIndexNode2.clone();
      assertNotSame(blockIndexNode3, blockIndexNode2);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = new BlockIndexNode();
      Map<String, BlockIndexNode> map0 = blockIndexNode1.childContainer;
      blockIndexNode0.childContainer = map0;
      blockIndexNode0.putChildNode("", (BlockIndexNode) null);
      // Undeclared exception!
      try { 
        blockIndexNode0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.BlockIndexNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = blockIndexNode0.getChildNode("OUYA/x");
      assertNotNull(blockIndexNode1);
      
      BlockIndexNode blockIndexNode2 = blockIndexNode0.clone();
      assertNotSame(blockIndexNode2, blockIndexNode0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = new BlockIndexNode();
      blockIndexNode0.putChildNode(",BS", blockIndexNode1);
      BlockIndexNode blockIndexNode2 = blockIndexNode0.getChildNode(",BS");
      assertSame(blockIndexNode2, blockIndexNode1);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      String string0 = null;
      BlockIndexNode blockIndexNode1 = new BlockIndexNode();
      blockIndexNode0.putChildNode((String) null, blockIndexNode1);
      HashMap<String, BlockIndexNode> hashMap0 = null;
      try {
        hashMap0 = new HashMap<String, BlockIndexNode>(462, (-953.8413F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: -953.8413
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, 313);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte) (-58);
      byteArray0[7] = (byte)64;
      // Undeclared exception!
      try { 
        BlockIndexNode.createFromBinary(byteArray0, (-630));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
