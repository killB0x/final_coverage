/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:24:18 GMT 2022
 */

package jp.co.yahoo.yosegi.message.design;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import jp.co.yahoo.yosegi.message.design.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Properties_ESTest extends Properties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Properties properties0 = new Properties();
      Set<String> set0 = properties0.getKey();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Properties properties0 = new Properties();
      String string0 = properties0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Properties properties0 = new Properties();
      Object object0 = properties0.getObject("jp.co.yahoo.yosegi.message.design.Properties", "jp.co.yahoo.yosegi.message.design.Properties");
      assertFalse(object0.equals((Object)properties0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("3Y", "jp.co.yahoo.yosegi.util.FindClass");
      Object object0 = properties0.getObject("3Y");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Properties properties0 = new Properties();
      long long0 = properties0.getLong("MdX`2XSxXf[_*ax", 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Properties properties0 = new Properties();
      long long0 = properties0.getLong("8<#?P;", (-1116L));
      assertEquals((-1116L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("1", "1");
      long long0 = properties0.getLong("1");
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Properties properties0 = new Properties();
      int int0 = properties0.getInt("", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Properties properties0 = new Properties();
      int int0 = properties0.getInt("jp.co.yahoo.yosegi.util.FindClass", (-1732));
      assertEquals((-1732), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("1", "1");
      int int0 = properties0.getInt("1");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Properties properties0 = new Properties();
      double double0 = properties0.getDouble("p!l547#j", 1769.154);
      assertEquals(1769.154, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Properties properties0 = new Properties();
      double double0 = properties0.getDouble("3Y", (-790.0042));
      assertEquals((-790.0042), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("1", "1");
      double double0 = properties0.getDouble("1");
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      String string0 = properties0.get((String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("", "");
      String string0 = properties0.get("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.toMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.set("I3+", "I3+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        properties0.getObject((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("1", "1");
      try { 
        properties0.getObject("1");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: Class '1.class' should be in target project, but could not be found!
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        properties0.getLong("X9wG");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("&vx.j;", "&vx.j;");
      // Undeclared exception!
      try { 
        properties0.getInt("&vx.j;", 7);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"&vx.j;\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.getInt("jp.co.yahoo.yosegi.util.FindClass", 2810);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.getInt("&J#4Uov'y`9H}xUx h0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.getDouble("zy'&+3qMbwl\"c$j", 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("", "");
      // Undeclared exception!
      try { 
        properties0.getDouble("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.get((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.containsKey(";E#vtM$@my[<rGb");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Properties properties0 = new Properties();
      try { 
        properties0.getObject("", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Properties properties0 = new Properties();
      String string0 = properties0.get("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("", "jp.co.yahoo.yosegi.message.design.Properties");
      String string0 = properties0.get("", "");
      assertEquals("jp.co.yahoo.yosegi.message.design.Properties", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("", "");
      try { 
        properties0.getObject("", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("1", "1");
      try { 
        properties0.getObject("1", "1");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: Class '1.class' should be in target project, but could not be found!
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("", "");
      boolean boolean0 = properties0.containsKey("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Properties properties0 = new Properties();
      boolean boolean0 = properties0.containsKey("3Y");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Properties properties0 = new Properties();
      double double0 = properties0.getDouble("", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("1", "");
      // Undeclared exception!
      try { 
        properties0.getDouble("1", (-1.0));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Properties properties0 = new Properties();
      long long0 = properties0.getLong("", 1L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("", "");
      // Undeclared exception!
      try { 
        properties0.getLong("", 0L);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Properties properties0 = new Properties();
      int int0 = properties0.getInt("ed:VqEe?Y3JNwMQd", 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set((String) null, "q.6{1A(|T`!&nQ!<p");
      String string0 = properties0.get((String) null);
      assertEquals("q.6{1A(|T`!&nQ!<p", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.set("*4*Gr6G)Ri", "*4*Gr6G)Ri");
      Map<String, String> map0 = properties0.toMap();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Properties properties0 = new Properties();
      Map<String, String> map0 = properties0.toMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        properties0.getObject("1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        properties0.getInt("1");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        properties0.getDouble("1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.getLong("^NbC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.getKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Properties properties0 = new Properties((Map<String, String>) null);
      // Undeclared exception!
      try { 
        properties0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Properties properties0 = new Properties();
      String string0 = properties0.get("");
      assertNull(string0);
  }
}
