/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:48:13 GMT 2022
 */

package jp.co.yahoo.yosegi.message.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.message.objects.DoubleObj;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleObj_ESTest extends DoubleObj_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(3.4028234663852886E38);
      float float0 = doubleObj0.getFloat();
      assertEquals(3.4028235E38F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(9.223372036854776E18);
      long long0 = doubleObj0.getLong();
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-9.223372036854776E18));
      long long0 = doubleObj0.getLong();
      assertEquals((-9223372036854775808L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(2.147483647E9);
      int int0 = doubleObj0.getInt();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-2.147483648E9));
      int int0 = doubleObj0.getInt();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(32767.0);
      short short0 = doubleObj0.getShort();
      assertEquals((short)32767, short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-32768.0));
      short short0 = doubleObj0.getShort();
      assertEquals((short) (-32768), short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(127.0);
      byte byte0 = doubleObj0.getByte();
      assertEquals((byte)127, byte0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(0.0);
      short short0 = doubleObj0.getShort();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(0.0);
      long long0 = doubleObj0.getLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(0.0);
      int int0 = doubleObj0.getInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(0.0);
      float float0 = doubleObj0.getFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-3.4028234663852886E38));
      float float0 = doubleObj0.getFloat();
      assertEquals((-3.4028235E38F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(0.0);
      double double0 = doubleObj0.getDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-1.0));
      double double0 = doubleObj0.getDouble();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(0.0);
      byte byte0 = doubleObj0.getByte();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-128.0));
      byte byte0 = doubleObj0.getByte();
      assertEquals((byte) (-128), byte0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-128.0));
      boolean boolean0 = doubleObj0.getBoolean();
      assertTrue(boolean0);
      assertEquals("-128.0", doubleObj0.getString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(0.0);
      boolean boolean0 = doubleObj0.getBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(3.4028234663852886E38);
      // Undeclared exception!
      try { 
        doubleObj0.getLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to long. double value is 3.4028234663852886E38
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-3.4028234663852886E38));
      // Undeclared exception!
      try { 
        doubleObj0.getLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to long. double value is -3.4028234663852886E38
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(3.4028234663852886E38);
      // Undeclared exception!
      try { 
        doubleObj0.getInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to integer. double value is 3.4028234663852886E38
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-3.4028234663852886E38));
      // Undeclared exception!
      try { 
        doubleObj0.getInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to integer. double value is -3.4028234663852886E38
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(2.147483647E9);
      // Undeclared exception!
      try { 
        doubleObj0.getShort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to short. double value is 2.147483647E9
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-3.4028234663852886E38));
      // Undeclared exception!
      try { 
        doubleObj0.getShort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to short. double value is -3.4028234663852886E38
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(2362.5071875383323);
      // Undeclared exception!
      try { 
        doubleObj0.getByte();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to byte. double value is 2362.5071875383323
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj((-9.223372036854776E18));
      // Undeclared exception!
      try { 
        doubleObj0.getByte();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. double to byte. double value is -9.223372036854776E18
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.DoubleObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(105.722);
      int int0 = doubleObj0.getObjectSize();
      assertEquals(8, int0);
      assertEquals("105.722", doubleObj0.getString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(105.722);
      doubleObj0.getPrimitiveType();
      assertEquals(105.722, doubleObj0.getDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(105.722);
      String string0 = doubleObj0.getString();
      assertEquals("105.722", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(1.0);
      double double0 = doubleObj0.getDouble();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(105.722);
      byte[] byteArray0 = doubleObj0.getBytes();
      assertEquals(7, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DoubleObj doubleObj0 = new DoubleObj(105.722);
      Object object0 = doubleObj0.get();
      assertEquals(105.722, object0);
  }
}
