/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:35:59 GMT 2022
 */

package jp.co.yahoo.yosegi.util.io.rle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import jp.co.yahoo.yosegi.util.io.rle.RleConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RleConverter_ESTest extends RleConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      Integer integer0 = new Integer(0);
      rleConverter0.add(integer0);
      rleConverter0.add(integer0);
      Integer integer1 = new Integer(1611);
      rleConverter0.add(integer1);
      rleConverter0.finish();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, (Object[]) null);
      rleConverter0.finish();
      Object[] objectArray0 = rleConverter0.getValueArray();
      assertNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[0];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      rleConverter0.finish();
      Object[] objectArray1 = rleConverter0.getValueArray();
      assertSame(objectArray0, objectArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      Integer integer0 = new Integer(0);
      rleConverter0.add(integer0);
      rleConverter0.finish();
      int int0 = rleConverter0.getMaxGroupLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer[] integerArray0 = new Integer[6];
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integer0, integerArray0);
      rleConverter0.finish();
      int[] intArray0 = rleConverter0.getLengthArray();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(2564);
      Integer[] integerArray0 = new Integer[0];
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integer0, integerArray0);
      rleConverter0.finish();
      int[] intArray0 = rleConverter0.getLengthArray();
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer[] integerArray0 = new Integer[8];
      Object object0 = new Object();
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, integerArray0);
      rleConverter0.add(object0);
      // Undeclared exception!
      try { 
        rleConverter0.finish();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // java.lang.Object
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Object object0 = new Object();
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      rleConverter0.add(object0);
      // Undeclared exception!
      try { 
        rleConverter0.finish();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(objectArray0[0], objectArray0);
      // Undeclared exception!
      try { 
        rleConverter0.add(rleConverter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Integer[] integerArray0 = new Integer[9];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, integerArray0);
      // Undeclared exception!
      try { 
        rleConverter0.add(integerArray0[5]);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // java.lang.Object
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[0];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      // Undeclared exception!
      try { 
        rleConverter0.add(rleConverter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer[] integerArray0 = new Integer[8];
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integer0, integerArray0);
      try { 
        rleConverter0.getMaxGroupLength();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Finish is not running.
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      rleConverter0.finish();
      int int0 = rleConverter0.getMaxGroupLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(objectArray0[0], objectArray0);
      try { 
        rleConverter0.getRowGroupCount();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Finish is not running.
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(258);
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integer0, (Integer[]) null);
      rleConverter0.finish();
      int int0 = rleConverter0.getRowGroupCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integerArray0[2], integerArray0);
      try { 
        rleConverter0.getLengthArray();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Finish is not running.
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, (Object[]) null);
      rleConverter0.finish();
      int[] intArray0 = rleConverter0.getLengthArray();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer[] integerArray0 = new Integer[1];
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integer0, integerArray0);
      try { 
        rleConverter0.getValueArray();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Finish is not running.
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      rleConverter0.finish();
      Object[] objectArray1 = rleConverter0.getValueArray();
      assertSame(objectArray1, objectArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(objectArray0[0], objectArray0);
      rleConverter0.finish();
      try { 
        rleConverter0.finish();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Processing has already been completed.
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(object0, objectArray0);
      rleConverter0.add(object0);
      rleConverter0.add(objectArray0[1]);
      rleConverter0.finish();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(258);
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integer0, (Integer[]) null);
      Integer integer1 = new Integer(61);
      rleConverter0.add(integer1);
      assertFalse(integer0.equals((Object)integer1));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      RleConverter<Object> rleConverter0 = new RleConverter<Object>(objectArray0[0], objectArray0);
      rleConverter0.finish();
      try { 
        rleConverter0.add(rleConverter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Processing has already been completed.
         //
         verifyException("jp.co.yahoo.yosegi.util.io.rle.RleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(258);
      RleConverter<Integer> rleConverter0 = new RleConverter<Integer>(integer0, (Integer[]) null);
      rleConverter0.add(integer0);
      rleConverter0.finish();
      int int0 = rleConverter0.getRowGroupCount();
      assertEquals(1, int0);
  }
}
