/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:47:08 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.analyzer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import jp.co.yahoo.yosegi.spread.analyzer.IColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizer;
import jp.co.yahoo.yosegi.spread.column.ArrayColumn;
import jp.co.yahoo.yosegi.spread.column.ArrowPrimitiveColumn;
import jp.co.yahoo.yosegi.spread.column.ColumnType;
import jp.co.yahoo.yosegi.spread.column.IArrowPrimitiveConnector;
import jp.co.yahoo.yosegi.spread.column.IColumn;
import jp.co.yahoo.yosegi.spread.column.IColumnManager;
import jp.co.yahoo.yosegi.spread.column.LazyColumn;
import jp.co.yahoo.yosegi.spread.column.NullColumn;
import jp.co.yahoo.yosegi.spread.column.UnionColumn;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnionColumnAnalizer_ESTest extends UnionColumnAnalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = "";
      HashMap<ColumnType, IColumn> hashMap0 = new HashMap<ColumnType, IColumn>();
      UnionColumn unionColumn0 = new UnionColumn("", hashMap0);
      UnionColumnAnalizer unionColumnAnalizer0 = new UnionColumnAnalizer(unionColumn0);
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      ColumnType columnType0 = ColumnType.NULL;
      hashMap0.put(columnType0, unionColumn0);
      // Undeclared exception!
      try { 
        unionColumnAnalizer0.analize();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrowPrimitiveColumn arrowPrimitiveColumn0 = new ArrowPrimitiveColumn((IArrowPrimitiveConnector) null);
      arrowPrimitiveColumn0.getColumn((-1191));
      ArrayColumn arrayColumn0 = new ArrayColumn(".X7&Y0d1d7T#g1cv=");
      UnionColumn unionColumn0 = new UnionColumn(arrayColumn0);
      UnionColumnAnalizer unionColumnAnalizer0 = new UnionColumnAnalizer(unionColumn0);
      IColumnAnalizeResult iColumnAnalizeResult0 = unionColumnAnalizer0.analize();
      assertEquals(0, iColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<ColumnType, IColumn> hashMap0 = new HashMap<ColumnType, IColumn>();
      UnionColumn unionColumn0 = new UnionColumn((String) null, hashMap0);
      UnionColumn unionColumn1 = new UnionColumn(unionColumn0);
      UnionColumnAnalizer unionColumnAnalizer0 = new UnionColumnAnalizer(unionColumn1);
      IColumnAnalizeResult iColumnAnalizeResult0 = unionColumnAnalizer0.analize();
      assertEquals(0, iColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IArrowPrimitiveConnector iArrowPrimitiveConnector0 = mock(IArrowPrimitiveConnector.class, new ViolatedAssumptionAnswer());
      ArrowPrimitiveColumn arrowPrimitiveColumn0 = new ArrowPrimitiveColumn(iArrowPrimitiveConnector0);
      IColumn iColumn0 = arrowPrimitiveColumn0.getColumn(244);
      UnionColumn unionColumn0 = new UnionColumn(iColumn0);
      UnionColumnAnalizer unionColumnAnalizer0 = new UnionColumnAnalizer(unionColumn0);
      // Undeclared exception!
      try { 
        unionColumnAnalizer0.analize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      UnionColumnAnalizer unionColumnAnalizer0 = new UnionColumnAnalizer(iColumn0);
      IColumnAnalizeResult iColumnAnalizeResult0 = unionColumnAnalizer0.analize();
      assertEquals(0, iColumnAnalizeResult0.getNullCount());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColumnType columnType0 = ColumnType.MAP;
      IColumnManager iColumnManager0 = mock(IColumnManager.class, new ViolatedAssumptionAnswer());
      doReturn((IColumn) null).when(iColumnManager0).get();
      LazyColumn lazyColumn0 = new LazyColumn("", columnType0, iColumnManager0);
      IColumn iColumn0 = lazyColumn0.getParentsColumn();
      UnionColumnAnalizer unionColumnAnalizer0 = new UnionColumnAnalizer(iColumn0);
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      unionColumnAnalizer0.analize();
      // Undeclared exception!
      try { 
        lazyColumn0.getColumn(columnType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.LazyColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UnionColumnAnalizer unionColumnAnalizer0 = new UnionColumnAnalizer((IColumn) null);
      // Undeclared exception!
      try { 
        unionColumnAnalizer0.analize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizer", e);
      }
  }
}
