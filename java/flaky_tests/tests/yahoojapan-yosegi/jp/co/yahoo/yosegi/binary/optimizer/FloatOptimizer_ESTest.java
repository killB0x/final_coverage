/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:02:20 GMT 2022
 */

package jp.co.yahoo.yosegi.binary.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import jp.co.yahoo.yosegi.binary.ColumnBinaryMakerConfig;
import jp.co.yahoo.yosegi.binary.optimizer.FloatOptimizer;
import jp.co.yahoo.yosegi.spread.analyzer.BytesColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.IColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.UnionColumnAnalizeResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatOptimizer_ESTest extends FloatOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      BytesColumnAnalizeResult bytesColumnAnalizeResult0 = new BytesColumnAnalizeResult("k\"e!MIXFi(>", 21, false, (-102249971), (-102249971), 342532750, (-102249971), (-102249971), (-102249971));
      FloatOptimizer floatOptimizer0 = new FloatOptimizer(columnBinaryMakerConfig0.param);
      ColumnBinaryMakerConfig columnBinaryMakerConfig1 = floatOptimizer0.getColumnBinaryMakerConfig(columnBinaryMakerConfig0, bytesColumnAnalizeResult0);
      assertNotSame(columnBinaryMakerConfig1, columnBinaryMakerConfig0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      LinkedList<IColumnAnalizeResult> linkedList0 = new LinkedList<IColumnAnalizeResult>();
      UnionColumnAnalizeResult unionColumnAnalizeResult0 = new UnionColumnAnalizeResult("k\"e!MIXFi(>", 201924897, 201924897, linkedList0);
      FloatOptimizer floatOptimizer0 = new FloatOptimizer(columnBinaryMakerConfig0.param);
      ColumnBinaryMakerConfig columnBinaryMakerConfig1 = floatOptimizer0.getColumnBinaryMakerConfig(columnBinaryMakerConfig0, unionColumnAnalizeResult0);
      assertNotSame(columnBinaryMakerConfig1, columnBinaryMakerConfig0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      FloatOptimizer floatOptimizer0 = new FloatOptimizer(columnBinaryMakerConfig0.param);
      // Undeclared exception!
      try { 
        floatOptimizer0.getColumnBinaryMakerConfig(columnBinaryMakerConfig0, (IColumnAnalizeResult) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.optimizer.FloatOptimizer", e);
      }
  }
}
