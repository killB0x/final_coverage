/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 20:19:33 GMT 2022
 */

package jp.co.yahoo.yosegi.binary.maker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.nio.BufferUnderflowException;
import java.util.List;
import java.util.Properties;
import java.util.Stack;
import jp.co.yahoo.yosegi.binary.ColumnBinary;
import jp.co.yahoo.yosegi.binary.ColumnBinaryMakerConfig;
import jp.co.yahoo.yosegi.binary.ColumnBinaryMakerCustomConfigNode;
import jp.co.yahoo.yosegi.binary.CompressResultNode;
import jp.co.yahoo.yosegi.binary.maker.ConstantColumnBinaryMaker;
import jp.co.yahoo.yosegi.binary.maker.DumpSpreadColumnBinaryMaker;
import jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker;
import jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayLongColumnBinaryMaker;
import jp.co.yahoo.yosegi.binary.maker.RleLongColumnBinaryMaker;
import jp.co.yahoo.yosegi.blockindex.BlockIndexNode;
import jp.co.yahoo.yosegi.compressor.DefaultCompressor;
import jp.co.yahoo.yosegi.compressor.ICompressor;
import jp.co.yahoo.yosegi.inmemory.ILoader;
import jp.co.yahoo.yosegi.inmemory.LoadType;
import jp.co.yahoo.yosegi.inmemory.YosegiArrayIndexLoader;
import jp.co.yahoo.yosegi.inmemory.YosegiConstLoader;
import jp.co.yahoo.yosegi.inmemory.YosegiNullLoader;
import jp.co.yahoo.yosegi.inmemory.YosegiSequentialLoader;
import jp.co.yahoo.yosegi.message.objects.IntegerObj;
import jp.co.yahoo.yosegi.message.objects.LongObj;
import jp.co.yahoo.yosegi.message.objects.PrimitiveObject;
import jp.co.yahoo.yosegi.message.objects.StringObj;
import jp.co.yahoo.yosegi.message.parser.java.JavaMapParser;
import jp.co.yahoo.yosegi.message.parser.json.JacksonNullParser;
import jp.co.yahoo.yosegi.spread.analyzer.IColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.SpreadColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.StringColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.column.BooleanCell;
import jp.co.yahoo.yosegi.spread.column.ColumnType;
import jp.co.yahoo.yosegi.spread.column.IColumn;
import jp.co.yahoo.yosegi.spread.column.SpreadColumn;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptimizedNullArrayDumpStringColumnBinaryMaker_ESTest extends OptimizedNullArrayDumpStringColumnBinaryMaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.inmemory.ArrowSequentialShortLoader", 32767, true, (-2118), (-2118), 6, 2883, (-1001), (-70), 0, 2883, (-1001), 4, 383, (-1475), 21, "jp.co.yahoo.yosegi.inmemory.ArrowSequentialShortLoader", (String) null, 1357, 1357, 21);
      int int0 = optimizedNullArrayDumpStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals((-16905), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, "V)$)9|D", 930);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 4);
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      yosegiSequentialLoader0.setFloat(0, 4);
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      DefaultCompressor defaultCompressor0 = new DefaultCompressor();
      columnBinaryMakerConfig0.compressorClass = (ICompressor) defaultCompressor0;
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ColumnBinary columnBinary1 = optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
      assertEquals(30, columnBinary1.rawDataSize);
      assertEquals(7, columnBinary1.logicalDataSize);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      LongObj longObj0 = new LongObj(0L);
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(longObj0, "jp.co.yahoo.yosegi.compressor.CompressResult", (-449));
      optimizedNullArrayDumpStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, 1978);
      assertEquals(8, columnBinary0.rawDataSize);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      ColumnType columnType0 = ColumnType.STRING;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, (-1379L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "Ozm(K8Y5[T%BFaME%", (-21));
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 8);
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load(columnBinary0, yosegiSequentialLoader0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("~$NSV{!k7pl)", 1, true, 1, 1, 0, (-4711), 383, (-1838656495), (-2118), 1, 1, (-16), (-4711), 383, (-838), "~$NSV{!k7pl)", "~$NSV{!k7pl)", 0, (-838), 1);
      int int0 = optimizedNullArrayDumpStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals((-3603), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      LongObj longObj0 = new LongObj((-1000L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(longObj0, "k", 3254);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 26032);
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      ColumnBinaryMakerCustomConfigNode columnBinaryMakerCustomConfigNode0 = new ColumnBinaryMakerCustomConfigNode("jp.co.yahoo.yosegi.compressor.DefaultCompressor", columnBinaryMakerConfig0);
      // Undeclared exception!
      optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, columnBinaryMakerCustomConfigNode0, (CompressResultNode) null, iColumn0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, "Can not down cast. doble to integer. double value is ", 2054408);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 1);
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      yosegiSequentialLoader0.setBytes(0, columnBinary0.binary, 0, 2054408);
      CompressResultNode compressResultNode0 = new CompressResultNode();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      LongObj longObj0 = new LongObj((-321L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(longObj0, "Loader type {s not SEQUENTIAL.", (-1056));
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      ColumnBinaryMakerCustomConfigNode columnBinaryMakerCustomConfigNode0 = new ColumnBinaryMakerCustomConfigNode("Loader type {s not SEQUENTIAL.", columnBinaryMakerConfig0);
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, (-2707));
      IColumn iColumn0 = yosegiConstLoader0.build();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, columnBinaryMakerCustomConfigNode0, compressResultNode0, iColumn0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2707
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, "e5~z]xI", 3500);
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      YosegiArrayIndexLoader yosegiArrayIndexLoader0 = new YosegiArrayIndexLoader(columnBinary0, 927);
      yosegiArrayIndexLoader0.finish();
      IColumn iColumn0 = yosegiArrayIndexLoader0.build();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, (ColumnBinary) null, (-695));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      ColumnType columnType0 = ColumnType.STRING;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, (-1378L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "Ozm(K8Y5[T%BFaME%", (-21));
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, 8);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      SpreadColumn spreadColumn0 = new SpreadColumn("t2{AF");
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ColumnBinary columnBinary0 = optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, spreadColumn0);
      columnBinary0.binaryLength = 1612;
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.setBlockIndexNode((BlockIndexNode) null, columnBinary0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      ColumnType columnType0 = ColumnType.BYTES;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, 1L);
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "=0ZH$nq.[Lr", 86);
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, 8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition > limit: (9 > 8)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load((ColumnBinary) null, (ILoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, "", 3695);
      columnBinary0.binaryLength = 3695;
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 3695);
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load(columnBinary0, yosegiSequentialLoader0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      IntegerObj integerObj0 = new IntegerObj(1614);
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(integerObj0, "", 1614);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 6456);
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load(columnBinary0, yosegiSequentialLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition > limit: (1618 > 4)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.getLoadType((ColumnBinary) null, 15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.calcBinarySize((IColumnAnalizeResult) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      Stack<IColumnAnalizeResult> stack0 = new Stack<IColumnAnalizeResult>();
      SpreadColumnAnalizeResult spreadColumnAnalizeResult0 = new SpreadColumnAnalizeResult("2yyQu>x}z", (-963), (-963), stack0);
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.calcBinarySize(spreadColumnAnalizeResult0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class jp.co.yahoo.yosegi.spread.analyzer.SpreadColumnAnalizeResult cannot be cast to class jp.co.yahoo.yosegi.spread.analyzer.StringColumnAnalizeResult (jp.co.yahoo.yosegi.spread.analyzer.SpreadColumnAnalizeResult and jp.co.yahoo.yosegi.spread.analyzer.StringColumnAnalizeResult are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3d635c1d)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      RleLongColumnBinaryMaker rleLongColumnBinaryMaker0 = new RleLongColumnBinaryMaker();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      Properties properties0 = new Properties();
      JavaMapParser javaMapParser0 = new JavaMapParser(properties0);
      ColumnBinaryMakerCustomConfigNode columnBinaryMakerCustomConfigNode0 = new ColumnBinaryMakerCustomConfigNode(columnBinaryMakerConfig0, javaMapParser0);
      CompressResultNode compressResultNode0 = new CompressResultNode();
      YosegiNullLoader yosegiNullLoader0 = new YosegiNullLoader(9978);
      IColumn iColumn0 = yosegiNullLoader0.build();
      ColumnBinary columnBinary0 = rleLongColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, columnBinaryMakerCustomConfigNode0, compressResultNode0, iColumn0);
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load(columnBinary0, yosegiNullLoader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Loader type is not SEQUENTIAL.
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      ColumnBinary columnBinary0 = DumpSpreadColumnBinaryMaker.createSpreadColumnBinary("_GX", 1786, (List<ColumnBinary>) null);
      columnBinary0.setRepetitions(columnBinary0.repetitions, 1762);
      LoadType loadType0 = LoadType.DICTIONARY;
      ILoader<BooleanCell> iLoader0 = (ILoader<BooleanCell>) mock(ILoader.class, new ViolatedAssumptionAnswer());
      doReturn(loadType0).when(iLoader0).getLoaderType();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load(columnBinary0, iLoader0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class jp.co.yahoo.yosegi.inmemory.ILoader$MockitoMock$396178102 cannot be cast to class jp.co.yahoo.yosegi.inmemory.IDictionaryLoader (jp.co.yahoo.yosegi.inmemory.ILoader$MockitoMock$396178102 and jp.co.yahoo.yosegi.inmemory.IDictionaryLoader are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3d635c1d)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      LongObj longObj0 = new LongObj(1L);
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(longObj0, "%s/%s", 1371);
      columnBinary0.setRepetitions((int[]) null, 1371);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 1371);
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load(columnBinary0, yosegiSequentialLoader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Loader type is not DICTIONARY.
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayDumpStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      LongObj longObj0 = new LongObj((-369L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(longObj0, ",", (-1));
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 0);
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.load(columnBinary0, yosegiSequentialLoader0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      LongObj longObj0 = new LongObj((-1422L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(longObj0, "!+Bu<ZTa", 243);
      columnBinary0.isSetLoadSize = true;
      LoadType loadType0 = optimizedNullArrayDumpStringColumnBinaryMaker0.getLoadType(columnBinary0, 0);
      assertEquals(LoadType.DICTIONARY, loadType0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      Stack<ColumnBinary> stack0 = new Stack<ColumnBinary>();
      ColumnBinary columnBinary0 = DumpSpreadColumnBinaryMaker.createSpreadColumnBinary("Unsupported method putFloat()", 2350, stack0);
      LoadType loadType0 = optimizedNullArrayDumpStringColumnBinaryMaker0.getLoadType(columnBinary0, 0);
      assertEquals(LoadType.SEQUENTIAL, loadType0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("u58'L,6N7Qj", 1, false, 20, 2, 20, 74, 1, 0, 554, 1, 1, 554, 3963, 1, 1, "u58'L,6N7Qj", "u58'L,6N7Qj", (-1), 21, 205);
      int int0 = optimizedNullArrayDumpStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals(583, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.binary.maker.UnsupportedColumnBinaryMaker", 0, false, 0, 0, 0, (-1), (-1910), 37, 0, 0, 37, 0, 0, (-1910), 165, "", "jp.co.yahoo.yosegi.compressor.GzipCompressor", 0, (-1), 0);
      int int0 = optimizedNullArrayDumpStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("jp.co.yahoo.yosegi.binary.maker.ConstantColumnBinaryMaker", (-2404), true, 0, 3293, 1, (-1285), 61, 1969, 3308, 3321, 0, 1, 114, 2677, 115, "ko@ b$g:7=sNL-A63j", "ko@ b$g:7=sNL-A63j", 4, 490, 0);
      int int0 = optimizedNullArrayDumpStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, (String) null, 3274);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 4);
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      yosegiSequentialLoader0.setFloat(1, 4);
      yosegiSequentialLoader0.setBytes(0, columnBinary0.binary);
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, (CompressResultNode) null, iColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      JacksonNullParser jacksonNullParser0 = new JacksonNullParser();
      ColumnBinaryMakerCustomConfigNode columnBinaryMakerCustomConfigNode0 = new ColumnBinaryMakerCustomConfigNode(columnBinaryMakerConfig0, jacksonNullParser0);
      CompressResultNode compressResultNode0 = new CompressResultNode();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, "ko@ b$g:7=sNL-A63j", 3321);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 1);
      yosegiSequentialLoader0.setString(0, "jp.co.yahoo.yosegi.binary.maker.ConstantColumnBinaryMaker");
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      ColumnBinary columnBinary1 = optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, columnBinaryMakerCustomConfigNode0, compressResultNode0, iColumn0);
      assertEquals(61, columnBinary1.rawDataSize);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, "U]jdG)$t(96", 886);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 2);
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      yosegiSequentialLoader0.setFloat(1, 0.0F);
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("java.util.zip.GZIPOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      JacksonNullParser jacksonNullParser0 = new JacksonNullParser();
      ColumnBinaryMakerCustomConfigNode columnBinaryMakerCustomConfigNode0 = new ColumnBinaryMakerCustomConfigNode(columnBinaryMakerConfig0, jacksonNullParser0);
      CompressResultNode compressResultNode0 = new CompressResultNode();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, (String) null, 3251);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 3251);
      yosegiSequentialLoader0.setString(4, (String) null);
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, columnBinaryMakerCustomConfigNode0, compressResultNode0, iColumn0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("java.util.zip.GZIPOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      JacksonNullParser jacksonNullParser0 = new JacksonNullParser();
      ColumnBinaryMakerCustomConfigNode columnBinaryMakerCustomConfigNode0 = new ColumnBinaryMakerCustomConfigNode(columnBinaryMakerConfig0, jacksonNullParser0);
      CompressResultNode compressResultNode0 = new CompressResultNode();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, (String) null, 3251);
      YosegiSequentialLoader yosegiSequentialLoader0 = new YosegiSequentialLoader(columnBinary0, 3251);
      IColumn iColumn0 = yosegiSequentialLoader0.build();
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, columnBinaryMakerCustomConfigNode0, compressResultNode0, iColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OptimizedNullArrayDumpStringColumnBinaryMaker optimizedNullArrayDumpStringColumnBinaryMaker0 = new OptimizedNullArrayDumpStringColumnBinaryMaker();
      SpreadColumn spreadColumn0 = new SpreadColumn("t2{AF");
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ColumnBinary columnBinary0 = optimizedNullArrayDumpStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, spreadColumn0);
      // Undeclared exception!
      try { 
        optimizedNullArrayDumpStringColumnBinaryMaker0.setBlockIndexNode((BlockIndexNode) null, columnBinary0, 0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
