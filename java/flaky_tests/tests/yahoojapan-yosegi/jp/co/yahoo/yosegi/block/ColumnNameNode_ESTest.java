/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:57:45 GMT 2022
 */

package jp.co.yahoo.yosegi.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.block.ColumnNameNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ColumnNameNode_ESTest extends ColumnNameNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.toString();
      columnNameNode0.needChild = false;
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.isChildEmpty();
      ColumnNameNode columnNameNode1 = new ColumnNameNode("");
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode1.addChild(columnNameNode0);
      ColumnNameNode columnNameNode2 = columnNameNode1.getChild("");
      columnNameNode2.getChildSize();
      columnNameNode1.isChildEmpty();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.toString();
      columnNameNode0.addChild(columnNameNode0);
      columnNameNode0.addChild(columnNameNode0);
      ColumnNameNode columnNameNode1 = columnNameNode0.getChild("");
      columnNameNode0.addChild(columnNameNode1);
      ColumnNameNode columnNameNode2 = new ColumnNameNode("\n");
      columnNameNode2.setNeedAllChild(false);
      ColumnNameNode columnNameNode3 = new ColumnNameNode("^3R~C$$sH", false);
      columnNameNode3.isChildEmpty();
      columnNameNode2.isChildEmpty();
      ColumnNameNode columnNameNode4 = new ColumnNameNode("", true);
      columnNameNode0.isDisable();
      columnNameNode0.isChildEmpty();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode((String) null);
      columnNameNode0.containsChild("");
      columnNameNode0.toString((-562));
      ColumnNameNode columnNameNode1 = new ColumnNameNode(">]0ZO", false);
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode0.getNodeName();
      ColumnNameNode columnNameNode2 = new ColumnNameNode((String) null);
      columnNameNode2.containsChild(">]0ZO");
      columnNameNode0.isChildEmpty();
      ColumnNameNode columnNameNode3 = new ColumnNameNode("K}~|zvs|_B9=fy1(Dn", true);
      columnNameNode3.isChildEmpty();
      columnNameNode1.getChildSize();
      columnNameNode1.containsChild(";*Pb_H^!?");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "{";
      ColumnNameNode columnNameNode0 = new ColumnNameNode("{");
      columnNameNode0.setNeedAllChild(false);
      columnNameNode0.setNeedAllChild(false);
      ColumnNameNode columnNameNode1 = new ColumnNameNode("{", false);
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode0.isDisableFlag = true;
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.isChildEmpty();
      columnNameNode0.isDisableFlag = true;
      ColumnNameNode columnNameNode2 = columnNameNode0.getChild("{");
      columnNameNode2.addChild(columnNameNode1);
      // Undeclared exception!
      columnNameNode2.toString();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.toString(0);
      ColumnNameNode columnNameNode1 = new ColumnNameNode("", true);
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode0.toString(1);
      columnNameNode0.toString((-2210));
      columnNameNode0.needChild = true;
      columnNameNode0.getChildSize();
      columnNameNode0.isChildEmpty();
      columnNameNode0.getChildSize();
      columnNameNode1.isNeedAllChild();
      columnNameNode0.isDisable();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.addChild(columnNameNode0);
      columnNameNode0.containsChild("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.toString(1);
      columnNameNode0.toString();
      columnNameNode0.toString();
      columnNameNode0.toString();
      ColumnNameNode columnNameNode1 = new ColumnNameNode("\n|-             ");
      columnNameNode1.isNeedAllChild();
      columnNameNode0.getNodeName();
      columnNameNode1.isDisable();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode((String) null);
      columnNameNode0.isDisableFlag = false;
      columnNameNode0.toString(0);
      columnNameNode0.containsChild("");
      columnNameNode0.isDisableFlag = false;
      columnNameNode0.setNeedAllChild(false);
      columnNameNode0.toString((-562));
      columnNameNode0.isChildEmpty();
      columnNameNode0.isChildEmpty();
      columnNameNode0.isDisable();
      columnNameNode0.isNeedAllChild();
      columnNameNode0.isDisable();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      boolean boolean0 = true;
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.setNeedAllChild(true);
      boolean boolean1 = true;
      ColumnNameNode columnNameNode1 = new ColumnNameNode("", true);
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode0.isDisableFlag = true;
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.isChildEmpty();
      columnNameNode0.isDisableFlag = true;
      ColumnNameNode columnNameNode2 = columnNameNode0.getChild("");
      columnNameNode2.addChild(columnNameNode1);
      columnNameNode0.setNeedAllChild(false);
      // Undeclared exception!
      columnNameNode0.toString();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.isChildEmpty();
      columnNameNode0.needChild = true;
      // Undeclared exception!
      try { 
        columnNameNode0.addChild((ColumnNameNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.block.ColumnNameNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.addChild(columnNameNode0);
      columnNameNode0.addChild(columnNameNode0);
      columnNameNode0.getChildSize();
      columnNameNode0.isChildEmpty();
      // Undeclared exception!
      columnNameNode0.toString(1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "&dtm\\-)B*(=iVH-s5:.";
      ColumnNameNode columnNameNode0 = new ColumnNameNode("&dtm-)B*(=iVH-s5:.");
      columnNameNode0.getNodeName();
      columnNameNode0.isDisableFlag = true;
      columnNameNode0.needChild = false;
      columnNameNode0.getChildSize();
      boolean boolean0 = true;
      ColumnNameNode columnNameNode1 = new ColumnNameNode("&dtm-)B*(=iVH-s5:.");
      columnNameNode1.addChild(columnNameNode0);
      columnNameNode1.addChild(columnNameNode0);
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode0.setNeedAllChild(false);
      columnNameNode1.isDisableFlag = true;
      columnNameNode0.needChild = true;
      boolean boolean1 = true;
      // Undeclared exception!
      columnNameNode0.toString(2131);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("\n|-             ");
      columnNameNode0.isNeedAllChild();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("        'u ");
      columnNameNode0.isDisable();
      columnNameNode0.isChildEmpty();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("3o");
      columnNameNode0.toString(1);
      columnNameNode0.toString();
      columnNameNode0.isDisableFlag = true;
      columnNameNode0.needChild = true;
      columnNameNode0.isDisableFlag = false;
      columnNameNode0.toString();
      columnNameNode0.isDisableFlag = true;
      columnNameNode0.toString();
      columnNameNode0.isNeedAllChild();
      columnNameNode0.getNodeName();
      columnNameNode0.isDisable();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("\n");
      columnNameNode0.getNodeName();
      columnNameNode0.toString();
      columnNameNode0.getNodeName();
      columnNameNode0.getChildSize();
      columnNameNode0.toString();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.setNeedAllChild(true);
      ColumnNameNode columnNameNode1 = new ColumnNameNode("", true);
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode0.isDisableFlag = true;
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.isChildEmpty();
      columnNameNode0.isDisableFlag = true;
      ColumnNameNode columnNameNode2 = columnNameNode0.getChild("");
      columnNameNode2.toString();
      ColumnNameNode columnNameNode3 = new ColumnNameNode("FIP3MRK", true);
      columnNameNode0.containsChild("");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("'7EzO'k$4LfFA");
      columnNameNode0.getNodeName();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.containsChild("");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode(")hyf@$ChSiE");
      columnNameNode0.getChildSize();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("o9T`< wtk");
      columnNameNode0.addChild(columnNameNode0);
      columnNameNode0.isChildEmpty();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("B9T`< wtk");
      columnNameNode0.addChild(columnNameNode0);
      assertEquals(1, columnNameNode0.getChildSize());
      
      columnNameNode0.isChildEmpty();
      // Undeclared exception!
      columnNameNode0.toString();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.isDisableFlag = false;
      columnNameNode0.toString(13);
      columnNameNode0.toString(13);
      columnNameNode0.setNeedAllChild(false);
      columnNameNode0.isDisableFlag = true;
      ColumnNameNode columnNameNode1 = new ColumnNameNode("             ", false);
      columnNameNode0.addChild(columnNameNode1);
      columnNameNode0.needChild = false;
      columnNameNode0.needChild = true;
      columnNameNode0.toString((-2974));
      columnNameNode0.toString();
      columnNameNode0.toString();
      ColumnNameNode columnNameNode2 = new ColumnNameNode("");
      columnNameNode2.isDisableFlag = false;
      columnNameNode2.isDisableFlag = false;
      columnNameNode0.addChild(columnNameNode2);
      columnNameNode1.addChild(columnNameNode2);
      columnNameNode0.getChildSize();
      assertEquals(2, columnNameNode0.getChildSize());
      
      columnNameNode2.isDisableFlag = false;
      columnNameNode1.getNodeName();
      columnNameNode2.containsChild("             ");
      columnNameNode1.isChildEmpty();
      columnNameNode1.containsChild("\n|-             ");
      columnNameNode1.containsChild("\n|-             ");
      columnNameNode1.toString((-2974));
      String string0 = columnNameNode2.toString(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      columnNameNode0.getChild("");
      // Undeclared exception!
      try { 
        columnNameNode0.addChild((ColumnNameNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.block.ColumnNameNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("v", true);
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.getChildSize();
      assertTrue(columnNameNode0.needChild);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("");
      String string0 = columnNameNode0.toString((-4097));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("?t^|!xi%2]m+!C2P");
      String string0 = columnNameNode0.toString();
      assertEquals("?t^|!xi%2]m+!C2P\n", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("B9T`< wtk");
      ColumnNameNode columnNameNode1 = new ColumnNameNode("B9T`< wtk", false);
      assertFalse(columnNameNode1.isDisableFlag);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("xEXL");
      ColumnNameNode columnNameNode1 = columnNameNode0.getChild("xEXL");
      assertNull(columnNameNode1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("O");
      String string0 = columnNameNode0.toString(403);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                   O", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ColumnNameNode columnNameNode0 = new ColumnNameNode("??I.OG", true);
      columnNameNode0.toString(834);
      columnNameNode0.toString();
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.toString();
      columnNameNode0.setNeedAllChild(true);
      columnNameNode0.getChild("");
      // Undeclared exception!
      try { 
        columnNameNode0.addChild((ColumnNameNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.block.ColumnNameNode", e);
      }
  }
}
