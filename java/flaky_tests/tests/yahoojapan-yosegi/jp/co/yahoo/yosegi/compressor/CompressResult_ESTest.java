/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:47:38 GMT 2022
 */

package jp.co.yahoo.yosegi.compressor;

import org.junit.Test;
import static org.junit.Assert.*;
import jp.co.yahoo.yosegi.compressor.CompressResult;
import jp.co.yahoo.yosegi.compressor.CompressionPolicy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompressResult_ESTest extends CompressResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.SPEED;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, 1);
      compressResult0.feedBack(2, 2);
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.BEST_COMPRESSION;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, 0.0);
      compressResult0.feedBack(922, (-2195));
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.DEFAULT;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, (-1545.52901981));
      compressResult0.feedBack((-2686), 0);
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.BEST_COMPRESSION;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, 1772.030518172);
      compressResult0.feedBack(91, 511);
      int int0 = compressResult0.getCurrentLevel();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.SPEED;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, (-841.13990508));
      compressResult0.getCompressionPolicy();
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.SPEED;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, 1401);
      compressResult0.feedBack(1401, 1401);
      assertEquals(1, compressResult0.getCurrentLevel());
      
      compressResult0.setEnd();
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.SPEED;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, 1772.030518172);
      compressResult0.feedBack(1867, 1867);
      compressResult0.feedBack(1867, 1);
      compressResult0.setEnd();
      assertEquals(1, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.SPEED;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, 1401);
      compressResult0.setEnd();
      compressResult0.feedBack(1401, 1401);
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.SPEED;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, (-841.13990508));
      compressResult0.feedBack(1246, 0);
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.BEST_SPEED;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, (-782.121187));
      compressResult0.feedBack(1, 1);
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.DEFAULT;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, (-1545.52901981));
      compressResult0.feedBack(0, 0);
      assertEquals(0, compressResult0.getCurrentLevel());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompressionPolicy compressionPolicy0 = CompressionPolicy.BEST_COMPRESSION;
      CompressResult compressResult0 = new CompressResult(compressionPolicy0, (-1.0));
      int int0 = compressResult0.getCurrentLevel();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompressResult compressResult0 = new CompressResult((CompressionPolicy) null, (-1654.9115));
      compressResult0.getCompressionPolicy();
      assertEquals(0, compressResult0.getCurrentLevel());
  }
}
