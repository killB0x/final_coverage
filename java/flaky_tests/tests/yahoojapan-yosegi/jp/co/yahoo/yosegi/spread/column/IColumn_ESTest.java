/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:50:10 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.column;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.spread.column.ArrayColumn;
import jp.co.yahoo.yosegi.spread.column.IColumn;
import jp.co.yahoo.yosegi.spread.column.NullColumn;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IColumn_ESTest extends IColumn_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      // Undeclared exception!
      try { 
        iColumn0.getDictionaryIsNullArray();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This method only supports dictionary columns.
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.IColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayColumn arrayColumn0 = new ArrayColumn("|qXTH\"uwX");
      // Undeclared exception!
      try { 
        arrayColumn0.getDictionaryArray();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This method only supports dictionary columns.
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.IColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      boolean boolean0 = iColumn0.isExpandColumn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      // Undeclared exception!
      try { 
        iColumn0.getExpandIndexArray();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This method only supports expanded columns.
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.IColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayColumn arrayColumn0 = new ArrayColumn("");
      boolean boolean0 = arrayColumn0.isDictionary();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      // Undeclared exception!
      try { 
        iColumn0.getInnerColumn();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This method only supports expanded columns.
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.IColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      // Undeclared exception!
      try { 
        iColumn0.getDictionaryIndexArray();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This method only supports dictionary columns.
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.IColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      // Undeclared exception!
      try { 
        iColumn0.getDictionarySize();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This method only supports dictionary columns.
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.IColumn", e);
      }
  }
}
