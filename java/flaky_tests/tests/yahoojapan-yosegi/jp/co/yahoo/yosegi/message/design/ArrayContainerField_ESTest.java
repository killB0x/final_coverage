/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:23:22 GMT 2022
 */

package jp.co.yahoo.yosegi.message.design;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import jp.co.yahoo.yosegi.message.design.ArrayContainerField;
import jp.co.yahoo.yosegi.message.design.BooleanField;
import jp.co.yahoo.yosegi.message.design.ByteField;
import jp.co.yahoo.yosegi.message.design.FieldType;
import jp.co.yahoo.yosegi.message.design.FloatField;
import jp.co.yahoo.yosegi.message.design.IField;
import jp.co.yahoo.yosegi.message.design.NullField;
import jp.co.yahoo.yosegi.message.design.Properties;
import jp.co.yahoo.yosegi.message.design.StructContainerField;
import jp.co.yahoo.yosegi.message.design.UnionField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayContainerField_ESTest extends ArrayContainerField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullField nullField0 = new NullField("<-q+\"!");
      Properties properties0 = new Properties();
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("<-q+\"!", nullField0, properties0);
      Map<Object, Object> map0 = arrayContainerField0.toJavaObject();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnionField unionField0 = new UnionField("jp.co.yahoo.yosegi.message.design.ArrayContainerField");
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("", unionField0, (Properties) null);
      Properties properties0 = arrayContainerField0.getProperties();
      assertNull(properties0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      FloatField floatField0 = new FloatField((String) null, properties0);
      ArrayContainerField arrayContainerField0 = new ArrayContainerField((String) null, floatField0, properties0);
      String string0 = arrayContainerField0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StructContainerField structContainerField0 = new StructContainerField("V6];");
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("", structContainerField0);
      String string0 = arrayContainerField0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Properties properties0 = new Properties();
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("<-+\"!", (IField) null, properties0);
      IField iField0 = arrayContainerField0.getField();
      assertNull(iField0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("child", (IField) null);
      // Undeclared exception!
      try { 
        arrayContainerField0.merge(arrayContainerField0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.ArrayContainerField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("|?", (IField) null, properties0);
      String string0 = arrayContainerField0.getName();
      assertEquals("|?", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteField byteField0 = new ByteField("");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("IW?", byteField0, properties0);
      Properties properties1 = arrayContainerField0.getProperties();
      assertSame(properties0, properties1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteField byteField0 = new ByteField("");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("IW?", byteField0, properties0);
      IField iField0 = arrayContainerField0.getField();
      assertSame(iField0, byteField0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnionField unionField0 = new UnionField("jp.co.yahoo.yosegi.message.design.ArrayContainerField");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("jp.co.yahoo.yosegi.message.design.ArrayContainerField", unionField0, properties0);
      FieldType fieldType0 = arrayContainerField0.getFieldType();
      assertEquals(FieldType.ARRAY, fieldType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteField byteField0 = new ByteField("");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("IW?", byteField0, properties0);
      BooleanField booleanField0 = new BooleanField("jp.co.yahoo.yosegi.message.design.ArrayContainerField");
      ArrayContainerField arrayContainerField1 = new ArrayContainerField("target is not ArrayContainerField.", booleanField0);
      arrayContainerField1.merge(arrayContainerField0);
      arrayContainerField1.merge(arrayContainerField0);
      assertEquals(FieldType.ARRAY, arrayContainerField0.getFieldType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnionField unionField0 = new UnionField("jp.co.yahoo.yosegi.message.design.ArrayContainerField");
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("jp.co.yahoo.yosegi.message.design.ArrayContainerField", unionField0);
      // Undeclared exception!
      try { 
        arrayContainerField0.merge(unionField0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // target is not ArrayContainerField.
         //
         verifyException("jp.co.yahoo.yosegi.message.design.ArrayContainerField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnionField unionField0 = new UnionField("jp.co.yahoo.yosegi.message.design.ArrayContainerField");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("jp.co.yahoo.yosegi.message.design.ArrayContainerField", unionField0, properties0);
      arrayContainerField0.merge(arrayContainerField0);
      assertEquals(FieldType.ARRAY, arrayContainerField0.getFieldType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("@WH-O| !NU?1*I^2>'I", (IField) null);
      // Undeclared exception!
      try { 
        arrayContainerField0.toJavaObject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.design.ArrayContainerField", e);
      }
  }
}
