/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:37:38 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.analyzer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.spread.analyzer.ColumnAnalizerFactory;
import jp.co.yahoo.yosegi.spread.analyzer.IColumnAnalizer;
import jp.co.yahoo.yosegi.spread.column.ArrayColumn;
import jp.co.yahoo.yosegi.spread.column.ArrowPrimitiveColumn;
import jp.co.yahoo.yosegi.spread.column.ColumnType;
import jp.co.yahoo.yosegi.spread.column.IArrowPrimitiveConnector;
import jp.co.yahoo.yosegi.spread.column.IColumn;
import jp.co.yahoo.yosegi.spread.column.NullColumn;
import jp.co.yahoo.yosegi.spread.column.PrimitiveColumn;
import jp.co.yahoo.yosegi.spread.column.SpreadColumn;
import jp.co.yahoo.yosegi.spread.column.UnionColumn;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ColumnAnalizerFactory_ESTest extends ColumnAnalizerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColumnAnalizerFactory.get((IColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.analyzer.ColumnAnalizerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SpreadColumn spreadColumn0 = new SpreadColumn("'Nt$[RvtH.1,D&X0e#");
      IColumn iColumn0 = spreadColumn0.getColumn("Can not down cast. long to in. long value is ");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(iColumn0);
      assertNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColumnType columnType0 = ColumnType.BYTES;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "8BDEUEN");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(primitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColumnType columnType0 = ColumnType.STRING;
      ColumnType columnType1 = ColumnType.SHORT;
      IArrowPrimitiveConnector iArrowPrimitiveConnector0 = mock(IArrowPrimitiveConnector.class, new ViolatedAssumptionAnswer());
      doReturn(columnType0, columnType1).when(iArrowPrimitiveConnector0).getColumnType();
      ArrowPrimitiveColumn arrowPrimitiveColumn0 = new ArrowPrimitiveColumn(iArrowPrimitiveConnector0);
      ColumnAnalizerFactory.get(arrowPrimitiveColumn0);
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(arrowPrimitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColumnType columnType0 = ColumnType.LONG;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "'Nt$[RvtH.1,D&X0e#");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(primitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColumnType columnType0 = ColumnType.INTEGER;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "'Nt$[RvtH.1,D&X0e#");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(primitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColumnType columnType0 = ColumnType.FLOAT;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "jp.co.yahoo.yosegi.message.design.StructContainerField");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(primitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColumnType columnType0 = ColumnType.DOUBLE;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, (String) null);
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(primitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColumnType columnType0 = ColumnType.BYTE;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "8BEU(EN");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(primitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColumnType columnType0 = ColumnType.BOOLEAN;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "5?#W~$~tHa");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(primitiveColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SpreadColumn spreadColumn0 = new SpreadColumn("SD}t23)bbgi");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(spreadColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayColumn arrayColumn0 = new ArrayColumn("Q)o3oyz<3]]p[rbvZK");
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(arrayColumn0);
      assertNotNull(iColumnAnalizer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IColumn iColumn0 = NullColumn.getInstance();
      UnionColumn unionColumn0 = new UnionColumn(iColumn0);
      IColumnAnalizer iColumnAnalizer0 = ColumnAnalizerFactory.get(unionColumn0);
      assertNotNull(iColumnAnalizer0);
  }
}
