/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:37:23 GMT 2022
 */

package jp.co.yahoo.yosegi.message.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.message.objects.LongObj;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LongObj_ESTest extends LongObj_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongObj longObj0 = new LongObj(2147483647L);
      int int0 = longObj0.getInt();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LongObj longObj0 = new LongObj((-2147483648L));
      int int0 = longObj0.getInt();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongObj longObj0 = new LongObj(32767L);
      short short0 = longObj0.getShort();
      assertEquals((short)32767, short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongObj longObj0 = new LongObj((-32768L));
      short short0 = longObj0.getShort();
      assertEquals((short) (-32768), short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LongObj longObj0 = new LongObj(127L);
      byte byte0 = longObj0.getByte();
      assertEquals((byte)127, byte0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongObj longObj0 = new LongObj((-128L));
      byte byte0 = longObj0.getByte();
      assertEquals((byte) (-128), byte0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongObj longObj0 = new LongObj(0L);
      short short0 = longObj0.getShort();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongObj longObj0 = new LongObj(0L);
      long long0 = longObj0.getLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LongObj longObj0 = new LongObj(1L);
      long long0 = longObj0.getLong();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LongObj longObj0 = new LongObj(0L);
      int int0 = longObj0.getInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongObj longObj0 = new LongObj(0L);
      float float0 = longObj0.getFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LongObj longObj0 = new LongObj(127L);
      float float0 = longObj0.getFloat();
      assertEquals(127.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongObj longObj0 = new LongObj(0L);
      double double0 = longObj0.getDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LongObj longObj0 = new LongObj(1L);
      double double0 = longObj0.getDouble();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LongObj longObj0 = new LongObj(0L);
      byte byte0 = longObj0.getByte();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LongObj longObj0 = new LongObj((-22L));
      boolean boolean0 = longObj0.getBoolean();
      assertTrue(boolean0);
      assertEquals((-22.0), longObj0.getDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LongObj longObj0 = new LongObj(0L);
      boolean boolean0 = longObj0.getBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LongObj longObj0 = new LongObj(2147483658L);
      // Undeclared exception!
      try { 
        longObj0.getInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. long to int. long value is 2147483658
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.LongObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LongObj longObj0 = new LongObj((-2147483664L));
      // Undeclared exception!
      try { 
        longObj0.getInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. long to int. long value is -2147483664
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.LongObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LongObj longObj0 = new LongObj(2147483647L);
      // Undeclared exception!
      try { 
        longObj0.getShort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. long to short. long value is 2147483647
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.LongObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LongObj longObj0 = new LongObj((-2147483644L));
      // Undeclared exception!
      try { 
        longObj0.getShort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. long to short. long value is -2147483644
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.LongObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LongObj longObj0 = new LongObj(6886L);
      // Undeclared exception!
      try { 
        longObj0.getByte();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. long to byte. long value is 6886
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.LongObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LongObj longObj0 = new LongObj((-210L));
      // Undeclared exception!
      try { 
        longObj0.getByte();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. long to byte. long value is -210
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.LongObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LongObj longObj0 = new LongObj((-22L));
      long long0 = longObj0.getLong();
      assertEquals((-22L), long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LongObj longObj0 = new LongObj((-22L));
      String string0 = longObj0.getString();
      assertEquals("-22", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LongObj longObj0 = new LongObj((-210L));
      int int0 = longObj0.getObjectSize();
      assertEquals(8, int0);
      assertEquals((-210.0), longObj0.getDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LongObj longObj0 = new LongObj((-2522L));
      float float0 = longObj0.getFloat();
      assertEquals((-2522.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LongObj longObj0 = new LongObj((-22L));
      longObj0.getPrimitiveType();
      assertEquals((-22.0), longObj0.getDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LongObj longObj0 = new LongObj(2147483647L);
      byte[] byteArray0 = longObj0.getBytes();
      assertEquals(10, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LongObj longObj0 = new LongObj((-22L));
      double double0 = longObj0.getDouble();
      assertEquals((-22.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LongObj longObj0 = new LongObj((-128L));
      Object object0 = longObj0.get();
      assertEquals((-128L), object0);
  }
}
