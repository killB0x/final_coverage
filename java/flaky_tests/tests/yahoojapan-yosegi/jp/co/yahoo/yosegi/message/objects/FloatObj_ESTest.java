/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:11:51 GMT 2022
 */

package jp.co.yahoo.yosegi.message.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.message.objects.FloatObj;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatObj_ESTest extends FloatObj_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(9.223372E18F);
      long long0 = floatObj0.getLong();
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(2.14748365E9F);
      int int0 = floatObj0.getInt();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-2.14748365E9F));
      int int0 = floatObj0.getInt();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(32767.0F);
      short short0 = floatObj0.getShort();
      assertEquals((short)32767, short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-32768.0F));
      short short0 = floatObj0.getShort();
      assertEquals((short) (-32768), short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(127.0F);
      byte byte0 = floatObj0.getByte();
      assertEquals((byte)127, byte0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      short short0 = floatObj0.getShort();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      long long0 = floatObj0.getLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-9.223372E18F));
      long long0 = floatObj0.getLong();
      assertEquals((-9223372036854775808L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      int int0 = floatObj0.getInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(3079.2935F);
      float float0 = floatObj0.getFloat();
      assertEquals(3079.2935F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-88.3F));
      float float0 = floatObj0.getFloat();
      assertEquals((-88.3F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(3079.2935F);
      double double0 = floatObj0.getDouble();
      assertEquals(3079.29345703125, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-88.3F));
      double double0 = floatObj0.getDouble();
      assertEquals((-88.30000305175781), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      byte byte0 = floatObj0.getByte();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(8.4795F);
      boolean boolean0 = floatObj0.getBoolean();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      boolean boolean0 = floatObj0.getBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(9.223372E18F);
      // Undeclared exception!
      try { 
        floatObj0.getInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. float to int. float value is 9.223372E18
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.FloatObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-9.223372E18F));
      // Undeclared exception!
      try { 
        floatObj0.getInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. float to int. float value is -9.223372E18
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.FloatObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(9.223372E18F);
      // Undeclared exception!
      try { 
        floatObj0.getShort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. float to short. float value is 9.223372E18
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.FloatObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-2.14748365E9F));
      // Undeclared exception!
      try { 
        floatObj0.getShort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. float to short. float value is -2.14748365E9
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.FloatObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-128.0F));
      byte byte0 = floatObj0.getByte();
      assertEquals((byte) (-128), byte0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(2.14748365E9F);
      // Undeclared exception!
      try { 
        floatObj0.getByte();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. float to byte. float value is 2.14748365E9
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.FloatObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj((-507.521F));
      // Undeclared exception!
      try { 
        floatObj0.getByte();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Can not down cast. float to byte. float value is -507.521
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.FloatObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(127.0F);
      String string0 = floatObj0.getString();
      assertEquals("127.0", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(8.4795F);
      floatObj0.getPrimitiveType();
      assertEquals("8.4795", floatObj0.getString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      float float0 = floatObj0.getFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      double double0 = floatObj0.getDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(2.14748365E9F);
      byte[] byteArray0 = floatObj0.getBytes();
      assertEquals(12, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(127.0F);
      int int0 = floatObj0.getObjectSize();
      assertEquals(127.0F, floatObj0.getFloat(), 0.01F);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(127.0F);
      Object object0 = floatObj0.get();
      assertEquals(127.0F, object0);
  }
}
