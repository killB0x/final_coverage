/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:11:00 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.expression;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import jp.co.yahoo.yosegi.blockindex.BlockIndexNode;
import jp.co.yahoo.yosegi.spread.expression.AndExpressionNode;
import jp.co.yahoo.yosegi.spread.expression.NotExpressionNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NotExpressionNode_ESTest extends NotExpressionNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AndExpressionNode andExpressionNode0 = new AndExpressionNode();
      NotExpressionNode notExpressionNode0 = new NotExpressionNode(andExpressionNode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NotExpressionNode notExpressionNode0 = new NotExpressionNode();
      AndExpressionNode andExpressionNode0 = new AndExpressionNode();
      notExpressionNode0.addChildNode(andExpressionNode0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NotExpressionNode notExpressionNode0 = new NotExpressionNode();
      List<Integer> list0 = notExpressionNode0.getBlockSpreadIndex((BlockIndexNode) null);
      assertNull(list0);
  }
}
