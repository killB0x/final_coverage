/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:29:44 GMT 2022
 */

package jp.co.yahoo.yosegi.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import jp.co.yahoo.yosegi.config.Configuration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Configuration_ESTest extends Configuration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("U]mkD5|yP%&", "U]mkD5|yP%&");
      Map<String, String> map0 = configuration0.toMap();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Object object0 = configuration0.getObject("", "jp.co.yahoo.yosegi.config.Configuration");
      assertFalse(object0.equals((Object)configuration0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("jp.co.yahoo.yosegi.util.FindClass", "jp.co.yahoo.yosegi.config.Configuration");
      Object object0 = configuration0.getObject("jp.co.yahoo.yosegi.util.FindClass");
      assertFalse(object0.equals((Object)configuration0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      long long0 = configuration0.getLong("U|]zZxnv", 3715L);
      assertEquals(3715L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      long long0 = configuration0.getLong("", (-653L));
      assertEquals((-653L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("6", "6");
      long long0 = configuration0.getLong("6");
      assertEquals(6L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      int int0 = configuration0.getInt("|)AtMFs+H)jCq+bOcd", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      int int0 = configuration0.getInt("", 1698);
      assertEquals(1698, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("6", "6");
      int int0 = configuration0.getInt("6");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      double double0 = configuration0.getDouble("BjE;.p) )F", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      double double0 = configuration0.getDouble("5FH?^l", (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("9", "9");
      double double0 = configuration0.getDouble("9");
      assertEquals(9.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      String string0 = configuration0.get((String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("", "");
      String string0 = configuration0.get("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.getObject((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set(")|?", ")|?");
      // Undeclared exception!
      try { 
        configuration0.getDouble(")|?");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.add((Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.config.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.add((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.config.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.add((Iterable<Map.Entry<String, String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.config.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("", "");
      try { 
        configuration0.getObject("", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("", "w#");
      String string0 = configuration0.get("", "");
      assertEquals("w#", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      String string0 = configuration0.get("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Map<String, String> map0 = configuration0.toMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("", "");
      try { 
        configuration0.getObject("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("9", "9");
      try { 
        configuration0.getObject("9", "9");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: Class '9.class' should be in target project, but could not be found!
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      boolean boolean0 = configuration0.containsKey("jp.co.yahoo.yosegi.config.Configuration");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      double double0 = configuration0.getDouble("1ZdM3nb", 2517.879044155205);
      assertEquals(2517.879044155205, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("jp.co.yahoo.yosegi.config.Configuration", "^u%/N5s8D:myEJa");
      // Undeclared exception!
      try { 
        configuration0.getDouble("jp.co.yahoo.yosegi.config.Configuration", (-1.0));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      long long0 = configuration0.getLong("", 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set(",vjmhj[sX|c2L)F", "1ZdM3nb");
      // Undeclared exception!
      try { 
        configuration0.getLong(",vjmhj[sX|c2L)F", 0L);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"1ZdM3nb\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      int int0 = configuration0.getInt("T", (-2535));
      assertEquals((-2535), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("", "v#7?G$Aq*+;");
      // Undeclared exception!
      try { 
        configuration0.getInt("", 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"v#7?G$Aq*+;\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set(")", ")");
      String string0 = configuration0.get(")");
      assertEquals(")", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set((String) null, (String) null);
      // Undeclared exception!
      try { 
        configuration0.toMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.clear();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.add(configuration0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.getLong("6");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Set<String> set0 = configuration0.getKey();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("9", "9");
      boolean boolean0 = configuration0.containsKey("9");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.getObject("jp.co.yahoo.yosegi.util.FindClass");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Iterable<Map.Entry<String, String>> iterable0 = (Iterable<Map.Entry<String, String>>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      configuration0.add(iterable0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      String string0 = configuration0.get(")");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.getInt("6");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Properties properties0 = new Properties();
      configuration0.add(properties0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.getDouble("9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
