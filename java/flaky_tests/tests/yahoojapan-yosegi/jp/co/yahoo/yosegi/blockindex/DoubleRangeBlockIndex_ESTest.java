/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:16:50 GMT 2022
 */

package jp.co.yahoo.yosegi.blockindex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferUnderflowException;
import java.util.List;
import jp.co.yahoo.yosegi.blockindex.BlockIndexType;
import jp.co.yahoo.yosegi.blockindex.DoubleRangeBlockIndex;
import jp.co.yahoo.yosegi.blockindex.IBlockIndex;
import jp.co.yahoo.yosegi.blockindex.ShortRangeBlockIndex;
import jp.co.yahoo.yosegi.message.objects.BooleanObj;
import jp.co.yahoo.yosegi.message.objects.ByteObj;
import jp.co.yahoo.yosegi.message.objects.DoubleObj;
import jp.co.yahoo.yosegi.message.objects.FloatObj;
import jp.co.yahoo.yosegi.message.objects.IntegerObj;
import jp.co.yahoo.yosegi.message.objects.StringObj;
import jp.co.yahoo.yosegi.message.objects.Utf8BytesLinkObj;
import jp.co.yahoo.yosegi.spread.column.filter.IFilter;
import jp.co.yahoo.yosegi.spread.column.filter.NumberFilter;
import jp.co.yahoo.yosegi.spread.column.filter.NumberFilterType;
import jp.co.yahoo.yosegi.spread.column.filter.NumberRangeFilter;
import jp.co.yahoo.yosegi.spread.column.filter.RangeStringCompareFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleRangeBlockIndex_ESTest extends DoubleRangeBlockIndex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntegerObj integerObj0 = new IntegerObj(1679);
      NumberFilterType numberFilterType0 = NumberFilterType.GT;
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, integerObj0);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNotNull(list0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntegerObj integerObj0 = new IntegerObj((-715));
      NumberFilterType numberFilterType0 = NumberFilterType.LE;
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, integerObj0);
      Double double0 = new Double((-715));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntegerObj integerObj0 = new IntegerObj(4);
      NumberFilterType numberFilterType0 = NumberFilterType.EQUAL;
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, integerObj0);
      Double double0 = Double.valueOf((double) 4);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double((-2286.321536));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      IBlockIndex iBlockIndex0 = doubleRangeBlockIndex0.getNewInstance();
      boolean boolean0 = doubleRangeBlockIndex0.merge(iBlockIndex0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      byte[] byteArray0 = doubleRangeBlockIndex0.toBinary();
      doubleRangeBlockIndex0.setFromBinary(byteArray0, (-505), 0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(16, doubleRangeBlockIndex0.getBinarySize());
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      IntegerObj integerObj0 = new IntegerObj((-715));
      StringObj stringObj0 = new StringObj();
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(integerObj0, false, stringObj0, true);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.LT;
      StringObj stringObj0 = new StringObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, stringObj0);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double((byte)0);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      Double double1 = doubleRangeBlockIndex0.getMin();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      Double double0 = doubleRangeBlockIndex0.getMin();
      assertEquals(1.7976931348623157E308, (double)double0, 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double(1084.299254342804);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex((Double) null, double0);
      Double double1 = doubleRangeBlockIndex0.getMin();
      assertNull(double1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0F);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      Double double1 = doubleRangeBlockIndex0.getMax();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      Double double0 = doubleRangeBlockIndex0.getMax();
      assertEquals(4.9E-324, (double)double0, 0.01);
      
      NumberFilterType numberFilterType0 = NumberFilterType.LT;
      DoubleObj doubleObj0 = new DoubleObj(4.9E-324);
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, doubleObj0);
      DoubleRangeBlockIndex doubleRangeBlockIndex1 = new DoubleRangeBlockIndex(double0, double0);
      List<Integer> list0 = doubleRangeBlockIndex1.getBlockSpreadIndex(numberFilter0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double((-715));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, (Double) null);
      Double double1 = doubleRangeBlockIndex0.getMax();
      assertNull(double1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      // Undeclared exception!
      try { 
        doubleRangeBlockIndex0.setFromBinary((byte[]) null, (-2229), (-2229));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      DoubleRangeBlockIndex doubleRangeBlockIndex1 = new DoubleRangeBlockIndex((Double) null, (Double) null);
      // Undeclared exception!
      try { 
        doubleRangeBlockIndex0.merge(doubleRangeBlockIndex1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.DoubleRangeBlockIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 2143159274, 2143159274);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(utf8BytesLinkObj0, false, utf8BytesLinkObj0, false);
      // Undeclared exception!
      try { 
        doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      // Undeclared exception!
      try { 
        doubleRangeBlockIndex0.getBlockSpreadIndex((IFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.DoubleRangeBlockIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double((-2286.321536));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      Double double1 = doubleRangeBlockIndex0.getMax();
      assertEquals((-2286.321536), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double((-2286.321536));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      Double double1 = doubleRangeBlockIndex0.getMin();
      assertEquals((-2286.321536), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double((-2286.321536));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      int int0 = doubleRangeBlockIndex0.getBinarySize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double double0 = new Double((-832.0));
      Double double1 = new Double(67.76407178);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double1);
      BooleanObj booleanObj0 = new BooleanObj(false);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(false, booleanObj0, false, booleanObj0, false);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertNull(list0);
      assertEquals(67.76407178, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double double0 = new Double((-1579.0));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      ByteObj byteObj0 = new ByteObj();
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(false, byteObj0, false, byteObj0, false);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IntegerObj integerObj0 = new IntegerObj(Integer.MAX_VALUE);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(integerObj0, false, integerObj0, true);
      Double double0 = new Double((-715));
      Double double1 = new Double(1.7976931348623157E308);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double1);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertNull(list0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      ByteObj byteObj0 = new ByteObj();
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(byteObj0, false, byteObj0, true);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      BooleanObj booleanObj0 = new BooleanObj(false);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(booleanObj0, false, booleanObj0, false);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-832.0));
      Double double1 = new Double(67.76407178);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double1);
      BooleanObj booleanObj0 = new BooleanObj(false);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(false, booleanObj0, true, booleanObj0, false);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertNull(list0);
      assertEquals(67.76407178, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Double double0 = new Double((-1579.0));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      ByteObj byteObj0 = new ByteObj();
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(false, byteObj0, true, byteObj0, false);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IntegerObj integerObj0 = new IntegerObj(18);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(integerObj0, true, integerObj0, true);
      Double double0 = new Double(18);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double double0 = new Double((-415.2258311));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      ByteObj byteObj0 = new ByteObj();
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(byteObj0, true, byteObj0, true);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      ByteObj byteObj0 = new ByteObj();
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(byteObj0, true, byteObj0, true);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      BooleanObj booleanObj0 = new BooleanObj(true);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(booleanObj0, true, booleanObj0, false);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      BooleanObj booleanObj0 = new BooleanObj(true);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(true, booleanObj0, true, booleanObj0, true);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.GE;
      FloatObj floatObj0 = new FloatObj(5924.763F);
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, floatObj0);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FloatObj floatObj0 = new FloatObj(0.0F);
      NumberFilterType numberFilterType0 = NumberFilterType.GT;
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, floatObj0);
      Double double0 = new Double(0.0F);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Double double0 = new Double((-2.147483648E9));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      NumberFilterType numberFilterType0 = NumberFilterType.LE;
      IntegerObj integerObj0 = new IntegerObj(127);
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, integerObj0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Double double0 = new Double((-1437.321301));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      NumberFilterType numberFilterType0 = NumberFilterType.LT;
      ByteObj byteObj0 = new ByteObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, byteObj0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IntegerObj integerObj0 = new IntegerObj(4);
      NumberFilterType numberFilterType0 = NumberFilterType.EQUAL;
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, integerObj0);
      Double double0 = Double.valueOf((-2286.321536));
      Double double1 = new Double(127.0);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double1);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNull(list0);
      assertEquals(127.0, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IntegerObj integerObj0 = new IntegerObj(4);
      NumberFilterType numberFilterType0 = NumberFilterType.EQUAL;
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, integerObj0);
      Double double0 = Double.valueOf((-2286.321536));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.NOT_EQUAL;
      ByteObj byteObj0 = new ByteObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, byteObj0);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.GT;
      ByteObj byteObj0 = new ByteObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, byteObj0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.LE;
      ByteObj byteObj0 = new ByteObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, byteObj0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNotNull(list0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.LT;
      ByteObj byteObj0 = new ByteObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, byteObj0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertNotNull(list0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.GE;
      ByteObj byteObj0 = new ByteObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, byteObj0);
      doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Double double0 = new Double((-1174.42314178));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      FloatObj floatObj0 = new FloatObj(0.0F);
      NumberRangeFilter numberRangeFilter0 = new NumberRangeFilter(floatObj0, false, floatObj0, true);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberRangeFilter0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Double double0 = new Double(1084.299254342804);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex((Double) null, double0);
      RangeStringCompareFilter rangeStringCompareFilter0 = new RangeStringCompareFilter((String) null, false, (String) null, false, true);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(rangeStringCompareFilter0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      NumberFilterType numberFilterType0 = NumberFilterType.EQUAL;
      ByteObj byteObj0 = new ByteObj();
      NumberFilter numberFilter0 = new NumberFilter(numberFilterType0, byteObj0);
      List<Integer> list0 = doubleRangeBlockIndex0.getBlockSpreadIndex(numberFilter0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertNotNull(list0);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      Double double0 = new Double(1.7976931348623157E308);
      DoubleRangeBlockIndex doubleRangeBlockIndex1 = new DoubleRangeBlockIndex(double0, double0);
      boolean boolean0 = doubleRangeBlockIndex0.merge(doubleRangeBlockIndex1);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMax(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      Double double0 = new Double((-1690.6523312));
      DoubleRangeBlockIndex doubleRangeBlockIndex1 = new DoubleRangeBlockIndex(double0, double0);
      boolean boolean0 = doubleRangeBlockIndex0.merge(doubleRangeBlockIndex1);
      assertEquals((-1690.6523312), doubleRangeBlockIndex0.getMin(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Double double0 = new Double(1084.299254342804);
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex((Double) null, double0);
      ShortRangeBlockIndex shortRangeBlockIndex0 = new ShortRangeBlockIndex((short) (-1903), (short) (-1903));
      boolean boolean0 = doubleRangeBlockIndex0.merge(shortRangeBlockIndex0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      DoubleRangeBlockIndex doubleRangeBlockIndex1 = (DoubleRangeBlockIndex)doubleRangeBlockIndex0.clone();
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex1.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex1.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Double double0 = Double.valueOf((-2286.321536));
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex(double0, double0);
      BlockIndexType blockIndexType0 = doubleRangeBlockIndex0.getBlockIndexType();
      assertEquals(BlockIndexType.RANGE_DOUBLE, blockIndexType0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        doubleRangeBlockIndex0.setFromBinary(byteArray0, (-1906), (-1906));
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex((Double) null, (Double) null);
      // Undeclared exception!
      try { 
        doubleRangeBlockIndex0.toBinary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.DoubleRangeBlockIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DoubleRangeBlockIndex doubleRangeBlockIndex0 = new DoubleRangeBlockIndex();
      boolean boolean0 = doubleRangeBlockIndex0.merge(doubleRangeBlockIndex0);
      assertEquals(1.7976931348623157E308, doubleRangeBlockIndex0.getMin(), 0.01);
      assertEquals(4.9E-324, doubleRangeBlockIndex0.getMax(), 0.01);
      assertTrue(boolean0);
  }
}
