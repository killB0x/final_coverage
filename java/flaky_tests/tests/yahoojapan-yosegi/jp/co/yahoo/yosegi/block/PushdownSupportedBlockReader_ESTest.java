/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:12:41 GMT 2022
 */

package jp.co.yahoo.yosegi.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import jp.co.yahoo.yosegi.block.PushdownSupportedBlockReader;
import jp.co.yahoo.yosegi.config.Configuration;
import jp.co.yahoo.yosegi.spread.expression.OrExpressionNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PushdownSupportedBlockReader_ESTest extends PushdownSupportedBlockReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.setup((Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.expand.ExpandFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.setup(configuration0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/databind/ObjectMapper
         //
         verifyException("jp.co.yahoo.yosegi.message.parser.json.JacksonMessageReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.setStream((InputStream) null, 2737);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.util.io.InputStreamUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.setStream(byteArrayInputStream0, 262144);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -100663296
         //
         verifyException("jp.co.yahoo.yosegi.block.PushdownSupportedBlockReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1499), 2757);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.setStream(bufferedInputStream0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.nextRaw();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      pushdownSupportedBlockReader0.clear();
      assertEquals(0, pushdownSupportedBlockReader0.getBlockReadCount());
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.getCurrentSpreadSize();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      boolean boolean0 = pushdownSupportedBlockReader0.hasNext();
      assertFalse(boolean0);
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      OrExpressionNode orExpressionNode0 = new OrExpressionNode();
      pushdownSupportedBlockReader0.setBlockSkipIndex(orExpressionNode0);
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      long long0 = pushdownSupportedBlockReader0.getReadBytes();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      int int0 = pushdownSupportedBlockReader0.getBlockReadCount();
      assertEquals(0, int0);
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      pushdownSupportedBlockReader0.close();
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      // Undeclared exception!
      try { 
        pushdownSupportedBlockReader0.next();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      pushdownSupportedBlockReader0.getReadStats();
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        pushdownSupportedBlockReader0.setStream(byteArrayInputStream0, 262144);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("jp.co.yahoo.yosegi.util.FindClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      pushdownSupportedBlockReader0.getBlockCount();
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PushdownSupportedBlockReader pushdownSupportedBlockReader0 = new PushdownSupportedBlockReader();
      pushdownSupportedBlockReader0.setBlockSize((-2662));
      assertEquals(0L, pushdownSupportedBlockReader0.getReadBytes());
  }
}
