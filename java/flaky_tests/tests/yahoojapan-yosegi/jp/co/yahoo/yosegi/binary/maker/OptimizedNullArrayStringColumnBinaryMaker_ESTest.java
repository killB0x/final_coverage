/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 20:35:03 GMT 2022
 */

package jp.co.yahoo.yosegi.binary.maker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.nio.BufferUnderflowException;
import java.util.ArrayList;
import java.util.Vector;
import jp.co.yahoo.yosegi.binary.ColumnBinary;
import jp.co.yahoo.yosegi.binary.ColumnBinaryMakerConfig;
import jp.co.yahoo.yosegi.binary.ColumnBinaryMakerCustomConfigNode;
import jp.co.yahoo.yosegi.binary.CompressResultNode;
import jp.co.yahoo.yosegi.binary.maker.ConstantColumnBinaryMaker;
import jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayLongColumnBinaryMaker;
import jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker;
import jp.co.yahoo.yosegi.blockindex.BlockIndexNode;
import jp.co.yahoo.yosegi.compressor.DefaultCompressor;
import jp.co.yahoo.yosegi.compressor.ICompressor;
import jp.co.yahoo.yosegi.inmemory.ILoader;
import jp.co.yahoo.yosegi.inmemory.LoadType;
import jp.co.yahoo.yosegi.inmemory.YosegiConstLoader;
import jp.co.yahoo.yosegi.message.objects.ByteObj;
import jp.co.yahoo.yosegi.message.objects.PrimitiveObject;
import jp.co.yahoo.yosegi.message.objects.StringObj;
import jp.co.yahoo.yosegi.spread.analyzer.IColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.SpreadColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.analyzer.StringColumnAnalizeResult;
import jp.co.yahoo.yosegi.spread.column.ArrayColumn;
import jp.co.yahoo.yosegi.spread.column.BooleanCell;
import jp.co.yahoo.yosegi.spread.column.ColumnType;
import jp.co.yahoo.yosegi.spread.column.ICell;
import jp.co.yahoo.yosegi.spread.column.IColumn;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptimizedNullArrayStringColumnBinaryMaker_ESTest extends OptimizedNullArrayStringColumnBinaryMaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("?o7g%vm>A5?0BA0X", 296, true, 14, 313, 296, (-3104), 709, (-3104), (-6782), 0, 41, 2180, (-3104), 709, (-1), "PARTIAL", "c0", (-482), 4, 14);
      int int0 = optimizedNullArrayStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals((-808), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ByteObj byteObj0 = new ByteObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(byteObj0, "", 6);
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 1);
      yosegiConstLoader0.setConstFromString((String) null);
      IColumn iColumn0 = yosegiConstLoader0.build();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      DefaultCompressor defaultCompressor0 = new DefaultCompressor();
      columnBinaryMakerConfig0.compressorClass = (ICompressor) defaultCompressor0;
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ByteObj byteObj0 = new ByteObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(byteObj0, "jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker$BinaryMeta", (-3007));
      CompressResultNode compressResultNode0 = new CompressResultNode();
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 32767);
      IColumn iColumn0 = yosegiConstLoader0.build();
      // Undeclared exception!
      optimizedNullArrayStringColumnBinaryMaker0.toBinary((ColumnBinaryMakerConfig) null, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ByteObj byteObj0 = new ByteObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(byteObj0, "jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker$BinaryMeta", (-3007));
      CompressResultNode compressResultNode0 = new CompressResultNode();
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 1);
      yosegiConstLoader0.setConstFromBytes(columnBinary0.binary, (-3467), 0);
      IColumn iColumn0 = yosegiConstLoader0.build();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.toBinary((ColumnBinaryMakerConfig) null, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ByteObj byteObj0 = new ByteObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(byteObj0, "jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker$BinaryMeta", (-3007));
      CompressResultNode compressResultNode0 = new CompressResultNode();
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, (-3007));
      IColumn iColumn0 = yosegiConstLoader0.build();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.toBinary((ColumnBinaryMakerConfig) null, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3007
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ByteObj byteObj0 = new ByteObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(byteObj0, "IP%&{NL", 2624);
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 2624);
      IColumn iColumn0 = yosegiConstLoader0.build();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ICell<Object, Object> iCell0 = (ICell<Object, Object>) mock(ICell.class, new ViolatedAssumptionAnswer());
      doReturn((ColumnType) null, (ColumnType) null).when(iCell0).getType();
      iColumn0.setDefaultCell(iCell0);
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class jp.co.yahoo.yosegi.spread.column.ICell$MockitoMock$631334282 cannot be cast to class jp.co.yahoo.yosegi.spread.column.PrimitiveCell (jp.co.yahoo.yosegi.spread.column.ICell$MockitoMock$631334282 and jp.co.yahoo.yosegi.spread.column.PrimitiveCell are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @a7c2c70)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      StringObj stringObj0 = new StringObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(stringObj0, "c0", 197);
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, (-3115));
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, (ColumnBinary) null, (-1252));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      ColumnType columnType0 = ColumnType.MAP;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, (-2105L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "", (-3007));
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, 1950);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -4
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      ColumnType columnType0 = ColumnType.EMPTY_SPREAD;
      byte[] byteArray0 = new byte[0];
      ArrayList<ColumnBinary> arrayList0 = new ArrayList<ColumnBinary>();
      ColumnBinary columnBinary0 = new ColumnBinary("", "", "", columnType0, 1, (-1683), 1, 1, byteArray0, 2122, 1, arrayList0);
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, (-751));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      ColumnType columnType0 = ColumnType.UNKNOWN;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, 1L);
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "$oA^H2]'nQx:1CE_nD", (-1581));
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, (-1581));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition > limit: (9 > 8)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.load((ColumnBinary) null, (ILoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.calcBinarySize((IColumnAnalizeResult) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      Vector<IColumnAnalizeResult> vector0 = new Vector<IColumnAnalizeResult>();
      SpreadColumnAnalizeResult spreadColumnAnalizeResult0 = new SpreadColumnAnalizeResult((String) null, 1747, 1747, vector0);
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.calcBinarySize(spreadColumnAnalizeResult0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class jp.co.yahoo.yosegi.spread.analyzer.SpreadColumnAnalizeResult cannot be cast to class jp.co.yahoo.yosegi.spread.analyzer.StringColumnAnalizeResult (jp.co.yahoo.yosegi.spread.analyzer.SpreadColumnAnalizeResult and jp.co.yahoo.yosegi.spread.analyzer.StringColumnAnalizeResult are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @a7c2c70)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ArrayColumn arrayColumn0 = new ArrayColumn("--------------------------\n");
      ColumnBinary columnBinary0 = optimizedNullArrayStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, arrayColumn0);
      columnBinary0.setRepetitions(columnBinary0.repetitions, 0);
      LoadType loadType0 = LoadType.DICTIONARY;
      ILoader<BooleanCell> iLoader0 = (ILoader<BooleanCell>) mock(ILoader.class, new ViolatedAssumptionAnswer());
      doReturn(loadType0).when(iLoader0).getLoaderType();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.load(columnBinary0, iLoader0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class jp.co.yahoo.yosegi.inmemory.ILoader$MockitoMock$2081310012 cannot be cast to class jp.co.yahoo.yosegi.inmemory.IDictionaryLoader (jp.co.yahoo.yosegi.inmemory.ILoader$MockitoMock$2081310012 and jp.co.yahoo.yosegi.inmemory.IDictionaryLoader are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @a7c2c70)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ColumnType columnType0 = ColumnType.BYTE;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, 1495L);
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker$BinaryMeta", (-3007));
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 369);
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.load(columnBinary0, yosegiConstLoader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Loader type is not DICTIONARY.
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("c0", 2610, false, 2610, 2610, 2610, 2610, 2610, 2610, 2610, 2610, 2610, 2610, 2610, (-87), 2610, "m?#?)pV", "m?#?)pV", 2610, (-87), 2610);
      int int0 = optimizedNullArrayStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals(18323, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      StringColumnAnalizeResult stringColumnAnalizeResult0 = new StringColumnAnalizeResult("/7CR@qfbNEiHe%Uq", (-170), false, (-170), (-170), (-170), (-170), (-170), (-170), 709, (-170), (-170), 709, 1614, 209, 209, "7R", "7R", (-3736), 1614, 709);
      int int0 = optimizedNullArrayStringColumnBinaryMaker0.calcBinarySize(stringColumnAnalizeResult0);
      assertEquals((-1479), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ColumnType columnType0 = ColumnType.BYTE;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, 1495L);
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker$BinaryMeta", (-3007));
      CompressResultNode compressResultNode0 = new CompressResultNode();
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 369);
      yosegiConstLoader0.setConstFromBoolean(false);
      IColumn iColumn0 = yosegiConstLoader0.build();
      ColumnBinary columnBinary1 = optimizedNullArrayStringColumnBinaryMaker0.toBinary((ColumnBinaryMakerConfig) null, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
      assertEquals(1, columnBinary1.cardinality);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ByteObj byteObj0 = new ByteObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(byteObj0, (String) null, 6);
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 1);
      yosegiConstLoader0.setConstFromString((String) null);
      IColumn iColumn0 = yosegiConstLoader0.build();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, iColumn0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("java.util.zip.GZIPOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ByteObj byteObj0 = new ByteObj();
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(byteObj0, "", 2647);
      YosegiConstLoader yosegiConstLoader0 = new YosegiConstLoader(columnBinary0, 1);
      IColumn iColumn0 = yosegiConstLoader0.build();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      ColumnBinaryMakerCustomConfigNode columnBinaryMakerCustomConfigNode0 = new ColumnBinaryMakerCustomConfigNode("jp.co.yahoo.yosegi.compressor.DefaultCompressor", columnBinaryMakerConfig0);
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, columnBinaryMakerCustomConfigNode0, compressResultNode0, iColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      ColumnBinaryMakerConfig columnBinaryMakerConfig0 = new ColumnBinaryMakerConfig();
      CompressResultNode compressResultNode0 = new CompressResultNode();
      ArrayColumn arrayColumn0 = new ArrayColumn("--------------------------\n");
      ColumnBinary columnBinary0 = optimizedNullArrayStringColumnBinaryMaker0.toBinary(columnBinaryMakerConfig0, (ColumnBinaryMakerCustomConfigNode) null, compressResultNode0, arrayColumn0);
      LoadType loadType0 = LoadType.DICTIONARY;
      ILoader<BooleanCell> iLoader0 = (ILoader<BooleanCell>) mock(ILoader.class, new ViolatedAssumptionAnswer());
      doReturn(loadType0).when(iLoader0).getLoaderType();
      // Undeclared exception!
      try { 
        optimizedNullArrayStringColumnBinaryMaker0.load(columnBinary0, iLoader0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class jp.co.yahoo.yosegi.inmemory.ILoader$MockitoMock$2081310012 cannot be cast to class jp.co.yahoo.yosegi.inmemory.IDictionaryLoader (jp.co.yahoo.yosegi.inmemory.ILoader$MockitoMock$2081310012 and jp.co.yahoo.yosegi.inmemory.IDictionaryLoader are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @a7c2c70)
         //
         verifyException("jp.co.yahoo.yosegi.binary.maker.OptimizedNullArrayStringColumnBinaryMaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      ColumnType columnType0 = ColumnType.MAP;
      PrimitiveObject primitiveObject0 = OptimizedNullArrayLongColumnBinaryMaker.createConstObjectFromNum(columnType0, (-225L));
      ColumnBinary columnBinary0 = ConstantColumnBinaryMaker.createColumnBinary(primitiveObject0, "c0", (-3007));
      optimizedNullArrayStringColumnBinaryMaker0.setBlockIndexNode(blockIndexNode0, columnBinary0, 591);
      assertEquals(0, columnBinary0.loadSize);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OptimizedNullArrayStringColumnBinaryMaker optimizedNullArrayStringColumnBinaryMaker0 = new OptimizedNullArrayStringColumnBinaryMaker();
      LoadType loadType0 = optimizedNullArrayStringColumnBinaryMaker0.getLoadType((ColumnBinary) null, Integer.MIN_VALUE);
      assertEquals(LoadType.DICTIONARY, loadType0);
  }
}
