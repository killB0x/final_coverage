/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:25:40 GMT 2022
 */

package jp.co.yahoo.yosegi.blockindex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferUnderflowException;
import java.util.List;
import jp.co.yahoo.yosegi.blockindex.BooleanBlockIndex;
import jp.co.yahoo.yosegi.blockindex.LongRangeBlockIndex;
import jp.co.yahoo.yosegi.spread.column.filter.BackwardMatchStringFilter;
import jp.co.yahoo.yosegi.spread.column.filter.BooleanFilter;
import jp.co.yahoo.yosegi.spread.column.filter.IFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BooleanBlockIndex_ESTest extends BooleanBlockIndex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(false, false, true);
      assertEquals(1, booleanBlockIndex0.getBinarySize());
      
      byte[] byteArray0 = booleanBlockIndex0.toBinary();
      assertArrayEquals(new byte[] {(byte)4}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags(true, false, true);
      assertEquals((byte)5, booleanBlockIndex_BitFlags0.getBitFlags());
      assertTrue(booleanBlockIndex_BitFlags0.hasNull());
      assertFalse(booleanBlockIndex_BitFlags0.hasFalse());
      assertTrue(booleanBlockIndex_BitFlags0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, true);
      byte[] byteArray0 = new byte[9];
      booleanBlockIndex0.setFromBinary(byteArray0, (byte)1, (byte)3);
      assertFalse(booleanBlockIndex0.hasTrue());
      assertFalse(booleanBlockIndex0.hasFalse());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, true);
      boolean boolean0 = booleanBlockIndex0.hasTrue();
      assertTrue(boolean0);
      assertTrue(booleanBlockIndex0.hasFalse());
      assertTrue(booleanBlockIndex0.hasNull());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, false);
      boolean boolean0 = booleanBlockIndex0.hasNull();
      assertTrue(booleanBlockIndex0.hasFalse());
      assertTrue(booleanBlockIndex0.hasTrue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      boolean boolean0 = booleanBlockIndex0.hasFalse();
      assertFalse(boolean0);
      assertFalse(booleanBlockIndex0.hasTrue());
      assertFalse(booleanBlockIndex0.hasNull());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      byte[] byteArray0 = booleanBlockIndex0.toBinary();
      // Undeclared exception!
      try { 
        booleanBlockIndex0.setFromBinary(byteArray0, 0, 0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      // Undeclared exception!
      try { 
        booleanBlockIndex0.setFromBinary((byte[]) null, (-1923), (-1923));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      // Undeclared exception!
      try { 
        booleanBlockIndex0.getBlockSpreadIndex((IFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.blockindex.BooleanBlockIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags(false, false, false);
      assertEquals((byte)0, booleanBlockIndex_BitFlags0.getBitFlags());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags(true, true, true);
      byte byte0 = booleanBlockIndex_BitFlags0.getBitFlags();
      assertTrue(booleanBlockIndex_BitFlags0.hasNull());
      assertEquals((byte)7, byte0);
      assertTrue(booleanBlockIndex_BitFlags0.hasTrue());
      assertTrue(booleanBlockIndex_BitFlags0.hasFalse());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, true);
      boolean boolean0 = booleanBlockIndex0.hasFalse();
      assertTrue(booleanBlockIndex0.hasTrue());
      assertTrue(boolean0);
      assertTrue(booleanBlockIndex0.hasNull());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, true);
      boolean boolean0 = booleanBlockIndex0.hasNull();
      assertTrue(booleanBlockIndex0.hasTrue());
      assertTrue(booleanBlockIndex0.hasFalse());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      int int0 = booleanBlockIndex0.getBinarySize();
      assertFalse(booleanBlockIndex0.hasNull());
      assertFalse(booleanBlockIndex0.hasFalse());
      assertEquals(1, int0);
      assertFalse(booleanBlockIndex0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags((byte) (-55));
      assertEquals((byte) (-55), booleanBlockIndex_BitFlags0.getBitFlags());
      assertFalse(booleanBlockIndex_BitFlags0.hasNull());
      assertFalse(booleanBlockIndex_BitFlags0.hasFalse());
      assertTrue(booleanBlockIndex_BitFlags0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags((byte)2);
      assertTrue(booleanBlockIndex_BitFlags0.hasFalse());
      assertFalse(booleanBlockIndex_BitFlags0.hasNull());
      assertFalse(booleanBlockIndex_BitFlags0.hasTrue());
      assertEquals((byte)2, booleanBlockIndex_BitFlags0.getBitFlags());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BooleanFilter booleanFilter0 = new BooleanFilter(false);
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(false, true, false);
      List<Integer> list0 = booleanBlockIndex0.getBlockSpreadIndex(booleanFilter0);
      assertFalse(booleanBlockIndex0.hasTrue());
      assertNull(list0);
      assertFalse(booleanBlockIndex0.hasNull());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BooleanFilter booleanFilter0 = new BooleanFilter(true);
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, true);
      List<Integer> list0 = booleanBlockIndex0.getBlockSpreadIndex(booleanFilter0);
      assertTrue(booleanBlockIndex0.hasFalse());
      assertTrue(booleanBlockIndex0.hasNull());
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      BooleanFilter booleanFilter0 = new BooleanFilter(false);
      List<Integer> list0 = booleanBlockIndex0.getBlockSpreadIndex(booleanFilter0);
      assertNotNull(list0);
      assertFalse(booleanBlockIndex0.hasTrue());
      assertFalse(booleanBlockIndex0.hasNull());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BooleanFilter booleanFilter0 = new BooleanFilter(true);
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      List<Integer> list0 = booleanBlockIndex0.getBlockSpreadIndex(booleanFilter0);
      assertFalse(booleanBlockIndex0.hasNull());
      assertNotNull(list0);
      assertFalse(booleanBlockIndex0.hasFalse());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, true);
      BackwardMatchStringFilter backwardMatchStringFilter0 = new BackwardMatchStringFilter("jp.co.yahoo.yosegi.blockindex.BooleanBlockIndex hasTrue=true hasFalse=true hasNull=true");
      booleanBlockIndex0.getBlockSpreadIndex(backwardMatchStringFilter0);
      assertTrue(booleanBlockIndex0.hasNull());
      assertTrue(booleanBlockIndex0.hasFalse());
      assertTrue(booleanBlockIndex0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      BooleanBlockIndex booleanBlockIndex1 = new BooleanBlockIndex(true, true, true);
      boolean boolean0 = booleanBlockIndex0.merge(booleanBlockIndex1);
      assertTrue(booleanBlockIndex0.hasFalse());
      assertTrue(booleanBlockIndex0.hasTrue());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      LongRangeBlockIndex longRangeBlockIndex0 = new LongRangeBlockIndex(1, 9223372036854775807L);
      boolean boolean0 = booleanBlockIndex0.merge(longRangeBlockIndex0);
      assertFalse(booleanBlockIndex0.hasFalse());
      assertFalse(boolean0);
      assertFalse(booleanBlockIndex0.hasNull());
      assertFalse(booleanBlockIndex0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags(true, true, true);
      boolean boolean0 = booleanBlockIndex_BitFlags0.hasFalse();
      assertTrue(booleanBlockIndex_BitFlags0.hasNull());
      assertTrue(boolean0);
      assertEquals((byte)7, booleanBlockIndex_BitFlags0.getBitFlags());
      assertTrue(booleanBlockIndex_BitFlags0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags((byte)95);
      boolean boolean0 = booleanBlockIndex_BitFlags0.hasTrue();
      assertTrue(booleanBlockIndex_BitFlags0.hasFalse());
      assertTrue(boolean0);
      assertEquals((byte)95, booleanBlockIndex_BitFlags0.getBitFlags());
      assertTrue(booleanBlockIndex_BitFlags0.hasNull());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BooleanBlockIndex.BitFlags booleanBlockIndex_BitFlags0 = new BooleanBlockIndex.BitFlags((byte)95);
      boolean boolean0 = booleanBlockIndex_BitFlags0.hasNull();
      assertTrue(booleanBlockIndex_BitFlags0.hasTrue());
      assertEquals((byte)95, booleanBlockIndex_BitFlags0.getBitFlags());
      assertTrue(boolean0);
      assertTrue(booleanBlockIndex_BitFlags0.hasFalse());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(false, false, true);
      booleanBlockIndex0.getBlockIndexType();
      assertFalse(booleanBlockIndex0.hasFalse());
      assertTrue(booleanBlockIndex0.hasNull());
      assertFalse(booleanBlockIndex0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(true, true, true);
      String string0 = booleanBlockIndex0.toString();
      assertEquals("jp.co.yahoo.yosegi.blockindex.BooleanBlockIndex hasTrue=true hasFalse=true hasNull=true", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      boolean boolean0 = booleanBlockIndex0.merge(booleanBlockIndex0);
      assertFalse(booleanBlockIndex0.hasFalse());
      assertFalse(booleanBlockIndex0.hasNull());
      assertTrue(boolean0);
      assertFalse(booleanBlockIndex0.hasTrue());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex(false, false, true);
      booleanBlockIndex0.clone();
      assertFalse(booleanBlockIndex0.hasTrue());
      assertFalse(booleanBlockIndex0.hasFalse());
      assertTrue(booleanBlockIndex0.hasNull());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      boolean boolean0 = booleanBlockIndex0.hasTrue();
      assertFalse(booleanBlockIndex0.hasNull());
      assertFalse(boolean0);
      assertFalse(booleanBlockIndex0.hasFalse());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      byte[] byteArray0 = booleanBlockIndex0.toBinary();
      // Undeclared exception!
      try { 
        booleanBlockIndex0.setFromBinary(byteArray0, 1, Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BooleanBlockIndex booleanBlockIndex0 = new BooleanBlockIndex();
      BooleanBlockIndex booleanBlockIndex1 = (BooleanBlockIndex)booleanBlockIndex0.getNewInstance();
      assertFalse(booleanBlockIndex1.hasNull());
      assertFalse(booleanBlockIndex1.hasTrue());
      assertFalse(booleanBlockIndex1.hasFalse());
  }
}
