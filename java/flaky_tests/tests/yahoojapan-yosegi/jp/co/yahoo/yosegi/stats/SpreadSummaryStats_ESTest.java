/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:49:29 GMT 2022
 */

package jp.co.yahoo.yosegi.stats;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.stats.SpreadSummaryStats;
import jp.co.yahoo.yosegi.stats.SummaryStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpreadSummaryStats_ESTest extends SpreadSummaryStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(0L, (SummaryStats) null);
      SummaryStats summaryStats0 = spreadSummaryStats0.getSummaryStats();
      assertNull(summaryStats0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(0L, 0L, 0L, (-1954L), (-2377));
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(0L, summaryStats0);
      SummaryStats summaryStats1 = spreadSummaryStats0.getSummaryStats();
      assertEquals(0L, summaryStats1.getRawDataSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(4751L, 0L, 0L, 5058L, 0);
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(4751L, summaryStats0);
      spreadSummaryStats0.getSummaryStats();
      assertEquals(4751L, spreadSummaryStats0.getLineCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = spreadSummaryStats0.getSummaryStats();
      SummaryStats summaryStats1 = new SummaryStats(0L, (-1168L), 514L, 0L, 1);
      summaryStats0.merge(summaryStats1);
      SummaryStats summaryStats2 = spreadSummaryStats0.getSummaryStats();
      assertEquals((-0.4400684931506849), summaryStats2.getCompressLate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats(1734L, 1734L, 0L, 310L, 0);
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(1734L, summaryStats0);
      spreadSummaryStats0.getSummaryStats();
      assertEquals(1734L, spreadSummaryStats0.getLineCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-2492L), (-2492L), (-2492L), 1L, 0);
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats((-2492L), summaryStats0);
      spreadSummaryStats0.getSummaryStats();
      assertEquals(1.0, spreadSummaryStats0.getAverageRecordSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(3386L, summaryStats0);
      SummaryStats summaryStats1 = new SummaryStats(3386L, 963L, (-1536L), 3386L, (-1));
      summaryStats0.merge(summaryStats1);
      spreadSummaryStats0.getSummaryStats();
      assertEquals(1.0, spreadSummaryStats0.getAverageRecordPerField(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats();
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(3386L, summaryStats0);
      long long0 = spreadSummaryStats0.getLineCount();
      assertEquals(3386L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = new SummaryStats((-503L), (-503L), 1L, (-503L), (-1646));
      SpreadSummaryStats spreadSummaryStats1 = new SpreadSummaryStats((-440L), summaryStats0);
      spreadSummaryStats0.merge(spreadSummaryStats1);
      long long0 = spreadSummaryStats0.getLineCount();
      assertEquals((-440L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = spreadSummaryStats0.getSummaryStats();
      SpreadSummaryStats spreadSummaryStats1 = new SpreadSummaryStats((-1L), summaryStats0);
      spreadSummaryStats0.merge(spreadSummaryStats1);
      double double0 = spreadSummaryStats0.getAverageRecordSize();
      assertEquals(-0.0, spreadSummaryStats0.getAverageRecordPerField(), 0.01);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-503L), (-503L), 1L, (-503L), (-1646));
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats((-440L), summaryStats0);
      double double0 = spreadSummaryStats0.getAverageRecordSize();
      assertEquals(1.143181818181818, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = new SummaryStats((-503L), (-503L), 1L, (-503L), (-1646));
      SpreadSummaryStats spreadSummaryStats1 = new SpreadSummaryStats(1L, summaryStats0);
      spreadSummaryStats0.merge(spreadSummaryStats1);
      double double0 = spreadSummaryStats0.getAverageRecordSize();
      assertEquals(1L, spreadSummaryStats0.getLineCount());
      assertEquals((-503.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = spreadSummaryStats0.getSummaryStats();
      SpreadSummaryStats spreadSummaryStats1 = new SpreadSummaryStats((-1L), summaryStats0);
      spreadSummaryStats0.merge(spreadSummaryStats1);
      double double0 = spreadSummaryStats0.getAverageRecordRealSize();
      assertEquals(-0.0, spreadSummaryStats0.getAverageRecordSize(), 0.01);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-2492L), (-2492L), (-2492L), 1L, 0);
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats((-2492L), summaryStats0);
      double double0 = spreadSummaryStats0.getAverageRecordRealSize();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SummaryStats summaryStats0 = new SummaryStats((-503L), (-503L), 1L, (-503L), (-1646));
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats((-440L), summaryStats0);
      double double0 = spreadSummaryStats0.getAverageRecordRealSize();
      assertEquals((-0.0022727272727272726), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = spreadSummaryStats0.getSummaryStats();
      SpreadSummaryStats spreadSummaryStats1 = new SpreadSummaryStats((-1L), summaryStats0);
      double double0 = spreadSummaryStats1.getAverageRecordPerField();
      assertEquals(Double.NaN, spreadSummaryStats0.getAverageRecordPerField(), 0.01);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = new SummaryStats((-503L), (-503L), 1L, (-503L), (-1646));
      SpreadSummaryStats spreadSummaryStats1 = new SpreadSummaryStats((-440L), summaryStats0);
      spreadSummaryStats0.merge(spreadSummaryStats1);
      double double0 = spreadSummaryStats0.getAverageRecordPerField();
      assertEquals((-0.0022727272727272726), spreadSummaryStats0.getAverageRecordRealSize(), 0.01);
      assertEquals(1.143181818181818, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      SummaryStats summaryStats0 = new SummaryStats((-503L), (-503L), 1L, (-503L), (-1646));
      SpreadSummaryStats spreadSummaryStats1 = new SpreadSummaryStats(1L, summaryStats0);
      spreadSummaryStats0.merge(spreadSummaryStats1);
      double double0 = spreadSummaryStats0.getAverageRecordPerField();
      assertEquals((-503.0), spreadSummaryStats0.getAverageRecordSize(), 0.01);
      assertEquals((-503.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(0L, (SummaryStats) null);
      // Undeclared exception!
      try { 
        spreadSummaryStats0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.stats.SpreadSummaryStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      // Undeclared exception!
      try { 
        spreadSummaryStats0.merge((SpreadSummaryStats) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.stats.SpreadSummaryStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(376L, (SummaryStats) null);
      // Undeclared exception!
      try { 
        spreadSummaryStats0.getAverageRecordSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.stats.SpreadSummaryStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(347L, (SummaryStats) null);
      // Undeclared exception!
      try { 
        spreadSummaryStats0.getAverageRecordRealSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.stats.SpreadSummaryStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats(388L, (SummaryStats) null);
      // Undeclared exception!
      try { 
        spreadSummaryStats0.getAverageRecordPerField();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.stats.SpreadSummaryStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      long long0 = spreadSummaryStats0.getLineCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SpreadSummaryStats spreadSummaryStats0 = new SpreadSummaryStats();
      String string0 = spreadSummaryStats0.toString();
      assertEquals("Line count=0 , Average record size=NaN , Average record real size=NaN , Average record per field=NaN , Field count=0 , Raw data size=0 , Real data size=0 , Logical data size=0 , cardinality=0 , stats report count=0 , Average field size=NaN , Average field real size=NaN , Compress late=NaN , Average row count per stats report count=NaN , Average cardinality=NaN", string0);
  }
}
