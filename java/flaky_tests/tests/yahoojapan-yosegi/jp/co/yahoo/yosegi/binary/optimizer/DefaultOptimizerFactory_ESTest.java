/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:34:17 GMT 2022
 */

package jp.co.yahoo.yosegi.binary.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import jp.co.yahoo.yosegi.binary.optimizer.DefaultOptimizerFactory;
import jp.co.yahoo.yosegi.binary.optimizer.IOptimizer;
import jp.co.yahoo.yosegi.config.Configuration;
import jp.co.yahoo.yosegi.spread.column.ColumnType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultOptimizerFactory_ESTest extends DefaultOptimizerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.STRING;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.BYTES;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNotNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.SHORT;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.LONG;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.INTEGER;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.FLOAT;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.DOUBLE;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.BYTE;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.BOOLEAN;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.SPREAD;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNotNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.ARRAY;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNotNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.UNKNOWN;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNotNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      ColumnType columnType0 = ColumnType.UNION;
      IOptimizer iOptimizer0 = defaultOptimizerFactory0.get(columnType0);
      assertNotNull(iOptimizer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultOptimizerFactory defaultOptimizerFactory0 = new DefaultOptimizerFactory();
      Configuration configuration0 = new Configuration();
      defaultOptimizerFactory0.setup(configuration0);
  }
}
