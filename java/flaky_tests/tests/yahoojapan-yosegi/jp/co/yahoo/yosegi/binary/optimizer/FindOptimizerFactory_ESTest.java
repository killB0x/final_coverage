/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 23:15:57 GMT 2022
 */

package jp.co.yahoo.yosegi.binary.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import jp.co.yahoo.yosegi.binary.optimizer.FindOptimizerFactory;
import jp.co.yahoo.yosegi.binary.optimizer.IOptimizerFactory;
import jp.co.yahoo.yosegi.config.Configuration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FindOptimizerFactory_ESTest extends FindOptimizerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      try { 
        FindOptimizerFactory.get("jp.co.yahoo.yosegi.binary.maker.RleLongColumnBinaryMaker", configuration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid IOptimizerFactory class : jp.co.yahoo.yosegi.binary.maker.RleLongColumnBinaryMaker
         //
         verifyException("jp.co.yahoo.yosegi.binary.optimizer.FindOptimizerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      try { 
        FindOptimizerFactory.get((String) null, configuration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // IOptimizerFactory class name is null or empty.
         //
         verifyException("jp.co.yahoo.yosegi.binary.optimizer.FindOptimizerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      IOptimizerFactory iOptimizerFactory0 = FindOptimizerFactory.get("jp.co.yahoo.yosegi.binary.optimizer.DefaultOptimizerFactory", configuration0);
      assertNotNull(iOptimizerFactory0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      try { 
        FindOptimizerFactory.get("", configuration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // IOptimizerFactory class name is null or empty.
         //
         verifyException("jp.co.yahoo.yosegi.binary.optimizer.FindOptimizerFactory", e);
      }
  }
}
