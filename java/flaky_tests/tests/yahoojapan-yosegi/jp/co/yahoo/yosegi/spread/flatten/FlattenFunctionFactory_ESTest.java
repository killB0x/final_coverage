/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:04:11 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.flatten;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.config.Configuration;
import jp.co.yahoo.yosegi.spread.flatten.FlattenFunctionFactory;
import jp.co.yahoo.yosegi.spread.flatten.IFlattenFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FlattenFunctionFactory_ESTest extends FlattenFunctionFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("spread.reader.flatten.columnMc", "4RL[KMVU_xQ#!uh209");
      // Undeclared exception!
      try { 
        FlattenFunctionFactory.get(configuration0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/databind/ObjectMapper
         //
         verifyException("jp.co.yahoo.yosegi.message.parser.json.JacksonMessageReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        FlattenFunctionFactory.get((Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.flatten.FlattenFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("spread.reader.flatten.columnjava.lang.String@0000000005", (String) null);
      IFlattenFunction iFlattenFunction0 = FlattenFunctionFactory.get(configuration0);
      assertFalse(iFlattenFunction0.isFlatten());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.set("0OxG>q6^", "0OxG>q6^");
      IFlattenFunction iFlattenFunction0 = FlattenFunctionFactory.get(configuration0);
      assertFalse(iFlattenFunction0.isFlatten());
  }
}
