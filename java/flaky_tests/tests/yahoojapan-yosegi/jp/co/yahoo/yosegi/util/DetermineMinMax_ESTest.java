/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:10:34 GMT 2022
 */

package jp.co.yahoo.yosegi.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.util.DetermineMinMax;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DetermineMinMax_ESTest extends DetermineMinMax_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(0);
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>(integer0, integer0);
      Integer integer1 = new Integer(1165);
      determineMinMax0.set(integer1);
      assertFalse(integer0.equals((Object)integer1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>((Integer) null, (Integer) null);
      Integer integer0 = determineMinMax0.getMax();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer((-453));
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>(integer0, integer1);
      determineMinMax0.set(integer0);
      assertFalse(integer1.equals((Object)integer0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(8);
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>(integer0, integer0);
      Integer integer1 = new Integer(1);
      determineMinMax0.set(integer1);
      assertFalse(integer0.equals((Object)integer1));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>(integer0, integer0);
      determineMinMax0.set(integer0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer(0);
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>(integer0, integer0);
      // Undeclared exception!
      try { 
        determineMinMax0.set((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>((Integer) null, (Integer) null);
      determineMinMax0.set((Integer) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DetermineMinMax<Integer> determineMinMax0 = new DetermineMinMax<Integer>((Integer) null, (Integer) null);
      Integer integer0 = determineMinMax0.getMin();
      assertNull(integer0);
  }
}
