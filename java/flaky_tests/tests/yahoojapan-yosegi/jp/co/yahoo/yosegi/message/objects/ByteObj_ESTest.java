/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:54:32 GMT 2022
 */

package jp.co.yahoo.yosegi.message.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import jp.co.yahoo.yosegi.message.objects.ByteObj;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteObj_ESTest extends ByteObj_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      short short0 = byteObj0.getShort();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte)109);
      short short0 = byteObj0.getShort();
      assertEquals((short)109, short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      long long0 = byteObj0.getLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte)109);
      long long0 = byteObj0.getLong();
      assertEquals(109L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      int int0 = byteObj0.getInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte)109);
      int int0 = byteObj0.getInt();
      assertEquals(109, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      float float0 = byteObj0.getFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte)109);
      float float0 = byteObj0.getFloat();
      assertEquals(109.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte)109);
      double double0 = byteObj0.getDouble();
      assertEquals(109.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-15));
      double double0 = byteObj0.getDouble();
      assertEquals((-15.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      byte byte0 = byteObj0.getByte();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte)109);
      byte byte0 = byteObj0.getByte();
      assertEquals((byte)109, byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-15));
      boolean boolean0 = byteObj0.getBoolean();
      assertTrue(boolean0);
      assertEquals((-15), byteObj0.getInt());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      boolean boolean0 = byteObj0.getBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-15));
      Object object0 = byteObj0.get();
      assertEquals((byte) (-15), object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      long long0 = byteObj0.getLong();
      assertEquals((-11L), long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      float float0 = byteObj0.getFloat();
      assertEquals((-11.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      byteObj0.getPrimitiveType();
      assertEquals((-11.0F), byteObj0.getFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      String string0 = byteObj0.getString();
      assertEquals("-11", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      int int0 = byteObj0.getInt();
      assertEquals((-11), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      short short0 = byteObj0.getShort();
      assertEquals((short) (-11), short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      byte[] byteArray0 = byteObj0.getBytes();
      assertArrayEquals(new byte[] {(byte)45, (byte)49, (byte)49}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      int int0 = byteObj0.getObjectSize();
      assertEquals(1, int0);
      assertEquals(0.0F, byteObj0.getFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      double double0 = byteObj0.getDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj((byte) (-11));
      byte byte0 = byteObj0.getByte();
      assertEquals((byte) (-11), byte0);
  }
}
