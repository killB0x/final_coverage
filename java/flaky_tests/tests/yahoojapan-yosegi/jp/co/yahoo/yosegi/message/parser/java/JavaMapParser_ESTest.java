/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:38:02 GMT 2022
 */

package jp.co.yahoo.yosegi.message.parser.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import jp.co.yahoo.yosegi.message.design.ArrayContainerField;
import jp.co.yahoo.yosegi.message.design.DoubleField;
import jp.co.yahoo.yosegi.message.objects.PrimitiveObject;
import jp.co.yahoo.yosegi.message.objects.PrimitiveType;
import jp.co.yahoo.yosegi.message.parser.IParser;
import jp.co.yahoo.yosegi.message.parser.java.JavaMapParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaMapParser_ESTest extends JavaMapParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DoubleField doubleField0 = new DoubleField("O^8>ve");
      Map<Object, Object> map0 = doubleField0.toJavaObject();
      JavaMapParser javaMapParser0 = new JavaMapParser(map0);
      int int0 = javaMapParser0.size();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      Object object0 = javaMapParser0.toJavaObject();
      hashMap0.put("", object0);
      IParser iParser0 = javaMapParser0.getParser("");
      assertNotSame(javaMapParser0, iParser0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DoubleField doubleField0 = new DoubleField("4Ki@H%~e*.m%84fK?");
      ArrayContainerField arrayContainerField0 = new ArrayContainerField("child", doubleField0);
      Map<Object, Object> map0 = arrayContainerField0.toJavaObject();
      JavaMapParser javaMapParser0 = new JavaMapParser(map0);
      IParser iParser0 = javaMapParser0.getParser("child");
      assertTrue(iParser0.isArray());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put("J1Lp! iG", "J1Lp! iG");
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      PrimitiveObject primitiveObject0 = javaMapParser0.get("J1Lp! iG");
      assertEquals(PrimitiveType.STRING, primitiveObject0.getPrimitiveType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Set<Map.Entry<Object, Object>> set0 = (Set<Map.Entry<Object, Object>>)hashMap0.entrySet();
      hashMap0.put(set0, "jp.co.yahoo.yosegi.message.parser.java.JavaMapParser");
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      // Undeclared exception!
      try { 
        javaMapParser0.toJavaObject();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaMapParser javaMapParser0 = new JavaMapParser((Map<Object, Object>) null);
      // Undeclared exception!
      try { 
        javaMapParser0.toJavaObject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaMapParser javaMapParser0 = new JavaMapParser((Map<Object, Object>) null);
      // Undeclared exception!
      try { 
        javaMapParser0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.parser.java.JavaMapParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavaMapParser javaMapParser0 = new JavaMapParser((Map<Object, Object>) null);
      // Undeclared exception!
      try { 
        javaMapParser0.hasParser("nW]k4z`%w4mi.L-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.parser.java.JavaMapParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      IParser iParser0 = javaMapParser0.getParser("");
      // Undeclared exception!
      try { 
        iParser0.hasParser("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavaMapParser javaMapParser0 = new JavaMapParser((Map<Object, Object>) null);
      // Undeclared exception!
      try { 
        javaMapParser0.getParser("x$^MQVg9!Tces+9GW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.parser.java.JavaMapParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaMapParser javaMapParser0 = new JavaMapParser((Map<Object, Object>) null);
      // Undeclared exception!
      try { 
        javaMapParser0.getAllKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.parser.java.JavaMapParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaMapParser javaMapParser0 = new JavaMapParser((Map<Object, Object>) null);
      // Undeclared exception!
      try { 
        javaMapParser0.get("SHORT");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.parser.java.JavaMapParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavaMapParser javaMapParser0 = new JavaMapParser((Map<Object, Object>) null);
      // Undeclared exception!
      try { 
        javaMapParser0.containsKey("nW]k4z`%w4mi.L-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      Object object0 = javaMapParser0.toJavaObject();
      hashMap0.put("US-xg=.Bb.{*G$3&^j&", object0);
      boolean boolean0 = javaMapParser0.containsKey("US-xg=.Bb.{*G$3&^j&");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      boolean boolean0 = javaMapParser0.containsKey("child");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      String[] stringArray0 = javaMapParser0.getAllKey();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      int int0 = javaMapParser0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      PrimitiveObject primitiveObject0 = javaMapParser0.get("@6!q -Ddfwa4b9");
      assertNull(primitiveObject0.getString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      boolean boolean0 = javaMapParser0.isMap();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      IParser iParser0 = javaMapParser0.getParser(778);
      assertFalse(iParser0.isArray());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      boolean boolean0 = javaMapParser0.isStruct();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      boolean boolean0 = javaMapParser0.isArray();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      boolean boolean0 = javaMapParser0.hasParser(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      PrimitiveObject primitiveObject0 = javaMapParser0.get(11);
      assertEquals(0, primitiveObject0.getObjectSize());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      Object object0 = javaMapParser0.toJavaObject();
      Object object1 = new Object();
      hashMap0.put(object0, object1);
      String[] stringArray0 = javaMapParser0.getAllKey();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JavaMapParser javaMapParser0 = new JavaMapParser(hashMap0);
      boolean boolean0 = javaMapParser0.hasParser("4Ki@H%~e*.m%84fK?");
      assertTrue(boolean0);
  }
}
