/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:24:17 GMT 2022
 */

package jp.co.yahoo.yosegi.message.design;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import jp.co.yahoo.yosegi.message.design.FieldType;
import jp.co.yahoo.yosegi.message.design.IntegerField;
import jp.co.yahoo.yosegi.message.design.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntegerField_ESTest extends IntegerField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntegerField integerField0 = new IntegerField("jp.co.yahoo.yosegi.message.design.IntegerField");
      Properties properties0 = integerField0.getProperties();
      assertNotNull(properties0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Properties properties0 = new Properties(hashMap0);
      IntegerField integerField0 = new IntegerField((String) null, properties0);
      String string0 = integerField0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntegerField integerField0 = new IntegerField("jp.co.yahoo.yosegi.message.design.IntegerField");
      String string0 = integerField0.getName();
      assertEquals("jp.co.yahoo.yosegi.message.design.IntegerField", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IntegerField integerField0 = new IntegerField("jp.co.yahoo.yosegi.message.design.IntegerField", (Properties) null);
      Properties properties0 = integerField0.getProperties();
      assertNull(properties0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IntegerField integerField0 = new IntegerField("");
      String string0 = integerField0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IntegerField integerField0 = new IntegerField("9yX|kS");
      FieldType fieldType0 = integerField0.getFieldType();
      assertEquals(FieldType.INTEGER, fieldType0);
  }
}
