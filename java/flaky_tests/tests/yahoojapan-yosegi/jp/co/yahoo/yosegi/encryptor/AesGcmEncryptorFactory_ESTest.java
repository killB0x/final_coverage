/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:59:25 GMT 2022
 */

package jp.co.yahoo.yosegi.encryptor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.encryptor.AdditionalAuthenticationData;
import jp.co.yahoo.yosegi.encryptor.AesGcmEncryptor;
import jp.co.yahoo.yosegi.encryptor.AesGcmEncryptorFactory;
import jp.co.yahoo.yosegi.encryptor.EncryptionKey;
import jp.co.yahoo.yosegi.encryptor.Module;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AesGcmEncryptorFactory_ESTest extends AesGcmEncryptorFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AesGcmEncryptorFactory aesGcmEncryptorFactory0 = new AesGcmEncryptorFactory();
      Module module0 = Module.KEYS;
      byte[] byteArray0 = new byte[5];
      AdditionalAuthenticationData additionalAuthenticationData0 = new AdditionalAuthenticationData(byteArray0, byteArray0);
      int int0 = aesGcmEncryptorFactory0.getEncryptSize(0, module0, additionalAuthenticationData0);
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AesGcmEncryptorFactory aesGcmEncryptorFactory0 = new AesGcmEncryptorFactory();
      Module module0 = Module.KEYS;
      byte[] byteArray0 = new byte[5];
      AdditionalAuthenticationData additionalAuthenticationData0 = new AdditionalAuthenticationData(byteArray0, byteArray0);
      int int0 = aesGcmEncryptorFactory0.getEncryptSize((-3292), module0, additionalAuthenticationData0);
      assertEquals((-3264), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AesGcmEncryptorFactory aesGcmEncryptorFactory0 = new AesGcmEncryptorFactory();
      Module module0 = Module.BLOCK_META;
      // Undeclared exception!
      try { 
        aesGcmEncryptorFactory0.createEncryptor((EncryptionKey) null, module0, (AdditionalAuthenticationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.encryptor.AesGcmEncryptorFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AesGcmEncryptorFactory aesGcmEncryptorFactory0 = new AesGcmEncryptorFactory();
      byte[] byteArray0 = new byte[8];
      EncryptionKey encryptionKey0 = new EncryptionKey(byteArray0);
      Module module0 = Module.COLUMN_INDEX;
      AdditionalAuthenticationData additionalAuthenticationData0 = new AdditionalAuthenticationData(byteArray0, byteArray0);
      AesGcmEncryptor aesGcmEncryptor0 = (AesGcmEncryptor)aesGcmEncryptorFactory0.createEncryptor(encryptionKey0, module0, additionalAuthenticationData0);
      assertEquals(16, AesGcmEncryptor.GCM_TAG_LENGTH);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AesGcmEncryptorFactory aesGcmEncryptorFactory0 = new AesGcmEncryptorFactory();
      byte[] byteArray0 = new byte[8];
      Module module0 = Module.COLUMN_INDEX;
      AdditionalAuthenticationData additionalAuthenticationData0 = new AdditionalAuthenticationData(byteArray0, byteArray0);
      int int0 = aesGcmEncryptorFactory0.getEncryptSize((byte) (-28), module0, additionalAuthenticationData0);
      assertEquals(0, int0);
  }
}
