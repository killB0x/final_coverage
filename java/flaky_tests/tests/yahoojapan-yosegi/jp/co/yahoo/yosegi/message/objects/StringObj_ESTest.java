/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:52:47 GMT 2022
 */

package jp.co.yahoo.yosegi.message.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.message.objects.PrimitiveType;
import jp.co.yahoo.yosegi.message.objects.StringObj;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringObj_ESTest extends StringObj_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringObj stringObj0 = new StringObj((String) null);
      String string0 = stringObj0.getString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      String string0 = stringObj0.getString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      int int0 = stringObj0.getObjectSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      byte[] byteArray0 = stringObj0.getBytes();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      Object object0 = stringObj0.get();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringObj stringObj0 = new StringObj((String) null);
      // Undeclared exception!
      try { 
        stringObj0.getShort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringObj stringObj0 = new StringObj((String) null);
      // Undeclared exception!
      try { 
        stringObj0.getObjectSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.StringObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      // Undeclared exception!
      try { 
        stringObj0.getLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      // Undeclared exception!
      try { 
        stringObj0.getInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      // Undeclared exception!
      try { 
        stringObj0.getFloat();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringObj stringObj0 = new StringObj((String) null);
      // Undeclared exception!
      try { 
        stringObj0.getFloat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringObj stringObj0 = new StringObj((String) null);
      // Undeclared exception!
      try { 
        stringObj0.getDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringObj stringObj0 = new StringObj("b`JAdgd");
      // Undeclared exception!
      try { 
        stringObj0.getByte();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"b`JAdgd\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringObj stringObj0 = new StringObj("b`JAdgd");
      String string0 = stringObj0.getString();
      assertEquals("b`JAdgd", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringObj stringObj0 = new StringObj((String) null);
      byte[] byteArray0 = stringObj0.getBytes();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      byte[] byteArray0 = stringObj0.getBytes();
      assertEquals(2, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      long long0 = stringObj0.getLong();
      assertEquals(60L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      int int0 = stringObj0.getObjectSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      int int0 = stringObj0.getInt();
      assertEquals(60, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      PrimitiveType primitiveType0 = stringObj0.getPrimitiveType();
      assertEquals(PrimitiveType.STRING, primitiveType0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      float float0 = stringObj0.getFloat();
      assertEquals(60.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      double double0 = stringObj0.getDouble();
      assertEquals(60.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      short short0 = stringObj0.getShort();
      assertEquals((short)60, short0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringObj stringObj0 = new StringObj((String) null);
      Object object0 = stringObj0.get();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringObj stringObj0 = new StringObj();
      // Undeclared exception!
      try { 
        stringObj0.getDouble();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      boolean boolean0 = stringObj0.getBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringObj stringObj0 = new StringObj("60");
      byte byte0 = stringObj0.getByte();
      assertEquals((byte)60, byte0);
  }
}
