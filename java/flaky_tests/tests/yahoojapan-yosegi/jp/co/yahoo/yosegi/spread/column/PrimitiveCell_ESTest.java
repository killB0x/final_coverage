/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:57:12 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.column;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.message.objects.ByteObj;
import jp.co.yahoo.yosegi.message.objects.BytesStringObj;
import jp.co.yahoo.yosegi.message.objects.PrimitiveObject;
import jp.co.yahoo.yosegi.message.objects.Utf8BytesLinkObj;
import jp.co.yahoo.yosegi.spread.column.BooleanCell;
import jp.co.yahoo.yosegi.spread.column.FloatCell;
import jp.co.yahoo.yosegi.spread.column.LongCell;
import jp.co.yahoo.yosegi.spread.column.ShortCell;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PrimitiveCell_ESTest extends PrimitiveCell_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      BooleanCell booleanCell0 = new BooleanCell(byteObj0);
      byte[] byteArray0 = new byte[0];
      BytesStringObj bytesStringObj0 = new BytesStringObj(byteArray0, "(BOOLEAN)0");
      booleanCell0.setRow((PrimitiveObject) bytesStringObj0);
      String string0 = booleanCell0.toString();
      assertEquals("(BOOLEAN)[ERROR]", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      BooleanCell booleanCell0 = new BooleanCell(byteObj0);
      String string0 = booleanCell0.toString();
      assertEquals("(BOOLEAN)0", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShortCell shortCell0 = new ShortCell((PrimitiveObject) null);
      PrimitiveObject primitiveObject0 = shortCell0.getRow();
      assertNull(primitiveObject0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      BooleanCell booleanCell0 = new BooleanCell(byteObj0);
      byte[] byteArray0 = new byte[0];
      BytesStringObj bytesStringObj0 = new BytesStringObj(byteArray0, "(BOOLEAN)0");
      booleanCell0.setRow((PrimitiveObject) bytesStringObj0);
      PrimitiveObject primitiveObject0 = booleanCell0.getRow();
      assertEquals(0, primitiveObject0.getObjectSize());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, (-4203), (-3109));
      FloatCell floatCell0 = new FloatCell(utf8BytesLinkObj0);
      PrimitiveObject primitiveObject0 = floatCell0.getRow();
      assertSame(utf8BytesLinkObj0, primitiveObject0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShortCell shortCell0 = new ShortCell((PrimitiveObject) null);
      // Undeclared exception!
      try { 
        shortCell0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.column.PrimitiveCell", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ByteObj byteObj0 = new ByteObj();
      BooleanCell booleanCell0 = new BooleanCell(byteObj0);
      PrimitiveObject primitiveObject0 = booleanCell0.getRow();
      assertEquals(0.0F, primitiveObject0.getFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1807, 1807);
      LongCell longCell0 = new LongCell(utf8BytesLinkObj0);
      // Undeclared exception!
      try { 
        longCell0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
