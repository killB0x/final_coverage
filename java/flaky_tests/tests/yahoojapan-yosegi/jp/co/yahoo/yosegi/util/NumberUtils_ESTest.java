/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 20:04:21 GMT 2022
 */

package jp.co.yahoo.yosegi.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.util.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Double double0 = Double.valueOf((-1783.35669949016));
      Double double1 = new Double((byte) (-117));
      boolean boolean0 = NumberUtils.range(double0, false, double0, false, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Double double0 = new Double((-21));
      Double double1 = new Double((short) (-2121));
      boolean boolean0 = NumberUtils.range(double0, false, double1, false, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Double double0 = new Double((short)0);
      Double double1 = new Double((-1170.96F));
      Double double2 = new Double(3025.31);
      boolean boolean0 = NumberUtils.range(double1, false, double2, true, double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Double double0 = new Double(2392.148284491207);
      Double double1 = Double.valueOf(0.0);
      boolean boolean0 = NumberUtils.range(double0, false, double0, true, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = new Double(3768);
      boolean boolean0 = NumberUtils.range(double0, true, double0, false, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double double1 = new Double(1734.5407076445);
      boolean boolean0 = NumberUtils.range(double0, true, double1, true, double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Double double0 = new Double((byte) (-63));
      Double double1 = new Double(0.0);
      boolean boolean0 = NumberUtils.range(double0, true, double0, true, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Float float0 = new Float(0.0F);
      Float float1 = new Float(992.8619F);
      Float float2 = new Float((double) 992.8619F);
      boolean boolean0 = NumberUtils.range(float0, false, float1, false, float2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Float float0 = new Float(0.0F);
      Float float1 = new Float((double) (-56L));
      boolean boolean0 = NumberUtils.range(float0, false, float0, false, float1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Float float0 = new Float((-3782.6));
      Float float1 = new Float(1261.0);
      Float float2 = new Float(992.8619F);
      boolean boolean0 = NumberUtils.range(float0, false, float1, true, float2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Float float0 = new Float((float) (byte)0);
      Float float1 = new Float((float) (byte) (-1));
      boolean boolean0 = NumberUtils.range(float0, false, float0, true, float1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float float1 = new Float((-988.0));
      boolean boolean0 = NumberUtils.range(float1, true, float1, false, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Float float0 = new Float((float) 3768);
      Float float1 = new Float(3834.107F);
      boolean boolean0 = NumberUtils.range(float0, true, float1, true, float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Float float0 = new Float((-3782.6));
      Float float1 = new Float(0.0F);
      boolean boolean0 = NumberUtils.range(float0, true, float1, true, float1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-58), false, (byte)0, false, (byte)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-63), false, (byte) (-63), false, (byte) (-63));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-106), false, (byte) (-74), true, (byte) (-74));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)0, false, (byte) (-43), true, (byte)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)123, true, (byte) (-23), false, (byte)123);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)0, true, (byte)29, true, (byte)8);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short)0, false, (short) (byte) (-94), false, (short)2652);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (byte)29, false, (short) (byte)0, false, (short)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (-1), false, (short)1004, true, (short)1004);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short)497, false, (short)0, true, (short) (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (-1631), true, (short) (-1), false, (short)1307);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (-852), true, (short) (-852), true, (short) (-852));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(3056, false, 3056, false, 3768);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-703), false, (-703), false, (-3719));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-3037), false, 871, true, (-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(29, false, (-1424), true, (int) (byte) (-43));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((int) (byte)0, true, 0, false, (int) (short)1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(0, true, 4007, false, 4007);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((int) (byte)0, true, 1, true, (int) (byte)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(0L, false, 1L, false, 1L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((long) 3768, false, (long) 3768, false, 2868L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-1112L), false, 1943L, true, 0L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(1093L, false, (long) 795, true, (long) 795);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-3515L), true, (long) (short) (-2392), false, (-796L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-1382L), true, 2832L, false, 0L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((long) (byte)0, true, 1L, true, (long) (byte)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(0L, true, (long) (byte)69, true, 814L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Float float0 = new Float(0.0F);
      // Undeclared exception!
      try { 
        NumberUtils.range((Float) null, false, float0, false, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.util.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Double double0 = new Double((-1912.38479));
      Double double1 = new Double(1L);
      Double double2 = new Double((-1L));
      boolean boolean0 = NumberUtils.range(double0, false, double1, false, double2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Double double0 = new Double((-1382L));
      Double double1 = new Double(2832L);
      boolean boolean0 = NumberUtils.range(double0, false, double1, false, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Double double0 = new Double(0.0F);
      Double double1 = new Double((-2843.037476608054));
      boolean boolean0 = NumberUtils.range(double1, false, double0, true, double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Double double0 = new Double(84.34291562808923);
      Double double1 = new Double(2035.237967);
      boolean boolean0 = NumberUtils.range(double0, false, double0, true, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Double double0 = new Double(84.34291562808923);
      boolean boolean0 = NumberUtils.range(double0, false, double0, true, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Double double0 = new Double((-1793.9323029087197));
      Double double1 = new Double(3.53530646);
      boolean boolean0 = NumberUtils.range(double0, true, double1, false, double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Double double0 = new Double(0.0);
      boolean boolean0 = NumberUtils.range(double0, true, double0, false, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Double double0 = new Double(2300.228);
      Double double1 = new Double((byte) (-82));
      boolean boolean0 = NumberUtils.range(double0, true, double0, false, double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = new Double((byte)7);
      boolean boolean0 = NumberUtils.range(double1, true, double1, true, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        NumberUtils.range(double0, true, (Double) null, false, (Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Double", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Double double0 = new Double(2632);
      boolean boolean0 = NumberUtils.range(double0, true, double0, true, double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Double double0 = new Double((-21));
      boolean boolean0 = NumberUtils.range(double0, false, double0, false, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Float float0 = new Float((-1651.8657F));
      Float float1 = new Float(1929.6318);
      Float float2 = new Float((float) (byte)103);
      boolean boolean0 = NumberUtils.range(float0, false, float1, false, float2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Float float0 = new Float(1.0);
      Float float1 = new Float((float) (byte)91);
      boolean boolean0 = NumberUtils.range(float0, false, float0, false, float1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Float float0 = new Float((double) (byte) (-36));
      Float float1 = new Float(0.0);
      boolean boolean0 = NumberUtils.range(float0, false, float0, true, float1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Float float0 = new Float((-1257.0F));
      Float float1 = new Float(43.4734F);
      boolean boolean0 = NumberUtils.range(float0, false, float1, true, float1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Float float0 = new Float(0.0F);
      boolean boolean0 = NumberUtils.range(float0, false, float0, false, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Float float0 = new Float((float) (byte)0);
      Float float1 = new Float((float) (byte) (-1));
      boolean boolean0 = NumberUtils.range(float1, true, float0, false, float1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Float float0 = new Float(1.0);
      Float float1 = new Float((float) (-2120));
      boolean boolean0 = NumberUtils.range(float0, true, float0, false, float1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float float1 = new Float((-1.0));
      boolean boolean0 = NumberUtils.range(float0, true, float1, true, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Float float0 = new Float((-3782.6));
      Float float1 = new Float(0.0F);
      boolean boolean0 = NumberUtils.range(float1, true, float1, true, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Float float0 = new Float(0.0);
      boolean boolean0 = NumberUtils.range(float0, true, float0, false, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Float float0 = new Float((float) (byte)0);
      boolean boolean0 = NumberUtils.range(float0, false, float0, true, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-123), false, (byte) (-123), false, (byte) (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-43), false, (byte)66, false, (byte) (-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-69), false, (byte) (-69), true, (byte)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)78, false, (byte)0, true, (byte) (-50));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-29), false, (byte)66, true, (byte) (-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)13, true, (byte)75, false, (byte)13);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-94), true, (byte)85, false, (byte)85);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte) (-69), true, (byte) (-69), true, (byte) (-69));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)86, true, (byte)86, true, (byte)37);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)0, true, (byte)29, false, (byte) (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)1, true, (byte)42, true, (byte)68);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((byte)57, false, (byte) (-1), false, (byte)1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (byte)26, false, (short)2407, false, (short)2407);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (-55), false, (short)1105, false, (short)117);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (byte) (-107), false, (short) (byte) (-107), true, (short)1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (-690), false, (short)66, true, (short)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (byte)1, false, (short) (byte) (-1), true, (short) (byte)1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (-1348), true, (short) (-1348), false, (short) (-1348));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (byte)0, true, (short) (byte)29, false, (short)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (byte) (-74), true, (short) (byte) (-74), true, (short)406);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short)109, true, (short)109, true, (short) (-2664));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (byte) (-43), true, (short) (-1), false, (short) (-598));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short) (-2227), true, (short)1, true, (short)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((short)1, false, (short) (-2121), false, (short)1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((int) (byte) (-89), false, 85, false, 85);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((int) (byte) (-1), false, 4518, false, 3292);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-517), false, (-517), true, (-5));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-77), false, (-77), true, (-77));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-292), false, (-21), true, (-21));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((int) (byte) (-69), true, (int) (byte) (-69), false, (int) (byte) (-69));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(2989, true, 2989, false, (int) (byte)89);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(0, true, 0, true, 2135875628);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(2941, true, 2941, true, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((int) (byte) (-25), true, (int) (byte) (-25), true, (int) (byte) (-25));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-77), true, (-1), false, (-77));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-21), false, (-21), false, (-21));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(255L, false, 255L, false, 799L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(255L, false, 255L, false, 255L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(255L, false, 2815L, true, 2815L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((long) (byte)72, false, (long) (byte)72, true, 2392L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((long) (byte) (-39), false, (long) (byte) (-39), true, (long) (byte) (-39));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-874L), true, (-874L), false, (-874L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(807L, true, 807L, false, (-885L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      boolean boolean0 = NumberUtils.range(1132L, true, 1L, true, 1L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-1392L), true, (-1392L), true, (-1392L));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      boolean boolean0 = NumberUtils.range((-1140L), false, 778L, false, 254L);
      assertTrue(boolean0);
  }
}
