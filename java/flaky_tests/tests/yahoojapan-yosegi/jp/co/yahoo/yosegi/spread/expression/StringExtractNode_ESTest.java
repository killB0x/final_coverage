/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 00:04:26 GMT 2022
 */

package jp.co.yahoo.yosegi.spread.expression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jp.co.yahoo.yosegi.blockindex.BlockIndexNode;
import jp.co.yahoo.yosegi.spread.Spread;
import jp.co.yahoo.yosegi.spread.column.ColumnType;
import jp.co.yahoo.yosegi.spread.column.IColumn;
import jp.co.yahoo.yosegi.spread.column.PrimitiveColumn;
import jp.co.yahoo.yosegi.spread.column.SpreadColumn;
import jp.co.yahoo.yosegi.spread.expression.IExtractNode;
import jp.co.yahoo.yosegi.spread.expression.StringExtractNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringExtractNode_ESTest extends StringExtractNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("", (IExtractNode) null);
      SpreadColumn spreadColumn0 = new SpreadColumn("Can not down cast. long to byte. int value is ");
      IColumn iColumn0 = stringExtractNode0.get((IColumn) spreadColumn0);
      assertFalse(iColumn0.isDictionary());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("N]1$%Hp\"!");
      // Undeclared exception!
      try { 
        stringExtractNode0.get((Spread) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.expression.StringExtractNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("", (IExtractNode) null);
      // Undeclared exception!
      try { 
        stringExtractNode0.get((BlockIndexNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.expression.StringExtractNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("", (IExtractNode) null);
      stringExtractNode0.pushChild((IExtractNode) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("eL~1gv%!");
      StringExtractNode stringExtractNode1 = new StringExtractNode("eL~1gv%!", stringExtractNode0);
      stringExtractNode1.pushChild(stringExtractNode0);
      assertNotSame(stringExtractNode1, stringExtractNode0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("=-_k\"'8de,)kGXlYW");
      StringExtractNode stringExtractNode1 = new StringExtractNode("=-_k\"'8de,)kGXlYW", stringExtractNode0);
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = stringExtractNode1.get(blockIndexNode0);
      assertNotSame(blockIndexNode0, blockIndexNode1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("", (IExtractNode) null);
      BlockIndexNode blockIndexNode0 = new BlockIndexNode();
      BlockIndexNode blockIndexNode1 = stringExtractNode0.get(blockIndexNode0);
      assertNotSame(blockIndexNode1, blockIndexNode0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("2@JX");
      StringExtractNode stringExtractNode1 = new StringExtractNode("jp.co.yahoo.yosegi.spread.expression.StringExtractNode", stringExtractNode0);
      ColumnType columnType0 = ColumnType.BOOLEAN;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "2@JX");
      IColumn iColumn0 = primitiveColumn0.getColumn("CjF");
      Spread spread0 = new Spread(iColumn0);
      IColumn iColumn1 = stringExtractNode1.get(spread0);
      assertEquals(ColumnType.NULL, iColumn1.getColumnType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode((String) null);
      StringExtractNode stringExtractNode1 = new StringExtractNode((String) null, stringExtractNode0);
      ColumnType columnType0 = ColumnType.INTEGER;
      PrimitiveColumn primitiveColumn0 = new PrimitiveColumn(columnType0, "");
      IColumn iColumn0 = primitiveColumn0.getColumn(1548);
      IColumn iColumn1 = stringExtractNode1.get(iColumn0);
      assertFalse(iColumn1.isDictionary());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("");
      // Undeclared exception!
      try { 
        stringExtractNode0.get((IColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jp.co.yahoo.yosegi.spread.expression.StringExtractNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringExtractNode stringExtractNode0 = new StringExtractNode("", (IExtractNode) null);
      Spread spread0 = new Spread();
      IColumn iColumn0 = stringExtractNode0.get(spread0);
      IColumn iColumn1 = stringExtractNode0.get(iColumn0);
      assertFalse(iColumn1.isExpandColumn());
  }
}
