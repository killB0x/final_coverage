/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:04:04 GMT 2022
 */

package jp.co.yahoo.yosegi.encryptor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import jp.co.yahoo.yosegi.encryptor.AesGcmEncryptor;
import jp.co.yahoo.yosegi.encryptor.EncryptionKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AesGcmEncryptor_ESTest extends AesGcmEncryptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = new byte[16];
      EncryptionKey encryptionKey0 = new EncryptionKey(byteArray1);
      AesGcmEncryptor aesGcmEncryptor0 = new AesGcmEncryptor(encryptionKey0, byteArray1);
      byte[] byteArray2 = aesGcmEncryptor0.encrypt(byteArray0, 2, (byte)1);
      assertEquals(29, byteArray2.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      EncryptionKey encryptionKey0 = new EncryptionKey(byteArray0);
      AesGcmEncryptor aesGcmEncryptor0 = new AesGcmEncryptor(encryptionKey0, byteArray0);
      try { 
        aesGcmEncryptor0.decrypt(byteArray0, 0, (-3200));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.IllegalArgumentException: Bad arguments
         //
         verifyException("jp.co.yahoo.yosegi.encryptor.AesGcmEncryptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      EncryptionKey encryptionKey0 = new EncryptionKey(byteArray0);
      AesGcmEncryptor aesGcmEncryptor0 = new AesGcmEncryptor(encryptionKey0, byteArray0);
      try { 
        aesGcmEncryptor0.encrypt(byteArray0, 2, (byte)1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.security.InvalidKeyException: Invalid AES key length: 7 bytes
         //
         verifyException("jp.co.yahoo.yosegi.encryptor.AesGcmEncryptor", e);
      }
  }
}
