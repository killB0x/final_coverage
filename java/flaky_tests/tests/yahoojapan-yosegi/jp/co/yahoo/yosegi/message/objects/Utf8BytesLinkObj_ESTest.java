/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 01:07:54 GMT 2022
 */

package jp.co.yahoo.yosegi.message.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import jp.co.yahoo.yosegi.message.objects.Utf8BytesLinkObj;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Utf8BytesLinkObj_ESTest extends Utf8BytesLinkObj_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, 1);
      String string0 = utf8BytesLinkObj0.getString();
      assertEquals("\u0000", string0);
      assertEquals(1, utf8BytesLinkObj0.getStart());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, 0);
      String string0 = utf8BytesLinkObj0.getString();
      assertEquals("", string0);
      assertEquals(1, utf8BytesLinkObj0.getStart());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, (byte)0, (byte)55);
      int int0 = utf8BytesLinkObj0.getStart();
      assertEquals(55, utf8BytesLinkObj0.getObjectSize());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, (byte) (-29), (byte) (-29));
      int int0 = utf8BytesLinkObj0.getStart();
      assertEquals((-29), int0);
      assertEquals((-29), utf8BytesLinkObj0.getLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 0, 0);
      int int0 = utf8BytesLinkObj0.getObjectSize();
      assertEquals(0, int0);
      assertEquals(0, utf8BytesLinkObj0.getStart());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 0, (byte) (-34));
      int int0 = utf8BytesLinkObj0.getObjectSize();
      assertEquals(0, utf8BytesLinkObj0.getStart());
      assertEquals((-34), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, (byte) (-65), (byte) (-65));
      utf8BytesLinkObj0.getLinkBytes();
      assertEquals((-65), utf8BytesLinkObj0.getStart());
      assertEquals((-65), utf8BytesLinkObj0.getObjectSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 697, (byte)0);
      utf8BytesLinkObj0.getLinkBytes();
      assertEquals(697, utf8BytesLinkObj0.getStart());
      assertEquals(0, utf8BytesLinkObj0.getObjectSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 0, 0);
      int int0 = utf8BytesLinkObj0.getLength();
      assertEquals(0, int0);
      assertEquals(0, utf8BytesLinkObj0.getStart());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, (-6));
      int int0 = utf8BytesLinkObj0.getLength();
      assertEquals(1, utf8BytesLinkObj0.getStart());
      assertEquals((-6), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, 0);
      byte[] byteArray1 = utf8BytesLinkObj0.getBytes();
      assertEquals(0, byteArray1.length);
      assertEquals(1, utf8BytesLinkObj0.getStart());
      assertEquals(0, utf8BytesLinkObj0.getLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, (byte) (-65), (byte) (-65));
      // Undeclared exception!
      try { 
        utf8BytesLinkObj0.getString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj((byte[]) null, (-5575), (-5575));
      // Undeclared exception!
      try { 
        utf8BytesLinkObj0.getString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj((byte[]) null, 0, 0);
      // Undeclared exception!
      try { 
        utf8BytesLinkObj0.getBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, (-3500), (-3500));
      // Undeclared exception!
      try { 
        utf8BytesLinkObj0.getBytes();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3500
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.Utf8BytesLinkObj", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, 1);
      // Undeclared exception!
      try { 
        utf8BytesLinkObj0.getBytes();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, (byte)96, (byte)96);
      int int0 = utf8BytesLinkObj0.getLength();
      assertEquals(96, utf8BytesLinkObj0.getStart());
      assertEquals(96, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, 1);
      int int0 = utf8BytesLinkObj0.getStart();
      assertEquals(1, int0);
      assertEquals(1, utf8BytesLinkObj0.getObjectSize());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, 1);
      int int0 = utf8BytesLinkObj0.getObjectSize();
      assertEquals(1, int0);
      assertEquals(1, utf8BytesLinkObj0.getStart());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 2, 2);
      byte[] byteArray1 = utf8BytesLinkObj0.getBytes();
      assertEquals(2, byteArray1.length);
      assertEquals(2, utf8BytesLinkObj0.getObjectSize());
      assertEquals(2, utf8BytesLinkObj0.getStart());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj((byte[]) null, (-1342), (-1342));
      utf8BytesLinkObj0.getLinkBytes();
      assertEquals((-1342), utf8BytesLinkObj0.getStart());
      assertEquals((-1342), utf8BytesLinkObj0.getObjectSize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utf8BytesLinkObj utf8BytesLinkObj0 = new Utf8BytesLinkObj(byteArray0, 1, 1);
      try { 
        utf8BytesLinkObj0.get();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unsupported get object method.
         //
         verifyException("jp.co.yahoo.yosegi.message.objects.Utf8BytesLinkObj", e);
      }
  }
}
