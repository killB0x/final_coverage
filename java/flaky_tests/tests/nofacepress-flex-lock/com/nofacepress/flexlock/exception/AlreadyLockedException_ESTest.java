/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:37:18 GMT 2022
 */

package com.nofacepress.flexlock.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nofacepress.flexlock.exception.AlreadyLockedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AlreadyLockedException_ESTest extends AlreadyLockedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      AlreadyLockedException alreadyLockedException0 = new AlreadyLockedException("BW[0ecT2783Yh", mockThrowable0);
      AlreadyLockedException alreadyLockedException1 = null;
      try {
        alreadyLockedException1 = new AlreadyLockedException("", alreadyLockedException0, true, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      AlreadyLockedException alreadyLockedException0 = new AlreadyLockedException(mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AlreadyLockedException alreadyLockedException0 = new AlreadyLockedException("&FL;K<J");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AlreadyLockedException alreadyLockedException0 = new AlreadyLockedException();
      AlreadyLockedException alreadyLockedException1 = new AlreadyLockedException("&FL;K<J", alreadyLockedException0, false, true);
      assertFalse(alreadyLockedException1.equals((Object)alreadyLockedException0));
  }
}
