/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 23:04:08 GMT 2022
 */

package com.github.gh351135612.logger;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.gh351135612.logger.Logger;
import com.github.gh351135612.logger.impl.LoggerPrinter;
import com.github.gh351135612.logger.inter.LogAdapter;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Logger_ESTest extends Logger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        Logger.w("b$|,`UX%U{!5RX*Uk", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'U'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("9s/(x");
      MockThrowable mockThrowable1 = new MockThrowable("9s/(x", mockThrowable0);
      mockThrowable0.initCause(mockThrowable1);
      // Undeclared exception!
      Logger.log(0, "9s/(x", mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        Logger.i("%}T9V~C", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '}'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      Throwable[] throwableArray0 = mockThrowable0.getSuppressed();
      Throwable throwable0 = mockThrowable0.initCause(mockThrowable1);
      // Undeclared exception!
      Logger.e(throwable0, "", (Object[]) throwableArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        Logger.e((Throwable) mockThrowable0, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        Logger.e("4RQ/[~S:fL%&e[yMug", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '&'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[11];
      // Undeclared exception!
      try { 
        Logger.e((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        Logger.d("4RQ/[~S:fL%&e[yMug", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '&'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Logger.d((Object) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("2.27?'");
      Logger.log(30000, "", mockThrowable0);
      assertEquals("2.27?'", mockThrowable0.getMessage());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Logger.clearLogAdapters();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Logger.w("", objectArray0);
      assertEquals(2, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MockThrowable mockThrowable0 = new MockThrowable("2.27?'");
      Logger.e((Throwable) mockThrowable0, "?GL&N$KNB}yU(BIs", objectArray0);
      assertEquals("2.27?'", mockThrowable0.getMessage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Logger.printer(loggerPrinter0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Logger.d("", objectArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Logger.e("", objectArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Logger.i("INFO", (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Logger.addLogAdapter((LogAdapter) null);
  }
}
