/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 23:03:26 GMT 2022
 */

package com.github.gh351135612.logger.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.gh351135612.logger.impl.LoggerPrinter;
import com.github.gh351135612.logger.inter.LogAdapter;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.MissingFormatWidthException;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoggerPrinter_ESTest extends LoggerPrinter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      MockThrowable mockThrowable0 = new MockThrowable("?(l$XM3 j4-/C");
      Object[] objectArray0 = new Object[10];
      loggerPrinter0.e((Throwable) mockThrowable0, "?(l$XM3 j4-/C", objectArray0);
      assertEquals("?(l$XM3 j4-/C", mockThrowable0.getMessage());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.e("?(l$XM3 j4-/C", (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[10];
      // Undeclared exception!
      try { 
        loggerPrinter0.w("S(3 $?o%uu81@x`", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'u'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) loggerPrinter0;
      // Undeclared exception!
      try { 
        loggerPrinter0.w(";8%X:", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // x != com.github.gh351135612.logger.impl.LoggerPrinter
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        loggerPrinter0.w(")H)y>%,CPgjMps*", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = c, Flags = ,
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.addAdapter((LogAdapter) null);
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        loggerPrinter0.w("vu6c07 c", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.gh351135612.logger.impl.LoggerPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      MockThrowable mockThrowable0 = new MockThrowable("");
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      mockThrowable0.initCause(mockThrowable1);
      // Undeclared exception!
      loggerPrinter0.log((-1), "", mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        loggerPrinter0.i("@@%:lTq:njVG{H,q8", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = ':'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try { 
        loggerPrinter0.i("%g4A!%0fcfqk&", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %0f
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "6Yi4%o]z`71";
      // Undeclared exception!
      try { 
        loggerPrinter0.i("6Yi4%o]z`71", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // o != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        loggerPrinter0.i("F3'wI~3k%(TYqW,D)E<", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = Y, Flags = (
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        loggerPrinter0.i((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable("Q}`zu", mockThrowable0);
      mockThrowable0.initCause(mockThrowable1);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      loggerPrinter0.e((Throwable) mockThrowable1, "Q}`zu", objectArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      MockThrowable mockThrowable0 = new MockThrowable();
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        loggerPrinter0.e((Throwable) mockThrowable0, "\"%-*^^_^E^)F", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '-'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[7];
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      // Undeclared exception!
      try { 
        loggerPrinter0.e((Throwable) mockThrowable0, "`N@%0#eoG(7O$x,#", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %#0e
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      MockThrowable mockThrowable0 = new MockThrowable();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "#RJp}%g_gG}<50L&_~B";
      // Undeclared exception!
      try { 
        loggerPrinter0.e((Throwable) mockThrowable0, "#RJp}%g_gG}<50L&_~B", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // g != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        loggerPrinter0.e("pQc%r", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'r'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try { 
        loggerPrinter0.e("%g4A!%0fcfqk&", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %0f
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "(]%x5^aD[@ pL.F>|.`";
      // Undeclared exception!
      try { 
        loggerPrinter0.e("(]%x5^aD[@ pL.F>|.`", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // x != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        loggerPrinter0.e("hXI_uV:;N=%(H", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = h, Flags = (
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        loggerPrinter0.d("I;!<bk#mH[9*+%", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '%'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        loggerPrinter0.d("`N@%0#eoG(7O$x,#", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %#0e
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "(]%x5^aD[@ pL.F>|.`";
      // Undeclared exception!
      try { 
        loggerPrinter0.d("(]%x5^aD[@ pL.F>|.`", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // x != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        loggerPrinter0.d("7%,x$i^$jT7", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = x, Flags = ,
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.addAdapter((LogAdapter) null);
      // Undeclared exception!
      try { 
        loggerPrinter0.d((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.gh351135612.logger.impl.LoggerPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.addAdapter((LogAdapter) null);
      // Undeclared exception!
      try { 
        loggerPrinter0.log(9492, "", (Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.gh351135612.logger.impl.LoggerPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.log(9492, "", (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      MockThrowable mockThrowable0 = new MockThrowable();
      loggerPrinter0.log(3, (String) null, mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable", mockThrowable0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      MockThrowable mockThrowable0 = new MockThrowable("T[?<eD");
      loggerPrinter0.log(1872, "T[?<eD", mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: T[?<eD", mockThrowable0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.clearLogAdapters();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.d((Object) loggerPrinter0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[0];
      loggerPrinter0.d("", objectArray0);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        loggerPrinter0.e((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.i("t:dMp7o`aC`", (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        loggerPrinter0.e((Throwable) null, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      Object[] objectArray0 = new Object[0];
      loggerPrinter0.w("\u2502 Thread: ", objectArray0);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LoggerPrinter loggerPrinter0 = new LoggerPrinter();
      loggerPrinter0.addAdapter((LogAdapter) null);
      // Undeclared exception!
      try { 
        loggerPrinter0.d("6'3tOdFZqW", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.gh351135612.logger.impl.LoggerPrinter", e);
      }
  }
}
