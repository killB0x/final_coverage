/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 03:39:24 GMT 2022
 */

package io.teknek.daemon;

import org.junit.Test;
import static org.junit.Assert.*;
import io.teknek.daemon.WorkerStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WorkerStatus_ESTest extends WorkerStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus();
      String string0 = workerStatus0.getWorkerUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus("", "", "");
      workerStatus0.setWorkerUuid("FAu 8GyL");
      String string0 = workerStatus0.getWorkerUuid();
      assertEquals("FAu 8GyL", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus();
      String string0 = workerStatus0.getTeknekDaemonId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus("", "", "");
      workerStatus0.setTeknekDaemonId("FAu 8GyL");
      String string0 = workerStatus0.getTeknekDaemonId();
      assertEquals("FAu 8GyL", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus("", "", "");
      String string0 = workerStatus0.getFeedPartitionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus("", "", "");
      String string0 = workerStatus0.getWorkerUuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus(":@*NCi", "", "");
      assertEquals("", workerStatus0.getTeknekDaemonId());
      
      workerStatus0.setTeknekDaemonId("");
      assertEquals("", workerStatus0.getFeedPartitionId());
      assertEquals(":@*NCi", workerStatus0.getWorkerUuid());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus();
      String string0 = workerStatus0.getFeedPartitionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus("Bu:!\"", "Bu:!\"", "MIE7]r4KQnx}Kaw]T");
      String string0 = workerStatus0.getFeedPartitionId();
      assertEquals("Bu:!\"", string0);
      assertEquals("Bu:!\"", workerStatus0.getWorkerUuid());
      assertEquals("MIE7]r4KQnx}Kaw]T", workerStatus0.getTeknekDaemonId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus("", "", "");
      workerStatus0.setFeedPartitionId("");
      assertEquals("", workerStatus0.getTeknekDaemonId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WorkerStatus workerStatus0 = new WorkerStatus(":@*NCi", "", "");
      String string0 = workerStatus0.getTeknekDaemonId();
      assertEquals("", workerStatus0.getFeedPartitionId());
      assertEquals(":@*NCi", workerStatus0.getWorkerUuid());
      assertEquals("", string0);
  }
}
