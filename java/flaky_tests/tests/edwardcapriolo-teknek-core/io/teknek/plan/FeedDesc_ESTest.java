/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 23 03:39:14 GMT 2022
 */

package io.teknek.plan;

import org.junit.Test;
import static org.junit.Assert.*;
import io.teknek.plan.FeedDesc;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FeedDesc_ESTest extends FeedDesc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Integer integer0 = new Integer(0);
      hashMap0.put(integer0, integer0);
      feedDesc0.withProperties(hashMap0);
      Map map0 = feedDesc0.getProperties();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      FeedDesc feedDesc1 = feedDesc0.withName("d0");
      String string0 = feedDesc1.getName();
      assertEquals("d0", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      feedDesc0.setName((String) null);
      assertNull(feedDesc0.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      Map map0 = feedDesc0.getProperties();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      feedDesc0.withProperties(hashMap0);
      Map map0 = feedDesc0.getProperties();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      FeedDesc feedDesc1 = feedDesc0.withFeedClass("Q<.(q");
      assertEquals("Q<.(q", feedDesc1.getTheClass());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      String string0 = feedDesc0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      feedDesc0.withName("");
      String string0 = feedDesc0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FeedDesc feedDesc0 = new FeedDesc();
      feedDesc0.setProperties((Map) null);
      assertNull(feedDesc0.getSpec());
  }
}
