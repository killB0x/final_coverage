/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 07:07:55 GMT 2022
 */

package co.codecraft.jcircuit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import co.codecraft.jcircuit.Circuit;
import co.codecraft.jcircuit.CircuitBreaker;
import co.codecraft.jcircuit.DirectTransitionPolicy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransitionPolicy_ESTest extends TransitionPolicy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      directTransitionPolicy0.onGoodPulse();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      MockThrowable mockThrowable0 = new MockThrowable();
      directTransitionPolicy0.onBadPulse((Throwable) mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable", mockThrowable0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      directTransitionPolicy0.onAltPulse();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      // Undeclared exception!
      try { 
        directTransitionPolicy0.bindTo((CircuitBreaker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("co.codecraft.jcircuit.TransitionPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      directTransitionPolicy0.afterDirectTransition(0, true);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      Circuit.Listener circuit_Listener0 = mock(Circuit.Listener.class, new ViolatedAssumptionAnswer());
      CircuitBreaker circuitBreaker0 = new CircuitBreaker(directTransitionPolicy0, circuit_Listener0);
      directTransitionPolicy0.bindTo(circuitBreaker0);
      assertTrue(circuitBreaker0.shouldTryNormalPath());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      boolean boolean0 = directTransitionPolicy0.beforeDirectTransition(0, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DirectTransitionPolicy directTransitionPolicy0 = new DirectTransitionPolicy();
      directTransitionPolicy0.onBadPulse();
  }
}
