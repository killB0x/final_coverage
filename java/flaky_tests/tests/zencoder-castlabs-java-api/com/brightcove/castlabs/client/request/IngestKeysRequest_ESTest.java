/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:33:35 GMT 2022
 */

package com.brightcove.castlabs.client.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.brightcove.castlabs.client.request.AssetRequest;
import com.brightcove.castlabs.client.request.IngestKeysRequest;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IngestKeysRequest_ESTest extends IngestKeysRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IngestKeysRequest ingestKeysRequest0 = new IngestKeysRequest();
      LinkedList<AssetRequest> linkedList0 = new LinkedList<AssetRequest>();
      AssetRequest assetRequest0 = new AssetRequest();
      linkedList0.add(assetRequest0);
      ingestKeysRequest0.setAssets(linkedList0);
      List<AssetRequest> list0 = ingestKeysRequest0.getAssets();
      assertTrue(list0.contains(assetRequest0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IngestKeysRequest ingestKeysRequest0 = new IngestKeysRequest();
      ingestKeysRequest0.setAssets((List<AssetRequest>) null);
      List<AssetRequest> list0 = ingestKeysRequest0.getAssets();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IngestKeysRequest ingestKeysRequest0 = new IngestKeysRequest();
      String string0 = ingestKeysRequest0.toString();
      assertEquals("IngestKeysRequest [assets=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IngestKeysRequest ingestKeysRequest0 = new IngestKeysRequest();
      List<AssetRequest> list0 = ingestKeysRequest0.getAssets();
      assertTrue(list0.isEmpty());
  }
}
