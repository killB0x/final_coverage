/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:24:35 GMT 2022
 */

package com.brightcove.castlabs.client.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.brightcove.castlabs.client.response.AssetResponse;
import com.brightcove.castlabs.client.response.IngestAssetError;
import com.brightcove.castlabs.client.response.IngestKeysResponse;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AssetResponse_ESTest extends AssetResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      LinkedList<IngestKeysResponse> linkedList0 = new LinkedList<IngestKeysResponse>();
      IngestKeysResponse ingestKeysResponse0 = new IngestKeysResponse();
      linkedList0.add(ingestKeysResponse0);
      assetResponse0.setKeys(linkedList0);
      List<IngestKeysResponse> list0 = assetResponse0.getKeys();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      assetResponse0.setErrors((List<IngestAssetError>) null);
      List<IngestAssetError> list0 = assetResponse0.getErrors();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      LinkedList<IngestAssetError> linkedList0 = new LinkedList<IngestAssetError>();
      assetResponse0.setErrors(linkedList0);
      IngestAssetError ingestAssetError0 = IngestAssetError.MISSING_KEYS;
      linkedList0.add(ingestAssetError0);
      List<IngestAssetError> list0 = assetResponse0.getErrors();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      assetResponse0.setAssetId("");
      String string0 = assetResponse0.getAssetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      String string0 = assetResponse0.getAssetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      List<IngestKeysResponse> list0 = assetResponse0.getKeys();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      assetResponse0.setAssetId("]");
      String string0 = assetResponse0.getAssetId();
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      assetResponse0.setKeys((List<IngestKeysResponse>) null);
      List<IngestKeysResponse> list0 = assetResponse0.getKeys();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      List<IngestAssetError> list0 = assetResponse0.getErrors();
      assetResponse0.setErrors(list0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AssetResponse assetResponse0 = new AssetResponse();
      String string0 = assetResponse0.toString();
      assertEquals("Asset [assetId=null, keys=[], errors=[]]", string0);
  }
}
