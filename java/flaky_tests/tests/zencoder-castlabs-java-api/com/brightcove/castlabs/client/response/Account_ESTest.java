/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:25:53 GMT 2022
 */

package com.brightcove.castlabs.client.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.brightcove.castlabs.client.response.Account;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Account_ESTest extends Account_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Account account0 = new Account();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      account0.setPermissions(linkedList0);
      List<String> list0 = account0.getPermissions();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Account account0 = new Account();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("3a};#R5`W({,L]b");
      account0.setPermissions(linkedList0);
      List<String> list0 = account0.getPermissions();
      assertTrue(list0.contains("3a};#R5`W({,L]b"));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Account account0 = new Account();
      account0.setLogin("Account{id='null', enabled='null', api='null', login='null', firstName='null', lastName='null', permissions='null'}");
      String string0 = account0.getLogin();
      assertEquals("Account{id='null', enabled='null', api='null', login='null', firstName='null', lastName='null', permissions='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Account account0 = new Account();
      account0.setLogin("");
      String string0 = account0.getLogin();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Account account0 = new Account();
      account0.setLastName("");
      String string0 = account0.getLastName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Account account0 = new Account();
      account0.setID("t:R(5(L@/t");
      String string0 = account0.getID();
      assertEquals("t:R(5(L@/t", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Account account0 = new Account();
      account0.setID("");
      String string0 = account0.getID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Account account0 = new Account();
      account0.setFirstName("");
      String string0 = account0.getFirstName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Account account0 = new Account();
      Boolean boolean0 = Boolean.TRUE;
      account0.setEnabled(boolean0);
      Boolean boolean1 = account0.getEnabled();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Account account0 = new Account();
      Boolean boolean0 = Boolean.FALSE;
      account0.setEnabled(boolean0);
      Boolean boolean1 = account0.getEnabled();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Account account0 = new Account();
      Boolean boolean0 = Boolean.TRUE;
      account0.setAPI(boolean0);
      Boolean boolean1 = account0.getAPI();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Account account0 = new Account();
      Boolean boolean0 = account0.getEnabled();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getLastName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Account account0 = new Account();
      account0.setLastName("(o");
      String string0 = account0.getLastName();
      assertEquals("(o", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Account account0 = new Account();
      account0.setFirstName(", api='");
      String string0 = account0.getFirstName();
      assertEquals(", api='", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getLogin();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getFirstName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Account account0 = new Account();
      Boolean boolean0 = account0.getAPI();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Account account0 = new Account();
      Boolean boolean0 = Boolean.FALSE;
      account0.setAPI(boolean0);
      Boolean boolean1 = account0.getAPI();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Account account0 = new Account();
      List<String> list0 = account0.getPermissions();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.toString();
      assertEquals("Account{id='null', enabled='null', api='null', login='null', firstName='null', lastName='null', permissions='null'}", string0);
  }
}
