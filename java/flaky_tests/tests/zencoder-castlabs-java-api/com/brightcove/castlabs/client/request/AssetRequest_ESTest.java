/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:13:00 GMT 2022
 */

package com.brightcove.castlabs.client.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.brightcove.castlabs.client.request.AssetRequest;
import com.brightcove.castlabs.client.request.AssetType;
import com.brightcove.castlabs.client.request.IngestKey;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AssetRequest_ESTest extends AssetRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      assetRequest0.setVariantId("W)]Dgq~!Iaao<k?~");
      String string0 = assetRequest0.getVariantId();
      assertEquals("W)]Dgq~!Iaao<k?~", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      assetRequest0.setVariantId("");
      String string0 = assetRequest0.getVariantId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      AssetType assetType0 = AssetType.CENC;
      assetRequest0.setType(assetType0);
      AssetType assetType1 = assetRequest0.getType();
      assertSame(assetType1, assetType0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      assetRequest0.setIngestKeys((List<IngestKey>) null);
      List<IngestKey> list0 = assetRequest0.getIngestKeys();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      LinkedList<IngestKey> linkedList0 = new LinkedList<IngestKey>();
      IngestKey ingestKey0 = new IngestKey();
      linkedList0.add(ingestKey0);
      assetRequest0.setIngestKeys(linkedList0);
      List<IngestKey> list0 = assetRequest0.getIngestKeys();
      assertTrue(list0.contains(ingestKey0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      assetRequest0.setAssetId("com.brightcove.castlabs.client.request.IngestKey");
      String string0 = assetRequest0.getAssetId();
      assertEquals("com.brightcove.castlabs.client.request.IngestKey", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      AssetType assetType0 = assetRequest0.getType();
      assetRequest0.setType(assetType0);
      assertNull(assetRequest0.getVariantId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      String string0 = assetRequest0.getAssetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      assetRequest0.setAssetId("");
      String string0 = assetRequest0.getAssetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      String string0 = assetRequest0.getVariantId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      String string0 = assetRequest0.toString();
      assertEquals("Asset [type=null, assetId=null, variantId=null, ingestKeys=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AssetRequest assetRequest0 = new AssetRequest();
      List<IngestKey> list0 = assetRequest0.getIngestKeys();
      assetRequest0.setIngestKeys(list0);
      assertNull(assetRequest0.getVariantId());
  }
}
