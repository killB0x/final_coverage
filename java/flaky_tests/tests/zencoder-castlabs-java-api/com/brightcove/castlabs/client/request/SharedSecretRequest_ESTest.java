/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:28:34 GMT 2022
 */

package com.brightcove.castlabs.client.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.brightcove.castlabs.client.request.SharedSecretRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SharedSecretRequest_ESTest extends SharedSecretRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      sharedSecretRequest0.setSecret("`G*$?`t");
      String string0 = sharedSecretRequest0.getSecret();
      assertEquals("`G*$?`t", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      Boolean boolean0 = Boolean.FALSE;
      sharedSecretRequest0.setEnabled(boolean0);
      Boolean boolean1 = sharedSecretRequest0.getEnabled();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      sharedSecretRequest0.setDescription("SharedSecretRequest{enabled='null', description='null', secret='null'}");
      String string0 = sharedSecretRequest0.getDescription();
      assertEquals("SharedSecretRequest{enabled='null', description='null', secret='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      sharedSecretRequest0.setDescription("");
      String string0 = sharedSecretRequest0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      Boolean boolean0 = Boolean.TRUE;
      sharedSecretRequest0.setEnabled(boolean0);
      Boolean boolean1 = sharedSecretRequest0.getEnabled();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      String string0 = sharedSecretRequest0.getSecret();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      sharedSecretRequest0.setSecret("");
      String string0 = sharedSecretRequest0.getSecret();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      Boolean boolean0 = sharedSecretRequest0.getEnabled();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      String string0 = sharedSecretRequest0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SharedSecretRequest sharedSecretRequest0 = new SharedSecretRequest();
      String string0 = sharedSecretRequest0.toString();
      assertEquals("SharedSecretRequest{enabled='null', description='null', secret='null'}", string0);
  }
}
