/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:23:18 GMT 2022
 */

package com.brightcove.castlabs.client.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.brightcove.castlabs.client.request.AlgorithmType;
import com.brightcove.castlabs.client.request.IngestKey;
import com.brightcove.castlabs.client.request.StreamType;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IngestKey_ESTest extends IngestKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setWvAssetId("\"=04W[$");
      String string0 = ingestKey0.getWvAssetId();
      assertEquals("\"=04W[$", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setKeyRotationId("ET");
      String string0 = ingestKey0.getKeyRotationId();
      assertEquals("ET", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setKeyRotationId("");
      String string0 = ingestKey0.getKeyRotationId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, (String) null);
      ingestKey0.setKeyMetadata(hashMap0);
      Map<String, String> map0 = ingestKey0.getKeyMetadata();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setKeyId("nrF&0J3k R@tbALqKY");
      String string0 = ingestKey0.getKeyId();
      assertEquals("nrF&0J3k R@tbALqKY", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setKeyId("");
      String string0 = ingestKey0.getKeyId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setKey(", streamType=");
      String string0 = ingestKey0.getKey();
      assertEquals(", streamType=", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setKey("");
      String string0 = ingestKey0.getKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setIv("V5sSi");
      String string0 = ingestKey0.getIv();
      assertEquals("V5sSi", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setIv("");
      String string0 = ingestKey0.getIv();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      String string0 = ingestKey0.getWvAssetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      AlgorithmType algorithmType0 = AlgorithmType.AES_KEYSEED;
      ingestKey0.setAlgorithm(algorithmType0);
      AlgorithmType algorithmType1 = ingestKey0.getAlgorithm();
      assertSame(algorithmType1, algorithmType0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.getAlgorithm();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      String string0 = ingestKey0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      String string0 = ingestKey0.getKeyId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      StreamType streamType0 = StreamType.SD;
      ingestKey0.setStreamType(streamType0);
      StreamType streamType1 = ingestKey0.getStreamType();
      assertEquals(StreamType.SD, streamType1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setWvAssetId("");
      String string0 = ingestKey0.getWvAssetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      Map<String, String> map0 = ingestKey0.getKeyMetadata();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.setKeyMetadata((Map<String, String>) null);
      Map<String, String> map0 = ingestKey0.getKeyMetadata();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      String string0 = ingestKey0.getKeyRotationId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      String string0 = ingestKey0.toString();
      assertEquals("IngestKey [keyId=null, keyRotationId=null, streamType=null, algorithm=null, key=null, iv=null, wvAssetId=null, keyMetadata={}]", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      ingestKey0.getStreamType();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IngestKey ingestKey0 = new IngestKey();
      String string0 = ingestKey0.getIv();
      assertNull(string0);
  }
}
