/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:27:17 GMT 2022
 */

package com.brightcove.castlabs.client.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.brightcove.castlabs.client.response.DownloadKeysResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DownloadKeysResponse_ESTest extends DownloadKeysResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setKeyRotationId("");
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='null', keyId='null', streamType='null', assetId='null', variantId='null', keyRotationId='', ingestChannel='null', ingestRegion='null', auditChanged='null', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setAuditChanged("`xDf9ixgG6Z");
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='null', keyId='null', streamType='null', assetId='null', variantId='null', keyRotationId='null', ingestChannel='null', ingestRegion='null', auditChanged='`xDf9ixgG6Z', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setIngestChannel("`xDf9ixgG6Z");
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='null', keyId='null', streamType='null', assetId='null', variantId='null', keyRotationId='null', ingestChannel='`xDf9ixgG6Z', ingestRegion='null', auditChanged='null', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setAuditChangedBy("");
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='null', keyId='null', streamType='null', assetId='null', variantId='null', keyRotationId='null', ingestChannel='null', ingestRegion='null', auditChanged='null', auditChangedBy=''}", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setAssetId("");
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='null', keyId='null', streamType='null', assetId='', variantId='null', keyRotationId='null', ingestChannel='null', ingestRegion='null', auditChanged='null', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.keyId = "";
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='null', keyId='', streamType='null', assetId='null', variantId='null', keyRotationId='null', ingestChannel='null', ingestRegion='null', auditChanged='null', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setType("");
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='', keyId='null', streamType='null', assetId='null', variantId='null', keyRotationId='null', ingestChannel='null', ingestRegion='null', auditChanged='null', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.uuid = "`xDf9ixgG6Z";
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='`xDf9ixgG6Z', type='null', keyId='null', streamType='null', assetId='null', variantId='null', keyRotationId='null', ingestChannel='null', ingestRegion='null', auditChanged='null', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setStreamType("");
      String string0 = downloadKeysResponse0.toString();
      assertEquals("DownloadKeysResponse{uuid='null', type='null', keyId='null', streamType='', assetId='null', variantId='null', keyRotationId='null', ingestChannel='null', ingestRegion='null', auditChanged='null', auditChangedBy='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setVariantId(", ingestChannel='");
      String string0 = downloadKeysResponse0.getVariantId();
      assertEquals(", ingestChannel='", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.variantId = "";
      String string0 = downloadKeysResponse0.getVariantId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.uuid = "`xDf9ixgG6Z";
      downloadKeysResponse0.uuid = null;
      downloadKeysResponse0.uuid = "";
      String string0 = downloadKeysResponse0.getUuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.type = "o";
      String string0 = downloadKeysResponse0.getType();
      assertEquals("o", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setType("");
      String string0 = downloadKeysResponse0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setStreamType("");
      String string0 = downloadKeysResponse0.getStreamType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setKeyRotationId(", keyId='");
      String string0 = downloadKeysResponse0.getKeyRotationId();
      assertEquals(", keyId='", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setKeyRotationId("");
      String string0 = downloadKeysResponse0.getKeyRotationId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.keyId = "r|I";
      String string0 = downloadKeysResponse0.getKeyId();
      assertEquals("r|I", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.keyId = "";
      String string0 = downloadKeysResponse0.getKeyId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.ingestRegion = "`xDf9ixgG6Z";
      String string0 = downloadKeysResponse0.getIngestRegion();
      assertEquals("`xDf9ixgG6Z", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setIngestChannel("AqW59!u.w}H64u*v)8");
      String string0 = downloadKeysResponse0.getIngestChannel();
      assertEquals("AqW59!u.w}H64u*v)8", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.ingestChannel = "";
      String string0 = downloadKeysResponse0.getIngestChannel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setAuditChangedBy("Kl~GZvwBe#392Tjp");
      String string0 = downloadKeysResponse0.getAuditChangedBy();
      assertEquals("Kl~GZvwBe#392Tjp", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.auditChangedBy = "";
      String string0 = downloadKeysResponse0.getAuditChangedBy();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.auditChanged = "[5>'afl";
      String string0 = downloadKeysResponse0.getAuditChanged();
      assertEquals("[5>'afl", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setAuditChanged("");
      String string0 = downloadKeysResponse0.getAuditChanged();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setAssetId("9");
      String string0 = downloadKeysResponse0.getAssetId();
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.assetId = "";
      String string0 = downloadKeysResponse0.getAssetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setIngestRegion("");
      String string0 = downloadKeysResponse0.getIngestRegion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setStreamType("3;H}8+l");
      String string0 = downloadKeysResponse0.getStreamType();
      assertEquals("3;H}8+l", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setKeyId("j,sLWt");
      assertNull(downloadKeysResponse0.getType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getIngestChannel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getKeyRotationId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      downloadKeysResponse0.setUuid(", keyId='");
      String string0 = downloadKeysResponse0.getUuid();
      assertEquals(", keyId='", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getKeyId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getAuditChanged();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getIngestRegion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getAuditChangedBy();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getAssetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getStreamType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DownloadKeysResponse downloadKeysResponse0 = new DownloadKeysResponse();
      String string0 = downloadKeysResponse0.getVariantId();
      assertNull(string0);
  }
}
