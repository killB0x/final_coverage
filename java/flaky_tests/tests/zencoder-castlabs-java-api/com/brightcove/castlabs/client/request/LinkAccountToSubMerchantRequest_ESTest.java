/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:14:17 GMT 2022
 */

package com.brightcove.castlabs.client.request;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.brightcove.castlabs.client.request.LinkAccountToSubMerchantRequest;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LinkAccountToSubMerchantRequest_ESTest extends LinkAccountToSubMerchantRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      linkAccountToSubMerchantRequest0.setSubMerchantUuid(", accountUuids=");
      String string0 = linkAccountToSubMerchantRequest0.getSubMerchantUuid();
      assertEquals(", accountUuids=", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      linkAccountToSubMerchantRequest0.setSubMerchantUuid("");
      String string0 = linkAccountToSubMerchantRequest0.getSubMerchantUuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      linkAccountToSubMerchantRequest0.setAccountUuids(linkedList0);
      List<String> list0 = linkAccountToSubMerchantRequest0.getAccountUuids();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = linkedList0.subList(0, 0);
      linkedList0.add("LinkAccountToSubMerchantRequest{subMerchantUuid='null', accountUuids=null}");
      linkAccountToSubMerchantRequest0.setAccountUuids(list0);
      // Undeclared exception!
      try { 
        linkAccountToSubMerchantRequest0.toString();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      String string0 = linkAccountToSubMerchantRequest0.toString();
      assertEquals("LinkAccountToSubMerchantRequest{subMerchantUuid='null', accountUuids=null}", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      List<String> list0 = linkAccountToSubMerchantRequest0.getAccountUuids();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      String string0 = linkAccountToSubMerchantRequest0.getSubMerchantUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkAccountToSubMerchantRequest linkAccountToSubMerchantRequest0 = new LinkAccountToSubMerchantRequest();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkAccountToSubMerchantRequest0.setAccountUuids(linkedList0);
      List<String> list0 = linkAccountToSubMerchantRequest0.getAccountUuids();
      assertTrue(list0.isEmpty());
  }
}
