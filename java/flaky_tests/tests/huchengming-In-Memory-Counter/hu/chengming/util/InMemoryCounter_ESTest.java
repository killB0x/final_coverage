/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 15:12:59 GMT 2022
 */

package hu.chengming.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import hu.chengming.util.InMemoryCounter;
import hu.chengming.util.client.InMemoryCounterPersistClient;
import java.util.concurrent.atomic.AtomicLong;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InMemoryCounter_ESTest extends InMemoryCounter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter0 = new InMemoryCounter<InMemoryCounter.CounterNode>(inMemoryCounterPersistClient0, 1647L, 1647L, 1L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment(inMemoryCounter_CounterNode0, (-1772L));
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient1 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter1 = new InMemoryCounter<InMemoryCounter.CounterNode>(inMemoryCounterPersistClient1, (-1772L), 1392409281320L, 1L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode1 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment(inMemoryCounter_CounterNode0);
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread0 = inMemoryCounter1.new PersistThread();
      // Undeclared exception!
      inMemoryCounter_PersistThread0.run();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>(inMemoryCounterPersistClient0, (-4134L), 5722L, 1392408279320L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient1 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<Object> inMemoryCounter1 = new InMemoryCounter<Object>(inMemoryCounterPersistClient1, (-819L), 0L, 1392409612320L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode1 = inMemoryCounter1.new CounterNode();
      inMemoryCounter1.increment((Object) inMemoryCounter_CounterNode1, (-4134L));
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode2 = inMemoryCounter1.new CounterNode();
      inMemoryCounter1.increment((Object) inMemoryCounter_CounterNode0);
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread0 = inMemoryCounter1.new PersistThread();
      // Undeclared exception!
      inMemoryCounter_PersistThread0.run();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = null;
      long long0 = 261L;
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter0 = new InMemoryCounter<InMemoryCounter.CounterNode>((InMemoryCounterPersistClient) null, 261L, 0L, 0L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment(inMemoryCounter_CounterNode0);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode1 = inMemoryCounter0.new CounterNode();
      long long1 = 0L;
      InMemoryCounter<Object> inMemoryCounter1 = new InMemoryCounter<Object>((InMemoryCounterPersistClient) null, 0L, 1392409612320L, 0L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode2 = inMemoryCounter0.new CounterNode();
      inMemoryCounter1.increment((Object) inMemoryCounter_CounterNode2);
      Object object0 = new Object();
      inMemoryCounter1.increment(object0, 1392407410320L);
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread0 = inMemoryCounter1.new PersistThread();
      // Undeclared exception!
      try { 
        inMemoryCounter_PersistThread0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hu.chengming.util.InMemoryCounter$PersistThread", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = null;
      long long0 = 261L;
      long long1 = 0L;
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter0 = new InMemoryCounter<InMemoryCounter.CounterNode>((InMemoryCounterPersistClient) null, 261L, 0L, 0L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment(inMemoryCounter_CounterNode0);
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread0 = inMemoryCounter0.new PersistThread();
      // Undeclared exception!
      try { 
        inMemoryCounter_PersistThread0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hu.chengming.util.InMemoryCounter$PersistThread", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter0 = new InMemoryCounter<InMemoryCounter.CounterNode>(inMemoryCounterPersistClient0, 0L, (-1871L), (-3102L));
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment(inMemoryCounter_CounterNode0, 1392409281320L);
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient1 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<Object> inMemoryCounter1 = new InMemoryCounter<Object>(inMemoryCounterPersistClient1, (-1871L), (-3102L), 1392409281320L);
      Object object0 = new Object();
      inMemoryCounter1.increment(object0);
      inMemoryCounter1.increment((Object) inMemoryCounter_CounterNode0, (-3102L));
      inMemoryCounter1.increment((Object) inMemoryCounter_CounterNode0);
      inMemoryCounter1.increment((Object) inMemoryCounter_CounterNode0, (-1871L));
      inMemoryCounter_CounterNode0.timestamp = 1L;
      inMemoryCounter1.increment((Object) inMemoryCounter0, 0L);
      inMemoryCounter1.increment((Object) inMemoryCounter_CounterNode0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      long long0 = 1782L;
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>(inMemoryCounterPersistClient0, 1782L, (-1329L), (-1329L));
      Object object0 = new Object();
      inMemoryCounter0.increment(object0);
      Object object1 = new Object();
      inMemoryCounter0.increment(object1);
      inMemoryCounter0.increment(object1, 1L);
      Object object2 = new Object();
      inMemoryCounter0.increment(object2, 2L);
      // Undeclared exception!
      try { 
        inMemoryCounter0.increment((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>(inMemoryCounterPersistClient0, 0L, (-1260L), (-1260L));
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread0 = inMemoryCounter0.new PersistThread();
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient1 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter1 = new InMemoryCounter<InMemoryCounter.CounterNode>(inMemoryCounterPersistClient1, (-1260L), (-2187L), 0L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter1.new CounterNode();
      inMemoryCounter1.increment(inMemoryCounter_CounterNode0);
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread1 = inMemoryCounter0.new PersistThread();
      // Undeclared exception!
      try { 
        inMemoryCounter_PersistThread1.run();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>(inMemoryCounterPersistClient0, 0L, 0L, 0L);
      Object object0 = new Object();
      inMemoryCounter0.increment(object0, 0L);
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread0 = inMemoryCounter0.new PersistThread();
      // Undeclared exception!
      inMemoryCounter_PersistThread0.run();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>((InMemoryCounterPersistClient) null, 949L, 0L, 949L);
      // Undeclared exception!
      try { 
        inMemoryCounter0.increment((Object) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>(inMemoryCounterPersistClient0, (-299L), 1L, (-299L));
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment((Object) inMemoryCounter_CounterNode0);
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient1 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      inMemoryCounter0.increment(object0);
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter1 = new InMemoryCounter<InMemoryCounter.CounterNode>(inMemoryCounterPersistClient1, 1392409281320L, 50L, 0L);
      inMemoryCounter0.increment((Object) inMemoryCounter_CounterNode0);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode1 = inMemoryCounter0.new CounterNode();
      inMemoryCounter1.increment(inMemoryCounter_CounterNode1);
      inMemoryCounter1.increment(inMemoryCounter_CounterNode0);
      Object object1 = null;
      // Undeclared exception!
      try { 
        inMemoryCounter0.increment((Object) null, 1392409281320L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = null;
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>((InMemoryCounterPersistClient) null, 956L, 956L, 956L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment((Object) inMemoryCounter_CounterNode0);
      // Undeclared exception!
      try { 
        inMemoryCounter0.increment((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InMemoryCounter<InMemoryCounter.CounterNode> inMemoryCounter0 = new InMemoryCounter<InMemoryCounter.CounterNode>((InMemoryCounterPersistClient) null, 50L, 50L, 0L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      inMemoryCounter0.increment(inMemoryCounter_CounterNode0);
      InMemoryCounter.PersistThread inMemoryCounter_PersistThread0 = inMemoryCounter0.new PersistThread();
      // Undeclared exception!
      try { 
        inMemoryCounter_PersistThread0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InMemoryCounterPersistClient<Object> inMemoryCounterPersistClient0 = (InMemoryCounterPersistClient<Object>) mock(InMemoryCounterPersistClient.class, new ViolatedAssumptionAnswer());
      long long0 = 2648L;
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>(inMemoryCounterPersistClient0, 2648L, 2648L, 2648L);
      InMemoryCounter.CounterNode inMemoryCounter_CounterNode0 = inMemoryCounter0.new CounterNode();
      AtomicLong atomicLong0 = new AtomicLong(1392409281320L);
      inMemoryCounter_CounterNode0.value = atomicLong0;
      inMemoryCounter0.increment((Object) inMemoryCounter_CounterNode0);
      // Undeclared exception!
      try { 
        inMemoryCounter0.increment((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InMemoryCounter<Object> inMemoryCounter0 = new InMemoryCounter<Object>((InMemoryCounterPersistClient) null, 50L, 50L, 50L);
  }
}
