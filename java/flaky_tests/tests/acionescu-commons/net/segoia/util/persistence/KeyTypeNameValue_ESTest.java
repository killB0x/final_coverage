/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:56:40 GMT 2022
 */

package net.segoia.util.persistence;

import org.junit.Test;
import static org.junit.Assert.*;
import net.segoia.util.persistence.KeyTypeNameValue;
import net.segoia.util.persistence.PersistentValueType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KeyTypeNameValue_ESTest extends KeyTypeNameValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeyTypeNameValue<Integer, Integer> keyTypeNameValue0 = new KeyTypeNameValue<Integer, Integer>();
      PersistentValueType persistentValueType0 = PersistentValueType.STRING;
      keyTypeNameValue0.setType(persistentValueType0);
      PersistentValueType persistentValueType1 = keyTypeNameValue0.getType();
      assertEquals(PersistentValueType.STRING, persistentValueType1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeyTypeNameValue<Integer, Integer> keyTypeNameValue0 = new KeyTypeNameValue<Integer, Integer>();
      keyTypeNameValue0.setName("TS\"*=");
      String string0 = keyTypeNameValue0.getName();
      assertEquals("TS\"*=", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyTypeNameValue<Integer, Integer> keyTypeNameValue0 = new KeyTypeNameValue<Integer, Integer>();
      keyTypeNameValue0.getType();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyTypeNameValue<Integer, Integer> keyTypeNameValue0 = new KeyTypeNameValue<Integer, Integer>();
      keyTypeNameValue0.setName("");
      String string0 = keyTypeNameValue0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KeyTypeNameValue<Integer, Integer> keyTypeNameValue0 = new KeyTypeNameValue<Integer, Integer>();
      PersistentValueType persistentValueType0 = PersistentValueType.VALUES_SET;
      keyTypeNameValue0.setType(persistentValueType0);
      PersistentValueType persistentValueType1 = keyTypeNameValue0.getType();
      assertEquals(PersistentValueType.VALUES_SET, persistentValueType1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KeyTypeNameValue<Integer, Integer> keyTypeNameValue0 = new KeyTypeNameValue<Integer, Integer>();
      String string0 = keyTypeNameValue0.getName();
      assertNull(string0);
  }
}
