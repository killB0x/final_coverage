/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:15:39 GMT 2022
 */

package net.segoia.util.calculator.operators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.calculator.operators.ConstantOperator;
import net.segoia.util.calculator.operators.MultiplyOperator;
import net.segoia.util.calculator.operators.OperatorInput;
import net.segoia.util.calculator.operators.PowerOperator;
import net.segoia.util.calculator.operators.SubtractOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Operator_ESTest extends Operator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PowerOperator powerOperator0 = new PowerOperator();
      powerOperator0.argumentsCount = 1116;
      powerOperator0.argumentsCount = 1116;
      powerOperator0.argumentsCount = 0;
      int int0 = powerOperator0.getArgumentsCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConstantOperator constantOperator0 = new ConstantOperator();
      String[] stringArray0 = new String[3];
      OperatorInput operatorInput0 = new OperatorInput(stringArray0);
      constantOperator0.doOperation(operatorInput0);
      assertEquals(1, constantOperator0.getArgumentsCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiplyOperator multiplyOperator0 = new MultiplyOperator();
      // Undeclared exception!
      try { 
        multiplyOperator0.doOperation((OperatorInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.calculator.operators.MultiplyOperator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MultiplyOperator multiplyOperator0 = new MultiplyOperator();
      Number[] numberArray0 = new Number[0];
      OperatorInput operatorInput0 = new OperatorInput(numberArray0);
      // Undeclared exception!
      try { 
        multiplyOperator0.doOperation(operatorInput0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.segoia.util.calculator.operators.OperatorInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SubtractOperator subtractOperator0 = new SubtractOperator();
      int int0 = subtractOperator0.getArgumentsCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MultiplyOperator multiplyOperator0 = new MultiplyOperator();
      multiplyOperator0.setArgumentsCount((-880));
      int int0 = multiplyOperator0.getArgumentsCount();
      assertEquals((-880), int0);
  }
}
