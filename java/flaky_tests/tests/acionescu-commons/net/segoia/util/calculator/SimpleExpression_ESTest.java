/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:38:30 GMT 2022
 */

package net.segoia.util.calculator;

import org.junit.Test;
import static org.junit.Assert.*;
import net.segoia.util.calculator.ConstantExpression;
import net.segoia.util.calculator.DoubleOperandExpression;
import net.segoia.util.calculator.SingleOperandExpression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleExpression_ESTest extends SimpleExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SingleOperandExpression singleOperandExpression0 = new SingleOperandExpression();
      ConstantExpression constantExpression0 = new ConstantExpression();
      DoubleOperandExpression doubleOperandExpression0 = new DoubleOperandExpression(singleOperandExpression0, constantExpression0, "d*.*d*");
      String string0 = doubleOperandExpression0.getOperator();
      assertEquals("d*.*d*", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SingleOperandExpression singleOperandExpression0 = new SingleOperandExpression();
      DoubleOperandExpression doubleOperandExpression0 = new DoubleOperandExpression(singleOperandExpression0, singleOperandExpression0, "");
      String string0 = doubleOperandExpression0.getOperator();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SingleOperandExpression singleOperandExpression0 = new SingleOperandExpression();
      singleOperandExpression0.setOperator(".34");
      assertEquals(".34", singleOperandExpression0.getOperator());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SingleOperandExpression singleOperandExpression0 = new SingleOperandExpression();
      String string0 = singleOperandExpression0.getOperator();
      assertNull(string0);
  }
}
