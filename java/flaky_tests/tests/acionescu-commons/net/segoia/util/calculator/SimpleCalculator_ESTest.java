/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:57:21 GMT 2022
 */

package net.segoia.util.calculator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.calculator.SimpleCalculator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleCalculator_ESTest extends SimpleCalculator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      Long long0 = Long.valueOf((-2928L));
      Number number0 = simpleCalculator0.multiply(long0, long0);
      Number number1 = simpleCalculator0.div(number0, number0);
      Number number2 = simpleCalculator0.multiply(number1, number0);
      assertEquals(8573184.0, number2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      Long long0 = Long.valueOf((-2928L));
      Number number0 = simpleCalculator0.multiply(long0, long0);
      Number number1 = simpleCalculator0.multiply(number0, number0);
      Number number2 = simpleCalculator0.subtract(number0, number1);
      assertEquals((-7.3499475324672E13), number2);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      // Undeclared exception!
      try { 
        simpleCalculator0.multiply((Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.calculator.SimpleCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      // Undeclared exception!
      try { 
        simpleCalculator0.modulo((Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.calculator.SimpleCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      // Undeclared exception!
      try { 
        simpleCalculator0.div((Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.calculator.SimpleCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      Long long0 = Long.valueOf((-2928L));
      Number number0 = simpleCalculator0.multiply(long0, long0);
      // Undeclared exception!
      try { 
        simpleCalculator0.add(number0, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.calculator.SimpleCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      Long long0 = Long.valueOf((-2928L));
      Number number0 = simpleCalculator0.multiply(long0, long0);
      assertEquals(8573184.0, number0);
      
      Number number1 = simpleCalculator0.modulo(number0, long0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      Long long0 = Long.valueOf((-2928L));
      Number number0 = simpleCalculator0.multiply(long0, long0);
      Number number1 = simpleCalculator0.add(number0, number0);
      assertEquals(1.7146368E7, number1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      Long long0 = Long.valueOf((-2928L));
      Number number0 = simpleCalculator0.multiply(long0, long0);
      Number number1 = simpleCalculator0.div(number0, number0);
      assertEquals(1.0, number1);
      
      Number number2 = simpleCalculator0.div(number0, number1);
      assertEquals(8573184.0, number2);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SimpleCalculator simpleCalculator0 = new SimpleCalculator();
      // Undeclared exception!
      try { 
        simpleCalculator0.subtract((Number) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.calculator.SimpleCalculator", e);
      }
  }
}
