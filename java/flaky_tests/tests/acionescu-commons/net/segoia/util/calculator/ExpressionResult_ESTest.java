/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:15:18 GMT 2022
 */

package net.segoia.util.calculator;

import org.junit.Test;
import static org.junit.Assert.*;
import net.segoia.util.calculator.ExpressionResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExpressionResult_ESTest extends ExpressionResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExpressionResult expressionResult0 = new ExpressionResult((String) null);
      String string0 = expressionResult0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExpressionResult expressionResult0 = new ExpressionResult((String) null);
      String string0 = expressionResult0.getString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExpressionResult expressionResult0 = new ExpressionResult((Number) null, "E2JAs3ik??Z^");
      String string0 = expressionResult0.getString();
      assertEquals("E2JAs3ik??Z^", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = Integer.valueOf(0);
      ExpressionResult expressionResult0 = new ExpressionResult(integer0, "7");
      boolean boolean0 = expressionResult0.isNumber();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExpressionResult expressionResult0 = new ExpressionResult((Number) null, "E2JAs3ik??Z^");
      boolean boolean0 = expressionResult0.isNumber();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Short short0 = Short.valueOf((short)0);
      ExpressionResult expressionResult0 = new ExpressionResult(short0);
      String string0 = expressionResult0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ExpressionResult expressionResult0 = new ExpressionResult("");
      String string0 = expressionResult0.toString();
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ExpressionResult expressionResult0 = new ExpressionResult("");
      String string0 = expressionResult0.getString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ExpressionResult expressionResult0 = new ExpressionResult((String) null);
      Number number0 = expressionResult0.getNumber();
      assertNull(number0);
  }
}
