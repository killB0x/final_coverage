/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:08:38 GMT 2022
 */

package net.segoia.util.translation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.translation.SimpleTypeTranslator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleTypeTranslator_ESTest extends SimpleTypeTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleTypeTranslator simpleTypeTranslator0 = new SimpleTypeTranslator();
      Object object0 = simpleTypeTranslator0.translate("", "Boolean");
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleTypeTranslator simpleTypeTranslator0 = new SimpleTypeTranslator();
      try { 
        simpleTypeTranslator0.translate("", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // TYPE_CONVERSION_EXCEPTION
         // Error Context: java.util.ArrayList@0000000002
         //
         verifyException("net.segoia.util.data.reflection.ReflectionUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleTypeTranslator simpleTypeTranslator0 = new SimpleTypeTranslator();
      // Undeclared exception!
      try { 
        simpleTypeTranslator0.translate((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'input' parameter cannot be null
         //
         verifyException("net.segoia.util.validation.ParameterValidationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleTypeTranslator simpleTypeTranslator0 = new SimpleTypeTranslator();
      Object object0 = simpleTypeTranslator0.translate("Object", "Object");
      assertEquals("Object", object0);
  }
}
