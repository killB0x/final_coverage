/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:17:48 GMT 2022
 */

package net.segoia.util.data.encoding;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.data.encoding.EncodingUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EncodingUtil_ESTest extends EncodingUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = EncodingUtil.encode("C.jAB(Ywy~_/B&0", "");
      assertEquals("C.jAB(Ywy~_/B&0", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = EncodingUtil.decode(":", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = EncodingUtil.decode("C.jAB(Ywy~_/B&0", "");
      assertEquals("C.jAB(Ywy~_/B&0", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      EncodingUtil.encode("The special structure found in the CNS that allows for multiple inputs is the dendritic spine, the highly dynamic site of excitatory synapses. This morphological dynamism is due to the specific regulation of the actin cytoskeleton, which in turn allows for regulation of synapse formation.[12] Dendritic spines exhibit three main morphologies: filopodia, thin spines, and mushroom spines. The filopodia play a role in synaptogenesis through initiation of contact with axons of other neurons. Filopodia of new neurons tend to associate with multiply synapsed axons, while the filopodia of mature neurons tend to sites devoid of other partners. The dynamism of spines allows for the conversion of filopodia into the mushroom spines that are the primary sites of glutamate receptors and synaptic transmission.[13]", "The special structure found in the CNS that allows for multiple inputs is the dendritic spine, the highly dynamic site of excitatory synapses. This morphological dynamism is due to the specific regulation of the actin cytoskeleton, which in turn allows for regulation of synapse formation.[12] Dendritic spines exhibit three main morphologies: filopodia, thin spines, and mushroom spines. The filopodia play a role in synaptogenesis through initiation of contact with axons of other neurons. Filopodia of new neurons tend to associate with multiply synapsed axons, while the filopodia of mature neurons tend to sites devoid of other partners. The dynamism of spines allows for the conversion of filopodia into the mushroom spines that are the primary sites of glutamate receptors and synaptic transmission.[13]");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodingUtil.decode("Cel:3", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodingUtil.decode("|:wEMlQ B", "|:wEMlQ B");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"wEMlQ B\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodingUtil.decode((String) null, "Z'?sV@eMIjY@&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.data.encoding.Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = EncodingUtil.decode("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String string0 = EncodingUtil.encode("", "h%AqZO35wNsyso");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EncodingUtil encodingUtil0 = new EncodingUtil();
  }
}
