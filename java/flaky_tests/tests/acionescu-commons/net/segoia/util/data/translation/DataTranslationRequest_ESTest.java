/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:54:13 GMT 2022
 */

package net.segoia.util.data.translation;

import org.junit.Test;
import static org.junit.Assert.*;
import net.segoia.util.data.translation.DataTranslationRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataTranslationRequest_ESTest extends DataTranslationRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataTranslationRequest<Integer> dataTranslationRequest0 = new DataTranslationRequest<Integer>();
      dataTranslationRequest0.setTranslationType("");
      String string0 = dataTranslationRequest0.getTranslationType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataTranslationRequest<Object> dataTranslationRequest0 = new DataTranslationRequest<Object>();
      Object object0 = new Object();
      dataTranslationRequest0.setSourceObject(object0);
      Object object1 = dataTranslationRequest0.getSourceObject();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataTranslationRequest<Integer> dataTranslationRequest0 = new DataTranslationRequest<Integer>();
      String string0 = dataTranslationRequest0.getTranslationType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataTranslationRequest<Integer> dataTranslationRequest0 = new DataTranslationRequest<Integer>();
      dataTranslationRequest0.setTranslationType("net.segoia.util.data.translation.DataTranslationRequest");
      String string0 = dataTranslationRequest0.getTranslationType();
      assertEquals("net.segoia.util.data.translation.DataTranslationRequest", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DataTranslationRequest<Integer> dataTranslationRequest0 = new DataTranslationRequest<Integer>();
      Object object0 = dataTranslationRequest0.getSourceObject();
      assertNull(object0);
  }
}
