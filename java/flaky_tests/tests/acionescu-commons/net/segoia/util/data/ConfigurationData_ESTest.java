/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 05:42:38 GMT 2022
 */

package net.segoia.util.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import net.segoia.util.data.ConfigurationData;
import net.segoia.util.data.DynamicConfigParameter;
import net.segoia.util.data.GenericNameValue;
import net.segoia.util.data.UserInputParameter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigurationData_ESTest extends ConfigurationData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      configurationData0.addUserIntpuParam(userInputParameter0);
      configurationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, GenericNameValue> hashMap0 = new HashMap<String, GenericNameValue>();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      hashMap0.put(", dynamicParams=", userInputParameter0);
      configurationData0.setStaticConfigParams(hashMap0);
      configurationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, DynamicConfigParameter> hashMap0 = new HashMap<String, DynamicConfigParameter>();
      DynamicConfigParameter dynamicConfigParameter0 = new DynamicConfigParameter();
      hashMap0.put("UNKNOWN_LARGE_VALUE", dynamicConfigParameter0);
      configurationData0.setDynamicParams(hashMap0);
      configurationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setUserInputParams((Map<String, UserInputParameter>) null);
      Map<String, UserInputParameter> map0 = configurationData0.getUserInputParams();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      configurationData0.addUserIntpuParam(userInputParameter0);
      userInputParameter0.setMandatory(true);
      UserInputParameter userInputParameter1 = configurationData0.getUserInputParam((String) null);
      assertNull(userInputParameter1.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      configurationData0.addUserIntpuParam(userInputParameter0);
      UserInputParameter userInputParameter1 = configurationData0.getUserInputParam((String) null);
      assertNull(userInputParameter1.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setTemplateId("VALUE_FROM_LIST");
      String string0 = configurationData0.getTemplateId();
      assertEquals("VALUE_FROM_LIST", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setTemplateId("");
      String string0 = configurationData0.getTemplateId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setStaticConfigParams((Map<String, GenericNameValue>) null);
      Map<String, GenericNameValue> map0 = configurationData0.getStaticConfigParams();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, GenericNameValue> hashMap0 = new HashMap<String, GenericNameValue>();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      hashMap0.put(", dynamicParams=", userInputParameter0);
      configurationData0.setStaticConfigParams(hashMap0);
      Map<String, GenericNameValue> map0 = configurationData0.getStaticConfigParams();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      DynamicConfigParameter dynamicConfigParameter0 = new DynamicConfigParameter();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      userInputParameter0.value = (Object) dynamicConfigParameter0;
      configurationData0.addUserIntpuParam(userInputParameter0);
      DynamicConfigParameter dynamicConfigParameter1 = (DynamicConfigParameter)configurationData0.getParameterValue((String) null);
      assertNull(dynamicConfigParameter1.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setDynamicParams((Map<String, DynamicConfigParameter>) null);
      Map<String, DynamicConfigParameter> map0 = configurationData0.getDynamicParams();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, DynamicConfigParameter> hashMap0 = new HashMap<String, DynamicConfigParameter>();
      DynamicConfigParameter dynamicConfigParameter0 = new DynamicConfigParameter();
      hashMap0.put("net.segoia.util.validation.ValidationRule", dynamicConfigParameter0);
      configurationData0.setDynamicParams(hashMap0);
      Map<String, DynamicConfigParameter> map0 = configurationData0.getDynamicParams();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      userInputParameter0.setValueAndOverrideType(userInputParameter0);
      configurationData0.addUserIntpuParam(userInputParameter0);
      configurationData0.getUserInputParams();
      // Undeclared exception!
      try { 
        configurationData0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, DynamicConfigParameter> hashMap0 = new HashMap<String, DynamicConfigParameter>();
      configurationData0.setDynamicParams(hashMap0);
      hashMap0.put("ConfigurationData [userInputParams=", (DynamicConfigParameter) null);
      // Undeclared exception!
      try { 
        configurationData0.getValuesMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.data.ConfigurationData", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setUserInputParams((Map<String, UserInputParameter>) null);
      // Undeclared exception!
      try { 
        configurationData0.getUserInputParam("td[x!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.data.ConfigurationData", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      // Undeclared exception!
      try { 
        configurationData0.addUserIntpuParam((UserInputParameter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.data.ConfigurationData", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      ConfigurationData configurationData1 = new ConfigurationData();
      assertTrue(configurationData1.equals((Object)configurationData0));
      
      UserInputParameter userInputParameter0 = new UserInputParameter();
      configurationData1.addUserIntpuParam(userInputParameter0);
      boolean boolean0 = configurationData1.equals(configurationData0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      ConfigurationData configurationData1 = new ConfigurationData();
      configurationData0.setUserInputParams((Map<String, UserInputParameter>) null);
      assertFalse(configurationData0.equals((Object)configurationData1));
      
      configurationData1.setUserInputParams((Map<String, UserInputParameter>) null);
      boolean boolean0 = configurationData1.equals(configurationData0);
      assertTrue(configurationData0.equals((Object)configurationData1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      ConfigurationData configurationData1 = new ConfigurationData();
      assertTrue(configurationData1.equals((Object)configurationData0));
      
      configurationData1.setUserInputParams((Map<String, UserInputParameter>) null);
      boolean boolean0 = configurationData1.equals(configurationData0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setTemplateId("u,KWK943I>L&RQ$");
      ConfigurationData configurationData1 = new ConfigurationData();
      assertFalse(configurationData1.equals((Object)configurationData0));
      
      configurationData1.setTemplateId("u,KWK943I>L&RQ$");
      boolean boolean0 = configurationData0.equals(configurationData1);
      assertTrue(configurationData1.equals((Object)configurationData0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      ConfigurationData configurationData1 = new ConfigurationData();
      configurationData1.setDynamicParams((Map<String, DynamicConfigParameter>) null);
      configurationData0.setDynamicParams((Map<String, DynamicConfigParameter>) null);
      assertTrue(configurationData0.equals((Object)configurationData1));
      
      configurationData1.setTemplateId("SD!/+-J+:@E!");
      boolean boolean0 = configurationData0.equals(configurationData1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      ConfigurationData configurationData1 = new ConfigurationData();
      assertTrue(configurationData1.equals((Object)configurationData0));
      
      configurationData1.setStaticConfigParams((Map<String, GenericNameValue>) null);
      boolean boolean0 = configurationData0.equals(configurationData1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setStaticConfigParams((Map<String, GenericNameValue>) null);
      ConfigurationData configurationData1 = new ConfigurationData();
      assertFalse(configurationData1.equals((Object)configurationData0));
      
      configurationData1.setStaticConfigParams((Map<String, GenericNameValue>) null);
      boolean boolean0 = configurationData0.equals(configurationData1);
      assertTrue(configurationData1.equals((Object)configurationData0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setStaticConfigParams((Map<String, GenericNameValue>) null);
      ConfigurationData configurationData1 = new ConfigurationData();
      boolean boolean0 = configurationData0.equals(configurationData1);
      assertFalse(boolean0);
      assertFalse(configurationData1.equals((Object)configurationData0));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, DynamicConfigParameter> hashMap0 = new HashMap<String, DynamicConfigParameter>();
      DynamicConfigParameter dynamicConfigParameter0 = new DynamicConfigParameter();
      hashMap0.put("", dynamicConfigParameter0);
      configurationData0.setDynamicParams(hashMap0);
      ConfigurationData configurationData1 = new ConfigurationData();
      boolean boolean0 = configurationData1.equals(configurationData0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      ConfigurationData configurationData1 = new ConfigurationData();
      configurationData0.setDynamicParams((Map<String, DynamicConfigParameter>) null);
      boolean boolean0 = configurationData0.equals(configurationData1);
      assertFalse(configurationData1.equals((Object)configurationData0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      boolean boolean0 = configurationData0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      boolean boolean0 = configurationData0.equals(configurationData0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      boolean boolean0 = configurationData0.equals("VALUE_FROM_LIST");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setUserInputParams((Map<String, UserInputParameter>) null);
      configurationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setTemplateId("UNKNOWN_LARGE_VALUE");
      configurationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setStaticConfigParams((Map<String, GenericNameValue>) null);
      configurationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, GenericNameValue> hashMap0 = new HashMap<String, GenericNameValue>();
      GenericNameValue genericNameValue0 = new GenericNameValue("net.segoia.util.parser.ParseResponse");
      hashMap0.put("net.segoia.util.parser.ParseResponse", genericNameValue0);
      configurationData0.setStaticConfigParams(hashMap0);
      Map<String, Object> map0 = configurationData0.getValuesMap();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, DynamicConfigParameter> hashMap0 = new HashMap<String, DynamicConfigParameter>();
      DynamicConfigParameter dynamicConfigParameter0 = new DynamicConfigParameter();
      hashMap0.put("UNKNOWN_LARGE_VALUE", dynamicConfigParameter0);
      configurationData0.setDynamicParams(hashMap0);
      Map<String, Object> map0 = configurationData0.getValuesMap();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      Map<String, Object> map0 = configurationData0.getValuesMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DynamicConfigParameter dynamicConfigParameter0 = new DynamicConfigParameter();
      HashMap<String, DynamicConfigParameter> hashMap0 = new HashMap<String, DynamicConfigParameter>();
      hashMap0.put("v~", dynamicConfigParameter0);
      ConfigurationData configurationData0 = new ConfigurationData();
      UserInputParameter userInputParameter0 = new UserInputParameter();
      configurationData0.addUserIntpuParam(userInputParameter0);
      configurationData0.setDynamicParams(hashMap0);
      Object object0 = configurationData0.getParameterValue("v~");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      HashMap<String, GenericNameValue> hashMap0 = new HashMap<String, GenericNameValue>();
      hashMap0.put("-8Gc", (GenericNameValue) null);
      configurationData0.setStaticConfigParams(hashMap0);
      // Undeclared exception!
      try { 
        configurationData0.getParameterValue("-8Gc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.data.ConfigurationData", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      Object object0 = configurationData0.getParameterValue("u,KWK943I>L&RQ$");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      String string0 = configurationData0.getTemplateId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      Map<String, GenericNameValue> map0 = configurationData0.getStaticConfigParams();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      String string0 = configurationData0.toString();
      assertEquals("ConfigurationData [userInputParams={}, staticConfigParams={}, dynamicParams={}]", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      UserInputParameter userInputParameter0 = configurationData0.getUserInputParam("'a74n");
      assertNull(userInputParameter0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      Map<String, UserInputParameter> map0 = configurationData0.getUserInputParams();
      configurationData0.setUserInputParams(map0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      Map<String, DynamicConfigParameter> map0 = configurationData0.getDynamicParams();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setTemplateId("u,KWK943I>L&RQ$");
      ConfigurationData configurationData1 = new ConfigurationData();
      boolean boolean0 = configurationData0.equals(configurationData1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ConfigurationData configurationData0 = new ConfigurationData();
      configurationData0.setDynamicParams((Map<String, DynamicConfigParameter>) null);
      configurationData0.hashCode();
  }
}
