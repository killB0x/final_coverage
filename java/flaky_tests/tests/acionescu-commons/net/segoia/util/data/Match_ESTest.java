/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:59:31 GMT 2022
 */

package net.segoia.util.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.data.Interval;
import net.segoia.util.data.Match;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Match_ESTest extends Match_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Interval interval0 = new Interval((-771L), 1307L, true);
      Match match0 = new Match((-771L), interval0);
      String string0 = match0.toString();
      assertEquals("-771:", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Interval interval0 = new Interval(301L, 301L);
      Match match0 = new Match(301L, interval0);
      long long0 = match0.getPosition();
      assertEquals(301L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Interval interval0 = new Interval((-771L), 1307L, true);
      Match match0 = new Match((-771L), interval0);
      long long0 = match0.getPosition();
      assertEquals((-771L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Interval interval0 = new Interval((-771L), 1307L, true);
      Match match0 = new Match((-771L), interval0);
      match0.getMatchInterval();
      assertEquals((-771L), match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Interval interval0 = new Interval(0L, 0L);
      Match match0 = new Match(0L, interval0);
      interval0.trimHead((-71));
      Interval interval1 = match0.getMatchInterval();
      assertEquals(0L, interval1.getEnd());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Interval interval0 = new Interval(0L, 0L, false);
      Match match0 = new Match(0L, interval0);
      Interval interval1 = match0.getMatchInterval();
      assertFalse(interval1.isEos());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Interval interval0 = new Interval(1693L, 1366L);
      Match match0 = new Match(1L, interval0);
      match0.getMatchInterval();
      assertEquals(1L, match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Interval interval0 = new Interval(301L, 301L);
      Match match0 = new Match(301L, interval0);
      Interval interval1 = new Interval((-928L), (-4172L), false);
      interval0.trimBy(interval1);
      match0.getMatchInterval();
      assertEquals(301L, match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Match match0 = new Match(0L, (Interval) null);
      Interval interval0 = match0.getMatchInterval();
      assertNull(interval0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Match match0 = new Match(0L, (Interval) null);
      long long0 = match0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Match match0 = new Match((-425L), (Interval) null);
      // Undeclared exception!
      try { 
        match0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.data.Match", e);
      }
  }
}
