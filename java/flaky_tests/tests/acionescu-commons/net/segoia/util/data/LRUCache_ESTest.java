/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:40:03 GMT 2022
 */

package net.segoia.util.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.AbstractMap;
import java.util.Map;
import net.segoia.util.data.LRUCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LRUCache_ESTest extends LRUCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = new LRUCache<Integer, Integer>(18, 18);
      AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>((Integer) null, (Integer) null);
      boolean boolean0 = lRUCache0.removeEldestEntry(abstractMap_SimpleImmutableEntry0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = null;
      try {
        lRUCache0 = new LRUCache<Integer, Integer>(1, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: 0.0
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = null;
      try {
        lRUCache0 = new LRUCache<Integer, Integer>((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -1
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = new LRUCache<Integer, Integer>(0);
      Integer integer0 = new Integer(0);
      lRUCache0.put(integer0, integer0);
      assertTrue(lRUCache0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = new LRUCache<Integer, Integer>(0);
      boolean boolean0 = lRUCache0.removeEldestEntry((Map.Entry<Integer, Integer>) null);
      assertFalse(boolean0);
  }
}
