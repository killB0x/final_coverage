/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:30:12 GMT 2022
 */

package net.segoia.util.data.translation;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import net.segoia.util.data.translation.DataTranslation;
import net.segoia.util.data.translation.EntityMapping;
import net.segoia.util.data.translation.UniqueIdGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataTranslation_ESTest extends DataTranslation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      dataTranslation0.setSourceType("#");
      String string0 = dataTranslation0.getSourceType();
      assertEquals("#", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      dataTranslation0.setDestinationType("");
      String string0 = dataTranslation0.getDestinationType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      HashMap<String, EntityMapping> hashMap0 = new HashMap<String, EntityMapping>();
      EntityMapping entityMapping0 = new EntityMapping();
      hashMap0.put("St0.soPjZ=v%!1Z)TF ", entityMapping0);
      dataTranslation0.setDataMappings(hashMap0);
      Map<String, EntityMapping> map0 = dataTranslation0.getDataMappings();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      String string0 = dataTranslation0.getDestinationType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      Map<String, EntityMapping> map0 = dataTranslation0.getDataMappings();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      dataTranslation0.setDestinationType(")i");
      String string0 = dataTranslation0.getDestinationType();
      assertEquals(")i", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      String string0 = dataTranslation0.getSourceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      dataTranslation0.setIdGenerator((UniqueIdGenerator<Object>) null);
      assertNull(dataTranslation0.getSourceType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      UniqueIdGenerator<Object> uniqueIdGenerator0 = dataTranslation0.getIdGenerator();
      assertNull(uniqueIdGenerator0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      HashMap<String, EntityMapping> hashMap0 = new HashMap<String, EntityMapping>();
      dataTranslation0.setDataMappings(hashMap0);
      Map<String, EntityMapping> map0 = dataTranslation0.getDataMappings();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataTranslation dataTranslation0 = new DataTranslation();
      dataTranslation0.setSourceType("");
      String string0 = dataTranslation0.getSourceType();
      assertEquals("", string0);
  }
}
