/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:27:29 GMT 2022
 */

package net.segoia.util.data.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.util.List;
import net.segoia.util.data.annotations.AnnotationsUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AnnotationsUtil_ESTest extends AnnotationsUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationsUtil.getAllFieldAnnotationsOfType((Class<?>) null, (Class<Annotation>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Class<Integer> class1 = Integer.class;
      List<Annotation> list0 = AnnotationsUtil.getAllFieldAnnotationsOfType((Class<?>) class1, class0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AnnotationsUtil annotationsUtil0 = new AnnotationsUtil();
  }
}
