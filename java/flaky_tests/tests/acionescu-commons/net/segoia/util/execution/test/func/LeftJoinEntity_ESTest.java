/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:14:59 GMT 2022
 */

package net.segoia.util.execution.test.func;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.execution.ExecutionEntity;
import net.segoia.util.execution.test.ExecutionContext;
import net.segoia.util.execution.test.func.JoinGroup;
import net.segoia.util.execution.test.func.LeftJoinEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LeftJoinEntity_ESTest extends LeftJoinEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LeftJoinEntity<LeftJoinEntity<Integer, Integer>, LeftJoinEntity<Integer, Integer>> leftJoinEntity0 = new LeftJoinEntity<LeftJoinEntity<Integer, Integer>, LeftJoinEntity<Integer, Integer>>();
      LeftJoinEntity<Integer, Integer> leftJoinEntity1 = new LeftJoinEntity<Integer, Integer>();
      ExecutionEntity<LeftJoinEntity<Integer, Integer>, LeftJoinEntity<Integer, Integer>> executionEntity0 = (ExecutionEntity<LeftJoinEntity<Integer, Integer>, LeftJoinEntity<Integer, Integer>>) mock(ExecutionEntity.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(executionEntity0).execute(any(net.segoia.util.execution.test.func.LeftJoinEntity.class));
      ExecutionContext<LeftJoinEntity<Integer, Integer>, ExecutionEntity<LeftJoinEntity<Integer, Integer>, LeftJoinEntity<Integer, Integer>>> executionContext0 = new ExecutionContext<LeftJoinEntity<Integer, Integer>, ExecutionEntity<LeftJoinEntity<Integer, Integer>, LeftJoinEntity<Integer, Integer>>>(leftJoinEntity1, executionEntity0);
      JoinGroup<LeftJoinEntity<Integer, Integer>, LeftJoinEntity<Integer, Integer>> joinGroup0 = leftJoinEntity0.execute(executionContext0);
      assertNotNull(joinGroup0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LeftJoinEntity<ExecutionContext<Integer, Integer>, LeftJoinEntity<Integer, Integer>> leftJoinEntity0 = new LeftJoinEntity<ExecutionContext<Integer, Integer>, LeftJoinEntity<Integer, Integer>>();
      ExecutionContext<ExecutionContext<Integer, Integer>, ExecutionEntity<ExecutionContext<Integer, Integer>, LeftJoinEntity<Integer, Integer>>> executionContext0 = new ExecutionContext<ExecutionContext<Integer, Integer>, ExecutionEntity<ExecutionContext<Integer, Integer>, LeftJoinEntity<Integer, Integer>>>();
      try { 
        leftJoinEntity0.execute(executionContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.execution.test.func.LeftJoinEntity", e);
      }
  }
}
