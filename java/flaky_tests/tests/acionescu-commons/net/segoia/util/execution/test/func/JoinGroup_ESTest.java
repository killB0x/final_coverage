/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:36:17 GMT 2022
 */

package net.segoia.util.execution.test.func;

import org.junit.Test;
import static org.junit.Assert.*;
import net.segoia.util.execution.test.func.JoinGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JoinGroup_ESTest extends JoinGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(52);
      JoinGroup<Integer, Integer> joinGroup0 = new JoinGroup<Integer, Integer>(integer0, (Integer) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(0);
      JoinGroup<Integer, Integer> joinGroup0 = new JoinGroup<Integer, Integer>(integer0, integer0);
      joinGroup0.setLeft((Integer) null);
      Integer integer1 = joinGroup0.getLeft();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(0);
      JoinGroup<Integer, Integer> joinGroup0 = new JoinGroup<Integer, Integer>(integer0, integer0);
      joinGroup0.setRight(integer0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JoinGroup<Integer, Integer> joinGroup0 = new JoinGroup<Integer, Integer>((Integer) null, (Integer) null);
      Integer integer0 = joinGroup0.getRight();
      assertNull(integer0);
  }
}
