/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:18:51 GMT 2022
 */

package net.segoia.util.execution.test.func;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.execution.test.func.JoinGroup;
import net.segoia.util.execution.test.func.JoinGroupRightFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JoinGroupRightFilter_ESTest extends JoinGroupRightFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JoinGroupRightFilter<Integer, Integer> joinGroupRightFilter0 = new JoinGroupRightFilter<Integer, Integer>();
      JoinGroupRightFilter<JoinGroup<Integer, Integer>, JoinGroup<Integer, Integer>> joinGroupRightFilter1 = new JoinGroupRightFilter<JoinGroup<Integer, Integer>, JoinGroup<Integer, Integer>>();
      JoinGroup<Integer, Integer> joinGroup0 = (JoinGroup<Integer, Integer>) mock(JoinGroup.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(joinGroup0).toString();
      doReturn((Object) null).when(joinGroup0).getRight();
      JoinGroup<JoinGroup<Integer, Integer>, JoinGroup<Integer, Integer>> joinGroup1 = new JoinGroup<JoinGroup<Integer, Integer>, JoinGroup<Integer, Integer>>(joinGroup0, joinGroup0);
      JoinGroup<Integer, Integer> joinGroup2 = joinGroupRightFilter1.execute(joinGroup1);
      Integer integer0 = joinGroupRightFilter0.execute(joinGroup2);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JoinGroupRightFilter<Integer, Integer> joinGroupRightFilter0 = new JoinGroupRightFilter<Integer, Integer>();
      try { 
        joinGroupRightFilter0.execute((JoinGroup<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.execution.test.func.JoinGroupRightFilter", e);
      }
  }
}
