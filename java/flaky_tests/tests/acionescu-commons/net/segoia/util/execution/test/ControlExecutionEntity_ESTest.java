/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:02:04 GMT 2022
 */

package net.segoia.util.execution.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.execution.ExecutionEntity;
import net.segoia.util.execution.test.ControlExecutionEntity;
import net.segoia.util.execution.test.ControlExecutionEntityConfiguration;
import net.segoia.util.execution.test.ExecutionContext;
import net.segoia.util.execution.test.ExecutionPipeLineConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ControlExecutionEntity_ESTest extends ControlExecutionEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionContext0 = new ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>();
      ControlExecutionEntityConfiguration controlExecutionEntityConfiguration0 = new ControlExecutionEntityConfiguration();
      ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionEntity0 = (ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>) mock(ExecutionEntity.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(executionEntity0).execute(any(net.segoia.util.execution.test.ControlExecutionEntityConfiguration.class));
      controlExecutionEntityConfiguration0.setMainExecutionEntity(executionEntity0);
      executionContext0.setConfig(controlExecutionEntityConfiguration0);
      ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionEntity1 = (ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>) mock(ExecutionEntity.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(executionEntity1).execute(any(net.segoia.util.execution.test.ControlExecutionEntityConfiguration.class));
      controlExecutionEntityConfiguration0.setControlExecutionEntity(executionEntity1);
      executionContext0.setInput(controlExecutionEntityConfiguration0);
      ControlExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>> controlExecutionEntity0 = new ControlExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>>();
      ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionContext1 = controlExecutionEntity0.execute(executionContext0);
      assertNull(executionContext1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionContext0 = new ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>();
      ControlExecutionEntityConfiguration controlExecutionEntityConfiguration0 = new ControlExecutionEntityConfiguration();
      ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionEntity0 = (ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>) mock(ExecutionEntity.class, new ViolatedAssumptionAnswer());
      doReturn(controlExecutionEntityConfiguration0).when(executionEntity0).execute(any(net.segoia.util.execution.test.ControlExecutionEntityConfiguration.class));
      controlExecutionEntityConfiguration0.setMainExecutionEntity(executionEntity0);
      executionContext0.setConfig(controlExecutionEntityConfiguration0);
      executionContext0.setInput(controlExecutionEntityConfiguration0);
      ControlExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>> controlExecutionEntity0 = new ControlExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>>();
      try { 
        controlExecutionEntity0.execute(executionContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.execution.test.ControlExecutionEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionContext0 = new ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>();
      ControlExecutionEntityConfiguration controlExecutionEntityConfiguration0 = new ControlExecutionEntityConfiguration();
      ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration> executionEntity0 = (ExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>) mock(ExecutionEntity.class, new ViolatedAssumptionAnswer());
      doReturn(controlExecutionEntityConfiguration0).when(executionEntity0).execute(any(net.segoia.util.execution.test.ControlExecutionEntityConfiguration.class));
      controlExecutionEntityConfiguration0.setMainExecutionEntity(executionEntity0);
      ExecutionPipeLineConfiguration executionPipeLineConfiguration0 = new ExecutionPipeLineConfiguration();
      controlExecutionEntityConfiguration0.setControlEntityConfiguration(executionPipeLineConfiguration0);
      executionContext0.setConfig(controlExecutionEntityConfiguration0);
      ControlExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>> controlExecutionEntity0 = new ControlExecutionEntity<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>>();
      controlExecutionEntityConfiguration0.setControlExecutionEntity(controlExecutionEntity0);
      ControlExecutionEntity<ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>> controlExecutionEntity1 = new ControlExecutionEntity<ControlExecutionEntityConfiguration, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>, ExecutionContext<ControlExecutionEntityConfiguration, ControlExecutionEntityConfiguration>>();
      try { 
        controlExecutionEntity1.execute(executionContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.segoia.util.execution.test.ExecutionPipeLineConfiguration cannot be cast to class net.segoia.util.execution.test.ControlExecutionEntityConfiguration (net.segoia.util.execution.test.ExecutionPipeLineConfiguration and net.segoia.util.execution.test.ControlExecutionEntityConfiguration are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6a7ecd41)
         //
         verifyException("net.segoia.util.execution.test.ControlExecutionEntity", e);
      }
  }
}
