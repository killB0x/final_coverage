/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:54:28 GMT 2022
 */

package net.segoia.util.execution.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import net.segoia.commons.exceptions.ContextAwareException;
import net.segoia.util.execution.ExecutionEntity;
import net.segoia.util.execution.test.ContextExecutionEntity;
import net.segoia.util.execution.test.ControlExecutionEntity;
import net.segoia.util.execution.test.EntityExceptionContext;
import net.segoia.util.execution.test.ExecutionContext;
import net.segoia.util.execution.test.ExecutionEntityWrapperConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExecutionEntityWrapperConfiguration_ESTest extends ExecutionEntityWrapperConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExecutionEntityWrapperConfiguration<EntityExceptionContext, ExecutionContext<EntityExceptionContext, EntityExceptionContext>, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>> executionEntityWrapperConfiguration0 = new ExecutionEntityWrapperConfiguration<EntityExceptionContext, ExecutionContext<EntityExceptionContext, EntityExceptionContext>, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>>();
      ContextExecutionEntity<ExecutionContext<EntityExceptionContext, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>> contextExecutionEntity0 = executionEntityWrapperConfiguration0.getWrappedEntity();
      ExecutionEntityWrapperConfiguration<ExecutionContext<EntityExceptionContext, EntityExceptionContext>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>, EntityExceptionContext> executionEntityWrapperConfiguration1 = new ExecutionEntityWrapperConfiguration<ExecutionContext<EntityExceptionContext, EntityExceptionContext>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>, EntityExceptionContext>();
      ContextAwareException contextAwareException0 = new ContextAwareException("%Y");
      Object object0 = new Object();
      EntityExceptionContext entityExceptionContext0 = new EntityExceptionContext(contextAwareException0, object0, contextExecutionEntity0, object0);
      executionEntityWrapperConfiguration1.setWrappedEntityConfiguration(entityExceptionContext0);
      EntityExceptionContext entityExceptionContext1 = executionEntityWrapperConfiguration1.getWrappedEntityConfiguration();
      assertSame(entityExceptionContext1, entityExceptionContext0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExecutionEntityWrapperConfiguration<EntityExceptionContext, ExecutionContext<EntityExceptionContext, EntityExceptionContext>, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>> executionEntityWrapperConfiguration0 = new ExecutionEntityWrapperConfiguration<EntityExceptionContext, ExecutionContext<EntityExceptionContext, EntityExceptionContext>, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>>();
      ContextExecutionEntity<ExecutionContext<EntityExceptionContext, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>> contextExecutionEntity0 = (ContextExecutionEntity<ExecutionContext<EntityExceptionContext, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>>) mock(ContextExecutionEntity.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(contextExecutionEntity0).toString();
      executionEntityWrapperConfiguration0.setWrappedEntity(contextExecutionEntity0);
      ContextExecutionEntity<ExecutionContext<EntityExceptionContext, ControlExecutionEntity<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>> contextExecutionEntity1 = executionEntityWrapperConfiguration0.getWrappedEntity();
      assertSame(contextExecutionEntity1, contextExecutionEntity0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExecutionEntityWrapperConfiguration<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext> executionEntityWrapperConfiguration0 = new ExecutionEntityWrapperConfiguration<EntityExceptionContext, EntityExceptionContext, EntityExceptionContext>();
      ExecutionEntity<EntityExceptionContext, EntityExceptionContext> executionEntity0 = executionEntityWrapperConfiguration0.getExceptionHandler();
      assertNull(executionEntity0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExecutionEntityWrapperConfiguration<ExecutionEntity<EntityExceptionContext, EntityExceptionContext>, EntityExceptionContext, ExecutionContext<EntityExceptionContext, EntityExceptionContext>> executionEntityWrapperConfiguration0 = new ExecutionEntityWrapperConfiguration<ExecutionEntity<EntityExceptionContext, EntityExceptionContext>, EntityExceptionContext, ExecutionContext<EntityExceptionContext, EntityExceptionContext>>();
      ExecutionContext<EntityExceptionContext, EntityExceptionContext> executionContext0 = executionEntityWrapperConfiguration0.getWrappedEntityConfiguration();
      assertNull(executionContext0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExecutionEntityWrapperConfiguration<EntityExceptionContext, ExecutionEntity<EntityExceptionContext, EntityExceptionContext>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>> executionEntityWrapperConfiguration0 = new ExecutionEntityWrapperConfiguration<EntityExceptionContext, ExecutionEntity<EntityExceptionContext, EntityExceptionContext>, ExecutionContext<EntityExceptionContext, EntityExceptionContext>>();
      net.segoia.util.execution.ExecutionEntityWrapper<ExecutionEntity<EntityExceptionContext, ExecutionEntity<EntityExceptionContext, EntityExceptionContext>>, EntityExceptionContext, ExecutionEntity<EntityExceptionContext, EntityExceptionContext>> executionEntityWrapper0 = new net.segoia.util.execution.ExecutionEntityWrapper<ExecutionEntity<EntityExceptionContext, ExecutionEntity<EntityExceptionContext, EntityExceptionContext>>, EntityExceptionContext, ExecutionEntity<EntityExceptionContext, EntityExceptionContext>>();
      executionEntityWrapperConfiguration0.setExceptionHandler(executionEntityWrapper0);
      ExecutionEntity<EntityExceptionContext, ExecutionEntity<EntityExceptionContext, EntityExceptionContext>> executionEntity0 = executionEntityWrapperConfiguration0.getExceptionHandler();
      assertNotNull(executionEntity0);
  }
}
