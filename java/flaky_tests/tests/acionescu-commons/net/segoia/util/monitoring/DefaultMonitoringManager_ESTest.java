/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:43:04 GMT 2022
 */

package net.segoia.util.monitoring;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.logging.LogManager;
import net.segoia.util.logging.Logger;
import net.segoia.util.logging.MasterLogManager;
import net.segoia.util.monitoring.DefaultMonitoringManager;
import net.segoia.util.monitoring.LogEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultMonitoringManager_ESTest extends DefaultMonitoringManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn(logger0).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.startMonitoring("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn(logger0).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      LogEvent logEvent0 = new LogEvent();
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      defaultMonitoringManager0.addLogEvent(logEvent0);
      assertEquals(0, logEvent0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.stopMonitoring("Monitor '", (Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.monitoring.DefaultMonitoringManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      Long long0 = new Long(0L);
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.stopMonitoring("", long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name of the monitor cannot be null
         //
         verifyException("net.segoia.util.statistics.Monitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn(logger0).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.stopMonitoring((String) null, 1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.stopMonitoring("P@c Z", 1101L);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.statistics.ParallelCounter
         //
         verifyException("net.segoia.util.statistics.ParallelCounterFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.startMonitoring("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Name of the counter cannot be null
         //
         verifyException("net.segoia.util.statistics.AggregatedMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.startMonitoring((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.startMonitoring("net.segoia.util.monitoring.DefaultMonitoringManager");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.statistics.ParallelCounter
         //
         verifyException("net.segoia.util.statistics.ParallelCounterFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MasterLogManager.setDefaultLogManager((LogManager) null);
      DefaultMonitoringManager defaultMonitoringManager0 = null;
      try {
        defaultMonitoringManager0 = new DefaultMonitoringManager();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.logging.MasterLogManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultMonitoringManager defaultMonitoringManager0 = null;
      try {
        defaultMonitoringManager0 = new DefaultMonitoringManager();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.stopMonitoring("", 1L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name of the monitor cannot be null
         //
         verifyException("net.segoia.util.statistics.Monitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.startMonitoring("ogdw#S%_<|eA", "ogdw#S%_<|eA");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.statistics.MonitorConfigurationBuilder
         //
         verifyException("net.segoia.util.statistics.MonitorManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      defaultMonitoringManager0.start();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      LogEvent logEvent0 = new LogEvent();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.addLogEvent(logEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.monitoring.DefaultMonitoringManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.startMonitoring("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name of the monitor cannot be null
         //
         verifyException("net.segoia.util.statistics.Monitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LogManager logManager0 = mock(LogManager.class, new ViolatedAssumptionAnswer());
      doReturn((Logger) null).when(logManager0).getLogger(anyString());
      MasterLogManager.setDefaultLogManager(logManager0);
      DefaultMonitoringManager defaultMonitoringManager0 = new DefaultMonitoringManager();
      Long long0 = new Long((-202L));
      // Undeclared exception!
      try { 
        defaultMonitoringManager0.stopMonitoring("u?", long0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.statistics.ParallelCounter
         //
         verifyException("net.segoia.util.statistics.ParallelCounterFactory", e);
      }
  }
}
