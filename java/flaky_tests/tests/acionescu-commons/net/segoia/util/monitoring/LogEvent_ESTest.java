/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:12:24 GMT 2022
 */

package net.segoia.util.monitoring;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashMap;
import net.segoia.util.data.NameValue;
import net.segoia.util.monitoring.LogEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogEvent_ESTest extends LogEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LogEvent logEvent0 = new LogEvent();
      logEvent0.setLoggingKey("");
      String string0 = logEvent0.getLoggingKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LogEvent logEvent0 = new LogEvent();
      logEvent0.setParameters((LinkedHashMap<String, NameValue<Object>>) null);
      // Undeclared exception!
      try { 
        logEvent0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LogEvent logEvent0 = new LogEvent();
      logEvent0.setLoggingKey("b");
      String string0 = logEvent0.getLoggingKey();
      assertEquals("b", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LogEvent logEvent0 = new LogEvent();
      String string0 = logEvent0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LogEvent logEvent0 = new LogEvent();
      String string0 = logEvent0.getLoggingKey();
      assertNull(string0);
  }
}
