/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 06:58:46 GMT 2022
 */

package net.segoia.util.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.parser.StringTraverser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringTraverser_ESTest extends StringTraverser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      boolean boolean0 = stringTraverser0.exhausted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.addSkipPos((-2451));
      // Undeclared exception!
      try { 
        stringTraverser0.readFromCheckPoint((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.addSkipPos((-2451));
      // Undeclared exception!
      try { 
        stringTraverser0.readFromCheckPoint((-2451));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("zE");
      stringTraverser0.setCheckPoint(565);
      stringTraverser0.addSkipPos(0);
      // Undeclared exception!
      try { 
        stringTraverser0.readFromCheckPoint((-860));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.moveCheckPoint(1);
      // Undeclared exception!
      try { 
        stringTraverser0.readFromCheckPoint((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      String string0 = stringTraverser0.readFromCheckPoint(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.move(19);
      // Undeclared exception!
      try { 
        stringTraverser0.read(371);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 19+371 >= 0
         //
         verifyException("net.segoia.util.parser.StringTraverser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("GNllGys_@BF:'qM");
      stringTraverser0.move(2986);
      // Undeclared exception!
      try { 
        stringTraverser0.peek((-5309));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      int int0 = stringTraverser0.remained();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.move(327);
      int int0 = stringTraverser0.remained();
      assertEquals(327, stringTraverser0.getOffset());
      assertEquals((-327), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser(" 70?`(mh$.lKF");
      stringTraverser0.read(1);
      assertEquals(1, stringTraverser0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("m ");
      stringTraverser0.read(0);
      assertEquals(2, stringTraverser0.remained());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("m ");
      assertEquals(0, stringTraverser0.getOffset());
      
      String string0 = stringTraverser0.peek(2);
      assertEquals("m ", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("net.segoia.util.parser.StringTraverser");
      String string0 = stringTraverser0.peek(0);
      assertEquals("", string0);
      assertEquals(38, stringTraverser0.remained());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.move(19);
      int int0 = stringTraverser0.getOffset();
      assertEquals((-19), stringTraverser0.remained());
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.move((-1066));
      int int0 = stringTraverser0.getOffset();
      assertEquals((-1066), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.moveCheckPoint(1);
      int int0 = stringTraverser0.getCheckPoint();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.setCheckPoint((-3448));
      int int0 = stringTraverser0.getCheckPoint();
      assertEquals((-3448), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      // Undeclared exception!
      try { 
        stringTraverser0.read((-335));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringTraverser stringTraverser0 = null;
      try {
        stringTraverser0 = new StringTraverser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.StringTraverser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("GNllGys_@BF:'qM");
      // Undeclared exception!
      try { 
        stringTraverser0.peek(831);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0+831 >= 15
         //
         verifyException("net.segoia.util.parser.StringTraverser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("GNllGys_@BF:'qM");
      stringTraverser0.move(2986);
      boolean boolean0 = stringTraverser0.exhausted();
      assertEquals(2986, stringTraverser0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("GNllGys_@BF:'qM");
      boolean boolean0 = stringTraverser0.exhausted();
      assertFalse(boolean0);
      assertEquals(15, stringTraverser0.remained());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("GNllGys_@BF:'qM");
      stringTraverser0.addSkipPos(2986);
      String string0 = stringTraverser0.readFromCheckPoint(0);
      assertEquals("", string0);
      assertEquals(15, stringTraverser0.remained());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      // Undeclared exception!
      try { 
        stringTraverser0.readFromCheckPoint(640);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0+640 >= 0
         //
         verifyException("net.segoia.util.parser.StringTraverser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("Kyw$`2'Ki-c94b;");
      String string0 = stringTraverser0.readFromCheckPoint(1);
      assertEquals("K", string0);
      assertEquals(15, stringTraverser0.remained());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      int int0 = stringTraverser0.getOffset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("GNllGys_@BF:'qM");
      int int0 = stringTraverser0.remained();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      stringTraverser0.moveCheckPoint((-11));
      // Undeclared exception!
      try { 
        stringTraverser0.readFromCheckPoint(640);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -11+640 >= 0
         //
         verifyException("net.segoia.util.parser.StringTraverser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("");
      int int0 = stringTraverser0.getCheckPoint();
      assertEquals(0, stringTraverser0.remained());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringTraverser stringTraverser0 = new StringTraverser("Kyw$`2'Ki-c94b;");
      stringTraverser0.addSkipPos(0);
      assertEquals(0, stringTraverser0.getCheckPoint());
      
      String string0 = stringTraverser0.readFromCheckPoint(1);
      assertEquals("", string0);
      assertEquals(15, stringTraverser0.remained());
  }
}
