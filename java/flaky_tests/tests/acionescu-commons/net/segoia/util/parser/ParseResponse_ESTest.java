/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:39:12 GMT 2022
 */

package net.segoia.util.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.List;
import net.segoia.util.parser.ParseResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseResponse_ESTest extends ParseResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      ParseResponse parseResponse0 = new ParseResponse(arrayDeque0);
      Deque<Object> deque0 = parseResponse0.getObjects();
      assertEquals(0, deque0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      ParseResponse parseResponse0 = new ParseResponse(arrayDeque0);
      Object object0 = new Object();
      arrayDeque0.add(object0);
      Deque<Object> deque0 = parseResponse0.getObjects();
      assertEquals(1, deque0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParseResponse parseResponse0 = new ParseResponse((Deque<Object>) null);
      // Undeclared exception!
      try { 
        parseResponse0.getObjectsList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.ParseResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      Object object0 = new Object();
      arrayDeque0.add(object0);
      ParseResponse parseResponse0 = new ParseResponse(arrayDeque0);
      List<Object> list0 = parseResponse0.getObjectsList();
      assertTrue(list0.contains(object0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParseResponse parseResponse0 = new ParseResponse((Deque<Object>) null);
      Deque<Object> deque0 = parseResponse0.getObjects();
      assertNull(deque0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      ParseResponse parseResponse0 = new ParseResponse(arrayDeque0);
      List<Object> list0 = parseResponse0.getObjectsList();
      assertEquals(0, list0.size());
  }
}
