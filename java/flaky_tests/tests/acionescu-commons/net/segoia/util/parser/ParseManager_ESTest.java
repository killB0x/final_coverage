/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:16:25 GMT 2022
 */

package net.segoia.util.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.parser.ParseManager;
import net.segoia.util.parser.ParseResponse;
import net.segoia.util.parser.ParserConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseManager_ESTest extends ParseManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParseManager parseManager0 = new ParseManager();
      ParserConfig parserConfig0 = new ParserConfig("@HSxmI7<}J[sW%fE", "@HSxmI7<}J[sW%fE", "@HSxmI7<}J[sW%fE");
      try { 
        parseManager0.parse("@HSxmI7<}J[sW%fE", parserConfig0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to parse '@HSxmI7<}J[sW%fE'
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParseManager parseManager0 = new ParseManager();
      // Undeclared exception!
      try { 
        parseManager0.parse("]", (ParserConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.ParseManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParseManager parseManager0 = new ParseManager();
      ParserConfig parserConfig0 = new ParserConfig("+/L*}ao", "+/L*}ao", ">=z{se_-QhX}yY\"Ch]Z");
      parserConfig0.setSymbols("[&lt;a ,GROUP_START,start_a,true,end_a,end_a2,script_start,apos_start,quot_start,comma,equals],[&gt;,GROUP_END,end_a],[/&gt;,GROUP_END,end_a2],[script&gt;,GROUP_START,script_start,false,script_end],[&lt;/script,GROUP_END,script_end],[''',GROUP_START,apos_start,false,apos_end],[''',GROUP_END,apos_end],[\",GROUP_START,quot_start,false,quot_end],[\",GROUP_END,quot_end],[ ,SEPARATE,comma],[=,ASSOCIATE,equals]");
      // Undeclared exception!
      try { 
        parseManager0.parse("+/L*}ao", parserConfig0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.strings.StringUtil
         //
         verifyException("net.segoia.util.parser.Symbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParseManager parseManager0 = new ParseManager();
      ParserConfig parserConfig0 = new ParserConfig("<3~o,V<+:e", "<3~o,V<+:e", "<3~o,V<+:e");
      // Undeclared exception!
      try { 
        parseManager0.parse("<3~o,V<+:e", parserConfig0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.util.List (java.lang.String and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("net.segoia.util.parser.Symbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParseManager parseManager0 = new ParseManager();
      ParserConfig parserConfig0 = new ParserConfig("", (String) null, "");
      parserConfig0.setInputEscapeChar("0H&<B}PRre:J,D.");
      ParseResponse parseResponse0 = parseManager0.parse("", parserConfig0);
      assertNotNull(parseResponse0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParseManager parseManager0 = new ParseManager();
      ParserConfig parserConfig0 = new ParserConfig("", "", "");
      ParseResponse parseResponse0 = parseManager0.parse("", parserConfig0);
      assertNotNull(parseResponse0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ParseManager parseManager0 = new ParseManager();
      ParserConfig parserConfig0 = new ParserConfig((String) null, (String) null, (String) null);
      ParseResponse parseResponse0 = parseManager0.parse((String) null, parserConfig0);
      ParseResponse parseResponse1 = parseManager0.parse((String) null, parserConfig0);
      assertNotSame(parseResponse1, parseResponse0);
  }
}
