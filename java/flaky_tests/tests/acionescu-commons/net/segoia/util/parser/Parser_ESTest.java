/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 05:38:43 GMT 2022
 */

package net.segoia.util.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import net.segoia.util.data.ListMap;
import net.segoia.util.parser.ParseContextConfig;
import net.segoia.util.parser.ParseResponse;
import net.segoia.util.parser.Parser;
import net.segoia.util.parser.ParserHandlerFactory;
import net.segoia.util.parser.Symbol;
import net.segoia.util.parser.SymbolType;
import net.segoia.util.parser.event.ConfigurableParseEventHandler;
import net.segoia.util.parser.event.DefaultParseEventHandler;
import net.segoia.util.parser.event.ParseEventHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.DOC_START;
      parser0.addSymbol("bE|q3SIATQm]@[", symbolType0);
      parser0.addSymbol("bE|q3SIATQm]@[", symbolType0);
      ParseResponse parseResponse0 = parser0.parse("bE|q3SIATQm]@[");
      assertNotNull(parseResponse0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Parser parser0 = new Parser();
      ParseResponse parseResponse0 = parser0.parse(parser0.DEFAULT_ESCAPE_CHARACTER);
      assertNotNull(parseResponse0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.ASSOCIATE;
      parser0.addSymbol("Y", symbolType0, 904);
      ConfigurableParseEventHandler configurableParseEventHandler0 = new ConfigurableParseEventHandler();
      try { 
        parser0.parse("mNLYw:-z4?)Gh+V", (ParseEventHandler) configurableParseEventHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to parse 'mNLYw:-z4?)Gh+V'
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.addSymbol("List[Any]");
      assertFalse(parser0.isUseEscapeCharacterOn());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setUseEscapeCharacterOn(true);
      boolean boolean0 = parser0.isUseEscapeCharacterOn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.SEPARATE;
      parser0.addSymbol("", symbolType0);
      ListMap<String, Symbol> listMap0 = parser0.getSymbols();
      assertEquals(1, listMap0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setParseContextConfig((ParseContextConfig) null);
      ParseContextConfig parseContextConfig0 = parser0.getParseContextConfig();
      assertNull(parseContextConfig0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setUseEscapeCharacterOn(true);
      parser0.getParseContextConfig();
      assertTrue(parser0.isUseEscapeCharacterOn());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.SEPARATE;
      Symbol symbol0 = new Symbol("_", symbolType0);
      symbol0.setOverrideSuperContextConfig(true);
      parser0.setParseContextConfig(symbol0);
      ParseContextConfig parseContextConfig0 = parser0.getParseContextConfig();
      assertEquals("\\", parseContextConfig0.getEscapeCharacter());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.SEPARATE;
      Symbol symbol0 = new Symbol("_", symbolType0);
      symbol0.setDocStartEventOn(true);
      parser0.setParseContextConfig(symbol0);
      ParseContextConfig parseContextConfig0 = parser0.getParseContextConfig();
      assertEquals("\\", parseContextConfig0.getEscapeCharacter());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parser parser0 = new Parser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("`W");
      parser0.setListOfStringSymbols(linkedList0);
      List<String> list0 = parser0.getListOfStringSymbols();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setHandlerFactory((ParserHandlerFactory) null);
      ParserHandlerFactory parserHandlerFactory0 = parser0.getHandlerFactory();
      assertNull(parserHandlerFactory0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setParseContextConfig((ParseContextConfig) null);
      // Undeclared exception!
      try { 
        parser0.setUseEscapeCharacterOn(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setParseContextConfig((ParseContextConfig) null);
      DefaultParseEventHandler defaultParseEventHandler0 = new DefaultParseEventHandler();
      // Undeclared exception!
      try { 
        parser0.parse("E", (ParseEventHandler) defaultParseEventHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setParseContextConfig((ParseContextConfig) null);
      // Undeclared exception!
      try { 
        parser0.parse("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setParseContextConfig((ParseContextConfig) null);
      // Undeclared exception!
      try { 
        parser0.getSymbols();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.addSymbols("Context[]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Symbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.addSymbols(")L#v,j@");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.util.List (java.lang.String and java.util.List are in module java.base of loader 'bootstrap')
         //
         verifyException("net.segoia.util.parser.Symbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.addSymbol((Symbol) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.GROUP_START;
      // Undeclared exception!
      try { 
        parser0.addSymbol((String) null, symbolType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.SymbolSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.SEPARATE;
      // Undeclared exception!
      try { 
        parser0.addSymbol((String) null, symbolType0, (-1110));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.SymbolSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Parser parser0 = new Parser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(",");
      // Undeclared exception!
      try { 
        parser0.setListOfStringSymbols(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class net.segoia.util.parser.ParseHandler$NullObject cannot be cast to class java.util.List (net.segoia.util.parser.ParseHandler$NullObject is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @79aec4c2; java.util.List is in module java.base of loader 'bootstrap')
         //
         verifyException("net.segoia.util.parser.Symbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.setListOfStringSymbols((List<String>) null);
      List<String> list0 = parser0.getListOfStringSymbols();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.DOC_START;
      Symbol symbol0 = new Symbol(parser0.DEFAULT_ESCAPE_CHARACTER, symbolType0, 2);
      parser0.addSymbol(symbol0);
      assertEquals(2, symbol0.getPriority());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.GROUP_START;
      Symbol symbol0 = new Symbol("", symbolType0);
      parser0.addSymbol(symbol0);
      assertEquals((-1), symbol0.getPriority());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Parser parser0 = new Parser();
      parser0.addSymbols("");
      assertFalse(parser0.isUseEscapeCharacterOn());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Parser parser0 = new Parser();
      SymbolType symbolType0 = SymbolType.DOC_START;
      parser0.addSymbol("r,%~&YA.X>U'=?", symbolType0);
      ParseContextConfig parseContextConfig0 = parser0.getParseContextConfig();
      parseContextConfig0.setDocStartEventOn(true);
      ParseResponse parseResponse0 = parser0.parse("?o6vR<|6Ts^v0");
      assertNotNull(parseResponse0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.addSymbol((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.SymbolSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Parser parser0 = new Parser();
      ListMap<String, Symbol> listMap0 = parser0.getSymbols();
      assertEquals(0, listMap0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Parser parser0 = new Parser();
      List<String> list0 = parser0.getListOfStringSymbols();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Parser parser0 = new Parser();
      ConfigurableParseEventHandler configurableParseEventHandler0 = new ConfigurableParseEventHandler();
      ParseResponse parseResponse0 = parser0.parse("", (ParseEventHandler) configurableParseEventHandler0);
      assertNotNull(parseResponse0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Parser parser0 = new Parser();
      boolean boolean0 = parser0.isUseEscapeCharacterOn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Parser parser0 = new Parser();
      ParserHandlerFactory parserHandlerFactory0 = parser0.getHandlerFactory();
      parser0.setHandlerFactory(parserHandlerFactory0);
      assertFalse(parser0.isUseEscapeCharacterOn());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        Parser.main(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.strings.StringUtil
         //
         verifyException("net.segoia.util.parser.Symbol", e);
      }
  }
}
