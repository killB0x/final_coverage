/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:28:24 GMT 2022
 */

package net.segoia.util.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import net.segoia.util.parser.Match;
import net.segoia.util.parser.Symbol;
import net.segoia.util.parser.SymbolType;
import net.segoia.util.parser.workers.StringConcatWorker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Match_ESTest extends Match_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Match match0 = new Match((Symbol) null, "{//@H<zjN*G", "{//@H<zjN*G", 0);
      match0.getSymbol();
      assertEquals(0, match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.SEPARATE;
      Symbol symbol0 = new Symbol("", symbolType0);
      Match match0 = new Match(symbol0, "", (String) null, (-1));
      symbol0.setUseEscapeCharacterOn(true);
      match0.getSymbol();
      assertEquals((-1), match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Symbol symbol0 = Symbol.fromString("");
      symbol0.setOverrideSuperContextConfig(true);
      Match match0 = new Match(symbol0, " dFH:T6dvKXsu-#", " dFH:T6dvKXsu-#", (-1900));
      match0.getSymbol();
      assertEquals((-1884), match0.getEndPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Symbol symbol0 = new Symbol();
      Match match0 = new Match(symbol0, "DOC_START", "", 7);
      symbol0.configFromSymbol(symbol0);
      match0.getSymbol();
      assertEquals("DOC_START", match0.getContent());
      assertEquals(7, match0.getEndPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("R7O[K)2", symbolType0, 1);
      Match match0 = new Match(symbol0, "R7O[K)2", "R7O[K)2", 1);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      StringConcatWorker stringConcatWorker0 = new StringConcatWorker(hashMap0);
      symbol0.addWorker(stringConcatWorker0);
      match0.getSymbol();
      assertEquals(1, match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Symbol symbol0 = new Symbol();
      symbol0.setPriority(0);
      Match match0 = new Match(symbol0, "jWy*L]", "jWy*L]", 2027);
      match0.getSymbol();
      assertEquals(2027, match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Symbol symbol0 = new Symbol();
      Match match0 = new Match(symbol0, "OE=b0X:%Q6Pb", "", 0);
      int int0 = match0.getPosition();
      assertEquals(0, int0);
      assertEquals("OE=b0X:%Q6Pb", match0.getContent());
      assertEquals("", match0.getMatch());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Symbol symbol0 = Symbol.fromString("");
      Match match0 = new Match(symbol0, " dFH:T6dvKXsu-#", " dFH:T6dvKXsu-#", (-1900));
      int int0 = match0.getPosition();
      assertEquals((-1900), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.SEPARATE;
      Symbol symbol0 = new Symbol("", symbolType0);
      Match match0 = new Match(symbol0, "", (String) null, (-1));
      String string0 = match0.getMatch();
      assertNull(string0);
      assertEquals((-1), match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Symbol symbol0 = new Symbol();
      Match match0 = new Match(symbol0, "OE=b0X:%Q6Pb", "", 0);
      match0.getMatch();
      assertEquals("OE=b0X:%Q6Pb", match0.getContent());
      assertEquals(0, match0.getEndPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Symbol symbol0 = new Symbol();
      Match match0 = new Match(symbol0, "jWy*L]", "jWy*L]", 2027);
      int int0 = match0.getEndPosition();
      assertEquals(2033, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Symbol symbol0 = Symbol.fromString("");
      Match match0 = new Match(symbol0, " dFH:T6dvKXsu-#", " dFH:T6dvKXsu-#", (-1900));
      int int0 = match0.getEndPosition();
      assertEquals((-1884), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Symbol symbol0 = new Symbol();
      Match match0 = new Match(symbol0, "OE=b0X:%Q6Pb", "", 0);
      String string0 = match0.getContent();
      assertEquals("OE=b0X:%Q6Pb", string0);
      assertEquals(0, match0.getEndPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.SEPARATE;
      Symbol symbol0 = new Symbol("", symbolType0);
      Match match0 = new Match(symbol0, "", (String) null, (-1));
      String string0 = match0.getContent();
      assertNotNull(string0);
      assertEquals((-1), match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.SEPARATE;
      Symbol symbol0 = new Symbol("", symbolType0);
      Match match0 = new Match(symbol0, "", (String) null, (-1));
      // Undeclared exception!
      try { 
        match0.getEndPosition();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Match", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Match match0 = null;
      try {
        match0 = new Match((Match) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.Match", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("$vJ{^=n\"pq99t", symbolType0);
      Match match0 = new Match(symbol0, (String) null, "Ai", 10);
      String string0 = match0.getContent();
      assertEquals(12, match0.getEndPosition());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("$vJ{^=n\"pq99t", symbolType0);
      Match match0 = new Match(symbol0, (String) null, "Ai", 10);
      String string0 = match0.getMatch();
      assertNotNull(string0);
      assertEquals(10, match0.getPosition());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("$vJ{^=n\"pq99t", symbolType0);
      Match match0 = new Match(symbol0, (String) null, "Ai", 10);
      int int0 = match0.getPosition();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Symbol symbol0 = new Symbol();
      Match match0 = new Match(symbol0, "OE=b0X:%Q6Pb", "", 0);
      int int0 = match0.getEndPosition();
      assertEquals("OE=b0X:%Q6Pb", match0.getContent());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("$vJ{^=n\"pq99t", symbolType0);
      Match match0 = new Match(symbol0, (String) null, "Ai", 10);
      Match match1 = new Match(match0, (String) null);
      assertEquals(16, match1.getEndPosition());
  }
}
