/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 06:43:02 GMT 2022
 */

package net.segoia.util.parser.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import net.segoia.util.parser.Symbol;
import net.segoia.util.parser.SymbolType;
import net.segoia.util.parser.event.AssociationEvent;
import net.segoia.util.parser.event.GroupEvent;
import net.segoia.util.parser.utils.CollectionMapParseEventHandler;
import net.segoia.util.parser.utils.MapTypeDefinition;
import net.segoia.util.parser.utils.MultivaluedTypeDefinition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CollectionMapParseEventHandler_ESTest extends CollectionMapParseEventHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      SymbolType symbolType0 = SymbolType.UNIQUE_GROUP_SEPARATOR;
      Symbol symbol0 = new Symbol("[", symbolType0, (-2850));
      MultivaluedTypeDefinition<String, String> multivaluedTypeDefinition0 = new MultivaluedTypeDefinition<String, String>();
      collectionMapParseEventHandler0.setCollectionTypeDef(multivaluedTypeDefinition0);
      GroupEvent groupEvent0 = new GroupEvent();
      groupEvent0.setStartSymbol(symbol0);
      // Undeclared exception!
      try { 
        collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.utils.CollectionMapParseEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MapTypeDefinition<Object, String, String> mapTypeDefinition0 = new MapTypeDefinition<Object, String, String>();
      SymbolType symbolType0 = SymbolType.UNIQUE_GROUP_SEPARATOR;
      GroupEvent groupEvent0 = new GroupEvent();
      Symbol symbol0 = new Symbol("{", symbolType0, (-74185799));
      groupEvent0.setStartSymbol(symbol0);
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler(mapTypeDefinition0, mapTypeDefinition0);
      // Undeclared exception!
      try { 
        collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.utils.CollectionMapParseEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      AssociationEvent associationEvent0 = new AssociationEvent();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      associationEvent0.setPrefixValue(arrayList0);
      Object object0 = collectionMapParseEventHandler0.handleAssociationEvent(associationEvent0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      MultivaluedTypeDefinition<String, Object> multivaluedTypeDefinition0 = new MultivaluedTypeDefinition<String, Object>(class0, class1);
      MapTypeDefinition<Object, String, Object> mapTypeDefinition0 = new MapTypeDefinition<Object, String, Object>(class1, class0, class1);
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler(multivaluedTypeDefinition0, mapTypeDefinition0);
      MapTypeDefinition<?, ?, ?> mapTypeDefinition1 = collectionMapParseEventHandler0.getMapTypeDef();
      assertNotNull(mapTypeDefinition1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      GroupEvent groupEvent0 = new GroupEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("{");
      groupEvent0.setObjects(arrayList0);
      SymbolType symbolType0 = SymbolType.ASSOCIATE;
      Symbol symbol0 = new Symbol("{", symbolType0);
      groupEvent0.setStartSymbol(symbol0);
      // Undeclared exception!
      try { 
        collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class net.segoia.util.data.NameValue (java.lang.String is in module java.base of loader 'bootstrap'; net.segoia.util.data.NameValue is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @2133a3ff)
         //
         verifyException("net.segoia.util.parser.utils.CollectionMapParseEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      // Undeclared exception!
      try { 
        collectionMapParseEventHandler0.handleEmptyString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.utils.CollectionMapParseEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      GroupEvent groupEvent0 = new GroupEvent();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      linkedList0.add((Object) arrayList0);
      groupEvent0.setObjects(linkedList0);
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("\"", symbolType0, (-1563));
      groupEvent0.setStartSymbol(symbol0);
      ArrayList arrayList1 = (ArrayList)collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      GroupEvent groupEvent0 = new GroupEvent();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      groupEvent0.setObjects(linkedList0);
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("\"", symbolType0, (-1563));
      groupEvent0.setStartSymbol(symbol0);
      Object object0 = collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MapTypeDefinition<Object, String, String> mapTypeDefinition0 = new MapTypeDefinition<Object, String, String>();
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler(mapTypeDefinition0, mapTypeDefinition0);
      GroupEvent groupEvent0 = new GroupEvent();
      SymbolType symbolType0 = SymbolType.GROUP_END_START;
      Symbol symbol0 = new Symbol((String) null, symbolType0, (-2850));
      groupEvent0.setStartSymbol(symbol0);
      Object object0 = collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      GroupEvent groupEvent0 = new GroupEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("[");
      groupEvent0.setObjects(arrayList0);
      SymbolType symbolType0 = SymbolType.GROUP_END;
      Symbol symbol0 = new Symbol("[", symbolType0);
      groupEvent0.setStartSymbol(symbol0);
      ArrayList arrayList1 = (ArrayList)collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add((String) null);
      GroupEvent groupEvent0 = new GroupEvent();
      groupEvent0.setObjects(arrayList0);
      SymbolType symbolType0 = SymbolType.SEPARATE;
      Symbol symbol0 = new Symbol("[", symbolType0);
      groupEvent0.setStartSymbol(symbol0);
      ArrayList arrayList1 = (ArrayList)collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
      assertFalse(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      GroupEvent groupEvent0 = new GroupEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add((String) null);
      groupEvent0.setObjects(arrayList0);
      SymbolType symbolType0 = SymbolType.ASSOCIATE;
      Symbol symbol0 = new Symbol("{", symbolType0);
      groupEvent0.setStartSymbol(symbol0);
      // Undeclared exception!
      try { 
        collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.parser.utils.CollectionMapParseEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      SymbolType symbolType0 = SymbolType.GROUP_END;
      GroupEvent groupEvent0 = new GroupEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      groupEvent0.setObjects(arrayList0);
      Symbol symbol0 = new Symbol("{", symbolType0, (-2013426426));
      groupEvent0.setStartSymbol(symbol0);
      HashMap hashMap0 = (HashMap)collectionMapParseEventHandler0.handleGroupEvent(groupEvent0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MapTypeDefinition<Object, String, String> mapTypeDefinition0 = new MapTypeDefinition<Object, String, String>();
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler(mapTypeDefinition0, mapTypeDefinition0);
      AssociationEvent associationEvent0 = new AssociationEvent();
      // Undeclared exception!
      try { 
        collectionMapParseEventHandler0.handleAssociationEvent(associationEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      Object object0 = collectionMapParseEventHandler0.handleEmptyString("=+vF");
      assertEquals("=+vF", object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      collectionMapParseEventHandler0.setCollectionTypeDef((MultivaluedTypeDefinition<?, ?>) null);
      MultivaluedTypeDefinition<?, ?> multivaluedTypeDefinition0 = collectionMapParseEventHandler0.getCollectionTypeDef();
      assertNull(multivaluedTypeDefinition0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler((MultivaluedTypeDefinition<?, ?>) null, (MapTypeDefinition<?, ?, ?>) null);
      MapTypeDefinition<?, ?, ?> mapTypeDefinition0 = collectionMapParseEventHandler0.getMapTypeDef();
      assertNull(mapTypeDefinition0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      MultivaluedTypeDefinition<?, ?> multivaluedTypeDefinition0 = collectionMapParseEventHandler0.getCollectionTypeDef();
      assertNotNull(multivaluedTypeDefinition0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CollectionMapParseEventHandler collectionMapParseEventHandler0 = new CollectionMapParseEventHandler();
      MapTypeDefinition<Object, Object, Object> mapTypeDefinition0 = new MapTypeDefinition<Object, Object, Object>();
      collectionMapParseEventHandler0.setMapTypeDef(mapTypeDefinition0);
  }
}
