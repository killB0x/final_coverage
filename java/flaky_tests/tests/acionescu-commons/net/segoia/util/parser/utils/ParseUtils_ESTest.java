/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:34:55 GMT 2022
 */

package net.segoia.util.parser.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.NoSuchElementException;
import net.segoia.util.parser.utils.ParseUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseUtils_ESTest extends ParseUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        ParseUtils.parseCollection("L[P");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to parse 'L[P'
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseUtils.parseCollection((String) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayList arrayList0 = (ArrayList)ParseUtils.parseCollection("[{name=username,is-required=true,is-form-field=true,field-input-regex=\"^[w]{5,20}$\"},{name=password,is-required=true,is-form-field=true,is-sensitive=true,field-input-regex=\"^[w]{5,20}$\"},{name=password-again,is-required=true,is-sensitive=true,is-form-field=true,field-input-regex=\"^[w]{5,20}$\"},{name=email,is-required=true,is-form-field=true,field-input-regex=\"(w[-._w]*w@w[-._w]*w.w{2,3})\"}]");
      assertEquals(4, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParseUtils parseUtils0 = new ParseUtils();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParseUtils.main((String[]) null);
      ParseUtils.parseCollection("[{name=username,is-required=true,is-form-field=true,field-input-regex=\"^[w]{5,20}$\"},{name=password,is-required=true,is-form-field=true,is-sensitive=true,field-input-regex=\"^[w]{5,20}$\"},{name=password-again,is-required=true,is-sensitive=true,is-form-field=true,field-input-regex=\"^[w]{5,20}$\"},{name=email,is-required=true,is-form-field=true,field-input-regex=\"(w[-._w]*w@w[-._w]*w.w{2,3})\"}]");
      ParseUtils.parseCollection("[{name=username,is-required=true,is-form-field=true,field-input-regex=\"^[w]{5,20}$\"},{name=password,is-required=true,is-form-field=true,is-sensitive=true,field-input-regex=\"^[w]{5,20}$\"},{name=password-again,is-required=true,is-sensitive=true,is-form-field=true,field-input-regex=\"^[w]{5,20}$\"},{name=email,is-required=true,is-form-field=true,field-input-regex=\"(w[-._w]*w@w[-._w]*w.w{2,3})\"}]");
      ParseUtils.main((String[]) null);
      try { 
        ParseUtils.main((String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to parse '[{name=username,is-required=true,is-form-field=true,field-input-regex=\"^[\\w]{5,20}$\"},{name=password,is-required=true,is-form-field=true,is-sensitive=true,field-input-regex=\"^[\\w]{5,20}$\"},{name=password-again,is-required=true,is-sensitive=true,is-form-field=true,field-input-regex=\"^[\\w]{5,20}$\"},{name=email,is-required=true,is-form-field=true,field-input-regex=\"(\\w[-._\\w]*\\w@\\w[-._\\w]*\\w\\.\\w{2,3})\"}]'
         //
         verifyException("net.segoia.util.parser.Parser", e);
      }
  }
}
