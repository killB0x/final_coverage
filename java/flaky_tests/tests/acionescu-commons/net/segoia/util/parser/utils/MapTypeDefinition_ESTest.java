/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:58:49 GMT 2022
 */

package net.segoia.util.parser.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import net.segoia.util.parser.utils.MapTypeDefinition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapTypeDefinition_ESTest extends MapTypeDefinition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      MapTypeDefinition<Integer, Integer, Integer> mapTypeDefinition0 = new MapTypeDefinition<Integer, Integer, Integer>(class0, class0, class0);
      Class<Integer> class1 = mapTypeDefinition0.getKeyType();
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      MapTypeDefinition<Integer, Integer, Integer> mapTypeDefinition0 = new MapTypeDefinition<Integer, Integer, Integer>(class0, (Class<Integer>) null, class0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      MapTypeDefinition<Integer, Integer, Integer> mapTypeDefinition0 = new MapTypeDefinition<Integer, Integer, Integer>();
      mapTypeDefinition0.setKeyType(class0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MapTypeDefinition<Integer, Integer, Integer> mapTypeDefinition0 = new MapTypeDefinition<Integer, Integer, Integer>();
      Class<Integer> class0 = mapTypeDefinition0.getKeyType();
      assertNull(class0);
  }
}
