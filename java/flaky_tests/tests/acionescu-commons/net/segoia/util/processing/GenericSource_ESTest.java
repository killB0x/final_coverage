/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:16:27 GMT 2022
 */

package net.segoia.util.processing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.processing.GenericSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericSource_ESTest extends GenericSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GenericSource<Object> genericSource0 = new GenericSource<Object>();
      Object object0 = new Object();
      genericSource0.addInput(object0);
      Object object1 = genericSource0.getInput();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenericSource<Object> genericSource0 = new GenericSource<Object>();
      // Undeclared exception!
      try { 
        genericSource0.addInput((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GenericSource<Integer> genericSource0 = new GenericSource<Integer>();
      Object object0 = genericSource0.getInput();
      assertNull(object0);
  }
}
