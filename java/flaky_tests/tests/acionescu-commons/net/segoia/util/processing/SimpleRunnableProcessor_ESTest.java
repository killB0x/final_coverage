/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:52:20 GMT 2022
 */

package net.segoia.util.processing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.processing.Destination;
import net.segoia.util.processing.Processor;
import net.segoia.util.processing.SimpleRunnableProcessor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleRunnableProcessor_ESTest extends SimpleRunnableProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Processor<Integer, Integer> processor0 = (Processor<Integer, Integer>) mock(Processor.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(processor0).process(anyInt());
      Integer integer0 = new Integer(1122);
      Destination<Integer, Integer> destination0 = (Destination<Integer, Integer>) mock(Destination.class, new ViolatedAssumptionAnswer());
      SimpleRunnableProcessor<Integer, Integer> simpleRunnableProcessor0 = new SimpleRunnableProcessor<Integer, Integer>(processor0, integer0, destination0);
      simpleRunnableProcessor0.run();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Processor<Integer, Integer> processor0 = (Processor<Integer, Integer>) mock(Processor.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(processor0).process(anyInt());
      Integer integer0 = new Integer(0);
      SimpleRunnableProcessor<Integer, Integer> simpleRunnableProcessor0 = new SimpleRunnableProcessor<Integer, Integer>(processor0, integer0, (Destination<Integer, Integer>) null);
      // Undeclared exception!
      try { 
        simpleRunnableProcessor0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.processing.SimpleRunnableProcessor", e);
      }
  }
}
