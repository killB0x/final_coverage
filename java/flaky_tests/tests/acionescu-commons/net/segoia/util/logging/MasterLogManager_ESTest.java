/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:55:59 GMT 2022
 */

package net.segoia.util.logging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.logging.DefaultLogManager;
import net.segoia.util.logging.Log4jLoggerFactory;
import net.segoia.util.logging.LogManager;
import net.segoia.util.logging.Logger;
import net.segoia.util.logging.LoggerFactory;
import net.segoia.util.logging.LoggingLevel;
import net.segoia.util.logging.MasterLogManager;
import net.segoia.util.logging.SystemOutLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MasterLogManager_ESTest extends MasterLogManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      MasterLogManager.setDefaultLogManager(defaultLogManager0);
      MasterLogManager.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemOutLogger systemOutLogger0 = new SystemOutLogger("C0n!Xp~");
      DefaultLogManager defaultLogManager0 = new DefaultLogManager((LoggerFactory) null, systemOutLogger0);
      Logger logger0 = MasterLogManager.getLogger("C0n!Xp~", (LoggerFactory) defaultLogManager0);
      assertTrue(logger0.isInfoEnabled());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager((LoggerFactory) null, (Logger) null);
      MasterLogManager.setDefaultLogManager(defaultLogManager0);
      Logger logger0 = MasterLogManager.getLogger("{P)'=TE.05N}`4d'#+ ");
      assertNull(logger0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger("WARN");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      MasterLogManager.setDefaultLogManager(defaultLogManager0);
      Logger logger0 = MasterLogManager.getLogger("FT7{}!8-x7");
      assertEquals(LoggingLevel.INFO, logger0.getLogLevel());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      MasterLogManager.setDefaultLogManager(defaultLogManager0);
      Class<Object> class0 = Object.class;
      Logger logger0 = MasterLogManager.getLogger(class0);
      assertTrue(logger0.isInfoEnabled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MasterLogManager.setDefaultLogManager((LogManager) null);
      LogManager logManager0 = MasterLogManager.getDefaultLogManager();
      assertNull(logManager0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      MasterLogManager.setDefaultLogManager(defaultLogManager0);
      defaultLogManager0.setDefaultLoggerFactory(defaultLogManager0);
      // Undeclared exception!
      try { 
        MasterLogManager.main((String[]) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MasterLogManager.setDefaultLogManager((LogManager) null);
      try { 
        MasterLogManager.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.logging.MasterLogManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      SystemOutLogger systemOutLogger0 = new SystemOutLogger("dA%f.k 4.kSrL)1NzdY");
      DefaultLogManager defaultLogManager1 = new DefaultLogManager(defaultLogManager0, systemOutLogger0);
      defaultLogManager0.setDefaultLoggerFactory(defaultLogManager1);
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger("JJF}2\"f", (LoggerFactory) defaultLogManager0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger("SRxL.Aw0M*~Rvd>Is", (LoggerFactory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.logging.DefaultLogManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Log4jLoggerFactory log4jLoggerFactory0 = new Log4jLoggerFactory();
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger("m4Y=cY/L?-8", (LoggerFactory) log4jLoggerFactory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      defaultLogManager0.setDefaultLoggerFactory(defaultLogManager0);
      MasterLogManager.setDefaultLogManager(defaultLogManager0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger(class0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.logging.DefaultLogManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MasterLogManager masterLogManager0 = new MasterLogManager();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        MasterLogManager.main((String[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LogManager logManager0 = MasterLogManager.getDefaultLogManager();
      assertNotNull(logManager0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        MasterLogManager.getLogger(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SystemOutLogger systemOutLogger0 = new SystemOutLogger("0");
      DefaultLogManager defaultLogManager0 = new DefaultLogManager((LoggerFactory) null, systemOutLogger0);
      Logger logger0 = MasterLogManager.getLogger("0", (LoggerFactory) defaultLogManager0);
      assertTrue(logger0.isInfoEnabled());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager((LoggerFactory) null, (Logger) null);
      MasterLogManager.setDefaultLogManager(defaultLogManager0);
      Class<Integer> class0 = Integer.class;
      Logger logger0 = MasterLogManager.getLogger(class0);
      assertNull(logger0);
  }
}
