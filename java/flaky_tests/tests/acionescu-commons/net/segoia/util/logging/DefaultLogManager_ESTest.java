/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:18:42 GMT 2022
 */

package net.segoia.util.logging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.util.logging.DefaultLogManager;
import net.segoia.util.logging.Log4jLoggerFactory;
import net.segoia.util.logging.Logger;
import net.segoia.util.logging.LoggerFactory;
import net.segoia.util.logging.LoggingLevel;
import net.segoia.util.logging.SystemOutLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultLogManager_ESTest extends DefaultLogManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Class<Object> class0 = Object.class;
      Logger logger0 = defaultLogManager0.getLogger(class0);
      assertEquals(LoggingLevel.INFO, logger0.getLogLevel());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      defaultLogManager0.setDefaultLoggerFactory((LoggerFactory) null);
      LoggerFactory loggerFactory0 = defaultLogManager0.getDefaultLoggerFactory();
      assertNull(loggerFactory0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Log4jLoggerFactory log4jLoggerFactory0 = new Log4jLoggerFactory();
      // Undeclared exception!
      try { 
        defaultLogManager0.getLogger((String) null, (LoggerFactory) log4jLoggerFactory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Log4jLoggerFactory log4jLoggerFactory0 = new Log4jLoggerFactory();
      // Undeclared exception!
      try { 
        defaultLogManager0.getLogger("DEBUG", (LoggerFactory) log4jLoggerFactory0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      // Undeclared exception!
      try { 
        defaultLogManager0.getLogger((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Log4jLoggerFactory log4jLoggerFactory0 = new Log4jLoggerFactory();
      defaultLogManager0.setDefaultLoggerFactory(log4jLoggerFactory0);
      // Undeclared exception!
      try { 
        defaultLogManager0.getLogger("R%_&i{I&1O");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager((LoggerFactory) null, (Logger) null);
      Logger logger0 = defaultLogManager0.getLogger("hy}uKaZHY");
      assertNull(logger0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Logger logger0 = defaultLogManager0.getLogger("DefaultLogger", (LoggerFactory) defaultLogManager0);
      assertTrue(logger0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      defaultLogManager0.getLogger("");
      Logger logger0 = defaultLogManager0.getLogger("", (LoggerFactory) defaultLogManager0);
      assertTrue(logger0.isInfoEnabled());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Logger logger0 = defaultLogManager0.getLogger("");
      Logger logger1 = defaultLogManager0.getLogger("");
      assertSame(logger1, logger0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      LoggerFactory loggerFactory0 = defaultLogManager0.getDefaultLoggerFactory();
      assertNotNull(loggerFactory0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager((LoggerFactory) null, (Logger) null);
      Class<Object> class0 = Object.class;
      Logger logger0 = defaultLogManager0.getLogger(class0);
      assertNull(logger0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Log4jLoggerFactory log4jLoggerFactory0 = new Log4jLoggerFactory();
      defaultLogManager0.setDefaultLoggerFactory(log4jLoggerFactory0);
      Class<SystemOutLogger> class0 = SystemOutLogger.class;
      // Undeclared exception!
      try { 
        defaultLogManager0.getLogger(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class net.segoia.util.logging.Log4jLogger
         //
         verifyException("net.segoia.util.logging.Log4jLoggerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      DefaultLogManager defaultLogManager1 = new DefaultLogManager(defaultLogManager0, (Logger) null);
      Logger logger0 = defaultLogManager1.getDefaultLogger();
      assertNull(logger0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultLogManager defaultLogManager0 = new DefaultLogManager();
      Logger logger0 = defaultLogManager0.getDefaultLogger();
      assertTrue(logger0.isInfoEnabled());
  }
}
