/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:05:38 GMT 2022
 */

package net.segoia.util.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Proxy;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
import net.segoia.util.io.SocketProcessor;
import net.segoia.util.io.SocketWorkerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SocketProcessor_ESTest extends SocketProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocketProcessor socketProcessor0 = new SocketProcessor();
      ExecutorService executorService0 = socketProcessor0.getExecutor();
      assertNotNull(executorService0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocketProcessor socketProcessor0 = new SocketProcessor();
      socketProcessor0.setExecutor((ExecutorService) null);
      ExecutorService executorService0 = socketProcessor0.getExecutor();
      assertNull(executorService0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SocketProcessor socketProcessor0 = new SocketProcessor();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      try { 
        socketProcessor0.process((Socket) mockSocket0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.io.SocketProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SocketProcessor socketProcessor0 = new SocketProcessor();
      SocketWorkerFactory socketWorkerFactory0 = socketProcessor0.getSocketWorkerFactory();
      assertNull(socketWorkerFactory0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SocketProcessor socketProcessor0 = new SocketProcessor();
      socketProcessor0.setSocketWorkerFactory((SocketWorkerFactory) null);
  }
}
