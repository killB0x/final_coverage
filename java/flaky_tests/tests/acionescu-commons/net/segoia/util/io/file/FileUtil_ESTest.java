/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 06:01:37 GMT 2022
 */

package net.segoia.util.io.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import net.segoia.util.io.file.FileUtil;
import net.segoia.util.io.file.LineHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileUtil_ESTest extends FileUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      List<String> list0 = FileUtil.readFromFile("-6{", 0);
      assertFalse(list0.contains("-6{"));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileUtil.writeToFile("t-/:f", ">@$dxhD-{~1)^zWN", true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      boolean boolean0 = FileUtil.recursiveDelete(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = FileUtil.initDirectory("/rzE2-LzB)jTY)");
      assertEquals(0L, file0.length());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        FileUtil.writeToFile("t-/S:f", "t-/S:f", false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      try { 
        FileUtil.writeToFile("", "", false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.readFromFile((String) null, (LineHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      LineHandler lineHandler0 = mock(LineHandler.class, new ViolatedAssumptionAnswer());
      try { 
        FileUtil.readFromFile("-6{", lineHandler0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      try { 
        FileUtil.readFromFile("wYgE.[)|q4#LF", (LineHandler) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.readFromFile((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      try { 
        FileUtil.readFromFile("-6{", 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      try { 
        FileUtil.readFromFile("-6{", 633);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.readFromFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      try { 
        FileUtil.readFromFile("-6{");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        FileUtil.readFromFile("*Z -PD1 CHz4");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.initDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.copyFile("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        FileUtil.copyFile((File) mockFile0, (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      File file0 = FileUtil.initDirectory("7vkUB')wa`h]R/VP_C");
      try { 
        FileUtil.copyFile(file0, file0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("-A5*?pXev*J&", "|'trkXvB4A^:aB2");
      try { 
        FileUtil.copyFile((File) mockFile0, (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // transferFrom is not supported yet
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = FileUtil.initDirectory(".");
      // Undeclared exception!
      try { 
        FileUtil.recursiveDelete(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/user");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      // Undeclared exception!
      try { 
        FileUtil.initDirectory("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected a writable directory!
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      // Undeclared exception!
      try { 
        FileUtil.initDirectory("-6{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected a writable directory!
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.initDirectory("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed to create directory 
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileUtil.writeToFile(")-Vp<F~TZdnZl[B2aWI", ")-Vp<F~TZdnZl[B2aWI", false);
      LineHandler lineHandler0 = mock(LineHandler.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(lineHandler0).handle(anyString());
      FileUtil.readFromFile(")-Vp<F~TZdnZl[B2aWI", lineHandler0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      LineHandler lineHandler0 = mock(LineHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(lineHandler0).handle(anyString());
      FileUtil.readFromFile("-6{", lineHandler0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      File file0 = FileUtil.initDirectory("Failed to create directory ");
      file0.createNewFile();
      FileUtil.recursiveDelete(file0);
      FileUtil.readFromFile("Failed to create directory ", (LineHandler) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      List<String> list0 = FileUtil.readFromFile("-6{");
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileUtil.recursiveDelete(mockFile0);
      mockFile0.createNewFile();
      List<String> list0 = FileUtil.readFromFile("");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      List<String> list0 = FileUtil.readFromFile("-6{", (-2));
      assertFalse(list0.contains("-6{"));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-6{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-6{");
      List<String> list0 = FileUtil.readFromFile("-6{", 2972);
      assertTrue(list0.contains("-6{"));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      try { 
        FileUtil.copyFile("Source and destination files must be non null.", "JX;z|zrM)%/9G*-f#@N");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "@Mmw5\"V[):(#),");
      // Undeclared exception!
      try { 
        FileUtil.copyFile((File) mockFile0, (File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Source and destination files must be non null.
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.copyFile((File) null, (File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Source and destination files must be non null.
         //
         verifyException("net.segoia.util.io.file.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.writeToFile((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      try { 
        FileUtil.copyFile("U6!w/q)r*jT", "U6!w/q)r*jT");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // transferFrom is not supported yet
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
  }
}
