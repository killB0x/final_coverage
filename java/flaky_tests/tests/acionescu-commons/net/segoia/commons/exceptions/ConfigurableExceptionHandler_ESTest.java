/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:25:34 GMT 2022
 */

package net.segoia.commons.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.segoia.commons.exceptions.ContextAwareException;
import net.segoia.commons.exceptions.ExceptionContext;
import net.segoia.commons.exceptions.ExceptionHandlerConfiguration;
import net.segoia.commons.exceptions.ExceptionHandlerWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigurableExceptionHandler_ESTest extends ConfigurableExceptionHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExceptionHandlerWrapper<Object> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Object>();
      ContextAwareException contextAwareException0 = new ContextAwareException("", "");
      ExceptionContext exceptionContext0 = new ExceptionContext();
      ContextAwareException contextAwareException1 = new ContextAwareException((String) null, contextAwareException0, exceptionContext0);
      try { 
        exceptionHandlerWrapper0.onException(contextAwareException0, contextAwareException1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExceptionHandlerWrapper<Integer> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Integer>();
      ExceptionHandlerConfiguration exceptionHandlerConfiguration0 = new ExceptionHandlerConfiguration();
      exceptionHandlerConfiguration0.setReraise(false);
      exceptionHandlerWrapper0.setConfig(exceptionHandlerConfiguration0);
      ContextAwareException contextAwareException0 = new ContextAwareException("fwvPA~pc?zTKp", 1);
      exceptionHandlerWrapper0.reraise(contextAwareException0);
      assertEquals("fwvPA~pc?zTKp", contextAwareException0.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExceptionHandlerWrapper<Integer> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Integer>();
      ContextAwareException contextAwareException0 = new ContextAwareException("");
      exceptionHandlerWrapper0.beforeHandling(contextAwareException0);
      assertEquals(3, contextAwareException0.getLevel());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExceptionHandlerWrapper<Object> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Object>();
      exceptionHandlerWrapper0.setConfig((ExceptionHandlerConfiguration) null);
      Object object0 = exceptionHandlerWrapper0.onException((ContextAwareException) null, (ContextAwareException) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExceptionHandlerWrapper<Integer> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Integer>();
      ExceptionHandlerConfiguration exceptionHandlerConfiguration0 = new ExceptionHandlerConfiguration();
      exceptionHandlerConfiguration0.setReraise(false);
      exceptionHandlerWrapper0.setConfig(exceptionHandlerConfiguration0);
      ExceptionHandlerConfiguration exceptionHandlerConfiguration1 = exceptionHandlerWrapper0.getConfig();
      assertSame(exceptionHandlerConfiguration1, exceptionHandlerConfiguration0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextAwareException contextAwareException0 = new ContextAwareException("Y[|BGfL|pj[=jB]n", "Y[|BGfL|pj[=jB]n");
      ExceptionHandlerWrapper<Object> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Object>();
      try { 
        exceptionHandlerWrapper0.reraise(contextAwareException0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExceptionHandlerWrapper<Integer> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Integer>();
      // Undeclared exception!
      try { 
        exceptionHandlerWrapper0.reraise((ContextAwareException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.commons.exceptions.ConfigurableExceptionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExceptionHandlerWrapper<Object> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Object>();
      // Undeclared exception!
      try { 
        exceptionHandlerWrapper0.afterHandling((ContextAwareException) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.commons.exceptions.ConfigurableExceptionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExceptionHandlerWrapper<Integer> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Integer>();
      ContextAwareException contextAwareException0 = new ContextAwareException("j;LBQpj");
      exceptionHandlerWrapper0.setConfig((ExceptionHandlerConfiguration) null);
      Integer integer0 = exceptionHandlerWrapper0.afterHandling(contextAwareException0, (Integer) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExceptionHandlerWrapper<Integer> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Integer>();
      ContextAwareException contextAwareException0 = new ContextAwareException("j;LBQpj");
      try { 
        exceptionHandlerWrapper0.afterHandling(contextAwareException0, (Integer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExceptionHandlerWrapper<Object> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Object>();
      ExceptionHandlerConfiguration exceptionHandlerConfiguration0 = exceptionHandlerWrapper0.getConfig();
      exceptionHandlerConfiguration0.setReraise(false);
      ContextAwareException contextAwareException0 = new ContextAwareException("");
      Object object0 = exceptionHandlerWrapper0.afterHandling(contextAwareException0, exceptionHandlerConfiguration0);
      assertSame(exceptionHandlerConfiguration0, object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExceptionHandlerWrapper<Object> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Object>();
      exceptionHandlerWrapper0.setConfig((ExceptionHandlerConfiguration) null);
      ExceptionHandlerConfiguration exceptionHandlerConfiguration0 = exceptionHandlerWrapper0.getConfig();
      assertNull(exceptionHandlerConfiguration0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExceptionHandlerWrapper<Object> exceptionHandlerWrapper0 = new ExceptionHandlerWrapper<Object>();
      // Undeclared exception!
      try { 
        exceptionHandlerWrapper0.onException((ContextAwareException) null, (ContextAwareException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.segoia.commons.exceptions.ConfigurableExceptionHandler", e);
      }
  }
}
