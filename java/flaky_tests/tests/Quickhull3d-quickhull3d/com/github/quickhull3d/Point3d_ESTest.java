/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 21:32:48 GMT 2022
 */

package com.github.quickhull3d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.quickhull3d.Point3d;
import com.github.quickhull3d.Vector3d;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point3d_ESTest extends Point3d_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point3d point3d0 = new Point3d((-1.0), (-1.0), (-1.0));
      assertEquals(1.7320508075688772, point3d0.norm(), 0.01);
      assertEquals((-1.0), point3d0.y, 0.01);
      assertEquals((-1.0), point3d0.z, 0.01);
      assertEquals((-1.0), point3d0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point3d point3d0 = null;
      try {
        point3d0 = new Point3d((Vector3d) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.quickhull3d.Vector3d", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point3d point3d0 = new Point3d();
      Point3d point3d1 = new Point3d(point3d0);
      assertFalse(point3d1.equals((Object)point3d0));
  }
}
