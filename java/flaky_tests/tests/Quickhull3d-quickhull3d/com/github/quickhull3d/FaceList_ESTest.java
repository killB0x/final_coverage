/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 21:32:39 GMT 2022
 */

package com.github.quickhull3d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.quickhull3d.Face;
import com.github.quickhull3d.FaceList;
import com.github.quickhull3d.Vertex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FaceList_ESTest extends FaceList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      Face face0 = new Face();
      faceList0.add(face0);
      Face face1 = faceList0.first();
      assertSame(face1, face0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      Vertex vertex0 = new Vertex(0.0, 0.0, 0.0, 0);
      Face face0 = Face.createTriangle(vertex0, vertex0, vertex0);
      faceList0.add(face0);
      Face face1 = faceList0.first();
      assertSame(face1, face0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      Face face0 = new Face();
      face0.numVerts = (-1);
      faceList0.add(face0);
      Face face1 = faceList0.first();
      assertEquals((-1), face1.numVertices());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      // Undeclared exception!
      try { 
        faceList0.add((Face) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.quickhull3d.FaceList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      boolean boolean0 = faceList0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      Vertex vertex0 = new Vertex();
      Face face0 = Face.createTriangle(vertex0, vertex0, vertex0);
      faceList0.add(face0);
      boolean boolean0 = faceList0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      Face face0 = new Face();
      faceList0.add(face0);
      faceList0.add(face0);
      assertEquals(0, face0.numVertices());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      faceList0.clear();
      assertTrue(faceList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FaceList faceList0 = new FaceList();
      Face face0 = faceList0.first();
      assertNull(face0);
  }
}
