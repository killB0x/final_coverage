/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:52:21 GMT 2022
 */

package se.natusoft.tools.optionsmgr.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.natusoft.tools.optionsmgr.internal.OptionInfo;
import se.natusoft.tools.optionsmgr.internal.OptionInfos;
import se.natusoft.tools.optionsmgr.internal.OptionModelInfo;
import se.natusoft.tools.optionsmgr.internal.Path;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionInfos_ESTest extends OptionInfos_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionInfos optionInfos0 = new OptionInfos();
      Path path0 = new Path("al2T-lw(T.h");
      OptionInfo optionInfo0 = new OptionInfo();
      optionInfo0.setPublicPath(path0);
      optionInfos0.addOptionInfo(optionInfo0);
      OptionInfo optionInfo1 = optionInfos0.getOptionInfoByPublicPath(path0);
      assertNull(optionInfo1.getDescription());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      optionModelInfo0.setRequired(true);
      optionModelInfo0.setName("y3:");
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByName("y3:");
      assertNull(optionInfo0.getDescription());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      Class<Annotation> class0 = Annotation.class;
      optionModelInfo0.setCollectionType(class0);
      optionModelInfo0.setName("y3:");
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByName("y3:");
      assertTrue(optionInfo0.isCollectionType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionInfos optionInfos0 = new OptionInfos();
      Path path0 = new Path("al2T-lw(T.h");
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByRealPath(path0);
      optionInfos0.addOptionInfo(optionInfo0);
      List<OptionInfo> list0 = optionInfos0.getAllOptionInfos();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo((OptionInfo) null);
      // Undeclared exception!
      try { 
        optionInfos0.getRequiredOptionInfos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.OptionInfos", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionInfos optionInfos0 = new OptionInfos();
      OptionInfo optionInfo0 = new OptionInfo();
      optionInfos0.addOptionInfo(optionInfo0);
      List<OptionInfo> list0 = optionInfos0.getAllLeafOptionInfos();
      assertTrue(list0.contains(optionInfo0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      List<OptionInfo> list0 = optionInfos0.getAllLeafOptionInfos();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionInfos optionInfos0 = new OptionInfos();
      Path path0 = new Path("al2T-lw(T.h");
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByRealPath(path0);
      optionInfos0.addOptionInfo(optionInfo0);
      // Undeclared exception!
      try { 
        optionInfos0.getAllLeafOptionInfos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.OptionInfos", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      optionModelInfo0.setRequired(true);
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      List<OptionInfo> list0 = optionInfos0.getRequiredOptionInfos();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      List<OptionInfo> list0 = optionInfos0.getRequiredOptionInfos();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      Path path0 = new Path();
      optionModelInfo0.setRealPath(path0);
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByRealPath(path0);
      assertFalse(optionInfo0.isRequired());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      Path path0 = new Path();
      optionModelInfo0.setRealPath(path0);
      OptionInfos optionInfos0 = new OptionInfos();
      Path path1 = new Path(".", ".");
      optionInfos0.addOptionInfo(optionModelInfo0);
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByRealPath(path1);
      assertNull(optionInfo0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptionInfos optionInfos0 = new OptionInfos();
      Path path0 = new Path("al2T-lw(T.h");
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByRealPath(path0);
      optionInfos0.addOptionInfo(optionInfo0);
      // Undeclared exception!
      try { 
        optionInfos0.getOptionInfoByRealPath(path0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.OptionInfos", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      OptionInfos optionInfos0 = new OptionInfos();
      Path path0 = new Path("jcE2HADsill~td31", "jcE2HADsill~td31");
      optionModelInfo0.setPublicPath(path0);
      optionInfos0.addOptionInfo(optionModelInfo0);
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByPublicPath(path0);
      assertNull(optionInfo0.getDescription());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      OptionInfos optionInfos0 = new OptionInfos();
      Path path0 = new Path("jcE2HADsill~td31", "jcE2HADsill~td31");
      optionModelInfo0.setPublicPath(path0);
      optionInfos0.addOptionInfo(optionModelInfo0);
      Path path1 = new Path(path0, "jcE2HADsill~td31");
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByPublicPath(path1);
      assertNull(optionInfo0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      OptionInfos optionInfos0 = new OptionInfos();
      Path path0 = new Path("jcE2HADsill~td31", "jcE2HADsill~td31");
      optionInfos0.addOptionInfo(optionModelInfo0);
      // Undeclared exception!
      try { 
        optionInfos0.getOptionInfoByPublicPath(path0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.OptionInfos", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      optionModelInfo0.setName("y3:");
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      OptionInfo optionInfo0 = optionInfos0.getOptionInfoByName("");
      assertNull(optionInfo0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OptionModelInfo optionModelInfo0 = new OptionModelInfo();
      OptionInfos optionInfos0 = new OptionInfos();
      optionInfos0.addOptionInfo(optionModelInfo0);
      // Undeclared exception!
      try { 
        optionInfos0.getOptionInfoByName("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OptionInfos optionInfos0 = new OptionInfos();
      List<OptionInfo> list0 = optionInfos0.getAllOptionInfos();
      assertEquals(0, list0.size());
  }
}
