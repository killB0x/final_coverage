/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:51:01 GMT 2022
 */

package se.natusoft.tools.optionsmgr.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.natusoft.tools.optionsmgr.internal.OptionsAnnotationHelper;
import se.natusoft.tools.optionsmgr.internal.PropertyInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PropertyInfo_ESTest extends PropertyInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      // Undeclared exception!
      try { 
        propertyInfo0.isLeaf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.PropertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      Class<Annotation> class0 = Annotation.class;
      // Undeclared exception!
      try { 
        propertyInfo0.getAnnotation(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.PropertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      // Undeclared exception!
      try { 
        propertyInfo0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.PropertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      // Undeclared exception!
      try { 
        propertyInfo0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.PropertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      // Undeclared exception!
      try { 
        propertyInfo0.isBranch();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.PropertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      propertyInfo0.setAnnotationHelper((OptionsAnnotationHelper) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      // Undeclared exception!
      try { 
        propertyInfo0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.PropertyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Method) null);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PropertyInfo propertyInfo0 = new PropertyInfo((Field) null);
      OptionsAnnotationHelper optionsAnnotationHelper0 = propertyInfo0.getAnnotationHelper();
      assertNull(optionsAnnotationHelper0);
  }
}
