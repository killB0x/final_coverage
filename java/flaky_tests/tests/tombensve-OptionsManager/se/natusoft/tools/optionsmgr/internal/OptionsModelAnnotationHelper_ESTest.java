/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:53:32 GMT 2022
 */

package se.natusoft.tools.optionsmgr.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.natusoft.tools.optionsmgr.internal.OptionsModelAnnotationHelper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionsModelAnnotationHelper_ESTest extends OptionsModelAnnotationHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OptionsModelAnnotationHelper optionsModelAnnotationHelper0 = null;
      try {
        optionsModelAnnotationHelper0 = new OptionsModelAnnotationHelper((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("se.natusoft.tools.optionsmgr.internal.OptionsModelAnnotationHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      OptionsModelAnnotationHelper optionsModelAnnotationHelper0 = new OptionsModelAnnotationHelper(class0);
      boolean boolean0 = optionsModelAnnotationHelper0.hasDescription();
      assertFalse(boolean0);
      assertFalse(optionsModelAnnotationHelper0.hasNameAnnotation());
      assertFalse(optionsModelAnnotationHelper0.hasDescriptionAnnotation());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      OptionsModelAnnotationHelper optionsModelAnnotationHelper0 = new OptionsModelAnnotationHelper(class0);
      boolean boolean0 = optionsModelAnnotationHelper0.hasName();
      assertFalse(optionsModelAnnotationHelper0.hasNameAnnotation());
      assertFalse(boolean0);
      assertFalse(optionsModelAnnotationHelper0.hasDescriptionAnnotation());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      OptionsModelAnnotationHelper optionsModelAnnotationHelper0 = new OptionsModelAnnotationHelper(class0);
      optionsModelAnnotationHelper0.getDescription();
      assertFalse(optionsModelAnnotationHelper0.hasDescriptionAnnotation());
      assertFalse(optionsModelAnnotationHelper0.hasNameAnnotation());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      OptionsModelAnnotationHelper optionsModelAnnotationHelper0 = new OptionsModelAnnotationHelper(class0);
      boolean boolean0 = optionsModelAnnotationHelper0.hasDescriptionAnnotation();
      assertFalse(boolean0);
      assertFalse(optionsModelAnnotationHelper0.hasNameAnnotation());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      OptionsModelAnnotationHelper optionsModelAnnotationHelper0 = new OptionsModelAnnotationHelper(class0);
      boolean boolean0 = optionsModelAnnotationHelper0.hasNameAnnotation();
      assertFalse(boolean0);
      assertFalse(optionsModelAnnotationHelper0.hasDescriptionAnnotation());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      OptionsModelAnnotationHelper optionsModelAnnotationHelper0 = new OptionsModelAnnotationHelper(class0);
      optionsModelAnnotationHelper0.getName();
      assertFalse(optionsModelAnnotationHelper0.hasNameAnnotation());
      assertFalse(optionsModelAnnotationHelper0.hasDescriptionAnnotation());
  }
}
