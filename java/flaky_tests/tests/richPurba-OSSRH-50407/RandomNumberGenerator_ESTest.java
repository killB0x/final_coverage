/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 02:04:22 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomNumberGenerator_ESTest extends RandomNumberGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomNumberGenerator randomNumberGenerator0 = new RandomNumberGenerator();
      try { 
        randomNumberGenerator0.getRandomNumber();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // IO exception is thrown while calling the APIorg.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: qrng.anu.edu.au
         //
         verifyException("RandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://qrng.anu.edu.au/API/jsonI.php?length=100&type=uint8");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "G'");
      RandomNumberGenerator randomNumberGenerator0 = new RandomNumberGenerator();
      // Undeclared exception!
      try { 
        randomNumberGenerator0.getRandomNumber();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/Gson
         //
         verifyException("RandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RandomNumberGenerator randomNumberGenerator0 = new RandomNumberGenerator();
      randomNumberGenerator0.queryParameters = null;
      // Undeclared exception!
      try { 
        randomNumberGenerator0.getRandomNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("RandomNumberGenerator", e);
      }
  }
}
