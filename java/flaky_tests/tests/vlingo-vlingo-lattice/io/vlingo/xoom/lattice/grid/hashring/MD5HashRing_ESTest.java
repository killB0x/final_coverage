/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 12:11:15 GMT 2022
 */

package io.vlingo.xoom.lattice.grid.hashring;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.lattice.grid.cache.Cache;
import io.vlingo.xoom.lattice.grid.cache.CacheNodePoint;
import io.vlingo.xoom.lattice.grid.hashring.HashedNodePoint;
import io.vlingo.xoom.lattice.grid.hashring.MD5ArrayHashRing;
import io.vlingo.xoom.lattice.grid.hashring.MD5ListHashRing;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MD5HashRing_ESTest extends MD5HashRing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(anyInt() , any());
      MD5ArrayHashRing<Object> mD5ArrayHashRing0 = new MD5ArrayHashRing<Object>((-1386), biFunction0);
      BiFunction<Integer, CacheNodePoint<Integer>, HashedNodePoint<CacheNodePoint<Integer>>> biFunction1 = (BiFunction<Integer, CacheNodePoint<Integer>, HashedNodePoint<CacheNodePoint<Integer>>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MD5ArrayHashRing<CacheNodePoint<Integer>> mD5ArrayHashRing1 = new MD5ArrayHashRing<CacheNodePoint<Integer>>((-1386), biFunction1);
      HashedNodePoint<Object> hashedNodePoint0 = mD5ArrayHashRing0.hashedNodePointOf(mD5ArrayHashRing1);
      assertNull(hashedNodePoint0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MD5ArrayHashRing<Object> mD5ArrayHashRing0 = new MD5ArrayHashRing<Object>(0, biFunction0);
      Cache cache0 = Cache.defaultCache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 0, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction1 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0).when(biFunction1).apply(anyInt() , any());
      MD5ListHashRing<Object> mD5ListHashRing0 = new MD5ListHashRing<Object>(0, biFunction1);
      HashedNodePoint<Object> hashedNodePoint0 = mD5ListHashRing0.hashedNodePointOf(mD5ArrayHashRing0);
      assertEquals(0, hashedNodePoint0.hash());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Cache cache0 = new Cache("'I'a");
      Integer integer0 = new Integer(0);
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 1506, integer0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0).when(biFunction0).apply(anyInt() , any());
      MD5ArrayHashRing<Object> mD5ArrayHashRing0 = new MD5ArrayHashRing<Object>(0, biFunction0);
      HashedNodePoint<Object> hashedNodePoint0 = mD5ArrayHashRing0.hashedNodePointOf(integer0);
      assertEquals(1506, hashedNodePoint0.hash());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-14));
      Cache cache0 = Cache.of("");
      CacheNodePoint<Object> cacheNodePoint0 = (CacheNodePoint<Object>) mock(CacheNodePoint.class, new ViolatedAssumptionAnswer());
      CacheNodePoint<CacheNodePoint<Object>> cacheNodePoint1 = new CacheNodePoint<CacheNodePoint<Object>>(cache0, (-14), cacheNodePoint0);
      BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>> biFunction0 = (BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(anyInt() , any(io.vlingo.xoom.lattice.grid.cache.CacheNodePoint.class));
      MD5ListHashRing<CacheNodePoint<Object>> mD5ListHashRing0 = new MD5ListHashRing<CacheNodePoint<Object>>((-14), biFunction0);
      HashedNodePoint<CacheNodePoint<Object>> hashedNodePoint0 = mD5ListHashRing0.hashedNodePointOf(integer0);
      assertEquals((-14), hashedNodePoint0.hash());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MD5ArrayHashRing<Object> mD5ArrayHashRing0 = new MD5ArrayHashRing<Object>((-14), biFunction0);
      BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>> biFunction1 = (BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MD5ListHashRing<CacheNodePoint<Object>> mD5ListHashRing0 = new MD5ListHashRing<CacheNodePoint<Object>>((-14), biFunction1);
      int int0 = mD5ListHashRing0.hashed(mD5ArrayHashRing0);
      assertEquals(1509526104, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>> biFunction0 = (BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MD5ArrayHashRing<CacheNodePoint<Object>> mD5ArrayHashRing0 = new MD5ArrayHashRing<CacheNodePoint<Object>>(2510, biFunction0);
      Integer integer0 = new Integer(2510);
      int int0 = mD5ArrayHashRing0.hashed(integer0);
      assertEquals((-1287754092), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MD5ListHashRing<Object> mD5ListHashRing0 = new MD5ListHashRing<Object>((-2608), (BiFunction<Integer, Object, HashedNodePoint<Object>>) null);
      // Undeclared exception!
      try { 
        mD5ListHashRing0.hashedNodePointOf((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MD5ListHashRing<Integer> mD5ListHashRing0 = new MD5ListHashRing<Integer>(0, (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null);
      // Undeclared exception!
      try { 
        mD5ListHashRing0.hashed((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
