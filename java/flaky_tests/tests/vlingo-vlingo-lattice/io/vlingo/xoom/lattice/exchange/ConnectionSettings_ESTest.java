/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:46:41 GMT 2022
 */

package io.vlingo.xoom.lattice.exchange;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.lattice.exchange.ConnectionSettings;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionSettings_ESTest extends ConnectionSettings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionSettings connectionSettings0 = ConnectionSettings.instance("~C.'", 2863, "n>^.VIl1JbNIQ", "~C.'", "localhost");
      assertEquals(2863, connectionSettings0.port);
      assertTrue(connectionSettings0.hasUserCredentials());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConnectionSettings.instance("", 2089, (String) null, "", "\"^lLZEy@#, Us.;~AT");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionSettings connectionSettings0 = null;
      try {
        connectionSettings0 = new ConnectionSettings("io.vlingo.xoom.lattice.exchange.ConnectionSettings", 1, (String) null, (String) null, (String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionSettings connectionSettings0 = ConnectionSettings.instance("jEEF8zqJW4", (-1), "", "Dcg*~G5TXN", (String) null);
      boolean boolean0 = connectionSettings0.hasUserCredentials();
      assertEquals((-1), connectionSettings0.port);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionSettings connectionSettings0 = new ConnectionSettings("", (-2150), "", "XbQcf!3tCve", "");
      boolean boolean0 = connectionSettings0.hasUserCredentials();
      assertTrue(boolean0);
      assertEquals((-2150), connectionSettings0.port);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionSettings connectionSettings0 = ConnectionSettings.instance("Xt\"<8", "");
      boolean boolean0 = connectionSettings0.hasUserCredentials();
      assertEquals((-1), connectionSettings0.port);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConnectionSettings connectionSettings0 = new ConnectionSettings("g\"Srcg1'`I.8vN-)", 13, "g\"Srcg1'`I.8vN-)", "g\"Srcg1'`I.8vN-)", "g\"Srcg1'`I.8vN-)");
      boolean boolean0 = connectionSettings0.hasPort();
      assertTrue(connectionSettings0.hasUserCredentials());
      assertTrue(boolean0);
      assertEquals(13, connectionSettings0.port);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionSettings connectionSettings0 = new ConnectionSettings("`\"Srcg1'`I.8=N-)", 0, "`\"Srcg1'`I.8=N-)", "`\"Srcg1'`I.8=N-)", "h_+I}1M]");
      boolean boolean0 = connectionSettings0.hasPort();
      assertTrue(connectionSettings0.hasUserCredentials());
      assertEquals(0, connectionSettings0.port);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionSettings connectionSettings0 = null;
      try {
        connectionSettings0 = new ConnectionSettings((String) null, (-1), "", "XbQcf!3tCve", "G/");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConnectionSettings.instance("/", (String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionSettings connectionSettings0 = ConnectionSettings.instance();
      boolean boolean0 = connectionSettings0.hasPort();
      assertEquals((-1), connectionSettings0.port);
      assertFalse(boolean0);
  }
}
