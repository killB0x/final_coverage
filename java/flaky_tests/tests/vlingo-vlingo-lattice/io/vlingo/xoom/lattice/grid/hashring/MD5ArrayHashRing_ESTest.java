/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:52:12 GMT 2022
 */

package io.vlingo.xoom.lattice.grid.hashring;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.lattice.grid.cache.Cache;
import io.vlingo.xoom.lattice.grid.cache.CacheNodePoint;
import io.vlingo.xoom.lattice.grid.hashring.HashRing;
import io.vlingo.xoom.lattice.grid.hashring.HashedNodePoint;
import io.vlingo.xoom.lattice.grid.hashring.MD5ArrayHashRing;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MD5ArrayHashRing_ESTest extends MD5ArrayHashRing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Cache cache0 = Cache.defaultCache();
      Integer integer0 = new Integer(4);
      CacheNodePoint<Integer> cacheNodePoint0 = new CacheNodePoint<Integer>(cache0, 4, integer0);
      BiFunction<Integer, Integer, HashedNodePoint<Integer>> biFunction0 = (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0, cacheNodePoint0, cacheNodePoint0, cacheNodePoint0).when(biFunction0).apply(anyInt() , anyInt());
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>(4, biFunction0);
      HashRing<Integer> hashRing0 = mD5ArrayHashRing0.includeNode(integer0);
      assertNotNull(hashRing0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Cache cache0 = new Cache("NODES: ");
      Integer integer0 = new Integer((-2146));
      CacheNodePoint<Integer> cacheNodePoint0 = new CacheNodePoint<Integer>(cache0, 1, integer0);
      BiFunction<Integer, Integer, HashedNodePoint<Integer>> biFunction0 = (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0, (Object) null).when(biFunction0).apply(anyInt() , anyInt());
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>(1, biFunction0);
      mD5ArrayHashRing0.includeNode(integer0);
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.includeNode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Comparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Cache cache0 = new Cache("NODES: ");
      Integer integer0 = new Integer((-2146));
      CacheNodePoint<Integer> cacheNodePoint0 = new CacheNodePoint<Integer>(cache0, 1, integer0);
      BiFunction<Integer, Integer, HashedNodePoint<Integer>> biFunction0 = (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0).when(biFunction0).apply(anyInt() , anyInt());
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>(1, biFunction0);
      Integer integer1 = new Integer(1);
      mD5ArrayHashRing0.includeNode(integer1);
      Cache.defaultCache();
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.excludeNode(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MD5ArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>(1013, (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null);
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.nodeOf(mD5ArrayHashRing0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MD5HashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>((-2971), (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null);
      Integer integer0 = new Integer((-2971));
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.includeNode(integer0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2971
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MD5ArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>((-2971), (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null);
      Integer integer0 = Integer.getInteger("e]Kzb[qNB", (-2971));
      mD5ArrayHashRing0.excludeNode(integer0);
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.includeNode(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MD5ArrayHashRing<Object> mD5ArrayHashRing0 = new MD5ArrayHashRing<Object>(0, (BiFunction<Integer, Object, HashedNodePoint<Object>>) null);
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.excludeNode((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BiFunction<Integer, Integer, HashedNodePoint<Integer>> biFunction0 = (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(anyInt() , anyInt());
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>((-3347), biFunction0);
      Integer integer0 = new Integer((-3347));
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.nodeOf(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MD5ArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>((-2971), (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null);
      Integer integer0 = Integer.getInteger("e]Kzb[qNB", (-1));
      mD5ArrayHashRing0.excludeNode(integer0);
      mD5ArrayHashRing0.dump();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Integer integer0 = new Integer((-2146));
      BiFunction<Integer, Integer, HashedNodePoint<Integer>> biFunction0 = (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MD5ArrayHashRing<Integer> mD5ArrayHashRing0 = new MD5ArrayHashRing<Integer>(1, biFunction0);
      // Undeclared exception!
      try { 
        mD5ArrayHashRing0.excludeNode(integer0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MD5ArrayHashRing", e);
      }
  }
}
