/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:48:38 GMT 2022
 */

package io.vlingo.xoom.lattice.grid.hashring;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.lattice.grid.cache.Cache;
import io.vlingo.xoom.lattice.grid.cache.CacheNodePoint;
import io.vlingo.xoom.lattice.grid.hashring.HashRing;
import io.vlingo.xoom.lattice.grid.hashring.HashedNodePoint;
import io.vlingo.xoom.lattice.grid.hashring.MurmurArrayHashRing;
import java.nio.BufferOverflowException;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MurmurArrayHashRing_ESTest extends MurmurArrayHashRing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cache cache0 = new Cache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 1, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0, cacheNodePoint0).when(biFunction0).apply(anyInt() , any());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(1, biFunction0, 1);
      murmurArrayHashRing0.includeNode(cache0);
      Object object0 = murmurArrayHashRing0.nodeOf(cache0);
      assertSame(cache0, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cache cache0 = Cache.defaultCache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 64, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0, cacheNodePoint0, cacheNodePoint0, cacheNodePoint0, cacheNodePoint0).when(biFunction0).apply(anyInt() , any());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(64, biFunction0, 0);
      Integer integer0 = new Integer(1099);
      murmurArrayHashRing0.includeNode(integer0);
      HashRing<Object> hashRing0 = murmurArrayHashRing0.includeNode(murmurArrayHashRing0);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.excludeNode(hashRing0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 64 out of bounds for length 64
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MurmurArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashedNodePoint<Integer> hashedNodePoint0 = (HashedNodePoint<Integer>) mock(HashedNodePoint.class, new ViolatedAssumptionAnswer());
      BiFunction<Integer, Integer, HashedNodePoint<Integer>> biFunction0 = (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(hashedNodePoint0, (Object) null).when(biFunction0).apply(anyInt() , anyInt());
      MurmurArrayHashRing<Integer> murmurArrayHashRing0 = new MurmurArrayHashRing<Integer>(817, biFunction0, (-1));
      BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>> biFunction1 = (BiFunction<Integer, CacheNodePoint<Object>, HashedNodePoint<CacheNodePoint<Object>>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MurmurArrayHashRing<CacheNodePoint<Object>> murmurArrayHashRing1 = new MurmurArrayHashRing<CacheNodePoint<Object>>(0, biFunction1, 0);
      Integer integer0 = new Integer(552);
      Cache.defaultCache();
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.includeNode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MurmurArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cache cache0 = Cache.defaultCache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 3, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0, cacheNodePoint0, cacheNodePoint0).when(biFunction0).apply(anyInt() , any());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(3, biFunction0, 3);
      HashRing<Object> hashRing0 = murmurArrayHashRing0.includeNode(cache0);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.nodeOf(hashRing0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cache cache0 = new Cache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 3074, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0, cacheNodePoint0, cacheNodePoint0, cacheNodePoint0, cacheNodePoint0).when(biFunction0).apply(anyInt() , any());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(3074, biFunction0, 3074);
      // Undeclared exception!
      murmurArrayHashRing0.includeNode(cache0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(3620, (BiFunction<Integer, Object, HashedNodePoint<Object>>) null);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.includeNode((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>((-9), (BiFunction<Integer, Object, HashedNodePoint<Object>>) null);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.includeNode((Object) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -9
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MurmurArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-372));
      MurmurArrayHashRing<Integer> murmurArrayHashRing0 = new MurmurArrayHashRing<Integer>((-372), (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null, (-372));
      murmurArrayHashRing0.excludeNode(integer0);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.includeNode(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>((-82), (BiFunction<Integer, Object, HashedNodePoint<Object>>) null, (-82));
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.excludeNode((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MurmurArrayHashRing<Integer> murmurArrayHashRing0 = new MurmurArrayHashRing<Integer>((-925), (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null, (-925));
      Integer integer0 = murmurArrayHashRing0.nodeOf((Object) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cache cache0 = Cache.defaultCache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 64, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0, cacheNodePoint0, cacheNodePoint0, cacheNodePoint0, cacheNodePoint0).when(biFunction0).apply(anyInt() , any());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(64, biFunction0, 0);
      Integer integer0 = new Integer(1099);
      murmurArrayHashRing0.includeNode(integer0);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.excludeNode(murmurArrayHashRing0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MurmurArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MurmurArrayHashRing<Integer> murmurArrayHashRing0 = new MurmurArrayHashRing<Integer>((-925), (BiFunction<Integer, Integer, HashedNodePoint<Integer>>) null, (-925));
      Integer integer0 = new Integer((-925));
      murmurArrayHashRing0.excludeNode(integer0);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.nodeOf((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Cache cache0 = new Cache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 1, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(cacheNodePoint0).when(biFunction0).apply(anyInt() , any());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(1, biFunction0, 1);
      murmurArrayHashRing0.includeNode(cache0);
      murmurArrayHashRing0.dump();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(64, biFunction0, 0);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.excludeNode(murmurArrayHashRing0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -64
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MurmurArrayHashRing", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Cache cache0 = Cache.defaultCache();
      CacheNodePoint<Object> cacheNodePoint0 = new CacheNodePoint<Object>(cache0, 64, cache0);
      BiFunction<Integer, Object, HashedNodePoint<Object>> biFunction0 = (BiFunction<Integer, Object, HashedNodePoint<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(anyInt() , any());
      MurmurArrayHashRing<Object> murmurArrayHashRing0 = new MurmurArrayHashRing<Object>(64, biFunction0, 0);
      Integer integer0 = new Integer(1099);
      // Undeclared exception!
      try { 
        murmurArrayHashRing0.includeNode(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.lattice.grid.hashring.MurmurArrayHashRing", e);
      }
  }
}
