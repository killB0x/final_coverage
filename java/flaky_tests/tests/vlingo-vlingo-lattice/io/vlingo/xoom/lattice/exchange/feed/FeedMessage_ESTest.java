/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:41:14 GMT 2022
 */

package io.vlingo.xoom.lattice.exchange.feed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.lattice.exchange.feed.FeedMessage;
import io.vlingo.xoom.lattice.exchange.feed.FeedMessageBody;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FeedMessage_ESTest extends FeedMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FeedMessageBody feedMessageBody0 = FeedMessageBody.with(">@2pwVO},cd?Y");
      FeedMessage feedMessage0 = new FeedMessage("C^n", feedMessageBody0, ">@2pwVO},cd?Y", 962);
      assertEquals(962, feedMessage0.version);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FeedMessageBody feedMessageBody0 = new FeedMessageBody("io.vlingo.xoom.lattice.exchange.feed.FeedMessage");
      FeedMessage feedMessage0 = null;
      try {
        feedMessage0 = new FeedMessage("io.vlingo.xoom.lattice.exchange.feed.FeedMessage", feedMessageBody0, (String) null, 1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FeedMessage feedMessage0 = null;
      try {
        feedMessage0 = new FeedMessage("3e^Yxx", (FeedMessageBody) null, "", (-4046));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FeedMessageBody feedMessageBody0 = new FeedMessageBody("");
      FeedMessage feedMessage0 = null;
      try {
        feedMessage0 = new FeedMessage("x3!lJdTr47*m7", feedMessageBody0, "", 0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FeedMessageBody feedMessageBody0 = FeedMessageBody.with("tv/'>");
      // Undeclared exception!
      try { 
        FeedMessage.with("tv/'>", feedMessageBody0, (String) null, 0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FeedMessageBody feedMessageBody0 = new FeedMessageBody("");
      FeedMessage feedMessage0 = null;
      try {
        feedMessage0 = new FeedMessage("", feedMessageBody0, "", 1259);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FeedMessageBody feedMessageBody0 = new FeedMessageBody((String) null);
      FeedMessage feedMessage0 = null;
      try {
        feedMessage0 = new FeedMessage((String) null, feedMessageBody0, (String) null, 0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FeedMessageBody feedMessageBody0 = FeedMessageBody.with(">@2pwVO},cd?Y");
      FeedMessage feedMessage0 = FeedMessage.with("C^n", feedMessageBody0, ">@2pwVO},cd?Y", 0);
      assertEquals(0, feedMessage0.version);
  }
}
