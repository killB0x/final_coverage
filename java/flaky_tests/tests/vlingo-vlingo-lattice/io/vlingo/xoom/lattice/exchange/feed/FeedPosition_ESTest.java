/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:55:36 GMT 2022
 */

package io.vlingo.xoom.lattice.exchange.feed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.lattice.exchange.feed.FeedItem;
import io.vlingo.xoom.lattice.exchange.feed.FeedItemId;
import io.vlingo.xoom.lattice.exchange.feed.FeedMessage;
import io.vlingo.xoom.lattice.exchange.feed.FeedPosition;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FeedPosition_ESTest extends FeedPosition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FeedItemId feedItemId0 = new FeedItemId("Vo,du0Rm_xw\"t}QM");
      LinkedList<FeedMessage> linkedList0 = new LinkedList<FeedMessage>();
      FeedItem feedItem0 = FeedItem.currentFeedWith(feedItemId0, feedItemId0, linkedList0);
      FeedPosition feedPosition0 = new FeedPosition("\"KUV:kGl", "Vo,du0Rm_xw\"t}QM", feedItem0);
      FeedItem feedItem1 = FeedItem.archivedFeedItemWith(feedItem0.id, feedItem0.id, feedItem0.nextId, linkedList0);
      FeedPosition feedPosition1 = feedPosition0.with(feedItem1);
      // Undeclared exception!
      try { 
        feedPosition1.is((String) null, (String) null, feedPosition0.feedItemId);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FeedPosition feedPosition0 = new FeedPosition("{G#),6~X%]", "{G#),6~X%]", (FeedItem) null);
      FeedPosition feedPosition1 = feedPosition0.is("{G#),6~X%]", "{G#),6~X%]", (FeedItem) null);
      assertFalse(feedPosition1.equals((Object)feedPosition0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FeedPosition feedPosition0 = null;
      try {
        feedPosition0 = new FeedPosition("i", "", (FeedItem) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FeedPosition feedPosition0 = null;
      try {
        feedPosition0 = new FeedPosition((String) null, (String) null, (FeedItem) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FeedPosition feedPosition0 = null;
      try {
        feedPosition0 = new FeedPosition("i", (String) null, (FeedItem) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FeedPosition feedPosition0 = null;
      try {
        feedPosition0 = new FeedPosition("", "", (FeedItem) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
