/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 17:55:22 GMT 2022
 */

package com.rtfparserkit.parser.raw;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.rtfparserkit.parser.IRtfSource;
import com.rtfparserkit.parser.RtfListenerAdaptor;
import com.rtfparserkit.parser.RtfStreamSource;
import com.rtfparserkit.parser.RtfStringSource;
import com.rtfparserkit.parser.raw.RawRtfParser;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RawRtfParser_ESTest extends RawRtfParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      RtfStringSource rtfStringSource0 = new RtfStringSource("JNX_(h{(7_QCRj");
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      // Undeclared exception!
      try { 
        rawRtfParser0.parse(rtfStringSource0, rtfListenerAdaptor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unmatched brace
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(byteArrayInputStream0);
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      rtfStreamSource0.unread((-620));
      rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      // Undeclared exception!
      try { 
        rawRtfParser0.parse((IRtfSource) null, rtfListenerAdaptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1233), (byte)5);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(bufferedInputStream0);
      // Undeclared exception!
      try { 
        rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(pipedInputStream0);
      try { 
        rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(byteArrayInputStream0);
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      // Undeclared exception!
      try { 
        rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/rtfparserkit/rtf/Command
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(byteArrayInputStream0);
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      // Undeclared exception!
      try { 
        rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/rtfparserkit/rtf/Command
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(byteArrayInputStream0);
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      try { 
        rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RtfStringSource rtfStringSource0 = new RtfStringSource("N>O/*}");
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      // Undeclared exception!
      try { 
        rawRtfParser0.parse(rtfStringSource0, rtfListenerAdaptor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Group stack underflow
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(byteArrayInputStream0);
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(byteArrayInputStream0);
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RtfStreamSource rtfStreamSource0 = new RtfStreamSource(byteArrayInputStream0);
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      // Undeclared exception!
      try { 
        rawRtfParser0.parse(rtfStreamSource0, rtfListenerAdaptor0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/rtfparserkit/rtf/Command
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawRtfParser rawRtfParser0 = new RawRtfParser();
      RtfStringSource rtfStringSource0 = new RtfStringSource("tWzPsO}jdTQg5.c");
      RtfListenerAdaptor rtfListenerAdaptor0 = new RtfListenerAdaptor();
      // Undeclared exception!
      try { 
        rawRtfParser0.parse(rtfStringSource0, rtfListenerAdaptor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Group stack underflow
         //
         verifyException("com.rtfparserkit.parser.raw.RawRtfParser", e);
      }
  }
}
