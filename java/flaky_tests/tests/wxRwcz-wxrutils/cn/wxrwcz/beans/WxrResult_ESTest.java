/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:53:39 GMT 2022
 */

package cn.wxrwcz.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import cn.wxrwcz.beans.WxrResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WxrResult_ESTest extends WxrResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Integer> wxrResult0 = new WxrResult<Integer>(integer0, "trx7,&_*~;~$6g{CY", integer0);
      assertEquals(0, (int)wxrResult0.getCode());
      
      wxrResult0.setCode((Integer) null);
      assertEquals("trx7,&_*~;~$6g{CY", wxrResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Object> wxrResult0 = WxrResult.build((Integer) null, (String) null, (Object) integer0);
      String string0 = wxrResult0.getMsg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_FAIL;
      WxrResult<Integer> wxrResult0 = WxrResult.build(integer0, "");
      String string0 = wxrResult0.getMsg();
      assertEquals(1, (int)wxrResult0.getCode());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WxrResult<Object> wxrResult0 = WxrResult.fail();
      wxrResult0.getData();
      assertEquals(1, (int)wxrResult0.getCode());
      assertEquals("\u64CD\u4F5C\u5931\u8D25", wxrResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WxrResult<Object> wxrResult0 = WxrResult.ok();
      WxrResult<Object> wxrResult1 = WxrResult.getResult((Object) wxrResult0);
      WxrResult wxrResult2 = (WxrResult)wxrResult1.getData();
      assertEquals("\u64CD\u4F5C\u6210\u529F", wxrResult1.getMsg());
      assertEquals(0, (int)wxrResult2.getCode());
      assertEquals(0, (int)wxrResult1.getCode());
      assertEquals("\u64CD\u4F5C\u6210\u529F", wxrResult2.getMsg());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WxrResult<Integer> wxrResult0 = WxrResult.fail();
      Integer integer0 = wxrResult0.getCode();
      assertEquals(1, (int)integer0);
      assertEquals("\u64CD\u4F5C\u5931\u8D25", wxrResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Object> wxrResult0 = WxrResult.build((Integer) null, "\u64CD\u4F5C\u5931\u8D25", (Object) integer0);
      Integer integer1 = wxrResult0.getCode();
      assertNull(integer1);
      assertEquals("\u64CD\u4F5C\u5931\u8D25", wxrResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1));
      WxrResult<Object> wxrResult0 = WxrResult.build(integer0, "");
      Integer integer1 = wxrResult0.getCode();
      assertEquals((-1), (int)integer1);
      assertEquals("", wxrResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Integer> wxrResult0 = new WxrResult<Integer>(integer0, "trx7,&_*~;~$6g{CY", integer0);
      WxrResult<Object> wxrResult1 = new WxrResult<Object>(wxrResult0.CODE_SUCCESS);
      assertEquals(0, (int)wxrResult0.getCode());
      assertEquals("\u64CD\u4F5C\u6210\u529F", wxrResult1.getMsg());
      assertEquals("trx7,&_*~;~$6g{CY", wxrResult0.getMsg());
      assertEquals(0, (int)wxrResult1.getCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Integer> wxrResult0 = WxrResult.build(integer0, "\u64CD\u4F5C\u5931\u8D25");
      WxrResult<Object> wxrResult1 = WxrResult.build(wxrResult0.CODE_FAIL, "\u64CD\u4F5C\u6210\u529F", (Object) wxrResult0.CODE_FAIL);
      wxrResult1.setMsg("`#mM%@VqvnV]qP]tm");
      assertEquals("`#mM%@VqvnV]qP]tm", wxrResult1.getMsg());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Object> wxrResult0 = WxrResult.build(integer0, "\u64CD\u4F5C\u6210\u529F", (Object) integer0);
      wxrResult0.setData("\u64CD\u4F5C\u5931\u8D25");
      assertEquals("\u64CD\u4F5C\u6210\u529F", wxrResult0.getMsg());
      assertEquals(0, (int)wxrResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Integer> wxrResult0 = WxrResult.build(integer0, "\u64CD\u4F5C\u5931\u8D25");
      String string0 = wxrResult0.getMsg();
      assertEquals("\u64CD\u4F5C\u5931\u8D25", string0);
      assertEquals(0, (int)wxrResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WxrResult<Object> wxrResult0 = WxrResult.fail("\u64CD\u4F5C\u5931\u8D25");
      assertEquals("\u64CD\u4F5C\u5931\u8D25", wxrResult0.getMsg());
      assertEquals(1, (int)wxrResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Integer> wxrResult0 = WxrResult.build(integer0, "\u64CD\u4F5C\u5931\u8D25");
      WxrResult<Object> wxrResult1 = WxrResult.build(wxrResult0.CODE_SUCCESS, "\u64CD\u4F5C\u6210\u529F", (Object) wxrResult0.CODE_SUCCESS);
      Integer integer1 = wxrResult1.getCode();
      assertEquals(0, (int)wxrResult0.getCode());
      assertEquals("\u64CD\u4F5C\u6210\u529F", wxrResult1.getMsg());
      assertEquals(0, (int)integer1);
      assertEquals("\u64CD\u4F5C\u5931\u8D25", wxrResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = WxrResult.CODE_SUCCESS;
      WxrResult<Object> wxrResult0 = WxrResult.build((Integer) null, (String) null, (Object) integer0);
      WxrResult<Object> wxrResult1 = WxrResult.fail((Object) wxrResult0);
      assertEquals("\u64CD\u4F5C\u5931\u8D25", wxrResult1.getMsg());
      assertEquals(1, (int)wxrResult1.getCode());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WxrResult<Integer> wxrResult0 = WxrResult.ok((Integer) null);
      assertEquals(0, (int)wxrResult0.getCode());
      assertEquals("\u64CD\u4F5C\u6210\u529F", wxrResult0.getMsg());
  }
}
