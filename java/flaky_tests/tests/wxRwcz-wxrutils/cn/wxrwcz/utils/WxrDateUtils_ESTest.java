/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:36:18 GMT 2022
 */

package cn.wxrwcz.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cn.wxrwcz.utils.WxrDateUtils;
import cn.wxrwcz.utils.type.DateFormatter;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WxrDateUtils_ESTest extends WxrDateUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Date date0 = WxrDateUtils.strToDate("2014-02-14 20:21:21");
      Integer integer0 = new Integer(3044);
      Date date1 = WxrDateUtils.addAssignTimeHour(integer0);
      Boolean boolean0 = WxrDateUtils.dateCompareGreater(date0, date1);
      assertEquals("Sat Jun 21 16:21:21 GMT 2014", date1.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("20140214202121", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("", "|0~=,rTSC@%aH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'r'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("FR/Ys2^VUR*%{?cz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("o.3 -lYvPDgg9Y");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Date date0 = WxrDateUtils.addAssignTimeHour(integer0);
      Integer integer1 = new Integer(1787);
      Date date1 = WxrDateUtils.addAssignTime(integer1, integer1, integer1, integer1, integer0, integer1);
      Date date2 = WxrDateUtils.dateAddDate(date1, date0);
      assertEquals("Sat Feb 19 07:51:08 GMT 3955", date2.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Date date0 = WxrDateUtils.addAssignTimeHour(integer0);
      Date date1 = WxrDateUtils.getAssignTime(integer0);
      Date date2 = WxrDateUtils.dateAddDate(date1, date0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date2.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate(11, (-715), (-715));
      // Undeclared exception!
      try { 
        WxrDateUtils.dateAddDate((Date) null, mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(100);
      Integer integer1 = new Integer(0);
      Date date0 = WxrDateUtils.addAssignTime(integer1, integer0);
      Date date1 = WxrDateUtils.addAssignTime(integer1, integer1, integer0);
      int int0 = WxrDateUtils.differentDays(date0, date1);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-52), (-52), (-52), (-52), (-52));
      Date date0 = WxrDateUtils.dateAddDate(mockDate0, mockDate0);
      int int0 = WxrDateUtils.differentDays(mockDate0, date0);
      assertEquals(142, int0);
      assertEquals("Fri Nov 25 17:54:38 GMT 1672", date0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-547));
      Integer integer1 = new Integer(1132);
      Date date0 = WxrDateUtils.getAssignTime(integer0, integer1, (Integer) null, integer1);
      assertEquals("Tue Oct 02 04:21:21 GMT 2012", date0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(12);
      Date date0 = WxrDateUtils.addAssignTime((Integer) null, integer0, (Integer) null);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(4024);
      Integer integer1 = new Integer(5270);
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer0, integer1, integer1);
      assertEquals("Sat Jun 25 10:21:21 GMT 6388", date0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(4024);
      Integer integer1 = new Integer(4024);
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer1, integer1, integer0);
      assertEquals("Wed Dec 05 12:21:21 GMT 6384", date0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(939);
      Integer integer1 = new Integer(939);
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer1, integer0, integer1, integer1);
      assertEquals("Fri Jan 17 15:00:21 GMT 3034", date0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(6);
      Integer integer1 = new Integer(6);
      Date date0 = WxrDateUtils.addAssignTime(integer1, integer0, integer1, integer0, integer1);
      assertEquals("Fri Aug 21 02:27:21 GMT 2020", date0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-547));
      Integer integer1 = new Integer(1119);
      Date date0 = WxrDateUtils.addAssignTime(integer1, integer0, integer0, integer1, integer1);
      assertEquals("Tue Mar 02 06:00:21 GMT 3086", date0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Date date0 = WxrDateUtils.strToDate("20140214202121", "20140214202121");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long((-808));
      String string0 = WxrDateUtils.stampToDate(long0);
      assertEquals("1969-12-31 23:59:59", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      int int0 = WxrDateUtils.differentDaysByMillisecond(mockDate0, mockDate0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(1986);
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer0);
      Date date1 = WxrDateUtils.addAssignTimeSecond(integer0);
      int int0 = WxrDateUtils.differentDaysByMillisecond(date1, date0);
      assertEquals(725370, int0);
      assertEquals("Fri Feb 14 20:54:27 GMT 2014", date1.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(2828);
      Date date0 = WxrDateUtils.getAssignTime(integer0, integer0, integer0, integer0);
      WxrDateUtils.dateToStr(date0, "");
      assertEquals("Fri Nov 12 20:21:21 GMT 2021", date0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(2828);
      Date date0 = WxrDateUtils.getAssignTime(integer0, integer0, integer0, integer0);
      DateFormatter dateFormatter0 = DateFormatter.TIME_FORMAT_TIME;
      String string0 = WxrDateUtils.dateToStr(date0, dateFormatter0);
      assertEquals("20211112", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Date date0 = WxrDateUtils.getYesterdayTime();
      String string0 = WxrDateUtils.dateToStr(date0);
      assertEquals("2014-02-13 20:21:21", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer((-947));
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer0, (Integer) null);
      MockDate mockDate0 = new MockDate(253, (-2949), Integer.MAX_VALUE);
      // Undeclared exception!
      WxrDateUtils.differentDays(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.differentDays((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Date date0 = WxrDateUtils.getYesterdayTime();
      // Undeclared exception!
      try { 
        WxrDateUtils.dateToStr(date0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.dateToStr((Date) null, "J[kq|*0?XIX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'J'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.dateCompareGreater((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WxrDateUtils.getTimestamp((Date) null);
      assertEquals("20140214202121", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer(4);
      Date date0 = WxrDateUtils.addAssignTimeMinute(integer0);
      Date date1 = WxrDateUtils.dateAddDate(date0, date0);
      String string0 = WxrDateUtils.getAssignTimeToStr(date1, (Boolean) null);
      assertEquals("2014-02-14 20:29:21", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer((-365));
      Date date0 = WxrDateUtils.getAssignTime(integer0, (Integer) null, integer0, (Integer) null);
      assertEquals("Thu Feb 14 13:55:21 GMT 2013", date0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = new Integer(1438);
      Date date0 = WxrDateUtils.getAssignTime((Integer) null, (Integer) null, integer0, integer0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer((-1806));
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer0, integer0, integer0, (Integer) null, (Integer) null);
      assertEquals("Tue Jun 20 14:21:21 GMT 52", date0.toString());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(1438);
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer0, integer0, (Integer) null, integer0, (Integer) null);
      assertEquals("Sat Nov 22 20:19:21 GMT 3575", date0.toString());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = new Integer(4024);
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer0, (Integer) null, integer0, integer0, integer0);
      assertEquals("Sun Dec 02 08:32:25 GMT 6373", date0.toString());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Integer integer0 = new Integer(8);
      Date date0 = WxrDateUtils.addAssignTime(integer0, (Integer) null, integer0, integer0, integer0, integer0);
      assertEquals("Wed Feb 23 04:29:29 GMT 2022", date0.toString());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Integer integer0 = new Integer(8);
      Date date0 = WxrDateUtils.addAssignTime((Integer) null, integer0, integer0, integer0, integer0, integer0);
      assertEquals("Thu Oct 23 04:29:29 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer(5);
      Date date0 = WxrDateUtils.addAssignTimeSecond(integer0);
      Date date1 = WxrDateUtils.getAssignZeroTime(date0, (Integer) null);
      assertEquals("Fri Feb 14 20:21:26 GMT 2014", date1.toString());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Date date0 = WxrDateUtils.getAssignZeroTime((Date) null, integer0);
      assertEquals("Sat Feb 15 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Integer integer0 = new Integer(4);
      Date date0 = WxrDateUtils.getAssignTime(integer0, integer0);
      assertEquals("Tue Feb 18 04:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Integer integer0 = new Integer(1438);
      Date date0 = WxrDateUtils.getAssignTime(integer0, (Integer) null, integer0);
      assertEquals("Tue Jan 23 19:58:21 GMT 2018", date0.toString());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DateFormatter dateFormatter0 = DateFormatter.TIME_FORMAT_TIMESTMP;
      // Undeclared exception!
      try { 
        WxrDateUtils.dateToStr((Date) null, dateFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-54369964800000L));
      Boolean boolean0 = WxrDateUtils.dateCompareGreater(mockDate0, mockDate1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Date date0 = WxrDateUtils.getTodayZeroTime();
      Boolean boolean0 = WxrDateUtils.dateCompareGreater(date0, date0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate(">9XO'hT$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Date date0 = WxrDateUtils.strToDate("20140214202121");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("yyy\u5E74MM\u6708dd\u65E5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("yyyy\u5E74MM\u6708dd\u65E5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("yyyy\u5E74MM\u6708dd");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("yyyy\u5E74MM\u6708dd\u65E5 HH:mm:ss");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("\u5E74");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("yyyy/MM/dd HH:mm:ss");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate(";)KsN/vh.w");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("p%-=/n~Ieo");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate("-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.strToDate(")KsN/vh.w");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \u88AB\u8F6C\u5316\u7684\u65E5\u671F\u4E0D\u6B63\u786E
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Date date0 = WxrDateUtils.getTodayZeroTime();
      int int0 = WxrDateUtils.differentDays(date0, date0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      MockDate mockDate0 = new MockDate(31, 31, 31, 31, 31);
      Date date0 = WxrDateUtils.getAssignTime();
      int int0 = WxrDateUtils.differentDays(mockDate0, date0);
      assertEquals(29386, int0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("");
      String string0 = WxrDateUtils.getAssignTimeToStr((Date) null, boolean0);
      assertEquals("2014-02-14", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Integer integer0 = new Integer(576);
      Date date0 = WxrDateUtils.addAssignTime((Date) null, integer0);
      assertEquals("Sun Sep 13 20:21:21 GMT 2015", date0.toString());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Date date0 = WxrDateUtils.getAssignZeroTime((Date) null);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = WxrDateUtils.getTodayZeroTimeToStr();
      assertEquals("2014-02-14 20:21:21", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Date date0 = WxrDateUtils.addAssignTimeYear((Integer) null);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Date date0 = WxrDateUtils.getYesterdayTime();
      String string0 = WxrDateUtils.getTimestamp(date0);
      assertEquals("20140213202121", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.differentDaysByMillisecond((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String string0 = WxrDateUtils.getTodayZeroTimeToStr(boolean0);
      assertEquals("2014-02-14", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Date date0 = WxrDateUtils.getTodayZeroTime();
      Integer integer0 = new Integer((-670));
      Date date1 = WxrDateUtils.addAssignTime(date0, integer0);
      assertEquals("Sun Apr 15 20:21:21 GMT 2012", date1.toString());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.stampToDate((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrDateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Date date0 = WxrDateUtils.getAssignTime();
      Date date1 = WxrDateUtils.addAssignTime(date0, (Integer) null);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date1.toString());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrDateUtils.dateToStr((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Integer integer0 = new Integer((-947));
      Date date0 = WxrDateUtils.addAssignTime(integer0, integer0, (Integer) null);
      WxrDateUtils.dateToStr(date0, "/");
      assertEquals("Wed Feb 14 20:21:21 GMT 1067", date0.toString());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String string0 = WxrDateUtils.getTimestamp();
      assertEquals("20140214202121", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Date date0 = WxrDateUtils.addAssignTimeDay((Integer) null);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Date date0 = WxrDateUtils.addAssignTimeMonth((Integer) null);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }
}
