/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:49:50 GMT 2022
 */

package cn.wxrwcz.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cn.wxrwcz.utils.WxrRandomCaptchaUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WxrRandomCaptchaUtils_ESTest extends WxrRandomCaptchaUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(5004);
      WxrRandomCaptchaUtils.randomNum(integer0);
      // Undeclared exception!
      WxrRandomCaptchaUtils.randomNum(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrRandomCaptchaUtils.randomNum((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrRandomCaptchaUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(5004);
      WxrRandomCaptchaUtils.randomCode(integer0);
      // Undeclared exception!
      WxrRandomCaptchaUtils.randomCode(integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrRandomCaptchaUtils.randomCode((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrRandomCaptchaUtils.getRandom(2455);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      String string0 = WxrRandomCaptchaUtils.getRandom(integer0, (Boolean) null);
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1153);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        WxrRandomCaptchaUtils.getRandom(integer0, boolean0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = Boolean.TRUE;
      String string0 = WxrRandomCaptchaUtils.getRandom(integer0, boolean0);
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WxrRandomCaptchaUtils.getRandom((-4944));
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String string0 = WxrRandomCaptchaUtils.getRandom((Integer) null, boolean0);
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-4944));
      String string0 = WxrRandomCaptchaUtils.randomNum(integer0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-4944));
      String string0 = WxrRandomCaptchaUtils.randomCode(integer0);
      assertEquals("", string0);
  }
}
