/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:50:39 GMT 2022
 */

package cn.wxrwcz.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import cn.wxrwcz.utils.WxrBitOperationUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WxrBitOperationUtils_ESTest extends WxrBitOperationUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long long0 = WxrBitOperationUtils.addState(0L, (-2695L));
      assertEquals((-2695L), long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long long0 = WxrBitOperationUtils.removeState(0L, 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long long0 = WxrBitOperationUtils.addState(2021L, 2988L);
      assertEquals(2021L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = WxrBitOperationUtils.hasState(0L, 0L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long long0 = WxrBitOperationUtils.removeState(4L, 0L);
      assertEquals(4L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long long0 = WxrBitOperationUtils.removeState(28L, (-270L));
      assertEquals((-274L), long0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      long long0 = WxrBitOperationUtils.addState((-1L), (-1L));
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      boolean boolean0 = WxrBitOperationUtils.hasState((-1L), (-1L));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long long0 = WxrBitOperationUtils.addState(0L, 0L);
      assertEquals(0L, long0);
  }
}
