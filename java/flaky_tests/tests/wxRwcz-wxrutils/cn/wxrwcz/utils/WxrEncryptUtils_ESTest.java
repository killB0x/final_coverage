/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:45:20 GMT 2022
 */

package cn.wxrwcz.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cn.wxrwcz.utils.WxrEncryptUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WxrEncryptUtils_ESTest extends WxrEncryptUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WxrEncryptUtils.XORencode("a", "MD5");
      assertEquals("1F", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WxrEncryptUtils.keysizeDES = 2028;
      String string0 = WxrEncryptUtils.DESencode("", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WxrEncryptUtils.SHA1("", (String) null);
      assertEquals("PNDsPguR3NG2GxRvWARk5AVctto=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = WxrEncryptUtils.parseHexStr2Byte("AES");
      assertArrayEquals(new byte[] {(byte) (-82)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WxrEncryptUtils.XORencode("", "DES");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WxrEncryptUtils.XORdecode("\"", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = WxrEncryptUtils.XOR(0, "");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = WxrEncryptUtils.XOR((-1), "@rf");
      assertEquals((-65141), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WxrEncryptUtils.WxrBase64Encode("utf-8");
      assertEquals("dXRmLTg=", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WxrEncryptUtils.WxrBase64Decode("QQwWdVlqd5RT/HttxpCrnAnoXK4=");
      assertEquals("A\f\u0016uYjw\uFFFDS\uFFFD{m\uFFFD\uFFFD\uFFFD\uFFFD\t\uFFFD\\\uFFFD", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WxrEncryptUtils.WxrBase64Decode("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WxrEncryptUtils.SHA1((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WxrEncryptUtils.MD5("65FD55F061F3508B05B4803007F90484", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WxrEncryptUtils.MD5((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WxrEncryptUtils.keysizeDES = (-1504);
      String string0 = WxrEncryptUtils.DESencode("cn.wxrwcz.utils.WxrBase64", "G^;+GATkT");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = WxrEncryptUtils.DESdecode(",", "");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WxrEncryptUtils.keysizeAES = 1;
      String string0 = WxrEncryptUtils.AESencode("cn.wxrwcz.utils.WxrBase64", ";aW|C");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = WxrEncryptUtils.AESdecode("r", "MD5");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.parseHexStr2Byte((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrEncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.parseByte2HexStr((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrEncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.XORencode((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrEncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.XORdecode("HmacSHA1", "HmacMD5");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"H\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.XORdecode("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrEncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.WxrBase64Encode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.wxrwcz.utils.WxrEncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.parseHexStr2Byte("HmacMD5");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"H\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = WxrEncryptUtils.parseHexStr2Byte("");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-20);
      String string0 = WxrEncryptUtils.parseByte2HexStr(byteArray0);
      assertEquals("EC0000", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = WxrEncryptUtils.parseHexStr2Byte("a");
      assertNotNull(byteArray0);
      
      String string0 = WxrEncryptUtils.parseByte2HexStr(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WxrEncryptUtils.XORdecode("149BC614A68EC04881FD725898189DFD", "CyOnG[;9ng");
      assertEquals("\uFFFD{&\uFFFDFn \uFFFDa\u001D\uFFFD\uFFFDx\uFFFD}\u001D", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WxrEncryptUtils.XORencode("-+P\"", "-+P\"");
      assertEquals("DDDBA0D2", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WxrEncryptUtils.charset = null;
      String string0 = WxrEncryptUtils.AESdecode("HmacSHA1", "kO6rP%S)iJ0/c");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WxrEncryptUtils.AESencode("DES", (String) null);
      assertEquals("88C8593DF69AACF77ADA7A9F2C05B125", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      WxrEncryptUtils.charset = null;
      String string0 = WxrEncryptUtils.DESencode("oLgp5Dtpp](", "cn.wxrwcz.utils.WxrBase64");
      assertNotNull(string0);
      assertEquals("FC8E80199C33E0655B8533BF4639ABAD", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      WxrEncryptUtils.charset = null;
      String string0 = WxrEncryptUtils.SHA1((String) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WxrEncryptUtils.MD5("MD5", (String) null);
      assertNotNull(string0);
      assertEquals("esC36Mdu7o4ej4yrPgZBDQ==", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      WxrEncryptUtils.charset = null;
      String string0 = WxrEncryptUtils.MD5("");
      assertNotNull(string0);
      assertEquals("1B2M2Y8AsgTpgAmY7PhCfg==", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      WxrEncryptUtils.getInstance();
      WxrEncryptUtils wxrEncryptUtils0 = WxrEncryptUtils.getInstance();
      assertEquals(0, WxrEncryptUtils.keysizeDES);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        WxrEncryptUtils.WxrBase64Decode("#%JPHK^D");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WxrEncryptUtils.WxrBase64Encode("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WxrEncryptUtils.SHA1("-+P\"");
      assertEquals("lnzYn3keQbeNPH6cgzO02bedaRA=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = WxrEncryptUtils.XOR(1974, "");
      assertEquals(1974, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = WxrEncryptUtils.DESdecode("", "SHA1");
      assertNull(string0);
  }
}
