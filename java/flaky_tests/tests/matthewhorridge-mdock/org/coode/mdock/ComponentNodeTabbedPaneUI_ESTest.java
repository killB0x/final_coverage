/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 04:54:29 GMT 2022
 */

package org.coode.mdock;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Insets;
import java.awt.Rectangle;
import javax.swing.DebugGraphics;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JViewport;
import org.coode.mdock.ComponentNodeTabbedPaneUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComponentNodeTabbedPaneUI_ESTest extends ComponentNodeTabbedPaneUI_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.calculateTabWidth(16, 0, (FontMetrics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.getTabBounds((JTabbedPane) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.getTabLabelShiftX((-1766), (-1766), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1766 out of bounds for length 0
         //
         verifyException("org.coode.mdock.ComponentNodeTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintTab(debugGraphics0, (-255), (Rectangle[]) null, 297, rectangle0, (Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintTabArea((Graphics) null, (byte)2, (byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      Insets insets0 = componentNodeTabbedPaneUI0.getTabInsets(3215, 3215);
      assertEquals(0, insets0.bottom);
      assertEquals(0, insets0.left);
      assertEquals(0, insets0.top);
      assertEquals(0, insets0.right);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      Rectangle[] rectangleArray0 = new Rectangle[3];
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintTab(debugGraphics0, 2893, rectangleArray0, 2893, rectangleArray0[2], rectangleArray0[2]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2893 out of bounds for length 3
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      componentNodeTabbedPaneUI0.installUI(jTabbedPane0);
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.getTabBounds(jTabbedPane0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.calculateTabHeight((-10), (-10), (-10));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.coode.mdock.ComponentNodeTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintTabBorder(debugGraphics0, 15, 15, 15, 15, 15, 15, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintTabBorder(debugGraphics0, 15, 15, 15, 15, 15, 15, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Font font0 = Font.decode(">Y");
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintText(debugGraphics0, (-3326), font0, (FontMetrics) null, (-3326), ">Y", (Rectangle) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Font font0 = Font.decode(">Y");
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintText(debugGraphics0, 0, font0, (FontMetrics) null, 0, ">Y", (Rectangle) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paintTabArea(debugGraphics0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      componentNodeTabbedPaneUI0.paintContentBorderRightEdge(debugGraphics0, (-383), (-383), (-383), 0, (-383), 0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      int int0 = componentNodeTabbedPaneUI0.getTabLabelShiftY((-790), (-790), false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      JPasswordField jPasswordField0 = new JPasswordField();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.paint(debugGraphics0, jPasswordField0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      componentNodeTabbedPaneUI0.paintContentBorderLeftEdge((Graphics) null, 0, (-676), (-676), 888, (-1276), (-676));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      componentNodeTabbedPaneUI0.paintContentBorderTopEdge((Graphics) null, 0, 0, 0, 0, (-1309), 0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.getTabLabelShiftX((-3), 1, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("org.coode.mdock.ComponentNodeTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.installDefaults();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.LookAndFeel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      Insets insets0 = componentNodeTabbedPaneUI0.getTabAreaInsets((-1138));
      assertEquals(1, insets0.bottom);
      assertEquals(1, insets0.top);
      assertEquals(1, insets0.right);
      assertEquals(1, insets0.left);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      Insets insets0 = componentNodeTabbedPaneUI0.getSelectedTabPadInsets((-2983));
      assertEquals(0, insets0.right);
      assertEquals(0, insets0.top);
      assertEquals(0, insets0.bottom);
      assertEquals(0, insets0.left);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      componentNodeTabbedPaneUI0.paintContentBorder((Graphics) null, 1, 1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      componentNodeTabbedPaneUI0.paintTabBackground(debugGraphics0, (-3), 1, 1, 1, 1, 1, true);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      componentNodeTabbedPaneUI0.paintContentBorderBottomEdge((Graphics) null, 394, (-676), (-292), (-1276), 888, (-2763));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      // Undeclared exception!
      try { 
        componentNodeTabbedPaneUI0.calculateTabWidth(2, 2, (FontMetrics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      Insets insets0 = componentNodeTabbedPaneUI0.getContentBorderInsets(2);
      assertEquals(0, insets0.bottom);
      assertEquals(0, insets0.top);
      assertEquals(0, insets0.left);
      assertEquals(0, insets0.right);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ComponentNodeTabbedPaneUI componentNodeTabbedPaneUI0 = new ComponentNodeTabbedPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      ImageIcon imageIcon0 = new ImageIcon();
      JCheckBox jCheckBox0 = new JCheckBox("", imageIcon0);
      Rectangle rectangle0 = jCheckBox0.getVisibleRect();
      componentNodeTabbedPaneUI0.paintFocusIndicator(debugGraphics0, 0, (Rectangle[]) null, (-2856), rectangle0, rectangle0, true);
      assertEquals(0.0, rectangle0.getX(), 0.01);
  }
}
