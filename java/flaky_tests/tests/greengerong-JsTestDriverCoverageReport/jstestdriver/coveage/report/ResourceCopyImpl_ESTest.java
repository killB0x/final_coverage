/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 23:58:36 GMT 2022
 */

package jstestdriver.coveage.report;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import jstestdriver.coveage.report.ResourceCopyImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResourceCopyImpl_ESTest extends ResourceCopyImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResourceCopyImpl resourceCopyImpl0 = new ResourceCopyImpl();
      assertNotNull(resourceCopyImpl0);
      
      Class<Object> class0 = Object.class;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      try { 
        resourceCopyImpl0.copy("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResourceCopyImpl resourceCopyImpl0 = new ResourceCopyImpl();
      assertNotNull(resourceCopyImpl0);
      
      resourceCopyImpl0.copy("");
      resourceCopyImpl0.copy("");
      resourceCopyImpl0.copy("7^3$ -0[U%uN)6#Nd");
      resourceCopyImpl0.copy("ES");
      resourceCopyImpl0.copy("");
      resourceCopyImpl0.copy("7^3$ -0[U%uN)6#Nd");
      // Undeclared exception!
      resourceCopyImpl0.copy("7^3$ -0[U%uN)6#Nd");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResourceCopyImpl resourceCopyImpl0 = new ResourceCopyImpl();
      assertNotNull(resourceCopyImpl0);
      
      resourceCopyImpl0.copy("W$ ");
      String string0 = "";
      resourceCopyImpl0.copy("report/script/underscore-min.js");
      try { 
        resourceCopyImpl0.copy((String) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResourceCopyImpl resourceCopyImpl0 = new ResourceCopyImpl();
      assertNotNull(resourceCopyImpl0);
      
      Class<Object> class0 = Object.class;
      String string0 = "&'o";
      resourceCopyImpl0.copy("&'o");
      String string1 = null;
      // Undeclared exception!
      try { 
        resourceCopyImpl0.copy(class0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ResourceCopyImpl resourceCopyImpl0 = new ResourceCopyImpl();
      assertNotNull(resourceCopyImpl0);
      
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        resourceCopyImpl0.copy(class0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ResourceCopyImpl resourceCopyImpl0 = new ResourceCopyImpl();
      assertNotNull(resourceCopyImpl0);
      
      resourceCopyImpl0.copy("BpYGM");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ResourceCopyImpl resourceCopyImpl0 = new ResourceCopyImpl();
      Class<Object> class0 = Object.class;
      String string0 = null;
      resourceCopyImpl0.copy((String) null);
      // Undeclared exception!
      try { 
        resourceCopyImpl0.copy(class0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
