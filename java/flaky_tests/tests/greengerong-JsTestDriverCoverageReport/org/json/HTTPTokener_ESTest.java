/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 23:56:01 GMT 2022
 */

package org.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.HTTPTokener;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HTTPTokener_ESTest extends HTTPTokener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HTTPTokener hTTPTokener0 = null;
      try {
        hTTPTokener0 = new HTTPTokener((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HTTPTokener hTTPTokener0 = new HTTPTokener(" [character ");
      String string0 = hTTPTokener0.nextToken();
      assertEquals("[character", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HTTPTokener hTTPTokener0 = new HTTPTokener(";cfR*ux#g");
      hTTPTokener0.nextToken();
      assertTrue(hTTPTokener0.end());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HTTPTokener hTTPTokener0 = new HTTPTokener("'|>z#^kgRZ'");
      String string0 = hTTPTokener0.nextToken();
      assertEquals("|>z#^kgRZ", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HTTPTokener hTTPTokener0 = new HTTPTokener("\"R N!D@jA");
      try { 
        hTTPTokener0.nextToken();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated string. at 10 [character 11 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HTTPTokener hTTPTokener0 = new HTTPTokener(" ");
      hTTPTokener0.nextToken();
      assertTrue(hTTPTokener0.end());
  }
}
