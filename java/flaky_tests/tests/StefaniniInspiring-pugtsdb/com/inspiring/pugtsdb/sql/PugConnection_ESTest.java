/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:34:59 GMT 2022
 */

package com.inspiring.pugtsdb.sql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.sql.PugConnection;
import com.inspiring.pugtsdb.util.DummySqlConnection;
import java.sql.Array;
import java.sql.Blob;
import java.sql.CallableStatement;
import java.sql.Clob;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.NClob;
import java.sql.PreparedStatement;
import java.sql.SQLWarning;
import java.sql.SQLXML;
import java.sql.Savepoint;
import java.sql.Statement;
import java.sql.Struct;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PugConnection_ESTest extends PugConnection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2);
      pugConnection0.setNetworkTimeout(scheduledThreadPoolExecutor0, 2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setClientInfo((String) null, ")y");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      CallableStatement callableStatement0 = pugConnection0.prepareCall((String) null, 27, 278, 39);
      assertNull(callableStatement0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      PreparedStatement preparedStatement0 = pugConnection0.prepareStatement("", 1340, (-1), 1340);
      assertNull(preparedStatement0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      PreparedStatement preparedStatement0 = pugConnection0.prepareStatement("*", 713, 3892, 3892);
      assertNull(preparedStatement0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Statement statement0 = pugConnection0.createStatement(159, (-2163), 170);
      assertNull(statement0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setHoldability((-1387));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      CallableStatement callableStatement0 = pugConnection0.prepareCall((String) null, 6, (-304));
      assertNull(callableStatement0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      PreparedStatement preparedStatement0 = pugConnection0.prepareStatement("O]qE2t)ZS#\u0007JOxyZ", (-2163), (-2350));
      assertNull(preparedStatement0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Statement statement0 = pugConnection0.createStatement(296, (-1622));
      assertNull(statement0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setTransactionIsolation(1212);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Class<Object> class0 = Object.class;
      boolean boolean0 = pugConnection0.isWrapperFor(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PugConnection pugConnection0 = null;
      try {
        pugConnection0 = new PugConnection((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.sql.PugConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setAutoCommit(false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Class<String> class0 = String.class;
      boolean boolean0 = pugConnection0.isWrapperFor(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Class<Object> class0 = Object.class;
      Object object0 = pugConnection0.unwrap(class0);
      assertSame(object0, dummySqlConnection0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      SQLXML sQLXML0 = pugConnection0.createSQLXML();
      assertNull(sQLXML0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      int int0 = pugConnection0.getNetworkTimeout();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.commit();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setCatalog("");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      boolean boolean0 = pugConnection0.isValid(567);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      String string0 = pugConnection0.nativeSQL((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      PreparedStatement preparedStatement0 = pugConnection0.prepareStatement("or", 27);
      assertNull(preparedStatement0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Clob clob0 = pugConnection0.createClob();
      assertNull(clob0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      NClob nClob0 = pugConnection0.createNClob();
      assertNull(nClob0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      CallableStatement callableStatement0 = pugConnection0.prepareCall("~!s?0a[z");
      assertNull(callableStatement0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.clearWarnings();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      String string0 = pugConnection0.getSchema();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.close();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.releaseSavepoint((Savepoint) null);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setReadOnly(true);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.rollback((Savepoint) null);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      pugConnection0.abort(forkJoinPool0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      PreparedStatement preparedStatement0 = pugConnection0.prepareStatement("", (String[]) null);
      assertNull(preparedStatement0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setTypeMap((Map<String, Class<?>>) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      int int0 = pugConnection0.getTransactionIsolation();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Struct struct0 = pugConnection0.createStruct("", (Object[]) null);
      assertNull(struct0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      SQLWarning sQLWarning0 = pugConnection0.getWarnings();
      assertNull(sQLWarning0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      DatabaseMetaData databaseMetaData0 = pugConnection0.getMetaData();
      assertNull(databaseMetaData0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.rollback();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Properties properties0 = pugConnection0.getClientInfo();
      assertNull(properties0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      int int0 = pugConnection0.getHoldability();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Statement statement0 = pugConnection0.createStatement();
      assertNull(statement0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setClientInfo((Properties) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Map<String, Class<?>> map0 = pugConnection0.getTypeMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      boolean boolean0 = pugConnection0.getAutoCommit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      PreparedStatement preparedStatement0 = pugConnection0.prepareStatement("c]8(G-;<");
      assertNull(preparedStatement0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Savepoint savepoint0 = pugConnection0.setSavepoint("");
      assertNull(savepoint0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setNetworkTimeout((Executor) null, 1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      pugConnection0.setSchema("SMQZ:DPr{Ks");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      boolean boolean0 = pugConnection0.isClosed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      boolean boolean0 = pugConnection0.isReadOnly();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Savepoint savepoint0 = pugConnection0.setSavepoint();
      assertNull(savepoint0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      PreparedStatement preparedStatement0 = pugConnection0.prepareStatement("", (int[]) null);
      assertNull(preparedStatement0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      String string0 = pugConnection0.getCatalog();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Blob blob0 = pugConnection0.createBlob();
      assertNull(blob0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Class<String> class0 = String.class;
      String string0 = pugConnection0.unwrap(class0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Object[] objectArray0 = new Object[0];
      Array array0 = pugConnection0.createArrayOf("", objectArray0);
      assertNull(array0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      String string0 = pugConnection0.getClientInfo("");
      assertNull(string0);
  }
}
