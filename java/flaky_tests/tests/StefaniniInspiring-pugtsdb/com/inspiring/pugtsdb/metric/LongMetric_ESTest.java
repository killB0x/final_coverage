/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:50:10 GMT 2022
 */

package com.inspiring.pugtsdb.metric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.metric.LongMetric;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LongMetric_ESTest extends LongMetric_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LongMetric longMetric0 = new LongMetric("^3s9lMYSuog&04", hashMap0);
      byte[] byteArray0 = longMetric0.valueToBytes((Long) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LongMetric longMetric0 = new LongMetric("-ZU*T$F\"X$G&%", hashMap0);
      Long long0 = new Long(0L);
      byte[] byteArray0 = longMetric0.valueToBytes(long0);
      Long long1 = longMetric0.valueFromBytes(byteArray0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LongMetric longMetric0 = new LongMetric("^3s9lMYSuog&04", hashMap0);
      Long long0 = new Long(13);
      byte[] byteArray0 = longMetric0.valueToBytes(long0);
      Long long1 = longMetric0.valueFromBytes(byteArray0);
      assertTrue(long1.equals((Object)long0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LongMetric longMetric0 = new LongMetric("As[", hashMap0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        longMetric0.valueFromBytes(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert bytes [] to Long: Expected a length of 8, got 0
         //
         verifyException("com.inspiring.pugtsdb.util.Bytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, ",TM*9_c87I(+fZnu6`");
      LongMetric longMetric0 = null;
      try {
        longMetric0 = new LongMetric("47wQ!5[f_~", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LongMetric longMetric0 = null;
      try {
        longMetric0 = new LongMetric("", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Metric name cannot be blank
         //
         verifyException("com.inspiring.pugtsdb.metric.Metric", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LongMetric longMetric0 = new LongMetric("yZ", hashMap0);
      Long long0 = new Long((-2017L));
      byte[] byteArray0 = longMetric0.valueToBytes(long0);
      Long long1 = longMetric0.valueFromBytes(byteArray0);
      assertEquals((-2017L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LongMetric longMetric0 = new LongMetric("m+|sy~WcF(", hashMap0);
      Long long0 = longMetric0.valueFromBytes((byte[]) null);
      assertNull(long0);
  }
}
