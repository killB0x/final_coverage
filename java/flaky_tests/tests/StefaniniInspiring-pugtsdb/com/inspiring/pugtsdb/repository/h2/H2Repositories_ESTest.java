/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:51:34 GMT 2022
 */

package com.inspiring.pugtsdb.repository.h2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.inspiring.pugtsdb.repository.MetricRepository;
import com.inspiring.pugtsdb.repository.PointRepository;
import com.inspiring.pugtsdb.repository.TagRepository;
import com.inspiring.pugtsdb.repository.h2.H2Repositories;
import com.inspiring.pugtsdb.sql.PugConnection;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class H2Repositories_ESTest extends H2Repositories_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      H2Repositories h2Repositories0 = new H2Repositories();
      MetricRepository metricRepository0 = h2Repositories0.getMetricRepository();
      assertNotNull(metricRepository0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      H2Repositories h2Repositories0 = new H2Repositories((Supplier<PugConnection>) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      H2Repositories h2Repositories0 = new H2Repositories();
      TagRepository tagRepository0 = h2Repositories0.getTagRepository();
      assertNotNull(tagRepository0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      H2Repositories h2Repositories0 = new H2Repositories();
      Supplier<PugConnection> supplier0 = (Supplier<PugConnection>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      h2Repositories0.setConnectionSupplier(supplier0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      H2Repositories h2Repositories0 = new H2Repositories();
      PointRepository pointRepository0 = h2Repositories0.getPointRepository();
      assertNotNull(pointRepository0);
  }
}
