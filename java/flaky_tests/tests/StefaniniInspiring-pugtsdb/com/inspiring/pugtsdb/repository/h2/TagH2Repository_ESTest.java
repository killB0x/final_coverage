/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:21:01 GMT 2022
 */

package com.inspiring.pugtsdb.repository.h2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.repository.h2.TagH2Repository;
import com.inspiring.pugtsdb.sql.PugConnection;
import com.inspiring.pugtsdb.util.DummySqlConnection;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TagH2Repository_ESTest extends TagH2Repository_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TagH2Repository tagH2Repository0 = new TagH2Repository();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        tagH2Repository0.upsertTags(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.repository.h2.H2Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PugConnection pugConnection0 = mock(PugConnection.class, new ViolatedAssumptionAnswer());
      doReturn((PreparedStatement) null).when(pugConnection0).prepareStatement(anyString());
      Supplier<PugConnection> supplier0 = (Supplier<PugConnection>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pugConnection0).when(supplier0).get();
      TagH2Repository tagH2Repository0 = new TagH2Repository(supplier0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      tagH2Repository0.upsertTags(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DummySqlConnection dummySqlConnection0 = new DummySqlConnection();
      PugConnection pugConnection0 = new PugConnection(dummySqlConnection0);
      Supplier<PugConnection> supplier0 = (Supplier<PugConnection>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pugConnection0).when(supplier0).get();
      TagH2Repository tagH2Repository0 = new TagH2Repository(supplier0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("Q", "Cannot delete metric %s points aggregated as %s with granularity %s before %s with statement %s");
      // Undeclared exception!
      try { 
        tagH2Repository0.upsertTags(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.repository.h2.TagH2Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PugConnection pugConnection0 = mock(PugConnection.class, new ViolatedAssumptionAnswer());
      doReturn((PreparedStatement) null).when(pugConnection0).prepareStatement(anyString());
      Supplier<PugConnection> supplier0 = (Supplier<PugConnection>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pugConnection0).when(supplier0).get();
      TagH2Repository tagH2Repository0 = new TagH2Repository(supplier0);
      // Undeclared exception!
      try { 
        tagH2Repository0.selectTagsByMetricId("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.repository.h2.TagH2Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TagH2Repository tagH2Repository0 = new TagH2Repository();
      // Undeclared exception!
      try { 
        tagH2Repository0.selectTagsByMetricId("h-r]aEA2`c&(Fy((q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.repository.h2.H2Repository", e);
      }
  }
}
