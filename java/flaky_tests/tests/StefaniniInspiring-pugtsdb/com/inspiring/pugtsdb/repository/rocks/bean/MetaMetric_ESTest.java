/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:41:50 GMT 2022
 */

package com.inspiring.pugtsdb.repository.rocks.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import com.inspiring.pugtsdb.metric.StringMetric;
import com.inspiring.pugtsdb.repository.rocks.bean.MetaMetric;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MetaMetric_ESTest extends MetaMetric_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MetaMetric metaMetric0 = new MetaMetric();
      HashMap<String, Map<String, String>> hashMap0 = new HashMap<String, Map<String, String>>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      hashMap0.put("jSC2WL`.N`", hashMap1);
      metaMetric0.setTagsById(hashMap0);
      Map<String, Map<String, String>> map0 = metaMetric0.getTagsById();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MetaMetric metaMetric0 = new MetaMetric();
      String string0 = metaMetric0.toString();
      assertEquals("MetaMetric{type=null, tagsById=null}", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MetaMetric metaMetric0 = new MetaMetric();
      Class<StringMetric> class0 = StringMetric.class;
      metaMetric0.setType(class0);
      Class<?> class1 = metaMetric0.getType();
      assertFalse(class1.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MetaMetric metaMetric0 = new MetaMetric();
      HashMap<String, Map<String, String>> hashMap0 = new HashMap<String, Map<String, String>>();
      metaMetric0.setTagsById(hashMap0);
      Map<String, Map<String, String>> map0 = metaMetric0.getTagsById();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MetaMetric metaMetric0 = new MetaMetric();
      Map<String, Map<String, String>> map0 = metaMetric0.getTagsById();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<StringMetric> class0 = StringMetric.class;
      MetaMetric metaMetric0 = new MetaMetric(class0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MetaMetric metaMetric0 = new MetaMetric();
      Class<?> class0 = metaMetric0.getType();
      assertNull(class0);
  }
}
