/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:12:36 GMT 2022
 */

package com.inspiring.pugtsdb.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.util.GlobPattern;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GlobPattern_ESTest extends GlobPattern_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        GlobPattern.compile("{{:?A}");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unknown inline modifier near index 4
         // \\Q{\\E(?A)
         //     ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        GlobPattern.compile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = GlobPattern.isGlob("Mjgn?V:]'}AcvQ|zl");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = GlobPattern.isGlob("/o-'w*\"D8 Q");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = GlobPattern.isGlob("{`;6}h$");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = GlobPattern.isGlob((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pattern pattern0 = GlobPattern.compile("=rh,{:5}oEN{n'\"Qw`");
      assertEquals("\\Q=rh,\\E(5)\\QoEN{n'\"Qw`\\E", pattern0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pattern pattern0 = GlobPattern.compile("f%/i*=:l\"AL&3v");
      assertEquals("\\Qf%/i\\E.*\\Q=:l\"AL&3v\\E", pattern0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pattern pattern0 = GlobPattern.compile("HH?[7orIHu9mp");
      assertEquals("\\QHH\\E.\\Q[7orIHu9mp\\E", pattern0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pattern pattern0 = GlobPattern.compile("{{`;6}");
      assertEquals("\\Q{\\E(.*)", pattern0.pattern());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GlobPattern globPattern0 = new GlobPattern();
  }
}
