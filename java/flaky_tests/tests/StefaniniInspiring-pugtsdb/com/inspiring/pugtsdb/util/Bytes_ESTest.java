/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:05:44 GMT 2022
 */

package com.inspiring.pugtsdb.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.util.Bytes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Bytes_ESTest extends Bytes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      Boolean boolean0 = Bytes.toBoolean(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = Bytes.fromUtf8String("xOBIcItMw R");
      // Undeclared exception!
      try { 
        Bytes.toLong(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert bytes [120, 79, 66, 73, 99, 73, 116, 77, 119, 32, 82] to Long: Expected a length of 8, got 11
         //
         verifyException("com.inspiring.pugtsdb.util.Bytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = Bytes.toUtf8String(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double(0.0);
      byte[] byteArray0 = Bytes.fromDouble(double0);
      Long long0 = Bytes.toLong(byteArray0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long((-1444L));
      byte[] byteArray0 = Bytes.fromLong(long0);
      Long long1 = Bytes.toLong(byteArray0);
      assertEquals((-1444L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      Double double0 = Bytes.toDouble(byteArray0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1L));
      byte[] byteArray0 = Bytes.fromLong(long0);
      Double double0 = Bytes.toDouble(byteArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1)}, byteArray0);
      assertEquals(Double.NaN, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      byte[] byteArray0 = Bytes.fromBoolean(boolean0);
      // Undeclared exception!
      try { 
        Bytes.toLong(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert bytes [-1] to Long: Expected a length of 8, got 1
         //
         verifyException("com.inspiring.pugtsdb.util.Bytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long(1238L);
      byte[] byteArray0 = Bytes.fromLong(long0);
      Long long1 = Bytes.toLong(byteArray0);
      assertEquals(1238L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = Bytes.fromUtf8String((String) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = Bytes.toUtf8String((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double(0.0);
      byte[] byteArray0 = Bytes.fromDouble(double0);
      String string0 = Bytes.toUtf8String(byteArray0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = Bytes.fromBoolean((Boolean) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("9W}tJcB");
      byte[] byteArray0 = Bytes.fromBoolean(boolean0);
      Boolean boolean1 = Bytes.toBoolean(byteArray0);
      assertFalse(boolean1);
      assertNotNull(boolean1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      byte[] byteArray0 = Bytes.fromBoolean(boolean0);
      Boolean boolean1 = Bytes.toBoolean(byteArray0);
      assertNotNull(boolean1);
      assertArrayEquals(new byte[] {(byte) (-1)}, byteArray0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = Bytes.toBoolean((byte[]) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = new Long(1238L);
      byte[] byteArray0 = Bytes.fromLong(long0);
      // Undeclared exception!
      try { 
        Bytes.toBoolean(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert bytes [0, 0, 0, 0, 0, 0, 4, -42] to Boolean: Expected a length of 1, got 8
         //
         verifyException("com.inspiring.pugtsdb.util.Bytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = Bytes.fromDouble((Double) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = Bytes.toDouble((byte[]) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = Bytes.fromLong((Long) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = Bytes.fromUtf8String("");
      // Undeclared exception!
      try { 
        Bytes.toDouble(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert bytes [] to Long: Expected a length of 8, got 0
         //
         verifyException("com.inspiring.pugtsdb.util.Bytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Long long0 = Bytes.toLong((byte[]) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-173L));
      byte[] byteArray0 = Bytes.fromDouble(double0);
      Double double1 = Bytes.toDouble(byteArray0);
      assertEquals((-173.0), (double)double1, 0.01);
      assertNotNull(double1);
      assertArrayEquals(new byte[] {(byte) (-64), (byte)101, (byte) (-96), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Bytes bytes0 = new Bytes();
  }
}
