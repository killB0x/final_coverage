/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:50:51 GMT 2022
 */

package com.inspiring.pugtsdb.rollup.aggregation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.rollup.aggregation.LongMinAggregation;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LongMinAggregation_ESTest extends LongMinAggregation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LongMinAggregation longMinAggregation0 = new LongMinAggregation();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = longMinAggregation0.aggregate(linkedList0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LongMinAggregation longMinAggregation0 = new LongMinAggregation();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = new Long(1L);
      linkedList0.add(long0);
      Long long1 = longMinAggregation0.aggregate(linkedList0);
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LongMinAggregation longMinAggregation0 = new LongMinAggregation();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = new Long((-4753L));
      linkedList0.push(long0);
      Long long1 = longMinAggregation0.aggregate(linkedList0);
      assertEquals((-4753L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LongMinAggregation longMinAggregation0 = new LongMinAggregation();
      // Undeclared exception!
      try { 
        longMinAggregation0.aggregate((List<Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.rollup.aggregation.LongMinAggregation", e);
      }
  }
}
