/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:14:33 GMT 2022
 */

package com.inspiring.pugtsdb.rollup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.repository.h2.H2Repositories;
import com.inspiring.pugtsdb.rollup.RollUp;
import com.inspiring.pugtsdb.rollup.aggregation.Aggregation;
import com.inspiring.pugtsdb.rollup.aggregation.LongAvgAggregation;
import com.inspiring.pugtsdb.sql.PugConnection;
import com.inspiring.pugtsdb.time.Granularity;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RollUp_ESTest extends RollUp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Aggregation<HashMap<Object, Object>> aggregation0 = (Aggregation<HashMap<Object, Object>>) mock(Aggregation.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(aggregation0).getName();
      Granularity granularity0 = Granularity.ONE_SECOND;
      Granularity granularity1 = Granularity.HALF_MINUTE;
      H2Repositories h2Repositories0 = new H2Repositories();
      RollUp<HashMap<Object, Object>> rollUp0 = null;
      try {
        rollUp0 = new RollUp<HashMap<Object, Object>>((String) null, aggregation0, granularity0, granularity1, h2Repositories0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.repository.h2.H2Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LongAvgAggregation longAvgAggregation0 = new LongAvgAggregation();
      Granularity granularity0 = Granularity.ONE_MINUTE;
      PugConnection pugConnection0 = mock(PugConnection.class, new ViolatedAssumptionAnswer());
      doReturn((PreparedStatement) null).when(pugConnection0).prepareStatement(anyString());
      Supplier<PugConnection> supplier0 = (Supplier<PugConnection>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(pugConnection0).when(supplier0).get();
      H2Repositories h2Repositories0 = new H2Repositories(supplier0);
      RollUp<Long> rollUp0 = null;
      try {
        rollUp0 = new RollUp<Long>(", aggregation=", longAvgAggregation0, granularity0, granularity0, h2Repositories0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.repository.h2.PointH2Repository", e);
      }
  }
}
