/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:37:27 GMT 2022
 */

package com.inspiring.pugtsdb.rollup.aggregation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.inspiring.pugtsdb.rollup.aggregation.BooleanAndAggregation;
import com.inspiring.pugtsdb.rollup.aggregation.BooleanOrAggregation;
import com.inspiring.pugtsdb.rollup.aggregation.DoubleMinAggregation;
import com.inspiring.pugtsdb.rollup.aggregation.LongAvgAggregation;
import com.inspiring.pugtsdb.rollup.aggregation.StringSumAggregation;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Aggregation_ESTest extends Aggregation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StringSumAggregation stringSumAggregation0 = new StringSumAggregation();
      String string0 = stringSumAggregation0.aggregate(linkedList0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BooleanAndAggregation booleanAndAggregation0 = new BooleanAndAggregation();
      // Undeclared exception!
      try { 
        booleanAndAggregation0.aggregate((List<Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.inspiring.pugtsdb.rollup.aggregation.BooleanAndAggregation", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LongAvgAggregation longAvgAggregation0 = new LongAvgAggregation();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      // Undeclared exception!
      try { 
        longAvgAggregation0.aggregate(linkedList0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.inspiring.pugtsdb.rollup.aggregation.LongAvgAggregation", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DoubleMinAggregation doubleMinAggregation0 = new DoubleMinAggregation();
      String string0 = doubleMinAggregation0.toString();
      assertEquals("Aggregation{name='min'}", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BooleanOrAggregation booleanOrAggregation0 = new BooleanOrAggregation();
      String string0 = booleanOrAggregation0.getName();
      assertEquals("or", string0);
  }
}
