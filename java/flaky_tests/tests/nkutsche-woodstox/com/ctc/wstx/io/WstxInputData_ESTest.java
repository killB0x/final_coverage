/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:34:55 GMT 2022
 */

package com.ctc.wstx.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.io.WstxInputData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WstxInputData_ESTest extends WstxInputData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = WstxInputData.isSpaceChar('\u0000');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("K`^", false, false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("B94]C}1ru%B]Jg6Dl", true, false);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("i0@61z~WQj", false, true);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("efTxz", true, true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("", true, true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("lEiB_UA|J>VK<c}", false, false);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("mZ[0", true, true);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("oz*Fuz;J,,S]&l", true, true);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("^c?&", false, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("?r+-|v;", false, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("A?KwS5]loDgnM:e", false, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("aGM{bp", false, false);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("zki)s", false, true);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('`', false, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('9', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('0', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('A', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('Z', false, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('z', true, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('`', false, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('>', true, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('A', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('a', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('z', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('`');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar(' ');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('9');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('\\');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        WstxInputData.findIllegalNmtokenChar((String) null, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.io.WstxInputData", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        WstxInputData.findIllegalNameChar((String) null, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.io.WstxInputData", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      // Undeclared exception!
      try { 
        wstxInputData0.copyBufferStateFrom((WstxInputData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.io.WstxInputData", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("`=7zA]KV:^,h4qg(M", false, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WstxInputData.getCharDesc('\u0000');
      assertEquals("(CTRL-CHAR, code 0)", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = WstxInputData.getCharDesc('j');
      assertEquals("'j' (code 106)", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = WstxInputData.isSpaceChar(' ');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      boolean boolean0 = WstxInputData.isSpaceChar('l');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("y}Q:", false, false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("0TgW8vZ^d'ipZ\"UT^]U", true, false);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("y454s:y\"&C)<NOY$~p=", true, true);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("G:PeJv", false, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("Z-I%dBd-\"0y=^S3f", false, false);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("lEiB_UA|J>VK<c}", true, true);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNmtokenChar("com.ctc.wstx.util.XmlChars", false, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("_IX~~ZXwb{8=yJ~}LtR", true, true);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("Z-I%dBd-\"0y=^S3f", false, true);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("y6bS2X7wC:':", false, false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("QFlE_q:Fx?x|#K", false, false);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("com.ctc.wstx.util.XmlChars", true, true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("{xh|4<zE3)Gfd", true, true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("/`laG;q0$n&", false, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("MK:^i5,Jt!6w~=aAQz", true, true);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar(":a<-v/%IToAvYOMO_", true, true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar(":%Z'y{sB,Af]Xl#jkO5", false, false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("{xh|4<zE3)Gfd", false, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = WstxInputData.findIllegalNameChar("", false, true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('|', true, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('_', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar(':', true, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar(':', false, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('-', true, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('.', true, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('>', false, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('[', true, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('a', true, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('\u0000', true, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameChar('|', true, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('~', false, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('[', false, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('_', true, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar(':', true, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar(':', false, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('1', false, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('Z', true, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      boolean boolean0 = WstxInputData.isNameStartChar('|', false, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      wstxInputData0.mXml11 = true;
      boolean boolean0 = wstxInputData0.isNameChar('|');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('_');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('.');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar(':');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('-');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('[');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('0');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameChar('|');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      wstxInputData0.mXml11 = true;
      boolean boolean0 = wstxInputData0.isNameStartChar('~');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('_');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('`');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('8');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      boolean boolean0 = wstxInputData0.isNameStartChar('{');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      WstxInputData wstxInputData0 = new WstxInputData();
      wstxInputData0.copyBufferStateFrom(wstxInputData0);
      assertEquals(' ', WstxInputData.INT_SPACE);
  }
}
