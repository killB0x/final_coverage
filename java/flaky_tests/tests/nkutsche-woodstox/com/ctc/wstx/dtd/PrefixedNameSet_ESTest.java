/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:57:32 GMT 2022
 */

package com.ctc.wstx.dtd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.dtd.LargePrefixedNameSet;
import com.ctc.wstx.dtd.SmallPrefixedNameSet;
import com.ctc.wstx.util.PrefixedName;
import javax.xml.namespace.QName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PrefixedNameSet_ESTest extends PrefixedNameSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[6];
      QName qName0 = new QName("cUYSb91>?4bOB ec!", "cUYSb91>?4bOB ec!", "K");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      prefixedNameArray0[2] = prefixedNameArray0[0];
      prefixedNameArray0[3] = prefixedName0;
      prefixedNameArray0[4] = prefixedName0;
      prefixedNameArray0[5] = prefixedNameArray0[4];
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      StringBuilder stringBuilder0 = new StringBuilder("cUYSb91>?4bOB ec!");
      smallPrefixedNameSet0.appendNames(stringBuilder0, "cUYSb91>?4bOB ec!:}gegFaTd/{p ");
      assertEquals("cUYSb91>?4bOB ec!cUYSb91>?4bOB ec!cUYSb91>?4bOB ec!:}gegFaTd/{p cUYSb91>?4bOB ec!cUYSb91>?4bOB ec!:}gegFaTd/{p cUYSb91>?4bOB ec!cUYSb91>?4bOB ec!:}gegFaTd/{p cUYSb91>?4bOB ec!cUYSb91>?4bOB ec!:}gegFaTd/{p cUYSb91>?4bOB ec!cUYSb91>?4bOB ec!:}gegFaTd/{p cUYSb91>?4bOB ec!", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      QName qName0 = new QName((String) null, "");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      String string0 = smallPrefixedNameSet0.toString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[8];
      QName qName0 = new QName("", "", "");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedNameArray0[0];
      prefixedNameArray0[2] = prefixedNameArray0[0];
      prefixedNameArray0[3] = prefixedNameArray0[0];
      prefixedNameArray0[4] = prefixedName0;
      prefixedNameArray0[5] = prefixedNameArray0[0];
      prefixedNameArray0[6] = prefixedNameArray0[0];
      prefixedNameArray0[7] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      String string0 = smallPrefixedNameSet0.toString();
      assertEquals(", , , , , , , ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      QName qName0 = QName.valueOf("");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = largePrefixedNameSet0.hasMultiple();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      QName qName0 = QName.valueOf(", ");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.hasMultiple();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[6];
      QName qName0 = new QName("cUYSb91>?4bOB ec!", "cUYSb91>?4bOB ec!", "K");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedNameArray0[0];
      prefixedNameArray0[2] = prefixedName0;
      prefixedNameArray0[3] = prefixedName0;
      prefixedNameArray0[4] = prefixedNameArray0[3];
      prefixedNameArray0[5] = prefixedNameArray0[0];
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedName0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      QName qName0 = new QName(";[$R`B\"", ";[$R`B\"", "\"y7ka:g%S+pIi7%");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      prefixedName0.reset(" io\",on+&$t;l#\"h", ";[$R`B\"");
      boolean boolean0 = largePrefixedNameSet0.contains(prefixedName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[0];
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(true, prefixedNameArray0);
      // Undeclared exception!
      try { 
        largePrefixedNameSet0.contains((PrefixedName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.LargePrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      PrefixedName prefixedName0 = new PrefixedName("%$i8SL@fm)H", "");
      prefixedNameArray0[0] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      // Undeclared exception!
      try { 
        largePrefixedNameSet0.appendNames((StringBuilder) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.LargePrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      QName qName0 = QName.valueOf(", ");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      String string0 = smallPrefixedNameSet0.toString("$M^v@g");
      assertEquals(", ", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[0];
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      String string0 = largePrefixedNameSet0.toString();
      assertEquals("", string0);
  }
}
