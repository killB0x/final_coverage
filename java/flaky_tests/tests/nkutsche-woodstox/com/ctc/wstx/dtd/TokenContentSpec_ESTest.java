/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:39:48 GMT 2022
 */

package com.ctc.wstx.dtd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.dtd.ModelNode;
import com.ctc.wstx.dtd.StructValidator;
import com.ctc.wstx.dtd.TokenContentSpec;
import com.ctc.wstx.util.PrefixedName;
import javax.xml.namespace.QName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenContentSpec_ESTest extends TokenContentSpec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.getDummySpec();
      TokenContentSpec.Validator tokenContentSpec_Validator0 = (TokenContentSpec.Validator)tokenContentSpec0.getSimpleValidator();
      tokenContentSpec0.toString();
      tokenContentSpec0.isLeaf();
      tokenContentSpec0.isLeaf();
      tokenContentSpec_Validator0.mCount = (-84);
      TokenContentSpec.Validator tokenContentSpec_Validator1 = new TokenContentSpec.Validator('@', (PrefixedName) null);
      tokenContentSpec0.rewrite();
      tokenContentSpec_Validator0.fullyValid();
      // Undeclared exception!
      try { 
        tokenContentSpec_Validator0.tryToValidate((PrefixedName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.TokenContentSpec$Validator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('\u0018', prefixedName0);
      tokenContentSpec_Validator0.tryToValidate(prefixedName0);
      String string0 = tokenContentSpec_Validator0.tryToValidate(prefixedName0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.getDummySpec();
      StructValidator structValidator0 = tokenContentSpec0.getSimpleValidator();
      structValidator0.newInstance();
      ModelNode modelNode0 = tokenContentSpec0.rewrite();
      assertFalse(modelNode0.isNullable());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      TokenContentSpec tokenContentSpec0 = new TokenContentSpec('\u0010', prefixedName0);
      boolean boolean0 = tokenContentSpec0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      TokenContentSpec tokenContentSpec0 = new TokenContentSpec(' ', prefixedName0);
      String string0 = tokenContentSpec0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.construct('p', (PrefixedName) null);
      tokenContentSpec0.getName();
      assertEquals('p', tokenContentSpec0.getArity());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("v)#%R&a`K77cl", "v)#%R&a`K77cl");
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.construct(' ', prefixedName0);
      assertTrue(tokenContentSpec0.isLeaf());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.construct('p', (PrefixedName) null);
      // Undeclared exception!
      try { 
        tokenContentSpec0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.TokenContentSpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("xml:");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.construct('+', prefixedName0);
      tokenContentSpec0.rewrite();
      assertEquals('+', tokenContentSpec0.getArity());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      TokenContentSpec tokenContentSpec0 = new TokenContentSpec('*', prefixedName0);
      ModelNode modelNode0 = tokenContentSpec0.rewrite();
      assertTrue(modelNode0.isNullable());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('+', (PrefixedName) null);
      tokenContentSpec_Validator0.mCount = 63;
      String string0 = tokenContentSpec_Validator0.fullyValid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('+', (PrefixedName) null);
      String string0 = tokenContentSpec_Validator0.fullyValid();
      assertEquals("Expected at least one element <null>", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('*', (PrefixedName) null);
      String string0 = tokenContentSpec_Validator0.fullyValid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("Unrecognized feature \"{0}\"");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('?', prefixedName0);
      String string0 = tokenContentSpec_Validator0.fullyValid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("xml:");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('A', prefixedName0);
      tokenContentSpec_Validator0.mCount = 1;
      String string0 = tokenContentSpec_Validator0.tryToValidate(prefixedName0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("Unrecognized feature \"{0}\"");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('?', prefixedName0);
      String string0 = tokenContentSpec_Validator0.tryToValidate(prefixedName0);
      assertNull(string0);
      
      String string1 = tokenContentSpec_Validator0.tryToValidate(prefixedName0);
      assertEquals("More than one instance of element <Unrecognized feature \"{0}\">", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      PrefixedName prefixedName1 = new PrefixedName("", "");
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('?', prefixedName0);
      String string0 = tokenContentSpec_Validator0.tryToValidate(prefixedName1);
      assertEquals("Expected element <>", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator(' ', prefixedName0);
      String string0 = tokenContentSpec_Validator0.tryToValidate(prefixedName0);
      assertNull(string0);
      
      String string1 = tokenContentSpec_Validator0.tryToValidate(prefixedName0);
      assertEquals("More than one instance of element <>", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("o&mq]T Z.t~yevc(f+", "o&mq]T Z.t~yevc(f+");
      TokenContentSpec.Validator tokenContentSpec_Validator0 = new TokenContentSpec.Validator('*', prefixedName0);
      StructValidator structValidator0 = tokenContentSpec_Validator0.newInstance();
      assertSame(structValidator0, tokenContentSpec_Validator0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      TokenContentSpec tokenContentSpec0 = new TokenContentSpec('\u0010', prefixedName0);
      String string0 = tokenContentSpec0.toString();
      assertEquals("\u0010", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.sDummy;
      tokenContentSpec0.setArity('?');
      ModelNode modelNode0 = tokenContentSpec0.rewrite();
      assertTrue(modelNode0.isNullable());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QName qName0 = new QName("com.ctc.wstx.dtd.TokenContentSpec$Validator", "com.ctc.wstx.dtd.TokenContentSpec$Validator", "Undeclared general entity \"{0}\" (document in stand-alone mode; perhaps declared externally?)");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      TokenContentSpec tokenContentSpec0 = TokenContentSpec.construct('1', prefixedName0);
      PrefixedName prefixedName1 = tokenContentSpec0.getName();
      assertNotNull(prefixedName1);
      assertEquals('1', tokenContentSpec0.getArity());
  }
}
