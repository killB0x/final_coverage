/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:56:50 GMT 2022
 */

package com.ctc.wstx.dtd;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ctc.wstx.dtd.EmptyValidator;
import com.ctc.wstx.dtd.StructValidator;
import com.ctc.wstx.util.PrefixedName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EmptyValidator_ESTest extends EmptyValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmptyValidator emptyValidator0 = EmptyValidator.getEmptyInstance();
      String string0 = emptyValidator0.tryToValidate((PrefixedName) null);
      assertEquals("No elements allowed in pure #PCDATA content model", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EmptyValidator emptyValidator0 = EmptyValidator.getPcdataInstance();
      String string0 = emptyValidator0.fullyValid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EmptyValidator emptyValidator0 = EmptyValidator.getEmptyInstance();
      StructValidator structValidator0 = emptyValidator0.newInstance();
      assertNull(structValidator0.fullyValid());
  }
}
