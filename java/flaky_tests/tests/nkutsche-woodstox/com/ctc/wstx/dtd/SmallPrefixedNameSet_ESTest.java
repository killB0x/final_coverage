/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:14:51 GMT 2022
 */

package com.ctc.wstx.dtd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.dtd.SmallPrefixedNameSet;
import com.ctc.wstx.util.PrefixedName;
import javax.xml.namespace.QName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SmallPrefixedNameSet_ESTest extends SmallPrefixedNameSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[8];
      QName qName0 = new QName("", "", "");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedNameArray0[0];
      prefixedNameArray0[2] = prefixedName0;
      prefixedNameArray0[3] = prefixedName0;
      PrefixedName prefixedName1 = PrefixedName.valueOf(qName0);
      PrefixedName prefixedName2 = prefixedName1.reset("u:]D>h<fWE94BZuI K", "");
      prefixedNameArray0[4] = prefixedName2;
      prefixedNameArray0[5] = prefixedName0;
      prefixedNameArray0[6] = prefixedNameArray0[0];
      prefixedNameArray0[7] = prefixedNameArray0[0];
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(true, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedNameArray0[4]);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      PrefixedName prefixedName0 = new PrefixedName("", "");
      prefixedNameArray0[0] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      // Undeclared exception!
      try { 
        smallPrefixedNameSet0.contains((PrefixedName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.SmallPrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      PrefixedName prefixedName0 = new PrefixedName("+", "+");
      prefixedNameArray0[0] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      // Undeclared exception!
      try { 
        smallPrefixedNameSet0.appendNames((StringBuilder) null, "+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.SmallPrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[4];
      QName qName0 = new QName("", "");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      PrefixedName prefixedName1 = new PrefixedName("rM|i", "rM|i");
      prefixedNameArray0[1] = prefixedName1;
      prefixedNameArray0[2] = prefixedNameArray0[1];
      prefixedNameArray0[3] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(true, prefixedNameArray0);
      StringBuilder stringBuilder0 = new StringBuilder("");
      smallPrefixedNameSet0.appendNames(stringBuilder0, "com.ctc.wstx.dtd.SmallPrefixedNameSet");
      assertEquals("com.ctc.wstx.dtd.SmallPrefixedNameSetrM|i:rM|icom.ctc.wstx.dtd.SmallPrefixedNameSetrM|i:rM|icom.ctc.wstx.dtd.SmallPrefixedNameSet", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      PrefixedName prefixedName0 = new PrefixedName("wB>lTQxR3U<'ZDV", "wB>lTQxR3U<'ZDV");
      prefixedNameArray0[0] = prefixedName0;
      PrefixedName prefixedName1 = new PrefixedName("Trying to construct empty PrefixedNameSet", "Trying to construct empty PrefixedNameSet");
      prefixedNameArray0[1] = prefixedName1;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedName1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      PrefixedName prefixedName0 = new PrefixedName("", (String) null);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      PrefixedName prefixedName1 = new PrefixedName("", "");
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedName1);
      assertFalse(boolean0);
      assertTrue(smallPrefixedNameSet0.hasMultiple());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      PrefixedName prefixedName0 = new PrefixedName("", (String) null);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(true, prefixedNameArray0);
      PrefixedName prefixedName1 = new PrefixedName("", "");
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedName1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      PrefixedName prefixedName0 = new PrefixedName("com.ctc.wstx.dtd.SmallPrefixedNameSet", (String) null);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(true, prefixedNameArray0);
      prefixedName0.reset((String) null, (String) null);
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      PrefixedName prefixedName0 = new PrefixedName("", (String) null);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedNameArray0[1]);
      assertTrue(boolean0);
      assertTrue(smallPrefixedNameSet0.hasMultiple());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      QName qName0 = QName.valueOf("&GqD$X345]6:8m");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(true, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.hasMultiple();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      QName qName0 = new QName("W1", "W1", "r3rcrFn:");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.hasMultiple();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      PrefixedName prefixedName0 = new PrefixedName("com.ctc.wstx.dtd.SmallPrefixedNameSet", (String) null);
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      SmallPrefixedNameSet smallPrefixedNameSet0 = new SmallPrefixedNameSet(true, prefixedNameArray0);
      boolean boolean0 = smallPrefixedNameSet0.contains(prefixedName0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      SmallPrefixedNameSet smallPrefixedNameSet0 = null;
      try {
        smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.SmallPrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[0];
      SmallPrefixedNameSet smallPrefixedNameSet0 = null;
      try {
        smallPrefixedNameSet0 = new SmallPrefixedNameSet(false, prefixedNameArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Trying to construct empty PrefixedNameSet
         //
         verifyException("com.ctc.wstx.dtd.SmallPrefixedNameSet", e);
      }
  }
}
