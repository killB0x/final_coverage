/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:17:38 GMT 2022
 */

package com.ctc.wstx.dtd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.dtd.LargePrefixedNameSet;
import com.ctc.wstx.util.PrefixedName;
import javax.xml.namespace.QName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LargePrefixedNameSet_ESTest extends LargePrefixedNameSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[8];
      PrefixedName prefixedName0 = new PrefixedName(">l", "");
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = null;
      try {
        largePrefixedNameSet0 = new LargePrefixedNameSet(true, prefixedNameArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.LargePrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[7];
      PrefixedName prefixedName0 = new PrefixedName("", "wj'br=Z 9u|");
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = null;
      try {
        largePrefixedNameSet0 = new LargePrefixedNameSet(true, prefixedNameArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.LargePrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[20];
      LargePrefixedNameSet largePrefixedNameSet0 = null;
      try {
        largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.LargePrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      PrefixedName prefixedName0 = new PrefixedName("com.ctc.wstx.dtd.LargePrefixedNameSet$Bucket", ", ");
      prefixedNameArray0[0] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      StringBuilder stringBuilder0 = new StringBuilder(", :O'bAh.&w/lTOv,GA4");
      largePrefixedNameSet0.appendNames(stringBuilder0, ", :O'bAh.&w/lTOv,GA4");
      assertEquals(", :O'bAh.&w/lTOv,GA4com.ctc.wstx.dtd.LargePrefixedNameSet$Bucket:, ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[0];
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      // Undeclared exception!
      try { 
        largePrefixedNameSet0.contains((PrefixedName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.LargePrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("t4e!", "t4e!");
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(true, prefixedNameArray0);
      // Undeclared exception!
      try { 
        largePrefixedNameSet0.appendNames((StringBuilder) null, "t4e!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.dtd.LargePrefixedNameSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      QName qName0 = new QName("/I&ca\"uU8+lZF");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedNameArray0[0] = prefixedName0;
      PrefixedName prefixedName1 = new PrefixedName("/I&ca\"uU8+lZF", "/I&ca\"uU8+lZF");
      prefixedNameArray0[1] = prefixedName1;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(true, prefixedNameArray0);
      String string0 = largePrefixedNameSet0.toString();
      assertEquals("/I&ca\"uU8+lZF, /I&ca\"uU8+lZF:/I&ca\"uU8+lZF", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("xQqg", "xQqg");
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      PrefixedName prefixedName1 = prefixedName0.reset("xQqg", ", ");
      boolean boolean0 = largePrefixedNameSet0.contains(prefixedName1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("bktmqg", "bktmqg");
      PrefixedName[] prefixedNameArray0 = new PrefixedName[2];
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      PrefixedName prefixedName1 = new PrefixedName("$@^!Z(7", "bktmqg");
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(true, prefixedNameArray0);
      boolean boolean0 = largePrefixedNameSet0.contains(prefixedName1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("com.ctc.wstx.dtd.LargePrefixedNameSet", "com.ctc.wstx.dtd.LargePrefixedNameSet");
      PrefixedName prefixedName1 = new PrefixedName("5GO3sW", "com.ctc.wstx.dtd.LargePrefixedNameSet");
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      prefixedNameArray0[0] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = largePrefixedNameSet0.contains(prefixedName1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("bktmqg", "bktmqg");
      PrefixedName[] prefixedNameArray0 = new PrefixedName[1];
      prefixedNameArray0[0] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(true, prefixedNameArray0);
      boolean boolean0 = largePrefixedNameSet0.contains(prefixedName0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      PrefixedName[] prefixedNameArray0 = new PrefixedName[3];
      prefixedNameArray0[0] = prefixedName0;
      prefixedNameArray0[1] = prefixedName0;
      prefixedNameArray0[2] = prefixedName0;
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      assertTrue(largePrefixedNameSet0.hasMultiple());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrefixedName[] prefixedNameArray0 = new PrefixedName[0];
      LargePrefixedNameSet largePrefixedNameSet0 = new LargePrefixedNameSet(false, prefixedNameArray0);
      boolean boolean0 = largePrefixedNameSet0.hasMultiple();
      assertTrue(boolean0);
  }
}
