/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:22:40 GMT 2022
 */

package com.ctc.wstx.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.util.ArgUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArgUtil_ESTest extends ArgUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArgUtil.convertToBoolean("P[{$", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid String value for property 'P[{$': expected Boolean value.
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArgUtil.convertToLong("", "", 43L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid String value for property '': expected a number (Long).
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArgUtil.convertToInt("$U5s", "$U5s", (-3587));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid String value for property '$U5s': expected a number (Integer).
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(1268);
      int int0 = ArgUtil.convertToInt("", integer0, 1268);
      assertEquals(1268, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArgUtil.convertToLong((String) null, (Object) null, 1886L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid numeric value (0) for property 'null': minimum is 1886.
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        ArgUtil.convertToLong("", object0, (-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid value type (class java.lang.Object) for property '': expected Long value.
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      long long0 = ArgUtil.convertToLong("", integer0, (-1L));
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long long0 = ArgUtil.convertToLong("08a[xPm!G", (Object) null, (-1L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long long0 = ArgUtil.convertToLong("6", "6", 1);
      assertEquals(6L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArgUtil.convertToInt("12", "12", 3998);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid numeric value (12) for property '12': minimum is 3998.
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      int int0 = ArgUtil.convertToInt("com.ctc.wstx.util.ArgUtil", integer0, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = ArgUtil.convertToInt((String) null, (Object) null, (-1023));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        ArgUtil.convertToInt("l6\"\"9j:S'", object0, (-1615075483));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid value type (class java.lang.Object) for property 'l6\"\"9j:S'': expected Integer value.
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = ArgUtil.convertToBoolean("false", "false");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        ArgUtil.convertToBoolean("oj)RT_&e-_)MID`3#ke", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid value type (class java.lang.Object) for property 'oj)RT_&e-_)MID`3#ke': expected Boolean value.
         //
         verifyException("com.ctc.wstx.util.ArgUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = ArgUtil.convertToBoolean((String) null, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = ArgUtil.convertToBoolean("'@", "true");
      assertTrue(boolean0);
  }
}
