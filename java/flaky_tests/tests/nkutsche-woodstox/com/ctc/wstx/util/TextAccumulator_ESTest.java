/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:30:39 GMT 2022
 */

package com.ctc.wstx.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.util.TextAccumulator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TextAccumulator_ESTest extends TextAccumulator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        textAccumulator0.addText(charArray0, 616, 3221);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 616, end 3221, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      char[] charArray0 = new char[7];
      textAccumulator0.addText(charArray0, 0, (-1338));
      assertFalse(textAccumulator0.hasText());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      // Undeclared exception!
      try { 
        textAccumulator0.addText((char[]) null, 0, 296);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      // Undeclared exception!
      try { 
        textAccumulator0.addText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.util.TextAccumulator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      textAccumulator0.addText("p>v}@GZ[3K~t_V\"D}BH");
      assertTrue(textAccumulator0.hasText());
      
      String string0 = textAccumulator0.getAndClear();
      assertEquals("p>v}@GZ[3K~t_V\"D}BH", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      String string0 = textAccumulator0.getAndClear();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      textAccumulator0.addText(";B=!p|iG,H}&");
      textAccumulator0.addText(";B=!p|iG,H}&");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        textAccumulator0.addText(charArray0, 0, 961);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 0, end 961, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      char[] charArray0 = new char[9];
      textAccumulator0.addText("lT");
      // Undeclared exception!
      try { 
        textAccumulator0.addText(charArray0, (-772), 5023);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -772, end 5023, length 9
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      char[] charArray0 = new char[4];
      textAccumulator0.addText(charArray0, 0, 1);
      assertTrue(textAccumulator0.hasText());
      
      String string0 = textAccumulator0.getAndClear();
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      char[] charArray0 = new char[4];
      textAccumulator0.addText(charArray0, 2045, 2045);
      assertFalse(textAccumulator0.hasText());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      textAccumulator0.addText("");
      assertFalse(textAccumulator0.hasText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      assertFalse(textAccumulator0.hasText());
      
      textAccumulator0.addText("=8|RT1f");
      boolean boolean0 = textAccumulator0.hasText();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      boolean boolean0 = textAccumulator0.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextAccumulator textAccumulator0 = new TextAccumulator();
      textAccumulator0.addText("=8|RT1f");
      textAccumulator0.addText("=8|RT1f");
      boolean boolean0 = textAccumulator0.hasText();
      assertTrue(boolean0);
  }
}
