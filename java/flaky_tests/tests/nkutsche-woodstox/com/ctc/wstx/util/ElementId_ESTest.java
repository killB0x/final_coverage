/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:38:51 GMT 2022
 */

package com.ctc.wstx.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.util.ElementId;
import com.ctc.wstx.util.PrefixedName;
import javax.xml.namespace.QName;
import javax.xml.stream.Location;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ElementId_ESTest extends ElementId_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("|+'+", location0, false, (PrefixedName) null, (PrefixedName) null);
      char[] charArray0 = new char[6];
      charArray0[4] = '|';
      charArray0[5] = '|';
      boolean boolean0 = elementId0.idMatches(charArray0, 4, 4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("|+'+", location0, true, (PrefixedName) null, (PrefixedName) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '|';
      boolean boolean0 = elementId0.idMatches(charArray0, 0, 4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("|+'+", location0, false, (PrefixedName) null, (PrefixedName) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      boolean boolean0 = elementId0.idMatches(charArray0, 0, 4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("|+'+", location0, true, (PrefixedName) null, (PrefixedName) null);
      char[] charArray0 = new char[7];
      boolean boolean0 = elementId0.idMatches(charArray0, 0, 4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("Sucttp%=%~_T?<Anww", "z1:I");
      ElementId elementId0 = new ElementId("z1:I", location0, false, prefixedName0, prefixedName0);
      char[] charArray0 = new char[9];
      boolean boolean0 = elementId0.idMatches(charArray0, 9, 9);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("Sucttp%=%~_T?<Anww", "z1:I");
      QName qName0 = QName.valueOf("P ]G?Q0D(XtQu");
      PrefixedName prefixedName1 = PrefixedName.valueOf(qName0);
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("", location0, false, prefixedName0, prefixedName1);
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName(":dH dckq/Wd/s");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId((String) null, location0, false, prefixedName0, prefixedName0);
      String string0 = elementId0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName(".*AHBK `f=f*ix1.-='");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId("", location0, true, prefixedName0, prefixedName0);
      String string0 = elementId0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("*", location0, false, (PrefixedName) null, (PrefixedName) null);
      Location location1 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId1 = new ElementId("S70(qo1GDL", location1, true, (PrefixedName) null, (PrefixedName) null);
      elementId0.linkUndefined(elementId1);
      ElementId elementId2 = elementId0.nextUndefined();
      assertEquals("S70(qo1GDL", elementId2.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("0e6!*UEPOSkIt", "Trying to output a CDATA block outside main element tree (in prolog or epilog)");
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("Trying to redeclare prefix 'xml' from its default URI 'http://www.w3.org/XML/1998/namespace' to \"{0}\"", location0, false, prefixedName0, prefixedName0);
      elementId0.linkUndefined(elementId0);
      ElementId elementId1 = elementId0.nextUndefined();
      assertFalse(elementId1.isDefined());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("ElementId '", location0, true, (PrefixedName) null, (PrefixedName) null);
      elementId0.setNextColliding(elementId0);
      ElementId elementId1 = elementId0.nextColliding();
      assertSame(elementId0, elementId1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("Sucttp%=%~_T?<Anww", "z1:I");
      ElementId elementId0 = new ElementId("z1:I", location0, false, prefixedName0, prefixedName0);
      elementId0.setNextColliding(elementId0);
      ElementId elementId1 = elementId0.nextColliding();
      assertSame(elementId1, elementId0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("Zp0%t;ih&mX1GnE-*", location0, false, (PrefixedName) null, (PrefixedName) null);
      boolean boolean0 = elementId0.isDefined();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("/rO", "ElementId '");
      ElementId elementId0 = new ElementId("ElementId '", location0, false, prefixedName0, prefixedName0);
      boolean boolean0 = elementId0.idMatches("ElementId '");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ElementId elementId0 = new ElementId((String) null, (Location) null, false, (PrefixedName) null, (PrefixedName) null);
      Location location0 = elementId0.getLocation();
      assertNull(location0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName((String) null, "' already had net undefined set ('");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId((String) null, location0, false, prefixedName0, prefixedName0);
      String string0 = elementId0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("", "");
      ElementId elementId0 = new ElementId("", location0, false, prefixedName0, prefixedName0);
      String string0 = elementId0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName("COMMENT", "NS;");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId("NS;", location0, false, prefixedName0, prefixedName0);
      PrefixedName prefixedName1 = elementId0.getElemName();
      assertFalse(prefixedName1.isaNsDeclaration());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName("", "");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId("", location0, true, prefixedName0, prefixedName0);
      PrefixedName prefixedName1 = elementId0.getAttrName();
      assertFalse(prefixedName1.isaNsDeclaration());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ElementId elementId0 = new ElementId("", (Location) null, true, (PrefixedName) null, (PrefixedName) null);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        elementId0.idMatches(charArray0, 0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ElementId elementId0 = new ElementId((String) null, (Location) null, false, (PrefixedName) null, (PrefixedName) null);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        elementId0.idMatches(charArray0, (-4), (-4));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.util.ElementId", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ElementId elementId0 = new ElementId("|l'+", (Location) null, true, (PrefixedName) null, (PrefixedName) null);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        elementId0.idMatches(charArray0, 4, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 0
         //
         verifyException("com.ctc.wstx.util.ElementId", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ElementId elementId0 = new ElementId("ElementId '", (Location) null, true, (PrefixedName) null, (PrefixedName) null);
      // Undeclared exception!
      try { 
        elementId0.markDefined((Location) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Internal error
         //
         verifyException("com.ctc.wstx.util.ElementId", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("\"$xV)1IRLmIg0#xH$_5", "\"$xV)1IRLmIg0#xH$_5");
      ElementId elementId0 = new ElementId("\"$xV)1IRLmIg0#xH$_5", location0, false, prefixedName0, prefixedName0);
      assertFalse(elementId0.isDefined());
      
      Location location1 = mock(Location.class, new ViolatedAssumptionAnswer());
      elementId0.markDefined(location1);
      assertTrue(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("\"$xV)1IRLmIg0#xH$_5", "\"$xV)1IRLmIg0#xH$_5");
      ElementId elementId0 = new ElementId("\"$xV)1IRLmIg0#xH$_5", location0, false, prefixedName0, prefixedName0);
      char[] charArray0 = new char[7];
      boolean boolean0 = elementId0.idMatches(charArray0, 1230, (-1));
      assertFalse(boolean0);
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "i &A");
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("n|@[w", location0, false, prefixedName0, prefixedName0);
      elementId0.linkUndefined(elementId0);
      // Undeclared exception!
      try { 
        elementId0.linkUndefined(elementId0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // ElementId 'n|@[w' already had net undefined set ('n|@[w')
         //
         verifyException("com.ctc.wstx.util.ElementId", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("|+'+", location0, false, (PrefixedName) null, (PrefixedName) null);
      elementId0.getAttrName();
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("\"$xV)1IRLmIg0#xH$_5", "\"$xV)1IRLmIg0#xH$_5");
      ElementId elementId0 = new ElementId("\"$xV)1IRLmIg0#xH$_5", location0, false, prefixedName0, prefixedName0);
      elementId0.toString();
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName(".*AHBK `f=f*ix1.-='");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId("", location0, true, prefixedName0, prefixedName0);
      boolean boolean0 = elementId0.isDefined();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName(":dH dckq/Wd/s");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId((String) null, location0, false, prefixedName0, prefixedName0);
      elementId0.nextUndefined();
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("\"$xV)1IRLmIg0#xH$_5", "\"$xV)1IRLmIg0#xH$_5");
      ElementId elementId0 = new ElementId("\"$xV)1IRLmIg0#xH$_5", location0, false, prefixedName0, prefixedName0);
      elementId0.setNextColliding((ElementId) null);
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      QName qName0 = new QName(".*AHBK `f=f*ix1.-='");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      ElementId elementId0 = new ElementId("", location0, true, prefixedName0, prefixedName0);
      elementId0.nextColliding();
      assertTrue(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(location0).toString();
      PrefixedName prefixedName0 = new PrefixedName("Sucttp%=%~_T?<Anww", "z1:I");
      ElementId elementId0 = new ElementId("z1:I", location0, false, prefixedName0, prefixedName0);
      elementId0.getLocation();
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "i &A");
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      ElementId elementId0 = new ElementId("n|@[w", location0, false, prefixedName0, prefixedName0);
      elementId0.getId();
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      PrefixedName prefixedName0 = new PrefixedName("\"$xV)1IRLmIg0#xH$_5", "\"$xV)1IRLmIg0#xH$_5");
      ElementId elementId0 = new ElementId("\"$xV)1IRLmIg0#xH$_5", location0, false, prefixedName0, prefixedName0);
      elementId0.idMatches("com.ctc.wstx.util.ElementId");
      assertFalse(elementId0.isDefined());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ElementId elementId0 = new ElementId(" ~.L[ #9Chh", (Location) null, false, (PrefixedName) null, (PrefixedName) null);
      elementId0.getElemName();
      assertFalse(elementId0.isDefined());
  }
}
