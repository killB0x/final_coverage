/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:06:29 GMT 2022
 */

package com.ctc.wstx.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.util.PrefixedName;
import javax.xml.namespace.QName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PrefixedName_ESTest extends PrefixedName_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("TS0WZ`)g];E&SMK^", "", "TS0WZ`)g];E&SMK^");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      PrefixedName prefixedName1 = PrefixedName.valueOf(qName0);
      int int0 = prefixedName1.compareTo(prefixedName0);
      assertEquals("TS0WZ`)g];E&SMK^", prefixedName1.getPrefix());
      assertEquals("", prefixedName1.getLocalName());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("K", "K");
      PrefixedName prefixedName1 = new PrefixedName(")>::", ")>::");
      int int0 = prefixedName0.compareTo(prefixedName1);
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("xml:", "xml:");
      PrefixedName prefixedName1 = prefixedName0.reset("xml:", "xml:xml:");
      prefixedName1.hashCode();
      prefixedName1.hashCode();
      assertEquals("xml:", prefixedName1.getPrefix());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("9c)y6 Be!gi,1k", "xmlns");
      boolean boolean0 = prefixedName0.isXmlReservedAttr(false, "");
      assertFalse(boolean0);
      assertEquals("9c)y6 Be!gi,1k", prefixedName0.getPrefix());
      assertEquals("xmlns", prefixedName0.getLocalName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", (String) null);
      String string0 = prefixedName0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      String string0 = prefixedName0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("Xw@0y9J,)-u*tg&3r", "Xw@0y9J,)-u*tg&3r");
      String string0 = prefixedName0.getPrefix();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", (String) null);
      String string0 = prefixedName0.getLocalName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("oG4JKFZ");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      String string0 = prefixedName0.getLocalName();
      assertEquals("oG4JKFZ", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        PrefixedName.valueOf((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.util.PrefixedName", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("K", (String) null);
      // Undeclared exception!
      try { 
        prefixedName0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.util.PrefixedName", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName((String) null, (String) null);
      // Undeclared exception!
      try { 
        prefixedName0.isXmlReservedAttr(false, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.util.PrefixedName", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName((String) null, (String) null);
      // Undeclared exception!
      try { 
        prefixedName0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.util.PrefixedName", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      // Undeclared exception!
      try { 
        prefixedName0.compareTo((PrefixedName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.util.PrefixedName", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("ifN9V\" ", "ifN9V\" ");
      boolean boolean0 = prefixedName0.isaNsDeclaration();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedName0.reset(",", "Y>&0A(:");
      PrefixedName prefixedName1 = PrefixedName.valueOf(qName0);
      int int0 = prefixedName1.compareTo(prefixedName0);
      assertEquals((-1), int0);
      assertEquals(",", prefixedName0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("K", "K", "K");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      prefixedName0.reset("", "K");
      PrefixedName prefixedName1 = PrefixedName.valueOf(qName0);
      int int0 = prefixedName1.compareTo(prefixedName0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "xml:");
      prefixedName0.compareTo(prefixedName0);
      assertEquals("xml:", prefixedName0.getLocalName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      PrefixedName prefixedName1 = prefixedName0.reset("", "V(?\"");
      prefixedName0.hashCode();
      prefixedName1.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = new QName("K", "K", "K");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      PrefixedName prefixedName1 = PrefixedName.valueOf(qName0);
      boolean boolean0 = prefixedName0.equals(prefixedName1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      QName qName1 = QName.valueOf("i=m])vmx.87[.");
      PrefixedName prefixedName1 = PrefixedName.valueOf(qName1);
      boolean boolean0 = prefixedName0.equals(prefixedName1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      boolean boolean0 = prefixedName0.equals(prefixedName0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "xml:");
      boolean boolean0 = prefixedName0.equals("");
      assertEquals("xml:", prefixedName0.getLocalName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("xml:", "xml:");
      String string0 = prefixedName0.toString();
      assertEquals("xml::xml:", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("xml:", "xml:");
      PrefixedName prefixedName1 = prefixedName0.reset("xml:", "xml:xml:");
      boolean boolean0 = prefixedName1.isXmlReservedAttr(false, "^Cn(");
      assertFalse(boolean0);
      assertEquals("xml:", prefixedName1.getPrefix());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("xml:", "xml:");
      prefixedName0.reset((String) null, "^Cn(YbP");
      boolean boolean0 = prefixedName0.isXmlReservedAttr(false, "xml:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "xml:");
      boolean boolean0 = prefixedName0.isXmlReservedAttr(false, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("K", "g#Kx*~^5MOr@");
      boolean boolean0 = prefixedName0.isXmlReservedAttr(true, "xml");
      assertEquals("g#Kx*~^5MOr@", prefixedName0.getLocalName());
      assertEquals("K", prefixedName0.getPrefix());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QName qName0 = new QName("TS0WZ`)g];E&SMK^", "", "TS0WZ`)g];E&SMK^");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      boolean boolean0 = prefixedName0.isXmlReservedAttr(false, "K");
      assertEquals("", prefixedName0.getLocalName());
      assertEquals("TS0WZ`)g];E&SMK^", prefixedName0.getPrefix());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QName qName0 = new QName("oG4JKFZ");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      boolean boolean0 = prefixedName0.isaNsDeclaration();
      assertFalse(boolean0);
      assertEquals("oG4JKFZ", prefixedName0.getLocalName());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QName qName0 = new QName("TS0WZ`)g];E&SMK^", "", "TS0WZ`)g];E&SMK^");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      PrefixedName prefixedName1 = prefixedName0.reset("K", "xml:");
      PrefixedName prefixedName2 = PrefixedName.valueOf(qName0);
      int int0 = prefixedName1.compareTo(prefixedName2);
      assertEquals("xml:", prefixedName0.getLocalName());
      assertEquals((-9), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PrefixedName prefixedName0 = new PrefixedName("", "");
      String string0 = prefixedName0.getLocalName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      PrefixedName prefixedName0 = PrefixedName.valueOf(qName0);
      String string0 = prefixedName0.getPrefix();
      assertNull(string0);
  }
}
