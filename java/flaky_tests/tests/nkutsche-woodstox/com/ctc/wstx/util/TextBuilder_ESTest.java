/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 02:37:50 GMT 2022
 */

package com.ctc.wstx.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.util.TextBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TextBuilder_ESTest extends TextBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(120);
      char[] charArray0 = textBuilder0.bufferFull(0);
      textBuilder0.append(charArray0, 60, 0);
      assertFalse(textBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(120);
      char[] charArray0 = textBuilder0.bufferFull(0);
      textBuilder0.append(charArray0, 60, 60);
      assertEquals(180, textBuilder0.getCharSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(0);
      textBuilder0.append('n');
      char[] charArray0 = new char[5];
      textBuilder0.append(charArray0, 0, 0);
      assertFalse(textBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder((-3655));
      textBuilder0.setBufferSize((-3655));
      boolean boolean0 = textBuilder0.isEmpty();
      assertEquals((-3655), textBuilder0.getCharSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(60);
      textBuilder0.bufferFull(60);
      textBuilder0.toString();
      assertEquals(120, textBuilder0.getCharSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(60);
      textBuilder0.setBufferSize(33536);
      int int0 = textBuilder0.getCharSize();
      assertEquals(33536, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder((-3655));
      textBuilder0.setBufferSize((-3655));
      int int0 = textBuilder0.getCharSize();
      assertEquals((-3655), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder((-704));
      textBuilder0.setBufferSize((-704));
      // Undeclared exception!
      try { 
        textBuilder0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(283);
      textBuilder0.setBufferSize(283);
      // Undeclared exception!
      try { 
        textBuilder0.getAllValues();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(4);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        textBuilder0.append(charArray0, 4, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(2846);
      textBuilder0.setBufferSize(2846);
      // Undeclared exception!
      try { 
        textBuilder0.append('m');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2846 out of bounds for length 120
         //
         verifyException("com.ctc.wstx.util.TextBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder((-6380));
      // Undeclared exception!
      try { 
        textBuilder0.append((char[]) null, (-6380), 964);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(60);
      textBuilder0.append('?');
      textBuilder0.getAllValues();
      assertFalse(textBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(60);
      textBuilder0.getAllValues();
      String string0 = textBuilder0.getAllValues();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder((-3655));
      boolean boolean0 = textBuilder0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(60);
      textBuilder0.setBufferSize(33536);
      boolean boolean0 = textBuilder0.isEmpty();
      assertEquals(33536, textBuilder0.getCharSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(3115);
      textBuilder0.setBufferSize(120);
      textBuilder0.append('7');
      assertEquals(121, textBuilder0.getCharSize());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(3115);
      char[] charArray0 = textBuilder0.getCharBuffer();
      assertEquals(120, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder((-3655));
      int int0 = textBuilder0.getCharSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(3115);
      String string0 = textBuilder0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextBuilder textBuilder0 = new TextBuilder(4);
      textBuilder0.reset();
      assertEquals(0, textBuilder0.getCharSize());
  }
}
