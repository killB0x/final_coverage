/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:28:17 GMT 2022
 */

package org.immregistries.mqe.hl7util.transform;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.transform.Transform;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Transform_ESTest extends Transform_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setSubfield(406);
      assertEquals(406, transform0.getSubfield());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transform transform0 = new Transform();
      assertFalse(transform0.isFieldRepeatSet());
      
      transform0.setFieldRepeatSet(true);
      boolean boolean0 = transform0.isFieldRepeatSet();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Transform transform0 = new Transform();
      assertFalse(transform0.isAll());
      
      transform0.setAll(true);
      boolean boolean0 = transform0.isAll();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      assertFalse(transform0.isSubfieldSet());
      
      transform0.setSubfieldSet(true);
      transform0.getValueTransform();
      assertTrue(transform0.isSubfieldSet());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      Transform transform1 = transform0.getValueTransform();
      assertFalse(transform1.isFieldRepeatSet());
      
      transform1.fieldRepeatSet = true;
      transform0.getValueTransform();
      assertEquals(0, transform0.getField());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Transform transform0 = new Transform();
      Transform transform1 = new Transform();
      transform0.setValueTransform(transform1);
      assertFalse(transform1.isAll());
      
      transform1.all = true;
      transform0.getValueTransform();
      assertFalse(transform0.isAll());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      transform0.setSubsubfield(2658);
      transform0.getValueTransform();
      assertEquals(2658, transform0.getSubsubfield());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      transform0.valueTransform.setSubfield(1);
      transform0.getValueTransform();
      assertEquals(1, transform0.getSubfield());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transform transform0 = new Transform();
      Transform transform1 = new Transform();
      transform1.subfield = (-37);
      transform0.setValueTransform(transform1);
      Transform transform2 = transform0.getValueTransform();
      assertEquals(1, transform2.getFieldRepeat());
      assertEquals((-37), transform2.getSubfield());
      assertFalse(transform2.isFieldRepeatSet());
      assertEquals(1, transform2.getSegmentRepeat());
      assertFalse(transform2.isAll());
      assertEquals(1, transform2.getBoundRepeat());
      assertEquals(0, transform2.getField());
      assertFalse(transform2.isSubfieldSet());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      assertEquals(1, transform0.getSegmentRepeat());
      
      transform0.setSegmentRepeat(0);
      transform0.getValueTransform();
      assertEquals(0, transform0.getSegmentRepeat());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      transform0.setSegmentRepeat((-37));
      transform0.getValueTransform();
      assertEquals((-37), transform0.getSegmentRepeat());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Transform transform0 = new Transform();
      assertEquals(1, transform0.getFieldRepeat());
      
      transform0.fieldRepeat = 0;
      transform0.setValueTransform(transform0);
      transform0.getValueTransform();
      assertEquals(1, transform0.getBoundRepeat());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      assertEquals(1, transform0.getFieldRepeat());
      
      transform0.fieldRepeat = (-37);
      transform0.getValueTransform();
      assertEquals(0, transform0.getField());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      transform0.setField(4556);
      transform0.getValueTransform();
      assertEquals(4556, transform0.getField());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      transform0.setField((-642));
      transform0.getValueTransform();
      assertEquals((-642), transform0.getField());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.valueTransform = transform0;
      assertEquals(1, transform0.getBoundRepeat());
      
      transform0.boundRepeat = 0;
      transform0.valueTransform.getValueTransform();
      assertEquals(1, transform0.getFieldRepeat());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      Transform transform1 = transform0.getValueTransform();
      transform1.subsubfield = (-6932);
      Transform transform2 = transform0.getValueTransform();
      assertFalse(transform2.isFieldRepeatSet());
      assertEquals(1, transform2.getSegmentRepeat());
      assertEquals(1, transform2.getBoundRepeat());
      assertEquals(1, transform2.getFieldRepeat());
      assertEquals(0, transform2.getField());
      assertFalse(transform2.isSubfieldSet());
      assertFalse(transform2.isAll());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.valueTransform = transform0;
      Transform transform1 = transform0.valueTransform;
      transform1.value = "``QsJ`S>'^V1IH";
      String string0 = transform1.getValue();
      assertEquals(1, transform1.getBoundRepeat());
      assertFalse(transform1.isFieldRepeatSet());
      assertEquals(1, transform1.getSegmentRepeat());
      assertNotNull(string0);
      assertEquals(0, transform1.getField());
      assertFalse(transform1.isSubfieldSet());
      assertFalse(transform1.isAll());
      assertEquals(1, transform1.getFieldRepeat());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValue("");
      String string0 = transform0.getValue();
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getSegmentRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getFieldRepeat());
      assertNotNull(string0);
      assertEquals(0, transform0.getField());
      assertEquals(1, transform0.getBoundRepeat());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setTestCaseId("{-T\"l5'ie4|7.Y>^QHi");
      String string0 = transform0.getTestCaseId();
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(0, transform0.getField());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertFalse(transform0.isAll());
      assertFalse(transform0.isFieldRepeatSet());
      assertNotNull(string0);
      assertEquals(1, transform0.getSegmentRepeat());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setTestCaseId("");
      String string0 = transform0.getTestCaseId();
      assertFalse(transform0.isAll());
      assertFalse(transform0.isSubfieldSet());
      assertNotNull(string0);
      assertEquals(0, transform0.getField());
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getFieldRepeat());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Transform transform0 = new Transform();
      assertEquals(0, transform0.getSubsubfield());
      
      transform0.setSubsubfield(1);
      int int0 = transform0.getSubsubfield();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.subfield = 1722;
      int int0 = transform0.getSubfield();
      assertEquals(1722, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.subfield = (-1);
      int int0 = transform0.getSubfield();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setSegmentRepeat((-2698));
      int int0 = transform0.getSegmentRepeat();
      assertEquals((-2698), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setSegment("sNJ>qco:)ol|ITGShE");
      String string0 = transform0.getSegment();
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertNotNull(string0);
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(transform0.isAll());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setSegment("");
      String string0 = transform0.getSegment();
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(1, transform0.getFieldRepeat());
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertFalse(transform0.isAll());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Transform transform0 = new Transform();
      assertEquals(1, transform0.getFieldRepeat());
      
      transform0.setFieldRepeat(0);
      int int0 = transform0.getFieldRepeat();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.fieldRepeat = (-2546);
      int int0 = transform0.getFieldRepeat();
      assertEquals((-2546), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.field = 3507;
      int int0 = transform0.getField();
      assertEquals(3507, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.field = (-1);
      int int0 = transform0.getField();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setBoundSegment("");
      String string0 = transform0.getBoundSegment();
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getSegmentRepeat());
      assertNotNull(string0);
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isAll());
      assertEquals(0, transform0.getField());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Transform transform0 = new Transform();
      assertEquals(1, transform0.getBoundRepeat());
      
      transform0.boundRepeat = 0;
      int int0 = transform0.getBoundRepeat();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setBoundRepeat((-119));
      int int0 = transform0.getBoundRepeat();
      assertEquals((-119), int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setSubsubfield((-642));
      int int0 = transform0.getSubsubfield();
      assertEquals((-642), int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Transform transform0 = new Transform();
      int int0 = transform0.getSegmentRepeat();
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isAll());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(1, int0);
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isFieldRepeatSet());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Transform transform0 = new Transform();
      int int0 = transform0.getBoundRepeat();
      assertFalse(transform0.isSubfieldSet());
      assertFalse(transform0.isAll());
      assertEquals(1, int0);
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(0, transform0.getField());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Transform transform0 = new Transform();
      assertFalse(transform0.isSubfieldSet());
      
      transform0.setSubfieldSet(true);
      boolean boolean0 = transform0.isSubfieldSet();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Transform transform0 = new Transform();
      int int0 = transform0.getSubsubfield();
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(0, int0);
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isSubfieldSet());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setFieldRepeat((-642));
      assertEquals((-642), transform0.getFieldRepeat());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Transform transform0 = new Transform();
      int int0 = transform0.getSubfield();
      assertFalse(transform0.isFieldRepeatSet());
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getFieldRepeat());
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(0, int0);
      assertEquals(1, transform0.getSegmentRepeat());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Transform transform0 = new Transform();
      int int0 = transform0.getFieldRepeat();
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, int0);
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getSegmentRepeat());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setValueTransform(transform0);
      transform0.setBoundRepeat((-1508));
      transform0.valueTransform.getValueTransform();
      assertEquals((-1508), transform0.getBoundRepeat());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.getBoundSegment();
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(1, transform0.getSegmentRepeat());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(0, transform0.getField());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isAll());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.getSegment();
      assertEquals(1, transform0.getSegmentRepeat());
      assertFalse(transform0.isAll());
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getBoundRepeat());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Transform transform0 = new Transform();
      assertEquals(1, transform0.getSegmentRepeat());
      
      transform0.setSegmentRepeat(0);
      int int0 = transform0.getSegmentRepeat();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.setBoundSegment("XN+CPg%Co0dsm$qbG");
      String string0 = transform0.getBoundSegment();
      assertNotNull(string0);
      assertFalse(transform0.isSubfieldSet());
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(0, transform0.getField());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isFieldRepeatSet());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Transform transform0 = new Transform();
      boolean boolean0 = transform0.isAll();
      assertEquals(1, transform0.getSegmentRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(boolean0);
      assertEquals(0, transform0.getField());
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isFieldRepeatSet());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.getTestCaseId();
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(1, transform0.getBoundRepeat());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Transform transform0 = new Transform();
      int int0 = transform0.getField();
      assertFalse(transform0.isFieldRepeatSet());
      assertFalse(transform0.isAll());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(1, transform0.getFieldRepeat());
      assertEquals(0, int0);
      assertEquals(1, transform0.getSegmentRepeat());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.getValueTransform();
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getSegmentRepeat());
      assertEquals(1, transform0.getFieldRepeat());
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(transform0.isSubfieldSet());
      assertFalse(transform0.isAll());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Transform transform0 = new Transform();
      boolean boolean0 = transform0.isSubfieldSet();
      assertEquals(0, transform0.getField());
      assertEquals(1, transform0.getSegmentRepeat());
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getBoundRepeat());
      assertFalse(boolean0);
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isFieldRepeatSet());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Transform transform0 = new Transform();
      transform0.getValue();
      assertEquals(1, transform0.getFieldRepeat());
      assertFalse(transform0.isFieldRepeatSet());
      assertEquals(1, transform0.getSegmentRepeat());
      assertFalse(transform0.isAll());
      assertFalse(transform0.isSubfieldSet());
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(0, transform0.getField());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Transform transform0 = new Transform();
      boolean boolean0 = transform0.isFieldRepeatSet();
      assertFalse(boolean0);
      assertEquals(1, transform0.getFieldRepeat());
      assertEquals(1, transform0.getBoundRepeat());
      assertEquals(0, transform0.getField());
      assertFalse(transform0.isAll());
      assertEquals(1, transform0.getSegmentRepeat());
      assertFalse(transform0.isSubfieldSet());
  }
}
