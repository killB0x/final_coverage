/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 10:32:58 GMT 2022
 */

package org.immregistries.mqe.hl7util.transform.procedure;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.transform.TransformRequest;
import org.immregistries.mqe.hl7util.transform.Transformer;
import org.immregistries.mqe.hl7util.transform.procedure.AnonymizeAndUpdateRecord;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AnonymizeAndUpdateRecord_ESTest extends AnonymizeAndUpdateRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord("");
      TransformRequest transformRequest0 = new TransformRequest("");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals("", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord("29769-7");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = null;
      try {
        anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord("kZc|n*b>)s-6@dm");
      TransformRequest transformRequest0 = new TransformRequest("kZc|n*b>)s-6@dm");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      TransformRequest transformRequest0 = new TransformRequest("|");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals("", transformRequest0.getUserid());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      TransformRequest transformRequest0 = new TransformRequest("OBX");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals("OBX\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      TransformRequest transformRequest0 = new TransformRequest("RXA");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals("RXA\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      TransformRequest transformRequest0 = new TransformRequest("ORC");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.immregistries.mqe.hl7util.transform.procedure.AnonymizeAndUpdateRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      TransformRequest transformRequest0 = new TransformRequest("NK1");
      // Undeclared exception!
      try { 
        anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.immregistries.mqe.hl7util.transform.procedure.AnonymizeAndUpdateRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("PD1");
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals("PD1\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("PID");
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.immregistries.mqe.hl7util.transform.procedure.AnonymizeAndUpdateRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      TransformRequest transformRequest0 = new TransformRequest("[YESTERDAY]");
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals("", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord("");
      Transformer transformer0 = new Transformer();
      anonymizeAndUpdateRecord0.setTransformer(transformer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
      TransformRequest transformRequest0 = new TransformRequest("MSH");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      anonymizeAndUpdateRecord0.doProcedure(transformRequest0, linkedList0);
      assertEquals("MSH\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AnonymizeAndUpdateRecord.setAsOfDate("PCC");
      AnonymizeAndUpdateRecord anonymizeAndUpdateRecord0 = new AnonymizeAndUpdateRecord();
  }
}
