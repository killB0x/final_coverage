/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 10:45:09 GMT 2022
 */

package org.immregistries.mqe.hl7util.parser.profile.generator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.parser.profile.generator.FieldComplexity;
import org.immregistries.mqe.hl7util.parser.profile.generator.MessageProfileSourceV2;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MessageProfileSourceV2_ESTest extends MessageProfileSourceV2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2();
      // Undeclared exception!
      try { 
        messageProfileSourceV2_0.populateVXUProfileMap((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2();
      // Undeclared exception!
      try { 
        messageProfileSourceV2_0.populateAckProfileMap((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = null;
      try {
        messageProfileSourceV2_0 = new MessageProfileSourceV2((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.immregistries.mqe.hl7util.parser.profile.generator.MessageProfileSourceV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("YQ6w{q1.7x-k-D");
      messageProfileSourceV2_0.populateProfileMap();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("YQ6w{q1.7x-k-D");
      messageProfileSourceV2_0.populateVXUProfileMap("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("YQ6w{q1.7x-k-D");
      messageProfileSourceV2_0.populateAckProfileMap("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("QBP");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("ACK");
      messageProfileSourceV2_0.populateAckProfileMap("ACK");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("YQ6w{q1.7x-k-D");
      Map<String, String> map0 = messageProfileSourceV2_0.getFieldDescriptionMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("YQ6w{q1.7x-k-D");
      Map<String, String> map0 = messageProfileSourceV2_0.getFieldDataTypeMap();
      assertEquals(3, map0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2("YQ6w{q1.7x-k-D");
      Map<String, FieldComplexity> map0 = messageProfileSourceV2_0.getDataTypeComplexityMap();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageProfileSourceV2 messageProfileSourceV2_0 = new MessageProfileSourceV2();
      messageProfileSourceV2_0.populateVXUProfileMap("&Y_");
  }
}
