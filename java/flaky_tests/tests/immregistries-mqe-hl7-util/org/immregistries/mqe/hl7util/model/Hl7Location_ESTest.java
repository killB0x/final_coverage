/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 10:40:06 GMT 2022
 */

package org.immregistries.mqe.hl7util.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.model.Hl7Location;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Hl7Location_ESTest extends Hl7Location_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setSubComponentNumber((-2108));
      int int0 = hl7Location1.compareTo(hl7Location0);
      assertEquals((-2108), hl7Location1.getSubComponentNumber());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location(hl7Location0);
      assertEquals(0, hl7Location1.getComponentNumber());
      
      hl7Location1.setComponentNumber(1);
      int int0 = hl7Location0.compareTo(hl7Location1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldRepetition(0);
      Hl7Location hl7Location1 = new Hl7Location();
      int int0 = hl7Location1.compareTo(hl7Location0);
      assertEquals(0, hl7Location0.getFieldRepetition());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setFieldPosition((-1558));
      int int0 = hl7Location1.compareTo(hl7Location0);
      assertEquals((-1558), hl7Location1.getFieldPosition());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentSequence(570);
      Hl7Location hl7Location1 = new Hl7Location();
      int int0 = hl7Location0.compareTo(hl7Location1);
      assertEquals(570, hl7Location0.getSegmentSequence());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setLine(18);
      Hl7Location hl7Location1 = new Hl7Location();
      int int0 = hl7Location1.compareTo(hl7Location0);
      assertEquals(18, hl7Location0.getLine());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSubComponentNumber((-1003));
      boolean boolean0 = hl7Location0.hasSubComponentNumber();
      assertEquals((-1003), hl7Location0.getSubComponentNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber((-715));
      boolean boolean0 = hl7Location0.hasComponentNumber();
      assertEquals((-715), hl7Location0.getComponentNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition((-1978));
      boolean boolean0 = hl7Location0.hasFieldPosition();
      assertEquals((-1978), hl7Location0.getFieldPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setSubComponentNumber((-1187));
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals((-1187), hl7Location1.getSubComponentNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location0.setComponentNumber((-1));
      boolean boolean0 = hl7Location1.equals(hl7Location0);
      assertEquals((-1), hl7Location0.getComponentNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldRepetition((-2855));
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals((-2855), hl7Location0.getFieldRepetition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location(hl7Location0);
      hl7Location0.setFieldPosition((-1));
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals((-1), hl7Location0.getFieldPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentSequence(528);
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location1.equals(hl7Location0);
      assertEquals(528, hl7Location0.getSegmentSequence());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setLine((-1241));
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals((-1241), hl7Location1.getLine());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition((-1558));
      hl7Location0.getAbbreviated();
      assertEquals((-1558), hl7Location0.getFieldPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSubComponentNumber((-1003));
      hl7Location0.setComponentNumber(18);
      hl7Location0.getBaseReference();
      assertEquals(18, hl7Location0.getComponentNumber());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber((-1));
      hl7Location0.getBaseReference();
      assertEquals((-1), hl7Location0.getComponentNumber());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition((-1978));
      hl7Location0.getFieldLoc();
      assertEquals((-1978), hl7Location0.getFieldPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSubComponentNumber(18);
      int int0 = hl7Location0.getSubComponentNumber();
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSubComponentNumber((-482));
      int int0 = hl7Location0.getSubComponentNumber();
      assertEquals((-482), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentSequence(570);
      int int0 = hl7Location0.getSegmentSequence();
      assertEquals(570, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentSequence((-1));
      int int0 = hl7Location0.getSegmentSequence();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentId((String) null);
      hl7Location0.getSegmentId();
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getComponentNumber());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getFieldPosition());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertFalse(hl7Location0.hasSubComponentNumber());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentId("M+`P");
      hl7Location0.getSegmentId();
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertFalse(hl7Location0.hasComponentNumber());
      assertFalse(hl7Location0.hasSubComponentNumber());
      assertFalse(hl7Location0.hasFieldPosition());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, hl7Location0.getLine());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setLine(1372);
      int int0 = hl7Location0.getLine();
      assertEquals(1372, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setLine((-2597));
      int int0 = hl7Location0.getLine();
      assertEquals((-2597), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      assertEquals(1, hl7Location0.getFieldRepetition());
      
      hl7Location0.setFieldRepetition(0);
      int int0 = hl7Location0.getFieldRepetition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldRepetition((-1625));
      int int0 = hl7Location0.getFieldRepetition();
      assertEquals((-1625), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition(1927);
      int int0 = hl7Location0.getFieldPosition();
      assertEquals(1927, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition((-2156));
      int int0 = hl7Location0.getFieldPosition();
      assertEquals((-2156), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      assertFalse(hl7Location0.hasComponentNumber());
      
      hl7Location0.setComponentNumber(1);
      int int0 = hl7Location0.getComponentNumber();
      assertTrue(hl7Location0.hasComponentNumber());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber((-715));
      int int0 = hl7Location0.getComponentNumber();
      assertEquals((-715), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      boolean boolean0 = hl7Location0.expectOneSegmentId();
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertFalse(hl7Location0.hasFieldPosition());
      assertFalse(hl7Location0.hasComponentNumber());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(0, hl7Location0.getLine());
      assertFalse(boolean0);
      assertEquals(1, hl7Location0.getFieldRepetition());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      // Undeclared exception!
      try { 
        hl7Location0.hasSegmentId();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.immregistries.mqe.hl7util.model.Hl7Location", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentId((String) null);
      // Undeclared exception!
      try { 
        hl7Location0.getAbbreviated();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentId((String) null);
      // Undeclared exception!
      try { 
        hl7Location0.expectOneSegmentId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentId((String) null);
      // Undeclared exception!
      try { 
        hl7Location0.compareTo(hl7Location0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Hl7Location hl7Location0 = null;
      try {
        hl7Location0 = new Hl7Location("YtXu~]h");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.immregistries.mqe.hl7util.model.Hl7Location", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location(hl7Location0);
      hl7Location1.setSubComponentNumber((-2040109463));
      int int0 = hl7Location0.compareTo(hl7Location1);
      assertEquals((-2040109463), hl7Location1.getSubComponentNumber());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber(1);
      Hl7Location hl7Location1 = new Hl7Location();
      int int0 = hl7Location0.compareTo(hl7Location1);
      assertTrue(hl7Location0.hasComponentNumber());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldRepetition(443);
      Hl7Location hl7Location1 = new Hl7Location();
      int int0 = hl7Location1.compareTo(hl7Location0);
      assertEquals(443, hl7Location0.getFieldRepetition());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setFieldPosition((-1558));
      int int0 = hl7Location0.compareTo(hl7Location1);
      assertEquals((-1558), hl7Location1.getFieldPosition());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setSegmentSequence((-58));
      int int0 = hl7Location1.compareTo(hl7Location0);
      assertEquals((-58), hl7Location1.getSegmentSequence());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentId("[");
      Hl7Location hl7Location1 = new Hl7Location();
      int int0 = hl7Location1.compareTo(hl7Location0);
      assertEquals(1, hl7Location1.getFieldRepetition());
      assertFalse(hl7Location1.hasComponentNumber());
      assertEquals(0, hl7Location1.getSegmentSequence());
      assertEquals((-1), int0);
      assertFalse(hl7Location1.hasFieldPosition());
      assertEquals(0, hl7Location1.getLine());
      assertEquals(0, hl7Location1.getSubComponentNumber());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setLine((-2147));
      int int0 = hl7Location0.compareTo(hl7Location1);
      assertEquals((-2147), hl7Location1.getLine());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.compareTo((Hl7Location) null);
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(1, int0);
      assertFalse(hl7Location0.hasComponentNumber());
      assertFalse(hl7Location0.hasFieldPosition());
      assertFalse(hl7Location0.hasSubComponentNumber());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.compareTo(hl7Location0);
      assertEquals(0, int0);
      assertFalse(hl7Location0.hasFieldPosition());
      assertFalse(hl7Location0.hasComponentNumber());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      assertEquals(0, hl7Location0.getSubComponentNumber());
      
      hl7Location0.setSubComponentNumber(1);
      boolean boolean0 = hl7Location0.hasSubComponentNumber();
      assertEquals(1, hl7Location0.getSubComponentNumber());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      boolean boolean0 = hl7Location0.hasSubComponentNumber();
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertFalse(boolean0);
      assertFalse(hl7Location0.hasFieldPosition());
      assertEquals(0, hl7Location0.getComponentNumber());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber(3622);
      boolean boolean0 = hl7Location0.hasComponentNumber();
      assertEquals(3622, hl7Location0.getComponentNumber());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      boolean boolean0 = hl7Location0.hasComponentNumber();
      assertEquals(0, hl7Location0.getLine());
      assertFalse(boolean0);
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertFalse(hl7Location0.hasFieldPosition());
      assertFalse(hl7Location0.hasSubComponentNumber());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition(1927);
      boolean boolean0 = hl7Location0.hasFieldPosition();
      assertEquals(1927, hl7Location0.getFieldPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      boolean boolean0 = hl7Location0.hasFieldPosition();
      assertFalse(boolean0);
      assertEquals(0, hl7Location0.getComponentNumber());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(0, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentId((String) null);
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals(1, hl7Location1.getFieldRepetition());
      assertEquals(0, hl7Location1.getSegmentSequence());
      assertEquals(0, hl7Location1.getLine());
      assertFalse(boolean0);
      assertFalse(hl7Location1.hasSubComponentNumber());
      assertFalse(hl7Location1.hasFieldPosition());
      assertFalse(hl7Location1.hasComponentNumber());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSubComponentNumber(7);
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location1.equals(hl7Location0);
      assertEquals(7, hl7Location0.getSubComponentNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber((-1968526675));
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals((-1968526675), hl7Location0.getComponentNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition(2744);
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals(2744, hl7Location0.getFieldPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setSegmentSequence(4326);
      boolean boolean0 = hl7Location1.equals(hl7Location0);
      assertEquals(4326, hl7Location1.getSegmentSequence());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      hl7Location1.setLine(838);
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertEquals(838, hl7Location1.getLine());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Object object0 = new Object();
      boolean boolean0 = hl7Location0.equals(object0);
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertFalse(boolean0);
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getFieldPosition());
      assertEquals(0, hl7Location0.getComponentNumber());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location0.equals(hl7Location1);
      assertTrue(boolean0);
      assertEquals(0, hl7Location1.getComponentNumber());
      assertEquals(0, hl7Location1.getFieldPosition());
      assertEquals(0, hl7Location1.getLine());
      assertEquals(0, hl7Location1.getSubComponentNumber());
      assertEquals(1, hl7Location1.getFieldRepetition());
      assertEquals(0, hl7Location1.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      boolean boolean0 = hl7Location0.equals(hl7Location0);
      assertFalse(hl7Location0.hasSubComponentNumber());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertTrue(boolean0);
      assertEquals(0, hl7Location0.getLine());
      assertFalse(hl7Location0.hasComponentNumber());
      assertFalse(hl7Location0.hasFieldPosition());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      boolean boolean0 = hl7Location0.equals((Object) null);
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, hl7Location0.getFieldPosition());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(0, hl7Location0.getLine());
      assertFalse(hl7Location0.hasComponentNumber());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSubComponentNumber(3031);
      hl7Location0.setFieldPosition(3031);
      hl7Location0.getAbbreviated();
      assertEquals(3031, hl7Location0.getSubComponentNumber());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber(7);
      hl7Location0.setFieldPosition(7);
      hl7Location0.getAbbreviated();
      assertEquals(7, hl7Location0.getFieldPosition());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldRepetition(339);
      hl7Location0.setFieldPosition(790);
      hl7Location0.getAbbreviated();
      assertEquals(790, hl7Location0.getFieldPosition());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentSequence(2914);
      hl7Location0.getAbbreviated();
      assertEquals(2914, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber(528);
      hl7Location0.setSubComponentNumber(528);
      hl7Location0.getBaseReference();
      assertEquals(528, hl7Location0.getComponentNumber());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      String string0 = hl7Location0.getBaseReference();
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertFalse(hl7Location0.hasSubComponentNumber());
      assertEquals("-0", string0);
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, hl7Location0.getLine());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldPosition(570);
      hl7Location0.getFieldLoc();
      assertEquals(570, hl7Location0.getFieldPosition());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      String string0 = hl7Location0.getFieldLoc();
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, hl7Location0.getLine());
      assertEquals("", string0);
      assertFalse(hl7Location0.hasComponentNumber());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setSegmentSequence(18);
      hl7Location0.getFieldLoc();
      assertEquals(18, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Hl7Location hl7Location0 = null;
      try {
        hl7Location0 = new Hl7Location((Hl7Location) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.immregistries.mqe.hl7util.model.Hl7Location", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Hl7Location hl7Location0 = null;
      try {
        hl7Location0 = new Hl7Location(">X!_ic", 570, 570);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.immregistries.mqe.hl7util.model.Hl7Location", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.getLine();
      assertEquals(0, int0);
      assertEquals(0, hl7Location0.getComponentNumber());
      assertFalse(hl7Location0.hasFieldPosition());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(0, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.getComponentNumber();
      assertEquals(0, hl7Location0.getLine());
      assertFalse(hl7Location0.hasFieldPosition());
      assertEquals(0, int0);
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.hashCode();
      assertFalse(hl7Location0.hasFieldPosition());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertFalse(hl7Location0.hasComponentNumber());
      assertEquals(0, hl7Location0.getLine());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.getSegmentSequence();
      assertEquals(0, int0);
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getFieldPosition());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getComponentNumber());
      assertEquals(0, hl7Location0.getSubComponentNumber());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.getSubComponentNumber();
      assertFalse(hl7Location0.hasComponentNumber());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getFieldPosition());
      assertEquals(0, int0);
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getSegmentSequence());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.getSegmentId();
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, hl7Location0.getLine());
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getFieldPosition());
      assertFalse(hl7Location0.hasComponentNumber());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Hl7Location hl7Location0 = null;
      try {
        hl7Location0 = new Hl7Location(">X!_ic", 570);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.immregistries.mqe.hl7util.model.Hl7Location", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.getFieldRepetition();
      assertEquals(0, hl7Location0.getSubComponentNumber());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, hl7Location0.getLine());
      assertFalse(hl7Location0.hasFieldPosition());
      assertEquals(1, int0);
      assertFalse(hl7Location0.hasComponentNumber());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setComponentNumber(747);
      hl7Location0.getBaseReference();
      assertEquals(747, hl7Location0.getComponentNumber());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      hl7Location0.setFieldRepetition((-1241));
      Hl7Location hl7Location1 = new Hl7Location();
      boolean boolean0 = hl7Location1.equals(hl7Location0);
      assertEquals((-1241), hl7Location0.getFieldRepetition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      int int0 = hl7Location0.getFieldPosition();
      assertEquals(1, hl7Location0.getFieldRepetition());
      assertEquals(0, hl7Location0.getComponentNumber());
      assertEquals(0, hl7Location0.getLine());
      assertFalse(hl7Location0.hasSubComponentNumber());
      assertEquals(0, hl7Location0.getSegmentSequence());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Hl7Location hl7Location0 = new Hl7Location();
      String string0 = hl7Location0.toString();
      assertEquals("[0]-0[1].0.0", string0);
      assertEquals(0, hl7Location0.getLine());
  }
}
