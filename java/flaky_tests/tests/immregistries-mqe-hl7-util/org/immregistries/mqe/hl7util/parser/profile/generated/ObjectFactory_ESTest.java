/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:26:33 GMT 2022
 */

package org.immregistries.mqe.hl7util.parser.profile.generated;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.parser.profile.generated.ConformanceStatement;
import org.immregistries.mqe.hl7util.parser.profile.generated.DynamicDef;
import org.immregistries.mqe.hl7util.parser.profile.generated.Encodings;
import org.immregistries.mqe.hl7util.parser.profile.generated.HL7V2XConformanceProfile;
import org.immregistries.mqe.hl7util.parser.profile.generated.MetaData;
import org.immregistries.mqe.hl7util.parser.profile.generated.ObjectFactory;
import org.immregistries.mqe.hl7util.parser.profile.generated.Predicate;
import org.immregistries.mqe.hl7util.parser.profile.generated.SegmentGroup;
import org.immregistries.mqe.hl7util.parser.profile.generated.StaticDef;
import org.immregistries.mqe.hl7util.parser.profile.intf.Component;
import org.immregistries.mqe.hl7util.parser.profile.intf.Field;
import org.immregistries.mqe.hl7util.parser.profile.intf.HL7Segment;
import org.immregistries.mqe.hl7util.parser.profile.intf.SubComponent;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectFactory_ESTest extends ObjectFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Predicate predicate0 = objectFactory0.createPredicate();
      assertNull(predicate0.getEnglishDescription());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      StaticDef staticDef0 = objectFactory0.createStaticDef();
      assertNull(staticDef0.getEventType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ConformanceStatement conformanceStatement0 = objectFactory0.createConformanceStatement();
      assertNull(conformanceStatement0.getId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      HL7V2XConformanceProfile hL7V2XConformanceProfile0 = objectFactory0.createHL7V2XConformanceProfile();
      assertNull(hL7V2XConformanceProfile0.getHL7Version());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      HL7Segment hL7Segment0 = objectFactory0.createSegment();
      assertNull(hL7Segment0.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DynamicDef dynamicDef0 = objectFactory0.createDynamicDef();
      assertNull(dynamicDef0.getMsgAckMode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Encodings encodings0 = objectFactory0.createEncodings();
      assertNull(encodings0.getEncoding());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      MetaData metaData0 = objectFactory0.createMetaData();
      assertNull(metaData0.getValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Field field0 = (Field)objectFactory0.createField();
      assertNull(field0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SegmentGroup segmentGroup0 = objectFactory0.createSegmentGroup();
      assertNull(segmentGroup0.getMax());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Component component0 = (Component)objectFactory0.createComponent();
      assertNull(component0.getMinLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SubComponent subComponent0 = (SubComponent)objectFactory0.createSubComponent();
      assertNull(subComponent0.getTable());
  }
}
