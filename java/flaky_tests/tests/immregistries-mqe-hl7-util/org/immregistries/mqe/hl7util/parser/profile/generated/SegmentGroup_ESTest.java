/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:11:04 GMT 2022
 */

package org.immregistries.mqe.hl7util.parser.profile.generated;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.parser.profile.generated.SegmentGroup;
import org.immregistries.mqe.hl7util.parser.profile.intf.Segment;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SegmentGroup_ESTest extends SegmentGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.setUsage("org.immregistries.mqe.hl7util.parser.profile.generated.SegmentGroup");
      String string0 = segmentGroup0.getUsage();
      assertEquals("org.immregistries.mqe.hl7util.parser.profile.generated.SegmentGroup", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      LinkedList<Segment> linkedList0 = new LinkedList<Segment>();
      segmentGroup0.segment = (List<Segment>) linkedList0;
      Segment segment0 = new Segment();
      linkedList0.add(segment0);
      List<Segment> list0 = segmentGroup0.getSegment();
      assertTrue(list0.contains(segment0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.setName("0");
      String string0 = segmentGroup0.getName();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.name = "";
      String string0 = segmentGroup0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      Byte byte0 = Byte.valueOf((byte)0);
      segmentGroup0.setMin(byte0);
      Byte byte1 = segmentGroup0.getMin();
      assertEquals((byte)0, (byte)byte1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      Byte byte0 = Byte.valueOf((byte)49);
      segmentGroup0.setMin(byte0);
      Byte byte1 = segmentGroup0.getMin();
      assertEquals((byte)49, (byte)byte1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      Byte byte0 = Byte.valueOf((byte) (-61));
      segmentGroup0.min = byte0;
      Byte byte1 = segmentGroup0.getMin();
      assertEquals((byte) (-61), (byte)byte1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.max = "nMKQZBNdo|$_Bs0Q~;";
      String string0 = segmentGroup0.getMax();
      assertEquals("nMKQZBNdo|$_Bs0Q~;", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.setLongName("");
      String string0 = segmentGroup0.getLongName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      List<Segment> list0 = segmentGroup0.getSegment();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      Byte byte0 = segmentGroup0.getMin();
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.setMax("");
      String string0 = segmentGroup0.getMax();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      String string0 = segmentGroup0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.setUsage("");
      String string0 = segmentGroup0.getUsage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      String string0 = segmentGroup0.getLongName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      String string0 = segmentGroup0.getMax();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      String string0 = segmentGroup0.getUsage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SegmentGroup segmentGroup0 = new SegmentGroup();
      segmentGroup0.setLongName("`GPYM'V");
      String string0 = segmentGroup0.getLongName();
      assertEquals("`GPYM'V", string0);
  }
}
