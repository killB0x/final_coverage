/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 10:29:03 GMT 2022
 */

package org.immregistries.mqe.hl7util.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.parser.HL7Reader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HL7Reader_ESTest extends HL7Reader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      hL7Reader0.getValueRepeat(2, 2, (-2271));
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      String string0 = hL7Reader0.getValueRepeat(0, (-4048), (-4048));
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("[~|");
      int int0 = hL7Reader0.getRepeatCount(0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals(2, int0);
      assertEquals("[~", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("aD\"^M$");
      assertEquals("", hL7Reader0.getSegmentName());
      
      String string0 = hL7Reader0.getValue((-1), 0, 1);
      assertEquals("^", hL7Reader0.getFieldSeparator());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|MSH|");
      hL7Reader0.gotoSegmentPosition(953);
      hL7Reader0.getOriginalSegment();
      assertEquals(953, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|MSH|");
      hL7Reader0.advanceToSegment("MSH|MSH|MSH|", "MSH|MSH|MSH|");
      hL7Reader0.getOriginalSegment();
      assertEquals(1, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("BHS|");
      String string0 = hL7Reader0.getValue(2);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("BHS", hL7Reader0.getSegmentName());
      assertEquals("", string0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      hL7Reader0.gotoSegmentPosition(885);
      String[] stringArray0 = new String[2];
      hL7Reader0.advanceToSegment("FHS", stringArray0);
      assertEquals(885, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|MSH|");
      hL7Reader0.gotoSegmentPosition(953);
      hL7Reader0.advanceToSegment("G,#y", "G,#y");
      assertEquals(953, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("4,5;^Iez5Ert:|v");
      hL7Reader0.gotoSegmentPosition((-177));
      // Undeclared exception!
      try { 
        hL7Reader0.advanceToSegmentWithValue("FHS", (-1), "");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      hL7Reader0.gotoSegmentPosition(2085);
      boolean boolean0 = hL7Reader0.advanceToSegmentWithValue("", 0, "");
      assertEquals(2085, hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|MSH|");
      hL7Reader0.gotoSegmentPosition(953);
      boolean boolean0 = hL7Reader0.advanceToSegment("MSH|MSH|MSH|");
      assertEquals(953, hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      hL7Reader0.gotoSegmentPosition(885);
      boolean boolean0 = hL7Reader0.advance();
      assertEquals(885, hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MS|BHS|FS|");
      String string0 = hL7Reader0.getValue(0, 0, (-1844665612));
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("MSH", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("BHS|FHS|FHS|");
      String string0 = hL7Reader0.getValue(0, 1);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("BHS", string0);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS");
      hL7Reader0.getValue(4, 4);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("BHS|FHS|FHS|");
      hL7Reader0.advance();
      int int0 = hL7Reader0.getSegmentPosition();
      assertEquals("BHS|FHS|FHS|", hL7Reader0.getOriginalSegment());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      assertEquals("FHS", hL7Reader0.getSegmentName());
      
      hL7Reader0.advanceToSegment("BHS", "FHS|");
      int int0 = hL7Reader0.getSegmentPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("BHS|");
      String string0 = hL7Reader0.getOriginalField(0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("BHS", string0);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      hL7Reader0.getFieldSeparator();
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      // Undeclared exception!
      try { 
        hL7Reader0.getValueRepeat((-37), (-37), (-37));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      // Undeclared exception!
      try { 
        hL7Reader0.getValueBySearchingRepeats((-1611), (-1611), "FHS|", (-1611));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      // Undeclared exception!
      try { 
        hL7Reader0.getValue((-1425), (-1425), (-1425));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      // Undeclared exception!
      try { 
        hL7Reader0.getValue((-24));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      // Undeclared exception!
      try { 
        hL7Reader0.getRepeatCount((-2102));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      // Undeclared exception!
      try { 
        hL7Reader0.advanceToSegmentWithValue("FHS", 0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|");
      // Undeclared exception!
      try { 
        hL7Reader0.advanceToSegment("MSH|MSH|", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.immregistries.mqe.hl7util.parser.HL7Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("&");
      hL7Reader0.gotoSegmentPosition((-2266));
      // Undeclared exception!
      try { 
        hL7Reader0.advanceToSegment("&", "&");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader(">");
      hL7Reader0.gotoSegmentPosition((-328));
      // Undeclared exception!
      try { 
        hL7Reader0.advanceToSegment(">");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      hL7Reader0.gotoSegmentPosition((-1177));
      // Undeclared exception!
      try { 
        hL7Reader0.advance();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("T#l|;/Ryj^=hF+(W");
      String string0 = hL7Reader0.getValue(2);
      //  // Unstable assertion: assertEquals(";/Ryj", string0);
      //  // Unstable assertion: assertEquals((-1), hL7Reader0.getSegmentPosition());
      //  // Unstable assertion: assertEquals("T#l", hL7Reader0.getSegmentName());
      //  // Unstable assertion: assertEquals("|", hL7Reader0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FS|");
      String string0 = hL7Reader0.getValue(3230);
      assertEquals("", string0);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|MSH|");
      hL7Reader0.getOriginalField(1941);
      assertEquals("MSH", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      hL7Reader0.advanceToSegmentWithValue("FHS", 124, "SBHj");
      hL7Reader0.getOriginalField(124);
      assertEquals(1, hL7Reader0.getSegmentPosition());
      assertEquals("", hL7Reader0.getSegmentName());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      hL7Reader0.getOriginalField(2270);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("BHS|FHS|");
      // Undeclared exception!
      try { 
        hL7Reader0.getOriginalField((-2819));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("?7J0Uk?~|Zo1%td");
      String string0 = hL7Reader0.getSegmentName();
      assertEquals("", string0);
      assertEquals("J", hL7Reader0.getFieldSeparator());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|");
      String string0 = hL7Reader0.getSegmentName();
      assertEquals("MSH", string0);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("}HS|");
      String string0 = hL7Reader0.getValueBySearchingRepeats(0, 0, "$K[sn)Z8", (-1));
      assertEquals("}HS", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("*}~|");
      hL7Reader0.getValueRepeat(2326, 2858, 2858);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("*}~", hL7Reader0.getSegmentName());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("*1~|");
      String string0 = hL7Reader0.getValueRepeat(0, 0, 8);
      assertEquals("", string0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("*1~", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|");
      String string0 = hL7Reader0.getValueRepeat(1, 1, 1);
      assertEquals("MSH", hL7Reader0.getSegmentName());
      assertEquals("|", string0);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("*1~|");
      String string0 = hL7Reader0.getValueBySearchingRepeats(0, 0, "*1~|", 0);
      assertEquals("*1~", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSQwH|");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      hL7Reader0.advanceToSegment((String) null, "MSH|MSQwH|");
      hL7Reader0.getValueBySearchingRepeats((-1717986916), 998, "7_y[", (-1054));
      assertEquals(1, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      hL7Reader0.getValueBySearchingRepeats(0, 124, "QJ1Hrow_/kfA FM<Dh", 124);
      assertEquals("FHS", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      String string0 = hL7Reader0.getValueBySearchingRepeats(1, (-66354878), "|", 1);
      assertEquals("|", string0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("FHS", hL7Reader0.getSegmentName());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|");
      String string0 = hL7Reader0.getValue(0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("MSH", hL7Reader0.getSegmentName());
      assertEquals("MSH", string0);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      hL7Reader0.advance();
      hL7Reader0.getOriginalSegment();
      assertEquals(0, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      hL7Reader0.getOriginalSegment();
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      hL7Reader0.getOriginalSegment();
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      hL7Reader0.getValue(0, 0, 80);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      String[] stringArray0 = new String[0];
      boolean boolean0 = hL7Reader0.advanceToSegment("FHS", stringArray0);
      assertEquals("FHS|", hL7Reader0.getOriginalSegment());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHO|");
      assertEquals("FHO", hL7Reader0.getSegmentName());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "FHO";
      boolean boolean0 = hL7Reader0.advanceToSegment("FHO|", stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      hL7Reader0.advanceToSegment("", (String[]) null);
      assertEquals(0, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("BHS|Q@|'Ib}@3bATy`W");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      String[] stringArray0 = new String[6];
      hL7Reader0.advanceToSegmentWithValue("|", (-1879048189), "BHS|BHS|FHS|");
      hL7Reader0.advanceToSegment("|", stringArray0);
      assertEquals(1, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      String[] stringArray0 = new String[3];
      boolean boolean0 = hL7Reader0.advanceToSegment("%7f>4 0fwX_", stringArray0);
      assertEquals(1, hL7Reader0.getSegmentPosition());
      assertEquals("", hL7Reader0.getSegmentName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      hL7Reader0.advanceToSegment((String) null, (String[]) null);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|BHS|BHS|FHS|");
      boolean boolean0 = hL7Reader0.advanceToSegment("FHS", "MSH|FHS|");
      assertEquals(0, hL7Reader0.getSegmentPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      assertEquals("FHS", hL7Reader0.getSegmentName());
      
      boolean boolean0 = hL7Reader0.advanceToSegment("FHS|", "FHS");
      assertEquals("", hL7Reader0.getSegmentName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      hL7Reader0.advanceToSegmentWithValue("Bu?P", 0, "");
      hL7Reader0.advanceToSegment("Bu?P", "");
      assertEquals(0, hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      hL7Reader0.advanceToSegment((String) null, (String) null);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("}HS|");
      boolean boolean0 = hL7Reader0.advanceToSegmentWithValue("}HS", 0, "}HS");
      assertEquals(0, hL7Reader0.getSegmentPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("aq{");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      hL7Reader0.advanceToSegment("aq{");
      boolean boolean0 = hL7Reader0.advanceToSegmentWithValue("aq{", (-1), "aq{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      boolean boolean0 = hL7Reader0.advanceToSegmentWithValue((String) null, 1, (String) null);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      boolean boolean0 = hL7Reader0.advanceToSegment("FHS");
      assertEquals(0, hL7Reader0.getSegmentPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      hL7Reader0.advanceToSegmentWithValue("Bu?P", 0, "");
      boolean boolean0 = hL7Reader0.advanceToSegment("Bu?P");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|MSH|");
      boolean boolean0 = hL7Reader0.advanceToSegment("MSH|MSH|MSH|");
      assertEquals(1, hL7Reader0.getSegmentPosition());
      assertEquals("", hL7Reader0.getSegmentName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      boolean boolean0 = hL7Reader0.advanceToSegment((String) null);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      hL7Reader0.advanceToSegmentWithValue("Bu?P", 0, "");
      boolean boolean0 = hL7Reader0.advance();
      assertEquals(0, hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSQwH|");
      boolean boolean0 = hL7Reader0.advance();
      assertEquals(0, hL7Reader0.getSegmentPosition());
      
      boolean boolean1 = hL7Reader0.advanceToSegment((String) null, "MSH|MSQwH|");
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      boolean boolean0 = hL7Reader0.advance();
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("FHS|");
      String string0 = hL7Reader0.getValue(1);
      assertEquals("|", string0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("FHS", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|");
      int int0 = hL7Reader0.getSegmentCount();
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("MSH", hL7Reader0.getSegmentName());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("&i|");
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      
      boolean boolean0 = hL7Reader0.advance();
      assertEquals(0, hL7Reader0.getSegmentPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader((String) null);
      int int0 = hL7Reader0.getSegmentCount();
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|");
      hL7Reader0.getValue(1, 60, 502);
      assertEquals("MSH", hL7Reader0.getSegmentName());
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals((-1), hL7Reader0.getSegmentPosition());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSQwH|");
      int int0 = hL7Reader0.getSegmentPosition();
      assertEquals((-1), int0);
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("MSH", hL7Reader0.getSegmentName());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|");
      // Undeclared exception!
      try { 
        hL7Reader0.getValue((-1110), 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|MSH|");
      hL7Reader0.resetPostion();
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", hL7Reader0.getFieldSeparator());
      assertEquals("MSH", hL7Reader0.getSegmentName());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("k`2K]^b?s#[h6");
      hL7Reader0.gotoSegmentPosition((-1983285518));
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        hL7Reader0.advanceToSegment("k`2K]^b?s#[h6", stringArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HL7Reader hL7Reader0 = new HL7Reader("MSH|MSH|");
      String string0 = hL7Reader0.getFieldSeparator();
      assertEquals("MSH", hL7Reader0.getSegmentName());
      assertNotNull(string0);
      assertEquals((-1), hL7Reader0.getSegmentPosition());
      assertEquals("|", string0);
  }
}
