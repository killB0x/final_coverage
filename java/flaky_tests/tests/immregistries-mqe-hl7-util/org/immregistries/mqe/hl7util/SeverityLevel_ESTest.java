/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:03:48 GMT 2022
 */

package org.immregistries.mqe.hl7util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.SeverityLevel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SeverityLevel_ESTest extends SeverityLevel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SeverityLevel severityLevel0 = SeverityLevel.findByLabel("Error");
      assertEquals(SeverityLevel.ERROR, severityLevel0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SeverityLevel[] severityLevelArray0 = SeverityLevel.values();
      assertEquals(4, severityLevelArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SeverityLevel severityLevel0 = SeverityLevel.valueOf("ERROR");
      assertEquals("Error", severityLevel0.getLabel());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SeverityLevel.findByCode("I");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SeverityLevel severityLevel0 = SeverityLevel.WARN;
      String string0 = severityLevel0.getLabel();
      assertEquals("Warn", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SeverityLevel severityLevel0 = SeverityLevel.findByLabel("warn");
      assertEquals(SeverityLevel.WARN, severityLevel0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SeverityLevel severityLevel0 = SeverityLevel.ERROR;
      String string0 = severityLevel0.getDescription();
      assertEquals("Rejected with Errors", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SeverityLevel.findByLabel("i`fo");
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SeverityLevel severityLevel0 = SeverityLevel.ERROR;
      String string0 = severityLevel0.getCode();
      assertEquals("E", string0);
  }
}
