/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:10:16 GMT 2022
 */

package org.immregistries.mqe.hl7util.transform;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.hl7util.transform.Patient;
import org.immregistries.mqe.hl7util.transform.PatientType;
import org.immregistries.mqe.hl7util.transform.TransformRequest;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransformRequest_ESTest extends TransformRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("P");
      transformRequest0.setYesterday((String) null);
      transformRequest0.getYesterday();
      assertEquals("P\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("ANY_CHILD");
      transformRequest0.setUserid((String) null);
      transformRequest0.getUserid();
      assertEquals("ANY_CHILD\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("yyyyMMddHHmmssZ");
      transformRequest0.setUserid("J*");
      transformRequest0.getUserid();
      assertEquals("yyyyMMddHHmmssZ\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("7}Q&(Q}w)_Tpv=(oltf");
      transformRequest0.setTransformText("7}Q&(Q}w)_Tpv=(oltf");
      transformRequest0.getTransformText();
      assertEquals("7}Q&(Q}w)_Tpv=(oltf\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setTransformText("");
      transformRequest0.getTransformText();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("yyyyMMddHHmmssZ");
      transformRequest0.setTomorrow((String) null);
      transformRequest0.getTomorrow();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("yyyyMMddHHmmssZ\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setTomorrow("");
      transformRequest0.getTomorrow();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("!C#!%<7ZHbj2");
      transformRequest0.setToday((String) null);
      transformRequest0.getToday();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("!C#!%<7ZHbj2\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("p");
      transformRequest0.setToday("");
      transformRequest0.getToday();
      assertEquals("p\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setThreeDaysAgo("");
      transformRequest0.getThreeDaysAgo();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("7}Q&(Q}w)_Tpv=(oltf");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      transformRequest0.setTestCaseMessageMap(hashMap0);
      transformRequest0.getTestCaseMessageMap();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("7}Q&(Q}w)_Tpv=(oltf\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("z");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("]Sf_LuF", (String) null);
      transformRequest0.setTestCaseMessageMap(hashMap0);
      transformRequest0.getTestCaseMessageMap();
      assertEquals("z\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(";_4; -Ge5cTc ");
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      
      transformRequest0.setSegmentSeparator((String) null);
      transformRequest0.getSegmentSeparator();
      assertEquals(";_4; -Ge5cTc \r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(",nv6 ]");
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      
      transformRequest0.setSegmentSeparator("");
      transformRequest0.getSegmentSeparator();
      assertEquals(",nv6 ]\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(" ERa/");
      assertEquals(" ERa/\r", transformRequest0.getResultText());
      
      transformRequest0.setResultText((String) null);
      transformRequest0.getResultText();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(",nv6 ]");
      assertEquals(",nv6 ]\r", transformRequest0.getResultText());
      
      transformRequest0.setResultText("");
      transformRequest0.getResultText();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("};tw");
      PatientType patientType0 = PatientType.NONE;
      transformRequest0.setPatientType(patientType0);
      transformRequest0.getPatientType();
      assertEquals("};tw\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("yyyyMMddHHmmss");
      Patient patient0 = new Patient();
      transformRequest0.setPatient(patient0);
      transformRequest0.getPatient();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("yyyyMMddHHmmss\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("yyyyMMdd");
      Patient patient0 = new Patient();
      patient0.setBirthCount(1);
      transformRequest0.setPatient(patient0);
      transformRequest0.getPatient();
      assertEquals("yyyyMMdd\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("A'Q[BhYgvp2*jyjSs");
      Patient patient0 = new Patient();
      patient0.setBirthCount((-355));
      transformRequest0.setPatient(patient0);
      transformRequest0.getPatient();
      assertEquals("A'Q[BhYgvp2*jyjSs\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setPassword((String) null);
      transformRequest0.getPassword();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("!C#!%<7ZHbj2");
      transformRequest0.setPassword("!C#!%<7ZHbj2");
      transformRequest0.getPassword();
      assertEquals("!C#!%<7ZHbj2\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("TODDLER");
      transformRequest0.setOtherid((String) null);
      transformRequest0.getOtherid();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("TODDLER\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("yyyyMMddHHmmssZ");
      transformRequest0.setOtherid("yyyyMMddHHmmssZ");
      transformRequest0.getOtherid();
      assertEquals("yyyyMMddHHmmssZ\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(";_4; -Ge5cTc ");
      transformRequest0.setNowNoTimezone((String) null);
      transformRequest0.getNowNoTimezone();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals(";_4; -Ge5cTc \r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("p");
      transformRequest0.setNowNoTimezone("");
      transformRequest0.getNowNoTimezone();
      assertEquals("p\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("TODDLER");
      transformRequest0.setNow((String) null);
      transformRequest0.getNow();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("TODDLER\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setNow("");
      transformRequest0.getNow();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setLongTimeFromNow((String) null);
      transformRequest0.getLongTimeFromNow();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setLongTimeFromNow("");
      transformRequest0.getLongTimeFromNow();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("B{xqX@MuJr)@+`84i*$");
      transformRequest0.setLine("h8Tj`");
      transformRequest0.getLine();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("B{xqX@MuJr)@+`84i*$\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setLine("");
      transformRequest0.getLine();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("org.immregistries.mqe.hl7util.transform.PatientType");
      transformRequest0.setFacilityid((String) null);
      transformRequest0.getFacilityid();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("org.immregistries.mqe.hl7util.transform.PatientType\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("$");
      transformRequest0.setFacilityid("TWELVE_YEARS_OLD");
      transformRequest0.getFacilityid();
      assertEquals("$\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("DaUYQk(\":|i3dtF\r");
      transformRequest0.setDayBeforeYesterday((String) null);
      transformRequest0.getDayBeforeYesterday();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("DaUYQk(\":|i3dtF\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setDayBeforeYesterday("");
      transformRequest0.getDayBeforeYesterday();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(" ERa/");
      transformRequest0.setCurrentFilename((String) null);
      transformRequest0.getCurrentFilename();
      assertEquals(" ERa/\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setCurrentFilename("/p2;+|\r");
      transformRequest0.getCurrentFilename();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("yyyyMMddHHmmss");
      transformRequest0.setCurrentControlId((String) null);
      transformRequest0.getCurrentControlId();
      assertEquals("yyyyMMddHHmmss\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("u?KkdJmnU=(3}");
      transformRequest0.setCurrentControlId("BABY");
      transformRequest0.getCurrentControlId();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("u?KkdJmnU=(3}\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TransformRequest transformRequest0 = null;
      try {
        transformRequest0 = new TransformRequest((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.getTomorrow();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.getThreeDaysAgo();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.setYesterday("");
      transformRequest0.getYesterday();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.getNowNoTimezone();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("TODDLER");
      transformRequest0.getPatientType();
      assertEquals("TODDLER\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(" ERa/");
      transformRequest0.getCurrentControlId();
      assertEquals(" ERa/\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("TODDLER");
      transformRequest0.getLongTimeFromNow();
      assertEquals("TODDLER\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("Y(I!");
      transformRequest0.getDayBeforeYesterday();
      assertEquals("Y(I!\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("JC(9tRG8iu>n}a-x\r");
      transformRequest0.getPatient();
      assertEquals("JC(9tRG8iu>n}a-x\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("7}Q&(Q}w)_Tpv=(oltf");
      transformRequest0.getCurrentFilename();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("7}Q&(Q}w)_Tpv=(oltf\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("org.immregistries.mqe.hl7util.transform.PatientType");
      transformRequest0.getFacilityid();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("org.immregistries.mqe.hl7util.transform.PatientType\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("Y(I!");
      String string0 = transformRequest0.getResultText();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("Y(I!\r", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("TODDLER");
      transformRequest0.getOtherid();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("TODDLER\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("yyyyMMddHHmmssZ");
      transformRequest0.getPassword();
      assertEquals("yyyyMMddHHmmssZ\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("JC(9tRG8iu>n}a-x\r");
      transformRequest0.getNow();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("JC(9tRG8iu>n}a-x\r", transformRequest0.getResultText());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("ANY_CHILD");
      transformRequest0.getUserid();
      assertEquals("ANY_CHILD\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("p");
      transformRequest0.getToday();
      assertEquals("p\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("JC(9tRG8iu>n}a-x\r");
      transformRequest0.getTestCaseMessageMap();
      assertEquals("JC(9tRG8iu>n}a-x\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("");
      transformRequest0.getTransformText();
      assertEquals("\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("B{xqX@MuJr)@+`84i*$");
      transformRequest0.getLine();
      assertEquals("B{xqX@MuJr)@+`84i*$\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("JC(9tRG8iu>n}a-x\r");
      transformRequest0.getYesterday();
      assertEquals("JC(9tRG8iu>n}a-x\r", transformRequest0.getResultText());
      assertEquals("\r", transformRequest0.getSegmentSeparator());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest(";_4; -Ge5cTc ");
      String string0 = transformRequest0.getSegmentSeparator();
      assertEquals(";_4; -Ge5cTc \r", transformRequest0.getResultText());
      assertEquals("\r", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      TransformRequest transformRequest0 = new TransformRequest("JC(9tRG8iu>n}a-x\r");
      transformRequest0.setThreeDaysAgo((String) null);
      transformRequest0.getThreeDaysAgo();
      assertEquals("\r", transformRequest0.getSegmentSeparator());
      assertEquals("JC(9tRG8iu>n}a-x\r", transformRequest0.getResultText());
  }
}
