/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 11:07:32 GMT 2022
 */

package org.immregistries.mqe.hl7util.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.immregistries.mqe.hl7util.test.NameGenerator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NameGenerator_ESTest extends NameGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Random.setNextRandom((-1476));
      NameGenerator nameGenerator0 = NameGenerator.INSTANCE;
      // Undeclared exception!
      try { 
        nameGenerator0.getRandomName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NameGenerator[] nameGeneratorArray0 = NameGenerator.values();
      assertEquals(1, nameGeneratorArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NameGenerator nameGenerator0 = NameGenerator.valueOf("INSTANCE");
      assertEquals(NameGenerator.INSTANCE, nameGenerator0);
  }
}
