/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 10:58:05 GMT 2022
 */

package org.immregistries.mqe.vxu.hl7;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.immregistries.mqe.vxu.hl7.Name;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Name_ESTest extends Name_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Name name0 = new Name();
      name0.setTypeCode((String) null);
      String string0 = name0.getTypeCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Name name0 = new Name();
      name0.setTypeCode("Name{last='', first='', middle='', suffix='', prefix='', type=''}");
      String string0 = name0.getTypeCode();
      assertEquals("Name{last='', first='', middle='', suffix='', prefix='', type=''}", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Name name0 = new Name();
      name0.setTypeCode(", first='");
      String string0 = name0.getType();
      assertEquals(", first='", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Name name0 = new Name();
      name0.setSuffix((String) null);
      String string0 = name0.getSuffix();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Name name0 = new Name();
      name0.setSuffix("m3");
      String string0 = name0.getSuffix();
      assertEquals("m3", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Name name0 = new Name();
      name0.setPrefix((String) null);
      String string0 = name0.getPrefix();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Name name0 = new Name();
      name0.setPrefix("XR5( ");
      String string0 = name0.getPrefix();
      assertEquals("XR5( ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Name name0 = new Name();
      name0.setMiddle((String) null);
      String string0 = name0.getMiddle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Name name0 = new Name();
      name0.setMiddle(", type='");
      String string0 = name0.getMiddle();
      assertEquals(", type='", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Name name0 = new Name();
      name0.setLast((String) null);
      String string0 = name0.getLast();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Name name0 = new Name();
      name0.setLast("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}");
      String string0 = name0.getLast();
      assertEquals("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Name name0 = new Name();
      name0.setFirst((String) null);
      String string0 = name0.getFirst();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Name name0 = new Name();
      name0.setFirst("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}");
      String string0 = name0.getFirst();
      assertEquals("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Name name0 = new Name();
      name0.setSuffix("XR5(  Name{last='', first='null', middle='', suffix='', prefix='', type='null'} Name{last='', first='null', middle='', suffix='', prefix='', type='null'}");
      String string0 = name0.getFullName();
      assertEquals("XR5(  Name{last='', first='null', middle='', suffix='', prefix='', type='null'} Name{last='', first='null', middle='', suffix='', prefix='', type='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Name name0 = new Name();
      name0.setSuffix((String) null);
      String string0 = name0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Name name0 = new Name();
      name0.setLast("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}");
      String string0 = name0.getFullName();
      assertEquals("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Name name0 = new Name();
      name0.setLast((String) null);
      String string0 = name0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Name name0 = new Name();
      name0.setMiddle("(Z6|8u\"4[{KZK|9M87v");
      String string0 = name0.getFullName();
      assertEquals("(Z6|8u\"4[{KZK|9M87v", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Name name0 = new Name();
      name0.setMiddle((String) null);
      String string0 = name0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Name name0 = new Name();
      name0.setFirst("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}");
      String string0 = name0.getFullName();
      assertEquals("Name{last='', first='null', middle='', suffix='', prefix='', type='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Name name0 = new Name();
      name0.setFirst((String) null);
      String string0 = name0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Name name0 = new Name();
      name0.setPrefix("XR5( ");
      String string0 = name0.getFullName();
      assertEquals("XR5(", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Name name0 = new Name();
      name0.setPrefix((String) null);
      String string0 = name0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.getPrefix();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.getFirst();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Name name0 = new Name();
      name0.setTypeCode((String) null);
      String string0 = name0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.getTypeCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.getSuffix();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.toString();
      assertEquals("Name{last='', first='', middle='', suffix='', prefix='', type=''}", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.getLast();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Name name0 = new Name();
      String string0 = name0.getMiddle();
      assertEquals("", string0);
  }
}
