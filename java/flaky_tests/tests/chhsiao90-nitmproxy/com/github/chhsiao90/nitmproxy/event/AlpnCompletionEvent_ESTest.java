/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 20:15:50 GMT 2022
 */

package com.github.chhsiao90.nitmproxy.event;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.chhsiao90.nitmproxy.event.AlpnCompletionEvent;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AlpnCompletionEvent_ESTest extends AlpnCompletionEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      AlpnCompletionEvent alpnCompletionEvent0 = new AlpnCompletionEvent((List<String>) null, mockThrowable0);
      List<String> list0 = alpnCompletionEvent0.protocols();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("WYJ~8Tn+");
      AlpnCompletionEvent alpnCompletionEvent0 = new AlpnCompletionEvent(linkedList0);
      List<String> list0 = alpnCompletionEvent0.protocols();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.forLanguageTag("Dbm");
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      AlpnCompletionEvent alpnCompletionEvent0 = new AlpnCompletionEvent(list0);
      List<String> list1 = alpnCompletionEvent0.protocols();
      assertSame(list0, list1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.forLanguageTag("Dbm");
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      MockThrowable mockThrowable0 = new MockThrowable("Dbm");
      AlpnCompletionEvent alpnCompletionEvent0 = new AlpnCompletionEvent(list0, mockThrowable0);
      Throwable throwable0 = alpnCompletionEvent0.cause();
      assertSame(throwable0, mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AlpnCompletionEvent alpnCompletionEvent0 = new AlpnCompletionEvent((List<String>) null, (Throwable) null);
      boolean boolean0 = alpnCompletionEvent0.isSuccess();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      AlpnCompletionEvent alpnCompletionEvent0 = new AlpnCompletionEvent((List<String>) null, mockThrowable0);
      boolean boolean0 = alpnCompletionEvent0.isSuccess();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      AlpnCompletionEvent alpnCompletionEvent0 = new AlpnCompletionEvent(linkedList0);
      Throwable throwable0 = alpnCompletionEvent0.cause();
      assertNull(throwable0);
  }
}
