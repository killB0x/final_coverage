/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 16:04:02 GMT 2022
 */

package com.bitpay.sdk_light.model.Invoice;

import org.junit.Test;
import static org.junit.Assert.*;
import com.bitpay.sdk_light.model.Invoice.SupportedTransactionCurrencies;
import com.bitpay.sdk_light.model.Invoice.SupportedTransactionCurrency;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SupportedTransactionCurrencies_ESTest extends SupportedTransactionCurrencies_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      supportedTransactionCurrencies0.setEth((SupportedTransactionCurrency) null);
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getEth();
      assertNull(supportedTransactionCurrency0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      supportedTransactionCurrencies0.setBtc((SupportedTransactionCurrency) null);
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getBtc();
      assertNull(supportedTransactionCurrency0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getBch();
      supportedTransactionCurrency0.setEnabled(true);
      supportedTransactionCurrencies0.setBtc(supportedTransactionCurrency0);
      SupportedTransactionCurrency supportedTransactionCurrency1 = supportedTransactionCurrencies0.getBtc();
      assertNull(supportedTransactionCurrency1.getReason());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      supportedTransactionCurrencies0.setBch((SupportedTransactionCurrency) null);
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getBch();
      assertNull(supportedTransactionCurrency0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getBch();
      supportedTransactionCurrency0.setEnabled(true);
      SupportedTransactionCurrency supportedTransactionCurrency1 = supportedTransactionCurrencies0.getBch();
      assertNull(supportedTransactionCurrency1.getReason());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getBch();
      supportedTransactionCurrencies0.setEth(supportedTransactionCurrency0);
      supportedTransactionCurrency0.setEnabled(true);
      SupportedTransactionCurrency supportedTransactionCurrency1 = supportedTransactionCurrencies0.getEth();
      assertNull(supportedTransactionCurrency1.getReason());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getEth();
      assertFalse(supportedTransactionCurrency0.getEnabled());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = new SupportedTransactionCurrencies();
      SupportedTransactionCurrency supportedTransactionCurrency0 = supportedTransactionCurrencies0.getBtc();
      supportedTransactionCurrencies0.setBtc(supportedTransactionCurrency0);
      assertFalse(supportedTransactionCurrency0.getEnabled());
  }
}
