/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 15:59:43 GMT 2022
 */

package com.bitpay.sdk_light.model.Invoice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.bitpay.sdk_light.model.Invoice.Buyer;
import com.bitpay.sdk_light.model.Invoice.Invoice;
import com.bitpay.sdk_light.model.Invoice.InvoiceBuyerProvidedInfo;
import com.bitpay.sdk_light.model.Invoice.InvoiceTransaction;
import com.bitpay.sdk_light.model.Invoice.MinerFees;
import com.bitpay.sdk_light.model.Invoice.RefundInfo;
import com.bitpay.sdk_light.model.Invoice.Shopper;
import com.bitpay.sdk_light.model.Invoice.SupportedTransactionCurrencies;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Invoice_ESTest extends Invoice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Invoice invoice0 = new Invoice((Double) null, "#vkw*x=");
      invoice0.setUrl("^'dmHP4C*$ ");
      invoice0.getUrl();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setUrl("");
      invoice0.getUrl();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      ArrayList<InvoiceTransaction> arrayList0 = new ArrayList<InvoiceTransaction>();
      InvoiceTransaction invoiceTransaction0 = new InvoiceTransaction();
      arrayList0.add(invoiceTransaction0);
      invoice0.setTransactions(arrayList0);
      invoice0.getTransactions();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setTransactionSpeed((String) null);
      invoice0.getTransactionSpeed();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Double double0 = new Double((-511.420331));
      Invoice invoice0 = new Invoice(double0, ",WZX^9VaM");
      invoice0.setTransactionSpeed("WST");
      invoice0.getTransactionSpeed();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Invoice invoice0 = new Invoice(double0, "h|9XP");
      invoice0.setTransactionCurrency("h|9XP");
      invoice0.getTransactionCurrency();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setTransactionCurrency("");
      invoice0.getTransactionCurrency();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setToken((String) null);
      invoice0.getToken();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Double double0 = new Double(1.0);
      Invoice invoice0 = new Invoice(double0, "XSU");
      invoice0.setTargetConfirmations(5L);
      long long0 = invoice0.getTargetConfirmations();
      assertEquals(5L, long0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setTargetConfirmations((-1L));
      long long0 = invoice0.getTargetConfirmations();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setSupportedTransactionCurrencies((SupportedTransactionCurrencies) null);
      invoice0.getSupportedTransactionCurrencies();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Invoice invoice0 = new Invoice((Double) null, "#vkw*x=");
      invoice0.setStatus("a");
      invoice0.getStatus();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Invoice invoice0 = new Invoice((Double) null, (String) null);
      invoice0.setStatus("");
      invoice0.getStatus();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setShopper((Shopper) null);
      invoice0.getShopper();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Double double0 = new Double(1242.06);
      Invoice invoice0 = new Invoice(double0, "");
      ArrayList<RefundInfo> arrayList0 = new ArrayList<RefundInfo>();
      invoice0.setRefundInfo(arrayList0);
      invoice0.getRefundInfo();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      ArrayList<RefundInfo> arrayList0 = new ArrayList<RefundInfo>();
      RefundInfo refundInfo0 = new RefundInfo();
      arrayList0.add(refundInfo0);
      invoice0.setRefundInfo(arrayList0);
      invoice0.getRefundInfo();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      invoice0.setRefundAddresses(arrayList0);
      invoice0.getRefundAddresses();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      invoice0.setRefundAddresses(arrayList0);
      arrayList0.add((Object) "com.bitpay.sdk_light.model.Invoice.Invoice");
      invoice0.getRefundAddresses();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setRefundAddressRequestPending(true);
      boolean boolean0 = invoice0.getRefundAddressRequestPending();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Double double0 = new Double((-512.95329));
      Invoice invoice0 = new Invoice(double0, "TO[tqn-?84Z+?lHI$:");
      invoice0.setRedirectURL((String) null);
      invoice0.getRedirectURL();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Invoice invoice0 = new Invoice(double0, "h|9XP");
      invoice0.setRedirectURL(";x");
      invoice0.getRedirectURL();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "");
      invoice0.getPrice();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Double double0 = new Double(1.0);
      Invoice invoice0 = new Invoice(double0, "com.bitpay.sdk_light.model.Invoice.PaymentTotal");
      invoice0.getPrice();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Double double0 = new Double((-796.2077539878758));
      Invoice invoice0 = new Invoice(double0, "|s}n?5}^3a)");
      invoice0.getPrice();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setPosData((String) null);
      invoice0.getPosData();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setPosData("0}D|-l}i|");
      invoice0.getPosData();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Double double0 = Double.valueOf(2762.4104);
      Invoice invoice0 = new Invoice(double0, "com.bitpay.sdk_light.model.Invoice.RefundInfo");
      assertFalse(invoice0.getPhysical());
      
      invoice0.setPhysical(true);
      boolean boolean0 = invoice0.getPhysical();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0);
      invoice0.setPaymentCurrencies(list0);
      invoice0.getPaymentCurrencies();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("XOF");
      invoice0.setPaymentCurrencies(arrayList0);
      invoice0.getPaymentCurrencies();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setOrderId((String) null);
      invoice0.getOrderId();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "");
      invoice0.setOrderId("[i^[r;'ZdK&j,*u:^");
      invoice0.getOrderId();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setNotificationURL((String) null);
      invoice0.getNotificationURL();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Double double0 = new Double(1.0);
      Invoice invoice0 = new Invoice(double0, "com.bitpay.sdk_light.model.Invoice.PaymentTotal");
      invoice0.setNotificationURL("oCs$Ion^H:");
      invoice0.getNotificationURL();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setNotificationEmail((String) null);
      invoice0.getNotificationEmail();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setNotificationEmail("dG\rckNI?Xk7|3hI12");
      invoice0.getNotificationEmail();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.setMinerFees((MinerFees) null);
      invoice0.getMinerFees();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      Boolean boolean0 = Boolean.TRUE;
      invoice0.setLowFeeDetected(boolean0);
      invoice0.getLowFeeDetected();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setItemDesc((String) null);
      invoice0.getItemDesc();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Double double0 = new Double(1.0);
      Invoice invoice0 = new Invoice(double0, "com.bitpay.sdk_light.model.Invoice.PaymentTotal");
      invoice0.setItemDesc("odqZ Bj'PxCBMtgMO");
      invoice0.getItemDesc();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setItemCode((String) null);
      invoice0.getItemCode();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setItemCode("KvLM3mBO[a[>bz^");
      invoice0.getItemCode();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setInvoiceTime(3384L);
      long long0 = invoice0.getInvoiceTime();
      assertEquals(3384L, long0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Double double0 = new Double((-511.420331));
      Invoice invoice0 = new Invoice(double0, ",WZX^9VaM");
      invoice0.setInvoiceTime((-302L));
      long long0 = invoice0.getInvoiceTime();
      assertEquals((-302L), long0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Double double0 = new Double((-512.95329));
      Invoice invoice0 = new Invoice(double0, "TO[tqn-?84Z+?lHI$:");
      invoice0.setId("TO[tqn-?84Z+?lHI$:");
      invoice0.getId();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "CVE");
      invoice0.setId("");
      invoice0.getId();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setGuid((String) null);
      invoice0.getGuid();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setGuid("/b7n{ *`l[7pVa+");
      invoice0.getGuid();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      assertFalse(invoice0.getExtendedNotifications());
      
      invoice0.setExtendedNotifications(true);
      boolean boolean0 = invoice0.getExtendedNotifications();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setExpirationTime(890L);
      long long0 = invoice0.getExpirationTime();
      assertEquals(890L, long0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setExpirationTime((-2294L));
      long long0 = invoice0.getExpirationTime();
      assertEquals((-2294L), long0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      Hashtable<String, Hashtable<String, String>> hashtable0 = new Hashtable<String, Hashtable<String, String>>(68);
      Hashtable<String, String> hashtable1 = new Hashtable<String, String>();
      hashtable0.put("U#/|<CrD:l+-g", hashtable1);
      invoice0.setExchangeRates(hashtable0);
      invoice0.getExchangeRates();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Double double0 = new Double(733.3283933);
      Invoice invoice0 = new Invoice(double0, "");
      invoice0.setExceptionStatus("2bx|HgYQumM^mJ {K*");
      invoice0.getExceptionStatus();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setExceptionStatus("");
      invoice0.getExceptionStatus();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "~X+a=;qHi,d");
      invoice0.setCurrentTime((-1L));
      long long0 = invoice0.getCurrentTime();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Double double0 = new Double(0);
      Invoice invoice0 = new Invoice(double0, "'vj");
      invoice0.getCurrency();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Double double0 = new Double(733.3283933);
      Invoice invoice0 = new Invoice(double0, "");
      invoice0.getCurrency();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setBuyerProvidedEmail("d_");
      invoice0.getBuyerProvidedEmail();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "_ {$S(>4!0y)4fBW'6");
      invoice0.setBuyerProvidedEmail("");
      invoice0.getBuyerProvidedEmail();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      Buyer buyer0 = new Buyer();
      buyer0.setNotify(true);
      invoice0.setBuyer(buyer0);
      invoice0.getBuyer();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Double double0 = Double.valueOf((-1.0));
      Invoice invoice0 = new Invoice(double0, "com.bitpay.sdk_light.model.Invoice.Invoice");
      invoice0.setBillId("com.bitpay.sdk_light.model.Invoice.PaymentTotal");
      invoice0.getBillId();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setBillId("");
      invoice0.getBillId();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Double double0 = new Double(733.3283933);
      Invoice invoice0 = new Invoice(double0, "");
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      invoice0.setAmountPaid(bigDecimal0);
      invoice0.getAmountPaid();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "_ {$S(>4!0y)4fBW'6");
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      invoice0.setAmountPaid(bigDecimal0);
      invoice0.getAmountPaid();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      invoice0.setAmountPaid(bigDecimal0);
      invoice0.getAmountPaid();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setAcceptanceWindow(81L);
      long long0 = invoice0.getAcceptanceWindow();
      assertEquals(81L, long0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setAcceptanceWindow((-1L));
      long long0 = invoice0.getAcceptanceWindow();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      // Undeclared exception!
      try { 
        invoice0.setLowFeeDetected((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.bitpay.sdk_light.model.Invoice.Invoice", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      try { 
        invoice0.setCurrency("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error: currency code must be a type of Model.Currency
         //
         verifyException("com.bitpay.sdk_light.model.Invoice.Invoice", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setCurrency("ZAR");
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      ArrayList<InvoiceTransaction> arrayList0 = new ArrayList<InvoiceTransaction>();
      invoice0.setTransactions(arrayList0);
      invoice0.getTransactions();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.setInvoiceBuyerProvidedInfo((InvoiceBuyerProvidedInfo) null);
      invoice0.getInvoiceBuyerProvidedInfo();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getRefundAddresses();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      boolean boolean0 = invoice0.getFullNotifications();
      assertFalse(boolean0);
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Double double0 = new Double((-512.95329));
      Invoice invoice0 = new Invoice(double0, "TO[tqn-?84Z+?lHI$:");
      invoice0.getRedirectURL();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getTransactionCurrency();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getItemCode();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.getInvoiceBuyerProvidedInfo();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Double double0 = new Double((-512.95329));
      Invoice invoice0 = new Invoice(double0, "TO[tqn-?84Z+?lHI$:");
      invoice0.getAmountPaid();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.getRefundInfo();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getTransactionSpeed();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getTransactions();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Double double0 = new Double(1.0);
      Invoice invoice0 = new Invoice(double0, "com.bitpay.sdk_light.model.Invoice.PaymentTotal");
      invoice0.getNotificationURL();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.setPrice(double0);
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getGuid();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      Hashtable<String, Hashtable<String, String>> hashtable0 = new Hashtable<String, Hashtable<String, String>>();
      invoice0.setExchangeRates(hashtable0);
      invoice0.getExchangeRates();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getExceptionStatus();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getCurrentTime();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.getLowFeeDetected();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getRefundAddressRequestPending();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getInvoiceTime();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      assertFalse(invoice0.getFullNotifications());
      
      invoice0.setFullNotifications(true);
      boolean boolean0 = invoice0.getFullNotifications();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getPosData();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getNotificationEmail();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      boolean boolean0 = invoice0.getExtendedNotifications();
      assertFalse(boolean0);
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Invoice invoice0 = new Invoice((Double) null, (String) null);
      invoice0.getStatus();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      SupportedTransactionCurrencies supportedTransactionCurrencies0 = invoice0.getSupportedTransactionCurrencies();
      invoice0.setSupportedTransactionCurrencies(supportedTransactionCurrencies0);
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Double double0 = new Double(2467L);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.setCurrentTime(2467L);
      long long0 = invoice0.getCurrentTime();
      assertEquals(2467L, long0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getCurrency();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getAcceptanceWindow();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getItemDesc();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getBillId();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getPrice();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      Buyer buyer0 = new Buyer();
      invoice0.setBuyer(buyer0);
      invoice0.getBuyer();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "_ {$S(>4!0y)4fBW'6");
      invoice0.getBuyerProvidedEmail();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.setToken("LAK");
      invoice0.getToken();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, "CVE");
      invoice0.getId();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getExpirationTime();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getPaymentCurrencies();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      MinerFees minerFees0 = invoice0.getMinerFees();
      invoice0.setMinerFees(minerFees0);
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getBuyer();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      Shopper shopper0 = invoice0.getShopper();
      invoice0.setShopper(shopper0);
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getToken();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getOrderId();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Double double0 = new Double(0.0);
      Invoice invoice0 = new Invoice(double0, (String) null);
      invoice0.getExchangeRates();
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      boolean boolean0 = invoice0.getPhysical();
      assertFalse(boolean0);
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getUrl();
      assertFalse(invoice0.getExtendedNotifications());
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Invoice invoice0 = new Invoice();
      invoice0.getTargetConfirmations();
      assertFalse(invoice0.getPhysical());
      assertFalse(invoice0.getFullNotifications());
      assertFalse(invoice0.getExtendedNotifications());
  }
}
