/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 16:02:54 GMT 2022
 */

package com.bitpay.sdk_light.model.Invoice;

import org.junit.Test;
import static org.junit.Assert.*;
import com.bitpay.sdk_light.model.Invoice.MinerFeesItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MinerFeesItem_ESTest extends MinerFeesItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = new Double(2483.100320716906);
      minerFeesItem0.setTotalFee(double0);
      Double double1 = minerFeesItem0.getTotalFee();
      assertEquals(2483.100320716906, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = new Double((-373.95));
      minerFeesItem0.setTotalFee(double0);
      Double double1 = minerFeesItem0.getTotalFee();
      assertEquals((-373.95), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = new Double(1.0);
      minerFeesItem0.setSatoshisPerByte(double0);
      Double double1 = minerFeesItem0.getSatoshisPerByte();
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = new Double((-1562.38140929));
      minerFeesItem0.setSatoshisPerByte(double0);
      Double double1 = minerFeesItem0.getSatoshisPerByte();
      assertEquals((-1562.38140929), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = minerFeesItem0.getTotalFee();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = new Double(0.0);
      minerFeesItem0.setTotalFee(double0);
      Double double1 = minerFeesItem0.getTotalFee();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = minerFeesItem0.getSatoshisPerByte();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MinerFeesItem minerFeesItem0 = new MinerFeesItem();
      Double double0 = new Double(0.0);
      minerFeesItem0.setSatoshisPerByte(double0);
      Double double1 = minerFeesItem0.getSatoshisPerByte();
      assertEquals(0.0, (double)double1, 0.01);
  }
}
