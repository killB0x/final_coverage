/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 16:04:51 GMT 2022
 */

package com.bitpay.sdk_light.model.Invoice;

import org.junit.Test;
import static org.junit.Assert.*;
import com.bitpay.sdk_light.model.Invoice.MinerFees;
import com.bitpay.sdk_light.model.Invoice.MinerFeesItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MinerFees_ESTest extends MinerFees_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MinerFees minerFees0 = new MinerFees();
      MinerFeesItem minerFeesItem0 = minerFees0.getBtc();
      assertNull(minerFeesItem0.getTotalFee());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MinerFees minerFees0 = new MinerFees();
      minerFees0.setEth((MinerFeesItem) null);
      MinerFeesItem minerFeesItem0 = minerFees0.getEth();
      assertNull(minerFeesItem0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MinerFees minerFees0 = new MinerFees();
      MinerFeesItem minerFeesItem0 = minerFees0.getEth();
      assertNull(minerFeesItem0.getSatoshisPerByte());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MinerFees minerFees0 = new MinerFees();
      MinerFeesItem minerFeesItem0 = minerFees0.getBch();
      assertNull(minerFeesItem0.getTotalFee());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MinerFees minerFees0 = new MinerFees();
      minerFees0.setBch((MinerFeesItem) null);
      MinerFeesItem minerFeesItem0 = minerFees0.getBch();
      assertNull(minerFeesItem0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MinerFees minerFees0 = new MinerFees();
      minerFees0.setBtc((MinerFeesItem) null);
      MinerFeesItem minerFeesItem0 = minerFees0.getBtc();
      assertNull(minerFeesItem0);
  }
}
