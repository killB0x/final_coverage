/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 16:05:59 GMT 2022
 */

package com.bitpay.sdk_light.model.Invoice;

import org.junit.Test;
import static org.junit.Assert.*;
import com.bitpay.sdk_light.model.Invoice.PaymentTotal;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaymentTotal_ESTest extends PaymentTotal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      paymentTotal0.setXrp(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getXrp();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      paymentTotal0.setXrp(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getXrp();
      assertEquals((byte)10, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal((double) (-3087));
      paymentTotal0.setXrp(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getXrp();
      assertEquals((short) (-3087), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal((-713L));
      paymentTotal0.setUsdc(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getUsdc();
      assertEquals((byte)55, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      paymentTotal0.setUsdc(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getUsdc();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(751.361549856);
      paymentTotal0.setUsdc(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getUsdc();
      assertEquals((short)751, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      paymentTotal0.setPax(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getPax();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(2610L);
      paymentTotal0.setPax(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getPax();
      assertEquals((short)2610, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      paymentTotal0.setGusd(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getGusd();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      paymentTotal0.setGusd(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getGusd();
      assertEquals((byte)10, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal((-531.6579982400674));
      paymentTotal0.setGusd(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getGusd();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-62);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      paymentTotal0.setEth(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getEth();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      byte[] byteArray0 = new byte[3];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      paymentTotal0.setEth(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getEth();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      paymentTotal0.setEth(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getEth();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal((-539L));
      paymentTotal0.setBtc(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getBtc();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      paymentTotal0.setBtc(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getBtc();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(1868L);
      paymentTotal0.setBtc(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getBtc();
      assertEquals((short)1868, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      paymentTotal0.setBch(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getBch();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      paymentTotal0.setBch(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getBch();
      assertEquals((byte)10, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal(999L);
      paymentTotal0.setEth(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getEth();
      assertEquals((byte) (-25), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = paymentTotal0.getXrp();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal((double) (-3087));
      paymentTotal0.setPax(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getPax();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = paymentTotal0.getEth();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = paymentTotal0.getBtc();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = paymentTotal0.getUsdc();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = paymentTotal0.getGusd();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = paymentTotal0.getBch();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = paymentTotal0.getPax();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PaymentTotal paymentTotal0 = new PaymentTotal();
      BigDecimal bigDecimal0 = new BigDecimal((-102L));
      paymentTotal0.setBch(bigDecimal0);
      BigDecimal bigDecimal1 = paymentTotal0.getBch();
      assertEquals((byte) (-102), bigDecimal1.byteValue());
  }
}
