/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 16:03:43 GMT 2022
 */

package com.bitpay.sdk_light.model.Rate;

import org.junit.Test;
import static org.junit.Assert.*;
import com.bitpay.sdk_light.model.Rate.Rate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Rate_ESTest extends Rate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Rate rate0 = new Rate();
      Double double0 = new Double(1431.3057444167);
      rate0.setValue(double0);
      Double double1 = rate0.getValue();
      assertEquals(1431.3057444167, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Rate rate0 = new Rate();
      Double double0 = new Double((-515.4409));
      rate0.setValue(double0);
      Double double1 = rate0.getValue();
      assertEquals((-515.4409), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Rate rate0 = new Rate();
      rate0.setName("H[vP+XZ$j!");
      String string0 = rate0.getName();
      assertEquals("H[vP+XZ$j!", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Rate rate0 = new Rate();
      rate0.setName("");
      String string0 = rate0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Rate rate0 = new Rate();
      rate0.setCode("90WaE");
      String string0 = rate0.getCode();
      assertEquals("90WaE", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Rate rate0 = new Rate();
      String string0 = rate0.getCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Rate rate0 = new Rate();
      Double double0 = rate0.getValue();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Rate rate0 = new Rate();
      Double double0 = new Double(0.0);
      rate0.setValue(double0);
      Double double1 = rate0.getValue();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Rate rate0 = new Rate();
      String string0 = rate0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Rate rate0 = new Rate();
      rate0.setCode("");
      String string0 = rate0.getCode();
      assertEquals("", string0);
  }
}
