/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 04:37:17 GMT 2022
 */

package com.github.cheergoivan.totp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.cheergoivan.totp.HMACHashAlgorithm;
import com.github.cheergoivan.totp.TOTPAuthenticator;
import com.github.cheergoivan.totp.decoder.Decoder;
import com.github.cheergoivan.totp.decoder.SHA1Decoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TOTPAuthenticator_ESTest extends TOTPAuthenticator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.timeStepSize((-3247));
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals((-3247), tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      String string0 = tOTPAuthenticator0.generateTOTP("Q1pf@i]VA\"");
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals((-3247), tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(string0);
      assertEquals("512658", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength((-24818444));
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals((-24818444), tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getTotpLength();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals((-24818444), tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals((-24818444), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.timeStepSize(0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getTimeStepSize();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.timeStepSize((-368));
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals((-368), tOTPAuthenticator0.getTimeStepSize());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getTimeStepSize();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals((-368), tOTPAuthenticator0.getTimeStepSize());
      assertEquals((-368), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.decoder((Decoder) null);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertNotNull(tOTPAuthenticator0);
      
      Decoder decoder0 = tOTPAuthenticator0.getDecoder();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertNull(decoder0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.allowedPastValidationWindows(0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder1.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getAllowedPastValidationWindows();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.allowedPastValidationWindows((-368));
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals((-368), tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getAllowedPastValidationWindows();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals((-368), tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals((-368), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.allowedFutureValidationWindows(889);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(889, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getAllowedFutureValidationWindows();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(889, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(889, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.allowedFutureValidationWindows((-2177));
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals((-2177), tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getAllowedFutureValidationWindows();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals((-2177), tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals((-2177), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.validateTOTP((byte[]) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.cheergoivan.totp.TOTPAuthenticator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.validateTOTP(byteArray0, "634873");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.validateTOTP((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.cheergoivan.totp.decoder.SHA1Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.timeStepSize(0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder2 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength(1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder2);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder2);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder2);
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(1, tOTPAuthenticator0.getTotpLength());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.validateTOTP("0", "0");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.github.cheergoivan.totp.TOTPAuthenticator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength(7254);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder1.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(7254, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      String string0 = tOTPAuthenticator0.generateTOTP("1B'S697.Y:d");
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(7254, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(string0);
      
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      tOTPAuthenticator0.generateTOTP(byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertNotNull(tOTPAuthenticator0);
      
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.generateTOTP((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Missing argument
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength((-1811));
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder1.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals((-1811), tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.generateTOTP(byteArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertNotNull(tOTPAuthenticator0);
      
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.generateTOTP((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.cheergoivan.totp.decoder.SHA1Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength((-22749623));
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder1.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals((-22749623), tOTPAuthenticator0.getTotpLength());
      assertNotNull(tOTPAuthenticator0);
      
      // Undeclared exception!
      try { 
        tOTPAuthenticator0.generateTOTP("\"Q+X");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = tOTPAuthenticator0.validateTOTP(byteArray0, ".%rq");
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength(889);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder1.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(889, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertNotNull(tOTPAuthenticator0);
      
      byte[] byteArray0 = new byte[4];
      String string0 = tOTPAuthenticator0.generateTOTP(byteArray0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(889, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertNotNull(string0);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEqualsstring0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertNotNull(tOTPAuthenticator0);
      
      byte[] byteArray0 = new byte[9];
      boolean boolean0 = tOTPAuthenticator0.validateTOTP(byteArray0, "506372");
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertNotNull(tOTPAuthenticator0);
      
      boolean boolean0 = tOTPAuthenticator0.validateTOTP("506372", "~xIBrEL<wQ|");
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      HMACHashAlgorithm hMACHashAlgorithm0 = HMACHashAlgorithm.SHA_1;
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.hashAlgorithm(hMACHashAlgorithm0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.allowedPastValidationWindows(1923);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(1923, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertNotNull(tOTPAuthenticator0);
      
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      tOTPAuthenticator0.validateTOTP(byteArray0, "264540");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength(0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder1.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getTotpLength());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertNotNull(tOTPAuthenticator0);
      
      int int0 = tOTPAuthenticator0.getTotpLength();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getTotpLength());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder1 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.timeStepSize(889);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder1, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder2 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.totpLength(889);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder2);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertNotNull(tOTPAuthenticator_TOTPAuthenticatorBuilder2);
      
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder2.build();
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder2);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(889, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(889, tOTPAuthenticator0.getTotpLength());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertNotNull(tOTPAuthenticator0);
      
      SHA1Decoder sHA1Decoder0 = new SHA1Decoder();
      assertNotNull(sHA1Decoder0);
      
      byte[] byteArray0 = sHA1Decoder0.decode("506372");
      assertNotNull(byteArray0);
      assertEquals(20, byteArray0.length);
      
      boolean boolean0 = tOTPAuthenticator0.validateTOTP(byteArray
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder0, tOTPAuthenticator_TOTPAuthenticatorBuilder2);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder0);
      assertSame(tOTPAuthenticator_TOTPAuthenticatorBuilder2, tOTPAuthenticator_TOTPAuthenticatorBuilder1);
      assertEquals(889, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(HMACHashAlgorithm.SHA_1, tOTPAuthenticator0.getHashAlgorithm());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(889, tOTPAuthenticator0.getTotpLength());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(20, byteArray0.length);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      tOTPAuthenticator_TOTPAuthenticatorBuilder0.allowedFutureValidationWindows(1923);
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      // Undeclared exception!
      tOTPAuthenticator0.validateTOTP("634873", "634873");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      int int0 = tOTPAuthenticator0.getTotpLength();
      assertEquals(6, int0);
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      tOTPAuthenticator0.getDecoder();
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      tOTPAuthenticator0.getHashAlgorithm();
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      boolean boolean0 = tOTPAuthenticator0.validateTOTP("$VALUS", "609113");
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertTrue(boolean0);
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      int int0 = tOTPAuthenticator0.getAllowedPastValidationWindows();
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(2, int0);
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      int int0 = tOTPAuthenticator0.getAllowedFutureValidationWindows();
      assertEquals(0, int0);
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(30, tOTPAuthenticator0.getTimeStepSize());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TOTPAuthenticator.TOTPAuthenticatorBuilder tOTPAuthenticator_TOTPAuthenticatorBuilder0 = TOTPAuthenticator.builder();
      TOTPAuthenticator tOTPAuthenticator0 = tOTPAuthenticator_TOTPAuthenticatorBuilder0.build();
      int int0 = tOTPAuthenticator0.getTimeStepSize();
      assertEquals(0, tOTPAuthenticator0.getAllowedFutureValidationWindows());
      assertEquals(6, tOTPAuthenticator0.getTotpLength());
      assertEquals(2, tOTPAuthenticator0.getAllowedPastValidationWindows());
      assertEquals(30, int0);
  }
}
