/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:42:09 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.links;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaymentInitiationAuthorizationLinks_ESTest extends PaymentInitiationAuthorizationLinks_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.redirect("vi_YfUH(WBzOes");
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      String string0 = paymentInitiationAuthorizationLinks0.getRedirect();
      assertEquals("vi_YfUH(WBzOes", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = new PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder();
      paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.redirect("");
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      String string0 = paymentInitiationAuthorizationLinks0.getRedirect();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      boolean boolean0 = paymentInitiationAuthorizationLinks0.canEqual(paymentInitiationAuthorizationLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationAuthorizationLinks0.canEqual(paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      String string0 = paymentInitiationAuthorizationLinks0.getRedirect();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder1 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.redirect("PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder(redirect=");
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder1.build();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks1 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationAuthorizationLinks0.equals(paymentInitiationAuthorizationLinks1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder1 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.redirect("PaymentInitiationAuthorizationLinks(redirect=null)");
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks1 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder1.build();
      boolean boolean0 = paymentInitiationAuthorizationLinks0.equals(paymentInitiationAuthorizationLinks1);
      assertFalse(paymentInitiationAuthorizationLinks1.equals((Object)paymentInitiationAuthorizationLinks0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.redirect("vi_YfUH(WBzOes");
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks1 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationAuthorizationLinks1.equals(paymentInitiationAuthorizationLinks0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationAuthorizationLinks0.equals(paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = new PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationAuthorizationLinks0.equals(paymentInitiationAuthorizationLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      paymentInitiationAuthorizationLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.redirect("vi_YfUH(WBzOes");
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      paymentInitiationAuthorizationLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      String string0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.toString();
      assertEquals("PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder(redirect=null)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks1 = new PaymentInitiationAuthorizationLinks();
      boolean boolean0 = paymentInitiationAuthorizationLinks0.equals(paymentInitiationAuthorizationLinks1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0 = PaymentInitiationAuthorizationLinks.builder();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationAuthorizationLinks_PaymentInitiationAuthorizationLinksBuilder0.build();
      String string0 = paymentInitiationAuthorizationLinks0.toString();
      assertEquals("PaymentInitiationAuthorizationLinks(redirect=null)", string0);
  }
}
