/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:17:54 GMT 2022
 */

package com.ibanity.apis.client.jsonapi.isabel_connect;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.jsonapi.isabel_connect.PagingApiModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PagingApiModel_ESTest extends PagingApiModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = new Integer(0);
      pagingApiModel_PagingApiModelBuilder0.total(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      Integer integer1 = pagingApiModel0.getTotal();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = new Integer(1);
      pagingApiModel_PagingApiModelBuilder0.total(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      Integer integer1 = pagingApiModel0.getTotal();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = Integer.valueOf((-3185));
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.total(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      Integer integer1 = pagingApiModel0.getTotal();
      assertEquals((-3185), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      Integer integer0 = new Integer(0);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.offset(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      Integer integer1 = pagingApiModel0.getOffset();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      Integer integer0 = new Integer(508);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.offset(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      Integer integer1 = pagingApiModel0.getOffset();
      assertEquals(508, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      Integer integer0 = new Integer((-604));
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.offset(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      Integer integer1 = pagingApiModel0.getOffset();
      assertEquals((-604), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.canEqual(pagingApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.canEqual("PagingApiModel.PagingApiModelBuilder(offset=0, total=null)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      Integer integer0 = pagingApiModel0.getOffset();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      Integer integer0 = pagingApiModel0.getTotal();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      Integer integer0 = new Integer(1);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.total(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      Integer integer0 = new Integer(586);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.total(integer0);
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      Integer integer0 = new Integer((-1));
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.total(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      PagingApiModel pagingApiModel1 = new PagingApiModel();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = new Integer(3083);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.offset(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      PagingApiModel pagingApiModel1 = new PagingApiModel();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = new Integer(1);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.offset(integer0);
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(boolean0);
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = pagingApiModel0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = new Integer(1);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.total(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      pagingApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      pagingApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = new Integer(0);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.offset(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      pagingApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      String string0 = pagingApiModel_PagingApiModelBuilder0.toString();
      assertEquals("PagingApiModel.PagingApiModelBuilder(offset=null, total=null)", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      Integer integer0 = new Integer(3167);
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.offset(integer0);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      String string0 = pagingApiModel0.toString();
      assertEquals("PagingApiModel(offset=null, total=null)", string0);
  }
}
