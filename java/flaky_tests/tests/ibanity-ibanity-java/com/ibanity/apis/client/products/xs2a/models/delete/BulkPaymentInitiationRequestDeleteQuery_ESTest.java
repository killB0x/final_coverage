/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:03:35 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.delete;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.delete.BulkPaymentInitiationRequestDeleteQuery;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BulkPaymentInitiationRequestDeleteQuery_ESTest extends BulkPaymentInitiationRequestDeleteQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      UUID uUID0 = bulkPaymentInitiationRequestDeleteQuery0.getPaymentInitiationRequestId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Random.setNextRandom((-3832));
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("`", uUID0, uUID0, hashMap0);
      UUID uUID1 = bulkPaymentInitiationRequestDeleteQuery0.getPaymentInitiationRequestId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      Random.setNextRandom(2481);
      UUID uUID0 = MockUUID.fromString("!PSsdvxXkdb~^FiW");
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      Map<String, String> map0 = bulkPaymentInitiationRequestDeleteQuery0.getAdditionalHeaders();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = new BulkPaymentInitiationRequestDeleteQuery("!PSsdvxXkdb~^FiW", uUID0, uUID0, map0);
      UUID uUID1 = bulkPaymentInitiationRequestDeleteQuery1.getFinancialInstitutionId();
      assertEquals((-5690016651218960384L), uUID1.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", uUID0, uUID0, hashMap0);
      UUID uUID1 = bulkPaymentInitiationRequestDeleteQuery0.getFinancialInstitutionId();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      String string0 = bulkPaymentInitiationRequestDeleteQuery0.getCustomerAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.customerAccessToken("W");
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      String string0 = bulkPaymentInitiationRequestDeleteQuery0.getCustomerAccessToken();
      assertEquals("W", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", (UUID) null, (UUID) null, (Map<String, String>) null);
      Map<String, String> map0 = bulkPaymentInitiationRequestDeleteQuery0.getAdditionalHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", uUID0, uUID0, hashMap0);
      Map<String, String> map0 = bulkPaymentInitiationRequestDeleteQuery0.getAdditionalHeaders();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", uUID0, uUID0, hashMap0);
      hashMap0.putIfAbsent("", "");
      Map<String, String> map0 = bulkPaymentInitiationRequestDeleteQuery0.getAdditionalHeaders();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.canEqual(bulkPaymentInitiationRequestDeleteQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", (UUID) null, (UUID) null, (Map<String, String>) null);
      Object object0 = new Object();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", uUID0, uUID0, hashMap0);
      UUID uUID1 = bulkPaymentInitiationRequestDeleteQuery0.getPaymentInitiationRequestId();
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", uUID0, uUID0, hashMap0);
      String string0 = bulkPaymentInitiationRequestDeleteQuery0.getCustomerAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      UUID uUID0 = bulkPaymentInitiationRequestDeleteQuery0.getFinancialInstitutionId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.additionalHeaders((Map<String, String>) null);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.additionalHeaders((Map<String, String>) null);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder2 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.additionalHeaders(hashMap0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder2.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertFalse(bulkPaymentInitiationRequestDeleteQuery1.equals((Object)bulkPaymentInitiationRequestDeleteQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.additionalHeaders((Map<String, String>) null);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery1.equals(bulkPaymentInitiationRequestDeleteQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertFalse(bulkPaymentInitiationRequestDeleteQuery1.equals((Object)bulkPaymentInitiationRequestDeleteQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery1.equals(bulkPaymentInitiationRequestDeleteQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequestDeleteQuery1.equals((Object)bulkPaymentInitiationRequestDeleteQuery0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.customerAccessToken("7ErX}g$p^BtK)]");
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery1.equals(bulkPaymentInitiationRequestDeleteQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.customerAccessToken("@V&;sz/X>q");
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequestDeleteQuery1.equals((Object)bulkPaymentInitiationRequestDeleteQuery0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.customerAccessToken("q,");
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = new BulkPaymentInitiationRequestDeleteQuery("", uUID0, uUID0, (Map<String, String>) null);
      bulkPaymentInitiationRequestDeleteQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      UUID uUID0 = MockUUID.fromString("W");
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      bulkPaymentInitiationRequestDeleteQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      UUID uUID0 = MockUUID.fromString("W");
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      bulkPaymentInitiationRequestDeleteQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      String string0 = bulkPaymentInitiationRequestDeleteQuery0.toString();
      assertEquals("BulkPaymentInitiationRequestDeleteQuery(customerAccessToken=null, financialInstitutionId=null, paymentInitiationRequestId=null, additionalHeaders={})", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder1.build();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = BulkPaymentInitiationRequestDeleteQuery.builder();
      String string0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.toString();
      assertEquals("BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder(customerAccessToken=null, financialInstitutionId=null, paymentInitiationRequestId=null, additionalHeaders$value=null)", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0 = new BulkPaymentInitiationRequestDeleteQuery.BulkPaymentInitiationRequestDeleteQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery0 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      BulkPaymentInitiationRequestDeleteQuery bulkPaymentInitiationRequestDeleteQuery1 = bulkPaymentInitiationRequestDeleteQuery_BulkPaymentInitiationRequestDeleteQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestDeleteQuery0.equals(bulkPaymentInitiationRequestDeleteQuery1);
      assertTrue(boolean0);
  }
}
