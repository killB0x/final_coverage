/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:12:59 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.BulkPaymentInitiationRequest;
import com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks;
import com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.LinkedList;
import java.util.List;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BulkPaymentInitiationRequest_ESTest extends BulkPaymentInitiationRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getRemittanceInformation();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getEndToEndId();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getCurrency();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getCreditorName();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getCreditorAgent();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      String string0 = bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BigDecimal bigDecimal0 = bulkPaymentInitiationRequest_Payment0.getAmount();
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.canEqual(object0);
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.skipIbanityCompletionCallback(true);
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertTrue(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertTrue(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.batchBookingPreferred(true);
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertTrue(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.isBatchBookingPreferred();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertTrue(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.allowFinancialInstitutionRedirectUri(true);
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertTrue(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertTrue(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.statusReason("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      String string0 = bulkPaymentInitiationRequest0.getStatusReason();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.statusReason("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertEquals("", bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getStatusReason();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertEquals("", bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      bulkPaymentInitiationRequest0.setStatus("com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks$FinancialInstitutionLinksBuilder");
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks$FinancialInstitutionLinksBuilder", bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      
      String string0 = bulkPaymentInitiationRequest0.getStatus();
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks$FinancialInstitutionLinksBuilder", bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks$FinancialInstitutionLinksBuilder", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.status("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertEquals("", bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getStatus();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertEquals("", bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.selfLink("Dv4!1");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertEquals("Dv4!1", bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getSelfLink();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertEquals("Dv4!1", bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("Dv4!1", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.selfLink("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertEquals("", bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getSelfLink();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertEquals("", bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, (-1), (-1));
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      LocalDate localDate1 = bulkPaymentInitiationRequest0.getRequestedExecutionDate();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNotNull(localDate1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(localDate0, localDate1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestId("BulkPaymentInitiationRequest.Payment(endToEndId=");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      String string0 = bulkPaymentInitiationRequest0.getRequestId();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestId("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("", bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      String string0 = bulkPaymentInitiationRequest0.getRequestId();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("", bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.productType("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      String string0 = bulkPaymentInitiationRequest0.getProductType();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.productType("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertEquals("", bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getProductType();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertEquals("", bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      bulkPaymentInitiationRequest0.setPayments((List<BulkPaymentInitiationRequest.Payment>) null);
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      
      List<BulkPaymentInitiationRequest.Payment> list0 = bulkPaymentInitiationRequest0.getPayments();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      List<BulkPaymentInitiationRequest.Payment> list0 = bulkPaymentInitiationRequest0.getPayments();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNotNull(list0);
      
      LinkedList<BulkPaymentInitiationRequest.Payment> linkedList0 = new LinkedList<BulkPaymentInitiationRequest.Payment>(list0);
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.payments(linkedList0);
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      List<BulkPaymentInitiationRequest.Payment> list1 = bulkPaymentInitiationRequest1.getPayments();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertTrue(list1.equals((Object)list0));
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals(0, list1.size());
      assertTrue(list1.isEmpty());
      assertNotNull(list1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      LinkedList<BulkPaymentInitiationRequest.Payment> linkedList0 = new LinkedList<BulkPaymentInitiationRequest.Payment>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.payments(linkedList0);
      assertEquals(0, linkedList0.size());
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = BulkPaymentInitiationRequest.Payment.builder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = linkedList0.add(bulkPaymentInitiationRequest_Payment0);
      assertEquals(1, linkedList0.size());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertTrue(boolean0);
      assertTrue(linkedList0.contains(bulkPaymentInitiationRequest_Payment0));
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      List<BulkPaymentInitiationRequest.Payment> list0 = bulkPaymentInitiationRequest0.getPayments();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertTrue(list0.contains(bulkPaymentInitiationRequest_Payment0));
      assertNotNull(list0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      Random.setNextRandom((-1675));
      UUID uUID0 = MockUUID.fromString("bulkPaymentInitiationRequest");
      assertEquals((-8429049650228084736L), uUID0.getMostSignificantBits());
      assertEquals("8b060000-8c06-4000-8d06-00008e060000", uUID0.toString());
      assertEquals((-8284934462118690816L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      bulkPaymentInitiationRequest0.setId(uUID0);
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertEquals((-8429049650228084736L), uUID0.getMostSignificantBits());
      assertEquals("8b060000-8c06-4000-8d06-00008e060000", uUID0.toString());
      assertEquals((-8284934462118690816L), uUID0.getLeastSignificantBits());
      
      UUID uUID1 = bulkPaymentInitiationRequest0.getId();
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertEquals("8b060000-8c06-4000-8d06-00008e060000", uUID1.toString());
      assertEquals((-8429049650228084736L), uUID1.getMostSignificantBits());
      assertEquals((-8284934462118690816L), uUID1.getLeastSignificantBits());
      assertNotNull(uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      UUID uUID0 = MockUUID.fromString("bulk-payment-initiation-requests");
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      bulkPaymentInitiationRequest0.setId(uUID0);
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      UUID uUID1 = bulkPaymentInitiationRequest0.getId();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals(16793600L, uUID1.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
      assertNotNull(uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(financialInstitutionLinks0);
      
      bulkPaymentInitiationRequest0.setFinancialInstitutionLink(financialInstitutionLinks0);
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(financialInstitutionLinks0.getRelated());
      
      FinancialInstitutionLinks financialInstitutionLinks1 = bulkPaymentInitiationRequest0.getFinancialInstitutionLink();
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(financialInstitutionLinks1.getRelated());
      assertNotNull(financialInstitutionLinks1);
      assertSame(financialInstitutionLinks1, financialInstitutionLinks0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Random.setNextRandom((-1667));
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("83060000-8406-4000-8506-000086060000", uUID0.toString());
      assertEquals((-9005510402665725952L), uUID0.getMostSignificantBits());
      assertEquals((-8861395214556332032L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      bulkPaymentInitiationRequest0.setFinancialInstitutionId(uUID0);
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("83060000-8406-4000-8506-000086060000", uUID0.toString());
      assertEquals((-9005510402665725952L), uUID0.getMostSignificantBits());
      assertEquals((-8861395214556332032L), uUID0.getLeastSignificantBits());
      
      UUID uUID1 = bulkPaymentInitiationRequest0.getFinancialInstitutionId();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals((-9005510402665725952L), uUID1.getMostSignificantBits());
      assertEquals((-8861395214556332032L), uUID1.getLeastSignificantBits());
      assertEquals("83060000-8406-4000-8506-000086060000", uUID1.toString());
      assertNotNull(uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      UUID uUID1 = bulkPaymentInitiationRequest0.getFinancialInstitutionId();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertEquals(16793600L, uUID1.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
      assertNotNull(uUID1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("FinancialInstitutionLinks(related=");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("FinancialInstitutionLinks(related=", bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      String string0 = bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("FinancialInstitutionLinks(related=", bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertEquals("FinancialInstitutionLinks(related=", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("", bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("", bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorName("{paymentInitiationRequestId}");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest0.getDebtorName());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorName();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("{paymentInitiationRequestId}", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorName("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertEquals("", bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorName();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertEquals("", bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReferenceType("zKpSz)Xt'R7(,4");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("zKpSz)Xt'R7(,4", bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorAccountReferenceType();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("zKpSz)Xt'R7(,4", bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertEquals("zKpSz)Xt'R7(,4", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReferenceType("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorAccountReferenceType();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReference("G^");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertEquals("G^", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorAccountReference();
      assertEquals("G^", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("G^", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReference("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertEquals("", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorAccountReference();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertEquals("", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.consentReference("u|O)2Lbab&5");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("u|O)2Lbab&5", bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      String string0 = bulkPaymentInitiationRequest0.getConsentReference();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("u|O)2Lbab&5", bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("u|O)2Lbab&5", string0);
      assertNotNull(string0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      bulkPaymentInitiationRequest0.setConsentReference("");
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("", bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      
      String string0 = bulkPaymentInitiationRequest0.getConsentReference();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertEquals("", bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.canEqual(bulkPaymentInitiationRequest0);
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      UUID uUID0 = MockUUID.fromString((String) null);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.canEqual(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getProductType();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationRequest0.getLinks();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationAuthorizationLinks0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      UUID uUID0 = bulkPaymentInitiationRequest0.getFinancialInstitutionId();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorAccountReferenceType();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.isBatchBookingPreferred();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      LocalDate localDate0 = bulkPaymentInitiationRequest0.getRequestedExecutionDate();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorName();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getConsentReference();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      UUID uUID0 = bulkPaymentInitiationRequest0.getId();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getSelfLink();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getDebtorAccountReference();
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getStatus();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = bulkPaymentInitiationRequest0.getFinancialInstitutionLink();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(financialInstitutionLinks0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getStatusReason();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      String string0 = bulkPaymentInitiationRequest0.getRequestId();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorAgentType("");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertEquals("", bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertEquals("", bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      bulkPaymentInitiationRequest_Payment1.setCreditorAgentType("1&.");
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertEquals("1&.", bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertEquals("", bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertEquals("1&.", bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertFalse(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorAgent("{4 uGU4J2Uxd9LC9");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertEquals("{4 uGU4J2Uxd9LC9", bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertEquals("{4 uGU4J2Uxd9LC9", bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertFalse(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorAgent("");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertEquals("", bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertEquals("", bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment1.equals(bulkPaymentInitiationRequest_Payment0);
      assertTrue(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertEquals("", bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertEquals("", bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      bulkPaymentInitiationRequest_Payment1.setCreditorAccountReferenceType("bulk-payment-initiation-requests");
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = BulkPaymentInitiationRequest.Payment.builder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorAccountReferenceType("nf+HOPKIJh%30*4ayop");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertEquals("nf+HOPKIJh%30*4ayop", bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals("nf+HOPKIJh%30*4ayop", bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertTrue(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertEquals("nf+HOPKIJh%30*4ayop", bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals("nf+HOPKIJh%30*4ayop", bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      bulkPaymentInitiationRequest_Payment0.setCreditorAccountReference("bulk-payment-initiation-requests");
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      bulkPaymentInitiationRequest_Payment1.setCreditorAccountReference("{paymentInitiationRequestId}");
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      bulkPaymentInitiationRequest_Payment0.setCreditorName(")lz7TyW&");
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertEquals(")lz7TyW&", bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertEquals(")lz7TyW&", bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorName("com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks$1");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks$1", bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks$1", bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorName(", amount=");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertEquals(", amount=", bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals(", amount=", bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment1.equals(bulkPaymentInitiationRequest_Payment0);
      assertTrue(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertEquals(", amount=", bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals(", amount=", bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      bulkPaymentInitiationRequest_Payment0.setCurrency("bulk-payment-initiation-requests");
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      bulkPaymentInitiationRequest_Payment1.setCurrency("{paymentInitiationRequestId}");
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      bulkPaymentInitiationRequest_Payment1.setAmount(bigDecimal0);
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.amount(bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertTrue(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      bulkPaymentInitiationRequest_Payment0.setRemittanceInformation("bulk-payment-initiation-requests");
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      bulkPaymentInitiationRequest_Payment1.setRemittanceInformation("");
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertEquals("", bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("", bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.remittanceInformation("");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("", bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertEquals("", bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment1.equals(bulkPaymentInitiationRequest_Payment0);
      assertTrue(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertEquals("", bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertEquals("", bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      bulkPaymentInitiationRequest_Payment0.setRemittanceInformationType("bulk-payment-initiation-requests");
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      bulkPaymentInitiationRequest_Payment1.setRemittanceInformationType("{paymentInitiationRequestId}");
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.remittanceInformationType("oY`wc");
      assertNotNull(bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder1, bulkPaymentInitiationRequest_Payment_PaymentBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertEquals("oY`wc", bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertEquals("oY`wc", bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment1.equals(bulkPaymentInitiationRequest_Payment0);
      assertTrue(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertEquals("oY`wc", bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertEquals("oY`wc", bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_Payment_PaymentBuilder0, bulkPaymentInitiationRequest_Payment_PaymentBuilder1);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      assertTrue(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNotNull(bulkPaymentInitiationRequest_Payment1);
      
      bulkPaymentInitiationRequest_Payment1.setEndToEndId("{paymentInitiationRequestId}");
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(bulkPaymentInitiationRequest_Payment0.equals((Object)bulkPaymentInitiationRequest_Payment1));
      assertFalse(bulkPaymentInitiationRequest_Payment1.equals((Object)bulkPaymentInitiationRequest_Payment0));
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCurrency());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest_Payment1.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest_Payment1.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment1.getCreditorAgent());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest_Payment0, bulkPaymentInitiationRequest_Payment1);
      assertNotSame(bulkPaymentInitiationRequest_Payment1, bulkPaymentInitiationRequest_Payment0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest0);
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertNotNull(bulkPaymentInitiationRequest_Payment0);
      
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment0);
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorName());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformationType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgentType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCurrency());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAccountReference());
      assertNull(bulkPaymentInitiationRequest_Payment0.getCreditorAgent());
      assertNull(bulkPaymentInitiationRequest_Payment0.getRemittanceInformation());
      assertNull(bulkPaymentInitiationRequest_Payment0.getEndToEndId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(financialInstitutionLinks0);
      
      bulkPaymentInitiationRequest0.setFinancialInstitutionLink(financialInstitutionLinks0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(financialInstitutionLinks0);
      
      bulkPaymentInitiationRequest1.setFinancialInstitutionLink(financialInstitutionLinks0);
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(bulkPaymentInitiationAuthorizationLinks0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.links(bulkPaymentInitiationAuthorizationLinks0);
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertTrue(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(bulkPaymentInitiationAuthorizationLinks0);
      
      bulkPaymentInitiationRequest1.setLinks(bulkPaymentInitiationAuthorizationLinks0);
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(bulkPaymentInitiationAuthorizationLinks0);
      
      bulkPaymentInitiationRequest1.setLinks(bulkPaymentInitiationAuthorizationLinks0);
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationAuthorizationLinks0.getRedirect());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds((-1), (-1), (-1));
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertTrue(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      bulkPaymentInitiationRequest1.setRequestedExecutionDate(localDate0);
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds((-1), (-1), (-1));
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setPayments((List<BulkPaymentInitiationRequest.Payment>) null);
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest0.setPayments((List<BulkPaymentInitiationRequest.Payment>) null);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setPayments((List<BulkPaymentInitiationRequest.Payment>) null);
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertTrue(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertTrue(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setPayments((List<BulkPaymentInitiationRequest.Payment>) null);
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setFinancialInstitutionCustomerReference("{paymentInitiationRequestId}");
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setFinancialInstitutionCustomerReference("bulkPaymentInitiationRequest");
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertEquals("", bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertEquals("", bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertTrue(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertEquals("", bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertEquals("", bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.statusReason("{paymentInitiationRequestId}");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.statusReason("grJb+=h");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertEquals("grJb+=h", bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertEquals("grJb+=h", bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.statusReason("BulkPaymentInitiationRequest.Payment(endToEndId=");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertTrue(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.status("bulkPaymentInitiationRequest");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertTrue(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setStatus("bulk-payment-initiation-requests");
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.status("bulkPaymentInitiationRequest");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getStatus());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getStatus());
      assertFalse(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      bulkPaymentInitiationRequest0.setDebtorAccountReferenceType("V(NLy;pAZ'(");
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("V(NLy;pAZ'(", bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("V(NLy;pAZ'(", bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setDebtorAccountReferenceType("bulkPaymentInitiationRequest");
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReference("@Cc~_zIe#8-");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("@Cc~_zIe#8-", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("@Cc~_zIe#8-", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setDebtorAccountReference("bulkPaymentInitiationRequest");
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReference("9G+o6x");
      assertNotNull(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("9G+o6x", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNotNull(bulkPaymentInitiationRequest0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("9G+o6x", bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertTrue(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertEquals("9G+o6x", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("9G+o6x", bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertTrue(boolean0);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1);
      assertSame(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1, bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      bulkPaymentInitiationRequest0.setDebtorName(")");
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals(")", bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals(")", bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNotNull(bulkPaymentInitiationRequest0);
      
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNotNull(bulkPaymentInitiationRequest1);
      
      bulkPaymentInitiationRequest1.setDebtorName("bulk-payment-initiation-requests");
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
      
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertNull(bulkPaymentInitiationRequest0.getConsentReference());
      assertNull(bulkPaymentInitiationRequest0.getDebtorName());
      assertNull(bulkPaymentInitiationRequest0.getProductType());
      assertNull(bulkPaymentInitiationRequest0.getStatusReason());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertNull(bulkPaymentInitiationRequest0.getSelfLink());
      assertNull(bulkPaymentInitiationRequest0.getRequestId());
      assertNull(bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest0.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getStatus());
      assertNull(bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertNull(bulkPaymentInitiationRequest1.getConsentReference());
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest1.getDebtorName());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(bulkPaymentInitiationRequest1.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertNull(bulkPaymentInitiationRequest1.getStatusReason());
      assertNull(bulkPaymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(bulkPaymentInitiationRequest1.getRequestId());
      assertNull(bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(boolean0);
      assertNotSame(bulkPaymentInitiationRequest0, bulkPaymentInitiationRequest1);
      assertNotSame(bulkPaymentInitiationRequest1, bulkPaymentInitiationRequest0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorName("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertTrue(boolean0);
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", bulkPaymentInitiationRequest1.getDebtorName());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.productType("bulkPaymentInitiationRequest");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getProductType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      
      bulkPaymentInitiationRequest1.setProductType("bulk-payment-initiation-requests");
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.productType("bulkPaymentInitiationRequest");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest1.getProductType());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      bulkPaymentInitiationRequest0.setConsentReference("ZHXArATm[$xK@!mQtb");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertEquals("ZHXArATm[$xK@!mQtb", bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      
      bulkPaymentInitiationRequest1.setSelfLink("bulk-payment-initiation-requests");
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      
      bulkPaymentInitiationRequest1.setSelfLink("{paymentInitiationRequestId}");
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.selfLink("9G+o6x");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertTrue(boolean0);
      assertEquals("9G+o6x", bulkPaymentInitiationRequest1.getSelfLink());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestId("@Cc~_zIe#8-");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertEquals("@Cc~_zIe#8-", bulkPaymentInitiationRequest0.getRequestId());
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      
      bulkPaymentInitiationRequest1.setRequestId("bulkPaymentInitiationRequest");
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestId("BulkPaymentInitiationRequest.Payment(endToEndId=");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertTrue(boolean0);
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest1.getRequestId());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      UUID uUID0 = MockUUID.fromString("bulk-payment-initiation-requests");
      bulkPaymentInitiationRequest0.setFinancialInstitutionId(uUID0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertFalse(bulkPaymentInitiationRequest0.equals((Object)bulkPaymentInitiationRequest1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.fromString("");
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.id(uUID0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.fromString((String) null);
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.id(uUID0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      assertTrue(bulkPaymentInitiationRequest1.equals((Object)bulkPaymentInitiationRequest0));
      
      UUID uUID0 = MockUUID.fromString("bulkPaymentInitiationRequest");
      bulkPaymentInitiationRequest0.setId(uUID0);
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.batchBookingPreferred(true);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertTrue(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.skipIbanityCompletionCallback(true);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      bulkPaymentInitiationRequest1.setAllowFinancialInstitutionRedirectUri(true);
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertTrue(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0);
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      bulkPaymentInitiationRequest0.setFinancialInstitutionLink(financialInstitutionLinks0);
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.links(bulkPaymentInitiationAuthorizationLinks0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, (-1), (-1));
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.payments((List<BulkPaymentInitiationRequest.Payment>) null);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("FinancialInstitutionLinks(related=");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertEquals("FinancialInstitutionLinks(related=", bulkPaymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.statusReason("{paymentInitiationRequestId}");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertEquals("{paymentInitiationRequestId}", bulkPaymentInitiationRequest0.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.status("bulkPaymentInitiationRequest");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest0.getStatus());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReferenceType("bulkPaymentInitiationRequest");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertEquals("bulkPaymentInitiationRequest", bulkPaymentInitiationRequest0.getDebtorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReference("9G+o6x");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("9G+o6x", bulkPaymentInitiationRequest0.getDebtorAccountReference());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.productType("");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertEquals("", bulkPaymentInitiationRequest0.getProductType());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest0.setConsentReference("\"Iz%H%eLeSxTw<qm");
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertEquals("\"Iz%H%eLeSxTw<qm", bulkPaymentInitiationRequest0.getConsentReference());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.selfLink("");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertEquals("", bulkPaymentInitiationRequest0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.requestId("");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertEquals("", bulkPaymentInitiationRequest0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.fromString((String) null);
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.fromString("");
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.id(uUID0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest0.setBatchBookingPreferred(true);
      bulkPaymentInitiationRequest0.hashCode();
      assertTrue(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.allowFinancialInstitutionRedirectUri(true);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertTrue(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = BulkPaymentInitiationRequest.Payment.builder();
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.endToEndId("bulk-payment-initiation-requests");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = BulkPaymentInitiationRequest.Payment.builder();
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorAccountReference("");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = new BulkPaymentInitiationRequest.Payment.PaymentBuilder();
      String string0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.toString();
      assertEquals("BulkPaymentInitiationRequest.Payment.PaymentBuilder(endToEndId=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = BulkPaymentInitiationRequest.Payment.builder();
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorAgentType("bulkPaymentInitiationRequest");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = BulkPaymentInitiationRequest.Payment.builder();
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.currency("bulk-payment-initiation-requests");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder1.build();
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      bulkPaymentInitiationRequest_Payment0.setCreditorAgent("bulkPaymentInitiationRequest");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bulkPaymentInitiationRequest_Payment0.setAmount(bigDecimal0);
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment.PaymentBuilder bulkPaymentInitiationRequest_Payment_PaymentBuilder0 = BulkPaymentInitiationRequest.Payment.builder();
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      bulkPaymentInitiationRequest_Payment_PaymentBuilder0.creditorAgentType("");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = bulkPaymentInitiationRequest_Payment_PaymentBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      String string0 = bulkPaymentInitiationRequest_Payment0.toString();
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      bulkPaymentInitiationRequest_Payment0.setCreditorAccountReferenceType("bulk-payment-initiation-requests");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment0 = new BulkPaymentInitiationRequest.Payment();
      bulkPaymentInitiationRequest_Payment0.setEndToEndId("bulkPaymentInitiationRequest");
      BulkPaymentInitiationRequest.Payment bulkPaymentInitiationRequest_Payment1 = new BulkPaymentInitiationRequest.Payment();
      boolean boolean0 = bulkPaymentInitiationRequest_Payment0.equals(bulkPaymentInitiationRequest_Payment1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      bulkPaymentInitiationRequest0.setLinks(bulkPaymentInitiationAuthorizationLinks0);
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks1 = bulkPaymentInitiationRequest0.getLinks();
      assertNull(bulkPaymentInitiationAuthorizationLinks1.getRedirect());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      String string0 = bulkPaymentInitiationRequest0.toString();
      assertEquals("BulkPaymentInitiationRequest(id=null, financialInstitutionId=null, requestId=null, selfLink=null, consentReference=null, productType=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, status=null, statusReason=null, financialInstitutionCustomerReference=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, batchBookingPreferred=false, payments=[], requestedExecutionDate=null, links=null, financialInstitutionLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      bulkPaymentInitiationRequest0.setStatusReason("bulk-payment-initiation-requests");
      assertEquals("bulk-payment-initiation-requests", bulkPaymentInitiationRequest0.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      bulkPaymentInitiationRequest0.setSkipIbanityCompletionCallback(true);
      assertTrue(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      bulkPaymentInitiationRequest0.setConsentReference("");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertEquals("", bulkPaymentInitiationRequest0.getConsentReference());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = new BulkPaymentInitiationRequest();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequest0.setFinancialInstitutionId(uUID0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = new BulkPaymentInitiationRequest();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.consentReference("BulkPaymentInitiationRequest.Payment(endToEndId=");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequest1.equals(bulkPaymentInitiationRequest0);
      assertTrue(boolean0);
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertEquals("BulkPaymentInitiationRequest.Payment(endToEndId=", bulkPaymentInitiationRequest1.getConsentReference());
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.skipIbanityCompletionCallback(true);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertFalse(bulkPaymentInitiationRequest0.isBatchBookingPreferred());
      assertTrue(bulkPaymentInitiationRequest0.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest0.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertTrue(boolean0);
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = new BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder();
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.financialInstitutionLink(financialInstitutionLinks0);
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      String string0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.toString();
      assertEquals("BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder(id=null, financialInstitutionId=null, requestId=null, selfLink=null, consentReference=null, productType=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, status=null, statusReason=null, financialInstitutionCustomerReference=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, batchBookingPreferred=false, payments$value=null, requestedExecutionDate=null, links=null, financialInstitutionLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorName("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      bulkPaymentInitiationRequest0.hashCode();
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks", bulkPaymentInitiationRequest0.getDebtorName());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      BulkPaymentInitiationRequest.BulkPaymentInitiationRequestBuilder bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0 = BulkPaymentInitiationRequest.builder();
      bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.debtorAccountReferenceType("");
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest0 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      BulkPaymentInitiationRequest bulkPaymentInitiationRequest1 = bulkPaymentInitiationRequest_BulkPaymentInitiationRequestBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequest0.equals(bulkPaymentInitiationRequest1);
      assertFalse(bulkPaymentInitiationRequest1.isSkipIbanityCompletionCallback());
      assertEquals("", bulkPaymentInitiationRequest1.getDebtorAccountReferenceType());
      assertTrue(boolean0);
      assertFalse(bulkPaymentInitiationRequest1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(bulkPaymentInitiationRequest1.isBatchBookingPreferred());
  }
}
