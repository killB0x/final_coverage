/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:33:05 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.models.OnboardingDetails;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OnboardingDetails_ESTest extends OnboardingDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setVatNumber("d<j-");
      String string0 = onboardingDetails0.getVatNumber();
      assertEquals("d<j-", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.vatNumber("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getVatNumber();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setSelfLink("`Otih_/2");
      String string0 = onboardingDetails0.getSelfLink();
      assertEquals("`Otih_/2", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setSelfLink("");
      String string0 = onboardingDetails0.getSelfLink();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.requestId("Id");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getRequestId();
      assertEquals("Id", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setRequestId("");
      String string0 = onboardingDetails0.getRequestId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.phoneNumber("2n1*|+?L");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getPhoneNumber();
      assertEquals("2n1*|+?L", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setPhoneNumber("");
      String string0 = onboardingDetails0.getPhoneNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setOrganizationName("Id");
      String string0 = onboardingDetails0.getOrganizationName();
      assertEquals("Id", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setOrganizationName("");
      String string0 = onboardingDetails0.getOrganizationName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setLastName(", addressStreetAddress=");
      onboardingDetails0.getLastName();
      assertEquals(", addressStreetAddress=", onboardingDetails0.getLastName());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.lastName("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getLastName();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Random.setNextRandom(2259);
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      onboardingDetails_OnboardingDetailsBuilder0.id(uUID0);
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      UUID uUID1 = onboardingDetails0.getId();
      assertEquals("d3080000-d408-4000-9508-0000d6080000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      UUID uUID0 = MockUUID.fromString("Id");
      onboardingDetails0.setId(uUID0);
      UUID uUID1 = onboardingDetails0.getId();
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.firstName(", vatNumber=");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      String string0 = onboardingDetails0.getFirstName();
      assertEquals(", vatNumber=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.firstName("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getFirstName();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.enterpriseNumber("sqe!?%^#HOn<S`u");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      String string0 = onboardingDetails0.getEnterpriseNumber();
      assertEquals("sqe!?%^#HOn<S`u", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setEnterpriseNumber("");
      String string0 = onboardingDetails0.getEnterpriseNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.email("*");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      String string0 = onboardingDetails0.getEmail();
      assertEquals("*", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setEmail("");
      String string0 = onboardingDetails0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.addressStreetAddress("8uCIF*inj|L/7,");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getAddressStreetAddress();
      assertEquals("8uCIF*inj|L/7,", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.addressStreetAddress("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getAddressStreetAddress();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setAddressPostalCode("5");
      String string0 = onboardingDetails0.getAddressPostalCode();
      assertEquals("5", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.addressPostalCode("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getAddressPostalCode();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setAddressCountry("[Kc)n");
      String string0 = onboardingDetails0.getAddressCountry();
      assertEquals("[Kc)n", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setAddressCountry("");
      onboardingDetails0.getAddressCountry();
      assertEquals("", onboardingDetails0.getAddressCountry());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      onboardingDetails0.setAddressCity("$IiS");
      String string0 = onboardingDetails0.getAddressCity();
      assertEquals("$IiS", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.canEqual(onboardingDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      Object object0 = new Object();
      boolean boolean0 = onboardingDetails0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getRequestId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getFirstName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getSelfLink();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      UUID uUID0 = onboardingDetails0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getVatNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getOrganizationName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getAddressCity();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getAddressPostalCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getPhoneNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getAddressCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.getAddressStreetAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getLastName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getEnterpriseNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setAddressCity("`Otih_/2");
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertEquals("`Otih_/2", onboardingDetails0.getAddressCity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setAddressCity("onboardingDetails");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.addressCity("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder1.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertEquals("", onboardingDetails1.getAddressCity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.addressCountry("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails_OnboardingDetailsBuilder0.addressCountry("onboardingDetails");
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setAddressCountry("Id");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.addressCountry("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
      assertEquals("", onboardingDetails1.getAddressCountry());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setAddressPostalCode("{onboardingDetailsId}");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setAddressPostalCode("onboardingDetails");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setAddressStreetAddress("onboardingDetails");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setAddressStreetAddress("{onboardingDetailsId}");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.addressStreetAddress("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
      assertEquals("", onboardingDetails1.getAddressStreetAddress());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setEmail("{onboardingDetailsId}");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.email("{onboardingDetailsId}");
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder1.build();
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setEnterpriseNumber("onboardingDetails");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setEnterpriseNumber("onboardingDetails");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.enterpriseNumber(", requestId=");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
      assertEquals(", requestId=", onboardingDetails1.getEnterpriseNumber());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setFirstName("PIGUUY");
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setFirstName("onboardingDetails");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.firstName("`Otih_/2");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertEquals("`Otih_/2", onboardingDetails1.getFirstName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setLastName("onboardingDetails");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setLastName("onboardingDetails");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.lastName("Id");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertEquals("Id", onboardingDetails1.getLastName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setOrganizationName("onboardingDetails");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setOrganizationName("onboardingDetails");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setPhoneNumber("bD+@");
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.equals(onboardingDetails1);
      assertEquals("bD+@", onboardingDetails0.getPhoneNumber());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails0.setPhoneNumber("onboardingDetails");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.phoneNumber("k7lX>a");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertEquals("k7lX>a", onboardingDetails1.getPhoneNumber());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setVatNumber("onboardingDetails");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(onboardingDetails1.equals((Object)onboardingDetails0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setVatNumber("onboardingDetails");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(onboardingDetails1.equals((Object)onboardingDetails0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.vatNumber("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder1.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
      assertEquals("", onboardingDetails1.getVatNumber());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setRequestId("{onboardingDetailsId}");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(onboardingDetails1.equals((Object)onboardingDetails0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setRequestId("{onboardingDetailsId}");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(onboardingDetails1.equals((Object)onboardingDetails0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.requestId("`Otih_/2");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
      assertEquals("`Otih_/2", onboardingDetails1.getRequestId());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setSelfLink("{onboardingDetailsId}");
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(onboardingDetails1.equals((Object)onboardingDetails0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      assertTrue(onboardingDetails1.equals((Object)onboardingDetails0));
      
      onboardingDetails1.setSelfLink("{onboardingDetailsId}");
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(onboardingDetails1.equals((Object)onboardingDetails0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.selfLink("Id");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
      assertEquals("Id", onboardingDetails1.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      UUID uUID0 = MockUUID.randomUUID();
      onboardingDetails0.setId(uUID0);
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      UUID uUID0 = MockUUID.fromString("k7lX>a");
      onboardingDetails_OnboardingDetailsBuilder0.id(uUID0);
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails_OnboardingDetailsBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setAddressCity("");
      onboardingDetails0.hashCode();
      assertEquals("", onboardingDetails0.getAddressCity());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.addressPostalCode("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("", onboardingDetails0.getAddressPostalCode());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.addressStreetAddress("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("", onboardingDetails0.getAddressStreetAddress());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setEmail("onboardingDetails");
      onboardingDetails0.hashCode();
      assertEquals("onboardingDetails", onboardingDetails0.getEmail());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.firstName("`Otih_/2");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("`Otih_/2", onboardingDetails0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.lastName("Id");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("Id", onboardingDetails0.getLastName());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.organizationName("`Otih_/2");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("`Otih_/2", onboardingDetails0.getOrganizationName());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.phoneNumber("k7lX>a");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("k7lX>a", onboardingDetails0.getPhoneNumber());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.vatNumber("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.selfLink("Id");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      onboardingDetails0.hashCode();
      assertEquals("Id", onboardingDetails0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      UUID uUID0 = MockUUID.fromString("k7lX>a");
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.id(uUID0);
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      onboardingDetails0.hashCode();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.email("{onboardingDetailsId}");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder1.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertTrue(boolean0);
      assertEquals("{onboardingDetailsId}", onboardingDetails1.getEmail());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.organizationName("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertEquals("", onboardingDetails1.getOrganizationName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder1 = onboardingDetails_OnboardingDetailsBuilder0.addressPostalCode("}wq8k;dZiKh!:UfIg");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder1.build();
      OnboardingDetails onboardingDetails1 = onboardingDetails_OnboardingDetailsBuilder0.build();
      boolean boolean0 = onboardingDetails0.equals(onboardingDetails1);
      assertEquals("}wq8k;dZiKh!:UfIg", onboardingDetails1.getAddressPostalCode());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.requestId("`Otih_/2");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("`Otih_/2", onboardingDetails0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = new OnboardingDetails.OnboardingDetailsBuilder();
      onboardingDetails_OnboardingDetailsBuilder0.addressCountry("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.hashCode();
      assertEquals("", onboardingDetails0.getAddressCountry());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      String string0 = onboardingDetails_OnboardingDetailsBuilder0.toString();
      assertEquals("OnboardingDetails.OnboardingDetailsBuilder(id=null, selfLink=null, requestId=null, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=null, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      onboardingDetails_OnboardingDetailsBuilder0.addressCity("");
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      String string0 = onboardingDetails0.getAddressCity();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      OnboardingDetails.OnboardingDetailsBuilder onboardingDetails_OnboardingDetailsBuilder0 = OnboardingDetails.builder();
      OnboardingDetails onboardingDetails0 = onboardingDetails_OnboardingDetailsBuilder0.build();
      onboardingDetails0.setEnterpriseNumber("Id");
      onboardingDetails0.hashCode();
      assertEquals("Id", onboardingDetails0.getEnterpriseNumber());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      UUID uUID0 = MockUUID.randomUUID();
      onboardingDetails0.setId(uUID0);
      OnboardingDetails onboardingDetails1 = new OnboardingDetails();
      boolean boolean0 = onboardingDetails1.equals(onboardingDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      OnboardingDetails onboardingDetails0 = new OnboardingDetails();
      String string0 = onboardingDetails0.toString();
      assertEquals("OnboardingDetails(id=null, selfLink=null, requestId=null, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=null, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)", string0);
  }
}
