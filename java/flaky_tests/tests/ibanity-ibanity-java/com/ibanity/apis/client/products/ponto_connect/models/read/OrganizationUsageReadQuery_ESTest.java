/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:07:32 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.models.read;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrganizationUsageReadQuery_ESTest extends OrganizationUsageReadQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(4297);
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = new OrganizationUsageReadQuery("", uUID0, "8^;AS`\u0005?pn\b", hashMap0);
      organizationUsageReadQuery0.getOrganizationId();
      assertEquals("8^;AS`\u0005?pn\b", organizationUsageReadQuery0.getMonth());
      assertEquals("", organizationUsageReadQuery0.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.organizationId(uUID0);
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      UUID uUID1 = organizationUsageReadQuery0.getOrganizationId();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.month("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder");
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1.build();
      String string0 = organizationUsageReadQuery0.getMonth();
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      OrganizationUsageReadQuery organizationUsageReadQuery0 = new OrganizationUsageReadQuery((String) null, uUID0, "", (Map<String, String>) null);
      String string0 = organizationUsageReadQuery0.getMonth();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      Map<String, String> map0 = organizationUsageReadQuery0.getAdditionalHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = new OrganizationUsageReadQuery("mC5$DIX", uUID0, "^&C%j]6WXAz0[YYT7", hashMap0);
      organizationUsageReadQuery0.getAdditionalHeaders();
      assertEquals("mC5$DIX", organizationUsageReadQuery0.getAccessToken());
      assertEquals("^&C%j]6WXAz0[YYT7", organizationUsageReadQuery0.getMonth());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      OrganizationUsageReadQuery organizationUsageReadQuery0 = new OrganizationUsageReadQuery("", uUID0, "QP IOJ", hashMap0);
      organizationUsageReadQuery0.getAdditionalHeaders();
      assertEquals("", organizationUsageReadQuery0.getAccessToken());
      assertEquals("QP IOJ", organizationUsageReadQuery0.getMonth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      Map<String, String> map0 = organizationUsageReadQuery0.getAdditionalHeaders();
      OrganizationUsageReadQuery organizationUsageReadQuery1 = new OrganizationUsageReadQuery("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", uUID0, "com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", map0);
      String string0 = organizationUsageReadQuery1.getAccessToken();
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = new OrganizationUsageReadQuery("", uUID0, (String) null, hashMap0);
      String string0 = organizationUsageReadQuery0.getAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.canEqual(organizationUsageReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.canEqual("OrganizationUsageReadQuery(accessToken=OrganizationUsageReadQuery(accessToken=null, organizationId=null, month=null, additionalHeaders={}), organizationId=04000000-0500-4000-8600-000007000000, month=%D$6fCL, additionalHeaders={})");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      String string0 = organizationUsageReadQuery0.getAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      UUID uUID0 = organizationUsageReadQuery0.getOrganizationId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      String string0 = organizationUsageReadQuery0.getMonth();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery1.equals(organizationUsageReadQuery0);
      assertFalse(boolean0);
      assertFalse(organizationUsageReadQuery0.equals((Object)organizationUsageReadQuery1));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.month("");
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery1.equals(organizationUsageReadQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.month("rGwX");
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery1);
      assertFalse(boolean0);
      assertFalse(organizationUsageReadQuery1.equals((Object)organizationUsageReadQuery0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.month("7z|n=6|Y");
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      Map<String, String> map0 = organizationUsageReadQuery0.getAdditionalHeaders();
      assertNotNull(map0);
      
      OrganizationUsageReadQuery organizationUsageReadQuery1 = new OrganizationUsageReadQuery("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", uUID0, "com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", map0);
      UUID uUID1 = MockUUID.fromString("");
      OrganizationUsageReadQuery organizationUsageReadQuery2 = new OrganizationUsageReadQuery("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", uUID1, "OrganizationUsageReadQuery(accessToken=, organizationId=00000000-0100-4000-8200-000003000000, month=com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder, additionalHeaders={})", map0);
      boolean boolean0 = organizationUsageReadQuery2.equals(organizationUsageReadQuery1);
      assertFalse(boolean0);
      assertEquals("OrganizationUsageReadQuery(accessToken=, organizationId=00000000-0100-4000-8200-000003000000, month=com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder, additionalHeaders={})", organizationUsageReadQuery2.getMonth());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", organizationUsageReadQuery2.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.organizationId(uUID0);
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery1);
      assertFalse(boolean0);
      assertFalse(organizationUsageReadQuery1.equals((Object)organizationUsageReadQuery0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.organizationId(uUID0);
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.accessToken("");
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1.build();
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery1.equals(organizationUsageReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.accessToken("");
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery1);
      assertFalse(organizationUsageReadQuery1.equals((Object)organizationUsageReadQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      Map<String, String> map0 = organizationUsageReadQuery0.getAdditionalHeaders();
      assertNotNull(map0);
      
      OrganizationUsageReadQuery organizationUsageReadQuery1 = new OrganizationUsageReadQuery("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", uUID0, "~^G|hy", map0);
      boolean boolean0 = organizationUsageReadQuery1.equals(organizationUsageReadQuery0);
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", organizationUsageReadQuery1.getAccessToken());
      assertEquals("~^G|hy", organizationUsageReadQuery1.getMonth());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = new OrganizationUsageReadQuery("OrganizationUsageReadQuery(accessToken=null, organizationId=null, month=null, additionalHeaders={})", uUID0, "", (Map<String, String>) null);
      organizationUsageReadQuery0.hashCode();
      assertEquals("OrganizationUsageReadQuery(accessToken=null, organizationId=null, month=null, additionalHeaders={})", organizationUsageReadQuery0.getAccessToken());
      assertEquals("", organizationUsageReadQuery0.getMonth());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      Map<String, String> map0 = organizationUsageReadQuery0.getAdditionalHeaders();
      assertNotNull(map0);
      
      OrganizationUsageReadQuery organizationUsageReadQuery1 = new OrganizationUsageReadQuery("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", uUID0, "~^G|hy", map0);
      organizationUsageReadQuery1.hashCode();
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.read.OrganizationUsageReadQuery$OrganizationUsageReadQueryBuilder", organizationUsageReadQuery1.getAccessToken());
      assertEquals("~^G|hy", organizationUsageReadQuery1.getMonth());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      organizationUsageReadQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      String string0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.toString();
      assertEquals("OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder(accessToken=null, organizationId=null, month=null, additionalHeaders$value=null)", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = OrganizationUsageReadQuery.builder();
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1.build();
      OrganizationUsageReadQuery organizationUsageReadQuery1 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder1.build();
      boolean boolean0 = organizationUsageReadQuery0.equals(organizationUsageReadQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0 = new OrganizationUsageReadQuery.OrganizationUsageReadQueryBuilder();
      OrganizationUsageReadQuery organizationUsageReadQuery0 = organizationUsageReadQuery_OrganizationUsageReadQueryBuilder0.build();
      String string0 = organizationUsageReadQuery0.toString();
      assertEquals("OrganizationUsageReadQuery(accessToken=null, organizationId=null, month=null, additionalHeaders={})", string0);
  }
}
