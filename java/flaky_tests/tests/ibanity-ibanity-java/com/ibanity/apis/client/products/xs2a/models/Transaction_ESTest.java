/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 07:54:36 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.Transaction;
import java.math.BigDecimal;
import java.time.Instant;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Transaction_ESTest extends Transaction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = MockInstant.ofEpochSecond((-192L), 1328L);
      transaction0.setValueDate(instant0);
      Instant instant1 = transaction0.getValueDate();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setSelfLink(" dy");
      String string0 = transaction0.getSelfLink();
      assertEquals(" dy", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setSelfLink("");
      String string0 = transaction0.getSelfLink();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRequestId("P1uj `hxSV%s|+3Oa2");
      String string0 = transaction0.getRequestId();
      assertEquals("P1uj `hxSV%s|+3Oa2", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRequestId("");
      String string0 = transaction0.getRequestId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformationType("ES&>2Qy");
      String string0 = transaction0.getRemittanceInformationType();
      assertEquals("ES&>2Qy", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformationType("");
      String string0 = transaction0.getRemittanceInformationType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformation("X^{\"cLNr");
      String string0 = transaction0.getRemittanceInformation();
      assertEquals("X^{\"cLNr", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformation("");
      String string0 = transaction0.getRemittanceInformation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setPurposeCode("V");
      String string0 = transaction0.getPurposeCode();
      assertEquals("V", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setPurposeCode("");
      String string0 = transaction0.getPurposeCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setProprietaryBankTransactionCode("JJF/j?F;o0**");
      String string0 = transaction0.getProprietaryBankTransactionCode();
      assertEquals("JJF/j?F;o0**", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setProprietaryBankTransactionCode("");
      String string0 = transaction0.getProprietaryBankTransactionCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setMandateId("A)&?QT43");
      String string0 = transaction0.getMandateId();
      assertEquals("A)&?QT43", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setMandateId("");
      String string0 = transaction0.getMandateId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setInternalReference("com.ibanity.apis.client.products.xs2a.sandbox.models.FinancialInstitutionTransaction");
      String string0 = transaction0.getInternalReference();
      assertEquals("com.ibanity.apis.client.products.xs2a.sandbox.models.FinancialInstitutionTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setInternalReference("");
      String string0 = transaction0.getInternalReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Random.setNextRandom(1264);
      Transaction transaction0 = new Transaction();
      UUID uUID0 = MockUUID.randomUUID();
      transaction0.setId(uUID0);
      UUID uUID1 = transaction0.getId();
      assertEquals((-1151795600656416768L), uUID1.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      UUID uUID0 = MockUUID.fromString("");
      transaction0.setId(uUID0);
      UUID uUID1 = transaction0.getId();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      transaction0.setFee(bigDecimal0);
      BigDecimal bigDecimal1 = transaction0.getFee();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = new BigDecimal((-105L));
      transaction0.setFee(bigDecimal0);
      BigDecimal bigDecimal1 = transaction0.getFee();
      assertEquals((short) (-105), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      transaction0.setExecutionDate(instant0);
      Instant instant1 = transaction0.getExecutionDate();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setEndToEndId("?W");
      String string0 = transaction0.getEndToEndId();
      assertEquals("?W", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Transaction.TransactionBuilder<?, ?> transaction_TransactionBuilder0 = Transaction.builder();
      Transaction transaction0 = new Transaction(transaction_TransactionBuilder0);
      transaction0.setEndToEndId("");
      String string0 = transaction0.getEndToEndId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDigest("com.ibanity.apis.client.products.xs2a.sandbox.models.FinancialInstitutionTransaction$FinancialInstitutionTransactionBuilder");
      String string0 = transaction0.getDigest();
      assertEquals("com.ibanity.apis.client.products.xs2a.sandbox.models.FinancialInstitutionTransaction$FinancialInstitutionTransactionBuilder", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDigest("");
      String string0 = transaction0.getDigest();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDescription("6");
      String string0 = transaction0.getDescription();
      assertEquals("6", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDescription("");
      String string0 = transaction0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCurrency("Transaction(id=00000000-0100-4000-8200-000003000000, selfLink=, requestId=null, amount=null, currency=null, valueDate=null, executionDate=null, description=null, remittanceInformationType=null, remittanceInformation=null, counterpartName=null, counterpartReference=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, endToEndId=null, purposeCode=, mandateId=null, creditorId=null, additionalInformation=null, digest=null, internalReference=null, fee=null, cardReference=null, cardReferenceType=null)");
      String string0 = transaction0.getCurrency();
      assertEquals("Transaction(id=00000000-0100-4000-8200-000003000000, selfLink=, requestId=null, amount=null, currency=null, valueDate=null, executionDate=null, description=null, remittanceInformationType=null, remittanceInformation=null, counterpartName=null, counterpartReference=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, endToEndId=null, purposeCode=, mandateId=null, creditorId=null, additionalInformation=null, digest=null, internalReference=null, fee=null, cardReference=null, cardReferenceType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCurrency("");
      String string0 = transaction0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCreditorId("V");
      String string0 = transaction0.getCreditorId();
      assertEquals("V", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCreditorId("");
      String string0 = transaction0.getCreditorId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartReference("Eo*");
      String string0 = transaction0.getCounterpartReference();
      assertEquals("Eo*", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartReference("");
      String string0 = transaction0.getCounterpartReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartName("$,s&n(U>ruD;q");
      String string0 = transaction0.getCounterpartName();
      assertEquals("$,s&n(U>ruD;q", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Transaction.TransactionBuilder<?, ?> transaction_TransactionBuilder0 = Transaction.builder();
      Transaction transaction0 = new Transaction(transaction_TransactionBuilder0);
      transaction0.setCounterpartName("");
      String string0 = transaction0.getCounterpartName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReferenceType("@Ph1T]52_5;x~%xe");
      String string0 = transaction0.getCardReferenceType();
      assertEquals("@Ph1T]52_5;x~%xe", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReferenceType("");
      String string0 = transaction0.getCardReferenceType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReference(":t>5?)]e ");
      String string0 = transaction0.getCardReference();
      assertEquals(":t>5?)]e ", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReference("");
      String string0 = transaction0.getCardReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setBankTransactionCode(".j{6Fs?p[|_Z SA");
      String string0 = transaction0.getBankTransactionCode();
      assertEquals(".j{6Fs?p[|_Z SA", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Transaction.TransactionBuilder<?, ?> transaction_TransactionBuilder0 = Transaction.builder();
      Transaction transaction0 = new Transaction(transaction_TransactionBuilder0);
      transaction0.setBankTransactionCode("");
      String string0 = transaction0.getBankTransactionCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      transaction0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = transaction0.getAmount();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      transaction0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = transaction0.getAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      transaction0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = transaction0.getAmount();
      assertEquals((short) (-1), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setAdditionalInformation("-IlXgM}");
      String string0 = transaction0.getAdditionalInformation();
      assertEquals("-IlXgM}", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setAdditionalInformation("");
      String string0 = transaction0.getAdditionalInformation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Object object0 = new Object();
      boolean boolean0 = transaction0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getBankTransactionCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = transaction0.getAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getCardReferenceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = transaction0.getValueDate();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getMandateId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getCounterpartName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getAdditionalInformation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getCardReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getPurposeCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getInternalReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getRemittanceInformation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getEndToEndId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      UUID uUID0 = transaction0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getDigest();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getSelfLink();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getRequestId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getRemittanceInformationType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getCounterpartReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.getProprietaryBankTransactionCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = transaction0.getFee();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = transaction0.getExecutionDate();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReferenceType("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setCardReferenceType("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReferenceType("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
      assertEquals("transaction", transaction0.getCardReferenceType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReference("{transactionId}");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setCardReference("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setCardReference("");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      transaction0.setFee(bigDecimal0);
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setFee(bigDecimal0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      transaction1.setFee(bigDecimal0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      transaction0.setFee(bigDecimal0);
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setInternalReference("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setInternalReference("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setInternalReference("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertEquals("transaction", transaction0.getInternalReference());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setDigest("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setDigest("{transactionId}");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setAdditionalInformation("{transactionId}");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setAdditionalInformation("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setAdditionalInformation(",44ZA]h$");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertEquals(",44ZA]h$", transaction0.getAdditionalInformation());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCreditorId("{transactionId}");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setCreditorId("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCreditorId("{transactionId}");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertEquals("{transactionId}", transaction0.getCreditorId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCreditorId("{transactionId}");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertEquals("{transactionId}", transaction0.getCreditorId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setMandateId("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setMandateId("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setMandateId("{transactionId}");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertEquals("{transactionId}", transaction0.getMandateId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setMandateId("{transactionId}");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertEquals("{transactionId}", transaction0.getMandateId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setPurposeCode("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setPurposeCode("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setPurposeCode("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
      assertEquals("transaction", transaction0.getPurposeCode());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      transaction1.setEndToEndId("{transactionId}");
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction0.setEndToEndId("{transactionId}");
      boolean boolean0 = transaction1.equals(transaction0);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setEndToEndId("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setEndToEndId("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      transaction1.setProprietaryBankTransactionCode("{transactionId}");
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction0.setProprietaryBankTransactionCode("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setProprietaryBankTransactionCode("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setProprietaryBankTransactionCode("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setBankTransactionCode("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setBankTransactionCode("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setBankTransactionCode("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartReference("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setCounterpartReference("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setCounterpartReference("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setCounterpartName("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction0.setCounterpartName("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      transaction1.setRemittanceInformation("transaction");
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction0.setRemittanceInformation("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setRemittanceInformation("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setRemittanceInformation("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformationType("{transactionId}");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setRemittanceInformationType("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformationType("");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertEquals("", transaction0.getRemittanceInformationType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDescription("");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setDescription("");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setDescription("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setDescription("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      Instant instant0 = MockInstant.now();
      transaction0.setExecutionDate(instant0);
      assertFalse(transaction0.equals((Object)transaction1));
      
      transaction1.setExecutionDate(instant0);
      boolean boolean0 = transaction1.equals(transaction0);
      assertTrue(transaction0.equals((Object)transaction1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      Instant instant0 = MockInstant.now();
      transaction1.setExecutionDate(instant0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      Instant instant0 = MockInstant.now();
      transaction1.setExecutionDate(instant0);
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = MockInstant.now();
      transaction0.setValueDate(instant0);
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setValueDate(instant0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = MockInstant.now();
      transaction0.setValueDate(instant0);
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = MockInstant.now();
      transaction0.setValueDate(instant0);
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCurrency("{transactionId}");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setCurrency("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCurrency("IAQ(aA");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertEquals("IAQ(aA", transaction0.getCurrency());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setCurrency("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = new BigDecimal((-62L));
      transaction0.setAmount(bigDecimal0);
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setAmount(bigDecimal0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      transaction1.setAmount(bigDecimal0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      transaction1.setAmount(bigDecimal0);
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      transaction0.setRequestId("transaction");
      assertFalse(transaction0.equals((Object)transaction1));
      
      transaction1.setRequestId("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertTrue(transaction0.equals((Object)transaction1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction0.setRequestId("{transactionId}");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setRequestId("transaction");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction0.setSelfLink("{transactionId}");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      transaction1.setSelfLink("{transactionId}");
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      UUID uUID0 = MockUUID.randomUUID();
      Transaction transaction1 = new Transaction();
      transaction1.setId(uUID0);
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction0.setId(uUID0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      UUID uUID0 = MockUUID.fromString("{transactionId}");
      transaction1.setId(uUID0);
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Transaction transaction1 = new Transaction();
      assertTrue(transaction1.equals((Object)transaction0));
      
      UUID uUID0 = MockUUID.randomUUID();
      transaction1.setId(uUID0);
      boolean boolean0 = transaction1.equals(transaction0);
      assertFalse(transaction1.equals((Object)transaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      boolean boolean0 = transaction0.equals("transaction");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReferenceType("4~X7GX4?/");
      transaction0.hashCode();
      assertEquals("4~X7GX4?/", transaction0.getCardReferenceType());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReference(", updatedAt=");
      transaction0.hashCode();
      assertEquals(", updatedAt=", transaction0.getCardReference());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = new BigDecimal(4894L);
      transaction0.setFee(bigDecimal0);
      transaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setInternalReference("");
      transaction0.hashCode();
      assertEquals("", transaction0.getInternalReference());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDigest("cm|HO172V+#rfJ#F |");
      transaction0.hashCode();
      assertEquals("cm|HO172V+#rfJ#F |", transaction0.getDigest());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setAdditionalInformation("[}1^2GNjVe}Q");
      transaction0.hashCode();
      assertEquals("[}1^2GNjVe}Q", transaction0.getAdditionalInformation());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCreditorId("Y@;13;wKKWA8");
      transaction0.hashCode();
      assertEquals("Y@;13;wKKWA8", transaction0.getCreditorId());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setPurposeCode("com.ibanity.apis.client.products.xs2a.models.Transaction");
      transaction0.hashCode();
      assertEquals("com.ibanity.apis.client.products.xs2a.models.Transaction", transaction0.getPurposeCode());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setEndToEndId("MbF*v^GhD=d3CRHVu");
      transaction0.hashCode();
      assertEquals("MbF*v^GhD=d3CRHVu", transaction0.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setBankTransactionCode("|4}rV");
      transaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartReference("a");
      transaction0.hashCode();
      assertEquals("a", transaction0.getCounterpartReference());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartName("financialInstitutionTransaction");
      transaction0.hashCode();
      assertEquals("financialInstitutionTransaction", transaction0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformation("{transactionId}");
      transaction0.hashCode();
      assertEquals("{transactionId}", transaction0.getRemittanceInformation());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformationType("}dVNe$i/|i{c<h");
      transaction0.hashCode();
      assertEquals("}dVNe$i/|i{c<h", transaction0.getRemittanceInformationType());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = MockInstant.ofEpochMilli((-1L));
      transaction0.setValueDate(instant0);
      transaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      transaction0.setAmount(bigDecimal0);
      transaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRequestId("");
      transaction0.hashCode();
      assertEquals("", transaction0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setSelfLink(" dy");
      transaction0.hashCode();
      assertEquals(" dy", transaction0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      UUID uUID0 = MockUUID.fromString("W,HO;f");
      transaction0.setId(uUID0);
      transaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReferenceType("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
      assertEquals("transaction", transaction0.getCardReferenceType());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDigest("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setDigest("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setInternalReference("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
      assertEquals("transaction", transaction0.getInternalReference());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartReference("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertEquals("transaction", transaction0.getCounterpartReference());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCounterpartName("transaction");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setCounterpartName("transaction");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Transaction.TransactionBuilder<?, ?> transaction_TransactionBuilder0 = Transaction.builder();
      Transaction transaction0 = new Transaction(transaction_TransactionBuilder0);
      String string0 = transaction0.getCreditorId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      boolean boolean0 = transaction0.canEqual(transaction0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setPurposeCode("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
      assertEquals("transaction", transaction0.getPurposeCode());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setAdditionalInformation("{transactionId}");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
      assertEquals("{transactionId}", transaction0.getAdditionalInformation());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCardReference("{transactionId}");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
      assertEquals("{transactionId}", transaction0.getCardReference());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setProprietaryBankTransactionCode("transaction");
      transaction0.hashCode();
      assertEquals("transaction", transaction0.getProprietaryBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setCurrency("{transactionId}");
      transaction0.hashCode();
      assertEquals("{transactionId}", transaction0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setMandateId("{transactionId}");
      transaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      Instant instant0 = MockInstant.now();
      transaction0.setExecutionDate(instant0);
      transaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      transaction0.setFee(bigDecimal0);
      BigDecimal bigDecimal1 = transaction0.getFee();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setRemittanceInformationType("{transactionId}");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction1.equals(transaction0);
      assertEquals("{transactionId}", transaction0.getRemittanceInformationType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setDescription("9B-ei]>\"^WV;t");
      transaction0.hashCode();
      assertEquals("9B-ei]>\"^WV;t", transaction0.getDescription());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setBankTransactionCode("transaction");
      Transaction transaction1 = new Transaction();
      boolean boolean0 = transaction0.equals(transaction1);
      assertFalse(boolean0);
      assertEquals("transaction", transaction0.getBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      String string0 = transaction0.toString();
      assertEquals("Transaction(id=null, selfLink=null, requestId=null, amount=null, currency=null, valueDate=null, executionDate=null, description=null, remittanceInformationType=null, remittanceInformation=null, counterpartName=null, counterpartReference=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, endToEndId=null, purposeCode=null, mandateId=null, creditorId=null, additionalInformation=null, digest=null, internalReference=null, fee=null, cardReference=null, cardReferenceType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Transaction transaction0 = new Transaction();
      transaction0.setSelfLink("{transactionId}");
      Transaction transaction1 = new Transaction();
      assertFalse(transaction1.equals((Object)transaction0));
      
      transaction1.setSelfLink("{transactionId}");
      boolean boolean0 = transaction0.equals(transaction1);
      assertTrue(transaction1.equals((Object)transaction0));
      assertTrue(boolean0);
  }
}
