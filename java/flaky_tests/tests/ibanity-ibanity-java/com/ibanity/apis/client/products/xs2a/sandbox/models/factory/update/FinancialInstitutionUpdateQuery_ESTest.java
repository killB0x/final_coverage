/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:13:37 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.sandbox.models.factory.update;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibanity.apis.client.products.xs2a.models.FinancialInstitution;
import com.ibanity.apis.client.products.xs2a.sandbox.models.factory.update.FinancialInstitutionUpdateQuery;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialInstitutionUpdateQuery_ESTest extends FinancialInstitutionUpdateQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery((UUID) null, (String) null, ")WfhwO%SKOeH-nk", ", requestId=", "", true, "GB", "");
      boolean boolean0 = financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired();
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
      assertEquals(")WfhwO%SKOeH-nk", financialInstitutionUpdateQuery0.getBic());
      assertEquals("GB", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals(", requestId=", financialInstitutionUpdateQuery0.getLogoUrl());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.getSharedBrandReference();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery((UUID) null, "{0{;`5B", "", "", "", false, "", "");
      String string0 = financialInstitutionUpdateQuery0.getSharedBrandReference();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("{0{;`5B", financialInstitutionUpdateQuery0.getName());
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
      assertEquals("", string0);
      assertEquals("", financialInstitutionUpdateQuery0.getBic());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.getSharedBrandName();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.from(financialInstitution0);
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.sharedBrandName("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      String string0 = financialInstitutionUpdateQuery0.getSharedBrandName();
      assertNotNull(string0);
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery((UUID) null, (String) null, ")WfhwO%SKOeH-nk", ", requestId=", "", true, "GB", "");
      String string0 = financialInstitutionUpdateQuery0.getName();
      assertEquals("GB", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals(")WfhwO%SKOeH-nk", financialInstitutionUpdateQuery0.getBic());
      assertTrue(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
      assertNull(string0);
      assertEquals(", requestId=", financialInstitutionUpdateQuery0.getLogoUrl());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.from(financialInstitution0);
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.name("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      String string0 = financialInstitutionUpdateQuery0.getName();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.getLogoUrl();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, "", "", "", "", false, "Ny!p!>2l(", ")");
      String string0 = financialInstitutionUpdateQuery0.getLogoUrl();
      assertEquals(")", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("", financialInstitutionUpdateQuery0.getBic());
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
      assertEquals("", financialInstitutionUpdateQuery0.getName());
      assertEquals("Ny!p!>2l(", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.getFinancialInstitutionId();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Random.setNextRandom((-964));
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, "", "9n^QsbwJ", (String) null, (String) null, false, "", "");
      financialInstitutionUpdateQuery0.getFinancialInstitutionId();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals("", financialInstitutionUpdateQuery0.getName());
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("9n^QsbwJ", financialInstitutionUpdateQuery0.getBic());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.getCountry();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery((UUID) null, "financialInstitution", "{financialInstitutionId}", "oYi", "oYi", false, "oYi", "oYi");
      String string0 = financialInstitutionUpdateQuery0.getCountry();
      assertEquals("{financialInstitutionId}", financialInstitutionUpdateQuery0.getBic());
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("oYi", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals("oYi", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("oYi", string0);
      assertEquals("financialInstitution", financialInstitutionUpdateQuery0.getName());
      assertEquals("oYi", financialInstitutionUpdateQuery0.getSharedBrandReference());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery((UUID) null, "", (String) null, (String) null, "FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder(financialInstitutionId=", true, "]LE3q'", "");
      String string0 = financialInstitutionUpdateQuery0.getBic();
      assertEquals("FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder(financialInstitutionId=", financialInstitutionUpdateQuery0.getCountry());
      assertEquals("", financialInstitutionUpdateQuery0.getName());
      assertEquals("]LE3q'", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertNull(string0);
      assertTrue(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, (String) null, "", "", "", true, "K!.q`MZ+hT![vJs", ", maintenanceFrom=");
      String string0 = financialInstitutionUpdateQuery0.getBic();
      assertEquals("", string0);
      assertEquals("", financialInstitutionUpdateQuery0.getLogoUrl());
      assertTrue(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertNotNull(string0);
      assertEquals("K!.q`MZ+hT![vJs", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals(", maintenanceFrom=", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.canEqual(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.canEqual(financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0);
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(";lzD1pi=8GrK^(\"4.:1");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", "", false, "=%=g@5;wq`T4Mp-pn>", "=%=g@5;wq`T4Mp-pn>");
      String string0 = financialInstitutionUpdateQuery0.getCountry();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getBic());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getName());
      assertEquals("", string0);
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getLogoUrl());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(";lzD1pi=8GrK^(\"4.:1");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", "", false, "=%=g@5;wq`T4Mp-pn>", "=%=g@5;wq`T4Mp-pn>");
      String string0 = financialInstitutionUpdateQuery0.getLogoUrl();
      assertEquals(";lzD1pi=8GrK^(\"4.:1", string0);
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getName());
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getBic());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(";lzD1pi=8GrK^(\"4.:1");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", "", false, "=%=g@5;wq`T4Mp-pn>", "=%=g@5;wq`T4Mp-pn>");
      financialInstitutionUpdateQuery0.getFinancialInstitutionId();
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getName());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getBic());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(";lzD1pi=8GrK^(\"4.:1");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", "", false, "=%=g@5;wq`T4Mp-pn>", "=%=g@5;wq`T4Mp-pn>");
      financialInstitutionUpdateQuery0.getSharedBrandName();
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getBic());
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(";lzD1pi=8GrK^(\"4.:1");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", ";lzD1pi=8GrK^(\"4.:1", "", false, "=%=g@5;wq`T4Mp-pn>", "=%=g@5;wq`T4Mp-pn>");
      financialInstitutionUpdateQuery0.getSharedBrandReference();
      assertEquals("", financialInstitutionUpdateQuery0.getCountry());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getBic());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals(";lzD1pi=8GrK^(\"4.:1", financialInstitutionUpdateQuery0.getName());
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery((UUID) null, "financialInstitution", "{financialInstitutionId}", "oYi", "oYi", false, "oYi", "oYi");
      String string0 = financialInstitutionUpdateQuery0.getBic();
      assertEquals("{financialInstitutionId}", string0);
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("oYi", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("oYi", financialInstitutionUpdateQuery0.getCountry());
      assertEquals("oYi", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals("oYi", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals("financialInstitution", financialInstitutionUpdateQuery0.getName());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, "FinancialInstitution.FinancialInstitutionBuilder(id=", "FinancialInstitution.FinancialInstitutionBuilder(id=", "}Zmp?#", "aXIHw1:4", true, "B5]nUE)Q\r@[Aw", (String) null);
      String string0 = financialInstitutionUpdateQuery0.getName();
      assertEquals("aXIHw1:4", financialInstitutionUpdateQuery0.getCountry());
      assertTrue(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("}Zmp?#", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals("FinancialInstitution.FinancialInstitutionBuilder(id=", financialInstitutionUpdateQuery0.getBic());
      assertEquals("B5]nUE)Q\r@[Aw", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertNotNull(string0);
      assertEquals("FinancialInstitution.FinancialInstitutionBuilder(id=", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.sharedBrandName("m)&2q#2/(o?F~W#!Z");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.sharedBrandName("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.sharedBrandName(", sharedBrandName=");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.sharedBrandReference(":j3|W?U1wx/xym^.1{.");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.sharedBrandReference("0V#+V/)ey9,gAU");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.sharedBrandReference("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.country("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.country(", requiresCustomerIpAddress=");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.logoUrl("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.logoUrl(", logoUrl=");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(financialInstitutionUpdateQuery1.equals((Object)financialInstitutionUpdateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.logoUrl("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.bic("m)&2q#2/(o?F~W#!Z");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.bic("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.equals((Object)financialInstitutionUpdateQuery0));
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.bic("FinancialInstitution.FinancialInstitutionBuilder(id=");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(boolean0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.name("H._.ARbetyD}?Lv9,");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertTrue(boolean0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.name("{xJKo/1rIjwbO3gf->");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.equals((Object)financialInstitutionUpdateQuery0));
      assertFalse(boolean0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.name("+5ZEs0!Pw?-_Nv");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(boolean0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertFalse(financialInstitutionUpdateQuery1.equals((Object)financialInstitutionUpdateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.financialInstitutionCustomerReferenceRequired(true);
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery1.equals(financialInstitutionUpdateQuery0);
      assertFalse(boolean0);
      assertTrue(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(object0);
      assertFalse(boolean0);
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.from(financialInstitution0);
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery0);
      assertTrue(boolean0);
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = new FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      financialInstitutionUpdateQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery(uUID0, "FinancialInstitution.FinancialInstitutionBuilder(id=", "FinancialInstitution.FinancialInstitutionBuilder(id=", "}Zmp?#", "aXIHw1:4", true, "B5]nUE)Q\r@[Aw", (String) null);
      financialInstitutionUpdateQuery0.hashCode();
      assertEquals("aXIHw1:4", financialInstitutionUpdateQuery0.getCountry());
      assertEquals("FinancialInstitution.FinancialInstitutionBuilder(id=", financialInstitutionUpdateQuery0.getBic());
      assertEquals("}Zmp?#", financialInstitutionUpdateQuery0.getLogoUrl());
      assertEquals("FinancialInstitution.FinancialInstitutionBuilder(id=", financialInstitutionUpdateQuery0.getName());
      assertEquals("B5]nUE)Q\r@[Aw", financialInstitutionUpdateQuery0.getSharedBrandReference());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = new FinancialInstitutionUpdateQuery((UUID) null, "{0{;`5B", "", "", "", false, "", "");
      financialInstitutionUpdateQuery0.hashCode();
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandName());
      assertEquals("{0{;`5B", financialInstitutionUpdateQuery0.getName());
      assertFalse(financialInstitutionUpdateQuery0.isFinancialInstitutionCustomerReferenceRequired());
      assertEquals("", financialInstitutionUpdateQuery0.getSharedBrandReference());
      assertEquals("", financialInstitutionUpdateQuery0.getBic());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      String string0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.toString();
      assertEquals("FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder(financialInstitutionId=null, name=null, bic=null, logoUrl=null, country=null, financialInstitutionCustomerReferenceRequired=false, sharedBrandReference=null, sharedBrandName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.country("");
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery1 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder1.build();
      boolean boolean0 = financialInstitutionUpdateQuery0.equals(financialInstitutionUpdateQuery1);
      assertFalse(financialInstitutionUpdateQuery1.isFinancialInstitutionCustomerReferenceRequired());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FinancialInstitutionUpdateQuery.FinancialInstitutionUpdateQueryBuilder financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0 = FinancialInstitutionUpdateQuery.builder();
      FinancialInstitutionUpdateQuery financialInstitutionUpdateQuery0 = financialInstitutionUpdateQuery_FinancialInstitutionUpdateQueryBuilder0.build();
      String string0 = financialInstitutionUpdateQuery0.toString();
      assertEquals("FinancialInstitutionUpdateQuery(financialInstitutionId=null, name=null, bic=null, logoUrl=null, country=null, financialInstitutionCustomerReferenceRequired=false, sharedBrandReference=null, sharedBrandName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        FinancialInstitutionUpdateQuery.from((FinancialInstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Missing required 'financialInstitution'
         //
         verifyException("java.util.Objects", e);
      }
  }
}
