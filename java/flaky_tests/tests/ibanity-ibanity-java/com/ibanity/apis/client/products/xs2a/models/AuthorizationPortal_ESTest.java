/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:00:58 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.AuthorizationPortal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AuthorizationPortal_ESTest extends AuthorizationPortal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      authorizationPortal_AuthorizationPortalBuilder0.financialInstitutionSecondaryColor("W2]mJ.+");
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      String string0 = authorizationPortal0.getFinancialInstitutionSecondaryColor();
      assertEquals("W2]mJ.+", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setFinancialInstitutionSecondaryColor("");
      String string0 = authorizationPortal0.getFinancialInstitutionSecondaryColor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      authorizationPortal0.setFinancialInstitutionPrimaryColor("?6-G!\"");
      String string0 = authorizationPortal0.getFinancialInstitutionPrimaryColor();
      assertEquals("?6-G!\"", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder1 = authorizationPortal_AuthorizationPortalBuilder0.financialInstitutionPrimaryColor("");
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder1.build();
      String string0 = authorizationPortal0.getFinancialInstitutionPrimaryColor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setDisclaimerTitle("692C8-");
      String string0 = authorizationPortal0.getDisclaimerTitle();
      assertEquals("692C8-", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setDisclaimerTitle("");
      String string0 = authorizationPortal0.getDisclaimerTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setDisclaimerContent("(G20ka");
      String string0 = authorizationPortal0.getDisclaimerContent();
      assertEquals("(G20ka", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = new AuthorizationPortal.AuthorizationPortalBuilder();
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      authorizationPortal0.setDisclaimerContent("");
      String string0 = authorizationPortal0.getDisclaimerContent();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      boolean boolean0 = authorizationPortal0.canEqual(authorizationPortal0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      boolean boolean0 = authorizationPortal0.canEqual(authorizationPortal_AuthorizationPortalBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      String string0 = authorizationPortal0.getDisclaimerTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      String string0 = authorizationPortal0.getFinancialInstitutionPrimaryColor();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      String string0 = authorizationPortal0.getFinancialInstitutionSecondaryColor();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      String string0 = authorizationPortal0.getDisclaimerContent();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setDisclaimerContent("m!w;&y\"rS");
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = new AuthorizationPortal.AuthorizationPortalBuilder();
      authorizationPortal_AuthorizationPortalBuilder0.disclaimerContent("C`leZ1/cZ:(A9At@1");
      AuthorizationPortal authorizationPortal1 = authorizationPortal_AuthorizationPortalBuilder0.build();
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertFalse(authorizationPortal1.equals((Object)authorizationPortal0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = new AuthorizationPortal.AuthorizationPortalBuilder();
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder1 = authorizationPortal_AuthorizationPortalBuilder0.disclaimerContent(" ~A*]4y!4:M|7kL9");
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder1.build();
      AuthorizationPortal authorizationPortal1 = authorizationPortal_AuthorizationPortalBuilder0.build();
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setDisclaimerTitle("]>");
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      assertFalse(authorizationPortal1.equals((Object)authorizationPortal0));
      
      authorizationPortal1.setDisclaimerTitle("]>");
      boolean boolean0 = authorizationPortal1.equals(authorizationPortal0);
      assertTrue(authorizationPortal1.equals((Object)authorizationPortal0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setDisclaimerTitle("y;RCuk>e'5><168\"{My");
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      boolean boolean0 = authorizationPortal1.equals(authorizationPortal0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      assertTrue(authorizationPortal1.equals((Object)authorizationPortal0));
      
      authorizationPortal1.setDisclaimerTitle("SHlZ!wMo]dfVXpSW");
      boolean boolean0 = authorizationPortal1.equals(authorizationPortal0);
      assertFalse(authorizationPortal1.equals((Object)authorizationPortal0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      assertTrue(authorizationPortal1.equals((Object)authorizationPortal0));
      
      authorizationPortal1.setFinancialInstitutionSecondaryColor("");
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertFalse(authorizationPortal1.equals((Object)authorizationPortal0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      assertTrue(authorizationPortal1.equals((Object)authorizationPortal0));
      
      authorizationPortal1.setFinancialInstitutionPrimaryColor("a88~fOf");
      boolean boolean0 = authorizationPortal1.equals(authorizationPortal0);
      assertFalse(authorizationPortal1.equals((Object)authorizationPortal0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      assertTrue(authorizationPortal1.equals((Object)authorizationPortal0));
      
      authorizationPortal1.setFinancialInstitutionPrimaryColor(", disclaimerTitle=");
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertFalse(authorizationPortal1.equals((Object)authorizationPortal0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      Object object0 = new Object();
      boolean boolean0 = authorizationPortal0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = new AuthorizationPortal.AuthorizationPortalBuilder();
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      authorizationPortal0.setDisclaimerContent("");
      authorizationPortal0.hashCode();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      authorizationPortal_AuthorizationPortalBuilder0.financialInstitutionSecondaryColor("(e]9Z4p$gUp>");
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      authorizationPortal0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      authorizationPortal_AuthorizationPortalBuilder0.financialInstitutionPrimaryColor("");
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      authorizationPortal0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      authorizationPortal_AuthorizationPortalBuilder0.financialInstitutionSecondaryColor("");
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      AuthorizationPortal authorizationPortal1 = authorizationPortal_AuthorizationPortalBuilder0.build();
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = new AuthorizationPortal.AuthorizationPortalBuilder();
      String string0 = authorizationPortal_AuthorizationPortalBuilder0.toString();
      assertEquals("AuthorizationPortal.AuthorizationPortalBuilder(financialInstitutionPrimaryColor=null, financialInstitutionSecondaryColor=null, disclaimerTitle=null, disclaimerContent=null)", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder1 = authorizationPortal_AuthorizationPortalBuilder0.disclaimerTitle("y+yjfXpB1$7");
      assertSame(authorizationPortal_AuthorizationPortalBuilder0, authorizationPortal_AuthorizationPortalBuilder1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder1 = authorizationPortal_AuthorizationPortalBuilder0.financialInstitutionPrimaryColor(",raG?/4!!WF >sY* \"");
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder1.build();
      AuthorizationPortal authorizationPortal1 = authorizationPortal_AuthorizationPortalBuilder1.build();
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      authorizationPortal0.setFinancialInstitutionSecondaryColor("");
      AuthorizationPortal authorizationPortal1 = new AuthorizationPortal();
      boolean boolean0 = authorizationPortal0.equals(authorizationPortal1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AuthorizationPortal authorizationPortal0 = new AuthorizationPortal();
      String string0 = authorizationPortal0.toString();
      assertEquals("AuthorizationPortal(financialInstitutionPrimaryColor=null, financialInstitutionSecondaryColor=null, disclaimerTitle=null, disclaimerContent=null)", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AuthorizationPortal.AuthorizationPortalBuilder authorizationPortal_AuthorizationPortalBuilder0 = AuthorizationPortal.builder();
      AuthorizationPortal authorizationPortal0 = authorizationPortal_AuthorizationPortalBuilder0.build();
      authorizationPortal0.setDisclaimerTitle("KIb(=*#t1BK,");
      authorizationPortal0.hashCode();
  }
}
