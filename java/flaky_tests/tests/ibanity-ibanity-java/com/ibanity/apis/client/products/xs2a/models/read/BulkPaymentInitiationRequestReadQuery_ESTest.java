/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:59:40 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.read;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.read.BulkPaymentInitiationRequestReadQuery;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BulkPaymentInitiationRequestReadQuery_ESTest extends BulkPaymentInitiationRequestReadQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      UUID uUID0 = MockUUID.fromString("");
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1.build();
      bulkPaymentInitiationRequestReadQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      Random.setNextRandom((-1948));
      UUID uUID0 = MockUUID.randomUUID();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      Map<String, String> map0 = bulkPaymentInitiationRequestReadQuery0.getAdditionalHeaders();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = new BulkPaymentInitiationRequestReadQuery("", uUID0, uUID0, map0);
      UUID uUID1 = bulkPaymentInitiationRequestReadQuery1.getPaymentInitiationRequestId();
      assertEquals("9c070000-9d07-4000-9e07-00009f070000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(")");
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      Map<String, String> map0 = bulkPaymentInitiationRequestReadQuery0.getAdditionalHeaders();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = new BulkPaymentInitiationRequestReadQuery("", uUID0, uUID0, map0);
      UUID uUID1 = bulkPaymentInitiationRequestReadQuery1.getPaymentInitiationRequestId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      Random.setNextRandom((-1948));
      UUID uUID0 = MockUUID.randomUUID();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      Map<String, String> map0 = bulkPaymentInitiationRequestReadQuery0.getAdditionalHeaders();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = new BulkPaymentInitiationRequestReadQuery("", uUID0, uUID0, map0);
      UUID uUID1 = bulkPaymentInitiationRequestReadQuery1.getFinancialInstitutionId();
      assertEquals((-7203789076321320960L), uUID1.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(")");
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1.build();
      UUID uUID1 = bulkPaymentInitiationRequestReadQuery0.getFinancialInstitutionId();
      assertEquals(16793600L, uUID1.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      Map<String, String> map0 = bulkPaymentInitiationRequestReadQuery0.getAdditionalHeaders();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = new BulkPaymentInitiationRequestReadQuery("BulkPaymentInitiationRequestReadQuery(customerAccessToken=null, financialInstitutionId=00000000-0100-4000-8200-000003000000, paymentInitiationRequestId=null, additionalHeaders={})", uUID0, uUID0, map0);
      String string0 = bulkPaymentInitiationRequestReadQuery1.getCustomerAccessToken();
      assertEquals("BulkPaymentInitiationRequestReadQuery(customerAccessToken=null, financialInstitutionId=00000000-0100-4000-8200-000003000000, paymentInitiationRequestId=null, additionalHeaders={})", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = new BulkPaymentInitiationRequestReadQuery("", uUID0, uUID0, hashMap0);
      String string0 = bulkPaymentInitiationRequestReadQuery0.getCustomerAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = new BulkPaymentInitiationRequestReadQuery("", uUID0, uUID0, (Map<String, String>) null);
      Map<String, String> map0 = bulkPaymentInitiationRequestReadQuery0.getAdditionalHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = new BulkPaymentInitiationRequestReadQuery("z0EpghWuX~/bMH>", uUID0, uUID0, hashMap0);
      Map<String, String> map0 = bulkPaymentInitiationRequestReadQuery0.getAdditionalHeaders();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, (String) null);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = new BulkPaymentInitiationRequestReadQuery((String) null, uUID0, uUID0, hashMap0);
      Map<String, String> map0 = bulkPaymentInitiationRequestReadQuery0.getAdditionalHeaders();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("M");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = new BulkPaymentInitiationRequestReadQuery("M", uUID0, uUID0, hashMap0);
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.canEqual(bulkPaymentInitiationRequestReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.canEqual("qedc9[he9sYO?");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      UUID uUID0 = bulkPaymentInitiationRequestReadQuery0.getPaymentInitiationRequestId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      UUID uUID0 = bulkPaymentInitiationRequestReadQuery0.getFinancialInstitutionId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      String string0 = bulkPaymentInitiationRequestReadQuery0.getCustomerAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.additionalHeaders((Map<String, String>) null);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.equals(bulkPaymentInitiationRequestReadQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.additionalHeaders((Map<String, String>) null);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery1.equals(bulkPaymentInitiationRequestReadQuery0);
      assertFalse(bulkPaymentInitiationRequestReadQuery0.equals((Object)bulkPaymentInitiationRequestReadQuery1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.additionalHeaders((Map<String, String>) null);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery1.equals(bulkPaymentInitiationRequestReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery1.equals(bulkPaymentInitiationRequestReadQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.equals(bulkPaymentInitiationRequestReadQuery1);
      assertFalse(bulkPaymentInitiationRequestReadQuery1.equals((Object)bulkPaymentInitiationRequestReadQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery1.equals(bulkPaymentInitiationRequestReadQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.equals(bulkPaymentInitiationRequestReadQuery1);
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequestReadQuery1.equals((Object)bulkPaymentInitiationRequestReadQuery0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.customerAccessToken("");
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery1.equals(bulkPaymentInitiationRequestReadQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.customerAccessToken("");
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.equals(bulkPaymentInitiationRequestReadQuery1);
      assertFalse(boolean0);
      assertFalse(bulkPaymentInitiationRequestReadQuery1.equals((Object)bulkPaymentInitiationRequestReadQuery0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.equals(bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.equals(bulkPaymentInitiationRequestReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      bulkPaymentInitiationRequestReadQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = new BulkPaymentInitiationRequestReadQuery("", uUID0, uUID0, (Map<String, String>) null);
      bulkPaymentInitiationRequestReadQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.customerAccessToken("myS-j=2Up;[qVa3p4o/");
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery1.equals(bulkPaymentInitiationRequestReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.paymentInitiationRequestId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder1.build();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery1.equals(bulkPaymentInitiationRequestReadQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      String string0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.toString();
      assertEquals("BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder(customerAccessToken=null, financialInstitutionId=null, paymentInitiationRequestId=null, additionalHeaders$value=null)", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = new BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.financialInstitutionId(uUID0);
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery1 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationRequestReadQuery0.equals(bulkPaymentInitiationRequestReadQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BulkPaymentInitiationRequestReadQuery.BulkPaymentInitiationRequestReadQueryBuilder bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0 = BulkPaymentInitiationRequestReadQuery.builder();
      BulkPaymentInitiationRequestReadQuery bulkPaymentInitiationRequestReadQuery0 = bulkPaymentInitiationRequestReadQuery_BulkPaymentInitiationRequestReadQueryBuilder0.build();
      String string0 = bulkPaymentInitiationRequestReadQuery0.toString();
      assertEquals("BulkPaymentInitiationRequestReadQuery(customerAccessToken=null, financialInstitutionId=null, paymentInitiationRequestId=null, additionalHeaders={})", string0);
  }
}
