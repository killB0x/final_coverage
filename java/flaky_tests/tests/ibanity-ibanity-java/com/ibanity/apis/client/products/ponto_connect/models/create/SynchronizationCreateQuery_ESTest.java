/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:30:11 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.models.create;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SynchronizationCreateQuery_ESTest extends SynchronizationCreateQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.accessToken("_[?.");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder1.build();
      synchronizationCreateQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("", "", "com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", "com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", "", hashMap0);
      hashMap0.remove((Object) synchronizationCreateQuery0, (Object) synchronizationCreateQuery_SynchronizationCreateQueryBuilder0);
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", synchronizationCreateQuery0.getResourceType());
      assertEquals("", synchronizationCreateQuery0.getResourceId());
      assertEquals("", synchronizationCreateQuery0.getSubtype());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", synchronizationCreateQuery0.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("3dS!'ql:", "3dS!'ql:", "3dS!'ql:", "", "3dS!'ql:", hashMap0);
      String string0 = synchronizationCreateQuery0.getSubtype();
      assertEquals("", synchronizationCreateQuery0.getAccessToken());
      assertEquals("3dS!'ql:", synchronizationCreateQuery0.getResourceId());
      assertEquals("3dS!'ql:", string0);
      assertEquals("3dS!'ql:", synchronizationCreateQuery0.getResourceType());
      assertEquals("3dS!'ql:", synchronizationCreateQuery0.getCustomerIpAddress());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.subtype("");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.getSubtype();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      Map<String, String> map0 = synchronizationCreateQuery0.getAdditionalHeaders();
      assertNotNull(map0);
      
      SynchronizationCreateQuery synchronizationCreateQuery1 = new SynchronizationCreateQuery("", "SynchronizationCreateQuery(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders={})", "SynchronizationCreateQuery(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders={})", "", "", map0);
      String string0 = synchronizationCreateQuery1.getResourceType();
      assertEquals("", synchronizationCreateQuery1.getSubtype());
      assertEquals("SynchronizationCreateQuery(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders={})", synchronizationCreateQuery1.getResourceId());
      assertEquals("", synchronizationCreateQuery1.getCustomerIpAddress());
      assertEquals("SynchronizationCreateQuery(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders={})", string0);
      assertEquals("", synchronizationCreateQuery1.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery(", resourceId=", ", resourceId=", "", (String) null, "", (Map<String, String>) null);
      String string0 = synchronizationCreateQuery0.getResourceType();
      assertEquals("", synchronizationCreateQuery0.getCustomerIpAddress());
      assertEquals("", string0);
      assertEquals(", resourceId=", synchronizationCreateQuery0.getResourceId());
      assertNotNull(string0);
      assertEquals(", resourceId=", synchronizationCreateQuery0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      Map<String, String> map0 = synchronizationCreateQuery0.getAdditionalHeaders();
      assertNotNull(map0);
      
      SynchronizationCreateQuery synchronizationCreateQuery1 = new SynchronizationCreateQuery("+37PmP/E1tt)0~HfV", "+37PmP/E1tt)0~HfV", "+37PmP/E1tt)0~HfV", "ey0i5km%xBK6#Mxtn/", "+37PmP/E1tt)0~HfV", map0);
      String string0 = synchronizationCreateQuery1.getResourceId();
      assertEquals("+37PmP/E1tt)0~HfV", synchronizationCreateQuery1.getSubtype());
      assertEquals("+37PmP/E1tt)0~HfV", synchronizationCreateQuery1.getCustomerIpAddress());
      assertEquals("ey0i5km%xBK6#Mxtn/", synchronizationCreateQuery1.getAccessToken());
      assertEquals("+37PmP/E1tt)0~HfV", string0);
      assertEquals("+37PmP/E1tt)0~HfV", synchronizationCreateQuery1.getResourceType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("", "", "", "", ")s", hashMap0);
      String string0 = synchronizationCreateQuery0.getResourceId();
      assertEquals("", synchronizationCreateQuery0.getAccessToken());
      assertEquals("", string0);
      assertEquals("", synchronizationCreateQuery0.getSubtype());
      assertEquals(")s", synchronizationCreateQuery0.getCustomerIpAddress());
      assertEquals("", synchronizationCreateQuery0.getResourceType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.customerIpAddress("j3");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.getCustomerIpAddress();
      assertEquals("j3", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("<XSj`M;v", "<XSj`M;v", "<XSj`M;v", "<XSj`M;v", "", hashMap0);
      String string0 = synchronizationCreateQuery0.getCustomerIpAddress();
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getAccessToken());
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getResourceType());
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getSubtype());
      assertEquals("", string0);
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getResourceId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      Map<String, String> map0 = synchronizationCreateQuery0.getAdditionalHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("<XSj`M;v", "<XSj`M;v", "<XSj`M;v", "<XSj`M;v", "", hashMap0);
      synchronizationCreateQuery0.getAdditionalHeaders();
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getResourceType());
      assertEquals("", synchronizationCreateQuery0.getCustomerIpAddress());
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getSubtype());
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getAccessToken());
      assertEquals("<XSj`M;v", synchronizationCreateQuery0.getResourceId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("", "", "", "", ")s", hashMap0);
      hashMap0.put(")s", "SynchronizationCreateQuery.SynchronizationCreateQueryBuilder(subtype=");
      synchronizationCreateQuery0.getAdditionalHeaders();
      assertEquals("", synchronizationCreateQuery0.getResourceId());
      assertEquals("", synchronizationCreateQuery0.getResourceType());
      assertEquals("", synchronizationCreateQuery0.getSubtype());
      assertEquals(")s", synchronizationCreateQuery0.getCustomerIpAddress());
      assertEquals("", synchronizationCreateQuery0.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.accessToken("[~(sE_$j ");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder1.build();
      String string0 = synchronizationCreateQuery0.getAccessToken();
      assertEquals("[~(sE_$j ", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("", "", "", "", ")s", hashMap0);
      String string0 = synchronizationCreateQuery0.getAccessToken();
      assertEquals("", synchronizationCreateQuery0.getResourceId());
      assertEquals(")s", synchronizationCreateQuery0.getCustomerIpAddress());
      assertEquals("", synchronizationCreateQuery0.getSubtype());
      assertEquals("", string0);
      assertEquals("", synchronizationCreateQuery0.getResourceType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.canEqual(synchronizationCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.canEqual("SynchronizationCreateQuery(subtype=?>l)(l9Ovv2o%BNhSs, resourceId=, resourceType=, accessToken=, customerIpAddress=, additionalHeaders={})");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.getCustomerIpAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.getAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.getResourceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.getSubtype();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.getResourceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery1.equals(synchronizationCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.customerIpAddress("");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.customerIpAddress("SynchronizationCreateQuery(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders={})");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.customerIpAddress("");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery1.equals(synchronizationCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.accessToken("");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery1.equals(synchronizationCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.accessToken("cV%zb@zxM[dP=");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertFalse(synchronizationCreateQuery1.equals((Object)synchronizationCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.accessToken("iBgqnj~p7/");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.resourceType("m=M'");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.resourceType("");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder1.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertFalse(synchronizationCreateQuery1.equals((Object)synchronizationCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.resourceType("1fkIDCV5");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery1.equals(synchronizationCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.resourceId(", resourceType=");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.resourceId("2<b9WpT");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertFalse(boolean0);
      assertFalse(synchronizationCreateQuery1.equals((Object)synchronizationCreateQuery0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.resourceId("SynchronizationCreateQuery(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders={})");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery1.equals(synchronizationCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.subtype("");
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder1.build();
      boolean boolean0 = synchronizationCreateQuery1.equals(synchronizationCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      Map<String, String> map0 = synchronizationCreateQuery0.getAdditionalHeaders();
      assertNotNull(map0);
      
      SynchronizationCreateQuery synchronizationCreateQuery1 = new SynchronizationCreateQuery("", "", "", "", "", map0);
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("", "com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", "", "", "", hashMap0);
      boolean boolean0 = synchronizationCreateQuery0.equals("\"sG(H&E^m ");
      assertEquals("", synchronizationCreateQuery0.getAccessToken());
      assertFalse(boolean0);
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", synchronizationCreateQuery0.getResourceId());
      assertEquals("", synchronizationCreateQuery0.getSubtype());
      assertEquals("", synchronizationCreateQuery0.getCustomerIpAddress());
      assertEquals("", synchronizationCreateQuery0.getResourceType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("", (String) null, "", (String) null, "", (Map<String, String>) null);
      synchronizationCreateQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SynchronizationCreateQuery synchronizationCreateQuery0 = new SynchronizationCreateQuery("", "com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", "", "", "", hashMap0);
      hashMap0.remove((Object) synchronizationCreateQuery0, (Object) synchronizationCreateQuery_SynchronizationCreateQueryBuilder0);
      assertEquals("", synchronizationCreateQuery0.getAccessToken());
      assertEquals("", synchronizationCreateQuery0.getResourceType());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.SynchronizationCreateQuery", synchronizationCreateQuery0.getResourceId());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.subtype("");
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      String string0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.toString();
      assertEquals("SynchronizationCreateQuery.SynchronizationCreateQueryBuilder(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders$value=null)", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = SynchronizationCreateQuery.builder();
      synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      SynchronizationCreateQuery synchronizationCreateQuery1 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      boolean boolean0 = synchronizationCreateQuery0.equals(synchronizationCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SynchronizationCreateQuery.SynchronizationCreateQueryBuilder synchronizationCreateQuery_SynchronizationCreateQueryBuilder0 = new SynchronizationCreateQuery.SynchronizationCreateQueryBuilder();
      SynchronizationCreateQuery synchronizationCreateQuery0 = synchronizationCreateQuery_SynchronizationCreateQueryBuilder0.build();
      String string0 = synchronizationCreateQuery0.toString();
      assertEquals("SynchronizationCreateQuery(subtype=null, resourceId=null, resourceType=null, accessToken=null, customerIpAddress=null, additionalHeaders={})", string0);
  }
}
