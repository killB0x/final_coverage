/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:02:06 GMT 2022
 */

package com.ibanity.apis.client.products.isabel_connect.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.isabel_connect.models.Account;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Account_ESTest extends Account_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Account account0 = new Account();
      account0.setReferenceType("IsabelModel.IsabelModelBuilder(id=");
      String string0 = account0.getReferenceType();
      assertEquals("IsabelModel.IsabelModelBuilder(id=", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Account account0 = new Account();
      account0.setReferenceType("");
      String string0 = account0.getReferenceType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Account account0 = new Account();
      account0.setReference("/}S`9p\r5OUo(");
      String string0 = account0.getReference();
      assertEquals("/}S`9p\r5OUo(", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Account account0 = new Account();
      account0.setReference("");
      String string0 = account0.getReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderName("}");
      String string0 = account0.getHolderName();
      assertEquals("}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderName("");
      String string0 = account0.getHolderName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddressCountry("3W2d");
      String string0 = account0.getHolderAddressCountry();
      assertEquals("3W2d", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddressCountry("");
      String string0 = account0.getHolderAddressCountry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddress("^BgYhu@sp");
      String string0 = account0.getHolderAddress();
      assertEquals("^BgYhu@sp", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddress("");
      String string0 = account0.getHolderAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Account account0 = new Account();
      account0.setFinancialInstitutionBic("ncIrj.oc{T-=\"*$");
      String string0 = account0.getFinancialInstitutionBic();
      assertEquals("ncIrj.oc{T-=\"*$", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Account account0 = new Account();
      account0.setFinancialInstitutionBic("");
      String string0 = account0.getFinancialInstitutionBic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Account account0 = new Account();
      account0.setDescription("joBSHK0!-!G~");
      String string0 = account0.getDescription();
      assertEquals("joBSHK0!-!G~", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Account account0 = new Account();
      account0.setDescription("");
      String string0 = account0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Account account0 = new Account();
      account0.setCurrency("h?B>q?IpHjL");
      String string0 = account0.getCurrency();
      assertEquals("h?B>q?IpHjL", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Account account0 = new Account();
      account0.setCurrency("");
      String string0 = account0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Account account0 = new Account();
      account0.setCountry("^z");
      String string0 = account0.getCountry();
      assertEquals("^z", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Account account0 = new Account();
      account0.setCountry("");
      String string0 = account0.getCountry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.canEqual(account0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.canEqual("?Ah#g\"L'Y>ezPB`cR\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getHolderAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getHolderAddressCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getHolderName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getReferenceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getFinancialInstitutionBic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.getReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      account0.setReferenceType("account");
      assertFalse(account0.equals((Object)account1));
      
      account1.setReferenceType("account");
      boolean boolean0 = account1.equals(account0);
      assertTrue(account0.equals((Object)account1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account0.setReferenceType("account");
      boolean boolean0 = account1.equals(account0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setReferenceType("account");
      boolean boolean0 = account1.equals(account0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setReference("{accountaccount}");
      boolean boolean0 = account0.equals(account1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setReference("{accountaccount}");
      boolean boolean0 = account1.equals(account0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderName("");
      Account.AccountBuilder<?, ?> account_AccountBuilder0 = account0.toBuilder();
      Account account1 = new Account(account_AccountBuilder0);
      boolean boolean0 = account0.equals(account1);
      assertTrue(boolean0);
      assertEquals("", account1.getHolderName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setHolderName("account");
      boolean boolean0 = account0.equals(account1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setHolderName("account");
      boolean boolean0 = account1.equals(account0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddressCountry("");
      Account account1 = new Account();
      assertFalse(account1.equals((Object)account0));
      
      account1.setHolderAddressCountry("");
      boolean boolean0 = account0.equals(account1);
      assertTrue(account1.equals((Object)account0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setHolderAddressCountry("account");
      boolean boolean0 = account0.equals(account1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setHolderAddressCountry("account");
      boolean boolean0 = account1.equals(account0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddress("account");
      Account account1 = new Account();
      assertFalse(account1.equals((Object)account0));
      
      account1.setHolderAddress("account");
      boolean boolean0 = account1.equals(account0);
      assertTrue(account1.equals((Object)account0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setHolderAddress(", selfLink=");
      boolean boolean0 = account0.equals(account1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddress(" W{i$Mxzl?ER");
      Account account1 = new Account();
      boolean boolean0 = account0.equals(account1);
      assertEquals(" W{i$Mxzl?ER", account0.getHolderAddress());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Account account0 = new Account();
      account0.setFinancialInstitutionBic("");
      Account account1 = new Account();
      assertFalse(account1.equals((Object)account0));
      
      account1.setFinancialInstitutionBic("");
      boolean boolean0 = account0.equals(account1);
      assertTrue(account1.equals((Object)account0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setFinancialInstitutionBic("account");
      boolean boolean0 = account0.equals(account1);
      assertFalse(account1.equals((Object)account0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Account account0 = new Account();
      account0.setFinancialInstitutionBic("{accountaccount}");
      Account account1 = new Account();
      boolean boolean0 = account0.equals(account1);
      assertEquals("{accountaccount}", account0.getFinancialInstitutionBic());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Account account0 = new Account();
      account0.setDescription("");
      Account.AccountBuilder<?, ?> account_AccountBuilder0 = account0.toBuilder();
      Account account1 = new Account(account_AccountBuilder0);
      boolean boolean0 = account0.equals(account1);
      assertEquals("", account1.getDescription());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setDescription("{accountaccount}");
      boolean boolean0 = account0.equals(account1);
      assertFalse(account1.equals((Object)account0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setDescription("{accountaccount}");
      boolean boolean0 = account1.equals(account0);
      assertFalse(account1.equals((Object)account0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Account account0 = new Account();
      account0.setCurrency("");
      Account.AccountBuilder<?, ?> account_AccountBuilder0 = account0.toBuilder();
      Account account1 = new Account(account_AccountBuilder0);
      boolean boolean0 = account0.equals(account1);
      assertEquals("", account1.getCurrency());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setCurrency("account");
      boolean boolean0 = account0.equals(account1);
      assertFalse(account1.equals((Object)account0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Account account0 = new Account();
      account0.setCurrency("{accountaccount}");
      Account account1 = new Account();
      boolean boolean0 = account0.equals(account1);
      assertFalse(boolean0);
      assertEquals("{accountaccount}", account0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Account account0 = new Account();
      account0.setCountry("{y3");
      Account.AccountBuilder<?, ?> account_AccountBuilder0 = account0.toBuilder();
      Account account1 = new Account(account_AccountBuilder0);
      boolean boolean0 = account0.equals(account1);
      assertTrue(boolean0);
      assertEquals("{y3", account1.getCountry());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setCountry("account");
      boolean boolean0 = account0.equals(account1);
      assertFalse(account1.equals((Object)account0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setCountry("account");
      boolean boolean0 = account1.equals(account0);
      assertFalse(account1.equals((Object)account0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Account account0 = new Account();
      Account account1 = new Account();
      assertTrue(account1.equals((Object)account0));
      
      account1.setRequestId("");
      boolean boolean0 = account1.equals(account0);
      assertFalse(account1.equals((Object)account0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.equals("{accountaccount}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.equals(account0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Account account0 = new Account();
      account0.setReference("account");
      account0.hashCode();
      assertEquals("account", account0.getReference());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderName("w=EP7#d#4hGZKf{");
      account0.hashCode();
      assertEquals("w=EP7#d#4hGZKf{", account0.getHolderName());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddressCountry("com.ibanity.apis.client.products.isabel_connect.models.IsabelModel$IsabelModelBuilder");
      account0.hashCode();
      assertEquals("com.ibanity.apis.client.products.isabel_connect.models.IsabelModel$IsabelModelBuilder", account0.getHolderAddressCountry());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Account account0 = new Account();
      account0.setHolderAddress("account");
      account0.hashCode();
      assertEquals("account", account0.getHolderAddress());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Account account0 = new Account();
      account0.setFinancialInstitutionBic("q7^QM4nK");
      account0.hashCode();
      assertEquals("q7^QM4nK", account0.getFinancialInstitutionBic());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Account account0 = new Account();
      account0.setDescription("3O&1");
      account0.hashCode();
      assertEquals("3O&1", account0.getDescription());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Account account0 = new Account();
      account0.setCountry("");
      account0.hashCode();
      assertEquals("", account0.getCountry());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Account account0 = new Account();
      account0.setReferenceType("account");
      account0.hashCode();
      assertEquals("account", account0.getReferenceType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Account account0 = new Account();
      account0.setCurrency("");
      account0.hashCode();
      assertEquals("", account0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Account.AccountBuilder<?, ?> account_AccountBuilder0 = Account.builder();
      Account account0 = new Account(account_AccountBuilder0);
      account0.setReference("");
      Account.AccountBuilder<?, ?> account_AccountBuilder1 = account0.toBuilder();
      Account account1 = new Account(account_AccountBuilder1);
      boolean boolean0 = account1.equals(account0);
      assertTrue(boolean0);
      assertEquals("", account1.getReference());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Account account0 = new Account();
      String string0 = account0.toString();
      assertEquals("Account(super=IsabelModel(id=null, selfLink=null, requestId=null), country=null, currency=null, description=null, financialInstitutionBic=null, holderAddress=null, holderAddressCountry=null, holderName=null, reference=null, referenceType=null)", string0);
  }
}
