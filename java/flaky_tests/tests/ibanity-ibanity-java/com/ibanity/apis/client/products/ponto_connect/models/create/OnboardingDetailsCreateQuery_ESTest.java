/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:43:33 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.models.create;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OnboardingDetailsCreateQuery_ESTest extends OnboardingDetailsCreateQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.organizationName("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      onboardingDetailsCreateQuery0.hashCode();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery((String) null, hashMap0, ", lastName=", (String) null, "", ", lastName=", ", lastName=", ", lastName=", (String) null, "", "", "", (String) null);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getVatNumber();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNotNull(string0);
      assertEquals(", lastName=", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("YY^dadZV#\"", hashMap0, "", "", "{2d9", "", "Q{p2S`r*?2;\rJUf8Dk", "Q{p2S`r*?2;\rJUf8Dk", ".-]VW\r6rh'u1O#~|2", "", (String) null, "", "");
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(".-]VW\r6rh'u1O#~|2", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("YY^dadZV#\"", onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("{2d9", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getVatNumber();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(".-]VW\r6rh'u1O#~|2", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("YY^dadZV#\"", onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("{2d9", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getPhoneNumber();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = new OnboardingDetailsCreateQuery("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", map0, "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "/", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", "/", "MRyS@v(:$jqr?", "", "(J-J7}'' xJqtCtn", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", "f/N^o4ye0");
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("(J-J7}'' xJqtCtn", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("/", onboardingDetailsCreateQuery1.getFirstName());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("MRyS@v(:$jqr?", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("/", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("f/N^o4ye0", onboardingDetailsCreateQuery1.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      String string0 = onboardingDetailsCreateQuery1.getPhoneNumber();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("(J-J7}'' xJqtCtn", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("/", onboardingDetailsCreateQuery1.getFirstName());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("MRyS@v(:$jqr?", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("/", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("f/N^o4ye0", onboardingDetailsCreateQuery1.getAddressCity());
      assertNotNull(string0);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getOrganizationName();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.organizationName("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      String string0 = onboardingDetailsCreateQuery0.getOrganizationName();
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = new OnboardingDetailsCreateQuery((String) null, map0, "kZ", (String) null, (String) null, "kWzX}[xJ", "kZ", (String) null, "", "", (String) null, "kWzX}[xJ", "C>8Q<8L]rc");
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("C>8Q<8L]rc", onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      String string0 = onboardingDetailsCreateQuery1.getLastName();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("C>8Q<8L]rc", onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNotNull(string0);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertEquals("kWzX}[xJ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery(", firstName=", (Map<String, String>) null, "CpThc'M'6~`", "f<$CZa7:k", ", firstName=", "", "CpThc'M'6~`", "f<$CZa7:k", "?:8-C@I`'~w]h{F", "(b\"_#\"hcT5Lggy:z", "", (String) null, (String) null);
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("(b\"_#\"hcT5Lggy:z", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("?:8-C@I`'~w]h{F", onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getLastName();
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("(b\"_#\"hcT5Lggy:z", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("?:8-C@I`'~w]h{F", onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.firstName("OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder(accessToken=null, additionalHeaders$value=null, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=C,{i&r'6n, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder(accessToken=null, additionalHeaders$value=null, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=C,{i&r'6n, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)", onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      String string0 = onboardingDetailsCreateQuery0.getFirstName();
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder(accessToken=null, additionalHeaders$value=null, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=C,{i&r'6n, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)", onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertEquals("OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder(accessToken=null, additionalHeaders$value=null, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=C,{i&r'6n, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.firstName("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      String string0 = onboardingDetailsCreateQuery0.getFirstName();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("", hashMap0, "GY8c8", ".+", "", (String) null, ".+", (String) null, "edpFTx4]7xhk", "", "", "LdzPZl;.U|~NL", ")");
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("LdzPZl;.U|~NL", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals(".+", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("GY8c8", onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertEquals(".+", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals(")", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("edpFTx4]7xhk", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getEnterpriseNumber();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("LdzPZl;.U|~NL", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals(".+", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("GY8c8", onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertEquals(".+", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals(")", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("edpFTx4]7xhk", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("", hashMap0, "A./dq9]3+6;[ZE~Grf", "nVF-x=W~'W-nxd&,", "", ", addressStreetAddress=", "A./dq9]3+6;[ZE~Grf", "nVF-x=W~'W-nxd&,", ", phoneNumber=", "", ", addressStreetAddress=", "nVF-x=W~'W-nxd&,", "jlO(7u2b3,(Sm&X-?-T");
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("A./dq9]3+6;[ZE~Grf", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("jlO(7u2b3,(Sm&X-?-T", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("nVF-x=W~'W-nxd&,", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals(", addressStreetAddress=", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("nVF-x=W~'W-nxd&,", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals(", phoneNumber=", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("nVF-x=W~'W-nxd&,", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(", addressStreetAddress=", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("A./dq9]3+6;[ZE~Grf", onboardingDetailsCreateQuery0.getFirstName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getEnterpriseNumber();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("A./dq9]3+6;[ZE~Grf", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("jlO(7u2b3,(Sm&X-?-T", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("nVF-x=W~'W-nxd&,", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals(", addressStreetAddress=", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("nVF-x=W~'W-nxd&,", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals(", phoneNumber=", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("nVF-x=W~'W-nxd&,", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(", addressStreetAddress=", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("A./dq9]3+6;[ZE~Grf", onboardingDetailsCreateQuery0.getFirstName());
      assertNotNull(string0);
      assertEquals("nVF-x=W~'W-nxd&,", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = new OnboardingDetailsCreateQuery("", map0, " UCpMv3`$<\u0004<9J=I", "@xPA,clONx8T)l", "", "", " UCpMv3`$<\u0004<9J=I", " +(]btq=q''@DLC", "E)@<m.1", "", "", "@xPA,clONx8T)l", "E)@<m.1");
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("@xPA,clONx8T)l", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("E)@<m.1", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("E)@<m.1", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals(" UCpMv3`$<\u0004<9J=I", onboardingDetailsCreateQuery1.getFirstName());
      assertEquals(" +(]btq=q''@DLC", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("@xPA,clONx8T)l", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals(" UCpMv3`$<\u0004<9J=I", onboardingDetailsCreateQuery1.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      String string0 = onboardingDetailsCreateQuery1.getEmail();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("@xPA,clONx8T)l", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("E)@<m.1", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("E)@<m.1", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals(" UCpMv3`$<\u0004<9J=I", onboardingDetailsCreateQuery1.getFirstName());
      assertEquals(" +(]btq=q''@DLC", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("@xPA,clONx8T)l", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals(" UCpMv3`$<\u0004<9J=I", onboardingDetailsCreateQuery1.getVatNumber());
      assertNotNull(string0);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertEquals("E)@<m.1", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.email("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      String string0 = onboardingDetailsCreateQuery0.getEmail();
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressStreetAddress("ZG@McMH]z#$lse-U#N");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("ZG@McMH]z#$lse-U#N", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressStreetAddress();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("ZG@McMH]z#$lse-U#N", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertEquals("ZG@McMH]z#$lse-U#N", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("YY^dadZV#\"", hashMap0, "", "", "{2d9", "", "Q{p2S`r*?2;\rJUf8Dk", "Q{p2S`r*?2;\rJUf8Dk", ".-]VW\r6rh'u1O#~|2", "", (String) null, "", "");
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("{2d9", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals(".-]VW\r6rh'u1O#~|2", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("YY^dadZV#\"", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressStreetAddress();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("{2d9", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals(".-]VW\r6rh'u1O#~|2", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("YY^dadZV#\"", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = new OnboardingDetailsCreateQuery("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", map0, "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "/", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", "/", "MRyS@v(:$jqr?", "", "(J-J7}'' xJqtCtn", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", "f/N^o4ye0");
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("/", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("MRyS@v(:$jqr?", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("f/N^o4ye0", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("(J-J7}'' xJqtCtn", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("/", onboardingDetailsCreateQuery1.getFirstName());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      String string0 = onboardingDetailsCreateQuery1.getAddressPostalCode();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("/", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("MRyS@v(:$jqr?", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("f/N^o4ye0", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("(J-J7}'' xJqtCtn", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("/", onboardingDetailsCreateQuery1.getFirstName());
      assertNotNull(string0);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressPostalCode("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressPostalCode();
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("", hashMap0, "GY8c8", ".+", "", (String) null, ".+", (String) null, "edpFTx4]7xhk", "", "", "LdzPZl;.U|~NL", ")");
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("LdzPZl;.U|~NL", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals(".+", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals(")", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("edpFTx4]7xhk", onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(".+", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("GY8c8", onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressCountry();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("LdzPZl;.U|~NL", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals(".+", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals(")", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("edpFTx4]7xhk", onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals(".+", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("GY8c8", onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(string0);
      assertEquals("LdzPZl;.U|~NL", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = new OnboardingDetailsCreateQuery((String) null, map0, "kZ", (String) null, (String) null, "kWzX}[xJ", "kZ", (String) null, "", "", (String) null, "kWzX}[xJ", "C>8Q<8L]rc");
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("C>8Q<8L]rc", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      String string0 = onboardingDetailsCreateQuery1.getAddressCity();
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("C>8Q<8L]rc", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("kWzX}[xJ", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("kZ", onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNotNull(string0);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertEquals("C>8Q<8L]rc", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCity("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressCity();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(map0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>(map0);
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = new OnboardingDetailsCreateQuery("", hashMap0, "", "", "", "", "", "", "", "", "", "", "PX}N[\"PY#)&Zd4H.");
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("PX}N[\"PY#)&Zd4H.", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      Map<String, String> map1 = onboardingDetailsCreateQuery1.getAdditionalHeaders();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("PX}N[\"PY#)&Zd4H.", onboardingDetailsCreateQuery1.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals(0, map1.size());
      assertTrue(map1.isEmpty());
      assertNotNull(map1);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertTrue(map1.equals((Object)map0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string0 = hashMap0.put("<>{5hu4if@/i]>f", "hPeknY y");
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(string0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("YY^dadZV#\"", hashMap0, "", "", "{2d9", "", "Q{p2S`r*?2;\rJUf8Dk", "Q{p2S`r*?2;\rJUf8Dk", ".-]VW\r6rh'u1O#~|2", "", (String) null, "", "");
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(".-]VW\r6rh'u1O#~|2", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("{2d9", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("YY^dadZV#\"", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getFirstName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(".-]VW\r6rh'u1O#~|2", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("{2d9", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("YY^dadZV#\"", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("Q{p2S`r*?2;\rJUf8Dk", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals(1, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.accessToken("cdWUNqk3fc!U");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("cdWUNqk3fc!U", onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      String string0 = onboardingDetailsCreateQuery0.getAccessToken();
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("cdWUNqk3fc!U", onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      assertEquals("cdWUNqk3fc!U", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.accessToken("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      String string0 = onboardingDetailsCreateQuery0.getAccessToken();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(string0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("", hashMap0, "", "", "7Rb)4Gg4v-%IZR!SWZ", "", "7Rb)4Gg4v-%IZR!SWZ", "", "7Rb)4Gg4v-%IZR!SWZ", "", "", "", "");
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("7Rb)4Gg4v-%IZR!SWZ", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("7Rb)4Gg4v-%IZR!SWZ", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("7Rb)4Gg4v-%IZR!SWZ", onboardingDetailsCreateQuery0.getFirstName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      boolean boolean0 = onboardingDetailsCreateQuery0.canEqual(onboardingDetailsCreateQuery0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("7Rb)4Gg4v-%IZR!SWZ", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("7Rb)4Gg4v-%IZR!SWZ", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("7Rb)4Gg4v-%IZR!SWZ", onboardingDetailsCreateQuery0.getFirstName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = onboardingDetailsCreateQuery0.canEqual(object0);
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressPostalCode();
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery(", firstName=", (Map<String, String>) null, "CpThc'M'6~`", "f<$CZa7:k", ", firstName=", "", "CpThc'M'6~`", "f<$CZa7:k", "?:8-C@I`'~w]h{F", "(b\"_#\"hcT5Lggy:z", "", (String) null, (String) null);
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("?:8-C@I`'~w]h{F", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("(b\"_#\"hcT5Lggy:z", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getOrganizationName();
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("?:8-C@I`'~w]h{F", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("(b\"_#\"hcT5Lggy:z", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("CpThc'M'6~`", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals(", firstName=", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("f<$CZa7:k", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNotNull(string0);
      assertEquals(", firstName=", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressCity();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressStreetAddress();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("", hashMap0, "", "", "", "", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "", "=", "", "", "", "D'-}o");
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("=", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("D'-}o", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getPhoneNumber();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("=", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("D'-}o", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("%^\u0000$", hashMap0, "", "%^\u0000$", "", "", "", "", (String) null, "", "", "", (String) null);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("%^\u0000$", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("%^\u0000$", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getEmail();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("%^\u0000$", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("%^\u0000$", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery((String) null, hashMap0, "gRG`2SD@tAg <*", "", (String) null, "", "gRG`2SD@tAg <*", "", "", "37=S{5 ~YV$%2euG", "", "", "");
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("gRG`2SD@tAg <*", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("gRG`2SD@tAg <*", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("37=S{5 ~YV$%2euG", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getAccessToken();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("gRG`2SD@tAg <*", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("gRG`2SD@tAg <*", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("37=S{5 ~YV$%2euG", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getAddressCountry();
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getVatNumber();
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getFirstName();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = new OnboardingDetailsCreateQuery("", hashMap0, "", "", "", "", "com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", "", "=", "", "", "", "D'-}o");
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("=", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("D'-}o", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getEnterpriseNumber();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", onboardingDetailsCreateQuery0.getLastName());
      assertEquals("com.ibanity.apis.client.products.ponto_connect.models.create.OnboardingDetailsCreateQuery$OnboardingDetailsCreateQueryBuilder", onboardingDetailsCreateQuery0.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery0.getOrganizationName());
      assertEquals("=", onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery0.getVatNumber());
      assertEquals("D'-}o", onboardingDetailsCreateQuery0.getAddressCity());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery0.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      String string0 = onboardingDetailsCreateQuery0.getLastName();
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCity("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertTrue(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertEquals("", onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertTrue(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertTrue(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCity("}");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("}", onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("}", onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCity("\"$6}#");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("\"$6}#", onboardingDetailsCreateQuery1.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("\"$6}#", onboardingDetailsCreateQuery1.getAddressCity());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCountry("xhUj}y@kp_~");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("xhUj}y@kp_~", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("xhUj}y@kp_~", onboardingDetailsCreateQuery1.getAddressCountry());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCountry("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCountry(", lastName=");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertEquals(", lastName=", onboardingDetailsCreateQuery1.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertTrue(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertEquals(", lastName=", onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertEquals(", lastName=", onboardingDetailsCreateQuery1.getAddressCountry());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertTrue(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertTrue(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressPostalCode("Kjpnbgk");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("Kjpnbgk", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNotNull(onboardingDetailsCreateQuery0);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("Kjpnbgk", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertTrue(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertEquals("Kjpnbgk", onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("Kjpnbgk", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertTrue(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertTrue(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNotNull(onboardingDetailsCreateQuery0);
      
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressPostalCode("");
      assertNotNull(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertNotNull(onboardingDetailsCreateQuery1);
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertNull(onboardingDetailsCreateQuery0.getAddressCountry());
      assertNull(onboardingDetailsCreateQuery0.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery0.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery0.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery0.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery0.getVatNumber());
      assertNull(onboardingDetailsCreateQuery0.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery0.getAccessToken());
      assertNull(onboardingDetailsCreateQuery0.getAddressCity());
      assertNull(onboardingDetailsCreateQuery0.getLastName());
      assertNull(onboardingDetailsCreateQuery0.getEmail());
      assertNull(onboardingDetailsCreateQuery0.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getLastName());
      assertNull(onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertNull(onboardingDetailsCreateQuery1.getPhoneNumber());
      assertNull(onboardingDetailsCreateQuery1.getOrganizationName());
      assertNull(onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertNull(onboardingDetailsCreateQuery1.getAddressCity());
      assertNull(onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertNull(onboardingDetailsCreateQuery1.getAccessToken());
      assertNull(onboardingDetailsCreateQuery1.getEmail());
      assertNull(onboardingDetailsCreateQuery1.getFirstName());
      assertNull(onboardingDetailsCreateQuery1.getAddressCountry());
      assertSame(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0, onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1);
      assertNotSame(onboardingDetailsCreateQuery0, onboardingDetailsCreateQuery1);
      assertNotSame(onboardingDetailsCreateQuery1, onboardingDetailsCreateQuery0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressPostalCode("OnboardingDetailsCreateQuery(accessToken=null, additionalHeaders={}, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=null, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressStreetAddress("%~b'9V7");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressStreetAddress("}");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.email("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.email(", lastName=");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.email("m4$8>,)");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.enterpriseNumber(", lastName=");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.enterpriseNumber("@t");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.enterpriseNumber("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.firstName("G+(Lc_;sN2q]gOh>");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.firstName(", addressCity=");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.firstName("[cy*.N-*fb!>VV Q2");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.lastName("9[");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.lastName("s-");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.organizationName(">");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.organizationName("_s");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.organizationName("%~b'9V7");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.phoneNumber("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.phoneNumber("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.vatNumber("APGzg'fM\"se~gk-F^7");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.vatNumber("zGCC\")!,816GCF");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.vatNumber("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder1.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
      assertFalse(onboardingDetailsCreateQuery0.equals((Object)onboardingDetailsCreateQuery1));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.accessToken("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.accessToken("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertFalse(onboardingDetailsCreateQuery1.equals((Object)onboardingDetailsCreateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      Map<String, String> map0 = onboardingDetailsCreateQuery0.getAdditionalHeaders();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = new OnboardingDetailsCreateQuery("", map0, " UCpMv3`$<\u0004<9J=I", "@xPA,clONx8T)l", "", "", " UCpMv3`$<\u0004<9J=I", " +(]btq=q''@DLC", "E)@<m.1", "", "", "@xPA,clONx8T)l", "E)@<m.1");
      onboardingDetailsCreateQuery1.hashCode();
      assertEquals(" +(]btq=q''@DLC", onboardingDetailsCreateQuery1.getEnterpriseNumber());
      assertEquals("@xPA,clONx8T)l", onboardingDetailsCreateQuery1.getPhoneNumber());
      assertEquals("", onboardingDetailsCreateQuery1.getLastName());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressStreetAddress());
      assertEquals("", onboardingDetailsCreateQuery1.getAccessToken());
      assertEquals(" UCpMv3`$<\u0004<9J=I", onboardingDetailsCreateQuery1.getVatNumber());
      assertEquals("@xPA,clONx8T)l", onboardingDetailsCreateQuery1.getAddressCountry());
      assertEquals("", onboardingDetailsCreateQuery1.getAddressPostalCode());
      assertEquals(" UCpMv3`$<\u0004<9J=I", onboardingDetailsCreateQuery1.getFirstName());
      assertEquals("", onboardingDetailsCreateQuery1.getOrganizationName());
      assertEquals("E)@<m.1", onboardingDetailsCreateQuery1.getEmail());
      assertEquals("E)@<m.1", onboardingDetailsCreateQuery1.getAddressCity());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      onboardingDetailsCreateQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.lastName("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressStreetAddress("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.addressCountry("");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      String string0 = onboardingDetailsCreateQuery0.getAddressCountry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery0.equals(onboardingDetailsCreateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      String string0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.toString();
      assertEquals("OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder(accessToken=null, additionalHeaders$value=null, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=null, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)", string0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = new OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.phoneNumber("):_");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.accessToken(", addressPostalCode=");
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery1 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      boolean boolean0 = onboardingDetailsCreateQuery1.equals(onboardingDetailsCreateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      OnboardingDetailsCreateQuery.OnboardingDetailsCreateQueryBuilder onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0 = OnboardingDetailsCreateQuery.builder();
      OnboardingDetailsCreateQuery onboardingDetailsCreateQuery0 = onboardingDetailsCreateQuery_OnboardingDetailsCreateQueryBuilder0.build();
      String string0 = onboardingDetailsCreateQuery0.toString();
      assertEquals("OnboardingDetailsCreateQuery(accessToken=null, additionalHeaders={}, vatNumber=null, phoneNumber=null, organizationName=null, lastName=null, firstName=null, enterpriseNumber=null, email=null, addressStreetAddress=null, addressPostalCode=null, addressCountry=null, addressCity=null)", string0);
  }
}
