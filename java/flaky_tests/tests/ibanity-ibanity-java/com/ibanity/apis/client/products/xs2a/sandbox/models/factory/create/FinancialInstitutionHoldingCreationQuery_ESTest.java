/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:40:58 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.sandbox.models.factory.create;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.sandbox.models.factory.create.FinancialInstitutionHoldingCreationQuery;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.time.chrono.MinguoDate;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialInstitutionHoldingCreationQuery_ESTest extends FinancialInstitutionHoldingCreationQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", (BigDecimal) null, (BigDecimal) null, "'SuBD7db(p", "", (BigDecimal) null, localDate0);
      String string0 = financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency();
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("'SuBD7db(p", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Period period0 = Period.ofWeeks(1);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", ", financialInstitutionUserId=", "", "", (BigDecimal) null, (BigDecimal) null, "", ", financialInstitutionUserId=", (BigDecimal) null, localDate0);
      String string0 = financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency();
      assertEquals(", financialInstitutionUserId=", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals(", financialInstitutionUserId=", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      BigDecimal bigDecimal0 = new BigDecimal((-980L));
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal1 = financialInstitutionHoldingCreationQuery0.getTotalValuation();
      assertEquals((byte)44, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1.build();
      BigDecimal bigDecimal1 = financialInstitutionHoldingCreationQuery0.getTotalValuation();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal1 = financialInstitutionHoldingCreationQuery0.getTotalValuation();
      assertEquals((byte)1, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      BigDecimal bigDecimal0 = new BigDecimal(2020L);
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1.build();
      BigDecimal bigDecimal1 = financialInstitutionHoldingCreationQuery0.getTotalValuation();
      assertEquals((short)2020, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.subtype("n");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getSubtype();
      assertEquals("n", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.subtype("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getSubtype();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.referenceType("4=?_qyVwd3eC~4^&W]");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getReferenceType();
      assertEquals("4=?_qyVwd3eC~4^&W]", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Period period0 = Period.ofWeeks(1);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", ", financialInstitutionUserId=", "", "", (BigDecimal) null, (BigDecimal) null, "", ", financialInstitutionUserId=", (BigDecimal) null, localDate0);
      String string0 = financialInstitutionHoldingCreationQuery0.getReferenceType();
      assertEquals("", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals(", financialInstitutionUserId=", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals(", financialInstitutionUserId=", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal((-2513L));
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", ", subtype=", "", "", bigDecimal0, bigDecimal0, "$1", "", bigDecimal0, localDate0);
      String string0 = financialInstitutionHoldingCreationQuery0.getReference();
      assertEquals("$1", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals(", subtype=", string0);
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", "U", "", "z-_boXs`rP4", bigDecimal0, bigDecimal0, "", "U", bigDecimal0, (LocalDate) null);
      financialInstitutionHoldingCreationQuery0.getQuantity();
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("U", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("z-_boXs`rP4", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("U", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(1.0);
      MinguoDate minguoDate0 = MockMinguoDate.now();
      LocalDate localDate0 = MockLocalDate.from(minguoDate0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery((UUID) null, (UUID) null, (UUID) null, "", "uxTmO5", "}@E[V\"i5F4&9;u}f,+", "", bigDecimal0, bigDecimal0, "wT", "z:", bigDecimal0, localDate0);
      financialInstitutionHoldingCreationQuery0.getQuantity();
      assertEquals("}@E[V\"i5F4&9;u}f,+", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("wT", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("z:", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("uxTmO5", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BigDecimal bigDecimal0 = new BigDecimal((-1913.498));
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(43);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, (String) null, (String) null, ":R", (String) null, bigDecimal0, bigDecimal0, "", ", name=", bigDecimal0, localDate0);
      financialInstitutionHoldingCreationQuery0.getQuantity();
      assertEquals(":R", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals(", name=", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", (BigDecimal) null, (BigDecimal) null, "'SuBD7db(p", "", (BigDecimal) null, localDate0);
      String string0 = financialInstitutionHoldingCreationQuery0.getName();
      assertEquals("'SuBD7db(p", string0);
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal((-2513L));
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", ", subtype=", "", "", bigDecimal0, bigDecimal0, "$1", "", bigDecimal0, localDate0);
      String string0 = financialInstitutionHoldingCreationQuery0.getName();
      assertEquals("$1", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("", string0);
      assertEquals("", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals(", subtype=", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      LocalDate localDate0 = financialInstitutionHoldingCreationQuery0.getLastValuationDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getLastValuationCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuationCurrency("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getLastValuationCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = financialInstitutionHoldingCreationQuery0.getLastValuation();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      BigDecimal bigDecimal0 = new BigDecimal((-413));
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal1 = financialInstitutionHoldingCreationQuery0.getLastValuation();
      assertEquals((short) (-413), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2020L);
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      UUID uUID0 = MockUUID.fromString((String) null);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", "}(G6", "tEA`]q=4Q!", "}(G6", bigDecimal0, bigDecimal1, (String) null, "h=?_qyVwd3eC~4^&1]", bigDecimal1, (LocalDate) null);
      BigDecimal bigDecimal2 = financialInstitutionHoldingCreationQuery0.getLastValuation();
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("}(G6", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("}(G6", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("h=?_qyVwd3eC~4^&1]", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("tEA`]q=4Q!", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals((short)0, bigDecimal2.shortValue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      BigDecimal bigDecimal0 = new BigDecimal(2020L);
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal1 = financialInstitutionHoldingCreationQuery0.getLastValuation();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Random.setNextRandom((-1764));
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Period period0 = Period.ofYears((-1764));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "@X", "/5wX8", "/5wX8", "Q%W", bigDecimal0, bigDecimal0, "/5wX8", "/5wX8", bigDecimal0, localDate0);
      financialInstitutionHoldingCreationQuery0.getFinancialInstitutionUserId();
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("@X", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("Q%W", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Period period0 = Period.ofYears((-1764));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "@X", "/5wX8", "/5wX8", "Q%W", bigDecimal0, bigDecimal0, "/5wX8", "/5wX8", bigDecimal0, localDate0);
      financialInstitutionHoldingCreationQuery0.getFinancialInstitutionUserId();
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("Q%W", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("@X", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("/5wX8", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Random.setNextRandom(1786);
      UUID uUID0 = MockUUID.fromString("xuNi");
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      LocalDate localDate0 = MockLocalDate.ofEpochDay(675L);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "xuNi", "xuNi", "xuNi", "xuNi", bigDecimal0, bigDecimal0, "xuNi", "xuNi", bigDecimal0, localDate0);
      UUID uUID1 = financialInstitutionHoldingCreationQuery0.getFinancialInstitutionId();
      assertSame(uUID0, uUID1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("xuNi");
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      LocalDate localDate0 = MockLocalDate.ofEpochDay(675L);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "xuNi", "xuNi", "xuNi", "xuNi", bigDecimal0, bigDecimal0, "xuNi", "xuNi", bigDecimal0, localDate0);
      UUID uUID1 = financialInstitutionHoldingCreationQuery0.getFinancialInstitutionId();
      assertSame(uUID0, uUID1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Random.setNextRandom(172);
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.valueOf(1L, 172);
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "5Ih\"6", "v", "", "v", bigDecimal0, bigDecimal0, "5Ih\"6", "5Ih\"6", bigDecimal0, localDate0);
      financialInstitutionHoldingCreationQuery0.getFinancialInstitutionAccountId();
      assertEquals("v", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("5Ih\"6", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("5Ih\"6", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("5Ih\"6", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("v", financialInstitutionHoldingCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.valueOf(1L, 172);
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "5Ih\"6", "v", "", "v", bigDecimal0, bigDecimal0, "5Ih\"6", "5Ih\"6", bigDecimal0, localDate0);
      financialInstitutionHoldingCreationQuery0.getFinancialInstitutionAccountId();
      assertEquals("5Ih\"6", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("5Ih\"6", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("v", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("v", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("5Ih\"6", financialInstitutionHoldingCreationQuery0.getName());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.canEqual(financialInstitutionHoldingCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.canEqual(bigDecimal0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, (String) null, (String) null, (String) null, "", bigDecimal0, bigDecimal0, "C(~C", "W)YU8./Wr;4oTZ", bigDecimal0, (LocalDate) null);
      String string0 = financialInstitutionHoldingCreationQuery0.getReferenceType();
      assertNull(string0);
      assertEquals("W)YU8./Wr;4oTZ", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("C(~C", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = financialInstitutionHoldingCreationQuery0.getFinancialInstitutionAccountId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = financialInstitutionHoldingCreationQuery0.getFinancialInstitutionUserId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", "U", "", "z-_boXs`rP4", bigDecimal0, bigDecimal0, "", "U", bigDecimal0, (LocalDate) null);
      String string0 = financialInstitutionHoldingCreationQuery0.getLastValuationCurrency();
      assertEquals("z-_boXs`rP4", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("U", string0);
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("U", financialInstitutionHoldingCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", (BigDecimal) null, (BigDecimal) null, "'SuBD7db(p", "", (BigDecimal) null, localDate0);
      financialInstitutionHoldingCreationQuery0.getLastValuationDate();
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "z-_boXs`rP4", "", "z-_boXs`rP4", "z-_boXs`rP4", bigDecimal0, bigDecimal0, "U", (String) null, bigDecimal0, (LocalDate) null);
      String string0 = financialInstitutionHoldingCreationQuery0.getReference();
      assertEquals("", string0);
      assertEquals("z-_boXs`rP4", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("U", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("z-_boXs`rP4", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("z-_boXs`rP4", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = financialInstitutionHoldingCreationQuery0.getTotalValuation();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Period period0 = Period.ofWeeks(1);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", ", financialInstitutionUserId=", "", "", (BigDecimal) null, (BigDecimal) null, "", ", financialInstitutionUserId=", (BigDecimal) null, localDate0);
      financialInstitutionHoldingCreationQuery0.getQuantity();
      assertEquals("", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals(", financialInstitutionUserId=", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals(", financialInstitutionUserId=", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = financialInstitutionHoldingCreationQuery0.getFinancialInstitutionId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.getSubtype();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      LocalDate localDate0 = MockLocalDate.now();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuationDate(localDate0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(43);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuationDate(localDate0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      LocalDate localDate0 = MockLocalDate.now();
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuationDate(localDate0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuationCurrency("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuationCurrency("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuationCurrency(")b^7M");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuationCurrency("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.quantity(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.quantity(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.subtype("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.subtype("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.referenceType("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.referenceType("Z%X9bOP(S");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.reference("(8fE");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.reference("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.reference("6d*M");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.name("A>#~=pA");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.name(")Sy");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
      assertFalse(financialInstitutionHoldingCreationQuery1.equals((Object)financialInstitutionHoldingCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.name("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(financialInstitutionHoldingCreationQuery1.equals((Object)financialInstitutionHoldingCreationQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionUserId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionUserId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(financialInstitutionHoldingCreationQuery1.equals((Object)financialInstitutionHoldingCreationQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionUserId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertFalse(boolean0);
      assertFalse(financialInstitutionHoldingCreationQuery1.equals((Object)financialInstitutionHoldingCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "", "U", "", "z-_boXs`rP4", bigDecimal0, bigDecimal0, "", "U", bigDecimal0, (LocalDate) null);
      financialInstitutionHoldingCreationQuery0.hashCode();
      assertEquals("", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("U", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("z-_boXs`rP4", financialInstitutionHoldingCreationQuery0.getSubtype());
      assertEquals("U", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getName());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = new FinancialInstitutionHoldingCreationQuery(uUID0, uUID0, uUID0, "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", "'SuBD7db(p", (BigDecimal) null, (BigDecimal) null, "'SuBD7db(p", "", (BigDecimal) null, localDate0);
      financialInstitutionHoldingCreationQuery0.hashCode();
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReference());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getReferenceType());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getTotalValuationCurrency());
      assertEquals("", financialInstitutionHoldingCreationQuery0.getLastValuationCurrency());
      assertEquals("'SuBD7db(p", financialInstitutionHoldingCreationQuery0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1.build();
      financialInstitutionHoldingCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.subtype(" yI2P1VG*f'L!i#z");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuationCurrency("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.lastValuation(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.totalValuationCurrency(", totalValuationCurrency=");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      String string0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.toString();
      assertEquals("FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder(financialInstitutionId=null, financialInstitutionUserId=null, financialInstitutionAccountId=null, name=null, reference=null, referenceType=null, subtype=null, quantity=null, totalValuation=null, totalValuationCurrency=null, lastValuationCurrency=null, lastValuation=null, lastValuationDate=null)", string0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.quantity(bigDecimal0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery1.equals(financialInstitutionHoldingCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.referenceType("");
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder1.build();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery1 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionHoldingCreationQuery0.equals(financialInstitutionHoldingCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = FinancialInstitutionHoldingCreationQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.financialInstitutionUserId(uUID0);
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      financialInstitutionHoldingCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0 = new FinancialInstitutionHoldingCreationQuery.FinancialInstitutionHoldingCreationQueryBuilder();
      FinancialInstitutionHoldingCreationQuery financialInstitutionHoldingCreationQuery0 = financialInstitutionHoldingCreationQuery_FinancialInstitutionHoldingCreationQueryBuilder0.build();
      String string0 = financialInstitutionHoldingCreationQuery0.toString();
      assertEquals("FinancialInstitutionHoldingCreationQuery(financialInstitutionId=null, financialInstitutionUserId=null, financialInstitutionAccountId=null, name=null, reference=null, referenceType=null, subtype=null, quantity=null, totalValuation=null, totalValuationCurrency=null, lastValuationCurrency=null, lastValuation=null, lastValuationDate=null)", string0);
  }
}
