/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:38:23 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.links;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.links.AccountLinks;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccountLinks_ESTest extends AccountLinks_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      accountLinks_AccountLinksBuilder0.related("AccountLinks.AccountLinksBuilder(related=null)");
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      String string0 = accountLinks0.getRelated();
      assertEquals("AccountLinks.AccountLinksBuilder(related=null)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = new AccountLinks.AccountLinksBuilder();
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder1 = accountLinks_AccountLinksBuilder0.related("");
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder1.build();
      String string0 = accountLinks0.getRelated();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      boolean boolean0 = accountLinks0.canEqual(accountLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = new AccountLinks.AccountLinksBuilder();
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = accountLinks0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = new AccountLinks.AccountLinksBuilder();
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      String string0 = accountLinks0.getRelated();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder1 = accountLinks_AccountLinksBuilder0.related("AccountLinks.AccountLinksBuilder(related=null)");
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      AccountLinks accountLinks1 = accountLinks_AccountLinksBuilder1.build();
      boolean boolean0 = accountLinks0.equals(accountLinks1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccountLinks accountLinks0 = new AccountLinks();
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder1 = accountLinks_AccountLinksBuilder0.related("");
      AccountLinks accountLinks1 = accountLinks_AccountLinksBuilder1.build();
      boolean boolean0 = accountLinks0.equals(accountLinks1);
      assertFalse(boolean0);
      assertFalse(accountLinks1.equals((Object)accountLinks0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder1 = accountLinks_AccountLinksBuilder0.related("");
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder1.build();
      AccountLinks accountLinks1 = new AccountLinks();
      boolean boolean0 = accountLinks0.equals(accountLinks1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = new AccountLinks.AccountLinksBuilder();
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      boolean boolean0 = accountLinks0.equals("AccountLinks.AccountLinksBuilder(related=)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = new AccountLinks.AccountLinksBuilder();
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      boolean boolean0 = accountLinks0.equals(accountLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = new AccountLinks.AccountLinksBuilder();
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      accountLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      accountLinks_AccountLinksBuilder0.related("");
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      accountLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      String string0 = accountLinks_AccountLinksBuilder0.toString();
      assertEquals("AccountLinks.AccountLinksBuilder(related=null)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      AccountLinks accountLinks0 = accountLinks_AccountLinksBuilder0.build();
      String string0 = accountLinks0.toString();
      assertEquals("AccountLinks(related=null)", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccountLinks accountLinks0 = new AccountLinks();
      AccountLinks.AccountLinksBuilder accountLinks_AccountLinksBuilder0 = AccountLinks.builder();
      AccountLinks accountLinks1 = accountLinks_AccountLinksBuilder0.build();
      boolean boolean0 = accountLinks0.equals(accountLinks1);
      assertTrue(boolean0);
  }
}
