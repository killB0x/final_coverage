/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:55:22 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.models.FinancialInstitution;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialInstitution_ESTest extends FinancialInstitution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      financialInstitution_FinancialInstitutionBuilder0.deprecated(true);
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      boolean boolean0 = financialInstitution0.isDeprecated();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.status("7pk$i/E_");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getStatus();
      assertEquals("7pk$i/E_", string0);
      assertNotNull(string0);
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setStatus("");
      String string0 = financialInstitution0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      financialInstitution_FinancialInstitutionBuilder0.selfLink("FinancialInstitution.FinancialInstitutionBuilder(id=null, selfLink=null, requestId=null, bic=null, name=null, logoUrl=, primaryColor=null, secondaryColor=null, country=null, status=null, deprecated=false)");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getSelfLink();
      assertNotNull(string0);
      assertFalse(financialInstitution0.isDeprecated());
      assertEquals("FinancialInstitution.FinancialInstitutionBuilder(id=null, selfLink=null, requestId=null, bic=null, name=null, logoUrl=, primaryColor=null, secondaryColor=null, country=null, status=null, deprecated=false)", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setSelfLink("");
      String string0 = financialInstitution0.getSelfLink();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setSecondaryColor("<9x<KyvN9H/~3([");
      String string0 = financialInstitution0.getSecondaryColor();
      assertEquals("<9x<KyvN9H/~3([", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.secondaryColor("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getSecondaryColor();
      assertFalse(financialInstitution0.isDeprecated());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.requestId("|CYTj'B");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getRequestId();
      assertNotNull(string0);
      assertEquals("|CYTj'B", string0);
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      financialInstitution_FinancialInstitutionBuilder0.requestId("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getRequestId();
      assertFalse(financialInstitution0.isDeprecated());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.primaryColor("|CYTj'B");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getPrimaryColor();
      assertFalse(financialInstitution0.isDeprecated());
      assertNotNull(string0);
      assertEquals("|CYTj'B", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setPrimaryColor("");
      String string0 = financialInstitution0.getPrimaryColor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.name("tyd&g;%5XvM@*zDJB");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      String string0 = financialInstitution0.getName();
      assertNotNull(string0);
      assertEquals("tyd&g;%5XvM@*zDJB", string0);
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setName("");
      String string0 = financialInstitution0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setLogoUrl("O");
      String string0 = financialInstitution0.getLogoUrl();
      assertEquals("O", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.logoUrl("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      String string0 = financialInstitution0.getLogoUrl();
      assertFalse(financialInstitution0.isDeprecated());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Random.setNextRandom(235);
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitution0.setId(uUID0);
      UUID uUID1 = financialInstitution0.getId();
      assertEquals("eb000000-ec00-4000-ad00-0000ee000000", uUID1.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitution0.setId(uUID0);
      UUID uUID1 = financialInstitution0.getId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setCountry("Id");
      String string0 = financialInstitution0.getCountry();
      assertEquals("Id", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.country("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      String string0 = financialInstitution0.getCountry();
      assertFalse(financialInstitution0.isDeprecated());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setBic("{financialInstitutionId}");
      String string0 = financialInstitution0.getBic();
      assertEquals("{financialInstitutionId}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setBic("");
      String string0 = financialInstitution0.getBic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.canEqual(financialInstitution0);
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      Object object0 = new Object();
      financialInstitution0.canEqual(object0);
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      String string0 = financialInstitution0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      String string0 = financialInstitution0.getBic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getCountry();
      assertNull(string0);
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getRequestId();
      assertFalse(financialInstitution0.isDeprecated());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      boolean boolean0 = financialInstitution0.isDeprecated();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      String string0 = financialInstitution0.getSecondaryColor();
      assertFalse(financialInstitution0.isDeprecated());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      String string0 = financialInstitution0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      String string0 = financialInstitution0.getSelfLink();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      String string0 = financialInstitution0.getPrimaryColor();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      UUID uUID0 = financialInstitution0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      String string0 = financialInstitution0.getLogoUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setStatus("{financialInstitutionId}");
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setStatus("financialInstitution");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setCountry("");
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setCountry("");
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setCountry("financialInstitution");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setCountry("financialInstitution");
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setSecondaryColor("{financialInstitutionId}");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      financialInstitution_FinancialInstitutionBuilder0.secondaryColor("financialInstitution");
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder0.build();
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setPrimaryColor("{financialInstitutionId}");
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      financialInstitution0.setLogoUrl("{financialInstitutionId}");
      assertFalse(financialInstitution0.equals((Object)financialInstitution1));
      
      financialInstitution1.setLogoUrl("{financialInstitutionId}");
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertTrue(financialInstitution0.equals((Object)financialInstitution1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setLogoUrl("financialInstitution");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setLogoUrl("{financialInstitutionId}");
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setName("vRYJXYvPK");
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setName("vRYJXYvPK");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setName("financialInstitution");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setName("vRYJXYvPK");
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertEquals("vRYJXYvPK", financialInstitution0.getName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setBic("{financialInstitutionId}");
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setBic("{financialInstitutionId}");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setBic("financialInstitution");
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(boolean0);
      assertFalse(financialInstitution0.equals((Object)financialInstitution1));
      assertEquals("financialInstitution", financialInstitution0.getBic());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setRequestId("financialInstitution");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.requestId("{financialInstitutionId}");
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder1.build();
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(boolean0);
      assertEquals("{financialInstitutionId}", financialInstitution1.getRequestId());
      assertFalse(financialInstitution1.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setSelfLink("{financialInstitutionId}");
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      financialInstitution1.setSelfLink("financialInstitution");
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      UUID uUID0 = MockUUID.fromString("{financialInstitutionId}");
      financialInstitution1.setId(uUID0);
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      assertTrue(financialInstitution1.equals((Object)financialInstitution0));
      
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitution1.setId(uUID0);
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(financialInstitution1.equals((Object)financialInstitution0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      boolean boolean0 = financialInstitution0.equals(financialInstitution_FinancialInstitutionBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      boolean boolean0 = financialInstitution0.equals(financialInstitution0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.setStatus(", secondaryColor=");
      financialInstitution0.hashCode();
      assertEquals(", secondaryColor=", financialInstitution0.getStatus());
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.country("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.hashCode();
      assertEquals("", financialInstitution0.getCountry());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.secondaryColor(", secondaryColor=");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.hashCode();
      assertFalse(financialInstitution0.isDeprecated());
      assertEquals(", secondaryColor=", financialInstitution0.getSecondaryColor());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.setPrimaryColor("");
      financialInstitution0.hashCode();
      assertEquals("", financialInstitution0.getPrimaryColor());
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.logoUrl("FinancialInstitution.FinancialInstitutionBuilder(id=00000000-0100-4000-8200-000003000000, selfLink=null, requestId=null, bic=null, name=null, logoUrl=null, primaryColor=null, secondaryColor=, secondaryColor=, country=null, status=null, deprecated=false)");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.hashCode();
      assertEquals("FinancialInstitution.FinancialInstitutionBuilder(id=00000000-0100-4000-8200-000003000000, selfLink=null, requestId=null, bic=null, name=null, logoUrl=null, primaryColor=null, secondaryColor=, secondaryColor=, country=null, status=null, deprecated=false)", financialInstitution0.getLogoUrl());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.name("Id");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.hashCode();
      assertEquals("Id", financialInstitution0.getName());
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.bic(", secondaryColor=");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.hashCode();
      assertEquals(", secondaryColor=", financialInstitution0.getBic());
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.requestId("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.hashCode();
      assertEquals("", financialInstitution0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      financialInstitution_FinancialInstitutionBuilder0.selfLink("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.hashCode();
      assertFalse(financialInstitution0.isDeprecated());
      assertEquals("", financialInstitution0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.id(uUID0);
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      financialInstitution0.hashCode();
      assertFalse(financialInstitution0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      financialInstitution0.setDeprecated(true);
      financialInstitution0.hashCode();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.selfLink("tMQ{-l6,7*2");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder0.build();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertEquals("tMQ{-l6,7*2", financialInstitution1.getSelfLink());
      assertFalse(financialInstitution1.isDeprecated());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.status("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder1.build();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertTrue(boolean0);
      assertEquals("", financialInstitution1.getStatus());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.secondaryColor("financialInstitution");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder0.build();
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder1.build();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertTrue(boolean0);
      assertEquals("financialInstitution", financialInstitution1.getSecondaryColor());
      assertFalse(financialInstitution1.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.requestId("{financialInstitutionId}");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder1.build();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertTrue(boolean0);
      assertFalse(financialInstitution1.isDeprecated());
      assertEquals("{financialInstitutionId}", financialInstitution1.getRequestId());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.primaryColor("");
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder1.build();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(financialInstitution1.isDeprecated());
      assertEquals("", financialInstitution1.getPrimaryColor());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = FinancialInstitution.builder();
      String string0 = financialInstitution_FinancialInstitutionBuilder0.toString();
      assertEquals("FinancialInstitution.FinancialInstitutionBuilder(id=null, selfLink=null, requestId=null, bic=null, name=null, logoUrl=null, primaryColor=null, secondaryColor=null, country=null, status=null, deprecated=false)", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder0 = new FinancialInstitution.FinancialInstitutionBuilder();
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitution.FinancialInstitutionBuilder financialInstitution_FinancialInstitutionBuilder1 = financialInstitution_FinancialInstitutionBuilder0.id(uUID0);
      FinancialInstitution financialInstitution0 = financialInstitution_FinancialInstitutionBuilder1.build();
      FinancialInstitution financialInstitution1 = financialInstitution_FinancialInstitutionBuilder1.build();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertFalse(financialInstitution1.isDeprecated());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setDeprecated(true);
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertTrue(financialInstitution0.isDeprecated());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setPrimaryColor("{financialInstitutionId}");
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      boolean boolean0 = financialInstitution1.equals(financialInstitution0);
      assertEquals("{financialInstitutionId}", financialInstitution0.getPrimaryColor());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      String string0 = financialInstitution0.toString();
      assertEquals("FinancialInstitution(id=null, selfLink=null, requestId=null, bic=null, name=null, logoUrl=null, primaryColor=null, secondaryColor=null, country=null, status=null, deprecated=false)", string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FinancialInstitution financialInstitution0 = new FinancialInstitution();
      financialInstitution0.setBic("{financialInstitutionId}");
      FinancialInstitution financialInstitution1 = new FinancialInstitution();
      boolean boolean0 = financialInstitution0.equals(financialInstitution1);
      assertEquals("{financialInstitutionId}", financialInstitution0.getBic());
      assertFalse(boolean0);
  }
}
