/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:04:02 GMT 2022
 */

package com.ibanity.apis.client.jsonapi;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.jsonapi.IbanityErrorApiModel;
import com.ibanity.apis.client.jsonapi.SynchronizationApiModel;
import java.time.Clock;
import java.time.Instant;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SynchronizationApiModel_ESTest extends SynchronizationApiModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      Instant instant0 = MockInstant.now();
      synchronizationApiModel0.setUpdatedAt(instant0);
      Instant instant1 = synchronizationApiModel0.getUpdatedAt();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.subtype("|K59I(PNQ1Q+6OFa");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      String string0 = synchronizationApiModel0.getSubtype();
      assertEquals("|K59I(PNQ1Q+6OFa", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.setSubtype("");
      String string0 = synchronizationApiModel0.getSubtype();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.setStatus("\tM`@J%YI.`vh");
      String string0 = synchronizationApiModel0.getStatus();
      assertEquals("\tM`@J%YI.`vh", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      synchronizationApiModel0.setStatus("");
      String string0 = synchronizationApiModel0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.resourceType("Uy");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      String string0 = synchronizationApiModel0.getResourceType();
      assertEquals("Uy", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.resourceType("");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      String string0 = synchronizationApiModel0.getResourceType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.setResourceId("2ZwF(kF`=6D=CqHhk9");
      String string0 = synchronizationApiModel0.getResourceId();
      assertEquals("2ZwF(kF`=6D=CqHhk9", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.resourceId("");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      String string0 = synchronizationApiModel0.getResourceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      LinkedList<IbanityErrorApiModel> linkedList0 = new LinkedList<IbanityErrorApiModel>();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.errors(linkedList0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      List<IbanityErrorApiModel> list0 = synchronizationApiModel0.getErrors();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      LinkedList<IbanityErrorApiModel> linkedList0 = new LinkedList<IbanityErrorApiModel>();
      IbanityErrorApiModel ibanityErrorApiModel0 = new IbanityErrorApiModel();
      linkedList0.add(ibanityErrorApiModel0);
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.errors(linkedList0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      List<IbanityErrorApiModel> list0 = synchronizationApiModel0.getErrors();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      Boolean boolean0 = Boolean.valueOf("");
      synchronizationApiModel_SynchronizationApiModelBuilder0.customerOnline(boolean0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      Boolean boolean1 = synchronizationApiModel0.getCustomerOnline();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.customerIpAddress("O{ ]*|j2c-i");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      String string0 = synchronizationApiModel0.getCustomerIpAddress();
      assertEquals("O{ ]*|j2c-i", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      synchronizationApiModel0.setCustomerIpAddress("");
      String string0 = synchronizationApiModel0.getCustomerIpAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      Clock clock0 = MockClock.systemUTC();
      Instant instant0 = MockInstant.now(clock0);
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.createdAt(instant0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      Instant instant1 = synchronizationApiModel0.getCreatedAt();
      assertSame(instant0, instant1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel0.canEqual(synchronizationApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel0.canEqual("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      String string0 = synchronizationApiModel0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      String string0 = synchronizationApiModel0.getResourceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      Boolean boolean0 = synchronizationApiModel0.getCustomerOnline();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      Instant instant0 = synchronizationApiModel0.getCreatedAt();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      String string0 = synchronizationApiModel0.getResourceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      String string0 = synchronizationApiModel0.getCustomerIpAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      String string0 = synchronizationApiModel0.getSubtype();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      Instant instant0 = synchronizationApiModel0.getUpdatedAt();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      List<IbanityErrorApiModel> list0 = synchronizationApiModel0.getErrors();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      LinkedList<IbanityErrorApiModel> linkedList0 = new LinkedList<IbanityErrorApiModel>();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.errors(linkedList0);
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      LinkedList<IbanityErrorApiModel> linkedList0 = new LinkedList<IbanityErrorApiModel>();
      synchronizationApiModel_SynchronizationApiModelBuilder0.errors(linkedList0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      Instant instant0 = MockInstant.now();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.updatedAt(instant0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      assertTrue(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      
      synchronizationApiModel1.setUpdatedAt((Instant) null);
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      Instant instant0 = MockInstant.now();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.updatedAt(instant0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.subtype("2ZwF(kF`=6D=CqHhk9");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel_SynchronizationApiModelBuilder0.subtype("2ZwF(kF`=6D=CqHhk9");
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      synchronizationApiModel0.setStatus("");
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.setStatus("2ZwF(kF`=6D=CqHhk9");
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.status("q92~R?Cb,");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      assertTrue(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      
      synchronizationApiModel1.setCustomerIpAddress("");
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.customerIpAddress("q92~R?Cb,");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.resourceType("");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      assertTrue(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      
      synchronizationApiModel1.setResourceType("2ZwF(kF`=6D=CqHhk9");
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel_SynchronizationApiModelBuilder0.resourceType("");
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      assertTrue(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      
      synchronizationApiModel1.setResourceId("wym*^ra/EN");
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.resourceId("q92~R?Cb,");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      assertTrue(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      
      Instant instant0 = MockInstant.now();
      synchronizationApiModel1.setCreatedAt(instant0);
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      Instant instant0 = MockInstant.now();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.createdAt(instant0);
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
      assertFalse(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      Instant instant0 = MockInstant.now();
      synchronizationApiModel_SynchronizationApiModelBuilder0.createdAt(instant0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      SynchronizationApiModel synchronizationApiModel1 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      Boolean boolean0 = Boolean.FALSE;
      synchronizationApiModel0.setCustomerOnline(boolean0);
      assertFalse(synchronizationApiModel0.equals((Object)synchronizationApiModel1));
      
      synchronizationApiModel1.setCustomerOnline(boolean0);
      boolean boolean1 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertTrue(synchronizationApiModel0.equals((Object)synchronizationApiModel1));
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      Boolean boolean0 = Boolean.TRUE;
      synchronizationApiModel0.setCustomerOnline(boolean0);
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean1 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      assertTrue(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      
      Boolean boolean0 = Boolean.FALSE;
      synchronizationApiModel1.setCustomerOnline(boolean0);
      boolean boolean1 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(synchronizationApiModel1.equals((Object)synchronizationApiModel0));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      Instant instant0 = MockInstant.ofEpochSecond(128L, 128L);
      boolean boolean0 = synchronizationApiModel0.equals(instant0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      LinkedList<IbanityErrorApiModel> linkedList0 = new LinkedList<IbanityErrorApiModel>();
      synchronizationApiModel0.setErrors(linkedList0);
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.customerIpAddress("q92~R?Cb,");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.resourceType("s#D\"V*}p,nsEo&21Jx ");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.resourceId("q92~R?Cb,");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      Instant instant0 = MockInstant.now();
      synchronizationApiModel_SynchronizationApiModelBuilder0.createdAt(instant0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      Boolean boolean0 = Boolean.valueOf("2ZwF(kF`=6D=CqHhk9");
      synchronizationApiModel0.setCustomerOnline(boolean0);
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      Boolean boolean0 = Boolean.TRUE;
      synchronizationApiModel_SynchronizationApiModelBuilder0.customerOnline(boolean0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      Boolean boolean1 = synchronizationApiModel0.getCustomerOnline();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      Instant instant0 = MockInstant.now();
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder1 = synchronizationApiModel_SynchronizationApiModelBuilder0.updatedAt(instant0);
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder1.build();
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      String string0 = synchronizationApiModel_SynchronizationApiModelBuilder0.toString();
      assertEquals("SynchronizationApiModel.SynchronizationApiModelBuilder(createdAt=null, resourceId=null, resourceType=null, customerOnline=null, customerIpAddress=null, status=null, subtype=null, updatedAt=null, errors=null)", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = new SynchronizationApiModel.SynchronizationApiModelBuilder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.subtype("2ZwF(kF`=6D=CqHhk9");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      synchronizationApiModel_SynchronizationApiModelBuilder0.status("q92~R?Cb,");
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      synchronizationApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      LinkedList<IbanityErrorApiModel> linkedList0 = new LinkedList<IbanityErrorApiModel>();
      synchronizationApiModel0.setErrors(linkedList0);
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      synchronizationApiModel0.setResourceId("Jw;>ozcvsRGG!");
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SynchronizationApiModel.SynchronizationApiModelBuilder synchronizationApiModel_SynchronizationApiModelBuilder0 = SynchronizationApiModel.builder();
      SynchronizationApiModel synchronizationApiModel0 = synchronizationApiModel_SynchronizationApiModelBuilder0.build();
      String string0 = synchronizationApiModel0.toString();
      assertEquals("SynchronizationApiModel(createdAt=null, resourceId=null, resourceType=null, customerOnline=null, customerIpAddress=null, status=null, subtype=null, updatedAt=null, errors=null)", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      synchronizationApiModel0.setCustomerIpAddress(", resourceType=");
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      Instant instant0 = MockInstant.now();
      synchronizationApiModel0.setUpdatedAt(instant0);
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel0.equals(synchronizationApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SynchronizationApiModel synchronizationApiModel0 = new SynchronizationApiModel();
      synchronizationApiModel0.setSubtype("");
      SynchronizationApiModel synchronizationApiModel1 = new SynchronizationApiModel();
      boolean boolean0 = synchronizationApiModel1.equals(synchronizationApiModel0);
      assertFalse(boolean0);
  }
}
